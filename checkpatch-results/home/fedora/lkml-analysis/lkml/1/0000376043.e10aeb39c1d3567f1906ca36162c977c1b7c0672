WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Style and other non-functional changes in the UML networking code, including

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sun"
#104: FILE: arch/um/drivers/daemon_user.c:40:
+	if (sun == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: arch/um/drivers/daemon_user.c:41:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_un "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'new_addr', this function's name, in a string
#105: FILE: arch/um/drivers/daemon_user.c:41:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_un "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#106: FILE: arch/um/drivers/daemon_user.c:42:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_un "
+		       "failed\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: arch/um/drivers/daemon_user.c:61:
+		printk(UM_KERN_ERR "daemon_open : control socket failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: arch/um/drivers/daemon_user.c:62:
+		printk(UM_KERN_ERR "daemon_open : control socket failed, "
+		       "errno = %d\n", -err);

CHECK:SPACING: No space is necessary after a cast
#126: FILE: arch/um/drivers/daemon_user.c:66:
+	if (connect(pri->control, (struct sockaddr *) ctl_addr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: arch/um/drivers/daemon_user.c:67:
+	if (connect(pri->control, (struct sockaddr *) ctl_addr,
+		   sizeof(*ctl_addr)) < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: arch/um/drivers/daemon_user.c:69:
+		printk(UM_KERN_ERR "daemon_open : control connect failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: arch/um/drivers/daemon_user.c:70:
+		printk(UM_KERN_ERR "daemon_open : control connect failed, "
+		       "errno = %d\n", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#142: FILE: arch/um/drivers/daemon_user.c:77:
+		printk(UM_KERN_ERR "daemon_open : data socket failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#143: FILE: arch/um/drivers/daemon_user.c:78:
+		printk(UM_KERN_ERR "daemon_open : data socket failed, "
+		       "errno = %d\n", -err);

CHECK:SPACING: No space is necessary after a cast
#147: FILE: arch/um/drivers/daemon_user.c:81:
+	if (bind(fd, (struct sockaddr *) local_addr, sizeof(*local_addr)) < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#151: FILE: arch/um/drivers/daemon_user.c:83:
+		printk(UM_KERN_ERR "daemon_open : data bind failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#152: FILE: arch/um/drivers/daemon_user.c:84:
+		printk(UM_KERN_ERR "daemon_open : data bind failed, "
+		       "errno = %d\n", -err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sun"
#159: FILE: arch/um/drivers/daemon_user.c:89:
+	if (sun == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: arch/um/drivers/daemon_user.c:90:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_un "

WARNING:SPLIT_STRING: quoted string split across lines
#161: FILE: arch/um/drivers/daemon_user.c:91:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_un "
+		       "failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/um/drivers/daemon_user.c:102:
+		printk(UM_KERN_ERR "daemon_open : control setup request "

WARNING:SPLIT_STRING: quoted string split across lines
#176: FILE: arch/um/drivers/daemon_user.c:103:
+		printk(UM_KERN_ERR "daemon_open : control setup request "
+		       "failed, err = %d\n", -errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: arch/um/drivers/daemon_user.c:110:
+		printk(UM_KERN_ERR "daemon_open : read of data socket failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: arch/um/drivers/daemon_user.c:111:
+		printk(UM_KERN_ERR "daemon_open : read of data socket failed, "
+		       "err = %d\n", -errno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sin"
#280: FILE: arch/um/drivers/mcast_user.c:30:
+	if (sin == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: arch/um/drivers/mcast_user.c:31:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_in "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'new_addr', this function's name, in a string
#281: FILE: arch/um/drivers/mcast_user.c:31:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_in "

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: arch/um/drivers/mcast_user.c:32:
+		printk(UM_KERN_ERR "new_addr: allocation of sockaddr_in "
+		       "failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#295: FILE: arch/um/drivers/mcast_user.c:73:
+		printk(UM_KERN_ERR "mcast_open : data socket failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_open', this function's name, in a string
#295: FILE: arch/um/drivers/mcast_user.c:73:
+		printk(UM_KERN_ERR "mcast_open : data socket failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: arch/um/drivers/mcast_user.c:74:
+		printk(UM_KERN_ERR "mcast_open : data socket failed, "
+		       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#304: FILE: arch/um/drivers/mcast_user.c:80:
+		printk(UM_KERN_ERR "mcast_open: SO_REUSEADDR failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_open', this function's name, in a string
#304: FILE: arch/um/drivers/mcast_user.c:80:
+		printk(UM_KERN_ERR "mcast_open: SO_REUSEADDR failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: arch/um/drivers/mcast_user.c:81:
+		printk(UM_KERN_ERR "mcast_open: SO_REUSEADDR failed, "
+		       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: arch/um/drivers/mcast_user.c:89:
+		printk(UM_KERN_ERR "mcast_open: IP_MULTICAST_TTL failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_open', this function's name, in a string
#315: FILE: arch/um/drivers/mcast_user.c:89:
+		printk(UM_KERN_ERR "mcast_open: IP_MULTICAST_TTL failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#316: FILE: arch/um/drivers/mcast_user.c:90:
+		printk(UM_KERN_ERR "mcast_open: IP_MULTICAST_TTL failed, "
+		       "error = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#325: FILE: arch/um/drivers/mcast_user.c:97:
+		printk(UM_KERN_ERR "mcast_open: IP_MULTICAST_LOOP failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_open', this function's name, in a string
#325: FILE: arch/um/drivers/mcast_user.c:97:
+		printk(UM_KERN_ERR "mcast_open: IP_MULTICAST_LOOP failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: arch/um/drivers/mcast_user.c:98:
+		printk(UM_KERN_ERR "mcast_open: IP_MULTICAST_LOOP failed, "
+		       "error = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#334: FILE: arch/um/drivers/mcast_user.c:105:
+		printk(UM_KERN_ERR "mcast_open : data bind failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_open', this function's name, in a string
#334: FILE: arch/um/drivers/mcast_user.c:105:
+		printk(UM_KERN_ERR "mcast_open : data bind failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#335: FILE: arch/um/drivers/mcast_user.c:106:
+		printk(UM_KERN_ERR "mcast_open : data bind failed, "
+		       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#352: FILE: arch/um/drivers/mcast_user.c:116:
+		printk(UM_KERN_ERR "mcast_open: IP_ADD_MEMBERSHIP failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_open', this function's name, in a string
#352: FILE: arch/um/drivers/mcast_user.c:116:
+		printk(UM_KERN_ERR "mcast_open: IP_ADD_MEMBERSHIP failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#353: FILE: arch/um/drivers/mcast_user.c:117:
+		printk(UM_KERN_ERR "mcast_open: IP_ADD_MEMBERSHIP failed, "
+		       "error = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#354: FILE: arch/um/drivers/mcast_user.c:118:
+		printk(UM_KERN_ERR "There appears not to be a multicast-"

WARNING:SPLIT_STRING: quoted string split across lines
#355: FILE: arch/um/drivers/mcast_user.c:119:
+		printk(UM_KERN_ERR "There appears not to be a multicast-"
+		       "capable network interface on the host.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: arch/um/drivers/mcast_user.c:120:
+		printk(UM_KERN_ERR "eth0 should be configured in order to use "

WARNING:SPLIT_STRING: quoted string split across lines
#357: FILE: arch/um/drivers/mcast_user.c:121:
+		printk(UM_KERN_ERR "eth0 should be configured in order to use "
+		       "the multicast transport.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#375: FILE: arch/um/drivers/mcast_user.c:143:
+		printk(UM_KERN_ERR "mcast_open: IP_DROP_MEMBERSHIP failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#376: FILE: arch/um/drivers/mcast_user.c:144:
+		printk(UM_KERN_ERR "mcast_open: IP_DROP_MEMBERSHIP failed, "
+		       "error = %d\n", errno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#417: FILE: arch/um/drivers/pcap_user.c:27:
+	if (p == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pri->pcap"
#426: FILE: arch/um/drivers/pcap_user.c:44:
+	if (pri->pcap == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pri->filter"
#430: FILE: arch/um/drivers/pcap_user.c:47:
+	if (pri->filter != NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pri->compiled)...) over kmalloc(sizeof(struct bpf_program)...)
#440: FILE: arch/um/drivers/pcap_user.c:54:
+		pri->compiled = kmalloc(sizeof(struct bpf_program),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pri->compiled"
#442: FILE: arch/um/drivers/pcap_user.c:56:
+		if (pri->compiled == NULL) {

CHECK:SPACING: No space is necessary after a cast
#450: FILE: arch/um/drivers/pcap_user.c:62:
+				   (struct bpf_program *) pri->compiled,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pri->compiled"
#482: FILE: arch/um/drivers/pcap_user.c:89:
+	if (pri->compiled != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pri->pcap"
#486: FILE: arch/um/drivers/pcap_user.c:92:
+	if (pri->pcap != NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#504: FILE: arch/um/drivers/pcap_user.c:121:
+	if (n < 0) {
[...]
-	else if(n == 0) 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#510: FILE: arch/um/drivers/pcap_user.c:126:
 	}
+	else if (n == 0)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#519: FILE: arch/um/drivers/slip_user.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#556: FILE: arch/um/drivers/slip_user.c:35:
+		printk(UM_KERN_ERR "could not get initial terminal "

WARNING:SPLIT_STRING: quoted string split across lines
#557: FILE: arch/um/drivers/slip_user.c:36:
+		printk(UM_KERN_ERR "could not get initial terminal "
+		       "attributes\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#568: FILE: arch/um/drivers/slip_user.c:53:
+		printk(UM_KERN_ERR "failed to set terminal attributes\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#597: FILE: arch/um/drivers/slip_user.c:84:
+		printk(UM_KERN_ERR "slip_tramp : pipe failed, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slip_tramp', this function's name, in a string
#597: FILE: arch/um/drivers/slip_user.c:84:
+		printk(UM_KERN_ERR "slip_tramp : pipe failed, err = %d\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output"
#615: FILE: arch/um/drivers/slip_user.c:100:
+	if (output == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#616: FILE: arch/um/drivers/slip_user.c:101:
+		printk(UM_KERN_ERR "slip_tramp : failed to allocate output "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slip_tramp', this function's name, in a string
#616: FILE: arch/um/drivers/slip_user.c:101:
+		printk(UM_KERN_ERR "slip_tramp : failed to allocate output "

WARNING:SPLIT_STRING: quoted string split across lines
#617: FILE: arch/um/drivers/slip_user.c:102:
+		printk(UM_KERN_ERR "slip_tramp : failed to allocate output "
+		       "buffer\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#630: FILE: arch/um/drivers/slip_user.c:113:
+	if (err < 0)
[...]
-	else if(!WIFEXITED(status) || (WEXITSTATUS(status) != 0)){
[...]
 		err = -EINVAL;
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#635: FILE: arch/um/drivers/slip_user.c:116:
+		printk(UM_KERN_ERR "'%s' didn't exit with status 0\n", argv[0]);

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#660: FILE: arch/um/drivers/slip_user.c:139:
+	char *argv[] = { "uml_net", version_buf, "slip", "up", gate_buf,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#668: FILE: arch/um/drivers/slip_user.c:145:
+		printk(UM_KERN_ERR "slip-open : Failed to open pty, err = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#679: FILE: arch/um/drivers/slip_user.c:153:
+		printk(UM_KERN_ERR "Couldn't open tty for slip line, "

WARNING:SPLIT_STRING: quoted string split across lines
#680: FILE: arch/um/drivers/slip_user.c:154:
+		printk(UM_KERN_ERR "Couldn't open tty for slip line, "
+		       "err = %d\n", -err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pri->gate_addr"
#693: FILE: arch/um/drivers/slip_user.c:165:
+	if (pri->gate_addr != NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#702: FILE: arch/um/drivers/slip_user.c:172:
+			printk(UM_KERN_ERR "slip_tramp failed - err = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#710: FILE: arch/um/drivers/slip_user.c:178:
+			printk(UM_KERN_ERR "get_ifname failed, err = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#722: FILE: arch/um/drivers/slip_user.c:187:
+			printk(UM_KERN_ERR "Failed to set slip discipline "

WARNING:SPLIT_STRING: quoted string split across lines
#723: FILE: arch/um/drivers/slip_user.c:188:
+			printk(UM_KERN_ERR "Failed to set slip discipline "
+			       "encapsulation - err = %d\n", -err);

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#743: FILE: arch/um/drivers/slip_user.c:205:
+	char *argv[] = { "uml_net", version_buf, "slip", "down", pri->name,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pri->gate_addr"
#748: FILE: arch/um/drivers/slip_user.c:209:
+	if (pri->gate_addr != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#760: FILE: arch/um/drivers/slip_user.c:217:
+		printk(UM_KERN_ERR "slip_tramp failed - errno = %d\n", -err);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#802: FILE: arch/um/drivers/slirp_user.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#862: FILE: arch/um/drivers/slirp_user.c:62:
+		printk(UM_KERN_ERR "slirp_tramp failed - errno = %d\n", -err);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#893: FILE: arch/um/drivers/slirp_user.c:89:
+	if (pri->pid<1) {
 	            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#894: FILE: arch/um/drivers/slirp_user.c:90:
+		printk(UM_KERN_ERR "slirp_close: no child process to shut "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slirp_close', this function's name, in a string
#894: FILE: arch/um/drivers/slirp_user.c:90:
+		printk(UM_KERN_ERR "slirp_close: no child process to shut "

WARNING:SPLIT_STRING: quoted string split across lines
#895: FILE: arch/um/drivers/slirp_user.c:91:
+		printk(UM_KERN_ERR "slirp_close: no child process to shut "
+		       "down\n");

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#903: FILE: arch/um/drivers/slirp_user.c:96:
+	if (kill(pri->pid, SIGHUP)<0) {
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#904: FILE: arch/um/drivers/slirp_user.c:97:
+		printk(UM_KERN_ERR "slirp_close: sending hangup to %d failed "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slirp_close', this function's name, in a string
#904: FILE: arch/um/drivers/slirp_user.c:97:
+		printk(UM_KERN_ERR "slirp_close: sending hangup to %d failed "

WARNING:SPLIT_STRING: quoted string split across lines
#905: FILE: arch/um/drivers/slirp_user.c:98:
+		printk(UM_KERN_ERR "slirp_close: sending hangup to %d failed "
+		       "(%d)\n", pri->pid, errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#913: FILE: arch/um/drivers/slirp_user.c:104:
+		printk(UM_KERN_ERR "slirp_close: waitpid returned %d\n", errno);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slirp_close', this function's name, in a string
#913: FILE: arch/um/drivers/slirp_user.c:104:
+		printk(UM_KERN_ERR "slirp_close: waitpid returned %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#920: FILE: arch/um/drivers/slirp_user.c:109:
+		printk(UM_KERN_ERR "slirp_close: process %d has not exited\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slirp_close', this function's name, in a string
#920: FILE: arch/um/drivers/slirp_user.c:109:
+		printk(UM_KERN_ERR "slirp_close: process %d has not exited\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#977: FILE: arch/um/os-Linux/drivers/ethertap_user.c:50:
+		printk(UM_KERN_ERR "etap_change - request failed, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_change', this function's name, in a string
#977: FILE: arch/um/os-Linux/drivers/ethertap_user.c:50:
+		printk(UM_KERN_ERR "etap_change - request failed, err = %d\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output"
#985: FILE: arch/um/os-Linux/drivers/ethertap_user.c:56:
+	if (output == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#986: FILE: arch/um/os-Linux/drivers/ethertap_user.c:57:
+		printk(UM_KERN_ERR "etap_change : Failed to allocate output "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_change', this function's name, in a string
#986: FILE: arch/um/os-Linux/drivers/ethertap_user.c:57:
+		printk(UM_KERN_ERR "etap_change : Failed to allocate output "

WARNING:SPLIT_STRING: quoted string split across lines
#987: FILE: arch/um/os-Linux/drivers/ethertap_user.c:58:
+		printk(UM_KERN_ERR "etap_change : Failed to allocate output "
+		       "buffer\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "output"
#990: FILE: arch/um/os-Linux/drivers/ethertap_user.c:60:
+	if (output != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gate"
#999: FILE: arch/um/os-Linux/drivers/ethertap_user.c:109:
+	if (gate != NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1017: FILE: arch/um/os-Linux/drivers/ethertap_user.c:128:
+		printk(UM_KERN_ERR "etap_tramp : read of status failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_tramp', this function's name, in a string
#1017: FILE: arch/um/os-Linux/drivers/ethertap_user.c:128:
+		printk(UM_KERN_ERR "etap_tramp : read of status failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1018: FILE: arch/um/os-Linux/drivers/ethertap_user.c:129:
+		printk(UM_KERN_ERR "etap_tramp : read of status failed, "
+		       "err = %d\n", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1024: FILE: arch/um/os-Linux/drivers/ethertap_user.c:133:
+		printk(UM_KERN_ERR "etap_tramp : uml_net failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_tramp', this function's name, in a string
#1024: FILE: arch/um/os-Linux/drivers/ethertap_user.c:133:
+		printk(UM_KERN_ERR "etap_tramp : uml_net failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1033: FILE: arch/um/os-Linux/drivers/ethertap_user.c:139:
+			printk(UM_KERN_ERR "uml_net didn't exit with "

WARNING:SPLIT_STRING: quoted string split across lines
#1034: FILE: arch/um/os-Linux/drivers/ethertap_user.c:140:
+			printk(UM_KERN_ERR "uml_net didn't exit with "
+			       "status 1\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1052: FILE: arch/um/os-Linux/drivers/ethertap_user.c:158:
+		printk(UM_KERN_ERR "etap_open - data socketpair failed - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_open', this function's name, in a string
#1052: FILE: arch/um/os-Linux/drivers/ethertap_user.c:158:
+		printk(UM_KERN_ERR "etap_open - data socketpair failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1053: FILE: arch/um/os-Linux/drivers/ethertap_user.c:159:
+		printk(UM_KERN_ERR "etap_open - data socketpair failed - "
+		       "err = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1063: FILE: arch/um/os-Linux/drivers/ethertap_user.c:166:
+		printk(UM_KERN_ERR "etap_open - control socketpair failed - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_open', this function's name, in a string
#1063: FILE: arch/um/os-Linux/drivers/ethertap_user.c:166:
+		printk(UM_KERN_ERR "etap_open - control socketpair failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1064: FILE: arch/um/os-Linux/drivers/ethertap_user.c:167:
+		printk(UM_KERN_ERR "etap_open - control socketpair failed - "
+		       "err = %d\n", errno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output"
#1074: FILE: arch/um/os-Linux/drivers/ethertap_user.c:177:
+	if (output == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1075: FILE: arch/um/os-Linux/drivers/ethertap_user.c:178:
+		printk(UM_KERN_ERR "etap_open : failed to allocate output "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_open', this function's name, in a string
#1075: FILE: arch/um/os-Linux/drivers/ethertap_user.c:178:
+		printk(UM_KERN_ERR "etap_open : failed to allocate output "

WARNING:SPLIT_STRING: quoted string split across lines
#1076: FILE: arch/um/os-Linux/drivers/ethertap_user.c:179:
+		printk(UM_KERN_ERR "etap_open : failed to allocate output "
+		       "buffer\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1085: FILE: arch/um/os-Linux/drivers/ethertap_user.c:186:
+		printk(UM_KERN_ERR "etap_tramp failed - err = %d\n", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1100: FILE: arch/um/os-Linux/drivers/ethertap_user.c:212:
+		printk(UM_KERN_ERR "etap_close - shutdown data socket failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_close', this function's name, in a string
#1100: FILE: arch/um/os-Linux/drivers/ethertap_user.c:212:
+		printk(UM_KERN_ERR "etap_close - shutdown data socket failed, "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1104: FILE: arch/um/os-Linux/drivers/ethertap_user.c:216:
+		printk(UM_KERN_ERR "etap_close - shutdown control socket "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_close', this function's name, in a string
#1104: FILE: arch/um/os-Linux/drivers/ethertap_user.c:216:
+		printk(UM_KERN_ERR "etap_close - shutdown control socket "

WARNING:SPLIT_STRING: quoted string split across lines
#1105: FILE: arch/um/os-Linux/drivers/ethertap_user.c:217:
+		printk(UM_KERN_ERR "etap_close - shutdown control socket "
+		       "failed, errno = %d\n", errno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer"
#1197: FILE: arch/um/os-Linux/drivers/tuntap_user.c:92:
+	if (buffer != NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1210: FILE: arch/um/os-Linux/drivers/tuntap_user.c:108:
+		printk(UM_KERN_ERR "tuntap_open_tramp : recvmsg failed - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tuntap_open_tramp', this function's name, in a string
#1210: FILE: arch/um/os-Linux/drivers/tuntap_user.c:108:
+		printk(UM_KERN_ERR "tuntap_open_tramp : recvmsg failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1211: FILE: arch/um/os-Linux/drivers/tuntap_user.c:109:
+		printk(UM_KERN_ERR "tuntap_open_tramp : recvmsg failed - "
+		       "errno = %d\n", errno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmsg"
#1219: FILE: arch/um/os-Linux/drivers/tuntap_user.c:115:
+	if (cmsg == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1220: FILE: arch/um/os-Linux/drivers/tuntap_user.c:116:
+		printk(UM_KERN_ERR "tuntap_open_tramp : didn't receive a "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tuntap_open_tramp', this function's name, in a string
#1220: FILE: arch/um/os-Linux/drivers/tuntap_user.c:116:
+		printk(UM_KERN_ERR "tuntap_open_tramp : didn't receive a "

WARNING:SPLIT_STRING: quoted string split across lines
#1221: FILE: arch/um/os-Linux/drivers/tuntap_user.c:117:
+		printk(UM_KERN_ERR "tuntap_open_tramp : didn't receive a "
+		       "message\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmsg->cmsg_level != SOL_SOCKET'
#1227: FILE: arch/um/os-Linux/drivers/tuntap_user.c:120:
+	if ((cmsg->cmsg_level != SOL_SOCKET) ||
+	   (cmsg->cmsg_type != SCM_RIGHTS)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmsg->cmsg_type != SCM_RIGHTS'
#1227: FILE: arch/um/os-Linux/drivers/tuntap_user.c:120:
+	if ((cmsg->cmsg_level != SOL_SOCKET) ||
+	   (cmsg->cmsg_type != SCM_RIGHTS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1228: FILE: arch/um/os-Linux/drivers/tuntap_user.c:121:
+	if ((cmsg->cmsg_level != SOL_SOCKET) ||
+	   (cmsg->cmsg_type != SCM_RIGHTS)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1229: FILE: arch/um/os-Linux/drivers/tuntap_user.c:122:
+		printk(UM_KERN_ERR "tuntap_open_tramp : didn't receive a "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tuntap_open_tramp', this function's name, in a string
#1229: FILE: arch/um/os-Linux/drivers/tuntap_user.c:122:
+		printk(UM_KERN_ERR "tuntap_open_tramp : didn't receive a "

WARNING:SPLIT_STRING: quoted string split across lines
#1230: FILE: arch/um/os-Linux/drivers/tuntap_user.c:123:
+		printk(UM_KERN_ERR "tuntap_open_tramp : didn't receive a "
+		       "descriptor\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1250: FILE: arch/um/os-Linux/drivers/tuntap_user.c:146:
+			printk(UM_KERN_ERR "Failed to open /dev/net/tun, "

WARNING:SPLIT_STRING: quoted string split across lines
#1251: FILE: arch/um/os-Linux/drivers/tuntap_user.c:147:
+			printk(UM_KERN_ERR "Failed to open /dev/net/tun, "
+			       "err = %d\n", -pri->fd);

CHECK:SPACING: No space is necessary after a cast
#1258: FILE: arch/um/os-Linux/drivers/tuntap_user.c:153:
+		if (ioctl(pri->fd, TUNSETIFF, (void *) &ifr) < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1261: FILE: arch/um/os-Linux/drivers/tuntap_user.c:155:
+			printk(UM_KERN_ERR "TUNSETIFF failed, errno = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1274: FILE: arch/um/os-Linux/drivers/tuntap_user.c:165:
+			printk(UM_KERN_ERR "tuntap_open : socketpair failed - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tuntap_open', this function's name, in a string
#1274: FILE: arch/um/os-Linux/drivers/tuntap_user.c:165:
+			printk(UM_KERN_ERR "tuntap_open : socketpair failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1275: FILE: arch/um/os-Linux/drivers/tuntap_user.c:166:
+			printk(UM_KERN_ERR "tuntap_open : socketpair failed - "
+			       "errno = %d\n", errno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer"
#1281: FILE: arch/um/os-Linux/drivers/tuntap_user.c:171:
+		if (buffer != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1294: FILE: arch/um/os-Linux/drivers/tuntap_user.c:182:
+			printk(UM_KERN_ERR "tuntap_open_tramp failed - "

WARNING:SPLIT_STRING: quoted string split across lines
#1295: FILE: arch/um/os-Linux/drivers/tuntap_user.c:183:
+			printk(UM_KERN_ERR "tuntap_open_tramp failed - "
+			       "err = %d\n", -err);

WARNING:SPACING: space prohibited before semicolon
#1374: FILE: arch/um/drivers/net_kern.c:86:
+	while ((err = uml_net_rx(dev)) > 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1374: FILE: arch/um/drivers/net_kern.c:86:
+	while ((err = uml_net_rx(dev)) > 0) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#1408: FILE: arch/um/drivers/net_kern.c:139:
+	while ((err = uml_net_rx(dev)) > 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1408: FILE: arch/um/drivers/net_kern.c:139:
+	while ((err = uml_net_rx(dev)) > 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1417: FILE: arch/um/drivers/net_kern.c:147:
+	if (lp->close != NULL) (*lp->close)(lp->fd, &lp->user);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->close"
#1417: FILE: arch/um/drivers/net_kern.c:147:
+	if (lp->close != NULL) (*lp->close)(lp->fd, &lp->user);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->close"
#1426: FILE: arch/um/drivers/net_kern.c:160:
+	if (lp->close != NULL)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1444: FILE: arch/um/drivers/net_kern.c:192:
 	}
+	else if (len == 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!str"
#1475: FILE: arch/um/drivers/net_kern.c:288:
+	if (str == NULL)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1479: FILE: arch/um/drivers/net_kern.c:291:
+	for (i = 0;i < 6; i++) {
 	          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == str'
#1483: FILE: arch/um/drivers/net_kern.c:293:
+		if ((end == str) ||
+		   ((*end != ':') && (*end != ',') && (*end != '\0'))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1484: FILE: arch/um/drivers/net_kern.c:294:
+		if ((end == str) ||
+		   ((*end != ':') && (*end != ',') && (*end != '\0'))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->remove"
#1493: FILE: arch/um/drivers/net_kern.c:349:
+	if (lp->remove != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!init_out"
#1559: FILE: arch/um/drivers/net_kern.c:561:
+	if (*init_out == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1577: FILE: arch/um/drivers/net_kern.c:588:
+		if (!match)
[...]
-		else if(init != NULL){
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "init"
#1580: FILE: arch/um/drivers/net_kern.c:590:
+		else if (init != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1592: FILE: arch/um/drivers/net_kern.c:609:
+^I        if (!check_transport(transport, str, index, &init, &mac))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "init"
#1595: FILE: arch/um/drivers/net_kern.c:611:
+		if (init != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#1613: FILE: arch/um/drivers/net_kern.c:637:
+	if (new == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1614: FILE: arch/um/drivers/net_kern.c:638:
+		printk(KERN_ERR "eth_init : alloc_bootmem failed\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!str"
#1631: FILE: arch/um/drivers/net_kern.c:668:
+	if (str == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == *str'
#1652: FILE: arch/um/drivers/net_kern.c:684:
+	if ((*end != '\0') || (end == *str))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#1671: FILE: arch/um/drivers/net_kern.c:700:
+	if (device == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "proc"
#1702: FILE: arch/um/drivers/net_kern.c:745:
+	if (proc != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ip"
#1715: FILE: arch/um/drivers/net_kern.c:776:
+		if (ip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "in"
#1719: FILE: arch/um/drivers/net_kern.c:779:
+		while (in != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->close != NULL'
#1732: FILE: arch/um/drivers/net_kern.c:800:
+		if ((lp->close != NULL) && (lp->fd >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->fd >= 0'
#1732: FILE: arch/um/drivers/net_kern.c:800:
+		if ((lp->close != NULL) && (lp->fd >= 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->close"
#1732: FILE: arch/um/drivers/net_kern.c:800:
+		if ((lp->close != NULL) && (lp->fd >= 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lp->remove"
#1735: FILE: arch/um/drivers/net_kern.c:802:
+		if (lp->remove != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb != NULL'
#1744: FILE: arch/um/drivers/net_kern.c:812:
+	if ((skb != NULL) && (skb_tailroom(skb) < extra)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#1744: FILE: arch/um/drivers/net_kern.c:812:
+	if ((skb != NULL) && (skb_tailroom(skb) < extra)) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1753: FILE: arch/um/drivers/net_kern.c:819:
+	if (skb != NULL) skb_put(skb, extra);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#1753: FILE: arch/um/drivers/net_kern.c:819:
+	if (skb != NULL) skb_put(skb, extra);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1763: FILE: arch/um/drivers/net_kern.c:832:
+	if (ip == NULL) return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ip"
#1763: FILE: arch/um/drivers/net_kern.c:832:
+	if (ip == NULL) return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "in"
#1766: FILE: arch/um/drivers/net_kern.c:834:
+	while (in != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ip"
#1776: FILE: arch/um/drivers/net_kern.c:849:
+	if (ip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!in"
#1782: FILE: arch/um/drivers/net_kern.c:853:
+	if (in == NULL)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1796: FILE: arch/um/drivers/net_kern.c:865:
+	if (ret) *len_out = PAGE_SIZE;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "remain"
#1808: FILE: arch/um/drivers/net_kern.c:881:
+	if (remain != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1809: FILE: arch/um/drivers/net_kern.c:882:
+		printk(KERN_ERR "tap_setup_common - Extra garbage on "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tap_setup_common', this function's name, in a string
#1809: FILE: arch/um/drivers/net_kern.c:882:
+		printk(KERN_ERR "tap_setup_common - Extra garbage on "

WARNING:SPLIT_STRING: quoted string split across lines
#1810: FILE: arch/um/drivers/net_kern.c:883:
+		printk(KERN_ERR "tap_setup_common - Extra garbage on "
+		       "specification : '%s'\n", remain);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1875: FILE: arch/um/drivers/daemon_kern.c:37:
+	printk("daemon backend (uml_switch version %d) - %s:%s",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1888: FILE: arch/um/drivers/daemon_kern.c:46:
+	if (*skb == NULL)

CHECK:SPACING: No space is necessary after a cast
#1900: FILE: arch/um/drivers/daemon_kern.c:56:
+				 (struct daemon_data *) &lp->user);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "remain"
#1913: FILE: arch/um/drivers/daemon_kern.c:77:
+	if (remain != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1962: FILE: arch/um/drivers/mcast_kern.c:38:
+	printk("mcast backend multicast address: %s:%u, TTL:%u\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1974: FILE: arch/um/drivers/mcast_kern.c:45:
+	if (*skb == NULL)

CHECK:SPACING: No space is necessary after a cast
#1987: FILE: arch/um/drivers/mcast_kern.c:54:
+				(struct mcast_data *) &lp->user);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "remain"
#1996: FILE: arch/um/drivers/mcast_kern.c:77:
+	if (remain != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "port_str"
#2005: FILE: arch/um/drivers/mcast_kern.c:83:
+	if (port_str != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'last == port_str'
#2009: FILE: arch/um/drivers/mcast_kern.c:85:
+		if ((*last != '\0') || (last == port_str)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2010: FILE: arch/um/drivers/mcast_kern.c:86:
+			printk(KERN_ERR "mcast_setup - Bad port : '%s'\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_setup', this function's name, in a string
#2010: FILE: arch/um/drivers/mcast_kern.c:86:
+			printk(KERN_ERR "mcast_setup - Bad port : '%s'\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ttl_str"
#2018: FILE: arch/um/drivers/mcast_kern.c:92:
+	if (ttl_str != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'last == ttl_str'
#2022: FILE: arch/um/drivers/mcast_kern.c:94:
+		if ((*last != '\0') || (last == ttl_str)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2023: FILE: arch/um/drivers/mcast_kern.c:95:
+			printk(KERN_ERR "mcast_setup - Bad ttl : '%s'\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mcast_setup', this function's name, in a string
#2023: FILE: arch/um/drivers/mcast_kern.c:95:
+			printk(KERN_ERR "mcast_setup - Bad ttl : '%s'\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2045: FILE: arch/um/drivers/net_user.c:1:
+/*

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gate_addr"
#2077: FILE: arch/um/drivers/net_user.c:24:
+	if (gate_addr == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2083: FILE: arch/um/drivers/net_user.c:27:
+	if (sscanf(gate_addr, "%d.%d.%d.%d", &tap_addr[0],
+		  &tap_addr[1], &tap_addr[2], &tap_addr[3]) != 4) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2084: FILE: arch/um/drivers/net_user.c:28:
+		printk(UM_KERN_ERR "Invalid tap IP address - '%s'\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gate_addr != NULL'
#2102: FILE: arch/um/drivers/net_user.c:39:
+	if ((gate_addr != NULL) &&
+	    (sscanf(gate_addr, "%d.%d.%d.%d", &tap_addr[0],
+		    &tap_addr[1], &tap_addr[2], &tap_addr[3]) == 4) &&
+	    (eth_addr[0] == tap_addr[0]) &&
+	    (eth_addr[1] == tap_addr[1]) &&
+	    (eth_addr[2] == tap_addr[2]) &&
+	    (eth_addr[3] == tap_addr[3])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'eth_addr[0] == tap_addr[0]'
#2102: FILE: arch/um/drivers/net_user.c:39:
+	if ((gate_addr != NULL) &&
+	    (sscanf(gate_addr, "%d.%d.%d.%d", &tap_addr[0],
+		    &tap_addr[1], &tap_addr[2], &tap_addr[3]) == 4) &&
+	    (eth_addr[0] == tap_addr[0]) &&
+	    (eth_addr[1] == tap_addr[1]) &&
+	    (eth_addr[2] == tap_addr[2]) &&
+	    (eth_addr[3] == tap_addr[3])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'eth_addr[1] == tap_addr[1]'
#2102: FILE: arch/um/drivers/net_user.c:39:
+	if ((gate_addr != NULL) &&
+	    (sscanf(gate_addr, "%d.%d.%d.%d", &tap_addr[0],
+		    &tap_addr[1], &tap_addr[2], &tap_addr[3]) == 4) &&
+	    (eth_addr[0] == tap_addr[0]) &&
+	    (eth_addr[1] == tap_addr[1]) &&
+	    (eth_addr[2] == tap_addr[2]) &&
+	    (eth_addr[3] == tap_addr[3])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'eth_addr[2] == tap_addr[2]'
#2102: FILE: arch/um/drivers/net_user.c:39:
+	if ((gate_addr != NULL) &&
+	    (sscanf(gate_addr, "%d.%d.%d.%d", &tap_addr[0],
+		    &tap_addr[1], &tap_addr[2], &tap_addr[3]) == 4) &&
+	    (eth_addr[0] == tap_addr[0]) &&
+	    (eth_addr[1] == tap_addr[1]) &&
+	    (eth_addr[2] == tap_addr[2]) &&
+	    (eth_addr[3] == tap_addr[3])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'eth_addr[3] == tap_addr[3]'
#2102: FILE: arch/um/drivers/net_user.c:39:
+	if ((gate_addr != NULL) &&
+	    (sscanf(gate_addr, "%d.%d.%d.%d", &tap_addr[0],
+		    &tap_addr[1], &tap_addr[2], &tap_addr[3]) == 4) &&
+	    (eth_addr[0] == tap_addr[0]) &&
+	    (eth_addr[1] == tap_addr[1]) &&
+	    (eth_addr[2] == tap_addr[2]) &&
+	    (eth_addr[3] == tap_addr[3])) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gate_addr"
#2102: FILE: arch/um/drivers/net_user.c:39:
+	if ((gate_addr != NULL) &&

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2109: FILE: arch/um/drivers/net_user.c:46:
+		printk(UM_KERN_ERR "The tap IP address and the UML eth IP "

WARNING:SPLIT_STRING: quoted string split across lines
#2110: FILE: arch/um/drivers/net_user.c:47:
+		printk(UM_KERN_ERR "The tap IP address and the UML eth IP "
+		       "address must be different\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output"
#2119: FILE: arch/um/drivers/net_user.c:58:
+	if (output == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2153: FILE: arch/um/drivers/net_user.c:90:
+		printk(UM_KERN_ERR "read_output - read of %s failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_output', this function's name, in a string
#2153: FILE: arch/um/drivers/net_user.c:90:
+		printk(UM_KERN_ERR "read_output - read of %s failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#2154: FILE: arch/um/drivers/net_user.c:91:
+		printk(UM_KERN_ERR "read_output - read of %s failed, "
+		       "errno = %d\n", str, -ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2157: FILE: arch/um/drivers/net_user.c:93:
+		printk(UM_KERN_ERR "read_output - read of %s failed, read only "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_output', this function's name, in a string
#2157: FILE: arch/um/drivers/net_user.c:93:
+		printk(UM_KERN_ERR "read_output - read of %s failed, read only "

WARNING:SPLIT_STRING: quoted string split across lines
#2158: FILE: arch/um/drivers/net_user.c:94:
+		printk(UM_KERN_ERR "read_output - read of %s failed, read only "
+		       "%d of %d bytes\n", str, ret, expected);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n < 0'
#2169: FILE: arch/um/drivers/net_user.c:103:
+	if ((n < 0) && (errno == EAGAIN))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno == EAGAIN'
#2169: FILE: arch/um/drivers/net_user.c:103:
+	if ((n < 0) && (errno == EAGAIN))

CHECK:BRACES: braces {} should be used on all arms of this statement
#2182: FILE: arch/um/drivers/net_user.c:115:
+	if (n < 0) {
[...]
-	else if(n == 0)
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2188: FILE: arch/um/drivers/net_user.c:120:
 	}
+	else if (n == 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n < 0'
#2200: FILE: arch/um/drivers/net_user.c:131:
+	if ((n < 0) && (errno == EAGAIN))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno == EAGAIN'
#2200: FILE: arch/um/drivers/net_user.c:131:
+	if ((n < 0) && (errno == EAGAIN))

CHECK:BRACES: braces {} should be used on all arms of this statement
#2213: FILE: arch/um/drivers/net_user.c:143:
+	if (n < 0) {
[...]
-	else if(n == 0)
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2219: FILE: arch/um/drivers/net_user.c:148:
 	}
+	else if (n == 0)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2229: FILE: arch/um/drivers/net_user.c:159:
+	if (n < 0) {
[...]
-	else if(n == 0)
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2235: FILE: arch/um/drivers/net_user.c:164:
 	}
+	else if (n == 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2255: FILE: arch/um/drivers/net_user.c:189:
+		printk(UM_KERN_ERR "change_tramp - pipe failed, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'change_tramp', this function's name, in a string
#2255: FILE: arch/um/drivers/net_user.c:189:
+		printk(UM_KERN_ERR "change_tramp - pipe failed, err = %d\n",

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#2276: FILE: arch/um/drivers/net_user.c:214:
+	char *argv[] = { "uml_net", version, what, dev, addr_buf,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output"
#2291: FILE: arch/um/drivers/net_user.c:226:
+	if (output == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2292: FILE: arch/um/drivers/net_user.c:227:
+		printk(UM_KERN_ERR "change : failed to allocate output "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'change', this function's name, in a string
#2292: FILE: arch/um/drivers/net_user.c:227:
+		printk(UM_KERN_ERR "change : failed to allocate output "

WARNING:SPLIT_STRING: quoted string split across lines
#2293: FILE: arch/um/drivers/net_user.c:228:
+		printk(UM_KERN_ERR "change : failed to allocate output "
+		       "buffer\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2297: FILE: arch/um/drivers/net_user.c:231:
+	if (pid < 0) return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "output"
#2300: FILE: arch/um/drivers/net_user.c:233:
+	if (output != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!end"
#2318: FILE: arch/um/drivers/net_user.c:261:
+		if (end == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#2347: FILE: arch/um/drivers/pcap_kern.c:38:
+	if (*skb == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "remain"
#2356: FILE: arch/um/drivers/pcap_kern.c:72:
+	if (remain != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host_if"
#2363: FILE: arch/um/drivers/pcap_kern.c:78:
+	if (host_if != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!options[i]"
#2369: FILE: arch/um/drivers/pcap_kern.c:82:
+		if (options[i] == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2372: FILE: arch/um/drivers/pcap_kern.c:84:
+		if (!strcmp(options[i], "promisc"))
[...]
-		else if(!strcmp(options[i], "nopromisc"))
[...]
 			init->promisc = 0;
[...]
+		else if (!strcmp(options[i], "optimize"))
[...]
-		else if(!strcmp(options[i], "nooptimize"))
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2385: FILE: arch/um/drivers/pcap_kern.c:93:
+			printk(KERN_ERR "pcap_setup : bad option - '%s'\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcap_setup', this function's name, in a string
#2385: FILE: arch/um/drivers/pcap_kern.c:93:
+			printk(KERN_ERR "pcap_setup : bad option - '%s'\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2400: FILE: arch/um/drivers/slip_kern.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2424: FILE: arch/um/drivers/slip_kern.c:51:
+static int slip_read(int fd, struct sk_buff **skb,
 		       struct uml_net_private *lp)

CHECK:SPACING: No space is necessary after a cast
#2429: FILE: arch/um/drivers/slip_kern.c:54:
+			      (struct slip_data *) &lp->user);

CHECK:SPACING: No space is necessary after a cast
#2438: FILE: arch/um/drivers/slip_kern.c:61:
+			       (struct slip_data *) &lp->user);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2465: FILE: arch/um/drivers/slirp_kern.c:1:
+/*

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "spri->argw.argv[i]"
#2487: FILE: arch/um/drivers/slirp_kern.c:45:
+	for (i = 0; spri->argw.argv[i] != NULL; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2501: FILE: arch/um/drivers/slirp_kern.c:56:
+static int slirp_read(int fd, struct sk_buff **skb,
 		       struct uml_net_private *lp)

CHECK:SPACING: No space is necessary after a cast
#2506: FILE: arch/um/drivers/slirp_kern.c:59:
+			      (struct slirp_data *) &lp->user);

CHECK:SPACING: No space is necessary after a cast
#2515: FILE: arch/um/drivers/slirp_kern.c:66:
+			       (struct slirp_data *) &lp->user);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!str"
#2532: FILE: arch/um/drivers/slirp_kern.c:85:
+	if (str == NULL) /* no command line given after MAC addr */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2539: FILE: arch/um/drivers/slirp_kern.c:90:
+			printk(KERN_WARNING "slirp_setup: truncating slirp "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slirp_setup', this function's name, in a string
#2539: FILE: arch/um/drivers/slirp_kern.c:90:
+			printk(KERN_WARNING "slirp_setup: truncating slirp "

WARNING:SPLIT_STRING: quoted string split across lines
#2540: FILE: arch/um/drivers/slirp_kern.c:91:
+			printk(KERN_WARNING "slirp_setup: truncating slirp "
+			       "arguments\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2547: FILE: arch/um/drivers/slirp_kern.c:97:
+				*str=' ';
 				    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2586: FILE: arch/um/drivers/vde_kern.c:31:
+	printk("vde backend - %s, ", vpri->vde_switch ?

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2592: FILE: arch/um/drivers/vde_kern.c:36:
+	printk("\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#2626: FILE: arch/um/os-Linux/drivers/ethertap_kern.c:44:
+	if (*skb == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb2"
#2648: FILE: arch/um/os-Linux/drivers/ethertap_kern.c:62:
+		if (skb2 == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2664: FILE: arch/um/os-Linux/drivers/ethertap_kern.c:85:
+	if (tap_setup_common(str, "ethertap", &init->dev_name, mac_out,
 			    &init->gate_addr))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!init->dev_name"
#2670: FILE: arch/um/os-Linux/drivers/ethertap_kern.c:87:
+	if (init->dev_name == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2671: FILE: arch/um/os-Linux/drivers/ethertap_kern.c:88:
+		printk(KERN_ERR "ethertap_setup : Missing tap device name\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ethertap_setup', this function's name, in a string
#2671: FILE: arch/um/os-Linux/drivers/ethertap_kern.c:88:
+		printk(KERN_ERR "ethertap_setup : Missing tap device name\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2687: FILE: arch/um/os-Linux/drivers/tuntap_kern.c:1:
+/*

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#2719: FILE: arch/um/os-Linux/drivers/tuntap_kern.c:42:
+	if (*skb == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2740: FILE: arch/um/os-Linux/drivers/tuntap_kern.c:69:
+	if (tap_setup_common(str, "tuntap", &init->dev_name, mac_out,
 			    &init->gate_addr))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2756: FILE: arch/um/drivers/daemon.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2772: FILE: arch/um/drivers/daemon.h:26:
+extern int daemon_user_write(int fd, void *buf, int len,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000376043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 162 warnings, 108 checks, 2584 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000376043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
