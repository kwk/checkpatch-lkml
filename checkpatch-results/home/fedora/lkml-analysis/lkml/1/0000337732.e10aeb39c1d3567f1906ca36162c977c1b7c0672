WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/net/3c503.c:343:
+    dev->poll_controller = eip_poll;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#77: FILE: drivers/net/3c503.c:398:
+	if ((retval = request_irq(dev->irq, eip_interrupt, 0, dev->name, dev))) {
 	    return retval;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#77: FILE: drivers/net/3c503.c:398:
+	if ((retval = request_irq(dev->irq, eip_interrupt, 0, dev->name, dev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#77: FILE: drivers/net/3c503.c:398:
+	if ((retval = request_irq(dev->irq, eip_interrupt, 0, dev->name, dev))) {
 	    return retval;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/net/3c503.c:404:
+    eip_open(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/net/3c503.c:415:
+    eip_close(dev);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: drivers/net/8390.h:33:
+extern void eip_poll(struct net_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: drivers/net/8390.h:48:
+extern void NS8390p_init(struct net_device *dev, int startp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: drivers/net/8390.h:49:
+extern int eip_open(struct net_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: drivers/net/8390.h:50:
+extern int eip_close(struct net_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#128: FILE: drivers/net/8390.h:51:
+extern irqreturn_t eip_interrupt(int irq, void *dev_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: drivers/net/8390.h:52:
+extern struct net_device *__alloc_eip_netdev(int size);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: drivers/net/8390.h:139:
+#define ei_outb_p(_v,_p) outb(_v,_p)
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: drivers/net/8390.h:139:
+#define ei_outb_p(_v,_p) outb(_v,_p)
                                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: drivers/net/8390p.c:1:
+/* 8390 core for ISA devices needing bus delays */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/net/8390p.c:4:
+    "8390p.c:v1.10cvs 9/23/94 Donald Becker (becker@cesdis.gsfc.nasa.gov)\n";$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: drivers/net/8390p.c:7:
+#define ei_outb(_v,_p)	outb(_v,_p)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: drivers/net/8390p.c:7:
+#define ei_outb(_v,_p)	outb(_v,_p)
                       	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: drivers/net/8390p.c:9:
+#define ei_outb_p(_v,_p) outb_p(_v,_p)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: drivers/net/8390p.c:9:
+#define ei_outb_p(_v,_p) outb_p(_v,_p)
                                   ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#203: FILE: drivers/net/8390p.c:45:
+EXPORT_SYMBOL(eip_open);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#204: FILE: drivers/net/8390p.c:46:
+EXPORT_SYMBOL(eip_close);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#205: FILE: drivers/net/8390p.c:47:
+EXPORT_SYMBOL(eip_interrupt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#210: FILE: drivers/net/8390p.c:52:
+EXPORT_SYMBOL(__alloc_eip_netdev);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#242: FILE: drivers/net/hp.c:179:
+					&& request_irq (irq, eip_interrupt, 0, DRV_NAME, dev) == 0) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#242: FILE: drivers/net/hp.c:179:
 				if (irq == probe_irq_off(cookie)		 /* It's a good IRQ line! */
+					&& request_irq (irq, eip_interrupt, 0, DRV_NAME, dev) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: drivers/net/hp.c:179:
+					&& request_irq (irq, eip_interrupt, 0, DRV_NAME, dev) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#251: FILE: drivers/net/hp.c:194:
+		if ((retval = request_irq(dev->irq, eip_interrupt, 0, DRV_NAME, dev))) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000337732.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 13 warnings, 7 checks, 339 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000337732.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
