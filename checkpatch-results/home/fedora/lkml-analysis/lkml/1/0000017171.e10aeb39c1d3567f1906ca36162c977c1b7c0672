WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> >> > That may be a good reason for adding kernel-based suspend notification,

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#46: 
> > removing the existing kernel-based mechanism.  They can exist both at the
                                                  ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: drivers/power/spitz_battery.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/power/spitz_battery.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#144: FILE: drivers/power/spitz_battery.c:41:
+extern int sharpsl_pm_pxa_read_max1111(int channel);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#150: FILE: drivers/power/spitz_battery.c:47:
+/* 422 seems to be suitable for very old, 1Ah battery.
+   2Ah battery probably has better resistance */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#150: FILE: drivers/power/spitz_battery.c:47:
+   2Ah battery probably has better resistance */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#166: FILE: drivers/power/spitz_battery.c:63:
+extern int backlight_current;

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#170: FILE: drivers/power/spitz_battery.c:67:
+	int intensity = sharpsl_pm.machinfo->backlight_get_status ? sharpsl_pm.machinfo->backlight_get_status() : 0;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/power/spitz_battery.c:78:
+{       $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#189: FILE: drivers/power/spitz_battery.c:86:
+	/* Thanks to Stanislav B. ADC has 3.3V as reference,
+	   is connected to battery over 47kOhm,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: drivers/power/spitz_battery.c:87:
+	   and to ground over 100kOhm. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#191: FILE: drivers/power/spitz_battery.c:88:
+	return (sharpsl_pm.machinfo->read_devdata(SHARPSL_BATT_VOLT) * 147 * 33)/256;
 	                                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#201: FILE: drivers/power/spitz_battery.c:98:
+/*
+ { 420, 100 },

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/power/spitz_battery.c:138:
+static int spitz_bat_get_property(struct power_supply *psy,
+			    enum power_supply_property psp,

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#252: FILE: drivers/power/spitz_battery.c:149:
+		   POWER_SUPPLY_HEALTH_OVERVOLTAGE, POWER_SUPPLY_HEALTH_UNSPEC_FAILURE, POWER_SUPPLY_HEALTH_GOOD

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: drivers/power/spitz_battery.c:149:
+		/* POWER_SUPPLY_HEALTH_OVERHEAT , POWER_SUPPLY_HEALTH_COLD,
+		   POWER_SUPPLY_HEALTH_OVERVOLTAGE, POWER_SUPPLY_HEALTH_UNSPEC_FAILURE, POWER_SUPPLY_HEALTH_GOOD

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/power/spitz_battery.c:154:
+^I  ^Iif (gpio_get_value(SPITZ_GPIO_CHRG_ON) == 0) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: drivers/power/spitz_battery.c:154:
+^I  ^Iif (gpio_get_value(SPITZ_GPIO_CHRG_ON) == 0) {$

WARNING:TABSTOP: Statements should start on a tabstop
#265: FILE: drivers/power/spitz_battery.c:162:
+	  {

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/power/spitz_battery.c:165:
+^I  ^Iif (gpio_get_value(SPITZ_GPIO_CHRG_ON) == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#268: FILE: drivers/power/spitz_battery.c:165:
+^I  ^Iif (gpio_get_value(SPITZ_GPIO_CHRG_ON) == 0)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: drivers/power/spitz_battery.c:166:
+			printk("Chrg bit on. ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/power/spitz_battery.c:167:
+^I  ^Iif (gpio_get_value(SPITZ_GPIO_JK_B) == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: drivers/power/spitz_battery.c:167:
+^I  ^Iif (gpio_get_value(SPITZ_GPIO_JK_B) == 0)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#271: FILE: drivers/power/spitz_battery.c:168:
+			printk("Slow charge bit on. ");

CHECK:BRACES: braces {} should be used on all arms of this statement
#275: FILE: drivers/power/spitz_battery.c:172:
+		if (!sharpsl_pm.machinfo->read_devdata(SHARPSL_STATUS_ACIN))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#277: FILE: drivers/power/spitz_battery.c:174:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: drivers/power/spitz_battery.c:181:
+		printk("ACIN: %d ", sharpsl_pm.machinfo->read_devdata(SHARPSL_STATUS_ACIN));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#285: FILE: drivers/power/spitz_battery.c:182:
+		printk("Chrgfull: %d  ", sharpsl_pm.machinfo->read_devdata(SHARPSL_STATUS_CHRGFULL));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#285: FILE: drivers/power/spitz_battery.c:182:
+		printk("Chrgfull: %d  ", sharpsl_pm.machinfo->read_devdata(SHARPSL_STATUS_CHRGFULL));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#286: FILE: drivers/power/spitz_battery.c:183:
+		printk("Fatal: %d  ", sharpsl_pm.machinfo->read_devdata(SHARPSL_STATUS_FATAL));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#287: FILE: drivers/power/spitz_battery.c:184:
+		printk("ACIN_volt: %d\n", sharpsl_pm.machinfo->read_devdata(SHARPSL_ACIN_VOLT));

WARNING:TABSTOP: Statements should start on a tabstop
#290: FILE: drivers/power/spitz_battery.c:187:
+	  }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#295: FILE: drivers/power/spitz_battery.c:192:
+		val->intval = liion_voltage()*1000;
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#326: FILE: drivers/power/spitz_battery.c:223:
+		val->intval = liion_internal_voltage(liion_voltage(), battery_current())*1000;
 		                                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/power/spitz_battery.c:235:
+static int spitz_ac_get_property(struct power_supply *psy,
+			    enum power_supply_property psp,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#352: FILE: drivers/power/spitz_battery.c:249:
+		/* Thanks to Stanislav B. ADC has 3.3V as reference,
+		   is connected to acin over 2kOhm,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#353: FILE: drivers/power/spitz_battery.c:250:
+		   and to ground over 1kOhm. */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#354: FILE: drivers/power/spitz_battery.c:251:
+		val->intval = (sharpsl_pm.machinfo->read_devdata(SHARPSL_ACIN_VOLT) * 3000 * 3300)/256;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#354: FILE: drivers/power/spitz_battery.c:251:
+		val->intval = (sharpsl_pm.machinfo->read_devdata(SHARPSL_ACIN_VOLT) * 3000 * 3300)/256;
 		                                                                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#378: FILE: drivers/power/spitz_battery.c:275:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#440: FILE: drivers/power/spitz_battery.c:337:
+
+

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'spitz_bat_limit_show' to 'limit_show' 'spitz_bat_limit_store' to 'limit_store'
#469: FILE: drivers/power/spitz_battery.c:366:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: drivers/power/spitz_battery.c:368:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#472: FILE: drivers/power/spitz_battery.c:369:
+static DEVICE_ATTR(limit, S_IRUGO | S_IWUSR, spitz_bat_limit_show, spitz_bat_limit_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#473: FILE: drivers/power/spitz_battery.c:370:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/power/spitz_battery.c:372:
+        .attr = { .name = "limit", .mode = 0644 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/power/spitz_battery.c:372:
+        .attr = { .name = "limit", .mode = 0644 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/power/spitz_battery.c:373:
+        .show = spitz_bat_limit_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/power/spitz_battery.c:373:
+        .show = spitz_bat_limit_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: drivers/power/spitz_battery.c:374:
+        .store = spitz_bat_limit_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/power/spitz_battery.c:374:
+        .store = spitz_bat_limit_store,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#481: FILE: drivers/power/spitz_battery.c:378:
+static int __devinit spitz_bat_probe(struct platform_device *dev)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#489: FILE: drivers/power/spitz_battery.c:386:
+	printk("spitz_bat_probe: register\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spitz_bat_probe', this function's name, in a string
#489: FILE: drivers/power/spitz_battery.c:386:
+	printk("spitz_bat_probe: register\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#497: FILE: drivers/power/spitz_battery.c:394:
+static int __devexit spitz_bat_remove(struct platform_device *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#507: FILE: drivers/power/spitz_battery.c:404:
+
+

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#706: FILE: arch/arm/mach-pxa/sharpsl.h:51:
+#define SHARPSL_CHARGE_ON_TIME_INTERVAL        (msecs_to_jiffies(1*60*1000))  /* 1 min */
                                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#706: FILE: arch/arm/mach-pxa/sharpsl.h:51:
+#define SHARPSL_CHARGE_ON_TIME_INTERVAL        (msecs_to_jiffies(1*60*1000))  /* 1 min */
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#707: FILE: arch/arm/mach-pxa/sharpsl.h:52:
+#define SHARPSL_CHARGE_FINISH_TIME             (msecs_to_jiffies(10*60*1000)) /* 10 min */
                                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#707: FILE: arch/arm/mach-pxa/sharpsl.h:52:
+#define SHARPSL_CHARGE_FINISH_TIME             (msecs_to_jiffies(10*60*1000)) /* 10 min */
                                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#708: FILE: arch/arm/mach-pxa/sharpsl.h:53:
+#define SHARPSL_BATCHK_TIME                    (msecs_to_jiffies(15*1000))    /* 15 sec */
                                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#709: FILE: arch/arm/mach-pxa/sharpsl.h:54:
+#define SHARPSL_BATCHK_TIME_SUSPEND            (60*10)                        /* 10 min */
                                                   ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:BIT_MACRO: Prefer using the BIT macro
#853: FILE: arch/arm/mach-pxa/sharpsl_pm.c:68:
+#define MAXCTRL_PD0      (1u << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#854: FILE: arch/arm/mach-pxa/sharpsl_pm.c:69:
+#define MAXCTRL_PD1      (1u << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#855: FILE: arch/arm/mach-pxa/sharpsl_pm.c:70:
+#define MAXCTRL_SGL      (1u << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#856: FILE: arch/arm/mach-pxa/sharpsl_pm.c:71:
+#define MAXCTRL_UNI      (1u << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#859: FILE: arch/arm/mach-pxa/sharpsl_pm.c:73:
+#define MAXCTRL_STR      (1u << 7)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#868: FILE: arch/arm/mach-pxa/sharpsl_pm.c:81:
+	if (machine_is_tosa())
 	    return 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#926: FILE: arch/arm/mach-pxa/sharpsl_pm.c:170:
+	   creeping back up so we try to avoid this here */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.ac_status == APM_AC_ONLINE'
#927: FILE: arch/arm/mach-pxa/sharpsl_pm.c:171:
+	if ((sharpsl_pm.battstat.ac_status == APM_AC_ONLINE)
+	    || (apm_status == APM_BATTERY_STATUS_HIGH)
+	    || percent <= sharpsl_pm.battstat.mainbat_percent) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apm_status == APM_BATTERY_STATUS_HIGH'
#927: FILE: arch/arm/mach-pxa/sharpsl_pm.c:171:
+	if ((sharpsl_pm.battstat.ac_status == APM_AC_ONLINE)
+	    || (apm_status == APM_BATTERY_STATUS_HIGH)
+	    || percent <= sharpsl_pm.battstat.mainbat_percent) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#928: FILE: arch/arm/mach-pxa/sharpsl_pm.c:172:
+	if ((sharpsl_pm.battstat.ac_status == APM_AC_ONLINE)
+	    || (apm_status == APM_BATTERY_STATUS_HIGH)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#929: FILE: arch/arm/mach-pxa/sharpsl_pm.c:173:
+	    || (apm_status == APM_BATTERY_STATUS_HIGH)
+	    || percent <= sharpsl_pm.battstat.mainbat_percent) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#939: FILE: arch/arm/mach-pxa/sharpsl_pm.c:185:
 	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+	    && ((sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#940: FILE: arch/arm/mach-pxa/sharpsl_pm.c:186:
+	    && ((sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW)
+	    || (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#950: FILE: arch/arm/mach-pxa/sharpsl_pm.c:199:
 	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+	     && (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#951: FILE: arch/arm/mach-pxa/sharpsl_pm.c:200:
+	     && (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL)
+	     && !(sharpsl_pm.flags & SHARPSL_APM_QUEUED)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#987: FILE: arch/arm/mach-pxa/sharpsl_pm.c:380:
+		for (i = 0; i < (SHARPSL_CNV_VALUE_NUM-1); i++)
 		                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1034: FILE: arch/arm/mach-pxa/sharpsl_pm.c:424:
+	return sum/3;
 	          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1054: FILE: arch/arm/mach-pxa/sharpsl_pm.c:444:
+	/* FIXME: this should catch battery read errors, but we should
+	   probably avoid charging in <0C temperatures, too. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1054: FILE: arch/arm/mach-pxa/sharpsl_pm.c:444:
+	   probably avoid charging in <0C temperatures, too. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val < 0'
#1055: FILE: arch/arm/mach-pxa/sharpsl_pm.c:445:
+	if ((val < 0) || (val > sharpsl_pm.machinfo->charge_on_temp)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > sharpsl_pm.machinfo->charge_on_temp'
#1055: FILE: arch/arm/mach-pxa/sharpsl_pm.c:445:
+	if ((val < 0) || (val > sharpsl_pm.machinfo->charge_on_temp)) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1097: FILE: arch/arm/mach-pxa/sharpsl_pm.c:536:
+	dev_dbg(sharpsl_pm.dev, "Offline Charge Activate = %d\n", sharpsl_pm.flags & SHARPSL_DO_OFFLINE_CHRG);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1121: FILE: arch/arm/mach-pxa/sharpsl_pm.c:568:
 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: arch/arm/mach-pxa/sharpsl_pm.c:574:
+  return 0;$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1130: FILE: arch/arm/mach-pxa/sharpsl_pm.c:575:
+	if (!sharpsl_pm.machinfo->should_wakeup(!(sharpsl_pm.flags & SHARPSL_ALARM_ACTIVE) && alarm_enable)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1146: FILE: arch/arm/mach-pxa/sharpsl_pm.c:608:
+	while (corgi_enter_suspend(alarm_time, alarm_status, state))
 		{}

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1216: FILE: arch/arm/mach-pxa/spitz.c:741:
+
+

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1319: FILE: arch/arm/mach-pxa/spitz_pm.c:126:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 54 warnings, 40 checks, 1255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
