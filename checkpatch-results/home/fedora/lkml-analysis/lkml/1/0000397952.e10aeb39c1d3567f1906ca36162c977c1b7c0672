WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
    * zero additional allocations in the common fast path (only one per node if

WARNING:TYPO_SPELLING: 'plugable' may be misspelled - perhaps 'pluggable'?
#37: 
    * plugable mapping algorithms
      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'valu' may be misspelled - perhaps 'value'?
#48: 
	checking return valu of processing functions. Non-blocking data 
	                ^^^^

WARNING:TYPO_SPELLING: 'plugable' may be misspelled - perhaps 'pluggable'?
#64: 
    * small, plugable architecture
             ^^^^^^^^

WARNING:TYPO_SPELLING: 'unlikley' may be misspelled - perhaps 'unlikely'?
#77: 
	unlikley that Reed-Solomon based will ever be used - it is too slow 
	^^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#122: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#127: FILE: drivers/block/dst/Kconfig:1:
+config DST
+	tristate "Distributed storage"
+	depends on NET
+	---help---
+	This driver allows to create a distributed storage.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#133: FILE: drivers/block/dst/Kconfig:7:
+config DST_ALG_LINEAR
+	tristate "Linear distribution algorithm"
+	depends on DST
+	---help---
+	This module allows to create linear mapping of the nodes
+	in the distributed storage.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#156: FILE: drivers/block/dst/alg_linear.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: drivers/block/dst/alg_linear.c:4:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'splitted' may be misspelled - perhaps 'split'?
#201: FILE: drivers/block/dst/alg_linear.c:46:
+ * which are splitted between nodes (part with local node destination
              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/block/dst/alg_linear.c:54:
+^I^Iprintk("%s: bio: %p, orig_bio: %p, size: %u, orig_size: %u.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#209: FILE: drivers/block/dst/alg_linear.c:54:
+		printk("%s: bio: %p, orig_bio: %p, size: %u, orig_size: %u.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/block/dst/alg_linear.c:55:
+		printk("%s: bio: %p, orig_bio: %p, size: %u, orig_size: %u.\n", 
+			__func__, bio, orig_bio, size, orig_bio->bi_size);

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: drivers/block/dst/alg_linear.c:79:
+		dprintk("%s: start: %llu, num: %d, idx: %d, offset: %u, "
+				"size: %llu, bi_idx: %d, bi_vcnt: %d.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/block/dst/alg_linear.c:80:
+^I^I^I__func__, req->start, req->num, req->idx, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/block/dst/alg_linear.c:83:
+^I^Iif (likely(bio->bi_idx == req->idx && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/block/dst/alg_linear.c:84:
+		if (likely(bio->bi_idx == req->idx && 
+					bio->bi_vcnt == req->num)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/block/dst/alg_linear.c:90:
+^I^I^Istruct bio *clone = bio_alloc_bioset(GFP_NOIO, $

WARNING:SPLIT_STRING: quoted string split across lines
#254: FILE: drivers/block/dst/alg_linear.c:99:
+			dprintk("%s: start: %llu, num: %d, idx: %d, "
+					"offset: %u, size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: drivers/block/dst/alg_linear.c:100:
+					"offset: %u, size: %llu, "
+					"bi_idx: %d, bi_vcnt: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/block/dst/alg_linear.c:101:
+^I^I^I^I__func__, req->start, req->num, req->idx, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/block/dst/alg_linear.c:102:
+^I^I^I^Ireq->offset, req->size, $

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#294: FILE: drivers/block/dst/alg_linear.c:139:
+	unsigned int bio_sectors = bio->bi_size>>9;
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/block/dst/alg_linear.c:150:
+^I^I^I^I"sector: %llu.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: drivers/block/dst/alg_linear.c:150:
+		dprintk("%s: failed to find a node for bio: %p, "
+				"sector: %llu.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/block/dst/alg_linear.c:156:
+^I^I^I__func__, bio->bi_sector, bio->bi_sector+bio_sectors, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/block/dst/alg_linear.c:156:
+	dprintk("%s: bio: %llu-%llu, dev: %llu-%llu, in sectors.\n",
+			__func__, bio->bi_sector, bio->bi_sector+bio_sectors, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#311: FILE: drivers/block/dst/alg_linear.c:156:
+			__func__, bio->bi_sector, bio->bi_sector+bio_sectors, 
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#312: FILE: drivers/block/dst/alg_linear.c:157:
+			n->start, n->start+n->size);
 			                  ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#319: FILE: drivers/block/dst/alg_linear.c:164:
+	req.flags = (test_bit(DST_NODE_FROZEN, &n->flags))?
 	                                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#320: FILE: drivers/block/dst/alg_linear.c:165:
+				DST_REQ_ALWAYS_QUEUE:0;
 				                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#346: FILE: drivers/block/dst/alg_linear.c:191:
+	for (i=0; i<cnt; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#346: FILE: drivers/block/dst/alg_linear.c:191:
+	for (i=0; i<cnt; ++i) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/block/dst/alg_linear.c:195:
+^I^I^Iunsigned int diff = req.size + bv->bv_len - $

WARNING:SPLIT_STRING: quoted string split across lines
#358: FILE: drivers/block/dst/alg_linear.c:203:
+			dprintk("%s: split: start: %llu/%llu, size: %llu, "
+					"total_size: %llu, diff: %u, idx: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: drivers/block/dst/alg_linear.c:204:
+					"total_size: %llu, diff: %u, idx: %d, "
+					"num: %d, bv_len: %u, bv_offset: %u.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/block/dst/alg_linear.c:205:
+^I^I^I^I^I__func__, start, req.start, req.size, $

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#375: FILE: drivers/block/dst/alg_linear.c:220:
+			req.flags = (test_bit(DST_NODE_FROZEN, &n->flags))?
 			                                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#376: FILE: drivers/block/dst/alg_linear.c:221:
+				DST_REQ_ALWAYS_QUEUE:0;
 				                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#377: FILE: drivers/block/dst/alg_linear.c:222:
+			req.orig_size = req.size = diff;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#388: FILE: drivers/block/dst/alg_linear.c:233:
+			dprintk("%s: next: start: %llu, size: %llu, "
+				"total_size: %llu, diff: %u, idx: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#389: FILE: drivers/block/dst/alg_linear.c:234:
+				"total_size: %llu, diff: %u, idx: %d, "
+				"num: %d, offset: %u, bv_len: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#390: FILE: drivers/block/dst/alg_linear.c:235:
+				"num: %d, offset: %u, bv_len: %u, "
+				"bv_offset: %u.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: drivers/block/dst/alg_linear.c:236:
+^I^I^I^I__func__, start, req.size, total_size, diff, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: drivers/block/dst/alg_linear.c:247:
+^I^I^I^I  "bio: %p, sector: %llu, start: %llu.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: drivers/block/dst/alg_linear.c:247:
+				dprintk("%s: failed to find a split node for "
+				  "bio: %p, sector: %llu, start: %llu.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/block/dst/alg_linear.c:248:
+^I^I^I^I^I^I__func__, bio, bio->bi_sector, $

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/block/dst/alg_linear.c:258:
+			dprintk("%s: req.start: %llu, start: %llu, "
+					"dev_start: %llu, dev_size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: drivers/block/dst/alg_linear.c:259:
+					"dev_start: %llu, dev_size: %llu, "
+					"rest_in_node: %llu.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: drivers/block/dst/alg_linear.c:260:
+^I^I^I^I__func__, req.start, start, n->start, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: drivers/block/dst/alg_linear.c:269:
+^I^I^I"total_size: %llu.\n", __func__, $

WARNING:SPLIT_STRING: quoted string split across lines
#424: FILE: drivers/block/dst/alg_linear.c:269:
+	dprintk("%s: last request: start: %llu, size: %llu, "
+			"total_size: %llu.\n", __func__, 

WARNING:SPLIT_STRING: quoted string split across lines
#430: FILE: drivers/block/dst/alg_linear.c:275:
+		dprintk("%s: last: start: %llu/%llu, size: %llu, "
+				"total_size: %llu, idx: %d, num: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: drivers/block/dst/alg_linear.c:276:
+^I^I^I__func__, start, req.start, req.size, $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#438: FILE: drivers/block/dst/alg_linear.c:283:
+			BUG_ON(total_size != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/block/dst/alg_linear.c:285:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#441: FILE: drivers/block/dst/alg_linear.c:286:
+			
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/block/dst/alg_linear.c:287:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: drivers/block/dst/alg_linear.c:293:
+ * Failover callback - it is invoked each time error happens during $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#459: FILE: drivers/block/dst/alg_linear.c:304:
+			if (err) {
[...]
+			} else {
[...]

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: drivers/block/dst/alg_linear.c:318:
+^I.add_node ^I= dst_linear_add_node,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#474: FILE: drivers/block/dst/alg_linear.c:319:
+^I.del_node ^I= dst_linear_del_node,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#479: FILE: drivers/block/dst/alg_linear.c:324:
+static int __devinit alg_linear_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#492: FILE: drivers/block/dst/alg_linear.c:337:
+static void __devexit alg_linear_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#510: FILE: drivers/block/dst/dcore.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: drivers/block/dst/dcore.c:4:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#577: FILE: drivers/block/dst/dcore.c:68:
+^I.name ^I^I= "dst",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#578: FILE: drivers/block/dst/dcore.c:69:
+^I.match ^I^I= &dst_dev_match,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#582: FILE: drivers/block/dst/dcore.c:73:
+^I.bus ^I^I= &dst_dev_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#583: FILE: drivers/block/dst/dcore.c:74:
+^I.release ^I= &dst_dev_release$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#591: FILE: drivers/block/dst/dcore.c:82:
+^I.release ^I= &dst_node_release$

WARNING:TYPO_SPELLING: 'spcific' may be misspelled - perhaps 'specific'?
#596: FILE: drivers/block/dst/dcore.c:87:
+ * It calls algorithm spcific remapping code only.
                       ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/block/dst/dcore.c:94:
+^Idprintk("\n%s: start: st: %p, bio: %p, cnt: %u.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: drivers/block/dst/dcore.c:95:
+	dprintk("\n%s: start: st: %p, bio: %p, cnt: %u.\n", 
+			__func__, st, bio, bio->bi_vcnt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/block/dst/dcore.c:99:
+^Idprintk("%s: end: st: %p, bio: %p, err: %d.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/block/dst/dcore.c:100:
+	dprintk("%s: end: st: %p, bio: %p, err: %d.\n", 
+			__func__, st, bio, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: drivers/block/dst/dcore.c:103:
+^I^Iprintk("%s: remap failed: bio: %p, err: %d.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#612: FILE: drivers/block/dst/dcore.c:103:
+		printk("%s: remap failed: bio: %p, err: %d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/block/dst/dcore.c:104:
+		printk("%s: remap failed: bio: %p, err: %d.\n", 
+				__func__, bio, err);

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#628: FILE: drivers/block/dst/dcore.c:119:
+static struct block_device_operations dst_blk_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/block/dst/dcore.c:141:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#661: FILE: drivers/block/dst/dcore.c:152:
+^Isnprintf(st->disk->disk_name, sizeof(st->disk->disk_name), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: drivers/block/dst/dcore.c:153:
+	snprintf(st->disk->disk_name, sizeof(st->disk->disk_name), 
+			"dst-%s-%d", st->name, st->disk->first_minor);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: drivers/block/dst/dcore.c:173:
+static ssize_t dst_name_show(struct device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: drivers/block/dst/dcore.c:174:
+static ssize_t dst_name_show(struct device *dev, 
+		struct device_attribute *attr, char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: drivers/block/dst/dcore.c:189:
+^I^Idprintk("%s: n: %p, start: %llu, size: %llu.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: drivers/block/dst/dcore.c:190:
+		dprintk("%s: n: %p, start: %llu, size: %llu.\n", 
+				__func__, n, n->start, n->size);

WARNING:TYPO_SPELLING: 'syfs' may be misspelled - perhaps 'sysfs'?
#707: FILE: drivers/block/dst/dcore.c:198:
+ * Shows node layout in syfs.
                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: drivers/block/dst/dcore.c:200:
+static ssize_t dst_nodes_show(struct device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: drivers/block/dst/dcore.c:201:
+static ssize_t dst_nodes_show(struct device *dev, 
+		struct device_attribute *attr, char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#722: FILE: drivers/block/dst/dcore.c:213:
+^Ifor (rb_node = rb_first(&st->tree_root); rb_node; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: drivers/block/dst/dcore.c:224:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: drivers/block/dst/dcore.c:237:
+static ssize_t dst_alg_show(struct device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: drivers/block/dst/dcore.c:238:
+static ssize_t dst_alg_show(struct device *dev, 
+		struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#750: FILE: drivers/block/dst/dcore.c:241:
+	struct dst_storage *st = container_of(dev, struct dst_storage, device);
+	return sprintf(buf, "%s\n", st->alg->name);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: drivers/block/dst/dcore.c:248:
+static ssize_t dst_remove_nodes(struct device *dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: drivers/block/dst/dcore.c:249:
+^I^Istruct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: drivers/block/dst/dcore.c:249:
+static ssize_t dst_remove_nodes(struct device *dev, 
+		struct device_attribute *attr, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#762: FILE: drivers/block/dst/dcore.c:253:
+	struct dst_storage *st = container_of(dev, struct dst_storage, device);
+	dst_remove_all_nodes(st);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_name_show' to 'name_show'
#764: FILE: drivers/block/dst/dcore.c:255:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_nodes_show' to 'nodes_show'
#767: FILE: drivers/block/dst/dcore.c:258:
+static DEVICE_ATTR(nodes, 0444, dst_nodes_show, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_alg_show' to 'alg_show'
#768: FILE: drivers/block/dst/dcore.c:259:
+static DEVICE_ATTR(alg, 0444, dst_alg_show, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_remove_nodes' to 'remove_all_nodes_store'
#769: FILE: drivers/block/dst/dcore.c:260:
+static DEVICE_ATTR(remove_all_nodes, 0644, NULL, dst_remove_nodes);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#822: FILE: drivers/block/dst/dcore.c:313:
+static ssize_t dst_show_start(struct device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: drivers/block/dst/dcore.c:314:
+static ssize_t dst_show_start(struct device *dev, 
+		struct device_attribute *attr, char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: drivers/block/dst/dcore.c:321:
+static ssize_t dst_show_size(struct device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: drivers/block/dst/dcore.c:322:
+static ssize_t dst_show_size(struct device *dev, 
+		struct device_attribute *attr, char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: drivers/block/dst/dcore.c:333:
+static ssize_t dst_show_type(struct device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: drivers/block/dst/dcore.c:334:
+static ssize_t dst_show_type(struct device *dev, 
+		struct device_attribute *attr, char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: drivers/block/dst/dcore.c:345:
+^I^Ireturn sprintf(buf, "L: %d:%d\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/block/dst/dcore.c:354:
+^I^Ireturn sprintf(buf, "R: %u.%u.%u.%u:%d\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#863: FILE: drivers/block/dst/dcore.c:354:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&addr;
+		return sprintf(buf, "R: %u.%u.%u.%u:%d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: drivers/block/dst/dcore.c:358:
+^I^Ireturn sprintf(buf, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#867: FILE: drivers/block/dst/dcore.c:358:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&addr;
+		return sprintf(buf, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: drivers/block/dst/dcore.c:359:
+^I^I^I"R: %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d\n", $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_show_start' to 'start_show'
#872: FILE: drivers/block/dst/dcore.c:363:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_show_size' to 'size_show'
#875: FILE: drivers/block/dst/dcore.c:366:
+static DEVICE_ATTR(size, 0444, dst_show_size, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_show_type' to 'type_show'
#876: FILE: drivers/block/dst/dcore.c:367:
+static DEVICE_ATTR(type, 0444, dst_show_type, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: drivers/block/dst/dcore.c:402:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: drivers/block/dst/dcore.c:403:
+^Isnprintf(n->device.bus_id, sizeof(n->device.bus_id), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: drivers/block/dst/dcore.c:404:
+	snprintf(n->device.bus_id, sizeof(n->device.bus_id), 
+			"n-%llu", n->start);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: drivers/block/dst/dcore.c:420:
+ * Gets a reference for given storage, if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: drivers/block/dst/dcore.c:421:
+ * storage with given name and algorithm being used $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct dst_storage)...)
#952: FILE: drivers/block/dst/dcore.c:443:
+	st = kzalloc(sizeof(struct dst_storage), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: drivers/block/dst/dcore.c:448:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: drivers/block/dst/dcore.c:449:
+^I * One for storage itself, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: drivers/block/dst/dcore.c:481:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*alg)...) over kzalloc(sizeof(struct dst_alg)...)
#1009: FILE: drivers/block/dst/dcore.c:500:
+	alg = kzalloc(sizeof(struct dst_alg), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: drivers/block/dst/dcore.c:528:
+^Idprintk("%s: alg: %p, refcnt: %d.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/block/dst/dcore.c:529:
+	dprintk("%s: alg: %p, refcnt: %d.\n", 
+			__func__, alg, atomic_read(&alg->refcnt));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1056: FILE: drivers/block/dst/dcore.c:547:
+EXPORT_SYMBOL_GPL(dst_remove_alg);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1072: FILE: drivers/block/dst/dcore.c:563:
+	BUG_ON(rb_first(&st->tree_root) != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb_first"
#1072: FILE: drivers/block/dst/dcore.c:563:
+	BUG_ON(rb_first(&st->tree_root) != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1080: FILE: drivers/block/dst/dcore.c:571:
+^Idprintk("%s: st: %p, refcnt: %d.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: drivers/block/dst/dcore.c:572:
+	dprintk("%s: st: %p, refcnt: %d.\n", 
+			__func__, st, atomic_read(&st->refcnt));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: drivers/block/dst/dcore.c:579:
+^Idprintk("%s: node: %p, start: %llu, size: %llu, refcnt: %d.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: drivers/block/dst/dcore.c:580:
+^I^I^I__func__, n, n->start, n->size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1089: FILE: drivers/block/dst/dcore.c:580:
+	dprintk("%s: node: %p, start: %llu, size: %llu, refcnt: %d.\n", 
+			__func__, n, n->start, n->size, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: drivers/block/dst/dcore.c:582:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: drivers/block/dst/dcore.c:585:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: drivers/block/dst/dcore.c:587:
+^I^I^I^I"refcnt: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1096: FILE: drivers/block/dst/dcore.c:587:
+		dprintk("%s: freeing node: %p, start: %llu, size: %llu, "
+				"refcnt: %d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: drivers/block/dst/dcore.c:588:
+^I^I^I^I__func__, n, n->start, n->size, $

WARNING:REPEATED_WORD: Possible repeated word: 'of'
#1116: FILE: drivers/block/dst/dcore.c:607:
+ * Tree of of the nodes, which form the storage.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1130: FILE: drivers/block/dst/dcore.c:621:
+^I^Idprintk("%s: tree: %llu-%llu, new: %llu.\n", $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1131: FILE: drivers/block/dst/dcore.c:622:
+			__func__, dn->start, dn->start+dn->size, start);
 			                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1132: FILE: drivers/block/dst/dcore.c:623:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1136: FILE: drivers/block/dst/dcore.c:627:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1177: FILE: drivers/block/dst/dcore.c:668:
+^I^Idprintk("%s: tree: %llu-%llu, new: %llu.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1178: FILE: drivers/block/dst/dcore.c:669:
+^I^I^I^I__func__, dn->start, dn->start+dn->size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/block/dst/dcore.c:669:
+		dprintk("%s: tree: %llu-%llu, new: %llu.\n", 
+				__func__, dn->start, dn->start+dn->size, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1178: FILE: drivers/block/dst/dcore.c:669:
+				__func__, dn->start, dn->start+dn->size, 
 				                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1200: FILE: drivers/block/dst/dcore.c:691:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1203: FILE: drivers/block/dst/dcore.c:694:
+	err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1207: FILE: drivers/block/dst/dcore.c:698:
+	inode = nd.dentry->d_inode;
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1221: FILE: drivers/block/dst/dcore.c:712:
+	path_release(&nd);
 	              ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1254: FILE: drivers/block/dst/dcore.c:745:
+static int dst_setup_local(struct dst_node *n, struct dst_ctl *ctl, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: drivers/block/dst/dcore.c:746:
+static int dst_setup_local(struct dst_node *n, struct dst_ctl *ctl, 
+		struct dst_local_ctl *l)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1264: FILE: drivers/block/dst/dcore.c:755:
+	n->bdev = open_by_devnum(dev, FMODE_READ|FMODE_WRITE);
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: drivers/block/dst/dcore.c:765:
+static int dst_setup_local_export(struct dst_node *n, struct dst_ctl *ctl, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1275: FILE: drivers/block/dst/dcore.c:766:
+static int dst_setup_local_export(struct dst_node *n, struct dst_ctl *ctl, 
+		struct dst_local_export_ctl *le)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1348: FILE: drivers/block/dst/dcore.c:839:
+static int dst_setup_remote(struct dst_node *n, struct dst_ctl *ctl, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: drivers/block/dst/dcore.c:840:
+static int dst_setup_remote(struct dst_node *n, struct dst_ctl *ctl, 
+		struct dst_remote_ctl *r)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1358: FILE: drivers/block/dst/dcore.c:849:
+^Isock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1358: FILE: drivers/block/dst/dcore.c:849:
+	sock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: drivers/block/dst/dcore.c:852:
+^Ierr = sock->ops->connect(sock, (struct sockaddr *)&r->addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: drivers/block/dst/dcore.c:884:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: drivers/block/dst/dcore.c:908:
+static struct dst_node *dst_alloc_node(struct dst_ctl *ctl, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1418: FILE: drivers/block/dst/dcore.c:909:
+static struct dst_node *dst_alloc_node(struct dst_ctl *ctl, 
+		void (*cleanup)(struct dst_node *))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n)...) over kzalloc(sizeof(struct dst_node)...)
#1427: FILE: drivers/block/dst/dcore.c:918:
+	n = kzalloc(sizeof(struct dst_node), GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1502: FILE: drivers/block/dst/dcore.c:993:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1578: FILE: drivers/block/dst/dcore.c:1069:
+^I^Idprintk("%s: STARTED st: %p, disk_size: %llu.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1579: FILE: drivers/block/dst/dcore.c:1070:
+		dprintk("%s: STARTED st: %p, disk_size: %llu.\n", 
+				__func__, st, st->disk_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1631: FILE: drivers/block/dst/dcore.c:1122:
+static int dst_ioctl(struct inode *inode, struct file *file, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1632: FILE: drivers/block/dst/dcore.c:1123:
+static int dst_ioctl(struct inode *inode, struct file *file, 
+		unsigned int command, unsigned long data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: drivers/block/dst/dcore.c:1130:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1660: FILE: drivers/block/dst/dcore.c:1151:
+^I.minor ^I^I= MISC_DYNAMIC_MINOR,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1661: FILE: drivers/block/dst/dcore.c:1152:
+^I.name  ^I^I= DST_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1662: FILE: drivers/block/dst/dcore.c:1153:
+^I.fops  ^I^I= &dst_fops$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1675: FILE: drivers/block/dst/dcore.c:1166:
+static int __devinit dst_sys_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1678: FILE: drivers/block/dst/dcore.c:1169:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1680: FILE: drivers/block/dst/dcore.c:1171:
+	dst_request_cache = kmem_cache_create("dst", sizeof(struct dst_request),
+				       0, 0, NULL, NULL);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1717: FILE: drivers/block/dst/dcore.c:1208:
+static void __devexit dst_sys_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1738: FILE: drivers/block/dst/kst.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1741: FILE: drivers/block/dst/kst.c:4:
+ * $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1768: FILE: drivers/block/dst/kst.c:31:
+struct kst_poll_helper
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1769: FILE: drivers/block/dst/kst.c:32:
+^Ipoll_table ^I^Ipt;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1779: FILE: drivers/block/dst/kst.c:42:
+static int kst_sock_create(struct kst_state *st, struct saddr *addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1780: FILE: drivers/block/dst/kst.c:43:
+static int kst_sock_create(struct kst_state *st, struct saddr *addr, 
+		int type, int proto, int backlog)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1788: FILE: drivers/block/dst/kst.c:51:
+^Ierr = st->socket->ops->bind(st->socket, (struct sockaddr *)addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1829: FILE: drivers/block/dst/kst.c:92:
+static int kst_state_wake_callback(wait_queue_t *wait, unsigned mode, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1829: FILE: drivers/block/dst/kst.c:92:
+static int kst_state_wake_callback(wait_queue_t *wait, unsigned mode, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1830: FILE: drivers/block/dst/kst.c:93:
+static int kst_state_wake_callback(wait_queue_t *wait, unsigned mode, 
+		int sync, void *key)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1833: FILE: drivers/block/dst/kst.c:96:
+	struct kst_state *st = container_of(wait, struct kst_state, wait);
+	kst_wake(st);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1838: FILE: drivers/block/dst/kst.c:101:
+static void kst_queue_func(struct file *file, wait_queue_head_t *whead,
+				 poll_table *pt)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1870: FILE: drivers/block/dst/kst.c:133:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1872: FILE: drivers/block/dst/kst.c:135:
+^I^Ireq = list_entry(st->request_list.next, struct dst_request, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1873: FILE: drivers/block/dst/kst.c:136:
+		req = list_entry(st->request_list.next, struct dst_request, 
+				request_list_entry);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1892: FILE: drivers/block/dst/kst.c:155:
+static inline int dst_compare_request_id(struct dst_request *old, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1893: FILE: drivers/block/dst/kst.c:156:
+static inline int dst_compare_request_id(struct dst_request *old, 
+		struct dst_request *new)

WARNING:SPLIT_STRING: quoted string split across lines
#1903: FILE: drivers/block/dst/kst.c:166:
+	dprintk("%s: old: op: %lu, start: %llu, size: %llu, off: %u, "
+		"new: op: %lu, start: %llu, size: %llu, off: %u, cmp: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1904: FILE: drivers/block/dst/kst.c:167:
+^I^I__func__, bio_rw(old->bio), old->start, old->orig_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1906: FILE: drivers/block/dst/kst.c:169:
+^I^Ibio_rw(new->bio), new->start, new->orig_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1953: FILE: drivers/block/dst/kst.c:216:
+^Idprintk("%s: bio: %p, size: %u, idx: %d, num: %d.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1954: FILE: drivers/block/dst/kst.c:217:
+^I^I^I__func__, bio, bio->bi_size, bio->bi_idx, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1954: FILE: drivers/block/dst/kst.c:217:
+	dprintk("%s: bio: %p, size: %u, idx: %d, num: %d.\n", 
+			__func__, bio, bio->bi_size, bio->bi_idx, 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1970: FILE: drivers/block/dst/kst.c:233:
+		printk("%s: freeing bio: %p, req: %p, size: %llu, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1971: FILE: drivers/block/dst/kst.c:234:
+^I^I^I"orig_size: %llu, bi_size: %u, err: %d, flags: %u.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1971: FILE: drivers/block/dst/kst.c:234:
+		printk("%s: freeing bio: %p, req: %p, size: %llu, "
+			"orig_size: %llu, bi_size: %u, err: %d, flags: %u.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1972: FILE: drivers/block/dst/kst.c:235:
+^I^I^I__func__, req->bio, req, req->size, req->orig_size, $

CHECK:BRACES: braces {} should be used on all arms of this statement
#1976: FILE: drivers/block/dst/kst.c:239:
+		if (req->flags & DST_REQ_EXPORT_WRITE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1979: FILE: drivers/block/dst/kst.c:242:
+		} else

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#1982: FILE: drivers/block/dst/kst.c:245:
+		bio_endio(req->bio, req->orig_size, (err)?-EIO:0);
 		                                         ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1982: FILE: drivers/block/dst/kst.c:245:
+		bio_endio(req->bio, req->orig_size, (err)?-EIO:0);
 		                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1982: FILE: drivers/block/dst/kst.c:245:
+		bio_endio(req->bio, req->orig_size, (err)?-EIO:0);
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1984: FILE: drivers/block/dst/kst.c:247:
+^Idprintk("%s: free req: %p, pool: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1985: FILE: drivers/block/dst/kst.c:248:
+	dprintk("%s: free req: %p, pool: %p.\n", 
+			__func__, req, req->state->w->req_pool);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2013: FILE: drivers/block/dst/kst.c:276:
+struct kst_state *kst_state_init(struct kst_worker *w, struct dst_node *node, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2014: FILE: drivers/block/dst/kst.c:277:
+struct kst_state *kst_state_init(struct kst_worker *w, struct dst_node *node, 
+		struct kst_state_ops *ops, void *data)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct kst_state)...)
#2019: FILE: drivers/block/dst/kst.c:282:
+	st = kzalloc(sizeof(struct kst_state), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#2070: FILE: drivers/block/dst/kst.c:333:
+ * callbacks in case of errors or successfull operation finish.
                                   ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2092: FILE: drivers/block/dst/kst.c:355:
+^Ilist_for_each_entry_safe(req, tmp, &st->request_list, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2093: FILE: drivers/block/dst/kst.c:356:
+	list_for_each_entry_safe(req, tmp, &st->request_list, 
+			request_list_entry) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2095: FILE: drivers/block/dst/kst.c:358:
+^I^Irevents = st->socket->ops->poll(st->socket->file, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2101: FILE: drivers/block/dst/kst.c:364:
+^I^Idprintk("%s: callback returned, st: %p, err: %d.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2102: FILE: drivers/block/dst/kst.c:365:
+		dprintk("%s: callback returned, st: %p, err: %d.\n", 
+				__func__, st, err);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'st != st->node->state'
#2111: FILE: drivers/block/dst/kst.c:374:
+		if (err && (st != st->node->state)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2112: FILE: drivers/block/dst/kst.c:375:
+^I^I^Idprintk("%s: err: %d, st: %p, node->state: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2113: FILE: drivers/block/dst/kst.c:376:
+			dprintk("%s: err: %d, st: %p, node->state: %p.\n", 
+					__func__, err, st, st->node->state);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2115: FILE: drivers/block/dst/kst.c:378:
+^I^I^I * Accepted client has state not related to storage $

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#2116: FILE: drivers/block/dst/kst.c:379:
+			 * node, so it must be freed explicitely.
 			                             ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2143: FILE: drivers/block/dst/kst.c:406:
+^I^Iwait_event_interruptible_timeout(w->wait, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2144: FILE: drivers/block/dst/kst.c:407:
+^I^I^I^I!list_empty(&w->ready_list) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2144: FILE: drivers/block/dst/kst.c:407:
+		wait_event_interruptible_timeout(w->wait, 
+				!list_empty(&w->ready_list) || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2145: FILE: drivers/block/dst/kst.c:408:
+^I^I^I^Ikthread_should_stop(), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2151: FILE: drivers/block/dst/kst.c:414:
+^I^I^Ist = list_entry(w->ready_list.next, struct kst_state, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2167: FILE: drivers/block/dst/kst.c:430:
+ * Worker initialization - this object will host andprocess all states, $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*w)...) over kzalloc(sizeof(struct kst_worker)...)
#2175: FILE: drivers/block/dst/kst.c:438:
+	w = kzalloc(sizeof(struct kst_worker), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2253: FILE: drivers/block/dst/kst.c:516:
+static int kst_data_send_header(struct kst_state *st, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2254: FILE: drivers/block/dst/kst.c:517:
+static int kst_data_send_header(struct kst_state *st, 
+		struct dst_remote_request *r)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2277: FILE: drivers/block/dst/kst.c:540:
+static int kst_data_recv_bio_vec(struct kst_state *st, struct bio_vec *bv, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2278: FILE: drivers/block/dst/kst.c:541:
+static int kst_data_recv_bio_vec(struct kst_state *st, struct bio_vec *bv, 
+		unsigned int offset, unsigned int size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2298: FILE: drivers/block/dst/kst.c:561:
+^Ierr = kernel_recvmsg(st->socket, &msg, &iov, 1, iov.iov_len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2299: FILE: drivers/block/dst/kst.c:562:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1, iov.iov_len, 
+			msg.msg_flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2309: FILE: drivers/block/dst/kst.c:572:
+static int kst_data_send_bio_vec(struct kst_state *st, struct bio_vec *bv, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2310: FILE: drivers/block/dst/kst.c:573:
+static int kst_data_send_bio_vec(struct kst_state *st, struct bio_vec *bv, 
+		unsigned int offset, unsigned int size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2312: FILE: drivers/block/dst/kst.c:575:
+^Ireturn kernel_sendpage(st->socket, bv->bv_page, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2313: FILE: drivers/block/dst/kst.c:576:
+^I^I^Ibv->bv_offset + offset, size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2317: FILE: drivers/block/dst/kst.c:580:
+typedef int (*kst_data_process_bio_vec_t)(struct kst_state *st, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2321: FILE: drivers/block/dst/kst.c:584:
+ * @req: processing request. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2326: FILE: drivers/block/dst/kst.c:589:
+ * In case of errors negative return value is returned and @size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2328: FILE: drivers/block/dst/kst.c:591:
+ * - number of bytes not yet processed (i.e. the rest of the bytes to be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2357: FILE: drivers/block/dst/kst.c:620:
+^I^I^I"size: %llu, offset: %u.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2357: FILE: drivers/block/dst/kst.c:620:
+	dprintk("%s: start: [%c], start: %llu, idx: %d, num: %d, "
+			"size: %llu, offset: %u.\n", 

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2358: FILE: drivers/block/dst/kst.c:621:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2358: FILE: drivers/block/dst/kst.c:621:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2366: FILE: drivers/block/dst/kst.c:629:
+		BUG_ON(cur_size == 0);

WARNING:SPLIT_STRING: quoted string split across lines
#2376: FILE: drivers/block/dst/kst.c:639:
+				dprintk("%s: %d/%d: header: start: %llu, "
+					"bv_offset: %u, bv_len: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#2377: FILE: drivers/block/dst/kst.c:640:
+					"bv_offset: %u, bv_len: %u, "
+					"a offset: %u, offset: %u, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2378: FILE: drivers/block/dst/kst.c:641:
+^I^I^I^I^I"cur_size: %u, err: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2378: FILE: drivers/block/dst/kst.c:641:
+					"a offset: %u, offset: %u, "
+					"cur_size: %u, err: %d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2379: FILE: drivers/block/dst/kst.c:642:
+^I^I^I^I^I__func__, req->idx, req->num, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2380: FILE: drivers/block/dst/kst.c:643:
+^I^I^I^I^Ireq->start, bv->bv_offset, bv->bv_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2381: FILE: drivers/block/dst/kst.c:644:
+^I^I^I^I^Ibv->bv_offset + req->offset, $

WARNING:SPLIT_STRING: quoted string split across lines
#2401: FILE: drivers/block/dst/kst.c:664:
+			dprintk("%s: %d/%d: this: start: %llu, bv_offset: %u, "
+				"bv_len: %u, a offset: %u, offset: %u, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2402: FILE: drivers/block/dst/kst.c:665:
+^I^I^I^I"cur_size: %u, err: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2402: FILE: drivers/block/dst/kst.c:665:
+				"bv_len: %u, a offset: %u, offset: %u, "
+				"cur_size: %u, err: %d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2404: FILE: drivers/block/dst/kst.c:667:
+^I^I^I^Ibv->bv_offset, bv->bv_len, $

CHECK:BRACES: braces {} should be used on all arms of this statement
#2415: FILE: drivers/block/dst/kst.c:678:
+	if (err <= 0 && err != -EAGAIN) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2418: FILE: drivers/block/dst/kst.c:681:
+	} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2421: FILE: drivers/block/dst/kst.c:684:
+	if (req->size) {
[...]
+	} else if (partial) {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2429: FILE: drivers/block/dst/kst.c:692:
+^I^I^I^I"size: %llu, err: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2429: FILE: drivers/block/dst/kst.c:692:
+		dprintk("%s: return: idx: %d, num: %d, offset: %u, "
+				"size: %llu, err: %d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2430: FILE: drivers/block/dst/kst.c:693:
+^I^I^I__func__, req->idx, req->num, req->offset, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2434: FILE: drivers/block/dst/kst.c:697:
+^I^I^I"size: %llu, offset: %u.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2434: FILE: drivers/block/dst/kst.c:697:
+	dprintk("%s: end: start: %llu, idx: %d, num: %d, "
+			"size: %llu, offset: %u.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2435: FILE: drivers/block/dst/kst.c:698:
+^I^I__func__, req->start, req->idx, req->num, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2438: FILE: drivers/block/dst/kst.c:701:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2448: FILE: drivers/block/dst/kst.c:711:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2450: FILE: drivers/block/dst/kst.c:713:
+^I^I^I"revents: %x, flags: %x.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2450: FILE: drivers/block/dst/kst.c:713:
+	dprintk("%s: req: %p, num: %d, idx: %d, bio: %p, "
+			"revents: %x, flags: %x.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2451: FILE: drivers/block/dst/kst.c:714:
+^I^I^I__func__, req, req->num, req->idx, req->bio, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2462: FILE: drivers/block/dst/kst.c:725:
+^I^Idprintk("%s: complete: req: %p, bio: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2463: FILE: drivers/block/dst/kst.c:726:
+		dprintk("%s: complete: req: %p, bio: %p.\n", 
+				__func__, req, req->bio);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2485: FILE: drivers/block/dst/kst.c:748:
+ * kst_congestion - checks for data congestion, i.e. the case, when given $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2486: FILE: drivers/block/dst/kst.c:749:
+ * ^Iblock request crosses an area of the another block request which$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2487: FILE: drivers/block/dst/kst.c:750:
+ * ^Iis not yet sent to the remote node.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2492: FILE: drivers/block/dst/kst.c:755:
+ * %KST_CONG_COMPLETED  - congestion was found and processed, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2493: FILE: drivers/block/dst/kst.c:756:
+ * ^Ibio must be ended, request is completed.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2494: FILE: drivers/block/dst/kst.c:757:
+ * %KST_CONG_NOT_FOUND  - no congestion found, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2495: FILE: drivers/block/dst/kst.c:758:
+ * ^Irequest must be processed as usual$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2496: FILE: drivers/block/dst/kst.c:759:
+ * %KST_CONG_QUEUE - congestion has been found, but bio is not completed, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2497: FILE: drivers/block/dst/kst.c:760:
+ * ^Inew request must be allocated and processed.$

CHECK:BRACES: braces {} should be used on all arms of this statement
#2510: FILE: drivers/block/dst/kst.c:773:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2514: FILE: drivers/block/dst/kst.c:777:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2522: FILE: drivers/block/dst/kst.c:785:
+^I$

WARNING:SPLIT_STRING: quoted string split across lines
#2524: FILE: drivers/block/dst/kst.c:787:
+	dprintk("%s: old: op: %lu, start: %llu, size: %llu, off: %u, "
+			"new: op: %lu, start: %llu, size: %llu, off: %u.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2525: FILE: drivers/block/dst/kst.c:788:
+^I^I__func__, bio_rw(old->bio), old->start, old->orig_size, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2529: FILE: drivers/block/dst/kst.c:792:
+	if ((bio_rw(old->bio) != WRITE) && (bio_rw(req->bio) != WRITE)) {
+		return KST_CONG_QUEUE;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2544: FILE: drivers/block/dst/kst.c:807:
+^I * part of the first one, but not now, consider this as a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2547: FILE: drivers/block/dst/kst.c:810:
+^Iif (src_req->start + src_req->orig_size < $

WARNING:TYPO_SPELLING: 'differnt' may be misspelled - perhaps 'different'?
#2552: FILE: drivers/block/dst/kst.c:815:
+	 * So, only process if new request is differnt from old one,
 	                                      ^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2558: FILE: drivers/block/dst/kst.c:821:
+	for (i=old->idx; i<old->num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2558: FILE: drivers/block/dst/kst.c:821:
+	for (i=old->idx; i<old->num; ++i) {
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2568: FILE: drivers/block/dst/kst.c:831:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2608: FILE: drivers/block/dst/kst.c:871:
+^Idprintk("%s: req: %p, new_req: %p, bio: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2609: FILE: drivers/block/dst/kst.c:872:
+	dprintk("%s: req: %p, new_req: %p, bio: %p.\n", 
+			__func__, req, new_req, req->bio);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2638: FILE: drivers/block/dst/kst.c:901:
+^Idprintk("%s: start: %llu, size: %llu, bio: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2639: FILE: drivers/block/dst/kst.c:902:
+	dprintk("%s: start: %llu, size: %llu, bio: %p.\n", 
+			__func__, req->start, req->size, req->bio);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2653: FILE: drivers/block/dst/kst.c:916:
+^I^I^Idprintk("%s: st: %p, bio: %p, revents: %x.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2654: FILE: drivers/block/dst/kst.c:917:
+			dprintk("%s: st: %p, bio: %p, revents: %x.\n", 
+					__func__, st, req->bio, revents);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2683: FILE: drivers/block/dst/kst.c:946:
+^I^Iprintk("%s: free req: %p, pool: %p.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2683: FILE: drivers/block/dst/kst.c:946:
+		printk("%s: free req: %p, pool: %p.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2684: FILE: drivers/block/dst/kst.c:947:
+		printk("%s: free req: %p, pool: %p.\n", 
+				__func__, new_req, st->w->req_pool);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2685: FILE: drivers/block/dst/kst.c:948:
+		printk("%s: free [%c], start: %llu, idx: %d, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2686: FILE: drivers/block/dst/kst.c:949:
+^I^I^I^I"num: %d, size: %llu, offset: %u, err: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2686: FILE: drivers/block/dst/kst.c:949:
+		printk("%s: free [%c], start: %llu, idx: %d, "
+				"num: %d, size: %llu, offset: %u, err: %d.\n", 

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2687: FILE: drivers/block/dst/kst.c:950:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2687: FILE: drivers/block/dst/kst.c:950:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2688: FILE: drivers/block/dst/kst.c:951:
+^I^I^Ireq->start, req->idx, req->num, req->size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2700: FILE: drivers/block/dst/kst.c:963:
+^I^Iprintk("%s: freeing bio: %p, bi_size: %u, orig_size: %llu.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2700: FILE: drivers/block/dst/kst.c:963:
+		printk("%s: freeing bio: %p, bi_size: %u, orig_size: %llu.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2701: FILE: drivers/block/dst/kst.c:964:
+		printk("%s: freeing bio: %p, bi_size: %u, orig_size: %llu.\n", 
+			__func__, req->bio, req->bio->bi_size, req->orig_size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2714: FILE: drivers/block/dst/kst.c:977:
+		printk("%s: [%c], start: %llu, idx: %d, num: %d, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2715: FILE: drivers/block/dst/kst.c:978:
+^I^I^I^I"size: %llu, offset: %u, err: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2715: FILE: drivers/block/dst/kst.c:978:
+		printk("%s: [%c], start: %llu, idx: %d, num: %d, "
+				"size: %llu, offset: %u, err: %d.\n", 

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2716: FILE: drivers/block/dst/kst.c:979:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2716: FILE: drivers/block/dst/kst.c:979:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2717: FILE: drivers/block/dst/kst.c:980:
+^I^I^Ireq->start, req->idx, req->num, req->size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2723: FILE: drivers/block/dst/kst.c:986:
+/* $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2735: FILE: drivers/block/dst/kst.c:998:
+	st->socket->sk->sk_sndbuf = st->socket->sk->sk_sndbuf = 1024*1024*10;
 	                                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2735: FILE: drivers/block/dst/kst.c:998:
+	st->socket->sk->sk_sndbuf = st->socket->sk->sk_sndbuf = 1024*1024*10;
 	                                                                 ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2735: FILE: drivers/block/dst/kst.c:998:
+	st->socket->sk->sk_sndbuf = st->socket->sk->sk_sndbuf = 1024*1024*10;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2756: FILE: drivers/block/dst/kst.c:1019:
+^I^I^I^I"to recover from error %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2756: FILE: drivers/block/dst/kst.c:1019:
+		dprintk("%s: state %p does not know how "
+				"to recover from error %d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2760: FILE: drivers/block/dst/kst.c:1023:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2761: FILE: drivers/block/dst/kst.c:1024:
+^Ierr = sock_create(st->socket->ops->family, st->socket->type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2762: FILE: drivers/block/dst/kst.c:1025:
+	err = sock_create(st->socket->ops->family, st->socket->type, 
+			st->socket->sk->sk_protocol, &sock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2766: FILE: drivers/block/dst/kst.c:1029:
+^Isock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2766: FILE: drivers/block/dst/kst.c:1029:
+	sock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo = 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2796: FILE: drivers/block/dst/kst.c:1059:
+	printk("%s: recovery completed.\n", __func__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2821: FILE: drivers/block/dst/kst.c:1084:
+^Idprintk("%s: bio: %p, size: %u, idx: %d, num: %d, err: %d.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2836: FILE: drivers/block/dst/kst.c:1099:
+^Idprintk("%s: bio: %p, req: %p, size: %u, idx: %d, num: %d, err: %d.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2837: FILE: drivers/block/dst/kst.c:1100:
+^I^I__func__, bio, req, bio->bi_size, bio->bi_idx, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2843: FILE: drivers/block/dst/kst.c:1106:
+	bio->bi_size = req->size = req->orig_size;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2885: FILE: drivers/block/dst/kst.c:1148:
+^Ierr = kernel_recvmsg(st->socket, &msg, &iov, 1, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2886: FILE: drivers/block/dst/kst.c:1149:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1, 
+			iov.iov_len, msg.msg_flags);

WARNING:SPLIT_STRING: quoted string split across lines
#2895: FILE: drivers/block/dst/kst.c:1158:
+	dprintk("\n%s: cmd: %u, sector: %llu, size: %u, "
+			"flags: %x, offset: %u.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2906: FILE: drivers/block/dst/kst.c:1169:
+^Iif ((signed)(r.sector + to_sector(r.size)) < 0 || $

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2906: FILE: drivers/block/dst/kst.c:1169:
+	if ((signed)(r.sector + to_sector(r.size)) < 0 || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2907: FILE: drivers/block/dst/kst.c:1170:
+^I^I^I(signed)(r.sector + to_sector(r.size)) > data_size || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2907: FILE: drivers/block/dst/kst.c:1170:
+	if ((signed)(r.sector + to_sector(r.size)) < 0 || 
+			(signed)(r.sector + to_sector(r.size)) > data_size || 

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2907: FILE: drivers/block/dst/kst.c:1170:
+			(signed)(r.sector + to_sector(r.size)) > data_size || 

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2908: FILE: drivers/block/dst/kst.c:1171:
+			(signed)r.sector > data_size)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2911: FILE: drivers/block/dst/kst.c:1174:
+	nr = r.size/PAGE_SIZE + 1;
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2923: FILE: drivers/block/dst/kst.c:1186:
+^I^Idprintk("%s: alloc req: %p, pool: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2924: FILE: drivers/block/dst/kst.c:1187:
+		dprintk("%s: alloc req: %p, pool: %p.\n", 
+				__func__, req, st->w->req_pool);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2938: FILE: drivers/block/dst/kst.c:1201:
+^I^I * are reversed compared to usual nodes, since usual nodes $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2939: FILE: drivers/block/dst/kst.c:1202:
+^I^I * process remote data and local export node process remote $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2940: FILE: drivers/block/dst/kst.c:1203:
+^I^I * requests, so that writing data means sending data to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2943: FILE: drivers/block/dst/kst.c:1206:
+^I^I * So, to process writing to the exported node we need first to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2946: FILE: drivers/block/dst/kst.c:1209:
+^I^I * (WRITE command, so it will be changed before calling $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2966: FILE: drivers/block/dst/kst.c:1229:
+		for (i=0; i<nr_pages; ++i) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2966: FILE: drivers/block/dst/kst.c:1229:
+		for (i=0; i<nr_pages; ++i) {
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2975: FILE: drivers/block/dst/kst.c:1238:
+^I^I^I^I^I"err: %d.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#2975: FILE: drivers/block/dst/kst.c:1238:
+			dprintk("%s: %d/%d: page: %p, size: %u, offset: %u, "
+					"err: %d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2976: FILE: drivers/block/dst/kst.c:1239:
+^I^I^I^I^I__func__, i, nr_pages, page, size, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3000: FILE: drivers/block/dst/kst.c:1263:
+		req->size = req->orig_size = bio->bi_size;

WARNING:SPLIT_STRING: quoted string split across lines
#3006: FILE: drivers/block/dst/kst.c:1269:
+		dprintk("%s: submitting: bio: %p, req: %p, start: %llu, "
+			"size: %llu, idx: %d, num: %d, offset: %u, err: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3007: FILE: drivers/block/dst/kst.c:1270:
+^I^I^I__func__, bio, req, req->start, req->size, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3014: FILE: drivers/block/dst/kst.c:1277:
+		if (r.cmd == DST_READ) {
+			generic_make_request(bio);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3025: FILE: drivers/block/dst/kst.c:1288:
+^Idprintk("%s: free req: %p, pool: %p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3026: FILE: drivers/block/dst/kst.c:1289:
+	dprintk("%s: free req: %p, pool: %p.\n", 
+			__func__, req, st->w->req_pool);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3067: FILE: drivers/block/dst/kst.c:1330:
+^Ierr = sock_create(st->socket->ops->family, st->socket->type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3068: FILE: drivers/block/dst/kst.c:1331:
+	err = sock_create(st->socket->ops->family, st->socket->type, 
+			st->socket->sk->sk_protocol, &newsock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3084: FILE: drivers/block/dst/kst.c:1347:
+^I^Iprintk("%s: Client: %u.%u.%u.%u:%d.\n", __func__, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#3084: FILE: drivers/block/dst/kst.c:1347:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&addr;
+		printk("%s: Client: %u.%u.%u.%u:%d.\n", __func__, 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3084: FILE: drivers/block/dst/kst.c:1347:
+		printk("%s: Client: %u.%u.%u.%u:%d.\n", __func__, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3085: FILE: drivers/block/dst/kst.c:1348:
+		printk("%s: Client: %u.%u.%u.%u:%d.\n", __func__, 
+			NIPQUAD(sin->sin_addr.s_addr), ntohs(sin->sin_port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#3088: FILE: drivers/block/dst/kst.c:1351:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&addr;
+		printk("%s: Client: %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3088: FILE: drivers/block/dst/kst.c:1351:
+		printk("%s: Client: %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3089: FILE: drivers/block/dst/kst.c:1352:
+		printk("%s: Client: %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",
+			__func__, NIP6(sin->sin6_addr), ntohs(sin->sin6_port));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3113: FILE: drivers/block/dst/kst.c:1376:
+^Ierr = kst_sock_create(st, &le->rctl.addr, le->rctl.type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3114: FILE: drivers/block/dst/kst.c:1377:
+	err = kst_sock_create(st, &le->rctl.addr, le->rctl.type, 
+			le->rctl.proto, le->backlog);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3117: FILE: drivers/block/dst/kst.c:1380:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3134: FILE: drivers/block/dst/kst.c:1397:
+ * ^Ito remote node, which contain data.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3136: FILE: drivers/block/dst/kst.c:1399:
+ * ^Istorage's node connects to given node to get/put data.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3138: FILE: drivers/block/dst/kst.c:1401:
+ * ^Istate.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3145: FILE: drivers/block/dst/kst.c:1408:
+};
+static struct kst_state_ops kst_data_ops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3152: FILE: drivers/block/dst/kst.c:1415:
+struct kst_state *kst_listener_state_init(struct kst_worker *w, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3153: FILE: drivers/block/dst/kst.c:1416:
+struct kst_state *kst_listener_state_init(struct kst_worker *w, 
+		struct dst_node *node, struct dst_local_export_ctl *le)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3158: FILE: drivers/block/dst/kst.c:1421:
+struct kst_state *kst_data_state_init(struct kst_worker *w, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3159: FILE: drivers/block/dst/kst.c:1422:
+struct kst_state *kst_data_state_init(struct kst_worker *w, 
+		struct dst_node *node, struct socket *newsock)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3181: FILE: include/linux/dst.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3184: FILE: include/linux/dst.h:4:
+ * $

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#3209: FILE: include/linux/dst.h:29:
+	DST_ADD_LOCAL_EXPORT,		/* Add local node with given id to the storage to be exported and used by remote peers */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#3210: FILE: include/linux/dst.h:30:
+	DST_START_STORAGE,		/* Array is ready and storage can be started, if there will be new nodes

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#3211: FILE: include/linux/dst.h:31:
+					 * added to the storage, they will be checked against existing size and

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#3212: FILE: include/linux/dst.h:32:
+					 * probably be dropped (for example in mirror format when new node has smaller

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3219: FILE: include/linux/dst.h:39:
+#define DST_CTL_FLAGS_REMOTE	(1<<0)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3219: FILE: include/linux/dst.h:39:
+#define DST_CTL_FLAGS_REMOTE	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3220: FILE: include/linux/dst.h:40:
+#define DST_CTL_FLAGS_EXPORT	(1<<1)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3220: FILE: include/linux/dst.h:40:
+#define DST_CTL_FLAGS_EXPORT	(1<<1)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3223: FILE: include/linux/dst.h:43:
+struct dst_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3231: FILE: include/linux/dst.h:51:
+struct dst_local_ctl
+{

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#3240: FILE: include/linux/dst.h:60:
+	unsigned short		sa_data_len;			/* Number of bytes used in sa_data */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3244: FILE: include/linux/dst.h:64:
+struct dst_remote_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3251: FILE: include/linux/dst.h:71:
+struct dst_local_export_ctl
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3257: FILE: include/linux/dst.h:77:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3259: FILE: include/linux/dst.h:79:
+^IDST_REMOTE_CFG^I^I= 1, ^I^I/* Request remote configuration */$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3266: FILE: include/linux/dst.h:86:
+struct dst_remote_request
+{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3286: FILE: include/linux/dst.h:106:
+#define dprintk(f, a...) printk(f, ##a)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3292: FILE: include/linux/dst.h:112:
+struct kst_worker
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3296: FILE: include/linux/dst.h:116:
+	struct mutex		state_mutex;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3297: FILE: include/linux/dst.h:117:
+^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3299: FILE: include/linux/dst.h:119:
+	spinlock_t		ready_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3302: FILE: include/linux/dst.h:122:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3305: FILE: include/linux/dst.h:125:
+^Iwait_queue_head_t ^Iwait;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3306: FILE: include/linux/dst.h:126:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3313: FILE: include/linux/dst.h:133:
+#define DST_REQ_HEADER_SENT	(1<<0)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3313: FILE: include/linux/dst.h:133:
+#define DST_REQ_HEADER_SENT	(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3314: FILE: include/linux/dst.h:134:
+#define DST_REQ_EXPORT		(1<<1)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3314: FILE: include/linux/dst.h:134:
+#define DST_REQ_EXPORT		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3315: FILE: include/linux/dst.h:135:
+#define DST_REQ_EXPORT_WRITE	(1<<2)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3315: FILE: include/linux/dst.h:135:
+#define DST_REQ_EXPORT_WRITE	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3316: FILE: include/linux/dst.h:136:
+#define DST_REQ_EXPORT_READ	(1<<3)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3316: FILE: include/linux/dst.h:136:
+#define DST_REQ_EXPORT_READ	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3317: FILE: include/linux/dst.h:137:
+#define DST_REQ_ALWAYS_QUEUE	(1<<4)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3317: FILE: include/linux/dst.h:137:
+#define DST_REQ_ALWAYS_QUEUE	(1<<4)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3320: FILE: include/linux/dst.h:140:
+struct dst_request
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3328: FILE: include/linux/dst.h:148:
+^Iint ^I^I^I(*callback)(struct dst_request *, unsigned int);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dst_request *' should also have an identifier name
#3328: FILE: include/linux/dst.h:148:
+	int 			(*callback)(struct dst_request *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#3328: FILE: include/linux/dst.h:148:
+	int 			(*callback)(struct dst_request *, unsigned int);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3336: FILE: include/linux/dst.h:156:
+struct kst_state_ops
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3337: FILE: include/linux/dst.h:157:
+^Iint ^I^I(*init)(struct kst_state *, void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#3337: FILE: include/linux/dst.h:157:
+	int 		(*init)(struct kst_state *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#3337: FILE: include/linux/dst.h:157:
+	int 		(*init)(struct kst_state *, void *);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3338: FILE: include/linux/dst.h:158:
+^Iint ^I^I(*push)(struct dst_request *req);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#3339: FILE: include/linux/dst.h:159:
+	int		(*ready)(struct kst_state *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#3340: FILE: include/linux/dst.h:160:
+	int		(*recovery)(struct kst_state *, int err);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3341: FILE: include/linux/dst.h:161:
+^Ivoid ^I^I(*exit)(struct kst_state *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#3341: FILE: include/linux/dst.h:161:
+	void 		(*exit)(struct kst_state *);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3344: FILE: include/linux/dst.h:164:
+#define KST_FLAG_PARTIAL		(1<<0)
                         		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3344: FILE: include/linux/dst.h:164:
+#define KST_FLAG_PARTIAL		(1<<0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3347: FILE: include/linux/dst.h:167:
+struct kst_state
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3351: FILE: include/linux/dst.h:171:
+^Iwait_queue_t ^I^Iwait;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3352: FILE: include/linux/dst.h:172:
+^Iwait_queue_head_t ^I*whead;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3361: FILE: include/linux/dst.h:181:
+	struct mutex		request_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3372: FILE: include/linux/dst.h:192:
+struct dst_alg_ops
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3375: FILE: include/linux/dst.h:195:
+^Iint ^I^I^I(*remap)(struct dst_storage *st, struct bio *bio);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3377: FILE: include/linux/dst.h:197:
+^Istruct module ^I^I*owner;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3381: FILE: include/linux/dst.h:201:
+struct dst_alg
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3388: FILE: include/linux/dst.h:208:
+#define DST_ST_STARTED		(1<<0)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3388: FILE: include/linux/dst.h:208:
+#define DST_ST_STARTED		(1<<0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3391: FILE: include/linux/dst.h:211:
+struct dst_storage
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3396: FILE: include/linux/dst.h:216:
+	struct mutex		tree_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3411: FILE: include/linux/dst.h:231:
+struct dst_node
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3413: FILE: include/linux/dst.h:233:
+^Istruct block_device ^I*bdev;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dst_node *' should also have an identifier name
#3419: FILE: include/linux/dst.h:239:
+	void			(*cleanup)(struct dst_node *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3428: FILE: include/linux/dst.h:248:
+struct kst_state *kst_state_init(struct kst_worker *w, struct dst_node *node, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3429: FILE: include/linux/dst.h:249:
+struct kst_state *kst_state_init(struct kst_worker *w, struct dst_node *node, 
+		struct kst_state_ops *ops, void *data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3435: FILE: include/linux/dst.h:255:
+struct kst_state *kst_listener_state_init(struct kst_worker *w, struct dst_node *node, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3436: FILE: include/linux/dst.h:256:
+struct kst_state *kst_listener_state_init(struct kst_worker *w, struct dst_node *node, 
+		struct dst_local_export_ctl *le);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3437: FILE: include/linux/dst.h:257:
+struct kst_state *kst_data_state_init(struct kst_worker *w, struct dst_node *node, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3438: FILE: include/linux/dst.h:258:
+struct kst_state *kst_data_state_init(struct kst_worker *w, struct dst_node *node, 
+		struct socket *newsock);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397952.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 196 errors, 141 warnings, 129 checks, 3318 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397952.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
