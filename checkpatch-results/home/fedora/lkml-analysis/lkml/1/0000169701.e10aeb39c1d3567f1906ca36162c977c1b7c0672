CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#49: FILE: fs/exofs/exofs.h:143:
+int exofs_write_begin(struct file *file, struct address_space *mapping,
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#49: FILE: fs/exofs/exofs.h:143:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#49: FILE: fs/exofs/exofs.h:143:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#97: FILE: fs/exofs/inode.c:70:
+		 * locked */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: Unbalanced braces around else statement
#103: FILE: fs/exofs/inode.c:76:
+	} else /* Error */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#133: FILE: fs/exofs/inode.c:106:
+	uint64_t amount;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#136: FILE: fs/exofs/inode.c:109:
+	BUG_ON(!PageLocked(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: fs/exofs/inode.c:197:
+			   struct list_head *pages, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#270: FILE: fs/exofs/inode.c:243:
+	unsigned offset = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#273: FILE: fs/exofs/inode.c:246:
+	uint64_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#274: FILE: fs/exofs/inode.c:247:
+	uint64_t len = PAGE_CACHE_SIZE;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#277: FILE: fs/exofs/inode.c:250:
+	BUG_ON(!PageLocked(page));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#280: FILE: fs/exofs/inode.c:253:
+	 * just return.  otherwise, wait. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#282: FILE: fs/exofs/inode.c:255:
+		BUG_ON(!obj_2bcreated(oi));

CHECK:BRACES: braces {} should be used on all arms of this statement
#284: FILE: fs/exofs/inode.c:257:
+		if (wbc->sync_mode == WB_SYNC_NONE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#289: FILE: fs/exofs/inode.c:262:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#307: FILE: fs/exofs/inode.c:280:
+	BUG_ON(PageWriteback(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: fs/exofs/inode.c:316:
+int exofs_write_begin(struct file *file, struct address_space *mapping,
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#343: FILE: fs/exofs/inode.c:316:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#343: FILE: fs/exofs/inode.c:316:
+		loff_t pos, unsigned len, unsigned flags,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#350: FILE: fs/exofs/inode.c:323:
+	if (page == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'faild' may be misspelled - perhaps 'failed'?
#354: FILE: fs/exofs/inode.c:327:
+			EXOFS_DBGMSG("simple_write_begin faild\n");
 			                                 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len != PAGE_CACHE_SIZE'
#362: FILE: fs/exofs/inode.c:335:
+	if (!PageUptodate(page) && (len != PAGE_CACHE_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'faild' may be misspelled - perhaps 'failed'?
#367: FILE: fs/exofs/inode.c:340:
+			EXOFS_DBGMSG("__readpage_filler faild\n");
 			                                ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: fs/exofs/inode.c:348:
+static int exofs_write_begin_export(struct file *file,
+		struct address_space *mapping,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: fs/exofs/inode.c:349:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: fs/exofs/inode.c:349:
+		loff_t pos, unsigned len, unsigned flags,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169701.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 11 checks, 346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169701.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
