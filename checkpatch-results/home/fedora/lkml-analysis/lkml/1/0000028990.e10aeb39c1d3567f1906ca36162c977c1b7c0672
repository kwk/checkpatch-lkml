WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#110: FILE: include/linux/cgroup.h:224:
+	/* List of events which userspace want to recieve */
 	                                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#112: FILE: include/linux/cgroup.h:226:
+	spinlock_t event_list_lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: include/linux/cgroup.h:377:
+	int (*register_event)(struct cgroup *cgrp, struct cftype *cft,
+			struct eventfd_ctx *eventfd, const char *args);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: include/linux/cgroup.h:388:
+	int (*unregister_event)(struct cgroup *cgrp, struct cftype *cft,
+			struct eventfd_ctx *eventfd);

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#172: FILE: kernel/cgroup.c:156:
+ * cgroup_event represents events which userspace want to recieve.
                                                           ^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: kernel/cgroup.c:2867:
+static int cgroup_event_wake(wait_queue_t *wait, unsigned mode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: kernel/cgroup.c:2868:
+static int cgroup_event_wake(wait_queue_t *wait, unsigned mode,
+		int sync, void *key)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: kernel/cgroup.c:2886:
+static void cgroup_event_ptable_queue_proc(struct file *file,
+		wait_queue_head_t *wqh, poll_table *pt)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#315: FILE: kernel/cgroup.c:2905:
+	efd = simple_strtoul(buffer, &endp, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#320: FILE: kernel/cgroup.c:2910:
+	cfd = simple_strtoul(buffer, &endp, 10);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#413: FILE: kernel/cgroup.c:3021:
+		.mode = S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028990.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 5 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028990.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
