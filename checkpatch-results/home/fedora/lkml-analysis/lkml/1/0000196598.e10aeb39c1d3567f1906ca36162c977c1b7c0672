WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
2.6.27-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '14fbf50d695207754daeb96270b3027a3821121f', maybe rebased or not pulled?
#45: 
commit 14fbf50d695207754daeb96270b3027a3821121f upstream

CHECK:CAMELCASE: Avoid CamelCase: <cifsSesInfo>
#105: FILE: fs/cifs/cifs_debug.c:131:
+			ses = list_entry(tmp2, struct cifsSesInfo,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ses->serverDomain == NULL'
#107: FILE: fs/cifs/cifs_debug.c:133:
+			if ((ses->serverDomain == NULL) ||
+				(ses->serverOS == NULL) ||
+				(ses->serverNOS == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ses->serverOS == NULL'
#107: FILE: fs/cifs/cifs_debug.c:133:
+			if ((ses->serverDomain == NULL) ||
+				(ses->serverOS == NULL) ||
+				(ses->serverNOS == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ses->serverNOS == NULL'
#107: FILE: fs/cifs/cifs_debug.c:133:
+			if ((ses->serverDomain == NULL) ||
+				(ses->serverOS == NULL) ||
+				(ses->serverNOS == NULL)) {

CHECK:CAMELCASE: Avoid CamelCase: <serverDomain>
#107: FILE: fs/cifs/cifs_debug.c:133:
+			if ((ses->serverDomain == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ses->serverDomain"
#107: FILE: fs/cifs/cifs_debug.c:133:
+			if ((ses->serverDomain == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: fs/cifs/cifs_debug.c:134:
+			if ((ses->serverDomain == NULL) ||
+				(ses->serverOS == NULL) ||

CHECK:CAMELCASE: Avoid CamelCase: <serverOS>
#108: FILE: fs/cifs/cifs_debug.c:134:
+				(ses->serverOS == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ses->serverOS"
#108: FILE: fs/cifs/cifs_debug.c:134:
+				(ses->serverOS == NULL) ||

CHECK:CAMELCASE: Avoid CamelCase: <serverNOS>
#109: FILE: fs/cifs/cifs_debug.c:135:
+				(ses->serverNOS == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ses->serverNOS"
#109: FILE: fs/cifs/cifs_debug.c:135:
+				(ses->serverNOS == NULL)) {

CHECK:CAMELCASE: Avoid CamelCase: <serverName>
#111: FILE: fs/cifs/cifs_debug.c:137:
+					   "displayed\n\t", ses->serverName);

WARNING:SPLIT_STRING: quoted string split across lines
#111: FILE: fs/cifs/cifs_debug.c:137:
+				seq_printf(m, "\nentry for %s not fully "
+					   "displayed\n\t", ses->serverName);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: fs/cifs/cifs_debug.c:140:
+				seq_printf(m,
 				    "\n%d) Name: %s  Domain: %s Mounts: %d OS:"

WARNING:SPLIT_STRING: quoted string split across lines
#131: FILE: fs/cifs/cifs_debug.c:148:
 			seq_printf(m, "TCP status: %d\n\tLocal Users To "
+				   "Server: %d SecMode: 0x%x Req On Wire: %d",

CHECK:CAMELCASE: Avoid CamelCase: <tcpStatus>
#132: FILE: fs/cifs/cifs_debug.c:149:
+				   server->tcpStatus, server->srv_count,

CHECK:CAMELCASE: Avoid CamelCase: <secMode>
#133: FILE: fs/cifs/cifs_debug.c:150:
+				   server->secMode,

CHECK:CAMELCASE: Avoid CamelCase: <inFlight>
#134: FILE: fs/cifs/cifs_debug.c:151:
+				   atomic_read(&server->inFlight));

CHECK:CAMELCASE: Avoid CamelCase: <inSend>
#140: FILE: fs/cifs/cifs_debug.c:155:
+				atomic_read(&server->inSend),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: fs/cifs/cifsfs.c:1001:
+			server = list_entry(tmp, struct TCP_Server_Info,
+					 tcp_ses_list);

CHECK:CAMELCASE: Avoid CamelCase: <sesSem>
#272: FILE: fs/cifs/cifssmb.c:811:
+	down(&ses->sesSem);

CHECK:CAMELCASE: Avoid CamelCase: <CifsExiting>
#343: FILE: fs/cifs/connect.c:711:
+			ses->status = CifsExiting;

CHECK:CAMELCASE: Avoid CamelCase: <userName>
#415: FILE: fs/cifs/connect.c:1419:
+		if (strncmp(ses->userName, username, MAX_USERNAME_SIZE))

CHECK:CAMELCASE: Avoid CamelCase: <CifsGood>
#441: FILE: fs/cifs/connect.c:1445:
+	if (ses->status == CifsGood) {

CHECK:CAMELCASE: Avoid CamelCase: <GetXid>
#442: FILE: fs/cifs/connect.c:1446:
+		xid = GetXid();

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBLogoff>
#443: FILE: fs/cifs/connect.c:1447:
+		CIFSSMBLogoff(xid, ses);

CHECK:CAMELCASE: Avoid CamelCase: <_FreeXid>
#444: FILE: fs/cifs/connect.c:1448:
+		_FreeXid(xid);

CHECK:CAMELCASE: Avoid CamelCase: <sesInfoFree>
#446: FILE: fs/cifs/connect.c:1450:
+	sesInfoFree(ses);

CHECK:CAMELCASE: Avoid CamelCase: <srvTcp>
#465: FILE: fs/cifs/connect.c:2139:
+			INIT_LIST_HEAD(&srvTcp->smb_ses_list);

CHECK:CAMELCASE: Avoid CamelCase: <pSesInfo>
#475: FILE: fs/cifs/connect.c:2148:
+	pSesInfo = cifs_find_smb_ses(srvTcp, volume_info.username);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pSesInfo"
#493: FILE: fs/cifs/connect.c:2168:
+		if (pSesInfo == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#548: FILE: fs/cifs/connect.c:2193:
+			int len = strlen(volume_info.domainname);
+			pSesInfo->domainName = kmalloc(len + 1, GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <domainName>
#548: FILE: fs/cifs/connect.c:2193:
+			pSesInfo->domainName = kmalloc(len + 1, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: fs/cifs/connect.c:2196:
+				strcpy(pSesInfo->domainName,
+					volume_info.domainname);

CHECK:CAMELCASE: Avoid CamelCase: <overrideSecFlg>
#554: FILE: fs/cifs/connect.c:2199:
+		pSesInfo->overrideSecFlg = volume_info.secFlg;

CHECK:CAMELCASE: Avoid CamelCase: <secFlg>
#554: FILE: fs/cifs/connect.c:2199:
+		pSesInfo->overrideSecFlg = volume_info.secFlg;

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#678: FILE: fs/cifs/misc.c:354:
+					list_for_each(temp_item, &treeCon->ses->server->smb_ses_list) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <treeCon>
#678: FILE: fs/cifs/misc.c:354:
+					list_for_each(temp_item, &treeCon->ses->server->smb_ses_list) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#679: FILE: fs/cifs/misc.c:355:
+						ses = list_entry(temp_item, struct cifsSesInfo, smb_ses_list);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196598.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 34 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196598.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
