WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#58: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: fs/ceph/decode.h:1:
+#ifndef __CEPH_DECODE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#75: FILE: fs/ceph/decode.h:13:
+#define ceph_decode_need(p, end, n, bad)		\
+	do {						\
+		if (unlikely(*(p) + (n) > (end))) 	\
+			goto bad;			\
+	} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: fs/ceph/decode.h:15:
+^I^Iif (unlikely(*(p) + (n) > (end))) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#81: FILE: fs/ceph/decode.h:19:
+#define ceph_decode_64(p, v)				\
+	do {						\
+		v = le64_to_cpu(*(__le64 *)*(p));	\
+		*(p) += sizeof(u64);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#86: FILE: fs/ceph/decode.h:24:
+#define ceph_decode_32(p, v)				\
+	do {						\
+		v = le32_to_cpu(*(__le32 *)*(p));	\
+		*(p) += sizeof(u32);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#91: FILE: fs/ceph/decode.h:29:
+#define ceph_decode_16(p, v)				\
+	do {						\
+		v = le16_to_cpu(*(__le16 *)*(p));	\
+		*(p) += sizeof(u16);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#96: FILE: fs/ceph/decode.h:34:
+#define ceph_decode_8(p, v)				\
+	do {						\
+		v = *(u8 *)*(p);			\
+		(*p)++;					\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#103: FILE: fs/ceph/decode.h:41:
+#define ceph_decode_64_le(p, v)				\
+	do {						\
+		v = *(__le64 *)*(p);			\
+		*(p) += sizeof(u64);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#108: FILE: fs/ceph/decode.h:46:
+#define ceph_decode_32_le(p, v)				\
+	do {						\
+		v = *(__le32 *)*(p);			\
+		*(p) += sizeof(u32);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#113: FILE: fs/ceph/decode.h:51:
+#define ceph_decode_16_le(p, v)				\
+	do {						\
+		v = *(__le16 *)*(p);			\
+		*(p) += sizeof(u16);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#119: FILE: fs/ceph/decode.h:57:
+#define ceph_decode_copy(p, pv, n)			\
+	do {						\
+		memcpy(pv, *(p), n);			\
+		*(p) += n;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#119: FILE: fs/ceph/decode.h:57:
+#define ceph_decode_copy(p, pv, n)			\
+	do {						\
+		memcpy(pv, *(p), n);			\
+		*(p) += n;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#126: FILE: fs/ceph/decode.h:64:
+#define ceph_decode_64_safe(p, end, v, bad)			\
+	do {							\
+		ceph_decode_need(p, end, sizeof(u64), bad);	\
+		ceph_decode_64(p, v);				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#131: FILE: fs/ceph/decode.h:69:
+#define ceph_decode_32_safe(p, end, v, bad)			\
+	do {							\
+		ceph_decode_need(p, end, sizeof(u32), bad);	\
+		ceph_decode_32(p, v);				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#136: FILE: fs/ceph/decode.h:74:
+#define ceph_decode_16_safe(p, end, v, bad)			\
+	do {							\
+		ceph_decode_need(p, end, sizeof(u16), bad);	\
+		ceph_decode_16(p, v);				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#142: FILE: fs/ceph/decode.h:80:
+#define ceph_decode_copy_safe(p, end, pv, n, bad)		\
+	do {							\
+		ceph_decode_need(p, end, n, bad);		\
+		ceph_decode_copy(p, pv, n);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#142: FILE: fs/ceph/decode.h:80:
+#define ceph_decode_copy_safe(p, end, pv, n, bad)		\
+	do {							\
+		ceph_decode_need(p, end, n, bad);		\
+		ceph_decode_copy(p, pv, n);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ts' - possible side-effects?
#151: FILE: fs/ceph/decode.h:89:
+#define ceph_decode_timespec(ts, tv)					\
+	do {								\
+		(ts)->tv_sec = le32_to_cpu((tv)->tv_sec);		\
+		(ts)->tv_nsec = le32_to_cpu((tv)->tv_nsec);		\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tv' - possible side-effects?
#151: FILE: fs/ceph/decode.h:89:
+#define ceph_decode_timespec(ts, tv)					\
+	do {								\
+		(ts)->tv_sec = le32_to_cpu((tv)->tv_sec);		\
+		(ts)->tv_nsec = le32_to_cpu((tv)->tv_nsec);		\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tv' - possible side-effects?
#156: FILE: fs/ceph/decode.h:94:
+#define ceph_encode_timespec(tv, ts)				\
+	do {							\
+		(tv)->tv_sec = cpu_to_le32((ts)->tv_sec);	\
+		(tv)->tv_nsec = cpu_to_le32((ts)->tv_nsec);	\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ts' - possible side-effects?
#156: FILE: fs/ceph/decode.h:94:
+#define ceph_encode_timespec(tv, ts)				\
+	do {							\
+		(tv)->tv_sec = cpu_to_le32((ts)->tv_sec);	\
+		(tv)->tv_nsec = cpu_to_le32((ts)->tv_nsec);	\
+	} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: fs/ceph/decode.h:100:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#166: FILE: fs/ceph/decode.h:104:
+#define ceph_encode_64(p, v)			  \
+	do {					  \
+		*(__le64 *)*(p) = cpu_to_le64((v)); \
+		*(p) += sizeof(u64);		  \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#171: FILE: fs/ceph/decode.h:109:
+#define ceph_encode_32(p, v)			  \
+	do {					  \
+		*(__le32 *)*(p) = cpu_to_le32((v)); \
+		*(p) += sizeof(u32);		  \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#176: FILE: fs/ceph/decode.h:114:
+#define ceph_encode_16(p, v)			  \
+	do {					  \
+		*(__le16 *)*(p) = cpu_to_le16((v)); \
+		*(p) += sizeof(u16);		  \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#181: FILE: fs/ceph/decode.h:119:
+#define ceph_encode_8(p, v)			  \
+	do {					  \
+		*(u8 *)*(p) = v;		  \
+		(*(p))++;			  \
+	} while (0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: fs/ceph/decode.h:132:
+	u32 len = path ? strlen(path) : 0;
+	BUG_ON(*p + sizeof(ino) + sizeof(len) + len > end);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: fs/ceph/decode.h:132:
+	BUG_ON(*p + sizeof(ino) + sizeof(len) + len > end);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#205: FILE: fs/ceph/decode.h:143:
+	BUG_ON(*p + sizeof(len) + len > end);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: fs/ceph/decode.h:150:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#220: FILE: fs/ceph/messenger.c:1:
+#include <linux/crc32c.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: fs/ceph/messenger.c:18:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: fs/ceph/messenger.c:24:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#248: FILE: fs/ceph/messenger.c:29:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: fs/ceph/messenger.c:40:
+		int ret = PTR_ERR(ceph_msgr_wq);
+		derr(0, "failed to create workqueue: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#282: FILE: fs/ceph/messenger.c:63:
+			printk(KERN_ERR "%8s 0x%p: ", text, addr + i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#285: FILE: fs/ceph/messenger.c:66:
+		printk(KERN_CONT " %02x", addr[i]);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#285: FILE: fs/ceph/messenger.c:66:
+		printk(KERN_CONT " %02x", addr[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#289: FILE: fs/ceph/messenger.c:70:
+			printk(KERN_CONT " %s\n", ascii);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#289: FILE: fs/ceph/messenger.c:70:
+			printk(KERN_CONT " %s\n", ascii);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#296: FILE: fs/ceph/messenger.c:77:
+			printk(KERN_CONT "   ");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#296: FILE: fs/ceph/messenger.c:77:
+			printk(KERN_CONT "   ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#300: FILE: fs/ceph/messenger.c:81:
+		printk(KERN_CONT " %s\n", ascii);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#300: FILE: fs/ceph/messenger.c:81:
+		printk(KERN_CONT " %s\n", ascii);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#313: FILE: fs/ceph/messenger.c:94:
+	dout(30, "ceph_accept_ready messenger %p sk_state = %u\n",
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_accept_ready', this function's name, in a string
#313: FILE: fs/ceph/messenger.c:94:
+	dout(30, "ceph_accept_ready messenger %p sk_state = %u\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#325: FILE: fs/ceph/messenger.c:106:
+		dout(30, "ceph_data_ready on %p state = %lu, queueing work\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_data_ready', this function's name, in a string
#325: FILE: fs/ceph/messenger.c:106:
+		dout(30, "ceph_data_ready on %p state = %lu, queueing work\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#339: FILE: fs/ceph/messenger.c:120:
+		dout(30, "ceph_write_space %p queueing write work\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_write_space', this function's name, in a string
#339: FILE: fs/ceph/messenger.c:120:
+		dout(30, "ceph_write_space %p queueing write work\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#342: FILE: fs/ceph/messenger.c:123:
+		dout(30, "ceph_write_space %p nothing to write\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_write_space', this function's name, in a string
#342: FILE: fs/ceph/messenger.c:123:
+		dout(30, "ceph_write_space %p nothing to write\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#355: FILE: fs/ceph/messenger.c:136:
+	dout(30, "ceph_state_change %p state = %lu sk_state = %u\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_state_change', this function's name, in a string
#355: FILE: fs/ceph/messenger.c:136:
+	dout(30, "ceph_state_change %p state = %lu sk_state = %u\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#363: FILE: fs/ceph/messenger.c:144:
+		dout(30, "ceph_state_change TCP_CLOSE\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_state_change', this function's name, in a string
#363: FILE: fs/ceph/messenger.c:144:
+		dout(30, "ceph_state_change TCP_CLOSE\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#365: FILE: fs/ceph/messenger.c:146:
+		dout(30, "ceph_state_change TCP_CLOSE_WAIT\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_state_change', this function's name, in a string
#365: FILE: fs/ceph/messenger.c:146:
+		dout(30, "ceph_state_change TCP_CLOSE_WAIT\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#374: FILE: fs/ceph/messenger.c:155:
+		dout(30, "ceph_state_change TCP_ESTABLISHED\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_state_change', this function's name, in a string
#374: FILE: fs/ceph/messenger.c:155:
+		dout(30, "ceph_state_change TCP_ESTABLISHED\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: fs/ceph/messenger.c:168:
+	struct sock *sk = sock->sk;
+	sk->sk_user_data = (void *)msgr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: fs/ceph/messenger.c:176:
+	struct sock *sk = sock->sk;
+	sk->sk_user_data = (void *)con;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: fs/ceph/messenger.c:182:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#415: FILE: fs/ceph/messenger.c:196:
+	BUG_ON(con->sock);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#424: FILE: fs/ceph/messenger.c:205:
+	dout(20, "connect %u.%u.%u.%u:%u\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#430: FILE: fs/ceph/messenger.c:211:
+		dout(20, "connect %u.%u.%u.%u:%u EINPROGRESS sk_state = %u\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#485: FILE: fs/ceph/messenger.c:266:
+	dout(0, "listening on %u.%u.%u.%u:%u\n", IPQUADPORT(*myaddr));
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: fs/ceph/messenger.c:325:
+static int ceph_tcp_sendmsg(struct socket *sock, struct kvec *iov,
+		     size_t kvlen, size_t len, int more)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#556: FILE: fs/ceph/messenger.c:337:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*con)...) over kzalloc(sizeof(struct ceph_connection)...)
#564: FILE: fs/ceph/messenger.c:345:
+	con = kzalloc(sizeof(struct ceph_connection), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!con"
#565: FILE: fs/ceph/messenger.c:346:
+	if (con == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#576: FILE: fs/ceph/messenger.c:357:
+	dout(20, "new connection: %p\n", con);
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#610: FILE: fs/ceph/messenger.c:391:
+	if (head == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#624: FILE: fs/ceph/messenger.c:405:
+	dout(20, "get_connection %p nref = %d -> %d\n", con,
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#629: FILE: fs/ceph/messenger.c:410:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#637: FILE: fs/ceph/messenger.c:418:
+	dout(10, "con_close_socket on %p sock %p\n", con, con->sock);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_close_socket', this function's name, in a string
#637: FILE: fs/ceph/messenger.c:418:
+	dout(10, "con_close_socket on %p sock %p\n", con, con->sock);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#651: FILE: fs/ceph/messenger.c:432:
+	dout(20, "put_connection %p nref = %d -> %d\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'put_connection', this function's name, in a string
#651: FILE: fs/ceph/messenger.c:432:
+	dout(20, "put_connection %p nref = %d -> %d\n", con,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#653: FILE: fs/ceph/messenger.c:434:
+	BUG_ON(atomic_read(&con->nref) == 0);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#655: FILE: fs/ceph/messenger.c:436:
+		dout(20, "put_connection %p destroying\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'put_connection', this function's name, in a string
#655: FILE: fs/ceph/messenger.c:436:
+		dout(20, "put_connection %p destroying\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#676: FILE: fs/ceph/messenger.c:457:
+	dout(20, "register_connection %p %d -> %d\n", con,
 	^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#681: FILE: fs/ceph/messenger.c:462:
+	 * con_all and con_accepting lists. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#691: FILE: fs/ceph/messenger.c:472:
+		dout(20, "register_connection %p in old bucket %lu head %p\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#695: FILE: fs/ceph/messenger.c:476:
+		dout(20, "register_connection %p in new bucket %lu head %p\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#715: FILE: fs/ceph/messenger.c:496:
+	dout(20, "add_connection_accepting %p nref = %d -> %d\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_connection_accepting', this function's name, in a string
#715: FILE: fs/ceph/messenger.c:496:
+	dout(20, "add_connection_accepting %p nref = %d -> %d\n", con,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#735: FILE: fs/ceph/messenger.c:516:
+	dout(0, "__remove_connection: %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__remove_connection', this function's name, in a string
#735: FILE: fs/ceph/messenger.c:516:
+	dout(0, "__remove_connection: %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#736: FILE: fs/ceph/messenger.c:517:
+	dout(20, "__remove_connection %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__remove_connection', this function's name, in a string
#736: FILE: fs/ceph/messenger.c:517:
+	dout(20, "__remove_connection %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#738: FILE: fs/ceph/messenger.c:519:
+		dout(20, "__remove_connection %p not registered\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__remove_connection', this function's name, in a string
#738: FILE: fs/ceph/messenger.c:519:
+		dout(20, "__remove_connection %p not registered\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#746: FILE: fs/ceph/messenger.c:527:
+			dout(20, "__remove_connection %p and bucket %lu\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__remove_connection', this function's name, in a string
#746: FILE: fs/ceph/messenger.c:527:
+			dout(20, "__remove_connection %p and bucket %lu\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#751: FILE: fs/ceph/messenger.c:532:
+			 * to us, adjust it to point to the next guy. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#754: FILE: fs/ceph/messenger.c:535:
+			dout(20, "__remove_connection %p from bucket %lu "
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__remove_connection', this function's name, in a string
#754: FILE: fs/ceph/messenger.c:535:
+			dout(20, "__remove_connection %p from bucket %lu "

WARNING:SPLIT_STRING: quoted string split across lines
#755: FILE: fs/ceph/messenger.c:536:
+			dout(20, "__remove_connection %p from bucket %lu "
+			     "head %p\n", con, key, val);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#757: FILE: fs/ceph/messenger.c:538:
+				dout(20, "__remove_connection adjusting bucket"
 				^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__remove_connection', this function's name, in a string
#757: FILE: fs/ceph/messenger.c:538:
+				dout(20, "__remove_connection adjusting bucket"

WARNING:SPLIT_STRING: quoted string split across lines
#758: FILE: fs/ceph/messenger.c:539:
+				dout(20, "__remove_connection adjusting bucket"
+				     " for %lu to next item, %p\n", key,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#791: FILE: fs/ceph/messenger.c:572:
+	dout(0, "replace_connection %p with %p\n", old, new);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#792: FILE: fs/ceph/messenger.c:573:
+	dout(10, "replace_connection %p with %p\n", old, new);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#799: FILE: fs/ceph/messenger.c:580:
+		BUG_ON(list_empty(&old->list_bucket));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#822: FILE: fs/ceph/messenger.c:603:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#824: FILE: fs/ceph/messenger.c:605:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#841: FILE: fs/ceph/messenger.c:622:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#843: FILE: fs/ceph/messenger.c:624:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#852: FILE: fs/ceph/messenger.c:633:
+	dout(10, "prepare_write_message_footer %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_message_footer', this function's name, in a string
#852: FILE: fs/ceph/messenger.c:633:
+	dout(10, "prepare_write_message_footer %p\n", con);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#872: FILE: fs/ceph/messenger.c:653:
+	 * TCP packet that's a good thing. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#890: FILE: fs/ceph/messenger.c:671:
+	dout(20, "prepare_write_message %p seq %lld type %d len %d+%d %d pgs\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_message', this function's name, in a string
#890: FILE: fs/ceph/messenger.c:671:
+	dout(20, "prepare_write_message %p seq %lld type %d len %d+%d %d pgs\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#894: FILE: fs/ceph/messenger.c:675:
+	BUG_ON(le32_to_cpu(m->hdr.front_len) != m->front.iov_len);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#937: FILE: fs/ceph/messenger.c:718:
+	dout(20, "prepare_write_ack %p %u -> %u\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_ack', this function's name, in a string
#937: FILE: fs/ceph/messenger.c:718:
+	dout(20, "prepare_write_ack %p %u -> %u\n", con,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#965: FILE: fs/ceph/messenger.c:746:
+	dout(10, "prepare_write_connect %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_connect', this function's name, in a string
#965: FILE: fs/ceph/messenger.c:746:
+	dout(10, "prepare_write_connect %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#991: FILE: fs/ceph/messenger.c:772:
+	dout(10, "prepare_write_connect_retry %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_connect_retry', this function's name, in a string
#991: FILE: fs/ceph/messenger.c:772:
+	dout(10, "prepare_write_connect_retry %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1013: FILE: fs/ceph/messenger.c:794:
+	dout(10, "prepare_write_accept_hello %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_accept_hello', this function's name, in a string
#1013: FILE: fs/ceph/messenger.c:794:
+	dout(10, "prepare_write_accept_hello %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1031: FILE: fs/ceph/messenger.c:812:
+	dout(10, "prepare_write_accept_reply %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_write_accept_reply', this function's name, in a string
#1031: FILE: fs/ceph/messenger.c:812:
+	dout(10, "prepare_write_accept_reply %p\n", con);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1050: FILE: fs/ceph/messenger.c:831:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1062: FILE: fs/ceph/messenger.c:843:
+	dout(10, "write_partial_kvec %p %d left\n", con, con->out_kvec_bytes);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_partial_kvec', this function's name, in a string
#1062: FILE: fs/ceph/messenger.c:843:
+	dout(10, "write_partial_kvec %p %d left\n", con, con->out_kvec_bytes);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1088: FILE: fs/ceph/messenger.c:869:
+	dout(30, "write_partial_kvec %p %d left in %d kvecs ret = %d\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_partial_kvec', this function's name, in a string
#1088: FILE: fs/ceph/messenger.c:869:
+	dout(30, "write_partial_kvec %p %d left in %d kvecs ret = %d\n", con,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1104: FILE: fs/ceph/messenger.c:885:
+	unsigned data_len = le32_to_cpu(msg->hdr.data_len);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1109: FILE: fs/ceph/messenger.c:890:
+	dout(30, "write_partial_msg_pages %p msg %p page %d/%d offset %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_partial_msg_pages', this function's name, in a string
#1109: FILE: fs/ceph/messenger.c:890:
+	dout(30, "write_partial_msg_pages %p msg %p page %d/%d offset %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1164: FILE: fs/ceph/messenger.c:945:
+	dout(30, "write_partial_msg_pages %p msg %p done\n", con, msg);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_partial_msg_pages', this function's name, in a string
#1164: FILE: fs/ceph/messenger.c:945:
+	dout(30, "write_partial_msg_pages %p msg %p done\n", con, msg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1179: FILE: fs/ceph/messenger.c:960:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1186: FILE: fs/ceph/messenger.c:967:
+	dout(10, "prepare_read_connect %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_read_connect', this function's name, in a string
#1186: FILE: fs/ceph/messenger.c:967:
+	dout(10, "prepare_read_connect %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1192: FILE: fs/ceph/messenger.c:973:
+	dout(10, "prepare_read_ack %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_read_ack', this function's name, in a string
#1192: FILE: fs/ceph/messenger.c:973:
+	dout(10, "prepare_read_ack %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1198: FILE: fs/ceph/messenger.c:979:
+	dout(10, "prepare_read_tag %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_read_tag', this function's name, in a string
#1198: FILE: fs/ceph/messenger.c:979:
+	dout(10, "prepare_read_tag %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1210: FILE: fs/ceph/messenger.c:991:
+	dout(10, "prepare_read_message %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_read_message', this function's name, in a string
#1210: FILE: fs/ceph/messenger.c:991:
+	dout(10, "prepare_read_message %p\n", con);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1212: FILE: fs/ceph/messenger.c:993:
+	BUG_ON(con->in_msg != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "con->in_msg"
#1212: FILE: fs/ceph/messenger.c:993:
+	BUG_ON(con->in_msg != NULL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1220: FILE: fs/ceph/messenger.c:1001:
+	con->in_front_crc = con->in_data_crc = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1224: FILE: fs/ceph/messenger.c:1005:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1233: FILE: fs/ceph/messenger.c:1014:
+		int ret = ceph_tcp_recvmsg(con->sock, object + have, left);
+		if (ret <= 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1240: FILE: fs/ceph/messenger.c:1021:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1248: FILE: fs/ceph/messenger.c:1029:
+	dout(20, "read_partial_connect %p at %d\n", con, con->in_base_pos);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_connect', this function's name, in a string
#1248: FILE: fs/ceph/messenger.c:1029:
+	dout(20, "read_partial_connect %p at %d\n", con, con->in_base_pos);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1262: FILE: fs/ceph/messenger.c:1043:
+	dout(20, "read_partial_connect %p connect_seq = %u, global_seq = %u\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_connect', this function's name, in a string
#1262: FILE: fs/ceph/messenger.c:1043:
+	dout(20, "read_partial_connect %p connect_seq = %u, global_seq = %u\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1307: FILE: fs/ceph/messenger.c:1088:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1310: FILE: fs/ceph/messenger.c:1091:
+	dout(20, "process_connect on %p tag %d\n", con, (int)con->in_tag);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1310: FILE: fs/ceph/messenger.c:1091:
+	dout(20, "process_connect on %p tag %d\n", con, (int)con->in_tag);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1323: FILE: fs/ceph/messenger.c:1104:
+		derr(1, "process_connect wrong peer, want %u.%u.%u.%u:%u/%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1324: FILE: fs/ceph/messenger.c:1105:
+		derr(1, "process_connect wrong peer, want %u.%u.%u.%u:%u/%d, "
+		     "got %u.%u.%u.%u:%u/%d, wtf\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1342: FILE: fs/ceph/messenger.c:1123:
+		dout(10, "process_connect got RESET peer seq %u\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1342: FILE: fs/ceph/messenger.c:1123:
+		dout(10, "process_connect got RESET peer seq %u\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1358: FILE: fs/ceph/messenger.c:1139:
+		dout(10,
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1359: FILE: fs/ceph/messenger.c:1140:
+		     "process_connect got RETRY my seq = %u, peer_seq = %u\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1372: FILE: fs/ceph/messenger.c:1153:
+		dout(10,
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1373: FILE: fs/ceph/messenger.c:1154:
+		     "process_connect got RETRY_GLOBAL my %u, peer_gseq = %u\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1389: FILE: fs/ceph/messenger.c:1170:
+		dout(10, "process_connect peer connecting WAIT\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1389: FILE: fs/ceph/messenger.c:1170:
+		dout(10, "process_connect peer connecting WAIT\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1400: FILE: fs/ceph/messenger.c:1181:
+		dout(10, "process_connect got READY gseq %d cseq %d (%d)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1400: FILE: fs/ceph/messenger.c:1181:
+		dout(10, "process_connect got READY gseq %d cseq %d (%d)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_connect', this function's name, in a string
#1412: FILE: fs/ceph/messenger.c:1193:
+		derr(1, "process_connect protocol error, will retry\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1419: FILE: fs/ceph/messenger.c:1200:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1454: FILE: fs/ceph/messenger.c:1235:
+	dout(10, "process_accept %p got gseq %d cseq %d\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1454: FILE: fs/ceph/messenger.c:1235:
+	dout(10, "process_accept %p got gseq %d cseq %d\n", con,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1466: FILE: fs/ceph/messenger.c:1247:
+		derr(10, "ENOMEM in process_accept\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1484: FILE: fs/ceph/messenger.c:1265:
+			dout(20, "process_accept %p replacing LOSSYTX %p\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1484: FILE: fs/ceph/messenger.c:1265:
+			dout(20, "process_accept %p replacing LOSSYTX %p\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1509: FILE: fs/ceph/messenger.c:1290:
+			dout(20, "process_accept connection race state = %lu\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1509: FILE: fs/ceph/messenger.c:1290:
+			dout(20, "process_accept connection race state = %lu\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1519: FILE: fs/ceph/messenger.c:1300:
+			/* our existing outgoing connection wins, tell peer
+			   to wait for our outging connection to go through */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1519: FILE: fs/ceph/messenger.c:1300:
+			   to wait for our outging connection to go through */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1547: FILE: fs/ceph/messenger.c:1328:
+		dout(20, "process_accept no existing connection, opening\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1547: FILE: fs/ceph/messenger.c:1328:
+		dout(20, "process_accept no existing connection, opening\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1550: FILE: fs/ceph/messenger.c:1331:
+		dout(20, "process_accept no existing connection, we reset\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1550: FILE: fs/ceph/messenger.c:1331:
+		dout(20, "process_accept no existing connection, we reset\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1555: FILE: fs/ceph/messenger.c:1336:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1560: FILE: fs/ceph/messenger.c:1341:
+	dout(10, "process_accept %p cseq %d peer_gseq %d %s\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_accept', this function's name, in a string
#1560: FILE: fs/ceph/messenger.c:1341:
+	dout(10, "process_accept %p cseq %d peer_gseq %d %s\n", con,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1600: FILE: fs/ceph/messenger.c:1381:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1616: FILE: fs/ceph/messenger.c:1397:
+		dout(5, "got ack for seq %llu type %d at %p\n", seq,
 		^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1625: FILE: fs/ceph/messenger.c:1406:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1627: FILE: fs/ceph/messenger.c:1408:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1629: FILE: fs/ceph/messenger.c:1410:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1639: FILE: fs/ceph/messenger.c:1420:
+	unsigned front_len, data_len, data_off;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1643: FILE: fs/ceph/messenger.c:1424:
+	dout(20, "read_partial_message con %p msg %p\n", con, m);	
 	^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1643: FILE: fs/ceph/messenger.c:1424:
+^Idout(20, "read_partial_message con %p msg %p\n", con, m);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_message', this function's name, in a string
#1643: FILE: fs/ceph/messenger.c:1424:
+	dout(20, "read_partial_message con %p msg %p\n", con, m);	

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_message', this function's name, in a string
#1659: FILE: fs/ceph/messenger.c:1440:
+				derr(0, "read_partial_message %p bad hdr crc"

WARNING:SPLIT_STRING: quoted string split across lines
#1660: FILE: fs/ceph/messenger.c:1441:
+				derr(0, "read_partial_message %p bad hdr crc"
+				     " %u != expected %u\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->front.iov_base"
#1673: FILE: fs/ceph/messenger.c:1454:
+		if (m->front.iov_base == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->front.iov_base"
#1675: FILE: fs/ceph/messenger.c:1456:
+			if (m->front.iov_base == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1705: FILE: fs/ceph/messenger.c:1486:
+		BUG_ON(!con->msgr->prepare_pages);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1708: FILE: fs/ceph/messenger.c:1489:
+			dout(10, "prepare_pages failed, skipping payload\n");
 			^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1715: FILE: fs/ceph/messenger.c:1496:
+		BUG_ON(m->nr_pages < want);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1722: FILE: fs/ceph/messenger.c:1503:
+			dout(10, "pages revoked during msg read\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1762: FILE: fs/ceph/messenger.c:1543:
+	dout(20, "read_partial_message got msg %p\n", m);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_message', this function's name, in a string
#1762: FILE: fs/ceph/messenger.c:1543:
+	dout(20, "read_partial_message got msg %p\n", m);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_message', this function's name, in a string
#1766: FILE: fs/ceph/messenger.c:1547:
+		derr(0, "read_partial_message %p front crc %u != expected %u\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1776: FILE: fs/ceph/messenger.c:1557:
+		int cur_page, data_pos;
+		derr(0, "read_partial_message %p data crc %u != expected %u\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_message', this function's name, in a string
#1776: FILE: fs/ceph/messenger.c:1557:
+		derr(0, "read_partial_message %p data crc %u != expected %u\n",

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1779: FILE: fs/ceph/messenger.c:1560:
+		for (data_pos = 0, cur_page = 0; data_pos < data_len; data_pos += PAGE_SIZE, cur_page++) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1781: FILE: fs/ceph/messenger.c:1562:
+			left = min((int)(data_len - data_pos),
+			   (int)(PAGE_SIZE));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1791: FILE: fs/ceph/messenger.c:1572:
+			printk("data page %d len %d\n", cur_page, left);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1793: FILE: fs/ceph/messenger.c:1574:
+^I^I^I^I^I  $

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1808: FILE: fs/ceph/messenger.c:1589:
+		dout(10, "read_partial_message learned my addr is "
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_partial_message', this function's name, in a string
#1808: FILE: fs/ceph/messenger.c:1589:
+		dout(10, "read_partial_message learned my addr is "

WARNING:SPLIT_STRING: quoted string split across lines
#1809: FILE: fs/ceph/messenger.c:1590:
+		dout(10, "read_partial_message learned my addr is "
+		     "%u.%u.%u.%u:%u\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1831: FILE: fs/ceph/messenger.c:1612:
+	dout(1, "===== %p %llu from %s%d %d=%s len %d+%d (%u %u) =====\n",
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1844: FILE: fs/ceph/messenger.c:1625:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1846: FILE: fs/ceph/messenger.c:1627:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1848: FILE: fs/ceph/messenger.c:1629:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1850: FILE: fs/ceph/messenger.c:1631:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1860: FILE: fs/ceph/messenger.c:1641:
+	dout(30, "try_write start %p state %lu nref %d\n", con, con->state,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1860: FILE: fs/ceph/messenger.c:1641:
+	dout(30, "try_write start %p state %lu nref %d\n", con, con->state,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1864: FILE: fs/ceph/messenger.c:1645:
+	dout(30, "try_write out_kvec_bytes %d\n", con->out_kvec_bytes);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1864: FILE: fs/ceph/messenger.c:1645:
+	dout(30, "try_write out_kvec_bytes %d\n", con->out_kvec_bytes);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!con->sock"
#1867: FILE: fs/ceph/messenger.c:1648:
+	if (con->sock == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1881: FILE: fs/ceph/messenger.c:1662:
+		dout(5, "try_write initiating connect on %p new state %lu\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1881: FILE: fs/ceph/messenger.c:1662:
+		dout(5, "try_write initiating connect on %p new state %lu\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1899: FILE: fs/ceph/messenger.c:1680:
+			dout(30, "try_write write_partial_kvec err %d\n", ret);
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1899: FILE: fs/ceph/messenger.c:1680:
+			dout(30, "try_write write_partial_kvec err %d\n", ret);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1912: FILE: fs/ceph/messenger.c:1693:
+			dout(30, "try_write write_partial_msg_pages err %d\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1912: FILE: fs/ceph/messenger.c:1693:
+			dout(30, "try_write write_partial_msg_pages err %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1936: FILE: fs/ceph/messenger.c:1717:
+	dout(30, "try_write nothing else to write.\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1936: FILE: fs/ceph/messenger.c:1717:
+	dout(30, "try_write nothing else to write.\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1940: FILE: fs/ceph/messenger.c:1721:
+	dout(30, "try_write done on %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_write', this function's name, in a string
#1940: FILE: fs/ceph/messenger.c:1721:
+	dout(30, "try_write done on %p\n", con);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1944: FILE: fs/ceph/messenger.c:1725:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1960: FILE: fs/ceph/messenger.c:1741:
+	dout(20, "try_read start on %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#1960: FILE: fs/ceph/messenger.c:1741:
+	dout(20, "try_read start on %p\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1964: FILE: fs/ceph/messenger.c:1745:
+	dout(20, "try_read tag %d in_base_pos %d\n", (int)con->in_tag,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#1964: FILE: fs/ceph/messenger.c:1745:
+	dout(20, "try_read tag %d in_base_pos %d\n", (int)con->in_tag,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1967: FILE: fs/ceph/messenger.c:1748:
+		dout(20, "try_read accepting\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#1967: FILE: fs/ceph/messenger.c:1748:
+		dout(20, "try_read accepting\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1978: FILE: fs/ceph/messenger.c:1759:
+		dout(20, "try_read connecting\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#1978: FILE: fs/ceph/messenger.c:1759:
+		dout(20, "try_read connecting\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1997: FILE: fs/ceph/messenger.c:1778:
+		dout(20, "skipping %d / %d bytes\n", skip, -con->in_base_pos);
 		^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1997: FILE: fs/ceph/messenger.c:1778:
+		int skip = min(1024, -con->in_base_pos);
+		dout(20, "skipping %d / %d bytes\n", skip, -con->in_base_pos);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2012: FILE: fs/ceph/messenger.c:1793:
+		dout(30, "try_read got tag %d\n", (int)con->in_tag);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#2012: FILE: fs/ceph/messenger.c:1793:
+		dout(30, "try_read got tag %d\n", (int)con->in_tag);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2058: FILE: fs/ceph/messenger.c:1839:
+	dout(20, "try_read done on %p\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#2058: FILE: fs/ceph/messenger.c:1839:
+	dout(20, "try_read done on %p\n", con);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_read', this function's name, in a string
#2062: FILE: fs/ceph/messenger.c:1843:
+	derr(2, "try_read bad con->in_tag = %d\n", (int)con->in_tag);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2068: FILE: fs/ceph/messenger.c:1849:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2091: FILE: fs/ceph/messenger.c:1872:
+		dout(40, "ceph_queue_con %p ignoring: WAIT|CLOSED\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_queue_con', this function's name, in a string
#2091: FILE: fs/ceph/messenger.c:1872:
+		dout(40, "ceph_queue_con %p ignoring: WAIT|CLOSED\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2097: FILE: fs/ceph/messenger.c:1878:
+	dout(40, "ceph_queue_con %p %d -> %d\n", con,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_queue_con', this function's name, in a string
#2097: FILE: fs/ceph/messenger.c:1878:
+	dout(40, "ceph_queue_con %p %d -> %d\n", con,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2103: FILE: fs/ceph/messenger.c:1884:
+		dout(40, "ceph_queue_con %p - already BUSY or queued\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_queue_con', this function's name, in a string
#2103: FILE: fs/ceph/messenger.c:1884:
+		dout(40, "ceph_queue_con %p - already BUSY or queued\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2119: FILE: fs/ceph/messenger.c:1900:
+		dout(10, "con_work %p BUSY already set\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2119: FILE: fs/ceph/messenger.c:1900:
+		dout(10, "con_work %p BUSY already set\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2122: FILE: fs/ceph/messenger.c:1903:
+	dout(10, "con_work %p start, clearing QUEUED\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2122: FILE: fs/ceph/messenger.c:1903:
+	dout(10, "con_work %p start, clearing QUEUED\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2126: FILE: fs/ceph/messenger.c:1907:
+		dout(5, "con_work CLOSED\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2126: FILE: fs/ceph/messenger.c:1907:
+		dout(5, "con_work CLOSED\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2130: FILE: fs/ceph/messenger.c:1911:
+		dout(5, "con_work WAIT\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2130: FILE: fs/ceph/messenger.c:1911:
+		dout(5, "con_work WAIT\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2143: FILE: fs/ceph/messenger.c:1924:
+	dout(10, "con->state=%lu\n", con->state);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2146: FILE: fs/ceph/messenger.c:1927:
+			dout(10, "con_work %p QUEUED reset, looping\n", con);
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2146: FILE: fs/ceph/messenger.c:1927:
+			dout(10, "con_work %p QUEUED reset, looping\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2149: FILE: fs/ceph/messenger.c:1930:
+		dout(10, "con_work %p QUEUED reset, but just faulted\n", con);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2149: FILE: fs/ceph/messenger.c:1930:
+		dout(10, "con_work %p QUEUED reset, but just faulted\n", con);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2152: FILE: fs/ceph/messenger.c:1933:
+	dout(10, "con_work %p done\n", con);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_work', this function's name, in a string
#2152: FILE: fs/ceph/messenger.c:1933:
+	dout(10, "con_work %p done\n", con);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2158: FILE: fs/ceph/messenger.c:1939:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2167: FILE: fs/ceph/messenger.c:1948:
+	dout(10, "fault %p state %lu to peer %u.%u.%u.%u:%u\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2171: FILE: fs/ceph/messenger.c:1952:
+		dout(30, "fault on LOSSYTX channel\n");
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2182: FILE: fs/ceph/messenger.c:1963:
+	 * in a STANDBY state (i.e., don't try to reconnect just yet). */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2185: FILE: fs/ceph/messenger.c:1966:
+		dout(10, "fault setting STANDBY\n");
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2192: FILE: fs/ceph/messenger.c:1973:
+	 * delay. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2202: FILE: fs/ceph/messenger.c:1983:
+	dout(40, "fault queueing %p %d -> %d delay %lu\n", con,
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2210: FILE: fs/ceph/messenger.c:1991:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!newcon"
#2222: FILE: fs/ceph/messenger.c:2003:
+	if (newcon == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2236: FILE: fs/ceph/messenger.c:2017:
+	dout(5, "accepted connection \n");
 	^^^^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2236: FILE: fs/ceph/messenger.c:2017:
+	dout(5, "accepted connection \n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2242: FILE: fs/ceph/messenger.c:2023:
+	 * change before setting the socket callbacks. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2246: FILE: fs/ceph/messenger.c:2027:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msgr"
#2257: FILE: fs/ceph/messenger.c:2038:
+	if (msgr == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2268: FILE: fs/ceph/messenger.c:2049:
+	 * is being written over the socket */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2280: FILE: fs/ceph/messenger.c:2061:
+		dout(10, "create my ip not specified, binding to INADDR_ANY\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2295: FILE: fs/ceph/messenger.c:2076:
+	dout(1, "messenger %p listening on %u.%u.%u.%u:%u\n", msgr,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2304: FILE: fs/ceph/messenger.c:2085:
+	dout(2, "destroy %p\n", msgr);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2316: FILE: fs/ceph/messenger.c:2097:
+		dout(10, "destroy removing connection %p\n", con);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2319: FILE: fs/ceph/messenger.c:2100:
+		dout(40, " get %p %d -> %d\n", con,
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2324: FILE: fs/ceph/messenger.c:2105:
+		 * we successfully cancel work. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2329: FILE: fs/ceph/messenger.c:2110:
+		dout(10, "destroy removed connection %p\n", con);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2339: FILE: fs/ceph/messenger.c:2120:
+	dout(10, "destroyed messenger %p\n", msgr);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2350: FILE: fs/ceph/messenger.c:2131:
+	dout(2, "mark_down peer %u.%u.%u.%u:%u\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2356: FILE: fs/ceph/messenger.c:2137:
+		dout(1, "mark_down %s%d %u.%u.%u.%u:%u (%p)\n",
 		^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2367: FILE: fs/ceph/messenger.c:2148:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2403: FILE: fs/ceph/messenger.c:2184:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2433: FILE: fs/ceph/messenger.c:2214:
+			dout(10, "ceph_msg_send setting LOSSYTX\n");
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2433: FILE: fs/ceph/messenger.c:2214:
+			dout(10, "ceph_msg_send setting LOSSYTX\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2440: FILE: fs/ceph/messenger.c:2221:
+			derr(10, "ENOMEM in ceph_msg_send\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2448: FILE: fs/ceph/messenger.c:2229:
+			dout(10, "ceph_msg_send (lost race and) had connection "
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2448: FILE: fs/ceph/messenger.c:2229:
+			dout(10, "ceph_msg_send (lost race and) had connection "

WARNING:SPLIT_STRING: quoted string split across lines
#2449: FILE: fs/ceph/messenger.c:2230:
+			dout(10, "ceph_msg_send (lost race and) had connection "
+			     "%p to peer %u.%u.%u.%u:%u\n", con,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2456: FILE: fs/ceph/messenger.c:2237:
+			dout(5, "ceph_msg_send new connection %p to peer "
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2456: FILE: fs/ceph/messenger.c:2237:
+			dout(5, "ceph_msg_send new connection %p to peer "

WARNING:SPLIT_STRING: quoted string split across lines
#2457: FILE: fs/ceph/messenger.c:2238:
+			dout(5, "ceph_msg_send new connection %p to peer "
+			     "%u.%u.%u.%u:%u\n", con,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2463: FILE: fs/ceph/messenger.c:2244:
+		dout(10, "ceph_msg_send had connection %p to peer "
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2463: FILE: fs/ceph/messenger.c:2244:
+		dout(10, "ceph_msg_send had connection %p to peer "

WARNING:SPLIT_STRING: quoted string split across lines
#2464: FILE: fs/ceph/messenger.c:2245:
+		dout(10, "ceph_msg_send had connection %p to peer "
+		     "%u.%u.%u.%u:%u con->sock=%p\n", con,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2478: FILE: fs/ceph/messenger.c:2259:
+		dout(2, "ceph_msg_send dropping dup ping\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2478: FILE: fs/ceph/messenger.c:2259:
+		dout(2, "ceph_msg_send dropping dup ping\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2482: FILE: fs/ceph/messenger.c:2263:
+		dout(1, "----- %p %u to %s%d %d=%s len %d+%d -----\n", msg,
 		^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2483: FILE: fs/ceph/messenger.c:2264:
+		     (unsigned)con->out_seq,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2488: FILE: fs/ceph/messenger.c:2269:
+		dout(2, "ceph_msg_send %p seq %llu for %s%d on %p pgs %d\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2488: FILE: fs/ceph/messenger.c:2269:
+		dout(2, "ceph_msg_send %p seq %llu for %s%d on %p pgs %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2496: FILE: fs/ceph/messenger.c:2277:
+	 * new work */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2501: FILE: fs/ceph/messenger.c:2282:
+	dout(30, "ceph_msg_send done\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_send', this function's name, in a string
#2501: FILE: fs/ceph/messenger.c:2282:
+	dout(30, "ceph_msg_send done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2505: FILE: fs/ceph/messenger.c:2286:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m"
#2516: FILE: fs/ceph/messenger.c:2297:
+	if (m == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->front.iov_base"
#2545: FILE: fs/ceph/messenger.c:2326:
+		if (m->front.iov_base == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_new', this function's name, in a string
#2546: FILE: fs/ceph/messenger.c:2327:
+			derr(0, "ceph_msg_new can't allocate %d bytes\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2559: FILE: fs/ceph/messenger.c:2340:
+	dout(20, "ceph_msg_new %p page %d~%d -> %d\n", m, page_off, page_len,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_new', this function's name, in a string
#2559: FILE: fs/ceph/messenger.c:2340:
+	dout(20, "ceph_msg_new %p page %d~%d -> %d\n", m, page_off, page_len,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2572: FILE: fs/ceph/messenger.c:2353:
+	dout(20, "ceph_msg_put %p %d -> %d\n", m, atomic_read(&m->nref),
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_put', this function's name, in a string
#2572: FILE: fs/ceph/messenger.c:2353:
+	dout(20, "ceph_msg_put %p %d -> %d\n", m, atomic_read(&m->nref),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2573: FILE: fs/ceph/messenger.c:2354:
+	     atomic_read(&m->nref)-1);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_put', this function's name, in a string
#2575: FILE: fs/ceph/messenger.c:2356:
+		derr(0, "bad ceph_msg_put on %p %llu %s%d->%s%d %d=%s %d+%d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2586: FILE: fs/ceph/messenger.c:2367:
+		dout(20, "ceph_msg_put last one on %p\n", m);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_msg_put', this function's name, in a string
#2586: FILE: fs/ceph/messenger.c:2367:
+		dout(20, "ceph_msg_put last one on %p\n", m);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2615: FILE: fs/ceph/messenger.h:1:
+#ifndef __FS_CEPH_MESSENGER_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2649: FILE: fs/ceph/messenger.h:35:
+#define IPQUADPORT(n)							\
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr) >> 24)) & 0xFF, \
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr)) >> 16) & 0xFF, \
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr))>>8) & 0xFF, \
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr))) & 0xFF, \
+	(unsigned int)(ntohs((n).sin_port))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#2649: FILE: fs/ceph/messenger.h:35:
+#define IPQUADPORT(n)							\
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr) >> 24)) & 0xFF, \
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr)) >> 16) & 0xFF, \
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr))>>8) & 0xFF, \
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr))) & 0xFF, \
+	(unsigned int)(ntohs((n).sin_port))

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2652: FILE: fs/ceph/messenger.h:38:
+	(unsigned int)((be32_to_cpu((n).sin_addr.s_addr))>>8) & 0xFF, \
 	                                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2656: FILE: fs/ceph/messenger.h:42:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2665: FILE: fs/ceph/messenger.h:51:
+ * should read the data into. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2669: FILE: fs/ceph/messenger.h:55:
+ * we sent (or they tried to send us) may be lost. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2688: FILE: fs/ceph/messenger.h:74:
+#define ENTITY_NAME(n)				   \
+	ceph_name_type_str(le32_to_cpu((n).type)), \
+		le32_to_cpu((n).num)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#2688: FILE: fs/ceph/messenger.h:74:
+#define ENTITY_NAME(n)				   \
+	ceph_name_type_str(le32_to_cpu((n).type)), \
+		le32_to_cpu((n).num)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2700: FILE: fs/ceph/messenger.h:86:
+^Istruct socket *listen_sock; ^I /* listening socket */$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2703: FILE: fs/ceph/messenger.h:89:
+	spinlock_t con_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2715: FILE: fs/ceph/messenger.h:101:
+	spinlock_t global_seq_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2730: FILE: fs/ceph/messenger.h:116:
+	unsigned nr_pages;              /* size of page array */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2743: FILE: fs/ceph/messenger.h:129:
+#define BASE_DELAY_INTERVAL	(HZ/2)
                            	   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2761: FILE: fs/ceph/messenger.h:147:
+			    * state with the peer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2763: FILE: fs/ceph/messenger.h:149:
+			    * connection race) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2789: FILE: fs/ceph/messenger.h:175:
+	u32 connect_seq;      /* identify the most recent connection
+				 attempt for this connection, client */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2789: FILE: fs/ceph/messenger.h:175:
+				 attempt for this connection, client */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2816: FILE: fs/ceph/messenger.h:202:
+	struct ceph_msg *out_msg;        /* sending message (== tail of
+					    out_sent) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2816: FILE: fs/ceph/messenger.h:202:
+					    out_sent) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2830: FILE: fs/ceph/messenger.h:216:
+	u32 in_front_crc, in_data_crc;  /* calculated crc, for comparison
+					   message footer */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2830: FILE: fs/ceph/messenger.h:216:
+					   message footer */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2840: FILE: fs/ceph/messenger.h:226:
+extern int ceph_msgr_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2841: FILE: fs/ceph/messenger.h:227:
+extern void ceph_msgr_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2845: FILE: fs/ceph/messenger.h:231:
+extern void ceph_messenger_destroy(struct ceph_messenger *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ceph_messenger *' should also have an identifier name
#2845: FILE: fs/ceph/messenger.h:231:
+extern void ceph_messenger_destroy(struct ceph_messenger *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2846: FILE: fs/ceph/messenger.h:232:
+extern void ceph_messenger_mark_down(struct ceph_messenger *msgr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2849: FILE: fs/ceph/messenger.h:235:
+extern struct ceph_msg *ceph_msg_new(int type, int front_len,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2856: FILE: fs/ceph/messenger.h:242:
+	/*printk("ceph_msg_get %p %d -> %d\n", msg, atomic_read(&msg->nref),
+	  atomic_read(&msg->nref)+1);*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2856: FILE: fs/ceph/messenger.h:242:
+	  atomic_read(&msg->nref)+1);*/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2861: FILE: fs/ceph/messenger.h:247:
+extern void ceph_msg_put(struct ceph_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2873: FILE: fs/ceph/messenger.h:259:
+extern struct ceph_msg *ceph_msg_maybe_dup(struct ceph_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2875: FILE: fs/ceph/messenger.h:261:
+extern int ceph_msg_send(struct ceph_messenger *msgr, struct ceph_msg *msg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2878: FILE: fs/ceph/messenger.h:264:
+extern void ceph_ping(struct ceph_messenger *msgr, struct ceph_entity_name name,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157314.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 278 warnings, 88 checks, 2807 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157314.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
