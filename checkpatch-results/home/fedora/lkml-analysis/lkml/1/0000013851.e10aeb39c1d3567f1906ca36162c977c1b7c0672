WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#81: FILE: Makefile:4:
+EXTRAVERSION = .8
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#95: FILE: arch/blackfin/include/asm/page.h:15:
+	((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#324: FILE: arch/x86/ia32/ia32_aout.c:318:
+	regs->r8 = regs->r9 = regs->r10 = regs->r11 = regs->r12 =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#325: FILE: arch/x86/ia32/ia32_aout.c:319:
+		regs->r13 = regs->r14 = regs->r15 = 0;

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#330: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'si >= model->num_virt_counters'
#1497: FILE: arch/x86/oprofile/nmi_int.c:225:
+	if ((si >= model->num_virt_counters) || (counter_config[si].count == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[si].count == 0'
#1497: FILE: arch/x86/oprofile/nmi_int.c:225:
+	if ((si >= model->num_virt_counters) || (counter_config[si].count == 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1518: FILE: drivers/acpi/bus.c:348:
+static void acpi_print_osc_error(acpi_handle handle,
+	struct acpi_osc_context *context, char *error)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1523: FILE: drivers/acpi/bus.c:353:
+	if (ACPI_FAILURE(acpi_get_name(handle, ACPI_FULL_PATHNAME, &buffer)))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1524: FILE: drivers/acpi/bus.c:354:
+		printk(KERN_DEBUG "%s\n", error);

CHECK:BRACES: Unbalanced braces around else statement
#1525: FILE: drivers/acpi/bus.c:355:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1526: FILE: drivers/acpi/bus.c:356:
+		printk(KERN_DEBUG "%s:%s\n", (char *)buffer.pointer, error);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1529: FILE: drivers/acpi/bus.c:359:
+	printk(KERN_DEBUG"_OSC request data:");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1529: FILE: drivers/acpi/bus.c:359:
+	printk(KERN_DEBUG"_OSC request data:");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1531: FILE: drivers/acpi/bus.c:361:
+		printk("%x ", *((u32 *)(context->cap.pointer + i)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1532: FILE: drivers/acpi/bus.c:362:
+	printk("\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1549: FILE: drivers/acpi/bus.c:379:
+		if (i == 8 || i == 13 || i == 18 || i == 23) {
[...]
+		} else if (!isxdigit(str[i]))
[...]

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1582: FILE: drivers/acpi/bus.c:412:
+^Iin_params[0].type ^I^I= ACPI_TYPE_BUFFER;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1583: FILE: drivers/acpi/bus.c:413:
+^Iin_params[0].buffer.length ^I= 16;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1585: FILE: drivers/acpi/bus.c:415:
+^Iin_params[1].type ^I^I= ACPI_TYPE_INTEGER;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1586: FILE: drivers/acpi/bus.c:416:
+^Iin_params[1].integer.value ^I= context->rev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1587: FILE: drivers/acpi/bus.c:417:
+^Iin_params[2].type ^I^I= ACPI_TYPE_INTEGER;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1588: FILE: drivers/acpi/bus.c:418:
+	in_params[2].integer.value	= context->cap.length/sizeof(u32);
 	                          	                     ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1590: FILE: drivers/acpi/bus.c:420:
+^Iin_params[3].buffer.length ^I= context->cap.length;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1591: FILE: drivers/acpi/bus.c:421:
+^Iin_params[3].buffer.pointer ^I= context->cap.pointer;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1602: FILE: drivers/acpi/bus.c:432:
+	if (out_obj->type != ACPI_TYPE_BUFFER
+		|| out_obj->buffer.length != context->cap.length) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1604: FILE: drivers/acpi/bus.c:434:
+		acpi_print_osc_error(handle, context,
+			"_OSC evaluation returned wrong type");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1613: FILE: drivers/acpi/bus.c:443:
+			acpi_print_osc_error(handle, context,
+				"_OSC request failed");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1616: FILE: drivers/acpi/bus.c:446:
+			acpi_print_osc_error(handle, context,
+				"_OSC invalid UUID");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1619: FILE: drivers/acpi/bus.c:449:
+			acpi_print_osc_error(handle, context,
+				"_OSC invalid revision");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/acpi/bus.c:468:
+	memcpy(context->ret.pointer, out_obj->buffer.pointer,
+		context->ret.length);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1668: FILE: drivers/acpi/bus.c:498:
+#if defined(CONFIG_ACPI_PROCESSOR) || defined(CONFIG_ACPI_PROCESSOR_MODULE)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1713: FILE: drivers/ata/libata-core.c:3807:
+		if ((rc = sata_scr_write(link, SCR_CONTROL, scontrol)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1725: FILE: drivers/ata/libata-core.c:3817:
+		if ((rc = sata_scr_read(link, SCR_CONTROL, &scontrol)))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2009: FILE: drivers/connector/connector.c:274:
 static int __devinit cn_init(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2167: FILE: drivers/firewire/ohci.c:2417:
 static int __devinit pci_probe(struct pci_dev *dev,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#2210: FILE: drivers/gpu/drm/i915/i915_debugfs.c:290:
 		if (obj->read_domains & I915_GEM_DOMAIN_COMMAND) {
+		    ret = i915_gem_object_get_pages(obj, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2332: FILE: drivers/gpu/drm/i915/i915_gem.c:2234:
+					   mapping_gfp_mask (mapping) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2742: FILE: drivers/net/benet/be_main.c:1967:
+	addr = ioremap_nocache(pci_resource_start(adapter->pdev, pcicfg_reg),
+			pci_resource_len(adapter->pdev, pcicfg_reg));

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#2832: FILE: drivers/net/e1000/e1000_main.c:3812:
+		 * packet, if thats the case we need to toss it.  In fact, we
 		              ^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2859: FILE: drivers/net/e1000e/e1000.h:420:
+#define FLAG2_IS_DISCARDING               (1 << 2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2875: FILE: drivers/net/e1000e/netdev.c:486:
+		/*
+		 * !EOP means multiple descriptors were used to store a single

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#3059: FILE: drivers/regulator/wm8350-regulator.c:1508:
+	led->isink_init.constraints.valid_ops_mask
+		= REGULATOR_CHANGE_CURRENT | REGULATOR_CHANGE_STATUS;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "device->discipline"
#3144: FILE: drivers/s390/block/dasd_proc.c:74:
+	if (device->discipline != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3210: FILE: drivers/serial/uartlite.c:397:
+static int __devinit ulite_console_setup(struct console *co, char *options)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3491: FILE: fs/affs/symlink.c:38:
+		char *pf;
+		spin_lock(&sbi->symlink_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3784: FILE: fs/bio.c:551:
+					/* prev_bvec is already charged in
+					   bi_size, discharge it in order to

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3786: FILE: fs/bio.c:553:
+					   as new bvec. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3824: FILE: fs/exec.c:966:
+void setup_new_exec(struct linux_binprm * bprm)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3827: FILE: fs/exec.c:969:
+	char * name;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3938: FILE: include/linux/binfmts.h:104:
+extern void setup_new_exec(struct linux_binprm * bprm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3938: FILE: include/linux/binfmts.h:104:
+extern void setup_new_exec(struct linux_binprm * bprm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4007: FILE: include/linux/inetdevice.h:86:
+#define IN_DEV_SRC_VMARK(in_dev)    ^IIN_DEV_ORCONF((in_dev), SRC_VMARK)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4067: FILE: include/linux/pagemap.h:256:
+extern struct page * read_cache_page_gfp(struct address_space *mapping,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4067: FILE: include/linux/pagemap.h:256:
+extern struct page * read_cache_page_gfp(struct address_space *mapping,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4068: FILE: include/linux/pagemap.h:257:
+extern struct page * read_cache_page_gfp(struct address_space *mapping,
+				pgoff_t index, gfp_t gfp_mask);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4081: FILE: include/linux/sched.h:1357:
+				     - initialized normally by setup_new_exec */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4093: FILE: include/linux/sysctl.h:493:
+	NET_IPV4_CONF_SRC_VMARK=24,
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4200: FILE: mm/filemap.c:1687:
+static struct page *do_read_cache_page(struct address_space *mapping,
 				pgoff_t index,

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#4234: FILE: mm/filemap.c:1736:
+ * If the page does not get brought uptodate, return -EIO.
                                     ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4237: FILE: mm/filemap.c:1739:
+struct page *read_cache_page_async(struct address_space *mapping,
+				pgoff_t index,

ERROR:SPACING: space required after that ',' (ctx:OxV)
#4238: FILE: mm/filemap.c:1740:
+				int (*filler)(void *,struct page*),
 				                    ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#4269: FILE: mm/filemap.c:1771:
+ * If the page does not get brought uptodate, return -EIO.
                                     ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4272: FILE: mm/filemap.c:1774:
+struct page *read_cache_page_gfp(struct address_space *mapping,
+				pgoff_t index,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4408: FILE: mm/vmalloc.c:801:
+	list_for_each_entry_rcu(vb, &vbq->free, free_list) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#4413: FILE: mm/vmalloc.c:806:
+		if (vb->free + vb->dirty == VMAP_BBMAP_BITS && vb->dirty != VMAP_BBMAP_BITS) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4423: FILE: mm/vmalloc.c:816:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4478: FILE: mm/vmalloc.c:867:
+				BUG_ON(vb->dirty != VMAP_BBMAP_BITS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4486: FILE: mm/vmalloc.c:873:
+		BUG_ON(addr_to_vb_idx(addr) !=

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4511: FILE: mm/vmalloc.c:926:
+	BUG_ON(bitmap_allocate_region(vb->dirty_map, offset >> PAGE_SHIFT, order));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4516: FILE: mm/vmalloc.c:930:
+		BUG_ON(vb->free);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4538: FILE: net/ax25/ax25_out.c:96:
+	/*
+	 * There is one ref for the state machine; a caller needs

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4641: FILE: net/packet/af_packet.c:1040:
+			/*
+			 * skb was dropped but not destructed yet;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013851.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 36 warnings, 29 checks, 3184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013851.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
