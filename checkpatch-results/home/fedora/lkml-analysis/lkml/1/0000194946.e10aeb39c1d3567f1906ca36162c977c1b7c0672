CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRdefType>
#87: FILE: arch/x86/kvm/x86.c:659:
+	if (msr == MSR_MTRRdefType) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#87: FILE: arch/x86/kvm/x86.c:659:
+	if (msr == MSR_MTRRdefType) {
[...]
+	} else if (msr == MSR_MTRRfix64K_00000)
[...]
+	else if (msr == MSR_MTRRfix16K_80000 || msr == MSR_MTRRfix16K_A0000)
[...]
+	else if (msr >= MSR_MTRRfix4K_C0000 && msr <= MSR_MTRRfix4K_F8000)
[...]
+	else if (msr == MSR_IA32_CR_PAT)
[...]
+	else {	/* Variable MTRRs */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix64K_00000>
#90: FILE: arch/x86/kvm/x86.c:662:
+	} else if (msr == MSR_MTRRfix64K_00000)

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix16K_80000>
#92: FILE: arch/x86/kvm/x86.c:664:
+	else if (msr == MSR_MTRRfix16K_80000 || msr == MSR_MTRRfix16K_A0000)

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix16K_A0000>
#92: FILE: arch/x86/kvm/x86.c:664:
+	else if (msr == MSR_MTRRfix16K_80000 || msr == MSR_MTRRfix16K_A0000)

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix4K_C0000>
#94: FILE: arch/x86/kvm/x86.c:666:
+	else if (msr >= MSR_MTRRfix4K_C0000 && msr <= MSR_MTRRfix4K_F8000)

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix4K_F8000>
#94: FILE: arch/x86/kvm/x86.c:666:
+	else if (msr >= MSR_MTRRfix4K_C0000 && msr <= MSR_MTRRfix4K_F8000)

CHECK:BRACES: Unbalanced braces around else statement
#98: FILE: arch/x86/kvm/x86.c:670:
+	else {	/* Variable MTRRs */

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: arch/x86/kvm/x86.c:786:
+	if (msr == MSR_MTRRdefType)
[...]
+	else if (msr == MSR_MTRRfix64K_00000)
[...]
+	else if (msr == MSR_MTRRfix16K_80000 || msr == MSR_MTRRfix16K_A0000)
[...]
+	else if (msr >= MSR_MTRRfix4K_C0000 && msr <= MSR_MTRRfix4K_F8000)
[...]
+	else if (msr == MSR_IA32_CR_PAT)
[...]
+	else {	/* Variable MTRRs */
[...]

CHECK:BRACES: Unbalanced braces around else statement
#138: FILE: arch/x86/kvm/x86.c:797:
+	else {	/* Variable MTRRs */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000194946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 10 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000194946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
