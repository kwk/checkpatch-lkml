WARNING:TYPO_SPELLING: 'implemet' may be misspelled - perhaps 'implement'?
#66: 
  wake-up events for given device and implemet that callback for the
                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'plaform' may be misspelled - perhaps 'platform'?
#102: FILE: drivers/pci/pci.h:33:
+ * @can_wakeup: returns 'true' if the plaform can generate wake-up events for
                                       ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: drivers/pci/pci.h:55:
+extern int pci_platform_run_wake(struct pci_dev *dev, bool enable);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: drivers/pci/pci.h:59:
+extern int __pci_pme_wakeup(struct pci_dev *dev, void *ign);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: drivers/pci/pci.h:60:
+extern void pci_pme_wakeup_bus(struct pci_bus *bus);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#185: FILE: drivers/pci/pci-acpi.c:59:
+struct pci_acpi_notifier_block
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#196: FILE: drivers/pci/pci-acpi.c:70:
+struct pci_bus_notifier_entry
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#203: FILE: drivers/pci/pci-acpi.c:77:
+struct pci_dev_notifier_entry
+{

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#240: FILE: drivers/pci/pci-acpi.c:114:
+			struct pci_dev_notifier_entry *dne;
 			                               ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#242: FILE: drivers/pci/pci-acpi.c:116:
+			list_for_each_entry(dne, &nb->pm_devices, entry)
 			                    ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/pci/pci-acpi.c:194:
+	status = acpi_install_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, nb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/pci/pci-acpi.c:238:
+		status = acpi_remove_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+							pci_acpi_event_fn);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#387: FILE: drivers/pci/pci-acpi.c:261:
+	return pci_domain_nr(target) == pci_domain_nr(bus)
+		&& (pci_is_root_bus(target) || (bus->number >= target->number

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#388: FILE: drivers/pci/pci-acpi.c:262:
+		&& (pci_is_root_bus(target) || (bus->number >= target->number
+		    && bus->number <= target->subordinate));

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#399: FILE: drivers/pci/pci-acpi.c:273:
+	struct pci_dev_notifier_entry *dne;
 	                               ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#401: FILE: drivers/pci/pci-acpi.c:275:
+	dne = kzalloc(sizeof(*dne), GFP_KERNEL);
 	^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#401: FILE: drivers/pci/pci-acpi.c:275:
+	dne = kzalloc(sizeof(*dne), GFP_KERNEL);
 	                      ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#402: FILE: drivers/pci/pci-acpi.c:276:
+	if (!dne)
 	     ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#408: FILE: drivers/pci/pci-acpi.c:282:
+	return dne;
 	       ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#426: FILE: drivers/pci/pci-acpi.c:300:
+	struct pci_dev_notifier_entry *dne;
 	                               ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#445: FILE: drivers/pci/pci-acpi.c:319:
+		list_for_each_entry(dne, &nb->pm_devices, entry)
 		                    ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#460: FILE: drivers/pci/pci-acpi.c:334:
+	dne = new_dev_entry(pci_dev, &nb->pm_devices);
 	^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#461: FILE: drivers/pci/pci-acpi.c:335:
+	if (!dne) {
 	     ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: drivers/pci/pci-acpi.c:344:
+	status = acpi_install_notify_handler(dev->handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, nb);

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#473: FILE: drivers/pci/pci-acpi.c:347:
+		kfree(dne);
 		      ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#496: FILE: drivers/pci/pci-acpi.c:370:
+	struct pci_dev_notifier_entry *dne = NULL;
 	                               ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#505: FILE: drivers/pci/pci-acpi.c:379:
+		list_for_each_entry(dne, &nb->pm_devices, entry)
 		                    ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#519: FILE: drivers/pci/pci-acpi.c:393:
+	kfree(dne);
 	      ^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#522: FILE: drivers/pci/pci-acpi.c:396:
+	if (list_empty(&nb->pm_devices) && list_empty(&nb->pm_buses)
+	    && !nb->hp_cb) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/pci/pci-acpi.c:398:
+		status = acpi_remove_notify_handler(nb->dev->handle,
+							ACPI_SYSTEM_NOTIFY,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/pci/pci-acpi.c:481:
+	status = acpi_install_notify_handler(dev->handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, nb);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#660: FILE: drivers/pci/pci-acpi.c:534:
+	if (list_empty(&nb->pm_devices) && list_empty(&nb->pm_buses)
+	    && !nb->hp_cb) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: drivers/pci/pci-acpi.c:536:
+		status = acpi_remove_notify_handler(nb->dev->handle,
+							ACPI_SYSTEM_NOTIFY,

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#675: FILE: drivers/pci/pci-acpi.c:549:
+ * @dne: Device notifier entry for the device being enabled/disabled to wake-up.
     ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#679: FILE: drivers/pci/pci-acpi.c:553:
+			struct pci_dev_notifier_entry *dne, bool enable)
 			                               ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#754: FILE: drivers/pci/pci-acpi.c:628:
+		struct pci_dev_notifier_entry *dne;
 		                               ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#765: FILE: drivers/pci/pci-acpi.c:639:
+		list_for_each_entry(dne, &nb->pm_devices, entry)
 		                    ^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#767: FILE: drivers/pci/pci-acpi.c:641:
+				error = dev_run_wake(nb, dne, enable);
 				                         ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/acpi/wakeup.c:147:
+		acpi_set_gpe_type(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: drivers/acpi/wakeup.c:150:
+		acpi_enable_gpe(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#961: FILE: drivers/acpi/wakeup.c:153:
+		acpi_set_gpe_type(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: drivers/acpi/wakeup.c:156:
+		acpi_disable_gpe(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: drivers/acpi/wakeup.c:158:
+		acpi_clear_gpe(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number, ACPI_NOT_ISR);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#980: FILE: drivers/acpi/wakeup.c:172:
+	return deva->wakeup.flags.valid && devb->wakeup.flags.valid
+		&& deva->wakeup.gpe_device == devb->wakeup.gpe_device

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#981: FILE: drivers/acpi/wakeup.c:173:
+		&& deva->wakeup.gpe_device == devb->wakeup.gpe_device
+		&& deva->wakeup.gpe_number == devb->wakeup.gpe_number;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_device *' should also have an identifier name
#1001: FILE: include/acpi/acpi_bus.h:392:
+int acpi_device_run_wake(struct acpi_device *, bool);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bool' should also have an identifier name
#1001: FILE: include/acpi/acpi_bus.h:392:
+int acpi_device_run_wake(struct acpi_device *, bool);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_device *' should also have an identifier name
#1002: FILE: include/acpi/acpi_bus.h:393:
+bool acpi_wakeup_gpe_shared(struct acpi_device *, struct acpi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_device *' should also have an identifier name
#1002: FILE: include/acpi/acpi_bus.h:393:
+bool acpi_wakeup_gpe_shared(struct acpi_device *, struct acpi_device *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1023: FILE: include/acpi/acpi_bus.h:413:
+static inline bool acpi_wakeup_gpe_shared(struct acpi_device *a,
+					   struct acpi_device *b)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1097: FILE: include/linux/pci-acpi.h:14:
+extern acpi_status pci_acpi_add_hp_notifier(acpi_handle handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1098: FILE: include/linux/pci-acpi.h:15:
+extern acpi_status pci_acpi_add_hp_notifier(acpi_handle handle,
+					     acpi_notify_handler handler,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1100: FILE: include/linux/pci-acpi.h:17:
+extern acpi_status pci_acpi_remove_hp_notifier(acpi_handle handle,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1102: FILE: include/linux/pci-acpi.h:19:
+extern acpi_status pci_acpi_add_device_pm_notifier(struct acpi_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1104: FILE: include/linux/pci-acpi.h:21:
+extern acpi_status pci_acpi_remove_device_pm_notifier(struct acpi_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1106: FILE: include/linux/pci-acpi.h:23:
+extern acpi_status pci_acpi_add_bus_pm_notifier(struct acpi_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1108: FILE: include/linux/pci-acpi.h:25:
+extern acpi_status pci_acpi_remove_bus_pm_notifier(struct acpi_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: drivers/pci/hotplug/acpiphp_glue.c:242:
+		status = pci_acpi_add_hp_notifier(handle,
 					     handle_hotplug_event_func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1179: FILE: drivers/pci/hotplug/acpiphp_glue.c:293:
+			status = pci_acpi_remove_hp_notifier(bridge->func->handle,
 						handle_hotplug_event_func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: drivers/pci/hotplug/acpiphp_glue.c:298:
+		status = pci_acpi_add_hp_notifier(bridge->handle,
 					     handle_hotplug_event_bridge,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1195: FILE: drivers/pci/hotplug/acpiphp_glue.c:514:
+	status = pci_acpi_remove_hp_notifier(handle,
 					    handle_hotplug_event_bridge);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1204: FILE: drivers/pci/hotplug/acpiphp_glue.c:521:
+		status = pci_acpi_add_hp_notifier(bridge->func->handle,
 						handle_hotplug_event_func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1214: FILE: drivers/pci/hotplug/acpiphp_glue.c:539:
+				status = pci_acpi_remove_hp_notifier(func->handle,
 						handle_hotplug_event_func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/pci/hotplug/acpiphp_glue.c:601:
+		pci_acpi_remove_hp_notifier(handle,
 					   handle_hotplug_event_bridge);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: drivers/pci/hotplug/acpiphp_glue.c:1491:
+		pci_acpi_add_hp_notifier(handle,
+					handle_hotplug_event_bridge, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000062017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 26 warnings, 36 checks, 1077 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000062017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
