WARNING:TYPO_SPELLING: 'unecessarily' may be misspelled - perhaps 'unnecessarily'?
#38: 
	it also tested a pid unecessarily before killing it
	                     ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#86: FILE: arch/um/drivers/chan_kern.c:16:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#95: FILE: arch/um/drivers/chan_kern.c:24:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#103: FILE: arch/um/drivers/chan_kern.c:31:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#110: FILE: arch/um/drivers/chan_kern.c:37:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#118: FILE: arch/um/drivers/chan_kern.c:44:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: arch/um/drivers/chan_kern.c:51:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#135: FILE: arch/um/drivers/chan_kern.c:59:
+	printk(KERN_ERR "Using a channel type which is configured out of "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: arch/um/drivers/chan_kern.c:66:
+	printk(KERN_ERR "Using a channel type which is configured out of "

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tty"
#152: FILE: arch/um/drivers/chan_kern.c:85:
+	if (tty == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#163: FILE: arch/um/drivers/chan_kern.c:93:
 		}
+		else if (ch == START_CHAR(tty)) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan->ops->open"
#176: FILE: arch/um/drivers/chan_kern.c:109:
+	if (chan->ops->open == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "chan->ops->close"
#268: FILE: arch/um/drivers/chan_kern.c:240:
+	if (chan->ops->close != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chan->ops->console_write == NULL'
#306: FILE: arch/um/drivers/chan_kern.c:317:
+		if (!chan->output || (chan->ops->console_write == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan->ops->console_write"
#306: FILE: arch/um/drivers/chan_kern.c:317:
+		if (!chan->output || (chan->ops->console_write == NULL))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#325: FILE: arch/um/drivers/chan_kern.c:335:
+	printk(KERN_INFO "Console initialized on /dev/%s%d\n", co->name,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan->ops->window_size"
#340: FILE: arch/um/drivers/chan_kern.c:349:
+			if (chan->ops->window_size == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "chan->ops->free"
#349: FILE: arch/um/drivers/chan_kern.c:364:
+	if (chan->ops->free != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan"
#372: FILE: arch/um/drivers/chan_kern.c:388:
+	if (chan == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan->dev"
#380: FILE: arch/um/drivers/chan_kern.c:395:
+	if (chan->dev == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#416: FILE: arch/um/drivers/chan_kern.c:500:
+	for(i = 0; i < ARRAY_SIZE(chan_table); i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ops"
#426: FILE: arch/um/drivers/chan_kern.c:508:
+	if (ops == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#433: FILE: arch/um/drivers/chan_kern.c:514:
+	if (data == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan"
#440: FILE: arch/um/drivers/chan_kern.c:520:
+	if (chan == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "out"
#457: FILE: arch/um/drivers/chan_kern.c:553:
+	if (out != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#463: FILE: arch/um/drivers/chan_kern.c:558:
+		if (new == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#471: FILE: arch/um/drivers/chan_kern.c:565:
+		if (new == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#480: FILE: arch/um/drivers/chan_kern.c:573:
+		if (new == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chan->ops->read == NULL'
#504: FILE: arch/um/drivers/chan_kern.c:606:
+		if (!chan->input || (chan->ops->read == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan->ops->read"
#504: FILE: arch/um/drivers/chan_kern.c:606:
+		if (!chan->input || (chan->ops->read == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tty"
#526: FILE: arch/um/drivers/chan_kern.c:622:
+				if (tty != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#577: FILE: arch/um/drivers/fd.c:32:
+		printk(UM_KERN_ERR "fd_init : channel type 'fd' must specify a "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fd_init', this function's name, in a string
#577: FILE: arch/um/drivers/fd.c:32:
+		printk(UM_KERN_ERR "fd_init : channel type 'fd' must specify a "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#578: FILE: arch/um/drivers/fd.c:33:
+		printk(UM_KERN_ERR "fd_init : channel type 'fd' must specify a "
+		       "file descriptor\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == str'
#586: FILE: arch/um/drivers/fd.c:38:
+	if ((*end != '\0') || (end == str)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#587: FILE: arch/um/drivers/fd.c:39:
+		printk(UM_KERN_ERR "fd_init : couldn't parse file descriptor "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fd_init', this function's name, in a string
#587: FILE: arch/um/drivers/fd.c:39:
+		printk(UM_KERN_ERR "fd_init : couldn't parse file descriptor "

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: arch/um/drivers/fd.c:40:
+		printk(UM_KERN_ERR "fd_init : couldn't parse file descriptor "
+		       "'%s'\n", str);

ERROR:SPACING: space required before the open parenthesis '('
#594: FILE: arch/um/drivers/fd.c:45:
+	if(data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#594: FILE: arch/um/drivers/fd.c:45:
+	if(data == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: arch/um/drivers/fd.c:82:
+		printk(UM_KERN_ERR "Failed to restore terminal state - "

WARNING:SPLIT_STRING: quoted string split across lines
#646: FILE: arch/um/drivers/fd.c:83:
+		printk(UM_KERN_ERR "Failed to restore terminal state - "
+		       "errno = %d\n", -err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conn"
#792: FILE: arch/um/drivers/port_kern.c:87:
+	if (conn == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#802: FILE: arch/um/drivers/port_kern.c:100:
+	if (um_request_irq(TELNETD_IRQ, socket[0], IRQ_READ, pipe_interrupt,
 			  IRQF_DISABLED | IRQF_SHARED | IRQF_SAMPLE_RANDOM,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#814: FILE: arch/um/drivers/port_kern.c:109:
+		printk(KERN_ERR "No one waiting for port\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port"
#868: FILE: arch/um/drivers/port_kern.c:171:
+	if (port == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: arch/um/drivers/port_kern.c:184:
+	if (um_request_irq(ACCEPT_IRQ, fd, IRQ_READ, port_interrupt,
 			  IRQF_DISABLED | IRQF_SHARED | IRQF_SAMPLE_RANDOM,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#894: FILE: arch/um/drivers/port_kern.c:204:
+	if (dev == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1027: FILE: arch/um/drivers/port_user.c:34:
+		printk(UM_KERN_ERR "port_init : channel type 'port' must "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'port_init', this function's name, in a string
#1027: FILE: arch/um/drivers/port_user.c:34:
+		printk(UM_KERN_ERR "port_init : channel type 'port' must "

WARNING:SPLIT_STRING: quoted string split across lines
#1028: FILE: arch/um/drivers/port_user.c:35:
+		printk(UM_KERN_ERR "port_init : channel type 'port' must "
+		       "specify a port number\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == str'
#1035: FILE: arch/um/drivers/port_user.c:40:
+	if ((*end != '\0') || (end == str)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1036: FILE: arch/um/drivers/port_user.c:41:
+		printk(UM_KERN_ERR "port_init : couldn't parse port '%s'\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'port_init', this function's name, in a string
#1036: FILE: arch/um/drivers/port_user.c:41:
+		printk(UM_KERN_ERR "port_init : couldn't parse port '%s'\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kern_data"
#1043: FILE: arch/um/drivers/port_user.c:47:
+	if (kern_data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1048: FILE: arch/um/drivers/port_user.c:51:
+	if (data == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fd >= 0'
#1057: FILE: arch/um/drivers/port_user.c:79:
+	if ((fd >= 0) && data->raw) {

CHECK:SPACING: No space is necessary after a cast
#1088: FILE: arch/um/drivers/port_user.c:131:
+	if (bind(fd, (struct sockaddr *) &addr, sizeof(addr)) < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1200: FILE: arch/um/drivers/tty.c:26:
+		printk(UM_KERN_ERR "tty_init : channel type 'tty' must specify "

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1208: FILE: arch/um/drivers/tty.c:33:
+	if (data == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1378: FILE: arch/um/drivers/chan_user.c:135:
+		printk(UM_KERN_ERR "winch_thread : failed to write "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_thread', this function's name, in a string
#1378: FILE: arch/um/drivers/chan_user.c:135:
+		printk(UM_KERN_ERR "winch_thread : failed to write "

WARNING:SPLIT_STRING: quoted string split across lines
#1379: FILE: arch/um/drivers/chan_user.c:136:
+		printk(UM_KERN_ERR "winch_thread : failed to write "
+		       "synchronization byte, err = %d\n", -count);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1396: FILE: arch/um/drivers/chan_user.c:148:
+		printk(UM_KERN_ERR "winch_thread : sigprocmask failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_thread', this function's name, in a string
#1396: FILE: arch/um/drivers/chan_user.c:148:
+		printk(UM_KERN_ERR "winch_thread : sigprocmask failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1397: FILE: arch/um/drivers/chan_user.c:149:
+		printk(UM_KERN_ERR "winch_thread : sigprocmask failed, "
+		       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1406: FILE: arch/um/drivers/chan_user.c:156:
+		printk(UM_KERN_ERR "winch_thread : setsid failed, errno = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_thread', this function's name, in a string
#1406: FILE: arch/um/drivers/chan_user.c:156:
+		printk(UM_KERN_ERR "winch_thread : setsid failed, errno = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1416: FILE: arch/um/drivers/chan_user.c:163:
+		printk(UM_KERN_ERR "winch_thread : new_tty_pgrp failed on "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_thread', this function's name, in a string
#1416: FILE: arch/um/drivers/chan_user.c:163:
+		printk(UM_KERN_ERR "winch_thread : new_tty_pgrp failed on "

WARNING:SPLIT_STRING: quoted string split across lines
#1417: FILE: arch/um/drivers/chan_user.c:164:
+		printk(UM_KERN_ERR "winch_thread : new_tty_pgrp failed on "
+		       "fd %d err = %d\n", pty_fd, -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1437: FILE: arch/um/drivers/chan_user.c:176:
+		printk(UM_KERN_ERR "winch_thread : failed to read "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_thread', this function's name, in a string
#1437: FILE: arch/um/drivers/chan_user.c:176:
+		printk(UM_KERN_ERR "winch_thread : failed to read "

WARNING:SPLIT_STRING: quoted string split across lines
#1438: FILE: arch/um/drivers/chan_user.c:177:
+		printk(UM_KERN_ERR "winch_thread : failed to read "
+		       "synchronization byte, err = %d\n", -count);

ERROR:SPACING: space required before the open parenthesis '('
#1440: FILE: arch/um/drivers/chan_user.c:179:
+	while(1) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1452: FILE: arch/um/drivers/chan_user.c:188:
+			printk(UM_KERN_ERR "winch_thread : write failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_thread', this function's name, in a string
#1452: FILE: arch/um/drivers/chan_user.c:188:
+			printk(UM_KERN_ERR "winch_thread : write failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1453: FILE: arch/um/drivers/chan_user.c:189:
+			printk(UM_KERN_ERR "winch_thread : write failed, "
+			       "err = %d\n", -count);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1464: FILE: arch/um/drivers/chan_user.c:202:
+		printk(UM_KERN_ERR "winch_tramp : os_pipe failed, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_tramp', this function's name, in a string
#1464: FILE: arch/um/drivers/chan_user.c:202:
+		printk(UM_KERN_ERR "winch_tramp : os_pipe failed, err = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1482: FILE: arch/um/drivers/chan_user.c:217:
+		printk(UM_KERN_ERR "fork of winch_thread failed - errno = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1495: FILE: arch/um/drivers/chan_user.c:225:
+		printk(UM_KERN_ERR "winch_tramp : failed to read "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_tramp', this function's name, in a string
#1495: FILE: arch/um/drivers/chan_user.c:225:
+		printk(UM_KERN_ERR "winch_tramp : failed to read "

WARNING:SPLIT_STRING: quoted string split across lines
#1496: FILE: arch/um/drivers/chan_user.c:226:
+		printk(UM_KERN_ERR "winch_tramp : failed to read "
+		       "synchronization byte\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1497: FILE: arch/um/drivers/chan_user.c:227:
+		printk(UM_KERN_ERR "read failed, err = %d\n", -n);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1498: FILE: arch/um/drivers/chan_user.c:228:
+		printk(UM_KERN_ERR "fd %d will not support SIGWINCH\n", fd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1505: FILE: arch/um/drivers/chan_user.c:234:
+		printk(UM_KERN_ERR "winch_tramp: failed to set thread_fd "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'winch_tramp', this function's name, in a string
#1505: FILE: arch/um/drivers/chan_user.c:234:
+		printk(UM_KERN_ERR "winch_tramp: failed to set thread_fd "

WARNING:SPLIT_STRING: quoted string split across lines
#1506: FILE: arch/um/drivers/chan_user.c:235:
+		printk(UM_KERN_ERR "winch_tramp: failed to set thread_fd "
+		       "non-blocking.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1526: FILE: arch/um/drivers/chan_user.c:268:
+			printk(UM_KERN_ERR "register_winch : failed to write "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_winch', this function's name, in a string
#1526: FILE: arch/um/drivers/chan_user.c:268:
+			printk(UM_KERN_ERR "register_winch : failed to write "

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000398645.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 55 warnings, 32 checks, 1345 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000398645.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
