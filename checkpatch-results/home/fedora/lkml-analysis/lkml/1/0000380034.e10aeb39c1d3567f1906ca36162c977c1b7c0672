WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Immediate values are used as read mostly variables that are rarely updated. They

WARNING:TYPO_SPELLING: 'functionnality' may be misspelled - perhaps 'functionality'?
#33: 
functionnality is disabled in the kernel, it falls back to global variables.
^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: include/linux/immediate.h:1:
+#ifndef _LINUX_IMMEDIATE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: include/linux/immediate.h:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/linux/immediate.h:64:
+extern void core_immediate_update(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: include/linux/immediate.h:65:
+extern void immediate_update_range(const struct __immediate *begin,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: include/linux/immediate.h:66:
+extern void immediate_update_range(const struct __immediate *begin,
+	const struct __immediate *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: include/linux/immediate.h:67:
+extern void immediate_update_early(void);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#226: FILE: include/linux/immediate.h:118:
+#define DECLARE_IMMEDIATE(type, name) extern __typeof__(type) name##__immediate

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#227: FILE: include/linux/immediate.h:119:
+#define DEFINE_IMMEDIATE(type, name)  __typeof__(type) name##__immediate

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#229: FILE: include/linux/immediate.h:121:
+#define EXPORT_IMMEDIATE_SYMBOL(name) EXPORT_SYMBOL(name##__immediate)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#230: FILE: include/linux/immediate.h:122:
+#define EXPORT_IMMEDIATE_SYMBOL_GPL(name) EXPORT_SYMBOL_GPL(name##__immediate)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: include/linux/module.h:482:
+extern void _module_immediate_update(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: include/linux/module.h:483:
+extern void module_immediate_update(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: kernel/module.c:2042:
+		immediate_update_range(mod->immediate,
+			mod->immediate + mod->num_immediate);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: kernel/module.c:2662:
+		immediate_update_range(mod->immediate,
+			mod->immediate + mod->num_immediate);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#406: FILE: kernel/immediate.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#420: FILE: kernel/immediate.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#421: FILE: kernel/immediate.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#429: FILE: kernel/immediate.c:24:
+extern const struct __immediate __stop___immediate[];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: kernel/immediate.c:40:
+void immediate_update_range(const struct __immediate *begin,
+		const struct __immediate *end)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#456: FILE: kernel/immediate.c:51:
+			printk(KERN_WARNING "Invalid immediate value. "

WARNING:SPLIT_STRING: quoted string split across lines
#457: FILE: kernel/immediate.c:52:
+			printk(KERN_WARNING "Invalid immediate value. "
+					    "Variable at %p, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: kernel/immediate.c:53:
+					    "Variable at %p, "
+					    "instruction at %p, size %lu\n",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#459: FILE: kernel/immediate.c:54:
+					    (void*)iter->immediate,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#460: FILE: kernel/immediate.c:55:
+					    (void*)iter->var, iter->size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: kernel/immediate.c:75:
+static void __init immediate_update_early_range(const struct __immediate *begin,
+		const struct __immediate *end)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000380034.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 10 warnings, 11 checks, 382 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000380034.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
