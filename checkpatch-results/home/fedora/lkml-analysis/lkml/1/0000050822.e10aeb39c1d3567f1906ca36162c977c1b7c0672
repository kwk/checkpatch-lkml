WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
This is based on the old code on arch/x86/kernel/mfgpt_32.c, except it's not

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#153: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#158: FILE: drivers/misc/cs5535-mfgpt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#197: FILE: drivers/misc/cs5535-mfgpt.c:40:
+	spinlock_t lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/misc/cs5535-mfgpt.c:45:
+int cs5535_mfgpt_toggle_event(struct cs5535_mfgpt_timer *timer, int cmp,
+		int event, int enable)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#204: FILE: drivers/misc/cs5535-mfgpt.c:47:
+	uint32_t msr, mask, value, dummy;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/misc/cs5535-mfgpt.c:97:
+int cs5535_mfgpt_set_irq(struct cs5535_mfgpt_timer *timer, int cmp, int *irq,
+		int enable)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#256: FILE: drivers/misc/cs5535-mfgpt.c:99:
+	uint32_t zsel, lpc, dummy;

CHECK:SPACING: No space is necessary after a cast
#331: FILE: drivers/misc/cs5535-mfgpt.c:174:
+		timer_nr = t < max ? (int) t : -1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/misc/cs5535-mfgpt.c:224:
+void cs5535_mfgpt_write(struct cs5535_mfgpt_timer *timer, uint16_t reg,
+		uint16_t value)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#397: FILE: drivers/misc/cs5535-mfgpt.c:240:
+	uint32_t val, dummy;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#416: FILE: drivers/misc/cs5535-mfgpt.c:259:
+	uint16_t val;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/misc/cs5535-mfgpt.c:282:
+static int __init cs5535_mfgpt_probe(struct pci_dev *pdev,
+		const struct pci_device_id *pci_id)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#448: FILE: drivers/misc/cs5535-mfgpt.c:291:
+	 * can always go back to using MSRs.. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/misc/cs5535-mfgpt.c:311:
+	dev_info(&pdev->dev, "allocated PCI BAR #%d: base 0x%llx\n", MFGPT_BAR,
+			(unsigned long long) cs5535_mfgpt_chip.base);

CHECK:SPACING: No space is necessary after a cast
#468: FILE: drivers/misc/cs5535-mfgpt.c:311:
+			(unsigned long long) cs5535_mfgpt_chip.base);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/misc/cs5535-mfgpt.c:346:
+		pdev = pci_get_device(cs5535_mfgpt_pci_tbl[i].vendor,
+				cs5535_mfgpt_pci_tbl[i].device, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/misc/cs5535-mfgpt.c:349:
+			err = cs5535_mfgpt_probe(pdev,
+					&cs5535_mfgpt_pci_tbl[i]);

CHECK:BIT_MACRO: Prefer using the BIT macro
#574: FILE: include/linux/cs5535.h:89:
+#define MFGPT_SETUP_CNTEN	(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#575: FILE: include/linux/cs5535.h:90:
+#define MFGPT_SETUP_CMP2	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#576: FILE: include/linux/cs5535.h:91:
+#define MFGPT_SETUP_CMP1	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#577: FILE: include/linux/cs5535.h:92:
+#define MFGPT_SETUP_SETUP	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#578: FILE: include/linux/cs5535.h:93:
+#define MFGPT_SETUP_STOPEN	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#579: FILE: include/linux/cs5535.h:94:
+#define MFGPT_SETUP_EXTEN	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#580: FILE: include/linux/cs5535.h:95:
+#define MFGPT_SETUP_REVEN	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#581: FILE: include/linux/cs5535.h:96:
+#define MFGPT_SETUP_CLKSEL	(1 << 4)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#585: FILE: include/linux/cs5535.h:100:
+extern uint16_t cs5535_mfgpt_read(struct cs5535_mfgpt_timer *timer,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: include/linux/cs5535.h:101:
+extern uint16_t cs5535_mfgpt_read(struct cs5535_mfgpt_timer *timer,
+		uint16_t reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#587: FILE: include/linux/cs5535.h:102:
+extern void cs5535_mfgpt_write(struct cs5535_mfgpt_timer *timer, uint16_t reg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: include/linux/cs5535.h:103:
+extern void cs5535_mfgpt_write(struct cs5535_mfgpt_timer *timer, uint16_t reg,
+		uint16_t value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#590: FILE: include/linux/cs5535.h:105:
+extern int cs5535_mfgpt_toggle_event(struct cs5535_mfgpt_timer *timer, int cmp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: include/linux/cs5535.h:106:
+extern int cs5535_mfgpt_toggle_event(struct cs5535_mfgpt_timer *timer, int cmp,
+		int event, int enable);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#592: FILE: include/linux/cs5535.h:107:
+extern int cs5535_mfgpt_set_irq(struct cs5535_mfgpt_timer *timer, int cmp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: include/linux/cs5535.h:108:
+extern int cs5535_mfgpt_set_irq(struct cs5535_mfgpt_timer *timer, int cmp,
+		int *irq, int enable);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#594: FILE: include/linux/cs5535.h:109:
+extern struct cs5535_mfgpt_timer *cs5535_mfgpt_alloc_timer(int timer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: include/linux/cs5535.h:110:
+extern struct cs5535_mfgpt_timer *cs5535_mfgpt_alloc_timer(int timer,
+		int domain);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#596: FILE: include/linux/cs5535.h:111:
+extern void cs5535_mfgpt_free_timer(struct cs5535_mfgpt_timer *timer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: include/linux/cs5535.h:114:
+static inline int cs5535_mfgpt_setup_irq(struct cs5535_mfgpt_timer *timer,
+		int cmp, int *irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: include/linux/cs5535.h:120:
+static inline int cs5535_mfgpt_release_irq(struct cs5535_mfgpt_timer *timer,
+		int cmp, int *irq)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 35 checks, 535 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
