WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
> > +static int format_decode(const char *fmt, enum format_type *type, int *flags,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: lib/vsprintf.c:703:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#276: FILE: lib/vsprintf.c:826:
+	if (isdigit(*fmt))
[...]
+	else if (*fmt == '*') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#331: FILE: lib/vsprintf.c:881:
+		* What does C99 say about the overflow case here? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#331: FILE: lib/vsprintf.c:881:
+		/* FIXME:
+		* What does C99 say about the overflow case here? */

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: lib/vsprintf.c:912:
+	if (spec->qualifier == 'L')
[...]
+	else if (spec->qualifier == 'l') {
[...]
+	} else if (spec->qualifier == 'Z' || spec->qualifier == 'z') {
[...]
+	} else if (spec->qualifier == 't') {
[...]
+	} else if (spec->qualifier == 'h') {
[...]
+	} else {
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: lib/vsprintf.c:938:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#468: FILE: lib/vsprintf.c:998:
+			int copy = read;
+			if (str < end) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#552: FILE: lib/vsprintf.c:1022:
 
+				}

CHECK:SPACING: No space is necessary after a cast
#554: FILE: lib/vsprintf.c:1024:
+			c = (unsigned char) va_arg(args, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: lib/vsprintf.c:1037:
+			str = string(str, end, va_arg(args, char *),
+					spec.field_width, spec.precision,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#583: FILE: lib/vsprintf.c:1042:
+			str = pointer(fmt+1, str, end, va_arg(args, void *),
 			                 ^

CHECK:SPACING: No space is necessary after a cast
#655: FILE: lib/vsprintf.c:1099:
+				num = (unsigned short) va_arg(args, int);

CHECK:SPACING: No space is necessary after a cast
#657: FILE: lib/vsprintf.c:1101:
+				num = (short) va_arg(args, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: lib/vsprintf.c:1108:
+			str = number(str, end, num, spec.base,
+				spec.field_width, spec.precision, spec.flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#955: FILE: lib/vsprintf.c:1464:
+			int copy = read;
+			if (str < end) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1019: FILE: lib/vsprintf.c:1505:
+			str = string(str, end, (char *)str_arg,
+					spec.field_width,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1103: FILE: lib/vsprintf.c:1564:
+			str = number(str, end, num, spec.base,
+				spec.field_width, spec.precision, spec.flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161131.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 13 checks, 978 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161131.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
