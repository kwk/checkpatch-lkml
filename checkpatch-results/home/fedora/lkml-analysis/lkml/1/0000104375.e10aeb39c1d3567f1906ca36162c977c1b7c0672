CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: arch/x86/include/asm/setup.h:87:
+extern void mrst_early_detect(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: arch/x86/include/asm/setup.h:88:
+extern void setup_mrst_default_feature(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#87: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: arch/x86/kernel/mrst.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BRACES: braces {} are not necessary for single statement blocks
#141: FILE: arch/x86/kernel/mrst.c:50:
+	if (subarch == X86_SUBARCH_MRST) {
+		x86_quirks = &mrst_x86_quirks;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#155: FILE: arch/x86/kernel/mrst.c:64:
+	pentry = (struct sfi_spi_table_entry *) sb->pentry;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#157: FILE: arch/x86/kernel/mrst.c:66:
+	info = kzalloc(num * sizeof(*info), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#159: FILE: arch/x86/kernel/mrst.c:68:
+	if (!info) {
+		pr_info("%s(): Error in kzalloc\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#172: FILE: arch/x86/kernel/mrst.c:81:
+		printk(KERN_INFO "info[%d]: name = %16s, irq = 0x%x, bus = %d,"

WARNING:SPLIT_STRING: quoted string split across lines
#173: FILE: arch/x86/kernel/mrst.c:82:
+		printk(KERN_INFO "info[%d]: name = %16s, irq = 0x%x, bus = %d,"
+			" cs = %d\n", j, info[j].modalias, info[j].irq,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#182: FILE: arch/x86/kernel/mrst.c:91:
+
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104375.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 4 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104375.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
