CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: drivers/edac/amd64_edac.c:2257:
+static int amd64_get_error_info_regs(struct mem_ctl_info *mci,
+				  struct amd64_error_info_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/edac/amd64_edac.c:2302:
+static int amd64_get_error_info(struct mem_ctl_info *mci,
+			      struct amd64_error_info_regs *info)

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#149: FILE: drivers/edac/amd64_edac.c:2323:
+	 * best than can be done is to detect that a race has occured
 	                                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#163: FILE: drivers/edac/amd64_edac.c:2337:
+	 * and the new error is UE which would be the only situation
 	                        ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs.nbsh != info->nbsh'
#177: FILE: drivers/edac/amd64_edac.c:2351:
+	if ((regs.nbsh != info->nbsh) ||
+	     (regs.nbsl != info->nbsl) ||
+	     (regs.nbeah != info->nbeah) ||
+	     (regs.nbeal != info->nbeal)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs.nbsl != info->nbsl'
#177: FILE: drivers/edac/amd64_edac.c:2351:
+	if ((regs.nbsh != info->nbsh) ||
+	     (regs.nbsl != info->nbsl) ||
+	     (regs.nbeah != info->nbeah) ||
+	     (regs.nbeal != info->nbeal)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs.nbeah != info->nbeah'
#177: FILE: drivers/edac/amd64_edac.c:2351:
+	if ((regs.nbsh != info->nbsh) ||
+	     (regs.nbsl != info->nbsl) ||
+	     (regs.nbeah != info->nbeah) ||
+	     (regs.nbeal != info->nbeal)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs.nbeal != info->nbeal'
#177: FILE: drivers/edac/amd64_edac.c:2351:
+	if ((regs.nbsh != info->nbsh) ||
+	     (regs.nbsl != info->nbsl) ||
+	     (regs.nbeah != info->nbeah) ||
+	     (regs.nbeal != info->nbeal)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/edac/amd64_edac.c:2352:
+	if ((regs.nbsh != info->nbsh) ||
+	     (regs.nbsl != info->nbsl) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/edac/amd64_edac.c:2356:
+		amd64_mc_printk(mci, KERN_WARNING,
+			"hardware STATUS read access race "

WARNING:SPLIT_STRING: quoted string split across lines
#183: FILE: drivers/edac/amd64_edac.c:2357:
+			"hardware STATUS read access race "
+			"condition detected!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/edac/amd64_edac.c:2365:
+static inline void amd64_decode_gart_tlb_error(struct mem_ctl_info *mci,
+					 struct amd64_error_info_regs *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/edac/amd64_edac.c:2376:
+	amd64_mc_printk(mci, KERN_ERR,
+		     "GART TLB event: transaction type(%s), "

WARNING:SPLIT_STRING: quoted string split across lines
#203: FILE: drivers/edac/amd64_edac.c:2377:
+		     "GART TLB event: transaction type(%s), "
+		     "cache level(%s)\n", tt_msgs[ec_tt], ll_msgs[ec_ll]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/edac/amd64_edac.c:2381:
+static inline void amd64_decode_mem_cache_error(struct mem_ctl_info *mci,
+				      struct amd64_error_info_regs *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/edac/amd64_edac.c:2394:
+	amd64_mc_printk(mci, KERN_ERR,
+		     "cache hierarchy error: memory transaction type(%s), "

WARNING:SPLIT_STRING: quoted string split across lines
#221: FILE: drivers/edac/amd64_edac.c:2395:
+		     "cache hierarchy error: memory transaction type(%s), "
+		     "transaction type(%s), cache level(%s)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: drivers/edac/amd64_edac.c:2399:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/edac/amd64_edac.c:2407:
+static void amd64_handle_ce(struct mem_ctl_info *mci,
+				struct amd64_error_info_regs *info)

CHECK:CAMELCASE: Avoid CamelCase: <SystemAddress>
#236: FILE: drivers/edac/amd64_edac.c:2410:
+	u64 SystemAddress;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/edac/amd64_edac.c:2415:
+		amd64_mc_printk(mci, KERN_ERR,
+			"HW has no ERROR_ADDRESS available\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/edac/amd64_edac.c:2423:
+	amd64_mc_printk(mci, KERN_ERR,
+		"CE ERROR_ADDRESS= 0x%llx\n", SystemAddress);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/edac/amd64_edac.c:2434:
+static void amd64_handle_ue(struct mem_ctl_info *mci,
+				struct amd64_error_info_regs *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/edac/amd64_edac.c:2446:
+		amd64_mc_printk(mci, KERN_CRIT,
+			"HW has no ERROR_ADDRESS available\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!src_mci"
#283: FILE: drivers/edac/amd64_edac.c:2457:
+	if (src_mci == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/edac/amd64_edac.c:2459:
+		amd64_mc_printk(mci, KERN_CRIT,
+			"ERROR ADDRESS (0x%lx) value NOT mapped to a MC\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/edac/amd64_edac.c:2470:
+		amd64_mc_printk(mci, KERN_CRIT,
+			"ERROR_ADDRESS (0x%lx) value NOT mapped to 'csrow'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/edac/amd64_edac.c:2485:
+static void amd64_decode_bus_error(struct mem_ctl_info *mci,
+			     struct amd64_error_info_regs *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/edac/amd64_edac.c:2507:
+	amd64_mc_printk(mci, KERN_ERR,
+		"BUS ERROR:\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/edac/amd64_edac.c:2533:
+		amd64_mc_printk(mci, KERN_ERR,
+			"NOT ECC: no special error handling for this error\n");

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#363: FILE: drivers/edac/amd64_edac.c:2537:
+	/* CE or UE event? */
 	         ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#369: FILE: drivers/edac/amd64_edac.c:2543:
+	/* If main error is CE then overflow must be CE.  If main error is UE
 	                                                                   ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: drivers/edac/amd64_edac.c:2551:
+		edac_mc_handle_ce_no_info(mci,
+			EDAC_MOD_STR " Error Overflow set");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#439: FILE: drivers/edac/amd64_edac.c:2613:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/edac/amd64_edac.c:2654:
+		amd64_mc_printk(mci, KERN_WARNING,
+			     "%s(): unknown MCE error 0x%x\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/edac/amd64_edac.c:2660:
+	amd64_mc_printk(mci, KERN_ERR,
+		"ExtErr=(0x%x) %s\n", ext_ec, ext_msgs[ext_ec]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ext_ec == F10_NBSL_EXT_ERR_RMW'
#488: FILE: drivers/edac/amd64_edac.c:2662:
+	if (((ext_ec >= F10_NBSL_EXT_ERR_CRC &&
+			ext_ec <= F10_NBSL_EXT_ERR_TGT) ||
+			(ext_ec == F10_NBSL_EXT_ERR_RMW)) &&
+			EXTRACT_LDT_LINK(info->nbsh)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: drivers/edac/amd64_edac.c:2663:
+	if (((ext_ec >= F10_NBSL_EXT_ERR_CRC &&
+			ext_ec <= F10_NBSL_EXT_ERR_TGT) ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#492: FILE: drivers/edac/amd64_edac.c:2666:
+			EXTRACT_LDT_LINK(info->nbsh)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/edac/amd64_edac.c:2668:
+		amd64_mc_printk(mci, KERN_ERR,
+			"Error on hypertransport link: %s\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#495: FILE: drivers/edac/amd64_edac.c:2669:
+			htlink_msgs[

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#499: FILE: drivers/edac/amd64_edac.c:2673:
+	/* Check the UE bit of the NB status high register, if set
 	             ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#507: FILE: drivers/edac/amd64_edac.c:2681:
+			edac_mc_handle_ue_no_info(mci, "UE bit is set\n");
 			                                ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/edac/amd64_edac.c:2686:
+		amd64_mc_printk(mci, KERN_CRIT,
+			"PCC (processor context corrupt) set\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#518: FILE: drivers/edac/amd64_edac.c:2692:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 36 checks, 468 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
