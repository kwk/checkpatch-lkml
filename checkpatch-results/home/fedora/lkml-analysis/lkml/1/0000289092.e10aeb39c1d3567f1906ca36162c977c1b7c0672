WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> this is the third full mmiotrace patch set for review (a bit late, sorry).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: kernel/trace/trace.c:836:
+void __trace_mmiotrace_rw(struct trace_array *tr, struct trace_array_cpu *data,
+						struct mmiotrace_rw *rw)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: kernel/trace/trace.c:856:
+void __trace_mmiotrace_map(struct trace_array *tr, struct trace_array_cpu *data,
+						struct mmiotrace_map *map)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: kernel/trace/trace.h:266:
+extern void __trace_mmiotrace_rw(struct trace_array *tr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: kernel/trace/trace.h:267:
+extern void __trace_mmiotrace_rw(struct trace_array *tr,
+				struct trace_array_cpu *data,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: kernel/trace/trace.h:269:
+extern void __trace_mmiotrace_map(struct trace_array *tr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: kernel/trace/trace.h:270:
+extern void __trace_mmiotrace_map(struct trace_array *tr,
+				struct trace_array_cpu *data,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: kernel/trace/trace.h:306:
+extern int trace_seq_printf(struct trace_seq *s, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: kernel/trace/trace.h:309:
+extern long ns2usecs(cycle_t nsec);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#267: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#272: FILE: kernel/trace/trace_mmiotrace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#306: FILE: kernel/trace/trace_mmiotrace.c:35:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#316: FILE: kernel/trace/trace_mmiotrace.c:45:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#325: FILE: kernel/trace/trace_mmiotrace.c:54:
+	pr_debug("in %s\n", __func__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#365: FILE: kernel/trace/trace_mmiotrace.c:94:
+		ret += trace_seq_printf(s, " \n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: kernel/trace/trace_mmiotrace.c:125:
+	struct header_iter *hiter = iter->private;
+	destroy_header_iter(hiter);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: kernel/trace/trace_mmiotrace.c:133:
+	unsigned long cnt = 0;
+	for_each_online_cpu(cpu) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#411: FILE: kernel/trace/trace_mmiotrace.c:140:
+static ssize_t mmio_read(struct trace_iterator *iter, struct file *filp,
                                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: kernel/trace/trace_mmiotrace.c:141:
+static ssize_t mmio_read(struct trace_iterator *iter, struct file *filp,
+				char __user *ubuf, size_t cnt, loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: kernel/trace/trace_mmiotrace.c:181:
+	unsigned secs		= (unsigned long)t;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: kernel/trace/trace_mmiotrace.c:187:
+		ret = trace_seq_printf(s,
+			"R %d %lu.%06lu %d 0x%lx 0x%lx 0x%lx %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: kernel/trace/trace_mmiotrace.c:193:
+		ret = trace_seq_printf(s,
+			"W %d %lu.%06lu %d 0x%lx 0x%lx 0x%lx %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: kernel/trace/trace_mmiotrace.c:199:
+		ret = trace_seq_printf(s,
+			"UNKNOWN %lu.%06lu %d 0x%lx %02x,%02x,%02x 0x%lx %d\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#491: FILE: kernel/trace/trace_mmiotrace.c:220:
+	unsigned secs		= (unsigned long)t;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: kernel/trace/trace_mmiotrace.c:226:
+		ret = trace_seq_printf(s,
+			"MAP %lu.%06lu %d 0x%lx 0x%lx 0x%lx 0x%lx %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: kernel/trace/trace_mmiotrace.c:232:
+		ret = trace_seq_printf(s,
+			"UNMAP %lu.%06lu %d 0x%lx %d\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#529: FILE: kernel/trace/trace_mmiotrace.c:258:
+static struct tracer mmio_tracer __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#550: FILE: kernel/trace/trace_mmiotrace.c:279:
+	struct trace_array_cpu *data = tr->data[smp_processor_id()];
+	__trace_mmiotrace_rw(tr, data, rw);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289092.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 14 checks, 472 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289092.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
