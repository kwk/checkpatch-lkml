WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
the VSA, so it is necessary to emulate the PCI BARs in the kernel.  This also

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: arch/x86/Kconfig:1423:
+config PCI_GOOLPC
+	bool "OLPC"
+	depends on OLPC
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#108: FILE: arch/x86/Kconfig:1566:
+config OLPC
+	bool "One Laptop Per Child support"
+	default n
+	help
+	  Add support for detecting the unique features of the OLPC
+	  XO hardware.
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#132: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#137: FILE: arch/x86/kernel/olpc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: arch/x86/kernel/olpc.c:42:
+		printk(KERN_ERR "olpc-ec:  invalid argument to "

WARNING:SPLIT_STRING: quoted string split across lines
#179: FILE: arch/x86/kernel/olpc.c:43:
+		printk(KERN_ERR "olpc-ec:  invalid argument to "
+				"'olpc_ec_timeout=', ignoring!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#181: FILE: arch/x86/kernel/olpc.c:45:
+	printk(KERN_DEBUG "olpc-ec:  using %d ms delay for EC commands.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/x86/kernel/olpc.c:46:
+	printk(KERN_DEBUG "olpc-ec:  using %d ms delay for EC commands.\n",
+			ec_timeout);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#185: FILE: arch/x86/kernel/olpc.c:49:
+__setup("olpc_ec_timeout=", olpc_ec_timeout_set);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == desired'
#212: FILE: arch/x86/kernel/olpc.c:76:
+	if ((state == desired) && (ec_timeout > EC_BASE_TIMEOUT) &&
+			timeo < (ec_timeout - EC_BASE_TIMEOUT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec_timeout > EC_BASE_TIMEOUT'
#212: FILE: arch/x86/kernel/olpc.c:76:
+	if ((state == desired) && (ec_timeout > EC_BASE_TIMEOUT) &&
+			timeo < (ec_timeout - EC_BASE_TIMEOUT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: arch/x86/kernel/olpc.c:77:
+	if ((state == desired) && (ec_timeout > EC_BASE_TIMEOUT) &&
+			timeo < (ec_timeout - EC_BASE_TIMEOUT)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#214: FILE: arch/x86/kernel/olpc.c:78:
+		printk(KERN_WARNING "olpc-ec:  %d: waited %u ms for IBF!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: arch/x86/kernel/olpc.c:79:
+		printk(KERN_WARNING "olpc-ec:  %d: waited %u ms for IBF!\n",
+				line, ec_timeout - timeo);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == desired'
#232: FILE: arch/x86/kernel/olpc.c:96:
+	if ((state == desired) && (ec_timeout > EC_BASE_TIMEOUT) &&
+			timeo < (ec_timeout - EC_BASE_TIMEOUT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec_timeout > EC_BASE_TIMEOUT'
#232: FILE: arch/x86/kernel/olpc.c:96:
+	if ((state == desired) && (ec_timeout > EC_BASE_TIMEOUT) &&
+			timeo < (ec_timeout - EC_BASE_TIMEOUT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/x86/kernel/olpc.c:97:
+	if ((state == desired) && (ec_timeout > EC_BASE_TIMEOUT) &&
+			timeo < (ec_timeout - EC_BASE_TIMEOUT)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#234: FILE: arch/x86/kernel/olpc.c:98:
+		printk(KERN_WARNING "olpc-ec:  %d: waited %u ms for OBF!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: arch/x86/kernel/olpc.c:99:
+		printk(KERN_WARNING "olpc-ec:  %d: waited %u ms for OBF!\n",
+				line, ec_timeout - timeo);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: arch/x86/kernel/olpc.c:125:
+		printk(KERN_ERR "olpc-ec:  timeout while attempting to "

WARNING:SPLIT_STRING: quoted string split across lines
#262: FILE: arch/x86/kernel/olpc.c:126:
+		printk(KERN_ERR "olpc-ec:  timeout while attempting to "
+				"clear OBF flag!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#267: FILE: arch/x86/kernel/olpc.c:131:
+		printk(KERN_ERR "olpc-ec:  timeout waiting for EC to "

WARNING:SPLIT_STRING: quoted string split across lines
#268: FILE: arch/x86/kernel/olpc.c:132:
+		printk(KERN_ERR "olpc-ec:  timeout waiting for EC to "
+				"quiesce!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#282: FILE: arch/x86/kernel/olpc.c:146:
+	printk(KERN_DEBUG "olpc-ec:  running cmd 0x%x\n", cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: arch/x86/kernel/olpc.c:150:
+		printk(KERN_ERR "olpc-ec:  timeout waiting for EC to read "

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: arch/x86/kernel/olpc.c:151:
+		printk(KERN_ERR "olpc-ec:  timeout waiting for EC to read "
+				"command!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#295: FILE: arch/x86/kernel/olpc.c:159:
+				printk(KERN_ERR "olpc-ec:  timeout waiting for"

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: arch/x86/kernel/olpc.c:160:
+				printk(KERN_ERR "olpc-ec:  timeout waiting for"
+						" EC accept data!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#299: FILE: arch/x86/kernel/olpc.c:163:
+			printk(KERN_DEBUG "olpc-ec:  sending cmd arg 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: arch/x86/kernel/olpc.c:164:
+			printk(KERN_DEBUG "olpc-ec:  sending cmd arg 0x%x\n",
+					inbuf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#308: FILE: arch/x86/kernel/olpc.c:172:
+				printk(KERN_ERR "olpc-ec:  timeout waiting for"

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: arch/x86/kernel/olpc.c:173:
+				printk(KERN_ERR "olpc-ec:  timeout waiting for"
+						" EC to provide data!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#313: FILE: arch/x86/kernel/olpc.c:177:
+			printk(KERN_DEBUG "olpc-ec:  received 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: arch/x86/kernel/olpc.c:178:
+			printk(KERN_DEBUG "olpc-ec:  received 0x%x\n",
+					outbuf[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: arch/x86/kernel/olpc.c:196:
+	if (ofw("getprop", 4, 1, NULL, "board-revision-int", &rev, 4,
+			&propsize) || propsize != 4) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#333: FILE: arch/x86/kernel/olpc.c:197:
+		printk(KERN_ERR "ofw: getprop call failed!\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: arch/x86/kernel/olpc.c:222:
+	if (strncmp(romsig+6, romsig+13, 3)) {
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: arch/x86/kernel/olpc.c:222:
+	if (strncmp(romsig+6, romsig+13, 3)) {
 	                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#359: FILE: arch/x86/kernel/olpc.c:223:
+		printk(KERN_INFO "OLPC BIOS signature looks invalid.  "

WARNING:SPLIT_STRING: quoted string split across lines
#360: FILE: arch/x86/kernel/olpc.c:224:
+		printk(KERN_INFO "OLPC BIOS signature looks invalid.  "
+				"Assuming not OLPC\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#364: FILE: arch/x86/kernel/olpc.c:228:
+	printk(KERN_INFO "OLPC board with OpenFirmware %.16s\n", romsig);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: arch/x86/kernel/olpc.c:240:
+	olpc_ec_cmd(EC_FIRMWARE_REV, NULL, 0,
+			(unsigned char *) &olpc_platform_info.ecver, 1);

CHECK:SPACING: No space is necessary after a cast
#376: FILE: arch/x86/kernel/olpc.c:240:
+			(unsigned char *) &olpc_platform_info.ecver, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#382: FILE: arch/x86/kernel/olpc.c:246:
+	printk(KERN_INFO "OLPC board revision %s%X (EC=%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: arch/x86/kernel/olpc.c:247:
+	printk(KERN_INFO "OLPC board revision %s%X (EC=%x)\n",
+			((olpc_platform_info.boardrev & 0xf) < 8) ? "pre" : "",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#425: FILE: arch/x86/pci/olpc.c:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#469: FILE: arch/x86/pci/olpc.c:45:
+static const uint32_t lxnb_hdr[] = {  /* dev 1 function 0 - devfn = 8 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#482: FILE: arch/x86/pci/olpc.c:58:
+static const uint32_t gxnb_hdr[] = {  /* dev 1 function 0 - devfn = 8 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#495: FILE: arch/x86/pci/olpc.c:71:
+static const uint32_t lxfb_hdr[] = {  /* dev 1 function 1 - devfn = 9 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#508: FILE: arch/x86/pci/olpc.c:84:
+static const uint32_t gxfb_hdr[] = {  /* dev 1 function 1 - devfn = 9 */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#517: FILE: arch/x86/pci/olpc.c:93:
+^I0x3d0,^I0x3c0,^I0xa0000, 0x0,  ^I    /* VG IO, VG IO, EGA FB, MONO FB */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#521: FILE: arch/x86/pci/olpc.c:97:
+static const uint32_t aes_hdr[] = {	/* dev 1 function 2 - devfn = 0xa */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#534: FILE: arch/x86/pci/olpc.c:110:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#535: FILE: arch/x86/pci/olpc.c:111:
+static const uint32_t isa_hdr[] = {  /* dev f function 0 - devfn = 78 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#548: FILE: arch/x86/pci/olpc.c:124:
+static const uint32_t ac97_hdr[] = {  /* dev f function 3 - devfn = 7b */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#561: FILE: arch/x86/pci/olpc.c:137:
+static const uint32_t ohci_hdr[] = {  /* dev f function 4 - devfn = 7c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#570: FILE: arch/x86/pci/olpc.c:146:
+	0xc8020001, 0x0, 0x0,	0x0,	/* Capabilities - 40 is R/O,
+					   44 is mask 8103 (power control) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#570: FILE: arch/x86/pci/olpc.c:146:
+					   44 is mask 8103 (power control) */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#575: FILE: arch/x86/pci/olpc.c:151:
+static const uint32_t ehci_hdr[] = {  /* dev f function 4 - devfn = 7d */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#584: FILE: arch/x86/pci/olpc.c:160:
+	0xc8020001, 0x0, 0x0,	0x0,	/* Capabilities - 40 is R/O, 44 is
+					   mask 8103 (power control) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#584: FILE: arch/x86/pci/olpc.c:160:
+					   mask 8103 (power control) */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#585: FILE: arch/x86/pci/olpc.c:161:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#590: FILE: arch/x86/pci/olpc.c:166:
+	0x2020,	0x0,	0x0,	0x0,	/* (EHCI page 8) 60 SBRN (R/O),
+					   61 FLADJ (R/W), PORTWAKECAP  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#590: FILE: arch/x86/pci/olpc.c:166:
+					   61 FLADJ (R/W), PORTWAKECAP  */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#593: FILE: arch/x86/pci/olpc.c:169:
+static uint32_t ff_loc = ~0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#594: FILE: arch/x86/pci/olpc.c:170:
+static uint32_t zero_loc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: arch/x86/pci/olpc.c:180:
+	return (!bus && ((PCI_SLOT(devfn) == NB_SLOT) ||
+			(PCI_SLOT(devfn) == SB_SLOT)));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#607: FILE: arch/x86/pci/olpc.c:183:
+static uint32_t *hdr_addr(const uint32_t *hdr, int reg)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#609: FILE: arch/x86/pci/olpc.c:185:
+	uint32_t addr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: arch/x86/pci/olpc.c:205:
+static int pci_olpc_read(unsigned int seg, unsigned int bus,
+		unsigned int devfn, int reg, int len, uint32_t *value)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#631: FILE: arch/x86/pci/olpc.c:207:
+	uint32_t *addr;

CHECK:BRACES: braces {} should be used on all arms of this statement
#641: FILE: arch/x86/pci/olpc.c:217:
+	if (reg >= 0x70)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#643: FILE: arch/x86/pci/olpc.c:219:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#682: FILE: arch/x86/pci/olpc.c:258:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: arch/x86/pci/olpc.c:265:
+static int pci_olpc_write(unsigned int seg, unsigned int bus,
+		unsigned int devfn, int reg, int len, uint32_t value)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg >= 0x10'
#705: FILE: arch/x86/pci/olpc.c:281:
+	if ((reg >= 0x10) && (reg < 0x2c)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg < 0x2c'
#705: FILE: arch/x86/pci/olpc.c:281:
+	if ((reg >= 0x10) && (reg < 0x2c)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg != PCI_ROM_ADDRESS'
#714: FILE: arch/x86/pci/olpc.c:290:
+		if ((reg != PCI_ROM_ADDRESS) && (reg != PCI_COMMAND_MASTER) &&
+				(reg != PCI_LATENCY_TIMER) &&
+				(reg != PCI_CACHE_LINE_SIZE) && (reg != 0x44))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg != PCI_COMMAND_MASTER'
#714: FILE: arch/x86/pci/olpc.c:290:
+		if ((reg != PCI_ROM_ADDRESS) && (reg != PCI_COMMAND_MASTER) &&
+				(reg != PCI_LATENCY_TIMER) &&
+				(reg != PCI_CACHE_LINE_SIZE) && (reg != 0x44))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg != PCI_LATENCY_TIMER'
#714: FILE: arch/x86/pci/olpc.c:290:
+		if ((reg != PCI_ROM_ADDRESS) && (reg != PCI_COMMAND_MASTER) &&
+				(reg != PCI_LATENCY_TIMER) &&
+				(reg != PCI_CACHE_LINE_SIZE) && (reg != 0x44))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg != PCI_CACHE_LINE_SIZE'
#714: FILE: arch/x86/pci/olpc.c:290:
+		if ((reg != PCI_ROM_ADDRESS) && (reg != PCI_COMMAND_MASTER) &&
+				(reg != PCI_LATENCY_TIMER) &&
+				(reg != PCI_CACHE_LINE_SIZE) && (reg != 0x44))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg != 0x44'
#714: FILE: arch/x86/pci/olpc.c:290:
+		if ((reg != PCI_ROM_ADDRESS) && (reg != PCI_COMMAND_MASTER) &&
+				(reg != PCI_LATENCY_TIMER) &&
+				(reg != PCI_CACHE_LINE_SIZE) && (reg != 0x44))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: arch/x86/pci/olpc.c:291:
+		if ((reg != PCI_ROM_ADDRESS) && (reg != PCI_COMMAND_MASTER) &&
+				(reg != PCI_LATENCY_TIMER) &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#717: FILE: arch/x86/pci/olpc.c:293:
+			printk(KERN_WARNING "OLPC PCI: Config write to devfn"

WARNING:SPLIT_STRING: quoted string split across lines
#718: FILE: arch/x86/pci/olpc.c:294:
+			printk(KERN_WARNING "OLPC PCI: Config write to devfn"
+				" %x reg %x value %x\n", devfn, reg, value);

WARNING:CONST_STRUCT: struct pci_raw_ops should normally be const
#724: FILE: arch/x86/pci/olpc.c:300:
+static struct pci_raw_ops pci_olpc_conf = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#734: FILE: arch/x86/pci/olpc.c:310:
+	printk(KERN_INFO "PCI: Using configuration type OLPC\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#746: FILE: arch/x86/pci/pci.h:104:
+extern void pci_olpc_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#756: FILE: include/asm-x86/olpc.h:1:
+/* OLPC machine specific definitions */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#765: FILE: include/asm-x86/olpc.h:10:
+	uint32_t boardrev;

WARNING:TYPO_SPELLING: 'withing' may be misspelled - perhaps 'within'?
#779: FILE: include/asm-x86/olpc.h:24:
+ * and the minor build number withing 0x000f.  Pre-builds have a minor
                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#854: FILE: include/asm-x86/olpc.h:99:
+extern int olpc_ec_cmd(unsigned char cmd, unsigned char *inbuf, size_t inlen,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: include/asm-x86/olpc.h:100:
+extern int olpc_ec_cmd(unsigned char cmd, unsigned char *inbuf, size_t inlen,
+		unsigned char *outbuf, size_t outlen);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#857: FILE: include/asm-x86/olpc.h:102:
+extern int olpc_ec_mask_set(uint8_t bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#858: FILE: include/asm-x86/olpc.h:103:
+extern int olpc_ec_mask_unset(uint8_t bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#860: FILE: include/asm-x86/olpc.h:105:
+extern void olpc_register_battery_callback(void (*f)(unsigned long));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#861: FILE: include/asm-x86/olpc.h:106:
+extern void olpc_deregister_battery_callback(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 44 warnings, 54 checks, 789 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
