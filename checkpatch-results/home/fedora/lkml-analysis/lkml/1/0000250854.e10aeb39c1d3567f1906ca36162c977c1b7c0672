WARNING:TYPO_SPELLING: 'an union' may be misspelled - perhaps 'a union'?
#27: 
Subject: [PATCH 06/10] ide: make drive->id an union
                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#368: FILE: drivers/ide/ide-disk.c:894:
+		printk(KERN_CONT " w/%dKiB Cache", id[ATA_ID_BUF_SIZE] / 2);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#368: FILE: drivers/ide/ide-disk.c:894:
+		printk(KERN_CONT " w/%dKiB Cache", id[ATA_ID_BUF_SIZE] / 2);

CHECK:CAMELCASE: Avoid CamelCase: <tDMA>
#475: FILE: drivers/ide/ide-dma.c:652:
+		} else if (drive->driveid->tDMA) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'Clik' may be misspelled - perhaps 'Click'?
#575: FILE: drivers/ide/ide-floppy.c:1056:
+	if (strncmp((char *)&id[ATA_ID_PROD], "IOMEGA Clik!", 11) == 0) {
 	                                              ^^^^

CHECK:CAMELCASE: Avoid CamelCase: <tPIO>
#775: FILE: drivers/ide/ide-lib.c:105:
+		pio_mode = drive->driveid->tPIO;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#812: FILE: drivers/ide/ide-probe.c:55:
+	id[ATA_ID_CUR_CYLS]	= id[ATA_ID_CYLS]	= drive->cyl;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#813: FILE: drivers/ide/ide-probe.c:56:
+	id[ATA_ID_CUR_HEADS]	= id[ATA_ID_HEADS]	= drive->head;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#814: FILE: drivers/ide/ide-probe.c:57:
+	id[ATA_ID_CUR_SECTORS]	= id[ATA_ID_SECTORS]	= drive->sect;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#827: FILE: drivers/ide/ide-probe.c:66:
+		drive->cyl  = drive->bios_cyl  = id[ATA_ID_CYLS];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#828: FILE: drivers/ide/ide-probe.c:67:
+		drive->head = drive->bios_head = id[ATA_ID_HEADS];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#829: FILE: drivers/ide/ide-probe.c:68:
+		drive->sect = drive->bios_sect = id[ATA_ID_SECTORS];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#909: FILE: drivers/ide/ide-probe.c:158:
+	printk(KERN_INFO "%s: %s, ", drive->name, m);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#966: FILE: drivers/ide/ide-probe.c:527:
+	printk(KERN_INFO "%s: enabling %s -- ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: drivers/ide/ide-probe.c:528:
+	printk(KERN_INFO "%s: enabling %s -- ",
+		hwif->name, (char *)&drive->id[ATA_ID_PROD]);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1178: FILE: drivers/ide/ide-timings.c:164:
+			p.cycle = p.cyc8b = id[ATA_ID_EIDE_PIO];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1181: FILE: drivers/ide/ide-timings.c:166:
+			p.cycle = p.cyc8b = id[ATA_ID_EIDE_PIO_IORDY];

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1354: FILE: drivers/ide/pci/it821x.c:446:
 static void __devinit it821x_quirkproc(ide_drive_t *drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1390: FILE: drivers/ide/pci/it821x.c:481:
+				printk(KERN_CONT "(%dK stripe)", id[146]);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1390: FILE: drivers/ide/pci/it821x.c:481:
+				printk(KERN_CONT "(%dK stripe)", id[146]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1391: FILE: drivers/ide/pci/it821x.c:482:
+			printk(KERN_CONT ".\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1391: FILE: drivers/ide/pci/it821x.c:482:
+			printk(KERN_CONT ".\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strstr"
#1446: FILE: drivers/ide/pci/pdc202xx_new.c:209:
+		if (strstr(m, *list) != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strstr"
#1472: FILE: drivers/ide/pci/pdc202xx_old.c:160:
+		if (strstr(m, *list) != NULL) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1541: FILE: drivers/ide/pci/siimage.c:622:
+	unsigned len	= strnlen(s, ATA_ID_PROD_LEN);

CHECK:CAMELCASE: Avoid CamelCase: <cycleTime>
#1567: FILE: drivers/ide/ppc/pmac.c:690:
+		cycleTime = max_t(int, id[ATA_ID_EIDE_DMA_TIME], cycleTime);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16 *' should also have an identifier name
#1632: FILE: include/linux/ide.h:927:
+void ide_fix_driveid(u16 *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16 *' should also have an identifier name
#1641: FILE: include/linux/ide.h:1248:
+int ide_in_drive_list(u16 *, const struct drive_list_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct drive_list_entry *' should also have an identifier name
#1641: FILE: include/linux/ide.h:1248:
+int ide_in_drive_list(u16 *, const struct drive_list_entry *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250854.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 14 checks, 1391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250854.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
