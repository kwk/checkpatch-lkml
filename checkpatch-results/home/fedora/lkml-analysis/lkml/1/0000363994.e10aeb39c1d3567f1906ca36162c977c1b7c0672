CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#68: FILE: drivers/scsi/arcmsr/arcmsr.h:342:
+	uint32_t	__iomem *drv2iop_doorbell_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#69: FILE: drivers/scsi/arcmsr/arcmsr.h:343:
+	uint32_t	__iomem *drv2iop_doorbell_mask_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#70: FILE: drivers/scsi/arcmsr/arcmsr.h:344:
+	uint32_t	__iomem *iop2drv_doorbell_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#71: FILE: drivers/scsi/arcmsr/arcmsr.h:345:
+	uint32_t	__iomem *iop2drv_doorbell_mask_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#72: FILE: drivers/scsi/arcmsr/arcmsr.h:346:
+	uint32_t	__iomem *msgcode_rwbuffer_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#73: FILE: drivers/scsi/arcmsr/arcmsr.h:347:
+	uint32_t	__iomem *ioctl_wbuffer_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#74: FILE: drivers/scsi/arcmsr/arcmsr.h:348:
+	uint32_t	__iomem *ioctl_rbuffer_reg;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#84: FILE: drivers/scsi/arcmsr/arcmsr.h:378:
+		struct MessageUnit *		pmu;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <MessageUnit>
#84: FILE: drivers/scsi/arcmsr/arcmsr.h:378:
+		struct MessageUnit *		pmu;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#85: FILE: drivers/scsi/arcmsr/arcmsr.h:379:
+		struct MessageUnit_A __iomem *	pmuA;

CHECK:CAMELCASE: Avoid CamelCase: <MessageUnit_A>
#85: FILE: drivers/scsi/arcmsr/arcmsr.h:379:
+		struct MessageUnit_A __iomem *	pmuA;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#86: FILE: drivers/scsi/arcmsr/arcmsr.h:380:
+		struct MessageUnit_B *		pmuB;

CHECK:CAMELCASE: Avoid CamelCase: <MessageUnit_B>
#86: FILE: drivers/scsi/arcmsr/arcmsr.h:380:
+		struct MessageUnit_B *		pmuB;

CHECK:CAMELCASE: Avoid CamelCase: <AdapterControlBlock>
#96: FILE: drivers/scsi/arcmsr/arcmsr.h:565:
+extern struct QBUFFER __iomem *arcmsr_get_iop_rqbuffer(struct AdapterControlBlock *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: drivers/scsi/arcmsr/arcmsr.h:565:
+extern struct QBUFFER __iomem *arcmsr_get_iop_rqbuffer(struct AdapterControlBlock *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct AdapterControlBlock *' should also have an identifier name
#96: FILE: drivers/scsi/arcmsr/arcmsr.h:565:
+extern struct QBUFFER __iomem *arcmsr_get_iop_rqbuffer(struct AdapterControlBlock *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#111: FILE: drivers/scsi/arcmsr/arcmsr_attr.c:89:
+		uint8_t __iomem *iop_data;

CHECK:CAMELCASE: Avoid CamelCase: <pmuA>
#131: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:239:
+		acb->pmuA = ioremap(pci_resource_start(pdev, 0), pci_resource_len(pdev, 0));

CHECK:CAMELCASE: Avoid CamelCase: <pmuB>
#150: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:331:
+		acb->pmuB = reg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1077:
+		struct MessageUnit_A __iomem *reg = acb->pmuA;
+		qbuffer = (struct QBUFFER __iomem *)&reg->message_rbuffer;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1083:
+		struct MessageUnit_B *reg = acb->pmuB;
+		qbuffer = (struct QBUFFER __iomem *)reg->ioctl_rbuffer_reg;

CHECK:SPACING: No space is necessary after a cast
#430: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1098:
+		pqbuffer = (struct QBUFFER __iomem *) &reg->message_wbuffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#430: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1098:
+		struct MessageUnit_A __iomem *reg = acb->pmuA;
+		pqbuffer = (struct QBUFFER __iomem *) &reg->message_wbuffer;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#448: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1115:
+	uint8_t __iomem *iop_data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#466: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1150:
+		uint8_t __iomem *iop_data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#522: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1304:
+	uint8_t __iomem *iop_data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#533: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1379:
+			uint8_t __iomem *iop_data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#565: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1709:
+	uint32_t __iomem *lrwbuffer = reg->msgcode_rwbuffer_reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#609: FILE: drivers/scsi/arcmsr/arcmsr_hba.c:1937:
+		uint32_t __iomem *rwbuffer;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 4 warnings, 22 checks, 574 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
