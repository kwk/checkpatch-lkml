WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
inode_operations structures for sysfs. This handler uses two new LSM hooks. The

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: fs/sysfs/inode.c:47:
+struct sysfs_inode_attrs * sysfs_init_inode_attrs(struct sysfs_dirent * sd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: fs/sysfs/inode.c:47:
+struct sysfs_inode_attrs * sysfs_init_inode_attrs(struct sysfs_dirent * sd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: fs/sysfs/inode.c:49:
+	struct sysfs_inode_attrs * attrs;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: fs/sysfs/inode.c:50:
+	struct iattr * iattrs;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*attrs)...) over kzalloc(sizeof(struct sysfs_inode_attrs)...)
#97: FILE: fs/sysfs/inode.c:52:
+	attrs = kzalloc(sizeof(struct sysfs_inode_attrs), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#98: FILE: fs/sysfs/inode.c:53:
+	if(!attrs)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: fs/sysfs/inode.c:56:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#106: FILE: fs/sysfs/inode.c:61:
+	iattrs->ia_atime = iattrs->ia_mtime = iattrs->ia_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: fs/sysfs/inode.c:62:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/sysfs/inode.c:63:
+^Ireturn attrs;^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/sysfs/inode.c:69:
+	struct sysfs_inode_attrs * sd_attrs;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#116: FILE: fs/sysfs/inode.c:70:
+	struct iattr * iattrs;

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#148: FILE: fs/sysfs/inode.c:96:
+		/* attributes were changed atleast once in past */
 		                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: fs/sysfs/inode.c:105:
+			iattrs->ia_atime = timespec_trunc(iattr->ia_atime,
+					inode->i_sb->s_time_gran);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: fs/sysfs/inode.c:108:
+			iattrs->ia_mtime = timespec_trunc(iattr->ia_mtime,
+					inode->i_sb->s_time_gran);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: fs/sysfs/inode.c:111:
+			iattrs->ia_ctime = timespec_trunc(iattr->ia_ctime,
+					inode->i_sb->s_time_gran);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#169: FILE: fs/sysfs/inode.c:117:
+			iattrs->ia_mode = sd->s_mode = mode;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: fs/sysfs/inode.c:124:
+int sysfs_setxattr(struct dentry *dentry, const char *name, const void *value,
+		size_t size, int flags)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/sysfs/inode.c:127:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: fs/sysfs/inode.c:186:
+	struct sysfs_inode_attrs * iattrs;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: fs/sysfs/sysfs.h:159:
+int sysfs_setxattr(struct dentry *dentry, const char *name, const void *value,
+		size_t size, int flags);

WARNING:SPACING: Unnecessary space before function pointer arguments
#319: FILE: include/linux/security.h:1444:
+	int (*xattr_to_secid) (const char *name, const void *value,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: include/linux/security.h:1445:
+	int (*xattr_to_secid) (const char *name, const void *value,
+			size_t size, u32 *secid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: include/linux/security.h:1707:
+int security_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: include/linux/security.h:2186:
+static inline int security_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: security/capability.c:271:
+int cap_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: security/capability.c:273:
+     return -EOPNOTSUPP;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: security/security.c:624:
+int security_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: security/selinux/hooks.c:2941:
+	struct inode_security_struct *isec = inode->i_security;
+	isec->sid = secid;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: security/selinux/hooks.c:2945:
+static int selinux_xattr_to_secid(const char *name, const void *value,
+		size_t size, u32 *secid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: security/smack/smack_lsm.c:880:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: security/smack/smack_lsm.c:881:
+^Iisp->smk_inode = smack_from_secid(secid);^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#479: FILE: security/smack/smack_lsm.c:891:
+static int smack_xattr_to_secid(const char *name, const void* value,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: security/smack/smack_lsm.c:892:
+static int smack_xattr_to_secid(const char *name, const void* value,
+			size_t size, u32 *secid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: security/smack/smack_lsm.c:894:
+^Ichar *sp;^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sp"
#491: FILE: security/smack/smack_lsm.c:903:
+	if (sp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: security/smack/smack_lsm.c:909:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: security/smack/smack_lsm.c:3103:
+^I.inode_setsecid = ^I^Ismack_inode_setsecid,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: security/smack/smack_lsm.c:3105:
+^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 6 warnings, 17 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
