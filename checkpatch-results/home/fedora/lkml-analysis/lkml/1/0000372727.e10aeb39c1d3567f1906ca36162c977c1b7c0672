WARNING:TYPO_SPELLING: 'lastest' may be misspelled - perhaps 'latest'?
#48: 
Pretty interesting feature. I modified your lastest patch a little bit
                                            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#63: FILE: arch/x86_64/kernel/early_printk.c:23:
+static void early_vga_write(struct console *con, const char *str, unsigned n,

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: arch/x86_64/kernel/early_printk.c:24:
+                            unsigned int loglevel)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: arch/x86_64/kernel/early_printk.c:24:
+                            unsigned int loglevel)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#73: FILE: arch/x86_64/kernel/early_printk.c:93:
+static void early_serial_write(struct console *con, const char *s, unsigned n,

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: arch/x86_64/kernel/early_printk.c:94:
+                               unsigned int loglevel)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/x86_64/kernel/early_printk.c:94:
+                               unsigned int loglevel)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#83: FILE: arch/x86_64/kernel/early_printk.c:190:
+static void simnow_write(struct console *con, const char *s, unsigned n,

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: arch/x86_64/kernel/early_printk.c:191:
+                         unsigned int loglevel)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/x86_64/kernel/early_printk.c:191:
+                         unsigned int loglevel)$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#105: FILE: drivers/char/Kconfig:61:
+config VT_CKO
+	bool "Colored kernel message output"
+	depends on VT_CONSOLE
+	---help---
+	  This option enables kernel messages to be emitted in
+	  colors other than the default.
+
+	  The color value you need to enter is composed (OR-ed)
+	  of a foreground and a background color.
+
+	  Foreground:
+	  0x00 = black,   0x08 = dark gray,
+	  0x01 = red,     0x09 = light red,
+	  0x02 = green,   0x0A = light green,
+	  0x03 = brown,   0x0B = yellow,
+	  0x04 = blue,    0x0C = light blue,
+	  0x05 = magenta, 0x0D = light magenta,
+	  0x06 = cyan,    0x0E = light cyan,
+	  0x07 = gray,    0x0F = white,
+
+	  (Foreground colors 0x08 to 0x0F do not work when a VGA
+	  console font with 512 glyphs is used.)
+
+	  Background:
+	  0x00 = black,   0x40 = blue,
+	  0x10 = red,     0x50 = magenta,
+	  0x20 = green,   0x60 = cyan,
+	  0x30 = brown,   0x70 = gray,
+
+	  For example, 0x1F would yield white on red.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#239: FILE: drivers/char/vt.c:2359:
+module_param_array(printk_color, uint, NULL, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:CAMELCASE: Avoid CamelCase: <xF>
#243: FILE: drivers/char/vt.c:2363:
+	vc->vc_color = color_table[color & 0xF] |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/char/vt.c:2364:
+^I               (color_table[(color >> 4) & 0x7] << 4) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/char/vt.c:2365:
+^I               (color & 0x80);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: drivers/char/vt.c:2381:
+static void vt_console_print(struct console *co, const char *b, unsigned count,

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/char/vt.c:2382:
+                             unsigned int loglevel)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/char/vt.c:2382:
+                             unsigned int loglevel)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: drivers/net/netconsole.c:69:
+static void write_msg(struct console *con, const char *msg, unsigned int len,
+    unsigned int loglevel)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/net/netconsole.c:69:
+    unsigned int loglevel)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/serial/8250.c:2468:
+                         unsigned int loglevel)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/serial/8250.c:2468:
+                         unsigned int loglevel)$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#354: FILE: drivers/serial/8250_early.c:84:
const char *s, unsigned int count)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/serial/8250_early.c:86:
+static void __init early_serial8250_write(struct console *console,
+    const char *s, unsigned int count, unsigned int loglevel)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/serial/8250_early.c:86:
+    const char *s, unsigned int count, unsigned int loglevel)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#370: FILE: include/linux/console.h:96:
+	void	(*write)(struct console *, const char *, unsigned, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct console *' should also have an identifier name
#370: FILE: include/linux/console.h:96:
+	void	(*write)(struct console *, const char *, unsigned, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#370: FILE: include/linux/console.h:96:
+	void	(*write)(struct console *, const char *, unsigned, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#370: FILE: include/linux/console.h:96:
+	void	(*write)(struct console *, const char *, unsigned, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#370: FILE: include/linux/console.h:96:
+	void	(*write)(struct console *, const char *, unsigned, unsigned int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: kernel/printk.c:324:
+static void __call_console_drivers(unsigned long start, unsigned long end,
+    unsigned int loglevel)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: kernel/printk.c:324:
+    unsigned int loglevel)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: kernel/printk.c:361:
+^I^I^I                       msg_log_level);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000372727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 20 warnings, 4 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000372727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
