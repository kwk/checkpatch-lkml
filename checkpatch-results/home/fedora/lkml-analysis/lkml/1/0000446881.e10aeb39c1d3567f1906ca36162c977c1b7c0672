WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: Documentation/lguest/lguest.c:1:
+/* Simple program to layout "physical" memory for new lguest guest.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#76: FILE: Documentation/lguest/lguest.c:2:
+ * Linked high to avoid likely physical memory.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#107: FILE: Documentation/lguest/lguest.c:33:
+typedef uint32_t u32;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#108: FILE: Documentation/lguest/lguest.c:34:
+typedef uint16_t u16;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#109: FILE: Documentation/lguest/lguest.c:35:
+typedef uint8_t u8;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: Documentation/lguest/lguest.c:38:
+#define PAGE_PRESENT 0x7 ^I/* Present, RW, Execute */$

ERROR:SPACING: space required before the open parenthesis '('
#118: FILE: Documentation/lguest/lguest.c:44:
+	do { if (verbose) printf(args); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#121: FILE: Documentation/lguest/lguest.c:47:
+struct device_list
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#130: FILE: Documentation/lguest/lguest.c:56:
+struct device
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: Documentation/lguest/lguest.c:77:
+	int fd = open(name, flags);
+	if (fd < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: Documentation/lguest/lguest.c:90:
+		 PROT_READ|PROT_WRITE|PROT_EXEC, MAP_FIXED|MAP_PRIVATE, fd, 0)
 		          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: Documentation/lguest/lguest.c:90:
+		 PROT_READ|PROT_WRITE|PROT_EXEC, MAP_FIXED|MAP_PRIVATE, fd, 0)
 		                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: Documentation/lguest/lguest.c:90:
+		 PROT_READ|PROT_WRITE|PROT_EXEC, MAP_FIXED|MAP_PRIVATE, fd, 0)
 		                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#171: FILE: Documentation/lguest/lguest.c:97:
+static unsigned long map_elf(int elf_fd, const Elf32_Ehdr *ehdr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#175: FILE: Documentation/lguest/lguest.c:101:
+	Elf32_Phdr phdr[ehdr->e_phnum];

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#180: FILE: Documentation/lguest/lguest.c:106:
+	if (ehdr->e_type != ET_EXEC
+	    || ehdr->e_machine != EM_386

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#181: FILE: Documentation/lguest/lguest.c:107:
+	    || ehdr->e_machine != EM_386
+	    || ehdr->e_phentsize != sizeof(Elf32_Phdr)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#182: FILE: Documentation/lguest/lguest.c:108:
+	    || ehdr->e_phentsize != sizeof(Elf32_Phdr)
+	    || ehdr->e_phnum < 1 || ehdr->e_phnum > 65536U/sizeof(Elf32_Phdr))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#182: FILE: Documentation/lguest/lguest.c:108:
+	    || ehdr->e_phnum < 1 || ehdr->e_phnum > 65536U/sizeof(Elf32_Phdr))
 	                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#192: FILE: Documentation/lguest/lguest.c:118:
+	 * to their physical addresses (our virtual == guest physical). */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: Documentation/lguest/lguest.c:135:
+			    PROT_READ|PROT_WRITE|PROT_EXEC,
 			             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: Documentation/lguest/lguest.c:135:
+			    PROT_READ|PROT_WRITE|PROT_EXEC,
 			                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#210: FILE: Documentation/lguest/lguest.c:136:
+			    MAP_FIXED|MAP_PRIVATE,
 			             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#228: FILE: Documentation/lguest/lguest.c:154:
+		if (img[i] == 0xA1 && ++possibilities[img[i+4]] > 3)
 		                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: Documentation/lguest/lguest.c:155:
+			return (unsigned long)img[i+4] << 24;
 			                           ^

CHECK:CAMELCASE: Avoid CamelCase: <gzFile>
#236: FILE: Documentation/lguest/lguest.c:162:
+	gzFile f;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#312: FILE: Documentation/lguest/lguest.c:238:
+		     PROT_READ|PROT_EXEC|PROT_WRITE,
 		              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#312: FILE: Documentation/lguest/lguest.c:238:
+		     PROT_READ|PROT_EXEC|PROT_WRITE,
 		                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#313: FILE: Documentation/lguest/lguest.c:239:
+		     MAP_FIXED|MAP_PRIVATE, ifd, 0);
 		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#324: FILE: Documentation/lguest/lguest.c:250:
+	return ((addr + getpagesize()-1) & ~(getpagesize()-1));
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#324: FILE: Documentation/lguest/lguest.c:250:
+	return ((addr + getpagesize()-1) & ~(getpagesize()-1));
 	                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: Documentation/lguest/lguest.c:259:
+	unsigned int ptes_per_page = getpagesize()/sizeof(u32);
 	                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#337: FILE: Documentation/lguest/lguest.c:263:
+		mapped_pages = mem/getpagesize();
 		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#339: FILE: Documentation/lguest/lguest.c:265:
+		mapped_pages = -page_offset/getpagesize();
 		                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#342: FILE: Documentation/lguest/lguest.c:268:
+	linear_pages = (mapped_pages + ptes_per_page-1)/ptes_per_page;
 	                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#342: FILE: Documentation/lguest/lguest.c:268:
+	linear_pages = (mapped_pages + ptes_per_page-1)/ptes_per_page;
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#346: FILE: Documentation/lguest/lguest.c:272:
+	linear = (void *)pgdir - linear_pages*getpagesize();
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#353: FILE: Documentation/lguest/lguest.c:279:
+		pgdir[(i + page_offset/getpagesize())/ptes_per_page]
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#353: FILE: Documentation/lguest/lguest.c:279:
+		pgdir[(i + page_offset/getpagesize())/ptes_per_page]
 		                                     ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#354: FILE: Documentation/lguest/lguest.c:280:
+		pgdir[(i + page_offset/getpagesize())/ptes_per_page]
+			= (((u32)linear + i*sizeof(u32)) | PAGE_PRESENT);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#354: FILE: Documentation/lguest/lguest.c:280:
+			= (((u32)linear + i*sizeof(u32)) | PAGE_PRESENT);
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#368: FILE: Documentation/lguest/lguest.c:294:
+		strcpy(dst+len, args[i]);
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#369: FILE: Documentation/lguest/lguest.c:295:
+		strcat(dst+len, " ");
 		          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#379: FILE: Documentation/lguest/lguest.c:305:
+		       LGUEST_GUEST_TOP/getpagesize(), /* Just below us */
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#406: FILE: Documentation/lguest/lguest.c:332:
+		select(devices->max_infd+1, &rfds, NULL, NULL, NULL);
 		                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#409: FILE: Documentation/lguest/lguest.c:335:
+			int ignorefd;
+			if (read(pipefd, &ignorefd, sizeof(ignorefd)) == 0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#453: FILE: Documentation/lguest/lguest.c:379:
+}
+#define check_pointer(addr,size) _check_pointer(addr, size, __LINE__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: Documentation/lguest/lguest.c:379:
+#define check_pointer(addr,size) _check_pointer(addr, size, __LINE__)
                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#456: FILE: Documentation/lguest/lguest.c:382:
+static u32 *dma2iov(unsigned long dma, struct iovec iov[], unsigned *num)

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: Documentation/lguest/lguest.c:419:
+	u32 buf[] = { LHREQ_IRQ, irq };
+	if (write(fd, buf, sizeof(buf)) != 0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#512: FILE: Documentation/lguest/lguest.c:438:
+struct console_abort
+{

CHECK:BRACES: braces {} should be used on all arms of this statement
#544: FILE: Documentation/lguest/lguest.c:470:
+	if (len == 1 && ((char *)iov[0].iov_base)[0] == 3) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#545: FILE: Documentation/lguest/lguest.c:471:
+		if (!abort->count++)
[...]
+		else if (abort->count == 3) {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: Documentation/lguest/lguest.c:475:
+			struct timeval now;
+			gettimeofday(&now, NULL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#550: FILE: Documentation/lguest/lguest.c:476:
+			if (now.tv_sec <= abort->start.tv_sec+1)
 			                                     ^

CHECK:BRACES: Unbalanced braces around else statement
#554: FILE: Documentation/lguest/lguest.c:480:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#565: FILE: Documentation/lguest/lguest.c:491:
+				 unsigned num, struct device*dev)

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#565: FILE: Documentation/lguest/lguest.c:491:
+				 unsigned num, struct device*dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#571: FILE: Documentation/lguest/lguest.c:497:
+			     unsigned num, struct device *dev)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#587: FILE: Documentation/lguest/lguest.c:513:
+	unsigned num;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#590: FILE: Documentation/lguest/lguest.c:516:
+	lenp = get_dma_buffer(fd, dev->mem+peer_offset(NET_PEERNUM), iov, &num,
 	                                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#612: FILE: Documentation/lguest/lguest.c:538:
+			       unsigned num, struct device *dev)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#656: FILE: Documentation/lguest/lguest.c:582:
+	unsigned num = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#676: FILE: Documentation/lguest/lguest.c:602:
+		if (select(devices->max_infd+1, &fds, NULL, NULL, &poll) == 0)
 		                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#702: FILE: Documentation/lguest/lguest.c:628:
+	if (num_pages) {
[...]
+	} else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#703: FILE: Documentation/lguest/lguest.c:629:
+		top -= num_pages*getpagesize();
 		                ^

CHECK:BRACES: Unbalanced braces around else statement
#706: FILE: Documentation/lguest/lguest.c:632:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#718: FILE: Documentation/lguest/lguest.c:644:
+						      unsigned,

WARNING:LINE_SPACING: Missing a blank line after declarations
#745: FILE: Documentation/lguest/lguest.c:671:
+		struct termios term = orig_term;
+		term.c_lflag &= ~(ISIG|ICANON|ECHO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#745: FILE: Documentation/lguest/lguest.c:671:
+		term.c_lflag &= ~(ISIG|ICANON|ECHO);
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#745: FILE: Documentation/lguest/lguest.c:671:
+		term.c_lflag &= ~(ISIG|ICANON|ECHO);
 		                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#767: FILE: Documentation/lguest/lguest.c:693:
+	fd = open_or_die(filename, O_RDWR|O_LARGEFILE|O_DIRECT);
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#767: FILE: Documentation/lguest/lguest.c:693:
+	fd = open_or_die(filename, O_RDWR|O_LARGEFILE|O_DIRECT);
 	                                             ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#771: FILE: Documentation/lguest/lguest.c:697:
+	device_len = dev->priv = malloc(sizeof(*device_len));

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#775: FILE: Documentation/lguest/lguest.c:701:
+	p->num_sectors = *device_len/512;
 	                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#789: FILE: Documentation/lguest/lguest.c:715:
+	     fl.l_start < getpagesize()/sizeof(struct lguest_net);
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#806: FILE: Documentation/lguest/lguest.c:732:
+			netfd = open(filename, O_RDWR|O_CREAT, 0600);
 			                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#809: FILE: Documentation/lguest/lguest.c:735:
+				char page[getpagesize()];
+				memset(page, 0, sizeof(page));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#818: FILE: Documentation/lguest/lguest.c:744:
+			 find_slot(netfd, filename)|LGUEST_NET_F_NOCSUM,
 			                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#822: FILE: Documentation/lguest/lguest.c:748:
+	if (mmap(dev->mem, getpagesize(), PROT_READ|PROT_WRITE,
[...]
+			err(1, "could not mmap '%s'", filename);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#822: FILE: Documentation/lguest/lguest.c:748:
+	if (mmap(dev->mem, getpagesize(), PROT_READ|PROT_WRITE,
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: Documentation/lguest/lguest.c:749:
+	if (mmap(dev->mem, getpagesize(), PROT_READ|PROT_WRITE,
+			 MAP_FIXED|MAP_SHARED, netfd, 0) != dev->mem)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#823: FILE: Documentation/lguest/lguest.c:749:
+			 MAP_FIXED|MAP_SHARED, netfd, 0) != dev->mem)
 			          ^

WARNING:NAKED_SSCANF: unchecked sscanf return value
#834: FILE: Documentation/lguest/lguest.c:760:
+	sscanf(ipaddr, "%u.%u.%u.%u", &byte[0], &byte[1], &byte[2], &byte[3]);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#896: FILE: Documentation/lguest/lguest.c:822:
+			 NET_PEERNUM|LGUEST_DEVICE_F_RANDOMNESS, netfd,
 			            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#905: FILE: Documentation/lguest/lguest.c:831:
+	if (!strncmp(BRIDGE_PFX, arg, strlen(BRIDGE_PFX))) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#909: FILE: Documentation/lguest/lguest.c:835:
+	} else

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#918: FILE: Documentation/lguest/lguest.c:844:
+		(u8)(ip>>24), (u8)(ip>>16), (u8)(ip>>8), (u8)ip);
 		       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#918: FILE: Documentation/lguest/lguest.c:844:
+		(u8)(ip>>24), (u8)(ip>>16), (u8)(ip>>8), (u8)ip);
 		                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#918: FILE: Documentation/lguest/lguest.c:844:
+		(u8)(ip>>24), (u8)(ip>>16), (u8)(ip>>8), (u8)ip);
 		                                   ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#947: FILE: Documentation/lguest/lguest.c:873:
+static void __attribute__((noreturn))

CHECK:BRACES: braces {} should be used on all arms of this statement
#962: FILE: Documentation/lguest/lguest.c:888:
+		if (readval == sizeof(arr))
[...]
+		else if (errno == ENOENT) {
[...]
+		} else if (errno != EINTR)
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#966: FILE: Documentation/lguest/lguest.c:892:
+			char reason[1024] = { 0 };
+			read(lguest_fd, reason, sizeof(reason)-1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#966: FILE: Documentation/lguest/lguest.c:892:
+			read(lguest_fd, reason, sizeof(reason)-1);
 			                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#981: FILE: Documentation/lguest/lguest.c:907:
+};
+static void usage(void)

WARNING:SPLIT_STRING: quoted string split across lines
#984: FILE: Documentation/lguest/lguest.c:910:
+	errx(1, "Usage: lguest [--verbose] "
+	     "[--sharenet=<filename>|--tunnet=(<ipaddr>|bridge:<bridgename>)\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1035: FILE: Documentation/lguest/lguest.c:961:
+	start = load_kernel(open_or_die(argv[optind+1], O_RDONLY),
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1049: FILE: Documentation/lguest/lguest.c:975:
+	concat(boot->cmdline, argv+optind+2);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1049: FILE: Documentation/lguest/lguest.c:975:
+	concat(boot->cmdline, argv+optind+2);
 	                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1050: FILE: Documentation/lguest/lguest.c:976:
+	boot->max_pfn = mem/getpagesize();
 	                   ^

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#1177: FILE: Documentation/lguest/lguest.txt:117:
+noone else has bound a DMA buffer to that key or some other error.
 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446881.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 23 warnings, 72 checks, 1127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446881.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
