WARNING:REPEATED_WORD: Possible repeated word: 'the'
#37: 
push requests to be processed by the the cache (raid5d).  raid5d also pulls

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
   handle queue the stripe_queue is placed on one of four lists.  Then raid5qd

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'devs' may be better as '(devs)' to avoid precedence issues
#97: FILE: drivers/md/raid5.c:82:
+#define r5_queue_weight_size(devs) (sizeof(unsigned long) *\
+					(1 + (devs / BITS_PER_LONG)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: drivers/md/raid5.c:126:
+			int queue = 1;
+			if (test_bit(STRIPE_QUEUE_OVERWRITE, &sq->state))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: drivers/md/raid5.c:145:
+			BUG_ON(!list_empty(&sq->list_node));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/md/raid5.c:148:
+			if (test_and_clear_bit(STRIPE_QUEUE_PREREAD_ACTIVE,
+						&sq->state)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: drivers/md/raid5.c:156:
+				BUG_ON(sq->sh == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq->sh"
#151: FILE: drivers/md/raid5.c:156:
+				BUG_ON(sq->sh == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/md/raid5.c:177:
+			if (test_bit(STRIPE_QUEUE_BIT_DELAY, &sq->state) &&
+				   sq->bm_seq - conf->seq_write > 0) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: drivers/md/raid5.c:189:
+				BUG_ON(sh->sq == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh->sq"
#196: FILE: drivers/md/raid5.c:189:
+				BUG_ON(sh->sq == NULL);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#265: FILE: drivers/md/raid5.c:319:
+}
+static void __zero_queue_weight(unsigned long *bitmap, int disks)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#275: FILE: drivers/md/raid5.c:329:
+	BUG_ON(sh->sq);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_stripe', this function's name, in a string
#288: FILE: drivers/md/raid5.c:342:
+	pr_debug("init_stripe called, stripe %llu\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/md/raid5.c:343:
+	pr_debug("init_stripe called, stripe %llu\n",
+		(unsigned long long)sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#294: FILE: drivers/md/raid5.c:348:
+	BUG_ON(sq->sh);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#321: FILE: drivers/md/raid5.c:365:
+			printk(KERN_ERR "sector=%llx i=%d %p %p\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#339: FILE: drivers/md/raid5.c:394:
+	pr_debug("%s, sector %llu\n", __FUNCTION__, (unsigned long long)sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/md/raid5.c:449:
+static void init_queue(struct stripe_queue *sq, sector_t sector,
+		int disks, int pd_idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/md/raid5.c:455:
+	pr_debug("%s: %llu -> %llu [%p]\n",
+		__FUNCTION__, (unsigned long long) sq->sector,

CHECK:SPACING: No space is necessary after a cast
#400: FILE: drivers/md/raid5.c:455:
+		__FUNCTION__, (unsigned long long) sq->sector,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#400: FILE: drivers/md/raid5.c:455:
+		__FUNCTION__, (unsigned long long) sq->sector,

CHECK:SPACING: No space is necessary after a cast
#401: FILE: drivers/md/raid5.c:456:
+		(unsigned long long) sector, sq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#403: FILE: drivers/md/raid5.c:458:
+	BUG_ON(atomic_read(&sq->count) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#404: FILE: drivers/md/raid5.c:459:
+	BUG_ON(sq->sh != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sq->sh"
#404: FILE: drivers/md/raid5.c:459:
+	BUG_ON(sq->sh != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#405: FILE: drivers/md/raid5.c:460:
+	BUG_ON(queue_weight(sq->to_read, disks));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#406: FILE: drivers/md/raid5.c:461:
+	BUG_ON(queue_weight(sq->to_write, disks));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#407: FILE: drivers/md/raid5.c:462:
+	BUG_ON(test_bit(STRIPE_QUEUE_HANDLE, &sq->state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/md/raid5.c:473:
+		if (dev_q->toread || dev_q->towrite ||
+			test_bit(R5_LOCKED, &dev_q->flags)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#419: FILE: drivers/md/raid5.c:474:
+			printk(KERN_ERR "sector=%llx i=%d %p %p %d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: drivers/md/raid5.c:478:
+			BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#431: FILE: drivers/md/raid5.c:486:
+		printk(KERN_ERR "%s: sq: %p sector: %llu bounced off the "

WARNING:SPLIT_STRING: quoted string split across lines
#432: FILE: drivers/md/raid5.c:487:
+		printk(KERN_ERR "%s: sq: %p sector: %llu bounced off the "
+			"stripe_queue rb_tree\n", __FUNCTION__, sq,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#432: FILE: drivers/md/raid5.c:487:
+			"stripe_queue rb_tree\n", __FUNCTION__, sq,

CHECK:SPACING: No space is necessary after a cast
#433: FILE: drivers/md/raid5.c:488:
+			(unsigned long long) sq->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#434: FILE: drivers/md/raid5.c:489:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/md/raid5.c:507:
+pickup_cached_stripe(struct stripe_head *sh, struct stripe_queue *sq,
+			int from_stripe_cache)

CHECK:BRACES: braces {} should be used on all arms of this statement
#456: FILE: drivers/md/raid5.c:511:
+	if (atomic_read(&sh->count))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#457: FILE: drivers/md/raid5.c:512:
+		BUG_ON(!list_empty(&sh->lru));

CHECK:BRACES: Unbalanced braces around else statement
#458: FILE: drivers/md/raid5.c:513:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#459: FILE: drivers/md/raid5.c:514:
+		if (!test_bit(STRIPE_HANDLE, &sh->state)) {
[...]
+		} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#462: FILE: drivers/md/raid5.c:517:
+			if (from_stripe_cache) {
[...]
+			} else if (unlikely(sq->sector != sh->sector))
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#463: FILE: drivers/md/raid5.c:518:
+				BUG_ON(sq->sh);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#466: FILE: drivers/md/raid5.c:521:
+				BUG();

CHECK:BRACES: Unbalanced braces around else statement
#467: FILE: drivers/md/raid5.c:522:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#468: FILE: drivers/md/raid5.c:523:
+			BUG_ON(!sh->sq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#471: FILE: drivers/md/raid5.c:526:
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/md/raid5.c:533:
+get_active_queue(raid5_conf_t *conf, sector_t sector, int disks,
+		int pd_idx, int noblock, struct stripe_head **sh)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#482: FILE: drivers/md/raid5.c:537:
+	pr_debug("%s, sector %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/md/raid5.c:538:
+	pr_debug("%s, sector %llu\n", __FUNCTION__,
+		(unsigned long long)sector);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq"
#495: FILE: drivers/md/raid5.c:550:
+			if (noblock && sq == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#502: FILE: drivers/md/raid5.c:557:
+			if (atomic_read(&sq->count)) {
[...]
+			} else if (!test_and_set_bit(STRIPE_QUEUE_HANDLE,
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#503: FILE: drivers/md/raid5.c:558:
+				BUG_ON(!sq->sh && list_empty(&sq->list_node));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq"
#508: FILE: drivers/md/raid5.c:563:
+	} while (sq == NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#512: FILE: drivers/md/raid5.c:567:
+	if (sq->sh) { /* since we are bypassing get_active_stripe to get this
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#518: FILE: drivers/md/raid5.c:573:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/md/raid5.c:585:
+get_active_stripe(raid5_conf_t *conf, struct stripe_queue *sq, int disks,
+			int noblock)

CHECK:BRACES: Unbalanced braces around else statement
#568: FILE: drivers/md/raid5.c:613:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#635: FILE: drivers/md/raid5.c:1243:
+	atomic_set(&init_sq.count, 2); /* 2, so it does not get picked up in
+					 * __release_queue

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#648: FILE: drivers/md/raid5.c:1256:
+	void *weight_map;
+	sq = kmem_cache_alloc(conf->sq_slab_cache, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#651: FILE: drivers/md/raid5.c:1259:
+	memset(sq, 0, (sizeof(*sq)+(disks-1) * sizeof(struct r5_queue_dev)) +
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#651: FILE: drivers/md/raid5.c:1259:
+	memset(sq, 0, (sizeof(*sq)+(disks-1) * sizeof(struct r5_queue_dev)) +
 	                                 ^

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/md/raid5.c:1264:
+	weight_map = ((void *) sq) + offsetof(typeof(*sq), dev) +

CHECK:CAMELCASE: Avoid CamelCase: <MaxSector>
#665: FILE: drivers/md/raid5.c:1273:
+	sq->sector = MaxSector;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#698: FILE: drivers/md/raid5.c:1310:
+			       (sizeof(struct stripe_queue)+(devs-1) *
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#698: FILE: drivers/md/raid5.c:1310:
+			       (sizeof(struct stripe_queue)+(devs-1) *
 			                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: drivers/md/raid5.c:1374:
+	sc_q = kmem_cache_create(conf->sq_cache_name[conf->active_name],
+			       (sizeof(struct stripe_queue)+(newsize-1) *

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#740: FILE: drivers/md/raid5.c:1374:
+			       (sizeof(struct stripe_queue)+(newsize-1) *
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#740: FILE: drivers/md/raid5.c:1374:
+			       (sizeof(struct stripe_queue)+(newsize-1) *
 			                                            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#772: FILE: drivers/md/raid5.c:1403:
+			do
[...]
+					kmem_cache_free(sc_q, nsq_per_sh[j]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#791: FILE: drivers/md/raid5.c:1415:
+			void *weight_map;
+			nsq = nsq_per_sh[j];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#792: FILE: drivers/md/raid5.c:1416:
+			memset(nsq, 0, (sizeof(*nsq)+(newsize-1) *
 			                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#792: FILE: drivers/md/raid5.c:1416:
+			memset(nsq, 0, (sizeof(*nsq)+(newsize-1) *
 			                                     ^

CHECK:SPACING: No space is necessary after a cast
#800: FILE: drivers/md/raid5.c:1424:
+			weight_map = ((void *) nsq) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/md/raid5.c:1508:
+		nsq = list_entry(newqueues.next, struct stripe_queue,
+					list_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: drivers/md/raid5.c:2254:
+static int add_queue_bio(struct stripe_queue *sq, struct bio *bi, int dd_idx,
+			  int forwrite)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: drivers/md/raid5.c:2262:
+	pr_debug("adding bio (%llu) to queue (%llu)\n",
 		(unsigned long long)bi->bi_sector,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bip"
#974: FILE: drivers/md/raid5.c:2270:
+		if (*bip == NULL && (!sh || (sh && !sh->dev[dd_idx].written)))

CHECK:BRACES: Unbalanced braces around else statement
#1006: FILE: drivers/md/raid5.c:2316:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#1048: FILE: drivers/md/raid5.c:2689:
+				set_bit(R5_Wantread, &dev_q->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/md/raid5.c:2691:
+				if (!test_and_set_bit(STRIPE_OP_IO,
+				    &sh->ops.pending))

WARNING:SPLIT_STRING: quoted string split across lines
#1075: FILE: drivers/md/raid5.c:2707:
+				pr_debug("Read_old block "
+					 "%d for Reconstruct\n", i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/md/raid5.c:2711:
+				if (!test_and_set_bit(STRIPE_OP_IO,
+				    &sh->ops.pending))

WARNING:SPLIT_STRING: quoted string split across lines
#1114: FILE: drivers/md/raid5.c:2771:
+				pr_debug("Read_old stripe %llu "
+					"block %d for Reconstruct\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: drivers/md/raid5.c:3021:
+			sq2 = get_active_queue(conf, s, conf->raid_disks,
+						pd_idx, 1, &sh2);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq2"
#1161: FILE: drivers/md/raid5.c:3022:
+			if (sq2 == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh2"
#1167: FILE: drivers/md/raid5.c:3028:
+			if (sh2 == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <R5_Expanded>
#1178: FILE: drivers/md/raid5.c:3037:
+			    test_bit(R5_Expanded, &sq2->dev[dd_idx].flags)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/md/raid5.c:3329:
+	if (s.expanded && test_bit(STRIPE_QUEUE_EXPANDING, &sq->state) &&
 		!test_bit(STRIPE_OP_POSTXOR, &sh->ops.pending)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1288: FILE: drivers/md/raid5.c:3643:
+static void handle_queue(struct stripe_queue *sq, struct stripe_head *sh,
+			  int disks, int data_disks)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/md/raid5.c:3650:
+		pr_debug("%s: start request to cached stripe %llu\n",
+			__FUNCTION__, (unsigned long long) sh->sector);

CHECK:SPACING: No space is necessary after a cast
#1295: FILE: drivers/md/raid5.c:3650:
+			__FUNCTION__, (unsigned long long) sh->sector);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1295: FILE: drivers/md/raid5.c:3650:
+			__FUNCTION__, (unsigned long long) sh->sector);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1299: FILE: drivers/md/raid5.c:3654:
+		return;
+	} else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1300: FILE: drivers/md/raid5.c:3655:
+		if (queue_weight(sq->overwrite, disks) == data_disks)
[...]
+		else if (queue_weight(sq->to_read, disks))
[...]
+		else if (queue_weight(sq->to_write, disks)) {
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#1311: FILE: drivers/md/raid5.c:3666:
+		pr_debug("%s: update queue %llu "
+			 "state: %#lx r: %lu w: %lu o: %lu\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1311: FILE: drivers/md/raid5.c:3666:
+			 "state: %#lx r: %lu w: %lu o: %lu\n", __FUNCTION__,

CHECK:SPACING: No space is necessary after a cast
#1312: FILE: drivers/md/raid5.c:3667:
+			 (unsigned long long) sq->sector, sq->state,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1327: FILE: drivers/md/raid5.c:3677:
+		pr_debug("%s\n", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1331: FILE: drivers/md/raid5.c:3681:
+			struct stripe_queue *sq;
+			sq = list_entry(l, struct stripe_queue, list_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/md/raid5.c:3685:
+			if (!test_and_set_bit(STRIPE_QUEUE_PREREAD_ACTIVE,
+						&sq->state))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1342: FILE: drivers/md/raid5.c:3688:
+			list_add_tail(&sq->list_node,
+					&conf->subwidth_write_list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1378: FILE: drivers/md/raid5.c:4071:
+		sq = get_active_queue(conf, new_sector, disks, pd_idx,
+					(bi->bi_rw & RWA_MASK), &sh);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1462: FILE: drivers/md/raid5.c:4217:
+		sq = get_active_queue(conf, sector_nr+i,
 		                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1463: FILE: drivers/md/raid5.c:4218:
+		sq = get_active_queue(conf, sector_nr+i,
+					conf->raid_disks, pd_idx, 0, &sh);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/md/raid5.c:4276:
+		sq = get_active_queue(conf, first_sector,
+				       conf->previous_raid_disks, pd_idx, 0,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'raid5qd', this function's name, in a string
#1604: FILE: drivers/md/raid5.c:4462:
+	pr_debug("+++ raid5qd active\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1624: FILE: drivers/md/raid5.c:4482:
+			BUG_ON(list_empty(&conf->subwidth_write_list));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1631: FILE: drivers/md/raid5.c:4489:
+			struct stripe_head *sh;
+			sq = list_entry(sq_entry, struct stripe_queue,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1633: FILE: drivers/md/raid5.c:4491:
+			BUG_ON(sq->sh);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'raid5qd', this function's name, in a string
#1652: FILE: drivers/md/raid5.c:4510:
+	pr_debug("--- raid5qd inactive\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1686: FILE: drivers/md/raid5.c:4647:
+	raid5_conf_t *conf = mddev_to_conf(mddev);
+	if (conf)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1789: FILE: drivers/md/raid5.c:5000:
+	seq_printf(seq, "\n");

CHECK:SPACING: No space is necessary after a cast
#1791: FILE: drivers/md/raid5.c:5002:
+		   (unsigned long long) sq->sector, sq->sh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1796: FILE: drivers/md/raid5.c:5007:
+static void printall (struct seq_file *seq, raid5_conf_t *conf)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1939: FILE: include/linux/raid/raid5.h:363:
+^Ichar ^I^I^Iworkqueue_name[20];$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000412624.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 51 warnings, 66 checks, 1814 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000412624.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
