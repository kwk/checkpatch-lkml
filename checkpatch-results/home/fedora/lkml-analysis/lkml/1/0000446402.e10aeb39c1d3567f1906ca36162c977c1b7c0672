WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
- Rebased on linux-2.6.21-rc6-mm1 + get_futex_key() must check proper alignement for 64bit futexes

WARNING:TYPO_SPELLING: 'alignement' may be misspelled - perhaps 'alignment'?
#44: 
- Rebased on linux-2.6.21-rc6-mm1 + get_futex_key() must check proper alignement for 64bit futexes
                                                                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'couldnt' may be misspelled - perhaps 'couldn't'?
#46: 
- Added Rusty in CC since he may have to change drivers/lguest/io.c again, since get_futex_key() have yet another parameter (fshared). (I couldnt find this file in 2.6.21-rc6-mm1 tree)
                                                                                                                                          ^^^^^^^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#89: 
     (calling find_vma()). This validation tells us if the futex uses
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#90: 
     an inode based store (mapped file), or mm based store (anonymous mem)
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#99: 
                (rollback is value != expected_value, returns EWOULDBLOCK)
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#100: 
        (various loops if test triggers mm faults)
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#106: 
   <block>
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#109: 
 may be done by the futex_wake())
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#115: 
 This means scalability problems if many processes/threads want to use
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#116: 
 futexes at the same time.
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#117: 
 This means NUMA unbalance because this hashtable is located on one node.
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#121: 
 Even if mmap_sem is a rw_semaphore, up_read()/down_read() are doing atomic
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#122: 
 ops on mmap_sem, dirtying cache line :
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#123: 
        - lot of cache line ping pongs on SMP configurations.
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#125: 
 mmap_sem is also extensively used by mm code (page faults, mmap()/munmap())
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#126: 
 Highly threaded processes might suffer from mmap_sem contention.
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#128: 
 mmap_sem is also used by oprofile code. Enabling oprofile hurts threaded
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#132: 
 It's also a cache line ping pong on SMP. It also increases mmap_sem hold time
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#133: 
 because of cache misses.
^

WARNING:TYPO_SPELLING: 'carefuly' may be misspelled - perhaps 'carefully'?
#141: 
optimal performance if carefuly implemented. Time has come for linux to have 
                       ^^^^^^^^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#145: 
 - Taking the mmap_sem semaphore, conflicting with other subsystems.
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#146: 
 - Modifying a ref_count on mm or an inode, still conflicting with mm or fs.
^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#276: FILE: kernel/futex.c:315:
+	switch (key->both.offset & (FUT_OFF_INODE|FUT_OFF_MMSHARED)) {
+		case FUT_OFF_INODE:
[...]
+		case FUT_OFF_MMSHARED:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#276: FILE: kernel/futex.c:315:
+	switch (key->both.offset & (FUT_OFF_INODE|FUT_OFF_MMSHARED)) {
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#295: FILE: kernel/futex.c:334:
+	switch (key->both.offset & (FUT_OFF_INODE|FUT_OFF_MMSHARED)) {
+		case FUT_OFF_INODE:
[...]
+		case FUT_OFF_MMSHARED:

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#295: FILE: kernel/futex.c:334:
+	switch (key->both.offset & (FUT_OFF_INODE|FUT_OFF_MMSHARED)) {
 	                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: kernel/futex.c:1119:
+			ret = futex_handle_fault((unsigned long)uaddr2,
+						fshared, attempt);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#997: FILE: kernel/futex.c:2518:
+	if (cmd == FUTEX_REQUEUE || cmd == FUTEX_CMP_REQUEUE
+	    || cmd == FUTEX_CMP_REQUEUE_PI)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1027: FILE: kernel/futex.c:2551:
+	if (cmd == FUTEX_REQUEUE || cmd == FUTEX_CMP_REQUEUE
+	    || cmd == FUTEX_CMP_REQUEUE_PI)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1065: FILE: include/linux/futex.h:137:
+ *       (but private mapping on an mm, and reference taken on it)
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1078: FILE: include/linux/futex.h:160:
 };
+int get_futex_key(void __user *uaddr, int size, struct rw_semaphore *shared,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446402.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 25 checks, 829 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446402.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
