CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: fs/gfs2/quota.h:18:
+extern int gfs2_quota_hold(struct gfs2_inode *ip, u32 uid, u32 gid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: fs/gfs2/quota.h:19:
+extern void gfs2_quota_unhold(struct gfs2_inode *ip);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: fs/gfs2/quota.h:21:
+extern int gfs2_quota_lock(struct gfs2_inode *ip, u32 uid, u32 gid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: fs/gfs2/quota.h:22:
+extern void gfs2_quota_unlock(struct gfs2_inode *ip);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: fs/gfs2/quota.h:24:
+extern int gfs2_quota_check(struct gfs2_inode *ip, u32 uid, u32 gid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: fs/gfs2/quota.h:25:
+extern void gfs2_quota_change(struct gfs2_inode *ip, s64 change,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: fs/gfs2/quota.h:28:
+extern int gfs2_quota_sync(struct gfs2_sbd *sdp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: fs/gfs2/quota.h:29:
+extern int gfs2_quota_refresh(struct gfs2_sbd *sdp, int user, u32 id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: fs/gfs2/quota.h:31:
+extern int gfs2_quota_init(struct gfs2_sbd *sdp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: fs/gfs2/quota.h:32:
+extern void gfs2_quota_cleanup(struct gfs2_sbd *sdp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: fs/gfs2/quota.h:33:
+extern int gfs2_quotad(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: fs/gfs2/recovery.h:21:
+extern int gfs2_replay_read_block(struct gfs2_jdesc *jd, unsigned int blk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: fs/gfs2/recovery.h:22:
+extern int gfs2_replay_read_block(struct gfs2_jdesc *jd, unsigned int blk,
 			   struct buffer_head **bh);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: fs/gfs2/recovery.h:24:
+extern int gfs2_revoke_add(struct gfs2_sbd *sdp, u64 blkno, unsigned int where);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: fs/gfs2/recovery.h:25:
+extern int gfs2_revoke_check(struct gfs2_sbd *sdp, u64 blkno, unsigned int where);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: fs/gfs2/recovery.h:26:
+extern void gfs2_revoke_clean(struct gfs2_sbd *sdp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: fs/gfs2/recovery.h:28:
+extern int gfs2_find_jhead(struct gfs2_jdesc *jd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: fs/gfs2/recovery.h:29:
+extern int gfs2_find_jhead(struct gfs2_jdesc *jd,
 		    struct gfs2_log_header_host *head);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: fs/gfs2/recovery.h:30:
+extern int gfs2_recover_journal(struct gfs2_jdesc *gfs2_jd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: fs/gfs2/recovery.h:31:
+extern int gfs2_recoverd(void *data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188112.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 20 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188112.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
