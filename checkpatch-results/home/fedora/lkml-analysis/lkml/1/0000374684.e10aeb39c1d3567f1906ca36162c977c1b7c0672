WARNING:TYPO_SPELLING: 'notifer' may be misspelled - perhaps 'notifier'?
#16: 
Subject: [Patch / 001](memory hotplug) fix some defects of memory notifer callback interface.
                                                                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: include/linux/memory.h:46:
+#define MEM_GOING_ONLINE	(1<<0) /* exposed to userspace */
                         	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#118: FILE: include/linux/memory.h:46:
+#define MEM_GOING_ONLINE	(1<<0) /* exposed to userspace */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: include/linux/memory.h:47:
+#define	MEM_ONLINE		(1<<1) /* exposed to userspace */
        	          		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#119: FILE: include/linux/memory.h:47:
+#define	MEM_ONLINE		(1<<1) /* exposed to userspace */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#120: FILE: include/linux/memory.h:48:
+#define	MEM_GOING_OFFLINE	(1<<2) /* exposed to userspace */
        	                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#120: FILE: include/linux/memory.h:48:
+#define	MEM_GOING_OFFLINE	(1<<2) /* exposed to userspace */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#121: FILE: include/linux/memory.h:49:
+#define	MEM_OFFLINE		(1<<3) /* exposed to userspace */
        	           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#121: FILE: include/linux/memory.h:49:
+#define	MEM_OFFLINE		(1<<3) /* exposed to userspace */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: include/linux/memory.h:61:
+#define	MEM_MAPPING_INVALID	(1<<4)
        	                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: include/linux/memory.h:61:
+#define	MEM_MAPPING_INVALID	(1<<4)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/memory.h:79:
+extern int register_memory_notifier(struct notifier_block *nb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/memory.h:80:
+extern void unregister_memory_notifier(struct notifier_block *nb);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 12 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
