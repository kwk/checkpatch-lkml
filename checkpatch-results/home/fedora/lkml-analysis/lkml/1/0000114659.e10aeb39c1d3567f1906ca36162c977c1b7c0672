WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
Gitweb:     http://git.kernel.org/tip/a21ca2cac582886a3e95c8bb84ff7c52d4d15e54

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#60: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: Documentation/perf_counter/builtin-record.c:69:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: Documentation/perf_counter/builtin-stat.c:49:
+  { .type = PERF_TYPE_SOFTWARE, .config = PERF_COUNT_TASK_CLOCK^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: Documentation/perf_counter/builtin-stat.c:50:
+  { .type = PERF_TYPE_SOFTWARE, .config = PERF_COUNT_CONTEXT_SWITCHES^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: Documentation/perf_counter/builtin-stat.c:51:
+  { .type = PERF_TYPE_SOFTWARE, .config = PERF_COUNT_CPU_MIGRATIONS^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: Documentation/perf_counter/builtin-stat.c:52:
+  { .type = PERF_TYPE_SOFTWARE, .config = PERF_COUNT_PAGE_FAULTS^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: Documentation/perf_counter/builtin-stat.c:54:
+  { .type = PERF_TYPE_HARDWARE, .config = PERF_COUNT_CPU_CYCLES^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: Documentation/perf_counter/builtin-stat.c:55:
+  { .type = PERF_TYPE_HARDWARE, .config = PERF_COUNT_INSTRUCTIONS^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: Documentation/perf_counter/builtin-stat.c:56:
+  { .type = PERF_TYPE_HARDWARE, .config = PERF_COUNT_CACHE_REFERENCES^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: Documentation/perf_counter/builtin-stat.c:57:
+  { .type = PERF_TYPE_HARDWARE, .config = PERF_COUNT_CACHE_MISSES^I},$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#286: FILE: Documentation/perf_counter/builtin-stat.c:60:
+static int			system_wide			=  0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: Documentation/perf_counter/builtin-stat.c:178:
+	if (attrs[counter].type == PERF_TYPE_SOFTWARE &&
+		attrs[counter].config == PERF_COUNT_TASK_CLOCK)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: Documentation/perf_counter/builtin-stat.c:205:
+		if (attrs[counter].type == PERF_TYPE_SOFTWARE &&
+			attrs[counter].config == PERF_COUNT_TASK_CLOCK) {

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#426: FILE: Documentation/perf_counter/builtin-top.c:53:
+static int			system_wide			=  0;

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#470: FILE: Documentation/perf_counter/builtin-top.c:196:
+		printf("%Ld", attrs[0].sample_period);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: Documentation/perf_counter/util/parse-events.c:22:
+  { C(HARDWARE, CPU_CYCLES),^I^I"cpu-cycles",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: Documentation/perf_counter/util/parse-events.c:23:
+  { C(HARDWARE, CPU_CYCLES),^I^I"cycles",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: Documentation/perf_counter/util/parse-events.c:24:
+  { C(HARDWARE, INSTRUCTIONS),^I^I"instructions",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: Documentation/perf_counter/util/parse-events.c:25:
+  { C(HARDWARE, CACHE_REFERENCES),^I"cache-references",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: Documentation/perf_counter/util/parse-events.c:26:
+  { C(HARDWARE, CACHE_MISSES),^I^I"cache-misses",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: Documentation/perf_counter/util/parse-events.c:27:
+  { C(HARDWARE, BRANCH_INSTRUCTIONS),^I"branch-instructions",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: Documentation/perf_counter/util/parse-events.c:28:
+  { C(HARDWARE, BRANCH_INSTRUCTIONS),^I"branches",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: Documentation/perf_counter/util/parse-events.c:29:
+  { C(HARDWARE, BRANCH_MISSES),^I^I"branch-misses",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: Documentation/perf_counter/util/parse-events.c:30:
+  { C(HARDWARE, BUS_CYCLES),^I^I"bus-cycles",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: Documentation/perf_counter/util/parse-events.c:32:
+  { C(SOFTWARE, CPU_CLOCK),^I^I"cpu-clock",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: Documentation/perf_counter/util/parse-events.c:33:
+  { C(SOFTWARE, TASK_CLOCK),^I^I"task-clock",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: Documentation/perf_counter/util/parse-events.c:34:
+  { C(SOFTWARE, PAGE_FAULTS),^I^I"page-faults",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: Documentation/perf_counter/util/parse-events.c:35:
+  { C(SOFTWARE, PAGE_FAULTS),^I^I"faults",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: Documentation/perf_counter/util/parse-events.c:36:
+  { C(SOFTWARE, PAGE_FAULTS_MIN),^I"minor-faults",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: Documentation/perf_counter/util/parse-events.c:37:
+  { C(SOFTWARE, PAGE_FAULTS_MAJ),^I"major-faults",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: Documentation/perf_counter/util/parse-events.c:38:
+  { C(SOFTWARE, CONTEXT_SWITCHES),^I"context-switches",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: Documentation/perf_counter/util/parse-events.c:39:
+  { C(SOFTWARE, CONTEXT_SWITCHES),^I"cs",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: Documentation/perf_counter/util/parse-events.c:40:
+  { C(SOFTWARE, CPU_MIGRATIONS),^I"cpu-migrations",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: Documentation/perf_counter/util/parse-events.c:41:
+  { C(SOFTWARE, CPU_MIGRATIONS),^I"migrations",^I^I},$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#723: FILE: Documentation/perf_counter/util/parse-events.c:142:
+			     strlen(event_symbols[i].symbol))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114659.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 30 warnings, 4 checks, 839 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114659.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
