WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Several platforms require the mkimage tool to generate a uImage file that is

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: scripts/mkubootimg/crc32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: scripts/mkubootimg/crc32.c:19:
+unsigned long crc32 (unsigned long, const unsigned char *, unsigned int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#88: FILE: scripts/mkubootimg/crc32.c:19:
+unsigned long crc32 (unsigned long, const unsigned char *, unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#88: FILE: scripts/mkubootimg/crc32.c:19:
+unsigned long crc32 (unsigned long, const unsigned char *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const unsigned char *' should also have an identifier name
#88: FILE: scripts/mkubootimg/crc32.c:19:
+unsigned long crc32 (unsigned long, const unsigned char *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#88: FILE: scripts/mkubootimg/crc32.c:19:
+unsigned long crc32 (unsigned long, const unsigned char *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <uLongf>
#93: FILE: scripts/mkubootimg/crc32.c:24:
+local uLongf crc_table[256];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#97: FILE: scripts/mkubootimg/crc32.c:28:
+/*
+  Generate a table for a byte-wise 32-bit CRC calculation on the polynomial:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void make_crc_table() should probably be void make_crc_table(void)
#120: FILE: scripts/mkubootimg/crc32.c:51:
+local void make_crc_table()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: scripts/mkubootimg/crc32.c:53:
+  uLong c;$

CHECK:CAMELCASE: Avoid CamelCase: <uLong>
#122: FILE: scripts/mkubootimg/crc32.c:53:
+  uLong c;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: scripts/mkubootimg/crc32.c:54:
+  int n, k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: scripts/mkubootimg/crc32.c:55:
+  uLong poly;            /* polynomial exclusive-or pattern */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
                                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <Byte>
#126: FILE: scripts/mkubootimg/crc32.c:57:
+  static const Byte p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: scripts/mkubootimg/crc32.c:60:
+  poly = 0L;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: scripts/mkubootimg/crc32.c:61:
+  for (n = 0; n < sizeof(p)/sizeof(Byte); n++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#130: FILE: scripts/mkubootimg/crc32.c:61:
+  for (n = 0; n < sizeof(p)/sizeof(Byte); n++)
+    poly |= 1L << (31 - p[n]);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#130: FILE: scripts/mkubootimg/crc32.c:61:
+  for (n = 0; n < sizeof(p)/sizeof(Byte); n++)
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: scripts/mkubootimg/crc32.c:62:
+    poly |= 1L << (31 - p[n]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: scripts/mkubootimg/crc32.c:64:
+  for (n = 0; n < 256; n++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#133: FILE: scripts/mkubootimg/crc32.c:64:
+  for (n = 0; n < 256; n++)
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#133: FILE: scripts/mkubootimg/crc32.c:64:
+  for (n = 0; n < 256; n++)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: scripts/mkubootimg/crc32.c:65:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: scripts/mkubootimg/crc32.c:66:
+    c = (uLong)n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: scripts/mkubootimg/crc32.c:67:
+    for (k = 0; k < 8; k++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#136: FILE: scripts/mkubootimg/crc32.c:67:
+    for (k = 0; k < 8; k++)
+      c = c & 1 ? poly ^ (c >> 1) : c >> 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: scripts/mkubootimg/crc32.c:68:
+      c = c & 1 ? poly ^ (c >> 1) : c >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: scripts/mkubootimg/crc32.c:69:
+    crc_table[n] = c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: scripts/mkubootimg/crc32.c:70:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: scripts/mkubootimg/crc32.c:71:
+  crc_table_empty = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: scripts/mkubootimg/crc32.c:78:
+  0x00000000L, 0x77073096L, 0xee0e612cL, 0x990951baL, 0x076dc419L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: scripts/mkubootimg/crc32.c:79:
+  0x706af48fL, 0xe963a535L, 0x9e6495a3L, 0x0edb8832L, 0x79dcb8a4L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: scripts/mkubootimg/crc32.c:80:
+  0xe0d5e91eL, 0x97d2d988L, 0x09b64c2bL, 0x7eb17cbdL, 0xe7b82d07L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: scripts/mkubootimg/crc32.c:81:
+  0x90bf1d91L, 0x1db71064L, 0x6ab020f2L, 0xf3b97148L, 0x84be41deL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: scripts/mkubootimg/crc32.c:82:
+  0x1adad47dL, 0x6ddde4ebL, 0xf4d4b551L, 0x83d385c7L, 0x136c9856L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: scripts/mkubootimg/crc32.c:83:
+  0x646ba8c0L, 0xfd62f97aL, 0x8a65c9ecL, 0x14015c4fL, 0x63066cd9L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: scripts/mkubootimg/crc32.c:84:
+  0xfa0f3d63L, 0x8d080df5L, 0x3b6e20c8L, 0x4c69105eL, 0xd56041e4L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: scripts/mkubootimg/crc32.c:85:
+  0xa2677172L, 0x3c03e4d1L, 0x4b04d447L, 0xd20d85fdL, 0xa50ab56bL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: scripts/mkubootimg/crc32.c:86:
+  0x35b5a8faL, 0x42b2986cL, 0xdbbbc9d6L, 0xacbcf940L, 0x32d86ce3L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: scripts/mkubootimg/crc32.c:87:
+  0x45df5c75L, 0xdcd60dcfL, 0xabd13d59L, 0x26d930acL, 0x51de003aL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: scripts/mkubootimg/crc32.c:88:
+  0xc8d75180L, 0xbfd06116L, 0x21b4f4b5L, 0x56b3c423L, 0xcfba9599L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: scripts/mkubootimg/crc32.c:89:
+  0xb8bda50fL, 0x2802b89eL, 0x5f058808L, 0xc60cd9b2L, 0xb10be924L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: scripts/mkubootimg/crc32.c:90:
+  0x2f6f7c87L, 0x58684c11L, 0xc1611dabL, 0xb6662d3dL, 0x76dc4190L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: scripts/mkubootimg/crc32.c:91:
+  0x01db7106L, 0x98d220bcL, 0xefd5102aL, 0x71b18589L, 0x06b6b51fL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: scripts/mkubootimg/crc32.c:92:
+  0x9fbfe4a5L, 0xe8b8d433L, 0x7807c9a2L, 0x0f00f934L, 0x9609a88eL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: scripts/mkubootimg/crc32.c:93:
+  0xe10e9818L, 0x7f6a0dbbL, 0x086d3d2dL, 0x91646c97L, 0xe6635c01L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: scripts/mkubootimg/crc32.c:94:
+  0x6b6b51f4L, 0x1c6c6162L, 0x856530d8L, 0xf262004eL, 0x6c0695edL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: scripts/mkubootimg/crc32.c:95:
+  0x1b01a57bL, 0x8208f4c1L, 0xf50fc457L, 0x65b0d9c6L, 0x12b7e950L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: scripts/mkubootimg/crc32.c:96:
+  0x8bbeb8eaL, 0xfcb9887cL, 0x62dd1ddfL, 0x15da2d49L, 0x8cd37cf3L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: scripts/mkubootimg/crc32.c:97:
+  0xfbd44c65L, 0x4db26158L, 0x3ab551ceL, 0xa3bc0074L, 0xd4bb30e2L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: scripts/mkubootimg/crc32.c:98:
+  0x4adfa541L, 0x3dd895d7L, 0xa4d1c46dL, 0xd3d6f4fbL, 0x4369e96aL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: scripts/mkubootimg/crc32.c:99:
+  0x346ed9fcL, 0xad678846L, 0xda60b8d0L, 0x44042d73L, 0x33031de5L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: scripts/mkubootimg/crc32.c:100:
+  0xaa0a4c5fL, 0xdd0d7cc9L, 0x5005713cL, 0x270241aaL, 0xbe0b1010L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: scripts/mkubootimg/crc32.c:101:
+  0xc90c2086L, 0x5768b525L, 0x206f85b3L, 0xb966d409L, 0xce61e49fL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: scripts/mkubootimg/crc32.c:102:
+  0x5edef90eL, 0x29d9c998L, 0xb0d09822L, 0xc7d7a8b4L, 0x59b33d17L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: scripts/mkubootimg/crc32.c:103:
+  0x2eb40d81L, 0xb7bd5c3bL, 0xc0ba6cadL, 0xedb88320L, 0x9abfb3b6L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: scripts/mkubootimg/crc32.c:104:
+  0x03b6e20cL, 0x74b1d29aL, 0xead54739L, 0x9dd277afL, 0x04db2615L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: scripts/mkubootimg/crc32.c:105:
+  0x73dc1683L, 0xe3630b12L, 0x94643b84L, 0x0d6d6a3eL, 0x7a6a5aa8L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: scripts/mkubootimg/crc32.c:106:
+  0xe40ecf0bL, 0x9309ff9dL, 0x0a00ae27L, 0x7d079eb1L, 0xf00f9344L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: scripts/mkubootimg/crc32.c:107:
+  0x8708a3d2L, 0x1e01f268L, 0x6906c2feL, 0xf762575dL, 0x806567cbL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: scripts/mkubootimg/crc32.c:108:
+  0x196c3671L, 0x6e6b06e7L, 0xfed41b76L, 0x89d32be0L, 0x10da7a5aL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: scripts/mkubootimg/crc32.c:109:
+  0x67dd4accL, 0xf9b9df6fL, 0x8ebeeff9L, 0x17b7be43L, 0x60b08ed5L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: scripts/mkubootimg/crc32.c:110:
+  0xd6d6a3e8L, 0xa1d1937eL, 0x38d8c2c4L, 0x4fdff252L, 0xd1bb67f1L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: scripts/mkubootimg/crc32.c:111:
+  0xa6bc5767L, 0x3fb506ddL, 0x48b2364bL, 0xd80d2bdaL, 0xaf0a1b4cL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: scripts/mkubootimg/crc32.c:112:
+  0x36034af6L, 0x41047a60L, 0xdf60efc3L, 0xa867df55L, 0x316e8eefL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: scripts/mkubootimg/crc32.c:113:
+  0x4669be79L, 0xcb61b38cL, 0xbc66831aL, 0x256fd2a0L, 0x5268e236L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: scripts/mkubootimg/crc32.c:114:
+  0xcc0c7795L, 0xbb0b4703L, 0x220216b9L, 0x5505262fL, 0xc5ba3bbeL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: scripts/mkubootimg/crc32.c:115:
+  0xb2bd0b28L, 0x2bb45a92L, 0x5cb36a04L, 0xc2d7ffa7L, 0xb5d0cf31L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: scripts/mkubootimg/crc32.c:116:
+  0x2cd99e8bL, 0x5bdeae1dL, 0x9b64c2b0L, 0xec63f226L, 0x756aa39cL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: scripts/mkubootimg/crc32.c:117:
+  0x026d930aL, 0x9c0906a9L, 0xeb0e363fL, 0x72076785L, 0x05005713L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: scripts/mkubootimg/crc32.c:118:
+  0x95bf4a82L, 0xe2b87a14L, 0x7bb12baeL, 0x0cb61b38L, 0x92d28e9bL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: scripts/mkubootimg/crc32.c:119:
+  0xe5d5be0dL, 0x7cdcefb7L, 0x0bdbdf21L, 0x86d3d2d4L, 0xf1d4e242L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: scripts/mkubootimg/crc32.c:120:
+  0x68ddb3f8L, 0x1fda836eL, 0x81be16cdL, 0xf6b9265bL, 0x6fb077e1L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: scripts/mkubootimg/crc32.c:121:
+  0x18b74777L, 0x88085ae6L, 0xff0f6a70L, 0x66063bcaL, 0x11010b5cL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: scripts/mkubootimg/crc32.c:122:
+  0x8f659effL, 0xf862ae69L, 0x616bffd3L, 0x166ccf45L, 0xa00ae278L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: scripts/mkubootimg/crc32.c:123:
+  0xd70dd2eeL, 0x4e048354L, 0x3903b3c2L, 0xa7672661L, 0xd06016f7L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: scripts/mkubootimg/crc32.c:124:
+  0x4969474dL, 0x3e6e77dbL, 0xaed16a4aL, 0xd9d65adcL, 0x40df0b66L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: scripts/mkubootimg/crc32.c:125:
+  0x37d83bf0L, 0xa9bcae53L, 0xdebb9ec5L, 0x47b2cf7fL, 0x30b5ffe9L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: scripts/mkubootimg/crc32.c:126:
+  0xbdbdf21cL, 0xcabac28aL, 0x53b39330L, 0x24b4a3a6L, 0xbad03605L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: scripts/mkubootimg/crc32.c:127:
+  0xcdd70693L, 0x54de5729L, 0x23d967bfL, 0xb3667a2eL, 0xc4614ab8L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: scripts/mkubootimg/crc32.c:128:
+  0x5d681b02L, 0x2a6f2b94L, 0xb40bbe37L, 0xc30c8ea1L, 0x5a05df1bL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: scripts/mkubootimg/crc32.c:129:
+  0x2d02ef8dL$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#202: FILE: scripts/mkubootimg/crc32.c:133:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: scripts/mkubootimg/crc32.c:137:
+const uLongf * ZEXPORT get_crc_table()

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: scripts/mkubootimg/crc32.c:140:
+  if (crc_table_empty) make_crc_table();$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#209: FILE: scripts/mkubootimg/crc32.c:140:
+  if (crc_table_empty) make_crc_table();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: scripts/mkubootimg/crc32.c:142:
+  return (const uLongf *)crc_table;$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#216: FILE: scripts/mkubootimg/crc32.c:147:
+#define DO1(buf) crc = crc_table[((int)crc ^ (*buf++)) & 0xff] ^ (crc >> 8);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'buf' may be better as '(buf)' to avoid precedence issues
#216: FILE: scripts/mkubootimg/crc32.c:147:
+#define DO1(buf) crc = crc_table[((int)crc ^ (*buf++)) & 0xff] ^ (crc >> 8);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#216: FILE: scripts/mkubootimg/crc32.c:147:
+#define DO1(buf) crc = crc_table[((int)crc ^ (*buf++)) & 0xff] ^ (crc >> 8);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#217: FILE: scripts/mkubootimg/crc32.c:148:
+#define DO2(buf)  DO1(buf); DO1(buf);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#217: FILE: scripts/mkubootimg/crc32.c:148:
+#define DO2(buf)  DO1(buf); DO1(buf);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#217: FILE: scripts/mkubootimg/crc32.c:148:
+#define DO2(buf)  DO1(buf); DO1(buf);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#218: FILE: scripts/mkubootimg/crc32.c:149:
+#define DO4(buf)  DO2(buf); DO2(buf);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#218: FILE: scripts/mkubootimg/crc32.c:149:
+#define DO4(buf)  DO2(buf); DO2(buf);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#218: FILE: scripts/mkubootimg/crc32.c:149:
+#define DO4(buf)  DO2(buf); DO2(buf);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#219: FILE: scripts/mkubootimg/crc32.c:150:
+#define DO8(buf)  DO4(buf); DO4(buf);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#219: FILE: scripts/mkubootimg/crc32.c:150:
+#define DO8(buf)  DO4(buf); DO4(buf);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#219: FILE: scripts/mkubootimg/crc32.c:150:
+#define DO8(buf)  DO4(buf); DO4(buf);

CHECK:CAMELCASE: Avoid CamelCase: <Bytef>
#222: FILE: scripts/mkubootimg/crc32.c:153:
+uLong ZEXPORT crc32(uLong crc, const Bytef *buf, uInt len)

CHECK:CAMELCASE: Avoid CamelCase: <uInt>
#222: FILE: scripts/mkubootimg/crc32.c:153:
+uLong ZEXPORT crc32(uLong crc, const Bytef *buf, uInt len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: scripts/mkubootimg/crc32.c:156:
+    if (crc_table_empty)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#225: FILE: scripts/mkubootimg/crc32.c:156:
+    if (crc_table_empty)
+      make_crc_table();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: scripts/mkubootimg/crc32.c:157:
+      make_crc_table();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: scripts/mkubootimg/crc32.c:159:
+    crc = crc ^ 0xffffffffL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: scripts/mkubootimg/crc32.c:160:
+    while (len >= 8)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#229: FILE: scripts/mkubootimg/crc32.c:160:
+    while (len >= 8)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#229: FILE: scripts/mkubootimg/crc32.c:160:
+    while (len >= 8)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: scripts/mkubootimg/crc32.c:161:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: scripts/mkubootimg/crc32.c:162:
+      DO8(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: scripts/mkubootimg/crc32.c:163:
+      len -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: scripts/mkubootimg/crc32.c:164:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: scripts/mkubootimg/crc32.c:165:
+    if (len) do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#234: FILE: scripts/mkubootimg/crc32.c:165:
+    if (len) do {
+      DO1(buf);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#234: FILE: scripts/mkubootimg/crc32.c:165:
+    if (len) do {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: scripts/mkubootimg/crc32.c:166:
+      DO1(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: scripts/mkubootimg/crc32.c:167:
+    } while (--len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: scripts/mkubootimg/crc32.c:168:
+    return crc ^ 0xffffffffL;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#242: FILE: scripts/mkubootimg/crc32.c:173:
+	(defined(CONFIG_CMD_NAND) \
+	&& !defined(CFG_NAND_LEGACY))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: scripts/mkubootimg/crc32.c:181:
+    if (crc_table_empty)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#250: FILE: scripts/mkubootimg/crc32.c:181:
+    if (crc_table_empty)
+      make_crc_table();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: scripts/mkubootimg/crc32.c:182:
+      make_crc_table();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: scripts/mkubootimg/crc32.c:184:
+    while (len >= 8)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#253: FILE: scripts/mkubootimg/crc32.c:184:
+    while (len >= 8)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#253: FILE: scripts/mkubootimg/crc32.c:184:
+    while (len >= 8)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: scripts/mkubootimg/crc32.c:185:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: scripts/mkubootimg/crc32.c:186:
+      DO8(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: scripts/mkubootimg/crc32.c:187:
+      len -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: scripts/mkubootimg/crc32.c:188:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: scripts/mkubootimg/crc32.c:189:
+    if (len) do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#258: FILE: scripts/mkubootimg/crc32.c:189:
+    if (len) do {
+      DO1(buf);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#258: FILE: scripts/mkubootimg/crc32.c:189:
+    if (len) do {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: scripts/mkubootimg/crc32.c:190:
+      DO1(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: scripts/mkubootimg/crc32.c:191:
+    } while (--len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: scripts/mkubootimg/crc32.c:193:
+    return crc;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#269: FILE: scripts/mkubootimg/mkimage.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#286: FILE: scripts/mkubootimg/mkimage.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#287: FILE: scripts/mkubootimg/mkimage.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: scripts/mkubootimg/mkimage.c:46:
+extern unsigned long crc32 (unsigned long crc, const char *buf, unsigned int len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#314: FILE: scripts/mkubootimg/mkimage.c:46:
+extern unsigned long crc32 (unsigned long crc, const char *buf, unsigned int len);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#316: FILE: scripts/mkubootimg/mkimage.c:48:
+typedef struct table_entry {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: scripts/mkubootimg/mkimage.c:55:
+    {^IIH_CPU_INVALID,^I^INULL,^I^I"Invalid CPU",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: scripts/mkubootimg/mkimage.c:56:
+    {^IIH_CPU_ALPHA,^I^I"alpha",^I"Alpha",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: scripts/mkubootimg/mkimage.c:57:
+    {^IIH_CPU_ARM,^I^I"arm",^I^I"ARM",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: scripts/mkubootimg/mkimage.c:58:
+    {^IIH_CPU_I386,^I^I"x86",^I^I"Intel x86",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: scripts/mkubootimg/mkimage.c:59:
+    {^IIH_CPU_IA64,^I^I"ia64",^I^I"IA64",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: scripts/mkubootimg/mkimage.c:60:
+    {^IIH_CPU_M68K,^I^I"m68k",^I^I"MC68000",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: scripts/mkubootimg/mkimage.c:61:
+    {^IIH_CPU_MICROBLAZE,^I"microblaze",^I"MicroBlaze",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: scripts/mkubootimg/mkimage.c:62:
+    {^IIH_CPU_MIPS,^I^I"mips",^I^I"MIPS",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: scripts/mkubootimg/mkimage.c:63:
+    {^IIH_CPU_MIPS64,^I^I"mips64",^I"MIPS 64 Bit",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: scripts/mkubootimg/mkimage.c:64:
+    {^IIH_CPU_NIOS,^I^I"nios",^I^I"NIOS",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: scripts/mkubootimg/mkimage.c:65:
+    {^IIH_CPU_NIOS2,^I^I"nios2",^I"NIOS II",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: scripts/mkubootimg/mkimage.c:66:
+    {^IIH_CPU_PPC,^I^I"ppc",^I^I"PowerPC",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: scripts/mkubootimg/mkimage.c:67:
+    {^IIH_CPU_S390,^I^I"s390",^I^I"IBM S390",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: scripts/mkubootimg/mkimage.c:68:
+    {^IIH_CPU_SH,^I^I"sh",^I^I"SuperH",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: scripts/mkubootimg/mkimage.c:69:
+    {^IIH_CPU_SPARC,^I^I"sparc",^I"SPARC",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: scripts/mkubootimg/mkimage.c:70:
+    {^IIH_CPU_SPARC64,^I^I"sparc64",^I"SPARC 64 Bit",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: scripts/mkubootimg/mkimage.c:71:
+    {^IIH_CPU_BLACKFIN,^I"blackfin",^I"Blackfin",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: scripts/mkubootimg/mkimage.c:72:
+    {^IIH_CPU_AVR32,^I^I"avr32",^I"AVR32",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: scripts/mkubootimg/mkimage.c:73:
+    {^I-1,^I^I^I"",^I^I"",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: scripts/mkubootimg/mkimage.c:77:
+    {^IIH_OS_INVALID,^INULL,^I^I"Invalid OS",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: scripts/mkubootimg/mkimage.c:78:
+    {^IIH_OS_4_4BSD,^I"4_4bsd",^I"4_4BSD",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: scripts/mkubootimg/mkimage.c:79:
+    {^IIH_OS_ARTOS,^I"artos",^I"ARTOS",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: scripts/mkubootimg/mkimage.c:80:
+    {^IIH_OS_DELL,^I"dell",^I^I"Dell",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: scripts/mkubootimg/mkimage.c:81:
+    {^IIH_OS_ESIX,^I"esix",^I^I"Esix",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: scripts/mkubootimg/mkimage.c:82:
+    {^IIH_OS_FREEBSD,^I"freebsd",^I"FreeBSD",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: scripts/mkubootimg/mkimage.c:83:
+    {^IIH_OS_IRIX,^I"irix",^I^I"Irix",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: scripts/mkubootimg/mkimage.c:84:
+    {^IIH_OS_LINUX,^I"linux",^I"Linux",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: scripts/mkubootimg/mkimage.c:85:
+    {^IIH_OS_LYNXOS,^I"lynxos",^I"LynxOS",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: scripts/mkubootimg/mkimage.c:86:
+    {^IIH_OS_NCR,^I"ncr",^I^I"NCR",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: scripts/mkubootimg/mkimage.c:87:
+    {^IIH_OS_NETBSD,^I"netbsd",^I"NetBSD",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: scripts/mkubootimg/mkimage.c:88:
+    {^IIH_OS_OPENBSD,^I"openbsd",^I"OpenBSD",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: scripts/mkubootimg/mkimage.c:89:
+    {^IIH_OS_PSOS,^I"psos",^I^I"pSOS",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: scripts/mkubootimg/mkimage.c:90:
+    {^IIH_OS_QNX,^I"qnx",^I^I"QNX",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: scripts/mkubootimg/mkimage.c:91:
+    {^IIH_OS_RTEMS,^I"rtems",^I"RTEMS",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: scripts/mkubootimg/mkimage.c:92:
+    {^IIH_OS_SCO,^I"sco",^I^I"SCO",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: scripts/mkubootimg/mkimage.c:93:
+    {^IIH_OS_SOLARIS,^I"solaris",^I"Solaris",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: scripts/mkubootimg/mkimage.c:94:
+    {^IIH_OS_SVR4,^I"svr4",^I^I"SVR4",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: scripts/mkubootimg/mkimage.c:95:
+    {^IIH_OS_U_BOOT,^I"u-boot",^I"U-Boot",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: scripts/mkubootimg/mkimage.c:96:
+    {^IIH_OS_VXWORKS,^I"vxworks",^I"VxWorks",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: scripts/mkubootimg/mkimage.c:97:
+    {^I-1,^I^I"",^I^I"",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: scripts/mkubootimg/mkimage.c:101:
+    {^IIH_TYPE_INVALID,    NULL,^I  "Invalid Image",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: scripts/mkubootimg/mkimage.c:102:
+    {^IIH_TYPE_FILESYSTEM, "filesystem", "Filesystem Image",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: scripts/mkubootimg/mkimage.c:103:
+    {^IIH_TYPE_FIRMWARE,   "firmware",^I  "Firmware",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: scripts/mkubootimg/mkimage.c:104:
+    {^IIH_TYPE_KERNEL,^I    "kernel",^I  "Kernel Image",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: scripts/mkubootimg/mkimage.c:105:
+    {^IIH_TYPE_MULTI,^I    "multi",^I  "Multi-File Image",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: scripts/mkubootimg/mkimage.c:106:
+    {^IIH_TYPE_RAMDISK,    "ramdisk",^I  "RAMDisk Image",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: scripts/mkubootimg/mkimage.c:107:
+    {^IIH_TYPE_SCRIPT,     "script",^I  "Script",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: scripts/mkubootimg/mkimage.c:108:
+    {^IIH_TYPE_STANDALONE, "standalone", "Standalone Program", },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: scripts/mkubootimg/mkimage.c:109:
+    {^IIH_TYPE_FLATDT,     "flat_dt",    "Flat Device Tree",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: scripts/mkubootimg/mkimage.c:110:
+    {^I-1,^I^I    "",^I^I  "",^I^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: scripts/mkubootimg/mkimage.c:114:
+    {^IIH_COMP_NONE,^I"none",^I^I"uncompressed",^I^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: scripts/mkubootimg/mkimage.c:115:
+    {^IIH_COMP_BZIP2,^I"bzip2",^I"bzip2 compressed",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: scripts/mkubootimg/mkimage.c:116:
+    {^IIH_COMP_GZIP,^I"gzip",^I^I"gzip compressed",^I},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: scripts/mkubootimg/mkimage.c:117:
+    {^I-1,^I^I"",^I^I"",^I^I^I},$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: scripts/mkubootimg/mkimage.c:120:
+static	void	copy_file (int, const char *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#389: FILE: scripts/mkubootimg/mkimage.c:121:
+static	void	usage	(void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#390: FILE: scripts/mkubootimg/mkimage.c:122:
+static	void	print_header (image_header_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: scripts/mkubootimg/mkimage.c:123:
+static	void	print_type (image_header_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: scripts/mkubootimg/mkimage.c:124:
+static	char	*put_table_entry (table_entry_t *, char *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: scripts/mkubootimg/mkimage.c:125:
+static	char	*put_arch (int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: scripts/mkubootimg/mkimage.c:126:
+static	char	*put_type (int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: scripts/mkubootimg/mkimage.c:127:
+static	char	*put_os   (int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: scripts/mkubootimg/mkimage.c:128:
+static	char	*put_comp (int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: scripts/mkubootimg/mkimage.c:129:
+static	int	get_table_entry (table_entry_t *, char *, char *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: scripts/mkubootimg/mkimage.c:132:
+static	int	get_os  (char *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#403: FILE: scripts/mkubootimg/mkimage.c:135:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#407: FILE: scripts/mkubootimg/mkimage.c:139:
+static int dflag    = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#408: FILE: scripts/mkubootimg/mkimage.c:140:
+static int eflag    = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#409: FILE: scripts/mkubootimg/mkimage.c:141:
+static int lflag    = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#410: FILE: scripts/mkubootimg/mkimage.c:142:
+static int vflag    = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#411: FILE: scripts/mkubootimg/mkimage.c:143:
+static int xflag    = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: scripts/mkubootimg/mkimage.c:153:
+main (int argc, char **argv)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#424: FILE: scripts/mkubootimg/mkimage.c:156:
+	uint32_t checksum;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#425: FILE: scripts/mkubootimg/mkimage.c:157:
+	uint32_t addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#426: FILE: scripts/mkubootimg/mkimage.c:158:
+	uint32_t ep;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#434: FILE: scripts/mkubootimg/mkimage.c:166:
+	addr = ep = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#443: FILE: scripts/mkubootimg/mkimage.c:175:
+				if ((--argc <= 0) ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: scripts/mkubootimg/mkimage.c:177:
+					usage ();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#448: FILE: scripts/mkubootimg/mkimage.c:180:
+				if ((--argc <= 0) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#450: FILE: scripts/mkubootimg/mkimage.c:182:
+					usage ();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#453: FILE: scripts/mkubootimg/mkimage.c:185:
+				if ((--argc <= 0) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#455: FILE: scripts/mkubootimg/mkimage.c:187:
+					usage ();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#458: FILE: scripts/mkubootimg/mkimage.c:190:
+				if ((--argc <= 0) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: scripts/mkubootimg/mkimage.c:192:
+					usage ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: scripts/mkubootimg/mkimage.c:197:
+					usage ();

CHECK:SPACING: No space is necessary after a cast
#466: FILE: scripts/mkubootimg/mkimage.c:198:
+				addr = strtoul ((char *) *++argv, &endptr, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: scripts/mkubootimg/mkimage.c:198:
+				addr = strtoul ((char *) *++argv, &endptr, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: scripts/mkubootimg/mkimage.c:200:
+					fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: scripts/mkubootimg/mkimage.c:201:
+					fprintf (stderr,
+						"%s: invalid load address %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: scripts/mkubootimg/mkimage.c:203:
+					exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: scripts/mkubootimg/mkimage.c:208:
+					usage ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#482: FILE: scripts/mkubootimg/mkimage.c:214:
+					usage ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: scripts/mkubootimg/mkimage.c:215:
+				ep = strtoul (*++argv, &endptr, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: scripts/mkubootimg/mkimage.c:217:
+					fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: scripts/mkubootimg/mkimage.c:218:
+					fprintf (stderr,
+						"%s: invalid entry point %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: scripts/mkubootimg/mkimage.c:220:
+					exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: scripts/mkubootimg/mkimage.c:226:
+					usage ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: scripts/mkubootimg/mkimage.c:236:
+				usage ();

WARNING:SPACING: space prohibited before semicolon
#507: FILE: scripts/mkubootimg/mkimage.c:239:
+NXTARG:		;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'argc != 1'
#510: FILE: scripts/mkubootimg/mkimage.c:242:
+	if ((argc != 1) || ((lflag ^ dflag) == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#526: FILE: scripts/mkubootimg/mkimage.c:258:
+			fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: scripts/mkubootimg/mkimage.c:259:
+			fprintf (stderr,
+				"%s: For XIP, the entry point must be the load addr + %lu\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#530: FILE: scripts/mkubootimg/mkimage.c:262:
+			exit (EXIT_FAILURE);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#536: FILE: scripts/mkubootimg/mkimage.c:268:
+	if (lflag) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#537: FILE: scripts/mkubootimg/mkimage.c:269:
+		ifd = open(imagefile, O_RDONLY|O_BINARY);
 		                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#539: FILE: scripts/mkubootimg/mkimage.c:271:
+		ifd = open(imagefile, O_RDWR|O_CREAT|O_TRUNC|O_BINARY, 0666);
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#539: FILE: scripts/mkubootimg/mkimage.c:271:
+		ifd = open(imagefile, O_RDWR|O_CREAT|O_TRUNC|O_BINARY, 0666);
 		                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#539: FILE: scripts/mkubootimg/mkimage.c:271:
+		ifd = open(imagefile, O_RDWR|O_CREAT|O_TRUNC|O_BINARY, 0666);
 		                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: scripts/mkubootimg/mkimage.c:275:
+		fprintf (stderr, "%s: Can't open %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: scripts/mkubootimg/mkimage.c:276:
+		fprintf (stderr, "%s: Can't open %s: %s\n",
+			cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: scripts/mkubootimg/mkimage.c:277:
+		exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: scripts/mkubootimg/mkimage.c:287:
+			fprintf (stderr, "%s: Can't stat %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: scripts/mkubootimg/mkimage.c:288:
+			fprintf (stderr, "%s: Can't stat %s: %s\n",
+				cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: scripts/mkubootimg/mkimage.c:289:
+			exit (EXIT_FAILURE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#560: FILE: scripts/mkubootimg/mkimage.c:292:
+		if ((unsigned)sbuf.st_size < sizeof(image_header_t)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: scripts/mkubootimg/mkimage.c:293:
+			fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: scripts/mkubootimg/mkimage.c:294:
+			fprintf (stderr,
+				"%s: Bad size: \"%s\" is no valid image\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#564: FILE: scripts/mkubootimg/mkimage.c:296:
+			exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: scripts/mkubootimg/mkimage.c:302:
+			fprintf (stderr, "%s: Can't read %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: scripts/mkubootimg/mkimage.c:303:
+			fprintf (stderr, "%s: Can't read %s: %s\n",
+				cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#572: FILE: scripts/mkubootimg/mkimage.c:304:
+			exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: scripts/mkubootimg/mkimage.c:312:
+		memcpy (hdr, ptr, sizeof(image_header_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: scripts/mkubootimg/mkimage.c:315:
+			fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: scripts/mkubootimg/mkimage.c:316:
+			fprintf (stderr,
+				"%s: Bad Magic Number: \"%s\" is no valid image\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#586: FILE: scripts/mkubootimg/mkimage.c:318:
+			exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#595: FILE: scripts/mkubootimg/mkimage.c:327:
+		if (crc32 (0, data, len) != checksum) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#596: FILE: scripts/mkubootimg/mkimage.c:328:
+			fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: scripts/mkubootimg/mkimage.c:329:
+			fprintf (stderr,
+				"%s: ERROR: \"%s\" has bad header checksum!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: scripts/mkubootimg/mkimage.c:331:
+			exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited before semicolon
#603: FILE: scripts/mkubootimg/mkimage.c:335:
+		len  = sbuf.st_size - sizeof(image_header_t) ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#605: FILE: scripts/mkubootimg/mkimage.c:337:
+		if (crc32 (0, data, len) != ntohl(hdr->ih_dcrc)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#606: FILE: scripts/mkubootimg/mkimage.c:338:
+			fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: scripts/mkubootimg/mkimage.c:339:
+			fprintf (stderr,
+				"%s: ERROR: \"%s\" has corrupted data!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#609: FILE: scripts/mkubootimg/mkimage.c:341:
+			exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#613: FILE: scripts/mkubootimg/mkimage.c:345:
+		print_header ((image_header_t *)ptr);

CHECK:SPACING: No space is necessary after a cast
#615: FILE: scripts/mkubootimg/mkimage.c:347:
+		(void) munmap((void *)ptr, sbuf.st_size);

CHECK:SPACING: No space is necessary after a cast
#616: FILE: scripts/mkubootimg/mkimage.c:348:
+		(void) close (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: scripts/mkubootimg/mkimage.c:348:
+		(void) close (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#618: FILE: scripts/mkubootimg/mkimage.c:350:
+		exit (EXIT_SUCCESS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: scripts/mkubootimg/mkimage.c:358:
+	memset (hdr, 0, sizeof(image_header_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#629: FILE: scripts/mkubootimg/mkimage.c:361:
+		fprintf (stderr, "%s: Write error on %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: scripts/mkubootimg/mkimage.c:362:
+		fprintf (stderr, "%s: Write error on %s: %s\n",
+			cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#631: FILE: scripts/mkubootimg/mkimage.c:363:
+		exit (EXIT_FAILURE);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#636: FILE: scripts/mkubootimg/mkimage.c:368:
+		uint32_t size;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#642: FILE: scripts/mkubootimg/mkimage.c:374:
+				if ((sep = strchr(file, ':')) != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#642: FILE: scripts/mkubootimg/mkimage.c:374:
+				if ((sep = strchr(file, ':')) != NULL) {
+					*sep = '\0';
+				}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: scripts/mkubootimg/mkimage.c:378:
+				if (stat (file, &sbuf) < 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: scripts/mkubootimg/mkimage.c:379:
+					fprintf (stderr, "%s: Can't stat %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: scripts/mkubootimg/mkimage.c:380:
+					fprintf (stderr, "%s: Can't stat %s: %s\n",
+						cmdname, file, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: scripts/mkubootimg/mkimage.c:381:
+					exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: scripts/mkubootimg/mkimage.c:389:
+				fprintf (stderr, "%s: Write error on %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: scripts/mkubootimg/mkimage.c:390:
+				fprintf (stderr, "%s: Write error on %s: %s\n",
+					cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: scripts/mkubootimg/mkimage.c:391:
+				exit (EXIT_FAILURE);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#662: FILE: scripts/mkubootimg/mkimage.c:394:
+			if (!file) {
+				break;
+			}

WARNING:LINE_SPACING: Missing a blank line after declarations
#678: FILE: scripts/mkubootimg/mkimage.c:410:
+			char *sep = strchr(file, ':');
+			if (sep) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#680: FILE: scripts/mkubootimg/mkimage.c:412:
+				copy_file (ifd, file, 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: scripts/mkubootimg/mkimage.c:416:
+				copy_file (ifd, file, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#689: FILE: scripts/mkubootimg/mkimage.c:421:
+		copy_file (ifd, datafile, 0);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#693: FILE: scripts/mkubootimg/mkimage.c:425:
+#if defined(_POSIX_SYNCHRONIZED_IO) && !defined(__sun__) && !defined(__FreeBSD__) && !defined(__APPLE__)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <__FreeBSD__>
#693: FILE: scripts/mkubootimg/mkimage.c:425:
+#if defined(_POSIX_SYNCHRONIZED_IO) && !defined(__sun__) && !defined(__FreeBSD__) && !defined(__APPLE__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#693: FILE: scripts/mkubootimg/mkimage.c:425:
+#if defined(_POSIX_SYNCHRONIZED_IO) && !defined(__sun__) && !defined(__FreeBSD__) && !defined(__APPLE__)

Architecture specific defines should be avoided wherever
possible.

CHECK:SPACING: No space is necessary after a cast
#694: FILE: scripts/mkubootimg/mkimage.c:426:
+	(void) fdatasync (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#694: FILE: scripts/mkubootimg/mkimage.c:426:
+	(void) fdatasync (ifd);

CHECK:SPACING: No space is necessary after a cast
#696: FILE: scripts/mkubootimg/mkimage.c:428:
+	(void) fsync (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: scripts/mkubootimg/mkimage.c:428:
+	(void) fsync (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#700: FILE: scripts/mkubootimg/mkimage.c:432:
+		fprintf (stderr, "%s: Can't stat %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: scripts/mkubootimg/mkimage.c:433:
+		fprintf (stderr, "%s: Can't stat %s: %s\n",
+			cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#702: FILE: scripts/mkubootimg/mkimage.c:434:
+		exit (EXIT_FAILURE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#706: FILE: scripts/mkubootimg/mkimage.c:438:
+				    PROT_READ|PROT_WRITE, MAP_SHARED, ifd, 0);
 				             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: scripts/mkubootimg/mkimage.c:440:
+		fprintf (stderr, "%s: Can't map %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: scripts/mkubootimg/mkimage.c:441:
+		fprintf (stderr, "%s: Can't map %s: %s\n",
+			cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: scripts/mkubootimg/mkimage.c:442:
+		exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: scripts/mkubootimg/mkimage.c:447:
+	checksum = crc32 (0,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: scripts/mkubootimg/mkimage.c:466:
+	checksum = crc32(0,(const char *)hdr,sizeof(image_header_t));
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: scripts/mkubootimg/mkimage.c:466:
+	checksum = crc32(0,(const char *)hdr,sizeof(image_header_t));
 	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#738: FILE: scripts/mkubootimg/mkimage.c:470:
+	print_header (hdr);

CHECK:SPACING: No space is necessary after a cast
#740: FILE: scripts/mkubootimg/mkimage.c:472:
+	(void) munmap((void *)ptr, sbuf.st_size);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#743: FILE: scripts/mkubootimg/mkimage.c:475:
+#if defined(_POSIX_SYNCHRONIZED_IO) && !defined(__sun__) && !defined(__FreeBSD__) && !defined(__APPLE__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#743: FILE: scripts/mkubootimg/mkimage.c:475:
+#if defined(_POSIX_SYNCHRONIZED_IO) && !defined(__sun__) && !defined(__FreeBSD__) && !defined(__APPLE__)

CHECK:SPACING: No space is necessary after a cast
#744: FILE: scripts/mkubootimg/mkimage.c:476:
+	(void) fdatasync (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#744: FILE: scripts/mkubootimg/mkimage.c:476:
+	(void) fdatasync (ifd);

CHECK:SPACING: No space is necessary after a cast
#746: FILE: scripts/mkubootimg/mkimage.c:478:
+	(void) fsync (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: scripts/mkubootimg/mkimage.c:478:
+	(void) fsync (ifd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#750: FILE: scripts/mkubootimg/mkimage.c:482:
+		fprintf (stderr, "%s: Write error on %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: scripts/mkubootimg/mkimage.c:483:
+		fprintf (stderr, "%s: Write error on %s: %s\n",
+			cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#752: FILE: scripts/mkubootimg/mkimage.c:484:
+		exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: scripts/mkubootimg/mkimage.c:487:
+	exit (EXIT_SUCCESS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: scripts/mkubootimg/mkimage.c:491:
+copy_file (int ifd, const char *datafile, int pad)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#769: FILE: scripts/mkubootimg/mkimage.c:501:
+	if (vflag) {
+		fprintf (stderr, "Adding Image %s\n", datafile);
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#770: FILE: scripts/mkubootimg/mkimage.c:502:
+		fprintf (stderr, "Adding Image %s\n", datafile);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#773: FILE: scripts/mkubootimg/mkimage.c:505:
+	if ((dfd = open(datafile, O_RDONLY|O_BINARY)) < 0) {
 	                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#773: FILE: scripts/mkubootimg/mkimage.c:505:
+	if ((dfd = open(datafile, O_RDONLY|O_BINARY)) < 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#774: FILE: scripts/mkubootimg/mkimage.c:506:
+		fprintf (stderr, "%s: Can't open %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#775: FILE: scripts/mkubootimg/mkimage.c:507:
+		fprintf (stderr, "%s: Can't open %s: %s\n",
+			cmdname, datafile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: scripts/mkubootimg/mkimage.c:508:
+		exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#780: FILE: scripts/mkubootimg/mkimage.c:512:
+		fprintf (stderr, "%s: Can't stat %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: scripts/mkubootimg/mkimage.c:513:
+		fprintf (stderr, "%s: Can't stat %s: %s\n",
+			cmdname, datafile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: scripts/mkubootimg/mkimage.c:514:
+		exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: scripts/mkubootimg/mkimage.c:520:
+		fprintf (stderr, "%s: Can't read %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: scripts/mkubootimg/mkimage.c:521:
+		fprintf (stderr, "%s: Can't read %s: %s\n",
+			cmdname, datafile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#790: FILE: scripts/mkubootimg/mkimage.c:522:
+		exit (EXIT_FAILURE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#801: FILE: scripts/mkubootimg/mkimage.c:533:
+		if ((unsigned)sbuf.st_size < sizeof(image_header_t)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#802: FILE: scripts/mkubootimg/mkimage.c:534:
+			fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#803: FILE: scripts/mkubootimg/mkimage.c:535:
+			fprintf (stderr,
+				"%s: Bad size: \"%s\" is too small for XIP\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#805: FILE: scripts/mkubootimg/mkimage.c:537:
+			exit (EXIT_FAILURE);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#808: FILE: scripts/mkubootimg/mkimage.c:540:
+		for (p=ptr; p < ptr+sizeof(image_header_t); p++) {
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#808: FILE: scripts/mkubootimg/mkimage.c:540:
+		for (p=ptr; p < ptr+sizeof(image_header_t); p++) {
 		                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#809: FILE: scripts/mkubootimg/mkimage.c:541:
+			if ( *p != 0xff ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#809: FILE: scripts/mkubootimg/mkimage.c:541:
+			if ( *p != 0xff ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#810: FILE: scripts/mkubootimg/mkimage.c:542:
+				fprintf (stderr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: scripts/mkubootimg/mkimage.c:543:
+				fprintf (stderr,
+					"%s: Bad file: \"%s\" has invalid buffer for XIP\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#813: FILE: scripts/mkubootimg/mkimage.c:545:
+				exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#822: FILE: scripts/mkubootimg/mkimage.c:554:
+		fprintf (stderr, "%s: Write error on %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: scripts/mkubootimg/mkimage.c:555:
+		fprintf (stderr, "%s: Write error on %s: %s\n",
+			cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#824: FILE: scripts/mkubootimg/mkimage.c:556:
+		exit (EXIT_FAILURE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#827: FILE: scripts/mkubootimg/mkimage.c:559:
+	if (pad && ((tail = size % 4) != 0)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#828: FILE: scripts/mkubootimg/mkimage.c:560:
+	if (pad && ((tail = size % 4) != 0)) {
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#829: FILE: scripts/mkubootimg/mkimage.c:561:
+		if (write(ifd, (char *)&zero, 4-tail) != 4-tail) {
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#829: FILE: scripts/mkubootimg/mkimage.c:561:
+		if (write(ifd, (char *)&zero, 4-tail) != 4-tail) {
 		                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#830: FILE: scripts/mkubootimg/mkimage.c:562:
+			fprintf (stderr, "%s: Write error on %s: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: scripts/mkubootimg/mkimage.c:563:
+			fprintf (stderr, "%s: Write error on %s: %s\n",
+				cmdname, imagefile, strerror(errno));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#832: FILE: scripts/mkubootimg/mkimage.c:564:
+			exit (EXIT_FAILURE);

CHECK:SPACING: No space is necessary after a cast
#836: FILE: scripts/mkubootimg/mkimage.c:568:
+	(void) munmap((void *)ptr, sbuf.st_size);

CHECK:SPACING: No space is necessary after a cast
#837: FILE: scripts/mkubootimg/mkimage.c:569:
+	(void) close (dfd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#837: FILE: scripts/mkubootimg/mkimage.c:569:
+	(void) close (dfd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#841: FILE: scripts/mkubootimg/mkimage.c:573:
+usage (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#843: FILE: scripts/mkubootimg/mkimage.c:575:
+	fprintf (stderr, "Usage: %s -l image\n"

WARNING:SPLIT_STRING: quoted string split across lines
#846: FILE: scripts/mkubootimg/mkimage.c:578:
+			 "       %s [-x] -A arch -O os -T type -C comp "
+			 "-a addr -e ep -n name -d data_file[:data_file...] image\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#848: FILE: scripts/mkubootimg/mkimage.c:580:
+	fprintf (stderr, "          -A ==> set architecture to 'arch'\n"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#858: FILE: scripts/mkubootimg/mkimage.c:590:
+	exit (EXIT_FAILURE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#862: FILE: scripts/mkubootimg/mkimage.c:594:
+print_header (image_header_t *hdr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#865: FILE: scripts/mkubootimg/mkimage.c:597:
+	uint32_t size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: scripts/mkubootimg/mkimage.c:602:
+	printf ("Image Name:   %.*s\n", IH_NMLEN, hdr->ih_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#871: FILE: scripts/mkubootimg/mkimage.c:603:
+	printf ("Created:      %s", ctime(&timestamp));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#872: FILE: scripts/mkubootimg/mkimage.c:604:
+	printf ("Image Type:   "); print_type(hdr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#873: FILE: scripts/mkubootimg/mkimage.c:605:
+	printf ("Data Size:    %d Bytes = %.2f kB = %.2f MB\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#874: FILE: scripts/mkubootimg/mkimage.c:606:
+		size, (double)size / 1.024e3, (double)size / 1.048576e6 );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#875: FILE: scripts/mkubootimg/mkimage.c:607:
+	printf ("Load Address: 0x%08X\n", ntohl(hdr->ih_load));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#876: FILE: scripts/mkubootimg/mkimage.c:608:
+	printf ("Entry Point:  0x%08X\n", ntohl(hdr->ih_ep));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#880: FILE: scripts/mkubootimg/mkimage.c:612:
+		uint32_t pos;

CHECK:SPACING: No space is necessary after a cast
#881: FILE: scripts/mkubootimg/mkimage.c:613:
+		uint32_t *len_ptr = (uint32_t *) (

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#881: FILE: scripts/mkubootimg/mkimage.c:613:
+		uint32_t *len_ptr = (uint32_t *) (

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#881: FILE: scripts/mkubootimg/mkimage.c:613:
+		uint32_t *len_ptr = (uint32_t *) (

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#886: FILE: scripts/mkubootimg/mkimage.c:618:
+		for (i=0; len_ptr[i]; ++i)	/* null pointer terminates list */
 		      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#891: FILE: scripts/mkubootimg/mkimage.c:623:
+		printf ("Contents:\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#892: FILE: scripts/mkubootimg/mkimage.c:624:
+		for (i=0; len_ptr[i]; ++i) {
 		      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#895: FILE: scripts/mkubootimg/mkimage.c:627:
+			printf ("   Image %d: %8d Bytes = %4d kB = %d MB\n",

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#896: FILE: scripts/mkubootimg/mkimage.c:628:
+				i, size, size>>10, size>>20);
 				             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#896: FILE: scripts/mkubootimg/mkimage.c:628:
+				i, size, size>>10, size>>20);
 				                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#903: FILE: scripts/mkubootimg/mkimage.c:635:
+				printf ("    Offset = %08X\n", pos);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#913: FILE: scripts/mkubootimg/mkimage.c:645:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#915: FILE: scripts/mkubootimg/mkimage.c:647:
+print_type (image_header_t *hdr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#917: FILE: scripts/mkubootimg/mkimage.c:649:
+	printf ("%s %s %s (%s)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#918: FILE: scripts/mkubootimg/mkimage.c:650:
+		put_arch (hdr->ih_arch),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#919: FILE: scripts/mkubootimg/mkimage.c:651:
+		put_os   (hdr->ih_os  ),

ERROR:SPACING: space prohibited before that close parenthesis ')'
#919: FILE: scripts/mkubootimg/mkimage.c:651:
+		put_os   (hdr->ih_os  ),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#920: FILE: scripts/mkubootimg/mkimage.c:652:
+		put_type (hdr->ih_type),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#921: FILE: scripts/mkubootimg/mkimage.c:653:
+		put_comp (hdr->ih_comp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#925: FILE: scripts/mkubootimg/mkimage.c:657:
+static char *put_arch (int arch)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#927: FILE: scripts/mkubootimg/mkimage.c:659:
+	return (put_table_entry(arch_name, "Unknown Architecture", arch));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: scripts/mkubootimg/mkimage.c:662:
+static char *put_os (int os)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#932: FILE: scripts/mkubootimg/mkimage.c:664:
+	return (put_table_entry(os_name, "Unknown OS", os));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#935: FILE: scripts/mkubootimg/mkimage.c:667:
+static char *put_type (int type)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#937: FILE: scripts/mkubootimg/mkimage.c:669:
+	return (put_table_entry(type_name, "Unknown Image", type));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#940: FILE: scripts/mkubootimg/mkimage.c:672:
+static char *put_comp (int comp)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#942: FILE: scripts/mkubootimg/mkimage.c:674:
+	return (put_table_entry(comp_name, "Unknown Compression", comp));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: scripts/mkubootimg/mkimage.c:677:
+static char *put_table_entry (table_entry_t *table, char *msg, int type)

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#947: FILE: scripts/mkubootimg/mkimage.c:679:
+	for (; table->val>=0; ++table) {
 	                 ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#956: FILE: scripts/mkubootimg/mkimage.c:688:
+	return (get_table_entry(arch_name, "CPU", name));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#959: FILE: scripts/mkubootimg/mkimage.c:691:
+
+

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#962: FILE: scripts/mkubootimg/mkimage.c:694:
+	return (get_table_entry(comp_name, "Compression", name));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#965: FILE: scripts/mkubootimg/mkimage.c:697:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#966: FILE: scripts/mkubootimg/mkimage.c:698:
+static int get_os (char *name)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#968: FILE: scripts/mkubootimg/mkimage.c:700:
+	return (get_table_entry(os_name, "OS", name));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#971: FILE: scripts/mkubootimg/mkimage.c:703:
+
+

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#974: FILE: scripts/mkubootimg/mkimage.c:706:
+	return (get_table_entry(type_name, "Image", name));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#977: FILE: scripts/mkubootimg/mkimage.c:709:
+static int get_table_entry (table_entry_t *table, char *msg, char *name)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#982: FILE: scripts/mkubootimg/mkimage.c:714:
+	for (t=table; t->val>=0; ++t) {
 	      ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#982: FILE: scripts/mkubootimg/mkimage.c:714:
+	for (t=table; t->val>=0; ++t) {
 	                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#983: FILE: scripts/mkubootimg/mkimage.c:715:
+		if (t->sname && strcasecmp(t->sname, name)==0)
 		                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#986: FILE: scripts/mkubootimg/mkimage.c:718:
+	fprintf (stderr, "\nInvalid %s Type - valid names are", msg);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#987: FILE: scripts/mkubootimg/mkimage.c:719:
+	for (t=table; t->val>=0; ++t) {
 	      ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#987: FILE: scripts/mkubootimg/mkimage.c:719:
+	for (t=table; t->val>=0; ++t) {
 	                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t->sname"
#988: FILE: scripts/mkubootimg/mkimage.c:720:
+		if (t->sname == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#990: FILE: scripts/mkubootimg/mkimage.c:722:
+		fprintf (stderr, "%c %s", (first) ? ':' : ',', t->sname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#993: FILE: scripts/mkubootimg/mkimage.c:725:
+	fprintf (stderr, "\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#999: FILE: scripts/mkubootimg/uimage.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1017: FILE: scripts/mkubootimg/uimage.h:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1018: FILE: scripts/mkubootimg/uimage.h:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1143: FILE: scripts/mkubootimg/uimage.h:145:
+typedef struct image_header {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1144: FILE: scripts/mkubootimg/uimage.h:146:
+	uint32_t	ih_magic;	/* Image Header Magic Number	*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1145: FILE: scripts/mkubootimg/uimage.h:147:
+	uint32_t	ih_hcrc;	/* Image Header CRC Checksum	*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1146: FILE: scripts/mkubootimg/uimage.h:148:
+	uint32_t	ih_time;	/* Image Creation Timestamp	*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1147: FILE: scripts/mkubootimg/uimage.h:149:
+	uint32_t	ih_size;	/* Image Data Size		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1148: FILE: scripts/mkubootimg/uimage.h:150:
+	uint32_t	ih_load;	/* Data	 Load  Address		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1149: FILE: scripts/mkubootimg/uimage.h:151:
+	uint32_t	ih_ep;		/* Entry Point Address		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1150: FILE: scripts/mkubootimg/uimage.h:152:
+	uint32_t	ih_dcrc;	/* Image Data CRC Checksum	*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1151: FILE: scripts/mkubootimg/uimage.h:153:
+	uint8_t		ih_os;		/* Operating System		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1152: FILE: scripts/mkubootimg/uimage.h:154:
+	uint8_t		ih_arch;	/* CPU architecture		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1153: FILE: scripts/mkubootimg/uimage.h:155:
+	uint8_t		ih_type;	/* Image Type			*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1154: FILE: scripts/mkubootimg/uimage.h:156:
+	uint8_t		ih_comp;	/* Compression Type		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1155: FILE: scripts/mkubootimg/uimage.h:157:
+	uint8_t		ih_name[IH_NMLEN];	/* Image Name		*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1158: FILE: scripts/mkubootimg/uimage.h:160:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340740.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 64 errors, 306 warnings, 89 checks, 1097 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340740.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
