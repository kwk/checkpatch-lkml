WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#52: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: Documentation/pps/timepps.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#73: FILE: Documentation/pps/timepps.h:17:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: Documentation/pps/timepps.h:18:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#118: FILE: Documentation/pps/timepps.h:62:
+typedef int pps_handle_t;		/* represents a PPS source */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#119: FILE: Documentation/pps/timepps.h:63:
+typedef unsigned long pps_seq_t;	/* sequence number */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#120: FILE: Documentation/pps/timepps.h:64:
+typedef struct ntp_fp ntp_fp_t;		/* NTP-compatible time stamp */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#121: FILE: Documentation/pps/timepps.h:65:
+typedef union pps_timeu pps_timeu_t;	/* generic data type for time stamps */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#122: FILE: Documentation/pps/timepps.h:66:
+typedef struct pps_info pps_info_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#123: FILE: Documentation/pps/timepps.h:67:
+typedef struct pps_params pps_params_t;

WARNING:INLINE: plain inline is preferred over __inline
#141: FILE: Documentation/pps/timepps.h:85:
+static __inline int time_pps_create(int source, pps_handle_t *handle)

WARNING:INLINE: plain inline is preferred over __inline
#168: FILE: Documentation/pps/timepps.h:112:
+static __inline int time_pps_destroy(pps_handle_t handle)

WARNING:INLINE: plain inline is preferred over __inline
#173: FILE: Documentation/pps/timepps.h:117:
+static __inline int time_pps_getparams(pps_handle_t handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: Documentation/pps/timepps.h:118:
+static __inline int time_pps_getparams(pps_handle_t handle,
+					pps_params_t *ppsparams)

WARNING:INLINE: plain inline is preferred over __inline
#191: FILE: Documentation/pps/timepps.h:135:
+static __inline int time_pps_setparams(pps_handle_t handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: Documentation/pps/timepps.h:136:
+static __inline int time_pps_setparams(pps_handle_t handle,
+					const pps_params_t *ppsparams)

WARNING:INLINE: plain inline is preferred over __inline
#207: FILE: Documentation/pps/timepps.h:151:
+static __inline int time_pps_getcap(pps_handle_t handle, int *mode)

WARNING:INLINE: plain inline is preferred over __inline
#212: FILE: Documentation/pps/timepps.h:156:
+static __inline int time_pps_fetch(pps_handle_t handle, const int tsformat,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: Documentation/pps/timepps.h:157:
+static __inline int time_pps_fetch(pps_handle_t handle, const int tsformat,
+					pps_info_t *ppsinfobuf,

CHECK:BRACES: braces {} should be used on all arms of this statement
#225: FILE: Documentation/pps/timepps.h:169:
+	if (timeout) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: Documentation/pps/timepps.h:173:
+	} else

WARNING:INLINE: plain inline is preferred over __inline
#245: FILE: Documentation/pps/timepps.h:189:
+static __inline int time_pps_kcbind(pps_handle_t handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: Documentation/pps/timepps.h:190:
+static __inline int time_pps_kcbind(pps_handle_t handle,
+					const int kernel_consumer,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040286.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 6 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040286.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
