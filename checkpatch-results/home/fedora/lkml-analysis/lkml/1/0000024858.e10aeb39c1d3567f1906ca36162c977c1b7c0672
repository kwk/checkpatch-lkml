WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: include/linux/clk.h:36:
+       int             (*enable)(struct clk *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#100: FILE: include/linux/clk.h:36:
+       int             (*enable)(struct clk *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: include/linux/clk.h:37:
+       void            (*disable)(struct clk *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#101: FILE: include/linux/clk.h:37:
+       void            (*disable)(struct clk *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: include/linux/clk.h:38:
+       unsigned long   (*get_rate)(struct clk *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#102: FILE: include/linux/clk.h:38:
+       unsigned long   (*get_rate)(struct clk *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: include/linux/clk.h:39:
+       void            (*put)(struct clk *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#103: FILE: include/linux/clk.h:39:
+       void            (*put)(struct clk *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/linux/clk.h:40:
+       long            (*round_rate)(struct clk *, unsigned long);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#104: FILE: include/linux/clk.h:40:
+       long            (*round_rate)(struct clk *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#104: FILE: include/linux/clk.h:40:
+       long            (*round_rate)(struct clk *, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/linux/clk.h:41:
+       int             (*set_rate)(struct clk *, unsigned long);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#105: FILE: include/linux/clk.h:41:
+       int             (*set_rate)(struct clk *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#105: FILE: include/linux/clk.h:41:
+       int             (*set_rate)(struct clk *, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/linux/clk.h:42:
+       int             (*set_parent)(struct clk *, struct clk *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#106: FILE: include/linux/clk.h:42:
+       int             (*set_parent)(struct clk *, struct clk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#106: FILE: include/linux/clk.h:42:
+       int             (*set_parent)(struct clk *, struct clk *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/linux/clk.h:43:
+       struct clk*     (*get_parent)(struct clk *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clk *' should also have an identifier name
#107: FILE: include/linux/clk.h:43:
+       struct clk*     (*get_parent)(struct clk *);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#140: FILE: include/linux/clk.h:76:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#147: FILE: include/linux/clk.h:83:
+	return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#154: FILE: include/linux/clk.h:90:
+	return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#161: FILE: include/linux/clk.h:97:
+	return ERR_PTR(-ENOSYS);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: include/linux/clk.h:100:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'comsumer' may be misspelled - perhaps 'consumer'?
#218: FILE: include/linux/clk.h:194:
+ * @id: clock comsumer ID
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024858.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 1 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024858.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
