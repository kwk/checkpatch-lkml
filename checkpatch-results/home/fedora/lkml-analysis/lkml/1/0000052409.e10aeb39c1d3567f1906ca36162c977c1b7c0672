WARNING:TYPO_SPELLING: 'connectted' may be misspelled - perhaps 'connected'?
#39: 
interfaces to access the devices connectted to cs5536.
                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'sourth' may be misspelled - perhaps 'south'?
#74: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536.h:2:
+ * The header file of cs5536 sourth bridge.
                              ^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536.h:13:
+extern void _rdmsr(u32 msr, u32 *hi, u32 *lo);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536.h:14:
+extern void _wrmsr(u32 msr, u32 hi, u32 lo);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#384: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_pci.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_pci.h:17:
+extern void cs5536_pci_conf_write4(int function, int reg, u32 value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#401: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_pci.h:18:
+extern u32 cs5536_pci_conf_read4(int function, int reg);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#449: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_pci.h:66:
+#define CFG_PCI_CACHE_LINE_SIZE(header_type, latency_timer)	\
+	((PCI_NONE_BIST << 24) | ((header_type) << 16) \
+		| ((latency_timer) << 8) | PCI_NORMAL_CACHE_LINE_SIZE);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#503: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_pci.h:120:
+#define^IPCI_UART1_INT_REG ^I0x50$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#543: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_vsm.h:1:
+/*

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#558: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_vsm.h:16:
+#define DECLARE_CS5536_MODULE(name) \
+extern void pci_##name##_write_reg(int reg, u32 value); \
+extern u32 pci_##name##_read_reg(int reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#559: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_vsm.h:17:
+extern void pci_##name##_write_reg(int reg, u32 value); \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: arch/mips/include/asm/mach-loongson/cs5536/cs5536_vsm.h:18:
+extern u32 pci_##name##_read_reg(int reg);

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#612: FILE: arch/mips/loongson/common/cs5536/Makefile:8:
+EXTRA_CFLAGS += -Werror

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#619: FILE: arch/mips/loongson/common/cs5536/cs5536_acc.c:1:
+/*

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#638: FILE: arch/mips/loongson/common/cs5536/cs5536_acc.c:20:
+ * acc_write: acc write transfering
                         ^^^^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#688: FILE: arch/mips/loongson/common/cs5536/cs5536_acc.c:70:
+	return;
+}

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#691: FILE: arch/mips/loongson/common/cs5536/cs5536_acc.c:73:
+ * acc_read: acc read transfering
                       ^^^^^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#707: FILE: arch/mips/loongson/common/cs5536/cs5536_acc.c:89:
+		if (((lo & 0xfff00000) || (hi & 0x000000ff))
+		    && ((hi & 0xf0000000) == 0xa0000000))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#775: FILE: arch/mips/loongson/common/cs5536/cs5536_ehci.c:1:
+/*

WARNING:RETURN_VOID: void function return statements are not generally useful
#851: FILE: arch/mips/loongson/common/cs5536/cs5536_ehci.c:77:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#941: FILE: arch/mips/loongson/common/cs5536/cs5536_ide.c:1:
+/*

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#960: FILE: arch/mips/loongson/common/cs5536/cs5536_ide.c:20:
+ * ide_write : ide write transfering
                          ^^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1007: FILE: arch/mips/loongson/common/cs5536/cs5536_ide.c:67:
+		if (value == CS5536_IDE_FLASH_SIGNATURE) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1011: FILE: arch/mips/loongson/common/cs5536/cs5536_ide.c:71:
+		} else

WARNING:RETURN_VOID: void function return statements are not generally useful
#1031: FILE: arch/mips/loongson/common/cs5536/cs5536_ide.c:91:
+	return;
+}

WARNING:TYPO_SPELLING: 'tranfering' may be misspelled - perhaps 'transferring'?
#1034: FILE: arch/mips/loongson/common/cs5536/cs5536_ide.c:94:
+ * ide_read : ide read tranfering.
                        ^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1134: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:1:
+/*

WARNING:RETURN_VOID: void function return statements are not generally useful
#1200: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:67:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1216: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:83:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1244: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:111:
+	return;
+}

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#1270: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:137:
+ * isa_write : isa write transfering.
                          ^^^^^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1298: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:165:
+		if ((value & PCI_STATUS_REC_MASTER_ABORT)
+		    && (lo & SB_MAR_ERR_EN))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1302: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:169:
+		if ((value & PCI_STATUS_DETECTED_PARITY)
+		    && (lo & SB_PARE_ERR_EN))

WARNING:RETURN_VOID: void function return statements are not generally useful
#1363: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:230:
+	return;
+}

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#1366: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:233:
+ * isa_read : isa read transfering.
                        ^^^^^^^^^^^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1418: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:285:
+		return pci_isa_read_bar(0);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1421: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:288:
+		return pci_isa_read_bar(1);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1424: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:291:
+		return pci_isa_read_bar(2);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1429: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:296:
+		return pci_isa_read_bar(4);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1432: FILE: arch/mips/loongson/common/cs5536/cs5536_isa.c:299:
+		return pci_isa_read_bar(5);
+		break;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1462: FILE: arch/mips/loongson/common/cs5536/cs5536_ohci.c:1:
+/*

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#1481: FILE: arch/mips/loongson/common/cs5536/cs5536_ohci.c:20:
+ * ohci_write : ohci write transfering.
                            ^^^^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#1536: FILE: arch/mips/loongson/common/cs5536/cs5536_ohci.c:75:
+	return;
+}

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#1539: FILE: arch/mips/loongson/common/cs5536/cs5536_ohci.c:78:
+ * ohci_read : ohci read transfering.
                          ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1623: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:1:
+/*

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'function <= CS5536_FUNC_START'
#1682: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:60:
+	if ((function <= CS5536_FUNC_START) || (function >= CS5536_FUNC_END))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'function >= CS5536_FUNC_END'
#1682: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:60:
+	if ((function <= CS5536_FUNC_START) || (function >= CS5536_FUNC_END))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg < 0'
#1684: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:62:
+	if ((reg < 0) || (reg > 0x100) || ((reg & 0x03) != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 0x100'
#1684: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:62:
+	if ((reg < 0) || (reg > 0x100) || ((reg & 0x03) != 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vsm_conf_write[function]"
#1687: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:65:
+	if (vsm_conf_write[function] != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#1691: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:69:
+	return;
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'function <= CS5536_FUNC_START'
#1700: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:78:
+	if ((function <= CS5536_FUNC_START) || (function >= CS5536_FUNC_END))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'function >= CS5536_FUNC_END'
#1700: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:78:
+	if ((function <= CS5536_FUNC_START) || (function >= CS5536_FUNC_END))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg < 0'
#1702: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:80:
+	if ((reg < 0) || ((reg & 0x03) != 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vsm_conf_read[function]"
#1707: FILE: arch/mips/loongson/common/cs5536/cs5536_pci.c:85:
+	if (vsm_conf_read[function] != NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052409.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 38 warnings, 20 checks, 1575 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052409.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
