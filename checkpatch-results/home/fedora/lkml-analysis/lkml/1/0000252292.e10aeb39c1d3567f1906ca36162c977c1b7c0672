WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
We do not hold the lock while printing the entire list. So, the list may not be

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*print_entry)...) over kmalloc(sizeof(struct memtype)...)
#69: FILE: arch/x86/mm/pat.c:503:
+	print_entry  = kmalloc(sizeof(struct memtype), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#74: FILE: arch/x86/mm/pat.c:508:
+	list_for_each_entry(list_node, &memtype_list, nd) {
 	                                              ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#91: FILE: arch/x86/mm/pat.c:525:
+		seq_printf(seq, "PAT memtype list:\n");

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#111: FILE: arch/x86/mm/pat.c:545:
+	seq_printf(seq, "%s @ 0x%Lx-0x%Lx\n", cattr_name(print_entry->type),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/x86/mm/pat.c:546:
+	seq_printf(seq, "%s @ 0x%Lx-0x%Lx\n", cattr_name(print_entry->type),
+			print_entry->start, print_entry->end);

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#117: FILE: arch/x86/mm/pat.c:551:
+static struct seq_operations memtype_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#138: FILE: arch/x86/mm/pat.c:572:
+	debugfs_create_file("pat_memtype_list", S_IRUSR, arch_debugfs_dir,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: arch/x86/mm/pat.c:573:
+	debugfs_create_file("pat_memtype_list", S_IRUSR, arch_debugfs_dir,
+				NULL, &memtype_fops);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000252292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 3 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000252292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
