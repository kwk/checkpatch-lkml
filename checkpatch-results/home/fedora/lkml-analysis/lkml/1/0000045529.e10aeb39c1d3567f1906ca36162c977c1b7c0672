CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/char/nozomi.c:802:
+	size = kfifo_out(&port->fifo_ul, dc->send_buf,
 			   ul_size < SEND_BUF_MAX ? ul_size : SEND_BUF_MAX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/char/sonypi.c:781:
+	while (kfifo_out_locked(&sonypi_device.input_fifo, (unsigned char *)&kp,
 			 sizeof(kp), &sonypi_device.input_fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: drivers/char/sonypi.c:832:
+		kfifo_in_locked(&sonypi_device.input_fifo,
 			(unsigned char *)&kp, sizeof(kp),

CHECK:SPACING: No space is necessary after a cast
#134: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+		kfifo_in(fifo, (unsigned char *) &entry, sizeof(u32));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:75:
+			kfifo_in(fifo,
 				(unsigned char *) &rarray[idx],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:82:
+			kfifo_in(fifo,
 				(unsigned char *) &rarray[i],

CHECK:SPACING: No space is necessary after a cast
#157: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+			kfifo_in(fifo, (unsigned char *) &i, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#161: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:89:
+		kfifo_out_locked(fifo, (unsigned char *) &entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:90:
+		kfifo_out_locked(fifo, (unsigned char *) &entry,
 				sizeof(u32), fifo_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:123:
+			kfifo_in(&rdev_p->rscp->qpid_fifo,
 				    (unsigned char *) &i, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#179: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:183:
+	if (kfifo_out_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock))

CHECK:SPACING: No space is necessary after a cast
#188: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:193:
+	kfifo_in_locked(fifo, (unsigned char *) &entry, sizeof(u32), lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/media/video/meye.c:804:
+		if (kfifo_out_locked(&meye.grabq, (unsigned char *)&reqnr,
 			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/media/video/meye.c:825:
+		if (kfifo_out_locked(&meye.grabq, (unsigned char *)&reqnr,
 			      sizeof(int), &meye.grabq_lock) != sizeof(int)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/media/video/meye.c:939:
+	kfifo_in_locked(&meye.grabq, (unsigned char *)nb, sizeof(int),
 			 &meye.grabq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/media/video/meye.c:972:
+		kfifo_out_locked(&meye.doneq, (unsigned char *)&unused,
 				sizeof(int), &meye.doneq_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/media/video/meye.c:1487:
+	if (!kfifo_out_locked(&meye.doneq, (unsigned char *)&reqnr,
 		       sizeof(int), &meye.doneq_lock)) {

CHECK:SPACING: No space is necessary after a cast
#275: FILE: drivers/net/wireless/libertas/main.c:857:
+			kfifo_out(&priv->event_fifo, (unsigned char *) &event,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/net/wireless/libertas/main.c:858:
+			kfifo_out(&priv->event_fifo, (unsigned char *) &event,
 				sizeof(event));

CHECK:SPACING: No space is necessary after a cast
#284: FILE: drivers/net/wireless/libertas/main.c:1582:
+	kfifo_in(&priv->event_fifo, (unsigned char *) &event, sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/platform/x86/fujitsu-laptop.c:1010:
+				status = kfifo_in_locked(&fujitsu_hotkey->fifo,
 						   (unsigned char *)&keycode,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#305: FILE: drivers/platform/x86/fujitsu-laptop.c:1023:
+					kfifo_out_locked(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/platform/x86/sony-laptop.c:304:
+	while (kfifo_out_locked(&sony_laptop_input.fifo, (unsigned char *)&kp,
 			sizeof(kp), &sony_laptop_input.fifo_lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: drivers/platform/x86/sony-laptop.c:367:
+		kfifo_in_locked(&sony_laptop_input.fifo,
 			  (unsigned char *)&kp, sizeof(kp),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#356: FILE: drivers/scsi/libiscsi.c:434:
+	kfifo_in(&session->cmdpool.queue, (void*)&task, sizeof(void*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#356: FILE: drivers/scsi/libiscsi.c:434:
+	kfifo_in(&session->cmdpool.queue, (void*)&task, sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/scsi/libiscsi.c:646:
+		if (!kfifo_out(&session->cmdpool.queue,
 				 (void*)&task, sizeof(void*)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/scsi/libiscsi.c:1477:
+	if (!kfifo_out(&conn->session->cmdpool.queue,
 			 (void *) &task, sizeof(void *)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#383: FILE: drivers/scsi/libiscsi.c:2263:
+		kfifo_in(&q->queue, (void*)&q->pool[i], sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#383: FILE: drivers/scsi/libiscsi.c:2263:
+		kfifo_in(&q->queue, (void*)&q->pool[i], sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: drivers/scsi/libiscsi.c:2613:
+	if (!kfifo_out(&session->cmdpool.queue,
                          (void*)&conn->login_task,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#401: FILE: drivers/scsi/libiscsi.c:2632:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: drivers/scsi/libiscsi.c:2633:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,
 		    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#410: FILE: drivers/scsi/libiscsi.c:2695:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: drivers/scsi/libiscsi.c:2696:
+	kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,
 		    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#423: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (kfifo_out(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#423: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (kfifo_out(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#424: FILE: drivers/scsi/libiscsi_tcp.c:449:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/scsi/libiscsi_tcp.c:450:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#432: FILE: drivers/scsi/libiscsi_tcp.c:456:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/scsi/libiscsi_tcp.c:457:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#441: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = kfifo_out(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#441: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = kfifo_out(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#450: FILE: drivers/scsi/libiscsi_tcp.c:557:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/scsi/libiscsi_tcp.c:558:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#459: FILE: drivers/scsi/libiscsi_tcp.c:573:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/scsi/libiscsi_tcp.c:574:
+		kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#468: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	kfifo_in(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#468: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	kfifo_in(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/scsi/libiscsi_tcp.c:986:
+				kfifo_in(&tcp_task->r2tpool.queue,
 					    (void *)&tcp_task->r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/scsi/libiscsi_tcp.c:994:
+			kfifo_out(&tcp_task->r2tqueue,
 				    (void *)&tcp_task->r2t, sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#498: FILE: drivers/scsi/libsrp.c:64:
+		kfifo_in(&q->queue, (void *) &iue, sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#507: FILE: drivers/scsi/libsrp.c:167:
+	kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/scsi/libsrp.c:168:
+	kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,
 			sizeof(void *), &target->iu_queue.lock);

CHECK:SPACING: No space is necessary after a cast
#516: FILE: drivers/scsi/libsrp.c:180:
+	kfifo_in_locked(&iue->target->iu_queue.queue, (void *) &iue,

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#565: FILE: include/linux/kfifo.h:19:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#598: FILE: include/linux/kfifo.h:59:
+extern __must_check unsigned int kfifo_in(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: include/linux/kfifo.h:60:
+extern __must_check unsigned int kfifo_in(struct kfifo *fifo,
+				const unsigned char *from, unsigned int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#600: FILE: include/linux/kfifo.h:61:
+extern __must_check unsigned int kfifo_out(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: include/linux/kfifo.h:62:
+extern __must_check unsigned int kfifo_out(struct kfifo *fifo,
+				unsigned char *to, unsigned int len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: include/linux/kfifo.h:98:
+static inline __must_check unsigned int kfifo_in_locked(struct kfifo *fifo,
 		const unsigned char *from, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: include/linux/kfifo.h:123:
+static inline __must_check unsigned int kfifo_out_locked(struct kfifo *fifo,
 	unsigned char *to, unsigned int n, spinlock_t *lock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: kernel/kfifo.c:116:
+unsigned int kfifo_in(struct kfifo *fifo,
+			const unsigned char *from, unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: kernel/kfifo.c:162:
+unsigned int kfifo_out(struct kfifo *fifo,
+			 unsigned char *to, unsigned int len)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045529.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 0 warnings, 47 checks, 597 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045529.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
