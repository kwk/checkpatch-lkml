WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
> > today (memorystick, infiniband, and scsi), and I have patches pending to

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#79: 
Otherwise you will get some wierd uevents spit out (run udevmonitor to
                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <max_uV>
#225: FILE: drivers/regulator/reg-core.c:110:
+	if (uV > rdev->constraints->max_uV ||

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/regulator/reg-core.c:111:
+	if (uV > rdev->constraints->max_uV ||
+		uV < rdev->constraints->min_uV) {

CHECK:CAMELCASE: Avoid CamelCase: <min_uV>
#226: FILE: drivers/regulator/reg-core.c:111:
+		uV < rdev->constraints->min_uV) {

CHECK:CAMELCASE: Avoid CamelCase: <max_uA>
#255: FILE: drivers/regulator/reg-core.c:132:
+	if (uA > rdev->constraints->max_uA ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/regulator/reg-core.c:133:
+	if (uA > rdev->constraints->max_uA ||
+		uA < rdev->constraints->min_uA) {

CHECK:CAMELCASE: Avoid CamelCase: <min_uA>
#256: FILE: drivers/regulator/reg-core.c:133:
+		uA < rdev->constraints->min_uA) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#444: FILE: drivers/regulator/reg-core.c:291:
+	list_for_each_entry(regulator, &rdev->consumer_list, list)
 	    uA += regulator->uA_load;

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: drivers/regulator/reg-core.c:301:
+	struct regulator_dev *rdev = to_rdev(dev);
+	return sprintf(buf, "%d\n", rdev->use_count);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#492: FILE: drivers/regulator/reg-core.c:336:
+	struct regulator_dev *rdev = to_rdev(dev);
+	kfree(rdev);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#550: FILE: drivers/regulator/reg-core.c:382:
+	if (err < 0 || !rdev->desc->ops->get_optimum_mode ||
+	    !rdev->desc->ops->get_voltage || !rdev->desc->ops->set_mode);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <input_uV>
#565: FILE: drivers/regulator/reg-core.c:393:
+		input_uV = rdev->constraints->input_uV;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#569: FILE: drivers/regulator/reg-core.c:396:
+	list_for_each_entry(sibling, &rdev->consumer_list, list)
 	    current_uA += sibling->uA_load;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#603: FILE: drivers/regulator/reg-core.c:441:
+	printk(KERN_INFO "regulator: %s: %s\n", rdev->desc->name, buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#637: FILE: drivers/regulator/reg-core.c:478:
+			printk(KERN_WARNING "%s: could not add regulator_dev"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/regulator/reg-core.c:485:
+		err = sysfs_create_link(&rdev->dev.kobj, &dev->kobj,
 			dev->kobj.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: drivers/regulator/reg-core.c:602:
+		if (rdev->constraints &&
+			(rdev->constraints->valid_ops_mask &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: drivers/regulator/reg-core.c:673:
+		if (rdev->constraints &&
+			(rdev->constraints->valid_ops_mask &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: drivers/regulator/reg-core.c:1046:
+struct regulator_dev *regulator_register(struct regulator_desc *regulator_desc,
 					  void *reg_data)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rdev)...) over kzalloc(sizeof(struct regulator_dev)...)
#1181: FILE: drivers/regulator/reg-core.c:1062:
+	rdev = kzalloc(sizeof(struct regulator_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rdev"
#1182: FILE: drivers/regulator/reg-core.c:1063:
+	if (rdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rdev"
#1238: FILE: drivers/regulator/reg-core.c:1103:
+	if (rdev == NULL)

WARNING:SPACING: Unnecessary space before function pointer arguments
#1443: FILE: include/linux/regulator/regulator-drv.h:32:
+	int (*set_voltage) (struct regulator_dev *, int uV);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1443: FILE: include/linux/regulator/regulator-drv.h:32:
+	int (*set_voltage) (struct regulator_dev *, int uV);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1444: FILE: include/linux/regulator/regulator-drv.h:33:
+	int (*get_voltage) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1444: FILE: include/linux/regulator/regulator-drv.h:33:
+	int (*get_voltage) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1449: FILE: include/linux/regulator/regulator-drv.h:36:
+	int (*set_current) (struct regulator_dev *, int uA);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1449: FILE: include/linux/regulator/regulator-drv.h:36:
+	int (*set_current) (struct regulator_dev *, int uA);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1450: FILE: include/linux/regulator/regulator-drv.h:37:
+	int (*get_current) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1450: FILE: include/linux/regulator/regulator-drv.h:37:
+	int (*get_current) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1456: FILE: include/linux/regulator/regulator-drv.h:40:
+	int (*enable) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1456: FILE: include/linux/regulator/regulator-drv.h:40:
+	int (*enable) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1457: FILE: include/linux/regulator/regulator-drv.h:41:
+	int (*disable) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1457: FILE: include/linux/regulator/regulator-drv.h:41:
+	int (*disable) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1458: FILE: include/linux/regulator/regulator-drv.h:42:
+	int (*is_enabled) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1458: FILE: include/linux/regulator/regulator-drv.h:42:
+	int (*is_enabled) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1463: FILE: include/linux/regulator/regulator-drv.h:45:
+	int (*set_mode) (struct regulator_dev *, unsigned int mode);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1463: FILE: include/linux/regulator/regulator-drv.h:45:
+	int (*set_mode) (struct regulator_dev *, unsigned int mode);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1464: FILE: include/linux/regulator/regulator-drv.h:46:
+	unsigned int (*get_mode) (struct regulator_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1464: FILE: include/linux/regulator/regulator-drv.h:46:
+	unsigned int (*get_mode) (struct regulator_dev *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1468: FILE: include/linux/regulator/regulator-drv.h:49:
+	unsigned int (*get_optimum_mode) (struct regulator_dev *, int input_uV,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#1468: FILE: include/linux/regulator/regulator-drv.h:49:
+	unsigned int (*get_optimum_mode) (struct regulator_dev *, int input_uV,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1478: FILE: include/linux/regulator/regulator-drv.h:76:
+struct regulator_dev *regulator_register(struct regulator_desc *regulator_desc,
 					  void *reg_data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 28 warnings, 15 checks, 1323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
