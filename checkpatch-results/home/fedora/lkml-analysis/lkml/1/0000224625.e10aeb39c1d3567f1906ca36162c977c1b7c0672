WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/staging/Kconfig:26:
+config USB_RSPI
+	tristate "Princeton Instruments USB camera support"
+	depends on USB
+	help
+	  This driver is for the Princeton Instruments USB camera device.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/staging/rspiusb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: drivers/staging/rspiusb.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: drivers/staging/rspiusb.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#120: FILE: drivers/staging/rspiusb.c:42:
+#define dbg(format, arg...) do { if (debug) printk(KERN_DEBUG __FILE__ ": " format "\n" , ## arg); } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#120: FILE: drivers/staging/rspiusb.c:42:
+#define dbg(format, arg...) do { if (debug) printk(KERN_DEBUG __FILE__ ": " format "\n" , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#120: FILE: drivers/staging/rspiusb.c:42:
+#define dbg(format, arg...) do { if (debug) printk(KERN_DEBUG __FILE__ ": " format "\n" , ## arg); } while (0)
                                                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <PixelUrb>
#149: FILE: drivers/staging/rspiusb.c:71:
+	struct urb ***PixelUrb;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <frameIdx>
#150: FILE: drivers/staging/rspiusb.c:72:
+	int frameIdx;

CHECK:CAMELCASE: Avoid CamelCase: <urbIdx>
#151: FILE: drivers/staging/rspiusb.c:73:
+	int urbIdx;

CHECK:CAMELCASE: Avoid CamelCase: <maplist_numPagesMapped>
#152: FILE: drivers/staging/rspiusb.c:74:
+	unsigned int *maplist_numPagesMapped;

CHECK:CAMELCASE: Avoid CamelCase: <userBufMapped>
#155: FILE: drivers/staging/rspiusb.c:77:
+	int userBufMapped;	/* has the user buffer been mapped? */

CHECK:CAMELCASE: Avoid CamelCase: <sgEntries>
#157: FILE: drivers/staging/rspiusb.c:79:
+	unsigned int *sgEntries;

CHECK:CAMELCASE: Avoid CamelCase: <gotPixelData>
#159: FILE: drivers/staging/rspiusb.c:81:
+	int gotPixelData;

CHECK:CAMELCASE: Avoid CamelCase: <pendingWrite>
#160: FILE: drivers/staging/rspiusb.c:82:
+	int pendingWrite;

CHECK:CAMELCASE: Avoid CamelCase: <pendedPixelUrbs>
#161: FILE: drivers/staging/rspiusb.c:83:
+	char **pendedPixelUrbs;

CHECK:CAMELCASE: Avoid CamelCase: <frameSize>
#165: FILE: drivers/staging/rspiusb.c:87:
+	unsigned long frameSize;

CHECK:CAMELCASE: Avoid CamelCase: <hEP>
#168: FILE: drivers/staging/rspiusb.c:90:
+	unsigned int hEP[8];

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#170: FILE: drivers/staging/rspiusb.c:92:
+};
+#define to_pi_dev(d) container_of( d, struct device_extension, kref )

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#170: FILE: drivers/staging/rspiusb.c:92:
+#define to_pi_dev(d) container_of( d, struct device_extension, kref )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#170: FILE: drivers/staging/rspiusb.c:92:
+#define to_pi_dev(d) container_of( d, struct device_extension, kref )

CHECK:CAMELCASE: Avoid CamelCase: <MapUserBuffer>
#172: FILE: drivers/staging/rspiusb.c:94:
+static int MapUserBuffer(struct ioctl_struct *, struct device_extension *);

CHECK:CAMELCASE: Avoid CamelCase: <UnMapUserBuffer>
#173: FILE: drivers/staging/rspiusb.c:95:
+static int UnMapUserBuffer(struct device_extension *);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#188: FILE: drivers/staging/rspiusb.c:110:
+static int lastErr = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <lastErr>
#188: FILE: drivers/staging/rspiusb.c:110:
+static int lastErr = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#189: FILE: drivers/staging/rspiusb.c:111:
+static int errCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <errCnt>
#189: FILE: drivers/staging/rspiusb.c:111:
+static int errCnt = 0;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#195: FILE: drivers/staging/rspiusb.c:117:
+	dev_dbg(&pdx->udev->dev, "%s\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#211: FILE: drivers/staging/rspiusb.c:133:
+		printk(KERN_ERR "%s - error, can't find device for minor %d\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#224: FILE: drivers/staging/rspiusb.c:146:
+	pdx->frameIdx = pdx->urbIdx = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:INDENTED_LABEL: labels should not be indented
#242: FILE: drivers/staging/rspiusb.c:164:
+      exit_no_device:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdx"
#253: FILE: drivers/staging/rspiusb.c:175:
+	if (pdx == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <dummyCtlBuf>
#269: FILE: drivers/staging/rspiusb.c:191:
+	char dummyCtlBuf[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

CHECK:CAMELCASE: Avoid CamelCase: <devRB>
#270: FILE: drivers/staging/rspiusb.c:192:
+	unsigned long devRB = 0;

CHECK:CAMELCASE: Avoid CamelCase: <uBuf>
#275: FILE: drivers/staging/rspiusb.c:197:
+	unsigned char *uBuf;

CHECK:CAMELCASE: Avoid CamelCase: <controlData>
#277: FILE: drivers/staging/rspiusb.c:199:
+	unsigned short controlData = 0;

CHECK:CAMELCASE: Avoid CamelCase: <pData>
#314: FILE: drivers/staging/rspiusb.c:236:
+		controlData = ctrl.pData[0];

WARNING:LONG_LINE: line length of 156 exceeds 100 columns
#317: FILE: drivers/staging/rspiusb.c:239:
+		retval = usb_control_msg(pdx->udev, usb_sndctrlpipe(pdx->udev, 0), ctrl.cmd, (USB_DIR_OUT | USB_TYPE_VENDOR),	/* | USB_RECIP_ENDPOINT), */

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#322: FILE: drivers/staging/rspiusb.c:244:
+		return retval;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#325: FILE: drivers/staging/rspiusb.c:247:
+		return ((pdx->udev->speed == USB_SPEED_HIGH) ? 1 : 0);
+		break;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#333: FILE: drivers/staging/rspiusb.c:255:
+		piusb_output(&ctrl, ctrl.pData /*uBuf */ , ctrl.numbytes, pdx);
 		                                         ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#335: FILE: drivers/staging/rspiusb.c:257:
+		return ctrl.numbytes;
+		break;

CHECK:SPACING: No space is necessary after a cast
#340: FILE: drivers/staging/rspiusb.c:262:
+		return MapUserBuffer((struct ioctl_struct *) & ctrl, pdx);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#340: FILE: drivers/staging/rspiusb.c:262:
+		return MapUserBuffer((struct ioctl_struct *) & ctrl, pdx);
 		                                             ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#341: FILE: drivers/staging/rspiusb.c:263:
+		return MapUserBuffer((struct ioctl_struct *) & ctrl, pdx);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#345: FILE: drivers/staging/rspiusb.c:267:
+		return 0;
+		break;

CHECK:CAMELCASE: Avoid CamelCase: <numToRead>
#353: FILE: drivers/staging/rspiusb.c:275:
+				unsigned int numToRead = 0;

CHECK:CAMELCASE: Avoid CamelCase: <totalRead>
#354: FILE: drivers/staging/rspiusb.c:276:
+				unsigned int totalRead = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: drivers/staging/rspiusb.c:277:
+				unsigned int totalRead = 0;
+				uBuf = kmalloc(ctrl.numbytes, GFP_KERNEL);

WARNING:LONG_LINE: line length of 216 exceeds 100 columns
#367: FILE: drivers/staging/rspiusb.c:289:
+					i = usb_bulk_msg(pdx->udev, pdx->hEP[ctrl.endpoint], (uBuf + totalRead), (numToRead > 64) ? 64 : numToRead, &numbytes, HZ * 10);	//EP0 can only handle 64 bytes at a time

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#369: FILE: drivers/staging/rspiusb.c:291:
+						dbg("CMD = %s, Address = 0x%02X", ((uBuf[3] == 0x02) ? "WRITE" : "READ"), uBuf[1]);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#370: FILE: drivers/staging/rspiusb.c:292:
+						dbg("Number of bytes Attempted to read = %d", (int)ctrl.numbytes);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#374: FILE: drivers/staging/rspiusb.c:296:
+						return -1;
+					} else {

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#381: FILE: drivers/staging/rspiusb.c:303:
+				}
+				while (numToRead);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#387: FILE: drivers/staging/rspiusb.c:309:
+				    ((struct ioctl_struct *) arg, &ctrl,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#392: FILE: drivers/staging/rspiusb.c:314:
+				return ctrl.numbytes;
+			} else	//ST133 Pixel Data

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#392: FILE: drivers/staging/rspiusb.c:314:
+			} else	//ST133 Pixel Data
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#392: FILE: drivers/staging/rspiusb.c:314:
+			} else	//ST133 Pixel Data

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#394: FILE: drivers/staging/rspiusb.c:316:
+				if (!pdx->gotPixelData)
[...]
+				else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#396: FILE: drivers/staging/rspiusb.c:318:
+					return 0;
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#396: FILE: drivers/staging/rspiusb.c:318:
+				else {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#402: FILE: drivers/staging/rspiusb.c:324:
+					for (i = 0; i < pdx->maplist_numPagesMapped[pdx->active_frame]; i++)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#403: FILE: drivers/staging/rspiusb.c:325:
+						SetPageDirty(pdx->sgl[pdx->active_frame][i].page_link);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#429: FILE: drivers/staging/rspiusb.c:351:
+				return -1;
+			} else {

CHECK:SPACING: No space is necessary after a cast
#433: FILE: drivers/staging/rspiusb.c:355:
+				    ((struct ioctl_struct *) arg, &ctrl,

CHECK:BRACES: braces {} should be used on all arms of this statement
#443: FILE: drivers/staging/rspiusb.c:365:
+			if (!pdx->gotPixelData)
[...]
+			else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#445: FILE: drivers/staging/rspiusb.c:367:
+				return 0;
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#445: FILE: drivers/staging/rspiusb.c:367:
+			else {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'pdx->active_frame'
#452: FILE: drivers/staging/rspiusb.c:374:
+				     pdx->maplist_numPagesMapped[pdx->
+								 active_frame];

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CAMELCASE: Avoid CamelCase: <numFrames>
#470: FILE: drivers/staging/rspiusb.c:392:
+		pdx->num_frames = ctrl.numFrames;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#495: FILE: drivers/staging/rspiusb.c:417:
+
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#517: FILE: drivers/staging/rspiusb.c:439:
+int piusb_output(struct ioctl_struct * io, unsigned char *uBuf, int len,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "urb"
#525: FILE: drivers/staging/rspiusb.c:447:
+	if (urb != NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <epAddr>
#552: FILE: drivers/staging/rspiusb.c:474:
+	unsigned int epAddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#553: FILE: drivers/staging/rspiusb.c:475:
+	unsigned int epAddr;
+	for (k = 0; k < pdx->num_frames; k++) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#566: FILE: drivers/staging/rspiusb.c:488:
+		if (pdx->iama == PIXIS_PID)	//if so, which EP should we map this frame to
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#568: FILE: drivers/staging/rspiusb.c:490:
+			if (k % 2)	//check to see if this should use EP4(PONG)
+			{

CHECK:BRACES: braces {} should be used on all arms of this statement
#568: FILE: drivers/staging/rspiusb.c:490:
+			if (k % 2)	//check to see if this should use EP4(PONG)
[...]
+			} else {
[...]

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#574: FILE: drivers/staging/rspiusb.c:496:
+		} else		//ST133 only has 1 endpoint for Pixel data transfer
+		{

CHECK:BRACES: Unbalanced braces around else statement
#574: FILE: drivers/staging/rspiusb.c:496:
+		} else		//ST133 only has 1 endpoint for Pixel data transfer

WARNING:BRACES: braces {} are not necessary for single statement blocks
#580: FILE: drivers/staging/rspiusb.c:502:
+		for (i = 0; i < pdx->maplist_numPagesMapped[k]; i++) {
+			page_cache_release(pdx->sgl[k][i].page_link);
+		}

CHECK:CAMELCASE: Avoid CamelCase: <piusb_readPIXEL_callback>
#603: FILE: drivers/staging/rspiusb.c:525:
+static void piusb_readPIXEL_callback(struct urb *urb)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#646: FILE: drivers/staging/rspiusb.c:568:
+/* MapUserBuffer(
+	inputs:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#652: FILE: drivers/staging/rspiusb.c:574:
+	MapUserBuffer maps a buffer passed down through an ioctl.  The user buffer is Page Aligned by the app

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#653: FILE: drivers/staging/rspiusb.c:575:
+	and then passed down.  The function get_free_pages(...) does the actual mapping of the buffer from user space to

WARNING:LONG_LINE_COMMENT: line length of 128 exceeds 100 columns
#654: FILE: drivers/staging/rspiusb.c:576:
+	kernel space.  From there a scatterlist is created from all the pages.  The next function called is to usb_buffer_map_sg

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#655: FILE: drivers/staging/rspiusb.c:577:
+	which allocated DMA addresses for each page, even coalescing them if possible.  The DMA address is placed in the scatterlist

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#656: FILE: drivers/staging/rspiusb.c:578:
+	structure.  The function returns the number of DMA addresses.  This may or may not be equal to the number of pages that

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#659: FILE: drivers/staging/rspiusb.c:581:
+//int MapUserBuffer( unsigned long uaddr, unsigned long numbytes, unsigned long frameInfo, struct device_extension *pdx )

CHECK:CAMELCASE: Avoid CamelCase: <frameInfo>
#664: FILE: drivers/staging/rspiusb.c:586:
+	int frameInfo;		//which frame we're mapping

CHECK:CAMELCASE: Avoid CamelCase: <numPagesRequired>
#671: FILE: drivers/staging/rspiusb.c:593:
+	int numPagesRequired;

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: drivers/staging/rspiusb.c:594:
+	int numPagesRequired;
+	frameInfo = io->numFrames;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#676: FILE: drivers/staging/rspiusb.c:598:
+	if (pdx->iama == PIXIS_PID)	//if so, which EP should we map this frame to
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#678: FILE: drivers/staging/rspiusb.c:600:
+		if (frameInfo % 2)	//check to see if this should use EP4(PONG)
+		{

CHECK:BRACES: braces {} should be used on all arms of this statement
#678: FILE: drivers/staging/rspiusb.c:600:
+		if (frameInfo % 2)	//check to see if this should use EP4(PONG)
[...]
+		} else {
[...]

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#686: FILE: drivers/staging/rspiusb.c:608:
+	} else			//ST133 only has 1 endpoint for Pixel data transfer
+	{

CHECK:BRACES: Unbalanced braces around else statement
#686: FILE: drivers/staging/rspiusb.c:608:
+	} else			//ST133 only has 1 endpoint for Pixel data transfer

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#705: FILE: drivers/staging/rspiusb.c:627:
+	pdx->maplist_numPagesMapped[frameInfo] = get_user_pages(current, current->mm, (uaddr & PAGE_MASK), numPagesRequired, WRITE, 0,	//Don't Force

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#750: FILE: drivers/staging/rspiusb.c:672:
+	pdx->PixelUrb[frameInfo] =
+	    kmalloc(pdx->sgEntries[frameInfo] * sizeof(struct urb *),
+		    GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#758: FILE: drivers/staging/rspiusb.c:680:
+		pdx->PixelUrb[frameInfo][i] = usb_alloc_urb(0, GFP_KERNEL);	//0 because we're using BULK transfers

CHECK:SPACING: No space is necessary after a cast
#762: FILE: drivers/staging/rspiusb.c:684:
+				  (dma_addr_t *) sg_dma_address(&pdx->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'pdx->sgl[frameInfo]'
#763: FILE: drivers/staging/rspiusb.c:685:
+				  (dma_addr_t *) sg_dma_address(&pdx->
+								sgl[frameInfo]

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#772: FILE: drivers/staging/rspiusb.c:694:
+	pdx->PixelUrb[frameInfo][--i]->transfer_flags &= ~URB_NO_INTERRUPT;	//only interrupt when last URB completes

CHECK:BRACES: braces {} should be used on all arms of this statement
#779: FILE: drivers/staging/rspiusb.c:701:
+		if (err) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#783: FILE: drivers/staging/rspiusb.c:705:
+			return err;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#783: FILE: drivers/staging/rspiusb.c:705:
+		} else

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#784: FILE: drivers/staging/rspiusb.c:706:
+			pdx->pendedPixelUrbs[frameInfo][i] = 1;;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#789: FILE: drivers/staging/rspiusb.c:711:
+static struct file_operations piusb_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pdx)...) over kzalloc(sizeof(struct device_extension)...)
#819: FILE: drivers/staging/rspiusb.c:741:
+	pdx = kzalloc(sizeof(struct device_extension), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdx"
#820: FILE: drivers/staging/rspiusb.c:742:
+	if (pdx == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#821: FILE: drivers/staging/rspiusb.c:743:
+	if (pdx == NULL) {
+		dev_err(&interface->dev, "Out of memory\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdx->udev->descriptor.idVendor != VENDOR_ID'
#830: FILE: drivers/staging/rspiusb.c:752:
+	if ((pdx->udev->descriptor.idVendor != VENDOR_ID)
+	    || ((pdx->udev->descriptor.idProduct != PIXIS_PID)
+		&& (pdx->udev->descriptor.idProduct != ST133_PID))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdx->udev->descriptor.idProduct != PIXIS_PID'
#830: FILE: drivers/staging/rspiusb.c:752:
+	if ((pdx->udev->descriptor.idVendor != VENDOR_ID)
+	    || ((pdx->udev->descriptor.idProduct != PIXIS_PID)
+		&& (pdx->udev->descriptor.idProduct != ST133_PID))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdx->udev->descriptor.idProduct != ST133_PID'
#830: FILE: drivers/staging/rspiusb.c:752:
+	if ((pdx->udev->descriptor.idVendor != VENDOR_ID)
+	    || ((pdx->udev->descriptor.idProduct != PIXIS_PID)
+		&& (pdx->udev->descriptor.idProduct != ST133_PID))) {

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#830: FILE: drivers/staging/rspiusb.c:752:
+	if ((pdx->udev->descriptor.idVendor != VENDOR_ID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#831: FILE: drivers/staging/rspiusb.c:753:
+	if ((pdx->udev->descriptor.idVendor != VENDOR_ID)
+	    || ((pdx->udev->descriptor.idProduct != PIXIS_PID)

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#831: FILE: drivers/staging/rspiusb.c:753:
+	    || ((pdx->udev->descriptor.idProduct != PIXIS_PID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#832: FILE: drivers/staging/rspiusb.c:754:
+	    || ((pdx->udev->descriptor.idProduct != PIXIS_PID)
+		&& (pdx->udev->descriptor.idProduct != ST133_PID))) {

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#848: FILE: drivers/staging/rspiusb.c:770:
+		    iface_desc->desc.bNumEndpoints);

CHECK:CAMELCASE: Avoid CamelCase: <bDescriptorType>
#854: FILE: drivers/staging/rspiusb.c:776:
+			    endpoint->bDescriptorType);

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#856: FILE: drivers/staging/rspiusb.c:778:
+			    endpoint->bEndpointAddress);

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#858: FILE: drivers/staging/rspiusb.c:780:
+			    endpoint->bmAttributes);

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#860: FILE: drivers/staging/rspiusb.c:782:
+			    endpoint->wMaxPacketSize);

WARNING:INDENTED_LABEL: labels should not be indented
#889: FILE: drivers/staging/rspiusb.c:811:
+      error:

WARNING:LINE_SPACING: Missing a blank line after declarations
#910: FILE: drivers/staging/rspiusb.c:832:
+	int minor = interface->minor;
+	lock_kernel();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#938: FILE: drivers/staging/rspiusb.c:860:
+		printk(KERN_ERR KBUILD_MODNAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#942: FILE: drivers/staging/rspiusb.c:864:
+	printk(KERN_INFO KBUILD_MODNAME ":%s: %s\n", DRIVER_DESC,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#969: FILE: drivers/staging/rspiusb.h:1:
+#ifndef __RSPIUSB_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 49 warnings, 61 checks, 947 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
