WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> > The attached patch addresses this issue by changing page_check_address()

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#117: FILE: include/linux/rmap.h:148:
+	return (TestClearPageReferenced(page)?REFERENCED:NOT_REFERENCED);
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#117: FILE: include/linux/rmap.h:148:
+	return (TestClearPageReferenced(page)?REFERENCED:NOT_REFERENCED);
 	                                                ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#117: FILE: include/linux/rmap.h:148:
+	return (TestClearPageReferenced(page)?REFERENCED:NOT_REFERENCED);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: Unbalanced braces around else statement
#170: FILE: mm/rmap.c:306:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#212: FILE: mm/rmap.c:403:
+	return (referenced?REFERENCED:NOT_REFERENCED);
 	                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#212: FILE: mm/rmap.c:403:
+	return (referenced?REFERENCED:NOT_REFERENCED);
 	                             ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#212: FILE: mm/rmap.c:403:
+	return (referenced?REFERENCED:NOT_REFERENCED);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: mm/rmap.c:432:
+		ret = page_referenced_one(page, vma,
+						  &mapcount, vm_flags, trylock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: mm/rmap.c:437:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#254: FILE: mm/rmap.c:443:
+	return (locked?LOCK_CONTENDED:referenced?REFERENCED:NOT_REFERENCED);
 	              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#254: FILE: mm/rmap.c:443:
+	return (locked?LOCK_CONTENDED:referenced?REFERENCED:NOT_REFERENCED);
 	                             ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#254: FILE: mm/rmap.c:443:
+	return (locked?LOCK_CONTENDED:referenced?REFERENCED:NOT_REFERENCED);
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#254: FILE: mm/rmap.c:443:
+	return (locked?LOCK_CONTENDED:referenced?REFERENCED:NOT_REFERENCED);
 	                                                   ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#254: FILE: mm/rmap.c:443:
+	return (locked?LOCK_CONTENDED:referenced?REFERENCED:NOT_REFERENCED);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#270: FILE: mm/rmap.c:508:
+	return (referenced?REFERENCED:NOT_REFERENCED);
 	                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#270: FILE: mm/rmap.c:508:
+	return (referenced?REFERENCED:NOT_REFERENCED);
 	                             ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#270: FILE: mm/rmap.c:508:
+	return (referenced?REFERENCED:NOT_REFERENCED);

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: mm/rmap.c:538:
+^I^I^I^I^I^I     ^I^Ivm_flags, trylock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: mm/rmap.c:538:
+^I^I^I^I^I^I     ^I^Ivm_flags, trylock);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: mm/rmap.c:538:
+			ret = page_referenced_anon(page, mem_cont,
+						     		vm_flags, trylock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: mm/rmap.c:541:
+			ret = page_referenced_file(page, mem_cont,
 								vm_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: mm/rmap.c:547:
+				ret = page_referenced_file(page,
 							mem_cont, vm_flags);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#326: FILE: mm/rmap.c:558:
+	return (ret == LOCK_CONTENDED?LOCK_CONTENDED:(referenced?REFERENCED:NOT_REFERENCED));
 	                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#326: FILE: mm/rmap.c:558:
+	return (ret == LOCK_CONTENDED?LOCK_CONTENDED:(referenced?REFERENCED:NOT_REFERENCED));
 	                                            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#326: FILE: mm/rmap.c:558:
+	return (ret == LOCK_CONTENDED?LOCK_CONTENDED:(referenced?REFERENCED:NOT_REFERENCED));
 	                                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#326: FILE: mm/rmap.c:558:
+	return (ret == LOCK_CONTENDED?LOCK_CONTENDED:(referenced?REFERENCED:NOT_REFERENCED));
 	                                                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'referenced == REFERENCED'
#374: FILE: mm/vmscan.c:689:
+			if (sc->order <= PAGE_ALLOC_COSTLY_ORDER && (referenced == REFERENCED))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: mm/vmscan.c:1358:
+^I^Iif (page_mapping_inuse(page)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: mm/vmscan.c:1359:
+^I^I   $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#406: FILE: mm/vmscan.c:1359:
+		if (page_mapping_inuse(page)) { 
+		   

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: mm/vmscan.c:1361:
+			referenced = page_referenced(page, 0, sc->mem_cgroup,
+						&vm_flags, priority<DEF_PRIORITY-2?0:1);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#408: FILE: mm/vmscan.c:1361:
+						&vm_flags, priority<DEF_PRIORITY-2?0:1);
 						                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#408: FILE: mm/vmscan.c:1361:
+						&vm_flags, priority<DEF_PRIORITY-2?0:1);
 						                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#408: FILE: mm/vmscan.c:1361:
+						&vm_flags, priority<DEF_PRIORITY-2?0:1);
 						                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#408: FILE: mm/vmscan.c:1361:
+						&vm_flags, priority<DEF_PRIORITY-2?0:1);
 						                                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'referenced == LOCK_CONTENDED'
#421: FILE: mm/vmscan.c:1374:
+				if (((vm_flags & VM_EXEC) && page_is_file_cache(page)) ||
+				     (referenced == LOCK_CONTENDED)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: mm/vmscan.c:1375:
+				if (((vm_flags & VM_EXEC) && page_is_file_cache(page)) ||
+				     (referenced == LOCK_CONTENDED)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 2 warnings, 27 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
