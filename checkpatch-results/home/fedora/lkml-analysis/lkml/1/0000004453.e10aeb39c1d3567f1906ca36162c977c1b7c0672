CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/klist.h:67:
+extern struct klist_node *klist_prev(struct klist_iter *i);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: drivers/base/core.c:1732:
+	struct kobject *kobj = container_of(node, struct kobject, entry);
+	return container_of(kobj, struct device, kobj);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: drivers/base/sys.c:166:
+	struct klist_node *node = klist_next(iter);
+	return node

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: drivers/base/sys.c:174:
+	struct klist_node *node = klist_prev(iter);
+	return node

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: drivers/base/sys.c:182:
+	struct klist_node *node = klist_prev(iter);
+	return node

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: drivers/base/sys.c:447:
+			list_for_each_entry (drv, &cls->drivers, entry) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#393: FILE: lib/klist.c:383:
+	if (last) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#397: FILE: lib/klist.c:387:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: lib/kobject.c:740:
+	struct klist_node *node = klist_next(iter);
+	return node

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004453.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 3 checks, 361 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004453.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
