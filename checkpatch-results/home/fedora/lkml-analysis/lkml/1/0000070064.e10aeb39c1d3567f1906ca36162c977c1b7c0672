WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git perfcounters-core-for-linus

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#192: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: arch/x86/kernel/cpu/perf_counter.c:1520:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#460: FILE: arch/x86/kernel/process.c:369:
+	trace_power_start(POWER_CSTATE, (ax>>4)+1);
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#460: FILE: arch/x86/kernel/process.c:369:
+	trace_power_start(POWER_CSTATE, (ax>>4)+1);
 	                                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#614: FILE: include/linux/perf_counter.h:758:
+extern void perf_output_sample(struct perf_output_handle *handle,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#618: FILE: include/linux/perf_counter.h:762:
+extern void perf_prepare_sample(struct perf_event_header *header,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#636: FILE: include/linux/perf_counter.h:819:
+extern int perf_output_begin(struct perf_output_handle *handle,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#639: FILE: include/linux/perf_counter.h:822:
+extern void perf_output_end(struct perf_output_handle *handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#640: FILE: include/linux/perf_counter.h:823:
+extern void perf_output_copy(struct perf_output_handle *handle,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#680: FILE: include/trace/events/power.h:1:
+#undef TRACE_SYSTEM

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#698: FILE: include/trace/events/power.h:19:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: include/trace/events/power.h:22:
+TRACE_EVENT(power_start,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#706: FILE: include/trace/events/power.h:27:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#707: FILE: include/trace/events/power.h:28:
+		__field(	u64,		type		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#707: FILE: include/trace/events/power.h:28:
+		__field(	u64,		type		)

ERROR:SPACING: space prohibited after that open parenthesis '('
#708: FILE: include/trace/events/power.h:29:
+		__field(	u64,		state		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#708: FILE: include/trace/events/power.h:29:
+		__field(	u64,		state		)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#711: FILE: include/trace/events/power.h:32:
+	TP_fast_assign(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: include/trace/events/power.h:41:
+TRACE_EVENT(power_end,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#725: FILE: include/trace/events/power.h:46:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#726: FILE: include/trace/events/power.h:47:
+		__field(	u64,		dummy		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#726: FILE: include/trace/events/power.h:47:
+		__field(	u64,		dummy		)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#729: FILE: include/trace/events/power.h:50:
+	TP_fast_assign(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#737: FILE: include/trace/events/power.h:58:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: include/trace/events/power.h:60:
+TRACE_EVENT(power_frequency,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#744: FILE: include/trace/events/power.h:65:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#745: FILE: include/trace/events/power.h:66:
+		__field(	u64,		type		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#745: FILE: include/trace/events/power.h:66:
+		__field(	u64,		type		)

ERROR:SPACING: space prohibited after that open parenthesis '('
#746: FILE: include/trace/events/power.h:67:
+		__field(	u64,		state		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#746: FILE: include/trace/events/power.h:67:
+		__field(	u64,		state		)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#749: FILE: include/trace/events/power.h:70:
+	TP_fast_assign(

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#754: FILE: include/trace/events/power.h:75:
+	TP_printk("type=%lu state=%lu", (unsigned long)__entry->type, (unsigned long) __entry->state)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#754: FILE: include/trace/events/power.h:75:
+	TP_printk("type=%lu state=%lu", (unsigned long)__entry->type, (unsigned long) __entry->state)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: include/trace/events/sched.h:387:
+TRACE_EVENT(sched_stat_runtime,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#778: FILE: include/trace/events/sched.h:392:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#779: FILE: include/trace/events/sched.h:393:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#779: FILE: include/trace/events/sched.h:393:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited after that open parenthesis '('
#780: FILE: include/trace/events/sched.h:394:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#780: FILE: include/trace/events/sched.h:394:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited after that open parenthesis '('
#781: FILE: include/trace/events/sched.h:395:
+		__field( u64,	runtime			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#781: FILE: include/trace/events/sched.h:395:
+		__field( u64,	runtime			)

ERROR:SPACING: space prohibited after that open parenthesis '('
#782: FILE: include/trace/events/sched.h:396:
+		__field( u64,	vruntime			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#782: FILE: include/trace/events/sched.h:396:
+		__field( u64,	vruntime			)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#785: FILE: include/trace/events/sched.h:399:
+	TP_fast_assign(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#791: FILE: include/trace/events/sched.h:405:
+	TP_perf_assign(

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#795: FILE: include/trace/events/sched.h:409:
+	TP_printk("task: %s:%d runtime: %Lu [ns], vruntime: %Lu [ns]",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: include/trace/events/sched.h:410:
+	TP_printk("task: %s:%d runtime: %Lu [ns], vruntime: %Lu [ns]",
+			__entry->comm, __entry->pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: kernel/perf_counter.c:2181:
+		data->watermark = min_t(long, PAGE_SIZE * nr_pages,
+				      counter->attr.wakeup_watermark);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'locked > lock_limit'
#828: FILE: kernel/perf_counter.c:2325:
+	if ((locked > lock_limit) && perf_paranoid_tracepoint_raw() &&
+		!capable(CAP_IPC_LOCK)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#829: FILE: kernel/perf_counter.c:2326:
+	if ((locked > lock_limit) && perf_paranoid_tracepoint_raw() &&
+		!capable(CAP_IPC_LOCK)) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#913: FILE: kernel/perf_counter.c:2710:
+		smp_rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#1047: FILE: kernel/perf_counter.c:2906:
+			u64 nr = 0;
+			perf_output_put(handle, nr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1197: FILE: kernel/perf_counter.c:3010:
+		WARN_ON_ONCE(size & (sizeof(u64)-1));
 		                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "counter->pmu->unthrottle"
#1276: FILE: kernel/perf_counter.c:3523:
+	throttle = (throttle && counter->pmu->unthrottle != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1446: FILE: kernel/perf_counter.c:3849:
+	if ((counter->attr.exclude_kernel || !regs) &&
 			!counter->attr.exclude_user)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1746: FILE: kernel/trace/power-traces.c:1:
+/*

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2195: FILE: tools/perf/Documentation/perf-sched.txt:30:
+  of the workload as it occured when it was recorded - and can repeat
                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2321: FILE: tools/perf/builtin-record.c:51:
+static int			multiplex			= 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2357: FILE: tools/perf/builtin-record.c:490:
+		mmap_array[nr_cpu][counter].mask = mmap_pages*page_size - 1;
 		                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2358: FILE: tools/perf/builtin-record.c:491:
+		mmap_array[nr_cpu][counter].base = mmap(NULL, (mmap_pages+1)*page_size,
 		                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2358: FILE: tools/perf/builtin-record.c:491:
+		mmap_array[nr_cpu][counter].base = mmap(NULL, (mmap_pages+1)*page_size,
 		                                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2359: FILE: tools/perf/builtin-record.c:492:
+		mmap_array[nr_cpu][counter].base = mmap(NULL, (mmap_pages+1)*page_size,
+				PROT_READ|PROT_WRITE, MAP_SHARED, fd[nr_cpu][counter], 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2359: FILE: tools/perf/builtin-record.c:492:
+				PROT_READ|PROT_WRITE, MAP_SHARED, fd[nr_cpu][counter], 0);
 				         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2423: FILE: tools/perf/builtin-sched.c:1:
+#include "builtin.h"

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#2444: FILE: tools/perf/builtin-sched.c:22:
+static char			const *input_name = "perf.data";

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2449: FILE: tools/perf/builtin-sched.c:27:
+static unsigned long		total_comm = 0;

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#2457: FILE: tools/perf/builtin-sched.c:35:
+static char			default_sort_order[] = "avg, max, switch, runtime";

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2463: FILE: tools/perf/builtin-sched.c:41:
+#define BUG_ON(x)		assert(!(x))

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2584: FILE: tools/perf/builtin-sched.c:162:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2622: FILE: tools/perf/builtin-sched.c:200:
+		delta = T1-T0;
 		          ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#2627: FILE: tools/perf/builtin-sched.c:205:
+	printf("run measurement overhead: %Ld nsecs\n", min_delta);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2639: FILE: tools/perf/builtin-sched.c:217:
+		delta = T1-T0;
 		          ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#2645: FILE: tools/perf/builtin-sched.c:223:
+	printf("sleep measurement overhead: %Ld nsecs\n", min_delta);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2661: FILE: tools/perf/builtin-sched.c:239:
+	BUG_ON(!task->atoms);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2742: FILE: tools/perf/builtin-sched.c:320:
+	BUG_ON(pid >= MAX_PID);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2761: FILE: tools/perf/builtin-sched.c:339:
+	tasks = realloc(tasks, nr_tasks*sizeof(struct task_task *));
 	                               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2762: FILE: tools/perf/builtin-sched.c:340:
+	BUG_ON(!tasks);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2771: FILE: tools/perf/builtin-sched.c:349:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2780: FILE: tools/perf/builtin-sched.c:358:
+		printf("task %6ld (%20s:%10ld), nr_events: %ld\n",
+			task->nr, task->comm, task->pid, task->nr_events);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2809: FILE: tools/perf/builtin-sched.c:387:
+	switch (atom->type) {
+		case SCHED_EVENT_RUN:
[...]
+		case SCHED_EVENT_SLEEP:
[...]
+		case SCHED_EVENT_WAKEUP:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2816: FILE: tools/perf/builtin-sched.c:394:
+			BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2821: FILE: tools/perf/builtin-sched.c:399:
+			BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2824: FILE: tools/perf/builtin-sched.c:402:
+			BUG_ON(1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2835: FILE: tools/perf/builtin-sched.c:413:
+	BUG_ON(err);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2837: FILE: tools/perf/builtin-sched.c:415:
+	sum =  ru.ru_utime.tv_sec*1e9 + ru.ru_utime.tv_usec*1e3;
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2837: FILE: tools/perf/builtin-sched.c:415:
+	sum =  ru.ru_utime.tv_sec*1e9 + ru.ru_utime.tv_usec*1e3;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2838: FILE: tools/perf/builtin-sched.c:416:
+	sum += ru.ru_stime.tv_sec*1e9 + ru.ru_stime.tv_usec*1e3;
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2838: FILE: tools/perf/builtin-sched.c:416:
+	sum += ru.ru_stime.tv_sec*1e9 + ru.ru_stime.tv_usec*1e3;
 	                                                   ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2845: FILE: tools/perf/builtin-sched.c:423:
+	char filename [] = "/proc/1234567890/sched";

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2856: FILE: tools/perf/builtin-sched.c:434:
+	BUG_ON(!file);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2860: FILE: tools/perf/builtin-sched.c:438:
+		ret = sscanf(line, "se.sum_exec_runtime : %ld.%06ld\n",
+			&msecs, &nsecs);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2862: FILE: tools/perf/builtin-sched.c:440:
+			total = msecs*1e6 + nsecs;
 			             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2885: FILE: tools/perf/builtin-sched.c:463:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2887: FILE: tools/perf/builtin-sched.c:465:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2889: FILE: tools/perf/builtin-sched.c:467:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2902: FILE: tools/perf/builtin-sched.c:480:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2905: FILE: tools/perf/builtin-sched.c:483:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2907: FILE: tools/perf/builtin-sched.c:485:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2920: FILE: tools/perf/builtin-sched.c:498:
+	BUG_ON(err);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2921: FILE: tools/perf/builtin-sched.c:499:
+	err = pthread_attr_setstacksize(&attr, (size_t)(16*1024));
 	                                                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2922: FILE: tools/perf/builtin-sched.c:500:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2924: FILE: tools/perf/builtin-sched.c:502:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2926: FILE: tools/perf/builtin-sched.c:504:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2934: FILE: tools/perf/builtin-sched.c:512:
+		BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2951: FILE: tools/perf/builtin-sched.c:529:
+		BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2955: FILE: tools/perf/builtin-sched.c:533:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2964: FILE: tools/perf/builtin-sched.c:542:
+		BUG_ON(ret);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2973: FILE: tools/perf/builtin-sched.c:551:
+	runavg_cpu_usage = (runavg_cpu_usage*9 + cpu_usage)/10;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2973: FILE: tools/perf/builtin-sched.c:551:
+	runavg_cpu_usage = (runavg_cpu_usage*9 + cpu_usage)/10;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2978: FILE: tools/perf/builtin-sched.c:556:
+	runavg_parent_cpu_usage = (runavg_parent_cpu_usage*9 +
 	                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2979: FILE: tools/perf/builtin-sched.c:557:
+				   parent_cpu_usage)/10;
 				                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2982: FILE: tools/perf/builtin-sched.c:560:
+	BUG_ON(ret);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3012: FILE: tools/perf/builtin-sched.c:590:
+	run_avg = (run_avg*9 + delta)/10;
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3012: FILE: tools/perf/builtin-sched.c:590:
+	run_avg = (run_avg*9 + delta)/10;
 	                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3015: FILE: tools/perf/builtin-sched.c:593:
+	printf("#%-3ld: %0.3f, ",
+		nr_runs, (double)delta/1000000.0);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3015: FILE: tools/perf/builtin-sched.c:593:
+		nr_runs, (double)delta/1000000.0);
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3018: FILE: tools/perf/builtin-sched.c:596:
+	printf("ravg: %0.2f, ",
+		(double)run_avg/1e6);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3018: FILE: tools/perf/builtin-sched.c:596:
+		(double)run_avg/1e6);
 		               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3021: FILE: tools/perf/builtin-sched.c:599:
+	printf("cpu: %0.2f / %0.2f",
+		(double)cpu_usage/1e6, (double)runavg_cpu_usage/1e6);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3021: FILE: tools/perf/builtin-sched.c:599:
+		(double)cpu_usage/1e6, (double)runavg_cpu_usage/1e6);
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3021: FILE: tools/perf/builtin-sched.c:599:
+		(double)cpu_usage/1e6, (double)runavg_cpu_usage/1e6);
 		                                               ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3023: FILE: tools/perf/builtin-sched.c:601:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3029: FILE: tools/perf/builtin-sched.c:607:
+	printf(" [%0.2f / %0.2f]",
+		(double)parent_cpu_usage/1e6,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3029: FILE: tools/perf/builtin-sched.c:607:
+		(double)parent_cpu_usage/1e6,
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3030: FILE: tools/perf/builtin-sched.c:608:
+		(double)runavg_parent_cpu_usage/1e6);
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3048: FILE: tools/perf/builtin-sched.c:626:
+	printf("the run test took %Ld nsecs\n", T1-T0);
 	                                          ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3048: FILE: tools/perf/builtin-sched.c:626:
+	printf("the run test took %Ld nsecs\n", T1-T0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3054: FILE: tools/perf/builtin-sched.c:632:
+	printf("the sleep test took %Ld nsecs\n", T1-T0);
 	                                            ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3054: FILE: tools/perf/builtin-sched.c:632:
+	printf("the sleep test took %Ld nsecs\n", T1-T0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3065: FILE: tools/perf/builtin-sched.c:643:
+	dump_printf("%p [%p]: perf_event_comm: %s:%d\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#3069: FILE: tools/perf/builtin-sched.c:647:
+	if (thread == NULL ||

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3079: FILE: tools/perf/builtin-sched.c:657:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#3085: FILE: tools/perf/builtin-sched.c:663:
+#define FILL_FIELD(ptr, field, event, data)	\
+	ptr.field = (typeof(ptr.field)) raw_field_value(event, #field, data)

CHECK:SPACING: No space is necessary after a cast
#3086: FILE: tools/perf/builtin-sched.c:664:
+	ptr.field = (typeof(ptr.field)) raw_field_value(event, #field, data)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'array' - possible side-effects?
#3088: FILE: tools/perf/builtin-sched.c:666:
+#define FILL_ARRAY(ptr, array, event, data)			\
+do {								\
+	void *__array = raw_field_ptr(event, #array, data);	\
+	memcpy(ptr.array, __array, sizeof(ptr.array));	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#3092: FILE: tools/perf/builtin-sched.c:670:
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#3094: FILE: tools/perf/builtin-sched.c:672:
+#define FILL_COMMON_FIELDS(ptr, event, data)			\
+do {								\
+	FILL_FIELD(ptr, common_type, event, data);		\
+	FILL_FIELD(ptr, common_flags, event, data);		\
+	FILL_FIELD(ptr, common_preempt_count, event, data);	\
+	FILL_FIELD(ptr, common_pid, event, data);		\
+	FILL_FIELD(ptr, common_tgid, event, data);		\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'event' - possible side-effects?
#3094: FILE: tools/perf/builtin-sched.c:672:
+#define FILL_COMMON_FIELDS(ptr, event, data)			\
+do {								\
+	FILL_FIELD(ptr, common_type, event, data);		\
+	FILL_FIELD(ptr, common_flags, event, data);		\
+	FILL_FIELD(ptr, common_preempt_count, event, data);	\
+	FILL_FIELD(ptr, common_pid, event, data);		\
+	FILL_FIELD(ptr, common_tgid, event, data);		\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#3094: FILE: tools/perf/builtin-sched.c:672:
+#define FILL_COMMON_FIELDS(ptr, event, data)			\
+do {								\
+	FILL_FIELD(ptr, common_type, event, data);		\
+	FILL_FIELD(ptr, common_flags, event, data);		\
+	FILL_FIELD(ptr, common_preempt_count, event, data);	\
+	FILL_FIELD(ptr, common_pid, event, data);		\
+	FILL_FIELD(ptr, common_tgid, event, data);		\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3103: FILE: tools/perf/builtin-sched.c:681:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct trace_switch_event *' should also have an identifier name
#3171: FILE: tools/perf/builtin-sched.c:749:
+	void (*switch_event)(struct trace_switch_event *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct event *' should also have an identifier name
#3171: FILE: tools/perf/builtin-sched.c:749:
+	void (*switch_event)(struct trace_switch_event *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct trace_runtime_event *' should also have an identifier name
#3177: FILE: tools/perf/builtin-sched.c:755:
+	void (*runtime_event)(struct trace_runtime_event *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct event *' should also have an identifier name
#3177: FILE: tools/perf/builtin-sched.c:755:
+	void (*runtime_event)(struct trace_runtime_event *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct trace_wakeup_event *' should also have an identifier name
#3183: FILE: tools/perf/builtin-sched.c:761:
+	void (*wakeup_event)(struct trace_wakeup_event *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct event *' should also have an identifier name
#3183: FILE: tools/perf/builtin-sched.c:761:
+	void (*wakeup_event)(struct trace_wakeup_event *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct trace_fork_event *' should also have an identifier name
#3189: FILE: tools/perf/builtin-sched.c:767:
+	void (*fork_event)(struct trace_fork_event *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct event *' should also have an identifier name
#3189: FILE: tools/perf/builtin-sched.c:767:
+	void (*fork_event)(struct trace_fork_event *,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3196: FILE: tools/perf/builtin-sched.c:774:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3210: FILE: tools/perf/builtin-sched.c:788:
+		printf(" ... pid %d woke up %s/%d\n",
+			wakeup_event->common_pid,

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3247: FILE: tools/perf/builtin-sched.c:825:
+		die("hm, delta: %Ld < 0 ?\n", delta);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3250: FILE: tools/perf/builtin-sched.c:828:
+		printf(" ... switch from %s/%d to %s/%d [ran %Ld nsecs]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3251: FILE: tools/perf/builtin-sched.c:829:
+		printf(" ... switch from %s/%d to %s/%d [ran %Ld nsecs]\n",
+			switch_event->prev_comm, switch_event->prev_pid,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3265: FILE: tools/perf/builtin-sched.c:843:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3302: FILE: tools/perf/builtin-sched.c:880:
+	BUG_ON(list_empty(list));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3315: FILE: tools/perf/builtin-sched.c:893:
+thread_atoms_search(struct rb_root *root, struct thread *thread,
+			 struct list_head *sort_list)

CHECK:BRACES: braces {} should be used on all arms of this statement
#3327: FILE: tools/perf/builtin-sched.c:905:
+		if (cmp > 0)
[...]
+		else if (cmp < 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#3331: FILE: tools/perf/builtin-sched.c:909:
+		else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3332: FILE: tools/perf/builtin-sched.c:910:
+			BUG_ON(thread != atoms->thread);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3341: FILE: tools/perf/builtin-sched.c:919:
+__thread_latency_insert(struct rb_root *root, struct work_atoms *data,
+			 struct list_head *sort_list)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around root->rb_node
#3343: FILE: tools/perf/builtin-sched.c:921:
+	struct rb_node **new = &(root->rb_node), *parent = NULL;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3421: FILE: tools/perf/builtin-sched.c:999:
+	BUG_ON(list_empty(&atoms->work_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3470: FILE: tools/perf/builtin-sched.c:1048:
+	BUG_ON(cpu >= MAX_CPUS || cpu < 0);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3480: FILE: tools/perf/builtin-sched.c:1058:
+		die("hm, delta: %Ld < 0 ?\n", delta);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3482: FILE: tools/perf/builtin-sched.c:1060:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3512: FILE: tools/perf/builtin-sched.c:1090:
+latency_runtime_event(struct trace_runtime_event *runtime_event,
+		     struct event *event __used,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3520: FILE: tools/perf/builtin-sched.c:1098:
+	BUG_ON(cpu >= MAX_CPUS || cpu < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3560: FILE: tools/perf/builtin-sched.c:1138:
+	BUG_ON(list_empty(&atoms->work_list));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3609: FILE: tools/perf/builtin-sched.c:1187:
+	printf("|%11.3f ms |%9llu | avg:%9.3f ms | max:%9.3f ms |\n",
+	      (double)work_list->total_runtime / 1e6,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3708: FILE: tools/perf/builtin-sched.c:1286:
+#define NB_AVAILABLE_SORTS	(int)(sizeof(available_sorts) / sizeof(struct sort_dimension *))

WARNING:LINE_SPACING: Missing a blank line after declarations
#3735: FILE: tools/perf/builtin-sched.c:1313:
+		struct work_atoms *data;
+		node = rb_first(&atom_root);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3774: FILE: tools/perf/builtin-sched.c:1352:
+static u32 curr_pid[MAX_CPUS] = { [0 ... MAX_CPUS-1] = -1 };
                                                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3794: FILE: tools/perf/builtin-sched.c:1372:
+	BUG_ON(this_cpu >= MAX_CPUS || this_cpu < 0);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3807: FILE: tools/perf/builtin-sched.c:1385:
+		die("hm, delta: %Ld < 0 ?\n", delta);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3809: FILE: tools/perf/builtin-sched.c:1387:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3825: FILE: tools/perf/builtin-sched.c:1403:
+			next_shortname1='A';
 			               ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#3826: FILE: tools/perf/builtin-sched.c:1404:
+			if (next_shortname2 < '9') {
[...]
+			} else {
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3829: FILE: tools/perf/builtin-sched.c:1407:
+				next_shortname2='0';
 				               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#3841: FILE: tools/perf/builtin-sched.c:1419:
+		if (curr_thread[cpu]) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3846: FILE: tools/perf/builtin-sched.c:1424:
+		} else

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3850: FILE: tools/perf/builtin-sched.c:1428:
+	printf("  %12.6f secs ", (double)timestamp/1e9);
 	                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3853: FILE: tools/perf/builtin-sched.c:1431:
+		printf("%s => %s:%d\n",
+			sched_in->shortname, sched_in->comm, sched_in->pid);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3859: FILE: tools/perf/builtin-sched.c:1437:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3895: FILE: tools/perf/builtin-sched.c:1473:
+process_sched_runtime_event(struct raw_event_sample *raw,
+			   struct event *event,

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3998: FILE: tools/perf/builtin-sched.c:1576:
+	dump_printf("%p [%p]: PERF_EVENT_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3999: FILE: tools/perf/builtin-sched.c:1577:
+	dump_printf("%p [%p]: PERF_EVENT_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#4008: FILE: tools/perf/builtin-sched.c:1586:
+	if (thread == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4025: FILE: tools/perf/builtin-sched.c:1603:
+	} else if (cpumode == PERF_EVENT_MISC_USER) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#4110: FILE: tools/perf/builtin-sched.c:1688:
+		die("No trace sample to read. Did you call perf record "
+		    "without -R?");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4146: FILE: tools/perf/builtin-sched.c:1724:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4148: FILE: tools/perf/builtin-sched.c:1726:
+	if (!size || process_event(event, offset, head) < 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4175: FILE: tools/perf/builtin-sched.c:1753:
+		printf("  INFO: %.3f%% unordered timestamps (%ld out of %ld)\n",
+			(double)nr_unordered_timestamps/(double)nr_timestamps*100.0,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4175: FILE: tools/perf/builtin-sched.c:1753:
+			(double)nr_unordered_timestamps/(double)nr_timestamps*100.0,
 			                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4175: FILE: tools/perf/builtin-sched.c:1753:
+			(double)nr_unordered_timestamps/(double)nr_timestamps*100.0,
 			                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4180: FILE: tools/perf/builtin-sched.c:1758:
+		printf("  INFO: %.3f%% lost events (%ld out of %ld, in %ld chunks)\n",
+			(double)nr_lost_events/(double)nr_events*100.0,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4180: FILE: tools/perf/builtin-sched.c:1758:
+			(double)nr_lost_events/(double)nr_events*100.0,
 			                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4180: FILE: tools/perf/builtin-sched.c:1758:
+			(double)nr_lost_events/(double)nr_events*100.0,
 			                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4185: FILE: tools/perf/builtin-sched.c:1763:
+		printf("  INFO: %.3f%% state machine bugs (%ld out of %ld)",
+			(double)nr_state_machine_bugs/(double)nr_timestamps*100.0,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4185: FILE: tools/perf/builtin-sched.c:1763:
+			(double)nr_state_machine_bugs/(double)nr_timestamps*100.0,
 			                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4185: FILE: tools/perf/builtin-sched.c:1763:
+			(double)nr_state_machine_bugs/(double)nr_timestamps*100.0,
 			                                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4193: FILE: tools/perf/builtin-sched.c:1771:
+		printf("  INFO: %.3f%% context switch bugs (%ld out of %ld)",
+			(double)nr_context_switch_bugs/(double)nr_timestamps*100.0,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4193: FILE: tools/perf/builtin-sched.c:1771:
+			(double)nr_context_switch_bugs/(double)nr_timestamps*100.0,
 			                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4193: FILE: tools/perf/builtin-sched.c:1771:
+			(double)nr_context_switch_bugs/(double)nr_timestamps*100.0,
 			                                                    ^

WARNING:LONG_LINE_STRING: line length of 113 exceeds 100 columns
#4209: FILE: tools/perf/builtin-sched.c:1787:
+	printf("\n -----------------------------------------------------------------------------------------\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#4210: FILE: tools/perf/builtin-sched.c:1788:
+	printf("  Task                  |   Runtime ms  | Switches | Average delay ms | Maximum delay ms |\n");

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#4211: FILE: tools/perf/builtin-sched.c:1789:
+	printf(" -----------------------------------------------------------------------------------------\n");

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#4223: FILE: tools/perf/builtin-sched.c:1801:
+	printf(" -----------------------------------------------------------------------------------------\n");

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#4224: FILE: tools/perf/builtin-sched.c:1802:
+	printf("  TOTAL:                |%11.3f ms |%9Ld |\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4225: FILE: tools/perf/builtin-sched.c:1803:
+	printf("  TOTAL:                |%11.3f ms |%9Ld |\n",
+		(double)all_runtime/1e6, all_count);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4225: FILE: tools/perf/builtin-sched.c:1803:
+		(double)all_runtime/1e6, all_count);
 		                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4232: FILE: tools/perf/builtin-sched.c:1810:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4271: FILE: tools/perf/builtin-sched.c:1849:
+		printf("run atoms optimized: %ld\n",
+			nr_run_events_optimized);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4282: FILE: tools/perf/builtin-sched.c:1860:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4290: FILE: tools/perf/builtin-sched.c:1868:
+	OPT_STRING('i', "input", &input_name, "file",
+		    "input file name"),

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#4345: FILE: tools/perf/builtin-sched.c:1923:
+static const char *record_args[] = {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4378: FILE: tools/perf/builtin-sched.c:1956:
+	BUG_ON(i != rec_argc);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4421: FILE: tools/perf/builtin-sched.c:1999:
+		return cmd_trace(argc, argv, prefix);
+	} else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4433: FILE: tools/perf/builtin-timechart.c:1:
+/*

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#4466: FILE: tools/perf/builtin-timechart.c:34:
+static char		const *input_name = "perf.data";

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#4467: FILE: tools/perf/builtin-timechart.c:35:
+static char		const *output_name = "output.svg";

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4469: FILE: tools/perf/builtin-timechart.c:37:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4481: FILE: tools/perf/builtin-timechart.c:49:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4520: FILE: tools/perf/builtin-timechart.c:88:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor"
#4596: FILE: tools/perf/builtin-timechart.c:164:
+	assert(cursor != NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4608: FILE: tools/perf/builtin-timechart.c:176:
+	struct per_pidcomm *c;
+	p = find_create_pid(pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c"
#4623: FILE: tools/perf/builtin-timechart.c:191:
+	assert(c != NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4634: FILE: tools/perf/builtin-timechart.c:202:
+	struct per_pid *p, *pp;
+	p = find_create_pid(pid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4650: FILE: tools/perf/builtin-timechart.c:218:
+	struct per_pid *p;
+	p = find_create_pid(pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c"
#4667: FILE: tools/perf/builtin-timechart.c:235:
+		assert(c != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sample"
#4675: FILE: tools/perf/builtin-timechart.c:243:
+	assert(sample != NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4685: FILE: tools/perf/builtin-timechart.c:253:
+		c->total_time += (end-start);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4686: FILE: tools/perf/builtin-timechart.c:254:
+		p->total_time += (end-start);
 		                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4711: FILE: tools/perf/builtin-timechart.c:279:
+}
+static int

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4735: FILE: tools/perf/builtin-timechart.c:303:
+	struct trace_entry te;
 	                   ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4742: FILE: tools/perf/builtin-timechart.c:310:
+	struct trace_entry te;
 	                   ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4766: FILE: tools/perf/builtin-timechart.c:334:
+
+

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4769: FILE: tools/perf/builtin-timechart.c:337:
+	struct trace_entry te;
 	                   ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#4788: FILE: tools/perf/builtin-timechart.c:356:
+	struct power_event *pwr;
+	pwr = malloc(sizeof(struct power_event));

WARNING:LINE_SPACING: Missing a blank line after declarations
#4806: FILE: tools/perf/builtin-timechart.c:374:
+	struct power_event *pwr;
+	pwr = malloc(sizeof(struct power_event));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#4836: FILE: tools/perf/builtin-timechart.c:404:
+	if (new_freq == max_freq - 1000)
+			turbo_frequency = max_freq;

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4841: FILE: tools/perf/builtin-timechart.c:409:
+sched_wakeup(int cpu, u64 timestamp, int pid, struct trace_entry *te)
                                                                   ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4845: FILE: tools/perf/builtin-timechart.c:413:
+	struct wakeup_entry *wake = (void *)te;
 	                                    ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4874: FILE: tools/perf/builtin-timechart.c:442:
+static void sched_switch(int cpu, u64 timestamp, struct trace_entry *te)
                                                                      ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4877: FILE: tools/perf/builtin-timechart.c:445:
+	struct sched_switch *sw = (void *)te;
 	                                  ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4879: FILE: tools/perf/builtin-timechart.c:447:
+
+

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#4885: FILE: tools/perf/builtin-timechart.c:453:
+		pid_put_sample(sw->prev_pid, TYPE_RUNNING, cpu, prev_p->current->state_since, timestamp);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#4888: FILE: tools/perf/builtin-timechart.c:456:
+			pid_put_sample(sw->next_pid, p->current->state, cpu, p->current->state_since, timestamp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4904: FILE: tools/perf/builtin-timechart.c:472:
+
+

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4913: FILE: tools/perf/builtin-timechart.c:481:
+	struct trace_entry *te;
 	                    ^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#4919: FILE: tools/perf/builtin-timechart.c:487:
+		pid = event->sample.array[cursor]>>32;
 		                                 ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4930: FILE: tools/perf/builtin-timechart.c:498:
+
+	}

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4942: FILE: tools/perf/builtin-timechart.c:510:
+	te = (void *)&event->sample.array[cursor];
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4948: FILE: tools/perf/builtin-timechart.c:516:
+		pe = (void *)te;
 		             ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4965: FILE: tools/perf/builtin-timechart.c:533:
+			sched_wakeup(cpu, stamp, pid, te);
 			                              ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#4968: FILE: tools/perf/builtin-timechart.c:536:
+			sched_switch(cpu, stamp, te);
 			                         ^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#4989: FILE: tools/perf/builtin-timechart.c:557:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5035: FILE: tools/perf/builtin-timechart.c:603:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_list"
#5119: FILE: tools/perf/builtin-timechart.c:687:
+		if (new_list == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5128: FILE: tools/perf/builtin-timechart.c:696:
+			if (cursor->ppid > p->ppid ||
+				(cursor->ppid == p->ppid && cursor->pid > p->pid)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5152: FILE: tools/perf/builtin-timechart.c:720:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#5156: FILE: tools/perf/builtin-timechart.c:724:
+	struct power_event *pwr;
+	pwr = power_events;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#5194: FILE: tools/perf/builtin-timechart.c:762:
+					if (c->Y && c->start_time <= we->time && c->end_time >= we->time) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5195: FILE: tools/perf/builtin-timechart.c:763:
+						if (p->pid == we->waker)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5197: FILE: tools/perf/builtin-timechart.c:765:
+						if (p->pid == we->wakee)

WARNING:LINE_SPACING: Missing a blank line after declarations
#5221: FILE: tools/perf/builtin-timechart.c:789:
+	struct cpu_sample *sample;
+	p = all_data;

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#5228: FILE: tools/perf/builtin-timechart.c:796:
+					svg_process(sample->cpu, sample->start_time, sample->end_time, "sample", c->comm);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#5261: FILE: tools/perf/builtin-timechart.c:829:
+					svg_sample(Y, sample->cpu, sample->start_time, sample->end_time, "sample");

WARNING:LINE_SPACING: Missing a blank line after declarations
#5271: FILE: tools/perf/builtin-timechart.c:839:
+				char comm[256];
+				if (c->total_time > 5000000000) /* 5 seconds */

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#5272: FILE: tools/perf/builtin-timechart.c:840:
+					sprintf(comm, "%s:%i (%2.2fs)", c->comm, p->pid, c->total_time / 1000000000.0);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#5274: FILE: tools/perf/builtin-timechart.c:842:
+					sprintf(comm, "%s:%i (%3.1fms)", c->comm, p->pid, c->total_time / 1000000.0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5327: FILE: tools/perf/builtin-timechart.c:895:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5338: FILE: tools/perf/builtin-timechart.c:906:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5364: FILE: tools/perf/builtin-timechart.c:932:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5366: FILE: tools/perf/builtin-timechart.c:934:
+	switch (event->header.type) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5406: FILE: tools/perf/builtin-timechart.c:974:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5478: FILE: tools/perf/builtin-timechart.c:1046:
+	if (!size || process_event(event) < 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5480: FILE: tools/perf/builtin-timechart.c:1048:
+		printf("%p [%p]: skipping unknown header type: %d\n",
+			(void *)(offset + head),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5507: FILE: tools/perf/builtin-timechart.c:1075:
+
+

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#5516: FILE: tools/perf/builtin-timechart.c:1084:
+	printf("Written %2.1f seconds of trace to %s.\n", (last_time - first_time) / 1000000000.0, output_name);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#5526: FILE: tools/perf/builtin-timechart.c:1094:
+static const char *record_args[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5559: FILE: tools/perf/builtin-timechart.c:1127:
+	OPT_STRING('i', "input", &input_name, "file",
+		    "input file name"),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5561: FILE: tools/perf/builtin-timechart.c:1129:
+	OPT_STRING('o', "output", &output_name, "file",
+		    "output file name"),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5565: FILE: tools/perf/builtin-timechart.c:1133:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5573: FILE: tools/perf/builtin-timechart.c:1141:
+	argc = parse_options(argc, argv, options, timechart_usage,
+			PARSE_OPT_STOP_AT_NON_OPTION);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5592: FILE: tools/perf/builtin.h:19:
+extern int cmd_sched(int argc, const char **argv, const char *prefix);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5593: FILE: tools/perf/builtin.h:20:
+extern int cmd_list(int argc, const char **argv, const char *prefix);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5597: FILE: tools/perf/builtin.h:24:
+extern int cmd_timechart(int argc, const char **argv, const char *prefix);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5602: FILE: tools/perf/builtin.h:27:
+extern int cmd_version(int argc, const char **argv, const char *prefix);

WARNING:SPACING: missing space after struct definition
#5661: FILE: tools/perf/util/event.h:63:
+struct sample_event{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5666: FILE: tools/perf/util/event.h:68:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#5741: FILE: tools/perf/util/header.c:120:
+	int i;
+	for (i = 0 ; i < event_count; i++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5820: FILE: tools/perf/util/header.h:35:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5949: FILE: tools/perf/util/parse-events.c:480:
+		if (!strcmp(evt_ent->d_name, ".")
+		    || !strcmp(evt_ent->d_name, "..")

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5950: FILE: tools/perf/util/parse-events.c:481:
+		    || !strcmp(evt_ent->d_name, "..")
+		    || !strcmp(evt_ent->d_name, "enable")

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5951: FILE: tools/perf/util/parse-events.c:482:
+		    || !strcmp(evt_ent->d_name, "enable")
+		    || !strcmp(evt_ent->d_name, "filter"))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5976: FILE: tools/perf/util/parse-events.c:506:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5978: FILE: tools/perf/util/parse-events.c:508:
+static enum event_result parse_tracepoint_event(const char **strp,
 				    struct perf_counter_attr *attr)

CHECK:BRACES: Unbalanced braces around else statement
#6035: FILE: tools/perf/util/parse-events.c:544:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6173: FILE: tools/perf/util/parse-events.c:711:
+
+

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#6213: FILE: tools/perf/util/parse-options.h:108:
+	{ .type = OPTION_CALLBACK, .short_name = (s), .long_name = (l), .value = (v), (a), .help = (h), .callback = (f), .flags = PARSE_OPT_NOARG }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6223: FILE: tools/perf/util/svghelper.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6247: FILE: tools/perf/util/svghelper.c:25:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#6277: FILE: tools/perf/util/svghelper.c:55:
+{
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6284: FILE: tools/perf/util/svghelper.c:62:
+	fprintf(svgfile, "<?xml version=\"1.0\" standalone=\"no\"?> \n");

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#6290: FILE: tools/perf/util/svghelper.c:68:
+	fprintf(svgfile, "      rect.process  { fill:rgb(180,180,180); fill-opacity:0.9; stroke-width:1;   stroke:rgb(  0,  0,  0); } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6290: FILE: tools/perf/util/svghelper.c:68:
+	fprintf(svgfile, "      rect.process  { fill:rgb(180,180,180); fill-opacity:0.9; stroke-width:1;   stroke:rgb(  0,  0,  0); } \n");

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#6291: FILE: tools/perf/util/svghelper.c:69:
+	fprintf(svgfile, "      rect.process2 { fill:rgb(180,180,180); fill-opacity:0.9; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6291: FILE: tools/perf/util/svghelper.c:69:
+	fprintf(svgfile, "      rect.process2 { fill:rgb(180,180,180); fill-opacity:0.9; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#6292: FILE: tools/perf/util/svghelper.c:70:
+	fprintf(svgfile, "      rect.sample   { fill:rgb(  0,  0,255); fill-opacity:0.8; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6292: FILE: tools/perf/util/svghelper.c:70:
+	fprintf(svgfile, "      rect.sample   { fill:rgb(  0,  0,255); fill-opacity:0.8; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#6293: FILE: tools/perf/util/svghelper.c:71:
+	fprintf(svgfile, "      rect.blocked  { fill:rgb(255,  0,  0); fill-opacity:0.5; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6293: FILE: tools/perf/util/svghelper.c:71:
+	fprintf(svgfile, "      rect.blocked  { fill:rgb(255,  0,  0); fill-opacity:0.5; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#6294: FILE: tools/perf/util/svghelper.c:72:
+	fprintf(svgfile, "      rect.waiting  { fill:rgb(255,255,  0); fill-opacity:0.3; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6294: FILE: tools/perf/util/svghelper.c:72:
+	fprintf(svgfile, "      rect.waiting  { fill:rgb(255,255,  0); fill-opacity:0.3; stroke-width:0;   stroke:rgb(  0,  0,  0); } \n");

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#6295: FILE: tools/perf/util/svghelper.c:73:
+	fprintf(svgfile, "      rect.cpu      { fill:rgb(192,192,192); fill-opacity:0.2; stroke-width:0.5; stroke:rgb(128,128,128); } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6295: FILE: tools/perf/util/svghelper.c:73:
+	fprintf(svgfile, "      rect.cpu      { fill:rgb(192,192,192); fill-opacity:0.2; stroke-width:0.5; stroke:rgb(128,128,128); } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6296: FILE: tools/perf/util/svghelper.c:74:
+	fprintf(svgfile, "      rect.pstate   { fill:rgb(128,128,128); fill-opacity:0.8; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6296: FILE: tools/perf/util/svghelper.c:74:
+	fprintf(svgfile, "      rect.pstate   { fill:rgb(128,128,128); fill-opacity:0.8; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6297: FILE: tools/perf/util/svghelper.c:75:
+	fprintf(svgfile, "      rect.c1       { fill:rgb(255,214,214); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6297: FILE: tools/perf/util/svghelper.c:75:
+	fprintf(svgfile, "      rect.c1       { fill:rgb(255,214,214); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6298: FILE: tools/perf/util/svghelper.c:76:
+	fprintf(svgfile, "      rect.c2       { fill:rgb(255,172,172); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6298: FILE: tools/perf/util/svghelper.c:76:
+	fprintf(svgfile, "      rect.c2       { fill:rgb(255,172,172); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6299: FILE: tools/perf/util/svghelper.c:77:
+	fprintf(svgfile, "      rect.c3       { fill:rgb(255,130,130); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6299: FILE: tools/perf/util/svghelper.c:77:
+	fprintf(svgfile, "      rect.c3       { fill:rgb(255,130,130); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6300: FILE: tools/perf/util/svghelper.c:78:
+	fprintf(svgfile, "      rect.c4       { fill:rgb(255, 88, 88); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6300: FILE: tools/perf/util/svghelper.c:78:
+	fprintf(svgfile, "      rect.c4       { fill:rgb(255, 88, 88); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6301: FILE: tools/perf/util/svghelper.c:79:
+	fprintf(svgfile, "      rect.c5       { fill:rgb(255, 44, 44); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6301: FILE: tools/perf/util/svghelper.c:79:
+	fprintf(svgfile, "      rect.c5       { fill:rgb(255, 44, 44); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6302: FILE: tools/perf/util/svghelper.c:80:
+	fprintf(svgfile, "      rect.c6       { fill:rgb(255,  0,  0); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6302: FILE: tools/perf/util/svghelper.c:80:
+	fprintf(svgfile, "      rect.c6       { fill:rgb(255,  0,  0); fill-opacity:0.5; stroke-width:0; } \n");

WARNING:LONG_LINE_STRING: line length of 116 exceeds 100 columns
#6303: FILE: tools/perf/util/svghelper.c:81:
+	fprintf(svgfile, "      line.pstate   { stroke:rgb(255,255,  0); stroke-opacity:0.8; stroke-width:2; } \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6303: FILE: tools/perf/util/svghelper.c:81:
+	fprintf(svgfile, "      line.pstate   { stroke:rgb(255,255,  0); stroke-opacity:0.8; stroke-width:2; } \n");

CHECK:CAMELCASE: Avoid CamelCase: <Yslot>
#6308: FILE: tools/perf/util/svghelper.c:86:
+void svg_box(int Yslot, u64 start, u64 end, const char *type)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#6313: FILE: tools/perf/util/svghelper.c:91:
+	fprintf(svgfile, "<rect x=\"%4.8f\" width=\"%4.8f\" y=\"%4.1f\" height=\"%4.1f\" class=\"%s\"/>\n",

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#6314: FILE: tools/perf/util/svghelper.c:92:
+		time2pixels(start), time2pixels(end)-time2pixels(start), Yslot * SLOT_MULT, SLOT_HEIGHT, type);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6314: FILE: tools/perf/util/svghelper.c:92:
+		time2pixels(start), time2pixels(end)-time2pixels(start), Yslot * SLOT_MULT, SLOT_HEIGHT, type);
 		                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#6320: FILE: tools/perf/util/svghelper.c:98:
+	double text_size;
+	if (!svgfile)

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#6323: FILE: tools/perf/util/svghelper.c:101:
+	fprintf(svgfile, "<rect x=\"%4.8f\" width=\"%4.8f\" y=\"%4.1f\" height=\"%4.1f\" class=\"%s\"/>\n",

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#6324: FILE: tools/perf/util/svghelper.c:102:
+		time2pixels(start), time2pixels(end)-time2pixels(start), Yslot * SLOT_MULT, SLOT_HEIGHT, type);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6324: FILE: tools/perf/util/svghelper.c:102:
+		time2pixels(start), time2pixels(end)-time2pixels(start), Yslot * SLOT_MULT, SLOT_HEIGHT, type);
 		                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6326: FILE: tools/perf/util/svghelper.c:104:
+	text_size = (time2pixels(end)-time2pixels(start));
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6328: FILE: tools/perf/util/svghelper.c:106:
+		text_size = text_size/2;
 		                     ^

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6332: FILE: tools/perf/util/svghelper.c:110:
+		fprintf(svgfile, "<text transform=\"translate(%1.8f,%1.8f)\" font-size=\"%1.6fpt\">%i</text>\n",

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#6333: FILE: tools/perf/util/svghelper.c:111:
+			time2pixels(start), Yslot *  SLOT_MULT + SLOT_HEIGHT - 1, text_size,  cpu + 1);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#6335: FILE: tools/perf/util/svghelper.c:113:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#6361: FILE: tools/perf/util/svghelper.c:139:
+	char cpu_string[80];
+	if (!svgfile)

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#6367: FILE: tools/perf/util/svghelper.c:145:
+	fprintf(svgfile, "<rect x=\"%4.8f\" width=\"%4.8f\" y=\"%4.1f\" height=\"%4.1f\" class=\"cpu\"/>\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6369: FILE: tools/perf/util/svghelper.c:147:
+		time2pixels(last_time)-time2pixels(first_time),
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6370: FILE: tools/perf/util/svghelper.c:148:
+		cpu2y(cpu), SLOT_MULT+SLOT_HEIGHT);
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6372: FILE: tools/perf/util/svghelper.c:150:
+	sprintf(cpu_string, "CPU %i", (int)cpu+1);
 	                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6374: FILE: tools/perf/util/svghelper.c:152:
+		10+time2pixels(first_time), cpu2y(cpu) + SLOT_HEIGHT/2, cpu_string);
 		  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6374: FILE: tools/perf/util/svghelper.c:152:
+		10+time2pixels(first_time), cpu2y(cpu) + SLOT_HEIGHT/2, cpu_string);
 		                                                    ^

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#6376: FILE: tools/perf/util/svghelper.c:154:
+	fprintf(svgfile, "<text transform=\"translate(%4.8f,%4.8f)\" font-size=\"1.25pt\">%s</text>\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6377: FILE: tools/perf/util/svghelper.c:155:
+		10+time2pixels(first_time), cpu2y(cpu) + SLOT_MULT + SLOT_HEIGHT - 4, cpu_model());
 		  ^

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#6387: FILE: tools/perf/util/svghelper.c:165:
+	fprintf(svgfile, "<rect x=\"%4.8f\" width=\"%4.8f\" y=\"%4.1f\" height=\"%4.1f\" class=\"%s\"/>\n",

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#6388: FILE: tools/perf/util/svghelper.c:166:
+		time2pixels(start), time2pixels(end)-time2pixels(start), cpu2y(cpu), SLOT_MULT+SLOT_HEIGHT, type);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6388: FILE: tools/perf/util/svghelper.c:166:
+		time2pixels(start), time2pixels(end)-time2pixels(start), cpu2y(cpu), SLOT_MULT+SLOT_HEIGHT, type);
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6388: FILE: tools/perf/util/svghelper.c:166:
+		time2pixels(start), time2pixels(end)-time2pixels(start), cpu2y(cpu), SLOT_MULT+SLOT_HEIGHT, type);
 		                                                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6389: FILE: tools/perf/util/svghelper.c:167:
+	width = time2pixels(end)-time2pixels(start);
 	                        ^

WARNING:LONG_LINE_STRING: line length of 124 exceeds 100 columns
#6394: FILE: tools/perf/util/svghelper.c:172:
+		fprintf(svgfile, "<text  transform=\"translate(%4.8f,%4.8f) rotate(90)\" font-size=\"%3.4fpt\">%s</text>\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6406: FILE: tools/perf/util/svghelper.c:184:
+
+

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#6411: FILE: tools/perf/util/svghelper.c:189:
+	fprintf(svgfile, "<rect class=\"%s\" x=\"%4.8f\" width=\"%4.8f\" y=\"%4.1f\" height=\"%4.1f\"/>\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6413: FILE: tools/perf/util/svghelper.c:191:
+		time2pixels(start), time2pixels(end)-time2pixels(start),
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6414: FILE: tools/perf/util/svghelper.c:192:
+		cpu2y(cpu), SLOT_MULT+SLOT_HEIGHT);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6416: FILE: tools/perf/util/svghelper.c:194:
+	width = time2pixels(end)-time2pixels(start);
 	                        ^

WARNING:LONG_LINE_STRING: line length of 125 exceeds 100 columns
#6421: FILE: tools/perf/util/svghelper.c:199:
+		fprintf(svgfile, "<text  transform=\"translate(%4.8f,%4.8f) rotate(90)\" font-size=\"%3.4fpt\">C%i</text>\n",

CHECK:CAMELCASE: Avoid CamelCase: <HzToHuman>
#6425: FILE: tools/perf/util/svghelper.c:203:
+static char *HzToHuman(unsigned long hz)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6438: FILE: tools/perf/util/svghelper.c:216:
+		sprintf(buffer, " %6lli Mhz", (Hz+500)/1000);
 		                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6438: FILE: tools/perf/util/svghelper.c:216:
+		sprintf(buffer, " %6lli Mhz", (Hz+500)/1000);
 		                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6441: FILE: tools/perf/util/svghelper.c:219:
+		sprintf(buffer, " %6.2f Ghz", (Hz+5000.0)/1000000);
 		                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6441: FILE: tools/perf/util/svghelper.c:219:
+		sprintf(buffer, " %6.2f Ghz", (Hz+5000.0)/1000000);
 		                                         ^

WARNING:LONG_LINE_STRING: line length of 106 exceeds 100 columns
#6459: FILE: tools/perf/util/svghelper.c:237:
+	fprintf(svgfile, "<line x1=\"%4.8f\" x2=\"%4.8f\" y1=\"%4.1f\" y2=\"%4.1f\" class=\"pstate\"/>\n",

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#6461: FILE: tools/perf/util/svghelper.c:239:
+	fprintf(svgfile, "<text transform=\"translate(%4.8f,%4.8f)\" font-size=\"0.25pt\">%s</text>\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6462: FILE: tools/perf/util/svghelper.c:240:
+		time2pixels(start), height+0.9, HzToHuman(freq));
 		                          ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#6464: FILE: tools/perf/util/svghelper.c:242:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6466: FILE: tools/perf/util/svghelper.c:244:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6474: FILE: tools/perf/util/svghelper.c:252:
+
+

WARNING:LONG_LINE_STRING: line length of 156 exceeds 100 columns
#6477: FILE: tools/perf/util/svghelper.c:255:
+			fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%4.2f\" style=\"stroke:rgb(32,255,32);stroke-width:0.009\"/>\n",

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#6478: FILE: tools/perf/util/svghelper.c:256:
+				time2pixels(start), row1 * SLOT_MULT + SLOT_HEIGHT,  time2pixels(start), row1 * SLOT_MULT + SLOT_HEIGHT + SLOT_MULT/32);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6478: FILE: tools/perf/util/svghelper.c:256:
+				time2pixels(start), row1 * SLOT_MULT + SLOT_HEIGHT,  time2pixels(start), row1 * SLOT_MULT + SLOT_HEIGHT + SLOT_MULT/32);
 				                                                                                                                   ^

WARNING:LONG_LINE_STRING: line length of 156 exceeds 100 columns
#6481: FILE: tools/perf/util/svghelper.c:259:
+			fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%4.2f\" style=\"stroke:rgb(32,255,32);stroke-width:0.009\"/>\n",

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#6482: FILE: tools/perf/util/svghelper.c:260:
+				time2pixels(start), row2 * SLOT_MULT - SLOT_MULT/32,  time2pixels(start), row2 * SLOT_MULT);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6482: FILE: tools/perf/util/svghelper.c:260:
+				time2pixels(start), row2 * SLOT_MULT - SLOT_MULT/32,  time2pixels(start), row2 * SLOT_MULT);
 				                                                ^

WARNING:LONG_LINE_STRING: line length of 156 exceeds 100 columns
#6485: FILE: tools/perf/util/svghelper.c:263:
+			fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%4.2f\" style=\"stroke:rgb(32,255,32);stroke-width:0.009\"/>\n",

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#6486: FILE: tools/perf/util/svghelper.c:264:
+				time2pixels(start), row2 * SLOT_MULT + SLOT_HEIGHT,  time2pixels(start), row2 * SLOT_MULT + SLOT_HEIGHT + SLOT_MULT/32);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6486: FILE: tools/perf/util/svghelper.c:264:
+				time2pixels(start), row2 * SLOT_MULT + SLOT_HEIGHT,  time2pixels(start), row2 * SLOT_MULT + SLOT_HEIGHT + SLOT_MULT/32);
 				                                                                                                                   ^

WARNING:LONG_LINE_STRING: line length of 156 exceeds 100 columns
#6489: FILE: tools/perf/util/svghelper.c:267:
+			fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%4.2f\" style=\"stroke:rgb(32,255,32);stroke-width:0.009\"/>\n",

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#6490: FILE: tools/perf/util/svghelper.c:268:
+				time2pixels(start), row1 * SLOT_MULT - SLOT_MULT/32,  time2pixels(start), row1 * SLOT_MULT);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6490: FILE: tools/perf/util/svghelper.c:268:
+				time2pixels(start), row1 * SLOT_MULT - SLOT_MULT/32,  time2pixels(start), row1 * SLOT_MULT);
 				                                                ^

WARNING:LONG_LINE_STRING: line length of 118 exceeds 100 columns
#6496: FILE: tools/perf/util/svghelper.c:274:
+		fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(32,255,32)\"/>\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6507: FILE: tools/perf/util/svghelper.c:285:
+
+

WARNING:LONG_LINE_STRING: line length of 148 exceeds 100 columns
#6509: FILE: tools/perf/util/svghelper.c:287:
+		fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%4.2f\" style=\"stroke:rgb(32,255,32);stroke-width:0.009\"/>\n",

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#6510: FILE: tools/perf/util/svghelper.c:288:
+			time2pixels(start), row1 * SLOT_MULT + SLOT_HEIGHT,  time2pixels(start), row2 * SLOT_MULT);

WARNING:LONG_LINE_STRING: line length of 148 exceeds 100 columns
#6512: FILE: tools/perf/util/svghelper.c:290:
+		fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%4.2f\" style=\"stroke:rgb(32,255,32);stroke-width:0.009\"/>\n",

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#6513: FILE: tools/perf/util/svghelper.c:291:
+			time2pixels(start), row2 * SLOT_MULT + SLOT_HEIGHT,  time2pixels(start), row1 * SLOT_MULT);

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#6518: FILE: tools/perf/util/svghelper.c:296:
+	fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(32,255,32)\"/>\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6519: FILE: tools/perf/util/svghelper.c:297:
+	fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(32,255,32)\"/>\n",
+			time2pixels(start), height);

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6527: FILE: tools/perf/util/svghelper.c:305:
+	fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(255,128,128)\"/>\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6528: FILE: tools/perf/util/svghelper.c:306:
+	fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(255,128,128)\"/>\n",
+			time2pixels(start), row * SLOT_MULT);

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#6529: FILE: tools/perf/util/svghelper.c:307:
+	fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(255,128,128)\"/>\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6530: FILE: tools/perf/util/svghelper.c:308:
+	fprintf(svgfile, "<circle  cx=\"%4.8f\" cy=\"%4.2f\" r = \"0.01\"  style=\"fill:rgb(255,128,128)\"/>\n",
+			time2pixels(start), row * SLOT_MULT + SLOT_HEIGHT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6539: FILE: tools/perf/util/svghelper.c:317:
+		time2pixels(start), Yslot * SLOT_MULT+SLOT_HEIGHT/2, text);
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6539: FILE: tools/perf/util/svghelper.c:317:
+		time2pixels(start), Yslot * SLOT_MULT+SLOT_HEIGHT/2, text);
 		                                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#6545: FILE: tools/perf/util/svghelper.c:323:
+	double boxsize;
+	boxsize = SLOT_HEIGHT / 2;

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#6549: FILE: tools/perf/util/svghelper.c:327:
+	fprintf(svgfile, "<text transform=\"translate(%4.8f, %4.8f)\" font-size=\"%4.4fpt\">%s</text>\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6559: FILE: tools/perf/util/svghelper.c:337:
+	svg_legenda_box(100,	"Idle","rect.c1");
 	                    	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#6583: FILE: tools/perf/util/svghelper.c:361:
+		double thickness = 0.075;
+		if ((i % 100000000) == 0) {

WARNING:LONG_LINE_STRING: line length of 146 exceeds 100 columns
#6592: FILE: tools/perf/util/svghelper.c:370:
+		fprintf(svgfile, "<line x1=\"%4.8f\" y1=\"%4.2f\" x2=\"%4.8f\" y2=\"%llu\" style=\"stroke:rgb(%i,%i,%i);stroke-width:%1.3f\"/>\n",

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#6593: FILE: tools/perf/util/svghelper.c:371:
+			time2pixels(i), SLOT_MULT/2, time2pixels(i), total_height, color, color, color, thickness);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6593: FILE: tools/perf/util/svghelper.c:371:
+			time2pixels(i), SLOT_MULT/2, time2pixels(i), total_height, color, color, color, thickness);
 			                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6613: FILE: tools/perf/util/svghelper.h:1:
+#ifndef _INCLUDE_GUARD_SVG_HELPER_

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6618: FILE: tools/perf/util/svghelper.h:6:
+extern void open_svg(const char *filename, int cpus, int rows);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6619: FILE: tools/perf/util/svghelper.h:7:
+extern void svg_box(int Yslot, u64 start, u64 end, const char *type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6620: FILE: tools/perf/util/svghelper.h:8:
+extern void svg_sample(int Yslot, int cpu, u64 start, u64 end, const char *type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6621: FILE: tools/perf/util/svghelper.h:9:
+extern void svg_cpu_box(int cpu, u64 max_frequency, u64 turbo_frequency);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6623: FILE: tools/perf/util/svghelper.h:11:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6624: FILE: tools/perf/util/svghelper.h:12:
+extern void svg_process(int cpu, u64 start, u64 end, const char *type, const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6625: FILE: tools/perf/util/svghelper.h:13:
+extern void svg_cstate(int cpu, u64 start, u64 end, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6626: FILE: tools/perf/util/svghelper.h:14:
+extern void svg_pstate(int cpu, u64 start, u64 end, u64 freq);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6628: FILE: tools/perf/util/svghelper.h:16:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6629: FILE: tools/perf/util/svghelper.h:17:
+extern void svg_time_grid(u64 start, u64 end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6630: FILE: tools/perf/util/svghelper.h:18:
+extern void svg_legenda(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6631: FILE: tools/perf/util/svghelper.h:19:
+extern void svg_wakeline(u64 start, int row1, int row2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6632: FILE: tools/perf/util/svghelper.h:20:
+extern void svg_partial_wakeline(u64 start, int row1, int row2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6633: FILE: tools/perf/util/svghelper.h:21:
+extern void svg_interrupt(u64 start, int row);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6634: FILE: tools/perf/util/svghelper.h:22:
+extern void svg_text(int Yslot, u64 start, const char *text);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6635: FILE: tools/perf/util/svghelper.h:23:
+extern void svg_close(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070064.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 27 errors, 180 warnings, 221 checks, 6006 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070064.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
