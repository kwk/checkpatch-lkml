WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#103: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: drivers/input/touchscreen/mc13783_ts.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#134: FILE: drivers/input/touchscreen/mc13783_ts.c:27:
+module_param(sample_tolerance, uint, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/input/touchscreen/mc13783_ts.c:29:
+MODULE_PARM_DESC(sample_tolerance,
+		"If the minimal and maximal value read out for one axis (out "

WARNING:SPLIT_STRING: quoted string split across lines
#137: FILE: drivers/input/touchscreen/mc13783_ts.c:30:
+		"If the minimal and maximal value read out for one axis (out "
+		"of three) differ by this value (default: "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#139: FILE: drivers/input/touchscreen/mc13783_ts.c:32:
+		__stringify(DEFAULT_SAMPLE_TOLERANCE) ") or more, the reading "
+		"is supposed to be wrong and is discarded.  Set to 0 to "

WARNING:SPLIT_STRING: quoted string split across lines
#140: FILE: drivers/input/touchscreen/mc13783_ts.c:33:
+		"is supposed to be wrong and is discarded.  Set to 0 to "
+		"disable this check.");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ ^I^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a0' - possible side-effects?
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ 						\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		if (a1 > a2)						\
+			swap(a1, a2);					\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a0' may be better as '(a0)' to avoid precedence issues
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ 						\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		if (a1 > a2)						\
+			swap(a1, a2);					\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a1' - possible side-effects?
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ 						\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		if (a1 > a2)						\
+			swap(a1, a2);					\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a1' may be better as '(a1)' to avoid precedence issues
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ 						\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		if (a1 > a2)						\
+			swap(a1, a2);					\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a2' - possible side-effects?
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ 						\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		if (a1 > a2)						\
+			swap(a1, a2);					\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a2' may be better as '(a2)' to avoid precedence issues
#167: FILE: drivers/input/touchscreen/mc13783_ts.c:60:
+#define sort3(a0, a1, a2) ({ 						\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		if (a1 > a2)						\
+			swap(a1, a2);					\
+		if (a0 > a1)						\
+			swap(a0, a1);					\
+		})

CHECK:BRACES: braces {} should be used on all arms of this statement
#204: FILE: drivers/input/touchscreen/mc13783_ts.c:97:
+	if (!cr0 || !sample_tolerance ||
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/input/touchscreen/mc13783_ts.c:98:
+	if (!cr0 || !sample_tolerance ||
+			(x2 - x0 < sample_tolerance &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#208: FILE: drivers/input/touchscreen/mc13783_ts.c:101:
+		if (cr0) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/input/touchscreen/mc13783_ts.c:106:
+			dev_dbg(&idev->dev, "report (%d, %d, %d)\n",
+					x1, y1, 0x1000 - cr0);

CHECK:BRACES: Unbalanced braces around else statement
#215: FILE: drivers/input/touchscreen/mc13783_ts.c:108:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/input/touchscreen/mc13783_ts.c:112:
+		input_report_abs(idev, ABS_PRESSURE,
+				cr0 ? 0x1000 - cr0 : cr0);

CHECK:BRACES: Unbalanced braces around else statement
#222: FILE: drivers/input/touchscreen/mc13783_ts.c:115:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/input/touchscreen/mc13783_ts.c:127:
+	if (mc13783_adc_do_conversion(priv->mc13783,
+				mode, channel, priv->sample) == 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/input/touchscreen/mc13783_ts.c:141:
+	ret = mc13783_irq_request(priv->mc13783, MC13783_IRQ_TS,
+		mc13783_ts_handler, MC13783_TS_NAME, priv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/input/touchscreen/mc13783_ts.c:146:
+	ret = mc13783_reg_rmw(priv->mc13783, MC13783_ADC0,
+			MC13783_ADC0_TSMOD_MASK, MC13783_ADC0_TSMOD0);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#329: FILE: drivers/input/touchscreen/mc13783_ts.c:222:
+static int __devexit mc13783_ts_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034321.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 17 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034321.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
