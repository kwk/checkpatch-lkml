CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: arch/x86/kvm/mmu.c:986:
+int mmu_pages_add(struct kvm_mmu_pages *pvec, struct kvm_mmu_page *sp,
+		   int idx)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: arch/x86/kvm/mmu.c:991:
+		for (i=0; i < pvec->nr; i++)
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: arch/x86/kvm/mmu.c:1002:
+static int __mmu_unsync_walk(struct kvm_mmu_page *sp,
+			   struct kvm_mmu_pages *pvec)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: arch/x86/kvm/mmu.c:1098:
+	struct kvm_mmu_page *parent[PT64_ROOT_LEVEL-1];
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#180: FILE: arch/x86/kvm/mmu.c:1099:
+	unsigned int idx[PT64_ROOT_LEVEL-1];
 	                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvec' - possible side-effects?
#184: FILE: arch/x86/kvm/mmu.c:1102:
+#define for_each_sp(pvec, sp, parents, i)			\
+		for (i = mmu_pages_next(&pvec, &parents, -1),	\
+			sp = pvec.page[i].sp;			\
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
+			i = mmu_pages_next(&pvec, &parents, i))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pvec' may be better as '(pvec)' to avoid precedence issues
#184: FILE: arch/x86/kvm/mmu.c:1102:
+#define for_each_sp(pvec, sp, parents, i)			\
+		for (i = mmu_pages_next(&pvec, &parents, -1),	\
+			sp = pvec.page[i].sp;			\
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
+			i = mmu_pages_next(&pvec, &parents, i))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sp' - possible side-effects?
#184: FILE: arch/x86/kvm/mmu.c:1102:
+#define for_each_sp(pvec, sp, parents, i)			\
+		for (i = mmu_pages_next(&pvec, &parents, -1),	\
+			sp = pvec.page[i].sp;			\
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
+			i = mmu_pages_next(&pvec, &parents, i))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'parents' - possible side-effects?
#184: FILE: arch/x86/kvm/mmu.c:1102:
+#define for_each_sp(pvec, sp, parents, i)			\
+		for (i = mmu_pages_next(&pvec, &parents, -1),	\
+			sp = pvec.page[i].sp;			\
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
+			i = mmu_pages_next(&pvec, &parents, i))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'parents' may be better as '(parents)' to avoid precedence issues
#184: FILE: arch/x86/kvm/mmu.c:1102:
+#define for_each_sp(pvec, sp, parents, i)			\
+		for (i = mmu_pages_next(&pvec, &parents, -1),	\
+			sp = pvec.page[i].sp;			\
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
+			i = mmu_pages_next(&pvec, &parents, i))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#184: FILE: arch/x86/kvm/mmu.c:1102:
+#define for_each_sp(pvec, sp, parents, i)			\
+		for (i = mmu_pages_next(&pvec, &parents, -1),	\
+			sp = pvec.page[i].sp;			\
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
+			i = mmu_pages_next(&pvec, &parents, i))

ERROR:SPACING: space required after that ';' (ctx:VxV)
#187: FILE: arch/x86/kvm/mmu.c:1105:
+			i < pvec.nr && ({ sp = pvec.page[i].sp; 1;});	\
 			                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#198: FILE: arch/x86/kvm/mmu.c:1113:
+	for (n = i+1; n < pvec->nr; n++) {
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#208: FILE: arch/x86/kvm/mmu.c:1121:
+		parents->parent[sp->role.level-2] = sp;
 		                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#209: FILE: arch/x86/kvm/mmu.c:1122:
+		parents->idx[sp->role.level-1] = pvec->page[n].idx;
 		                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#236: FILE: arch/x86/kvm/mmu.c:1144:
+	} while (level < PT64_ROOT_LEVEL-1 && !sp->unsync_children);
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#243: FILE: arch/x86/kvm/mmu.c:1151:
+	parents->parent[parent->role.level-1] = NULL;
 	                                  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000192716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 0 warnings, 15 checks, 268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000192716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
