WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
On Sun, Nov 8, 2009 at 5:05 PM, Andres Salomon <dilinger@collabora.co.uk> wrote:

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#40: 
> See comment below.  BTW, how does this affect performance on LXs?
                     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#47: 
>> --- a/arch/x86/kernel/Makefile        2009-11-06 15:06:52.246223989
                                  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#48: 
>> +0100 +++ b/arch/x86/kernel/Makefile  2009-11-06
                                        ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#50: 
>>  obj-$(CONFIG_HPET_TIMER)     += hpet.o
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#52: 
>>  obj-$(CONFIG_K8_NB)          += k8.o
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#53: 
>> -obj-$(CONFIG_MGEODE_LX)              += geode_32.o mfgpt_32.o
                            ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#54: 
>> +obj-$(CONFIG_MGEODE_LX)              += geode_32.o mfgpt_32.o
                            ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#55: 
>> nopl_emu.o obj-$(CONFIG_DEBUG_RODATA_TEST)    += test_rodata.o
                                              ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#56: 
>>  obj-$(CONFIG_DEBUG_NX_TEST)  += test_nx.o
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#58: 
>> --- a/arch/x86/kernel/cpu/amd.c       2009-11-06 15:06:52.254223805
                                   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#61: 
>>       }
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#63: 
>>       if (c->x86_model == 10) {
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#64: 
>> -             /* AMD Geode LX is model 10 */
     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#65: 
>> -             /* placeholder for any needed mods */
     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#66: 
>> +             /* Geode only lacks the NOPL instruction to be i686,
     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#67: 
>> +                but we can emulate it in the exception handler
     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#68: 
>> +                and promote it to a class 6 cpu */
     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#69: 
>> +             boot_cpu_data.x86 = 6;
     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#70: 
>>               return;
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#71: 
>>       }
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#74: 
> not breaking things that check it.  For example,
                                     ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#76: 
> boot_cpu_data.x86 to be 5.  Please be sure to update all these places
                             ^

WARNING:TYPO_SPELLING: 'befor' may be misspelled - perhaps 'before'?
#80: 
Right, but what if is_geode_lx() is called befor the x86.id change takes effect?
                                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#83: 
--- a/arch/x86/include/asm/geode.h 2009-11-08 19:13:43.531117343 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/x86/include/asm/geode.h:180:
+               (boot_cpu_data.x86 == 5 || boot_cpu_data.x86 == 6) &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/x86/include/asm/geode.h:180:
+               (boot_cpu_data.x86 == 5 || boot_cpu_data.x86 == 6) &&$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050584.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 3 warnings, 22 checks, 7 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050584.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
