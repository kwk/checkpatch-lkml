WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: arch/x86/include/asm/es7000/mpparse.h:13:
+extern int mps_oem_check(struct mpc_table *mpc, char *oem, char *productid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:5:
+extern int mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc_table *' should also have an identifier name
#239: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:5:
+extern int mps_oem_check(struct mpc_table *, char *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#239: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:5:
+extern int mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#239: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:5:
+extern int mps_oem_check(struct mpc_table *, char *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:7:
+extern int acpi_madt_oem_check(char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#242: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:7:
+extern int acpi_madt_oem_check(char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#242: FILE: arch/x86/include/asm/mach-generic/mach_mpparse.h:7:
+extern int acpi_madt_oem_check(char *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: arch/x86/include/asm/mach-generic/mach_mpspec.h:10:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc_table *' should also have an identifier name
#255: FILE: arch/x86/include/asm/mach-generic/mach_mpspec.h:10:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#255: FILE: arch/x86/include/asm/mach-generic/mach_mpspec.h:10:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#255: FILE: arch/x86/include/asm/mach-generic/mach_mpspec.h:10:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: arch/x86/include/asm/numaq/mpparse.h:4:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc_table *' should also have an identifier name
#410: FILE: arch/x86/include/asm/numaq/mpparse.h:4:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#410: FILE: arch/x86/include/asm/numaq/mpparse.h:4:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#410: FILE: arch/x86/include/asm/numaq/mpparse.h:4:
+extern void numaq_mps_oem_check(struct mpc_table *, char *, char *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: arch/x86/include/asm/setup.h:46:
+	void (*smp_read_mpc_oem)(struct mpc_oemtable *oemtable,
                                     unsigned short oemsize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: arch/x86/include/asm/summit/mpparse.h:15:
+static inline int mps_oem_check(struct mpc_table *mpc, char *oem,
 		char *productid)

CHECK:BRACES: Unbalanced braces around else statement
#508: FILE: arch/x86/kernel/apic.c:2095:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#630: FILE: arch/x86/kernel/i8259.c:326:
+	   to 0x20-0x27 on i386 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#705: FILE: arch/x86/kernel/irq_32.c:96:
+	isp = (u32 *) ((char *)irqctx + sizeof(*irqctx));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#714: FILE: arch/x86/kernel/irq_32.c:140:
+	irqctx = (union irq_ctx *) &softirq_stack[cpu*THREAD_SIZE];

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#714: FILE: arch/x86/kernel/irq_32.c:140:
+	irqctx = (union irq_ctx *) &softirq_stack[cpu*THREAD_SIZE];
 	                                             ^

CHECK:SPACING: No space is necessary after a cast
#732: FILE: arch/x86/kernel/irq_32.c:177:
+		isp = (u32 *) ((char *)irqctx + sizeof(*irqctx));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#913: FILE: arch/x86/kernel/mpparse.c:71:
+	printk(KERN_INFO "Processor #%d%s\n", m->apicid, bootup_cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1154: FILE: arch/x86/kernel/mpparse.c:277:
+	printk(KERN_INFO "MPTABLE: APIC at: 0x%X\n", mpc->lapic);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1160: FILE: arch/x86/kernel/mpparse.c:282:
+static int __init smp_read_mpc(struct mpc_table *mpc, unsigned early)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1179: FILE: arch/x86/kernel/mpparse.c:314:
+		struct mpc_oemtable *oem_table = (void *)(long)mpc->oemptr;
+		x86_quirks->smp_read_mpc_oem(oem_table, mpc->oemsize);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <mp_ExtINT>
#1302: FILE: arch/x86/kernel/mpparse.c:474:
+	intsrc.irqtype = mp_ExtINT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1480: FILE: arch/x86/kernel/mpparse.c:839:
+static int  __init replace_intsrc_all(struct mpc_table *mpc,
 					unsigned long mpc_new_phys,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1489: FILE: arch/x86/kernel/mpparse.c:850:
+	printk(KERN_INFO "mpc_length %x\n", mpc->length);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1563: FILE: arch/x86/kernel/mpparse.c:937:
+			struct mpc_intsrc *m = (struct mpc_intsrc *)mpt;
+			count += sizeof(struct mpc_intsrc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1901: FILE: arch/x86/kernel/time_32.c:109:
+		u8 irq_v = inb_p(0x61);		/* read the current state */
+		outb_p(irq_v | 0x80, 0x61);	/* reset the IRQ */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2098: FILE: arch/x86/mm/k8topology_64.c:213:
+		e820_register_active_regions(i,
+				nodes[i].start >> PAGE_SHIFT,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000184633.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 15 checks, 1706 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000184633.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
