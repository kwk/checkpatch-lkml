WARNING:TYPO_SPELLING: 'comparision' may be misspelled - perhaps 'comparison'?
#12: 
Subject: LZO patch comparision
                   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#69: FILE: lzo1x_compress.c:9:
My version has too many includes. Is compiler.h needed?

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#77: FILE: lzo1x_compress.c:12:
+_lzo1x_1_do_compress(const unsigned char *in , size_t in_len,
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: lzo1x_compress.c:13:
+               unsigned char *out, size_t *out_len, void *wrkmem)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: lzo1x_compress.c:13:
+_lzo1x_1_do_compress(const unsigned char *in , size_t in_len,
+               unsigned char *out, size_t *out_len, void *wrkmem)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: lzo1x_compress.c:13:
+               unsigned char *out, size_t *out_len, void *wrkmem)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: lzo1x_compress.c:19:
+       const unsigned char ** const dict = wrkmem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: lzo1x_compress.c:20:
+       const unsigned char *ip = in, *ii = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: lzo1x_compress.c:21:
+       const unsigned char *end, *m, *m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: lzo1x_compress.c:22:
+       size_t m_off, m_len, dindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: lzo1x_compress.c:23:
+       unsigned char *op = out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: lzo1x_compress.c:29:
+       for (;;) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#113: FILE: lzo1x_compress.c:29:
+       for (;;) {
+               dindex = DMS((0x21 * DX3(ip,5,5,6)) >> 5, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: lzo1x_compress.c:30:
+               dindex = DMS((0x21 * DX3(ip,5,5,6)) >> 5, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: lzo1x_compress.c:30:
+               dindex = DMS((0x21 * DX3(ip,5,5,6)) >> 5, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: lzo1x_compress.c:30:
+               dindex = DMS((0x21 * DX3(ip,5,5,6)) >> 5, 0);
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: lzo1x_compress.c:30:
+               dindex = DMS((0x21 * DX3(ip,5,5,6)) >> 5, 0);
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: lzo1x_compress.c:30:
+               dindex = DMS((0x21 * DX3(ip,5,5,6)) >> 5, 0);
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: lzo1x_compress.c:34:
+               if (m_pos < in)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: lzo1x_compress.c:34:
+               if (m_pos < in)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#122: FILE: lzo1x_compress.c:34:
+               if (m_pos < in)
+                       goto literal;

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: lzo1x_compress.c:35:
+                       goto literal;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: lzo1x_compress.c:35:
+                       goto literal;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: lzo1x_compress.c:37:
+               m_off = ip - m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: lzo1x_compress.c:37:
+               m_off = ip - m_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: lzo1x_compress.c:38:
+               if (m_off == 0 || m_off > M4_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: lzo1x_compress.c:38:
+               if (m_off == 0 || m_off > M4_MAX_OFFSET)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#126: FILE: lzo1x_compress.c:38:
+               if (m_off == 0 || m_off > M4_MAX_OFFSET)
                        goto literal;

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: lzo1x_compress.c:45:
+               dindex = (dindex & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: lzo1x_compress.c:45:
+               dindex = (dindex & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: lzo1x_compress.c:49:
+               if (m_pos < in)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: lzo1x_compress.c:49:
+               if (m_pos < in)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#143: FILE: lzo1x_compress.c:49:
+               if (m_pos < in)
+                       goto literal;

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: lzo1x_compress.c:50:
+                       goto literal;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: lzo1x_compress.c:50:
+                       goto literal;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: lzo1x_compress.c:52:
+               m_off = ip - m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: lzo1x_compress.c:52:
+               m_off = ip - m_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: lzo1x_compress.c:53:
+               if (m_off == 0 || m_off > M4_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: lzo1x_compress.c:53:
+               if (m_off == 0 || m_off > M4_MAX_OFFSET)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#147: FILE: lzo1x_compress.c:53:
+               if (m_off == 0 || m_off > M4_MAX_OFFSET)
                        goto literal;

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: lzo1x_compress.c:83:
+               if (ip != ii) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: lzo1x_compress.c:83:
+               if (ip != ii) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 1)
#163: FILE: lzo1x_compress.c:83:
+               if (ip != ii) {


ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: lzo1x_compress.c:86:
+                       size_t t = ip - ii;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: lzo1x_compress.c:86:
+                       size_t t = ip - ii;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: lzo1x_compress.c:89:
+                       if (t <= 3) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: lzo1x_compress.c:89:
+                       if (t <= 3) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#174: FILE: lzo1x_compress.c:89:
+                       if (t <= 3) {
+                               op[-2] |= t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: lzo1x_compress.c:90:
+                               op[-2] |= t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: lzo1x_compress.c:90:
+                               op[-2] |= t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: lzo1x_compress.c:91:
+                       } else if (t <= 18) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: lzo1x_compress.c:91:
+                       } else if (t <= 18) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 1)
#178: FILE: lzo1x_compress.c:91:
+                       } else if (t <= 18) {


WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#188: FILE: lzo1x_compress.c:94:
                } else {
+                       end = in_end;

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: lzo1x_compress.c:95:
+                       end = in_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: lzo1x_compress.c:95:
+                       end = in_end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: lzo1x_compress.c:96:
+                       m = m_pos + M2_MAX_LEN + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: lzo1x_compress.c:96:
+                       m = m_pos + M2_MAX_LEN + 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: lzo1x_compress.c:101:
+                       m_len = ip - ii;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: lzo1x_compress.c:101:
+                       m_len = ip - ii;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: lzo1x_compress.c:168:
+       *out_len = op - out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: lzo1x_compress.c:169:
+       return in_end - ii;$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#223: FILE: lzo1x_compress.c:172:
+int lzo1x_1_compress(const unsigned char *in , size_t in_len,
                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: lzo1x_compress.c:173:
+int lzo1x_1_compress(const unsigned char *in , size_t in_len,
                unsigned char *out, size_t *out_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: lzo1x_compress.c:174:
+                       void *wrkmem )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: lzo1x_compress.c:174:
+                       void *wrkmem )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#226: FILE: lzo1x_compress.c:174:
+                       void *wrkmem )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: lzo1x_compress.c:177:
+       const unsigned char *ii;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: lzo1x_compress.c:183:
+       if (unlikely(in_len <= M2_MAX_LEN + 5)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#240: FILE: lzo1x_compress.c:183:
+       if (unlikely(in_len <= M2_MAX_LEN + 5)) {
                t = in_len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: lzo1x_compress.c:185:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#244: FILE: lzo1x_compress.c:185:
+       } else {
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: lzo1x_compress.c:186:
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: lzo1x_compress.c:186:
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: lzo1x_compress.c:186:
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: lzo1x_compress.c:186:
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: lzo1x_compress.c:186:
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: lzo1x_compress.c:186:
+               t = _lzo1x_1_do_compress(in,in_len,op,out_len,wrkmem);
                                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: lzo1x_compress.c:195:
+       *out_len = op - out;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#264: FILE: lzo1x_compress.c:201:
+EXPORT_SYMBOL_GPL(lzo1x_1_compress);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ip_end' may be better as '(ip_end)' to avoid precedence issues
#286: FILE: lzo1x_decompress.c:214:
+#define HAVE_IP_OR(x, ip_end, ip) ((ip_end - ip) < (size_t)(x))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ip' may be better as '(ip)' to avoid precedence issues
#286: FILE: lzo1x_decompress.c:214:
+#define HAVE_IP_OR(x, ip_end, ip) ((ip_end - ip) < (size_t)(x))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'op_end' may be better as '(op_end)' to avoid precedence issues
#287: FILE: lzo1x_decompress.c:215:
+#define HAVE_OP_OR(x, op_end, op) ((op_end - op) < (size_t)(x))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'op' may be better as '(op)' to avoid precedence issues
#287: FILE: lzo1x_decompress.c:215:
+#define HAVE_OP_OR(x, op_end, op) ((op_end - op) < (size_t)(x))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#288: FILE: lzo1x_decompress.c:216:
+#define HAVE_LB_OR(m_pos, out, op) (m_pos < out || m_pos >= op)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#288: FILE: lzo1x_decompress.c:216:
+#define HAVE_LB_OR(m_pos, out, op) (m_pos < out || m_pos >= op)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'out' may be better as '(out)' to avoid precedence issues
#288: FILE: lzo1x_decompress.c:216:
+#define HAVE_LB_OR(m_pos, out, op) (m_pos < out || m_pos >= op)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'op' may be better as '(op)' to avoid precedence issues
#288: FILE: lzo1x_decompress.c:216:
+#define HAVE_LB_OR(m_pos, out, op) (m_pos < out || m_pos >= op)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: lzo1x_decompress.c:220:
+#define COPY4(dst,src) *(u32 *)(dst) = *(const u32 *)(src)
                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#297: FILE: lzo1x_decompress.c:220:
+#define COPY4(dst,src) *(u32 *)(dst) = *(const u32 *)(src)

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: lzo1x_decompress.c:232:
+               } while (ip < ip_end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: lzo1x_decompress.c:232:
+               } while (ip < ip_end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: lzo1x_decompress.c:237:
+       *out_len = op - out;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#366: FILE: lzo1x_decompress.c:241:
+EXPORT_SYMBOL_GPL(lzo1x_decompress_safe);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#422: FILE: lzodefs.h:58:
+#define _DINDEX(dv,p)  (((0x9f5f * (dv))) >> 5)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: lzodefs.h:59:
+#define DINDEX(dv,p)   ((size_t)((_DINDEX(dv,p)) & D_MASK))
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: lzodefs.h:59:
+#define DINDEX(dv,p)   ((size_t)((_DINDEX(dv,p)) & D_MASK))
                                             ^

CHECK:SPACING: No space is necessary after a cast
#427: FILE: lzodefs.h:62:
+#define DMS(v,s)	((size_t) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#427: FILE: lzodefs.h:62:
+#define DMS(v,s)	((size_t) (((v) & (D_MASK >> (s))) << (s)))
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#427: FILE: lzodefs.h:62:
+#define DMS(v,s)	((size_t) (((v) & (D_MASK >> (s))) << (s)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421467.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 39 errors, 49 warnings, 12 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421467.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
