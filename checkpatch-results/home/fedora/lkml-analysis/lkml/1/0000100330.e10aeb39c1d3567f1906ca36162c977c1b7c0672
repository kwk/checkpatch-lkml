WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
Gitweb:     http://git.kernel.org/tip/a1a499a39911fcfecbebaba1f38588088909f918

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: arch/x86/kernel/cpu/mtrr/generic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#101: FILE: arch/x86/kernel/cpu/mtrr/generic.c:3:
+ * because MTRRs can span upto 40 bits (36bits on most modern x86)
                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cpufeature.h> instead of <asm/cpufeature.h>
#118: FILE: arch/x86/kernel/cpu/mtrr/generic.c:14:
+#include <asm/cpufeature.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix64K_00000>
#138: FILE: arch/x86/kernel/cpu/mtrr/generic.c:29:
+	{ MSR_MTRRfix64K_00000, 1 }, /* one   64k MTRR  */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix16K_80000>
#139: FILE: arch/x86/kernel/cpu/mtrr/generic.c:30:
+	{ MSR_MTRRfix16K_80000, 2 }, /* two   16k MTRRs */

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix4K_C0000>
#140: FILE: arch/x86/kernel/cpu/mtrr/generic.c:31:
+	{ MSR_MTRRfix4K_C0000,  8 }, /* eight  4k MTRRs */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#245: FILE: arch/x86/kernel/cpu/mtrr/generic.c:237:
+print_fixed(unsigned base, unsigned step, const mtrr_type *types)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#245: FILE: arch/x86/kernel/cpu/mtrr/generic.c:237:
+print_fixed(unsigned base, unsigned step, const mtrr_type *types)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#314: FILE: arch/x86/kernel/cpu/mtrr/generic.c:303:
+		pr_debug("TOM2: %016llx aka %lldM\n", mtrr_tom2, mtrr_tom2>>20);
 		                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#325: FILE: arch/x86/kernel/cpu/mtrr/generic.c:311:
+	unsigned lo, dummy;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#474: FILE: arch/x86/kernel/cpu/mtrr/generic.c:519:
 		(hi & (size_and_mask >> (32 - PAGE_SHIFT)))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#504: FILE: arch/x86/kernel/cpu/mtrr/generic.c:562:
 	    || ((deftype_lo & 0xc00) >> 10) != mtrr_state.enabled) {
+

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#527: FILE: arch/x86/kernel/cpu/mtrr/generic.c:580:
+ * are reenabled after post_set() has been called.
        ^^^^^^^^^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#690: FILE: arch/x86/kernel/cpu/mtrr/generic.c:734:
+		pr_warning("mtrr: base(0x%lx000) is not aligned on a size(0x%lx000) boundary\n", base, size);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100330.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 7 checks, 610 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100330.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
