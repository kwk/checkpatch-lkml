WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: arch/ia64/kvm/mmio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: arch/ia64/kvm/mmio.c:21:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ofst' may be better as '(ofst)' to avoid precedence issues
#81: FILE: arch/ia64/kvm/mmio.c:38:
+#define PIB_LOW_HALF(ofst)     !(ofst & (1 << 20))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: arch/ia64/kvm/mmio.c:46:
+static void vlsapic_write_ipi(struct kvm_vcpu *vcpu,
+					uint64_t addr, uint64_t data)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#89: FILE: arch/ia64/kvm/mmio.c:46:
+					uint64_t addr, uint64_t data)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#103: FILE: arch/ia64/kvm/mmio.c:60:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: arch/ia64/kvm/mmio.c:63:
+void lsapic_write(struct kvm_vcpu *v, unsigned long addr,
+			unsigned long length, unsigned long val)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#120: FILE: arch/ia64/kvm/mmio.c:77:
+			/*panic_domain(NULL,
+			"Undefined write on PIB XTP\n");*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: arch/ia64/kvm/mmio.c:77:
+			"Undefined write on PIB XTP\n");*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#129: FILE: arch/ia64/kvm/mmio.c:86:
+				/*panic_domain(NULL,
+				"Can't LHF write with size %ld!\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#130: FILE: arch/ia64/kvm/mmio.c:87:
+				length);*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#135: FILE: arch/ia64/kvm/mmio.c:92:
+		} else {   /*	upper half
+				printk("IPI-UHF write %lx\n",addr);*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#135: FILE: arch/ia64/kvm/mmio.c:92:
+				printk("IPI-UHF write %lx\n",addr);*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: arch/ia64/kvm/mmio.c:100:
+unsigned long lsapic_read(struct kvm_vcpu *v, unsigned long addr,
+		unsigned long length)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#145: FILE: arch/ia64/kvm/mmio.c:102:
+	uint64_t result = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#164: FILE: arch/ia64/kvm/mmio.c:121:
+			/*panic_domain(NULL,
+			"Undefined read on PIB XTP\n");*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#164: FILE: arch/ia64/kvm/mmio.c:121:
+			"Undefined read on PIB XTP\n");*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/ia64/kvm/mmio.c:133:
+static void mmio_access(struct kvm_vcpu *vcpu, u64 src_pa, u64 *dest,
+					u16 s, int ma, int dir)

WARNING:TYPO_SPELLING: 'acces' may be misspelled - perhaps 'access'?
#186: FILE: arch/ia64/kvm/mmio.c:143:
+	/*Intercept the acces for PIB range*/
 	                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#203: FILE: arch/ia64/kvm/mmio.c:160:
+	if (p->u.ioreq.state == STATE_IORESP_READY) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#206: FILE: arch/ia64/kvm/mmio.c:163:
+	} else

WARNING:SPACING: space prohibited before semicolon
#210: FILE: arch/ia64/kvm/mmio.c:167:
+	return ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#211: FILE: arch/ia64/kvm/mmio.c:168:
+	return ;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#214: FILE: arch/ia64/kvm/mmio.c:171:
+/*
+   dir 1: read 0:write

WARNING:TYPO_SPELLING: 'interger' may be misspelled - perhaps 'integer'?
#217: FILE: arch/ia64/kvm/mmio.c:174:
+#define SL_INTEGER	0	/* store/load interger*/
                   	 	              ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: arch/ia64/kvm/mmio.c:175:
+#define SL_FLOATING^I1     ^I/* store/load floating*/$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->cr_ipsr
#237: FILE: arch/ia64/kvm/mmio.c:194:
+	slot = ((struct ia64_psr *)&(regs->cr_ipsr))->ri;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#238: FILE: arch/ia64/kvm/mmio.c:195:
+	if (!slot)
[...]
+	else if (slot == 1) {
[...]
+	} else if (slot == 2)
[...]

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#271: FILE: arch/ia64/kvm/mmio.c:228:
+		size = (inst.M3.x6&0x3);
 		                  ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#291: FILE: arch/ia64/kvm/mmio.c:248:
+
+		}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#293: FILE: arch/ia64/kvm/mmio.c:250:
+	} else if (inst.M9.major == 6 && inst.M9.x6 == 0x3B
+				&& inst.M9.m == 0 && inst.M9.x == 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#326: FILE: arch/ia64/kvm/mmio.c:283:
+		struct ia64_fpreg v;
+		inst_type = SL_FLOATING;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#337: FILE: arch/ia64/kvm/mmio.c:294:
+	} else if (inst.M15.major == 7 && inst.M15.x6 >= 0x2c
+			&& inst.M15.x6 <= 0x2f) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#347: FILE: arch/ia64/kvm/mmio.c:304:
+	} else if (inst.M12.major == 6 && inst.M12.m == 1
+			&& inst.M12.x == 1 && inst.M12.x6 == 1) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#367: FILE: arch/ia64/kvm/mmio.c:324:
+		return;
+	} else {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#382: FILE: arch/ia64/kvm/mmio.c:339:
+
+	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294394.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 18 warnings, 18 checks, 341 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294394.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
