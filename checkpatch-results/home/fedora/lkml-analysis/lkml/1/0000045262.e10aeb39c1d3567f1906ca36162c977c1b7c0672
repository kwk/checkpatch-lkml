WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#29: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#34: FILE: fs/logfs/super.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#35: FILE: fs/logfs/super.c:2:
+ * fs/logfs/super.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#65: FILE: fs/logfs/super.c:32:
+	printk(KERN_INFO"Logfs: Using emergency page\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#65: FILE: fs/logfs/super.c:32:
+	printk(KERN_INFO"Logfs: Using emergency page\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#70: FILE: fs/logfs/super.c:37:
+		printk(KERN_EMERG"Logfs: Error reading emergency page\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#70: FILE: fs/logfs/super.c:37:
+		printk(KERN_EMERG"Logfs: Error reading emergency page\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#92: FILE: fs/logfs/super.c:59:
+		printk("%3x: %6x %8x", segno, be32_to_cpu(se.ec_level),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: fs/logfs/super.c:60:
+		printk("%3x: %6x %8x", segno, be32_to_cpu(se.ec_level),
+				be32_to_cpu(se.valid));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#96: FILE: fs/logfs/super.c:63:
+			printk(" %6x %8x", be32_to_cpu(se.ec_level),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: fs/logfs/super.c:64:
+			printk(" %6x %8x", be32_to_cpu(se.ec_level),
+					be32_to_cpu(se.valid));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: fs/logfs/super.c:68:
+			printk(" %6x %8x", be32_to_cpu(se.ec_level),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: fs/logfs/super.c:69:
+			printk(" %6x %8x", be32_to_cpu(se.ec_level),
+					be32_to_cpu(se.valid));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: fs/logfs/super.c:73:
+			printk(" %6x %8x", be32_to_cpu(se.ec_level),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: fs/logfs/super.c:74:
+			printk(" %6x %8x", be32_to_cpu(se.ec_level),
+					be32_to_cpu(se.valid));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: fs/logfs/super.c:76:
+		printk("\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: fs/logfs/super.c:106:
+	const unsigned char *p = s;
+	while (n-- != 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: fs/logfs/super.c:155:
+static void set_segment_header(struct logfs_segment_header *sh, u8 type,
+		u8 level, u32 segno, u32 ec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: fs/logfs/super.c:167:
+static void logfs_write_ds(struct super_block *sb, struct logfs_disk_super *ds,
+		u32 segno, u32 ec)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#219: FILE: fs/logfs/super.c:186:
+	ds->ds_feature_ro_compat= cpu_to_be64(super->s_feature_ro_compat);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: fs/logfs/super.c:195:
+	ds->ds_crc = logfs_crc32(ds, sizeof(*ds),
+			LOGFS_SEGMENT_HEADERSIZE + 12);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: fs/logfs/super.c:199:
+static int write_one_sb(struct super_block *sb,
+		struct page *(*find_sb)(struct super_block *sb, u64 *ofs))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#304: FILE: fs/logfs/super.c:271:
+		printk(KERN_INFO"First superblock is invalid - fixing.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#304: FILE: fs/logfs/super.c:271:
+		printk(KERN_INFO"First superblock is invalid - fixing.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#308: FILE: fs/logfs/super.c:275:
+		printk(KERN_INFO"Last superblock is invalid - fixing.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#308: FILE: fs/logfs/super.c:275:
+		printk(KERN_INFO"Last superblock is invalid - fixing.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#312: FILE: fs/logfs/super.c:279:
+		printk(KERN_INFO"Superblocks don't match - fixing.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#312: FILE: fs/logfs/super.c:279:
+		printk(KERN_INFO"Superblocks don't match - fixing.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#316: FILE: fs/logfs/super.c:283:
+	 * check them before?!? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#317: FILE: fs/logfs/super.c:284:
+	BUG_ON(!valid0 && !valid1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: fs/logfs/super.c:310:
+	 * for rw-mounts, if necessary */

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#375: FILE: fs/logfs/super.c:342:
+	iput(rootdir);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#377: FILE: fs/logfs/super.c:344:
+	iput(logfs_super(sb)->s_master_inode);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: fs/logfs/super.c:357:
+	if (ds->ds_crc != logfs_crc32(ds, sizeof(*ds),
+				LOGFS_SEGMENT_HEADERSIZE + 12))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#528: FILE: fs/logfs/super.c:495:
+	BUG_ON(super->s_dirty_used_bytes || super->s_dirty_free_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: fs/logfs/super.c:509:
+int logfs_get_sb_device(struct file_system_type *type, int flags,
+		struct mtd_info *mtd, struct block_device *bdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: fs/logfs/super.c:569:
+static int logfs_get_sb(struct file_system_type *type, int flags,
+		const char *devname, void *data, struct vfsmount *mnt)

WARNING:LINE_SPACING: Missing a blank line after declarations
#613: FILE: fs/logfs/super.c:580:
+		char *garbage;
+		mtdnr = simple_strtoul(devname+3, &garbage, 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#613: FILE: fs/logfs/super.c:580:
+		mtdnr = simple_strtoul(devname+3, &garbage, 0);
 		                              ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#613: FILE: fs/logfs/super.c:580:
+		mtdnr = simple_strtoul(devname+3, &garbage, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045262.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 23 warnings, 17 checks, 634 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045262.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
