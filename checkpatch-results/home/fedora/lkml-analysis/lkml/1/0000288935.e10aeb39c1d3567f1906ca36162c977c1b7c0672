WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
 drivers/ide/cris/ide-cris.c       | 1086 -------------------------------------

WARNING:TYPO_SPELLING: 'Smal' may be misspelled - perhaps 'Small'?
#95: 
Alexander Smal (1):
          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#335: FILE: drivers/ide/arm/palm_bk3710.c:342:
 static const struct ide_port_info __devinitdata palm_bk3710_port_info = {

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#355: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#1650: FILE: drivers/ide/ide-cd.c:620:
+		xf(drive, NULL, &dum, sizeof(dum));
 		                 ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#1650: FILE: drivers/ide/ide-cd.c:620:
+		xf(drive, NULL, &dum, sizeof(dum));
 		                             ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#1659: FILE: drivers/ide/ide-cd.c:630:
+		drive->hwif->input_data(drive, NULL, dum, sizeof(dum));
 		                                     ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#1659: FILE: drivers/ide/ide-cd.c:630:
+		drive->hwif->input_data(drive, NULL, dum, sizeof(dum));
 		                                                 ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2100: FILE: drivers/ide/ide-iops.c:161:
+		tf_outb((tf->device & HIHI) | drive->select.all,
+			 io_ports->device_addr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2202: FILE: drivers/ide/ide-iops.c:256:
+		unsigned long uninitialized_var(flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'flags' should also have an identifier name
#2202: FILE: drivers/ide/ide-iops.c:256:
+		unsigned long uninitialized_var(flags);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2226: FILE: drivers/ide/ide-iops.c:274:
+				__ide_mm_insw((void __iomem *)data_addr,
+						(u8 *)buf + (len & ~3), 1);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2254: FILE: drivers/ide/ide-iops.c:299:
+		unsigned long uninitialized_var(flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'flags' should also have an identifier name
#2254: FILE: drivers/ide/ide-iops.c:299:
+		unsigned long uninitialized_var(flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2314: FILE: drivers/ide/ide-iops.c:317:
+				__ide_mm_outsw((void __iomem *)data_addr,
+						 (u8 *)buf + (len & ~3), 1);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2349: FILE: drivers/ide/ide-iops.c:628:
+	{ "TSSTcorp CDDVDW SH-S202H"	, "SB00"	},
 	                            	^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2350: FILE: drivers/ide/ide-iops.c:629:
+	{ "TSSTcorp CDDVDW SH-S202H"	, "SB01"	},
 	                            	^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2863: FILE: drivers/ide/pci/ns87415.c:108:
 static void __devinit superio_ide_init_iops (struct hwif_s *hwif)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2984: FILE: drivers/ide/pci/scc_pata.c:329:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#3005: FILE: drivers/ide/pci/scc_pata.c:350:
+	wmb();

CHECK:BRACES: braces {} should be used on all arms of this statement
#3123: FILE: drivers/ide/pci/scc_pata.c:747:
+	if (drive->io_32bit) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#3128: FILE: drivers/ide/pci/scc_pata.c:752:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#3139: FILE: drivers/ide/pci/scc_pata.c:763:
+	if (drive->io_32bit) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3144: FILE: drivers/ide/pci/scc_pata.c:768:
+	} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3420: FILE: drivers/ide/pci/siimage.c:205:
+^Idefault: ^I/* Disabled ? */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3534: FILE: drivers/ide/pci/siimage.c:299:
+	scsc  = sil_ioread8 (dev, base + (hwif->mmio ? 0x4A : 0x8A));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3535: FILE: drivers/ide/pci/siimage.c:300:
+	mode  = sil_ioread8 (dev, base + addr_mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3570: FILE: drivers/ide/pci/siimage.c:320:
+	sil_iowrite8 (dev, mode, base + addr_mask);

CHECK:BRACES: Unbalanced braces around else statement
#3615: FILE: drivers/ide/pci/siimage.c:373:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3701: FILE: drivers/ide/pci/siimage.c:466:
+		printk(KERN_WARNING "siimage: IDE controller MMIO ports not "

WARNING:SPLIT_STRING: quoted string split across lines
#3702: FILE: drivers/ide/pci/siimage.c:467:
+		printk(KERN_WARNING "siimage: IDE controller MMIO ports not "
+				    "available.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioaddr"
#3711: FILE: drivers/ide/pci/siimage.c:472:
+	if (ioaddr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3787: FILE: drivers/ide/pci/siimage.c:492:
+static unsigned int __devinit init_chipset_siimage(struct pci_dev *dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3864: FILE: drivers/ide/pci/siimage.c:548:
+	sil_iowrite8 (dev,       0x72, base + 0xA1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3869: FILE: drivers/ide/pci/siimage.c:553:
+	sil_iowrite8 (dev,       0x72, base ? (base + 0xE1) : 0xB1);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#3885: FILE: drivers/ide/pci/siimage.c:568:
+		static const char *clk_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3886: FILE: drivers/ide/pci/siimage.c:569:
+		static const char *clk_str[] =
+			{ "== 100", "== 133", "== 2X PCI", "DISABLED!" };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3899: FILE: drivers/ide/pci/siimage.c:572:
+		printk(KERN_INFO "%s: BASE CLOCK %s\n", name, clk_str[tmp & 3]);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3969: FILE: drivers/ide/pci/siimage.c:650:
+	unsigned len	= strnlen(s, sizeof(drive->id->model));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 4'
#3972: FILE: drivers/ide/pci/siimage.c:652:
+	if ((len > 4) && (!memcmp(s, "ST", 2)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4002: FILE: drivers/ide/pci/siimage.c:713:
 static u8 __devinit sil_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4034: FILE: drivers/ide/pci/siimage.c:771:
+static int __devinit siimage_init_one(struct pci_dev *dev,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4220: FILE: include/linux/ide.h:472:
+	void (*tf_load)(ide_drive_t *, struct ide_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_task_s *' should also have an identifier name
#4220: FILE: include/linux/ide.h:472:
+	void (*tf_load)(ide_drive_t *, struct ide_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4221: FILE: include/linux/ide.h:473:
+	void (*tf_read)(ide_drive_t *, struct ide_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_task_s *' should also have an identifier name
#4221: FILE: include/linux/ide.h:473:
+	void (*tf_read)(ide_drive_t *, struct ide_task_s *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4225: FILE: include/linux/ide.h:475:
+	void (*input_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4225: FILE: include/linux/ide.h:475:
+	void (*input_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4225: FILE: include/linux/ide.h:475:
+	void (*input_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#4225: FILE: include/linux/ide.h:475:
+	void (*input_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#4225: FILE: include/linux/ide.h:475:
+	void (*input_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4226: FILE: include/linux/ide.h:476:
+	void (*output_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4226: FILE: include/linux/ide.h:476:
+	void (*output_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4226: FILE: include/linux/ide.h:476:
+	void (*output_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#4226: FILE: include/linux/ide.h:476:
+	void (*output_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#4226: FILE: include/linux/ide.h:476:
+	void (*output_data)(ide_drive_t *, struct request *, void *, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4259: FILE: include/linux/ide.h:543:
+typedef void (xfer_func_t)(ide_drive_t *, struct request *rq, void *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4267: FILE: include/linux/ide.h:825:
+void ide_execute_pkt_cmd(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4269: FILE: include/linux/ide.h:827:
+void ide_pad_transfer(ide_drive_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4269: FILE: include/linux/ide.h:827:
+void ide_pad_transfer(ide_drive_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4269: FILE: include/linux/ide.h:827:
+void ide_pad_transfer(ide_drive_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#4280: FILE: include/linux/ide.h:965:
+void ide_tf_dump(const char *, struct ide_taskfile *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_taskfile *' should also have an identifier name
#4280: FILE: include/linux/ide.h:965:
+void ide_tf_dump(const char *, struct ide_taskfile *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288935.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 50 warnings, 10 checks, 2819 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288935.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
