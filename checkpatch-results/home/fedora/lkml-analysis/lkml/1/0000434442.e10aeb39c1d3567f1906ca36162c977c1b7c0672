WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/uio/uio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#110: FILE: drivers/uio/uio.c:2:
+ * drivers/uio/uio.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: drivers/uio/uio.c:37:
+^Istruct kset ^I^Imap_attr_kset;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#150: FILE: drivers/uio/uio.c:42:
+static struct file_operations uio_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#164: FILE: drivers/uio/uio.c:56:
+	.mode  = S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#169: FILE: drivers/uio/uio.c:61:
+	.mode  = S_IRUGO,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#172: FILE: drivers/uio/uio.c:64:
+static struct attribute* map_attrs[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/uio/uio.c:73:
+	if (strncmp(attr->name,"addr",4) == 0)
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/uio/uio.c:73:
+	if (strncmp(attr->name,"addr",4) == 0)
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: drivers/uio/uio.c:76:
+	if (strncmp(attr->name,"size",4) == 0)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: drivers/uio/uio.c:76:
+	if (strncmp(attr->name,"size",4) == 0)
 	                             ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#195: FILE: drivers/uio/uio.c:87:
+static struct sysfs_ops map_attr_ops = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: drivers/uio/uio.c:101:
+	struct uio_device *idev = dev_get_drvdata(dev);
+	if (idev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_name' to 'name_show'
#213: FILE: drivers/uio/uio.c:105:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#214: FILE: drivers/uio/uio.c:106:
+static DEVICE_ATTR(name, S_IRUGO, show_name, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/uio/uio.c:112:
+	struct uio_device *idev = dev_get_drvdata(dev);
+	if (idev)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_version' to 'version_show'
#224: FILE: drivers/uio/uio.c:116:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#225: FILE: drivers/uio/uio.c:117:
+static DEVICE_ATTR(version, S_IRUGO, show_version, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/uio/uio.c:123:
+	struct uio_device *idev = dev_get_drvdata(dev);
+	if (idev)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_event' to 'event_show'
#236: FILE: drivers/uio/uio.c:128:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#237: FILE: drivers/uio/uio.c:129:
+static DEVICE_ATTR(event, S_IRUGO, show_event, NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#270: FILE: drivers/uio/uio.c:162:
+			kobject_set_name(&idev->map_attr_kset.kobj,"maps");
 			                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: drivers/uio/uio.c:170:
+		kobject_set_name(&mem->kobj,"map%d",mi);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: drivers/uio/uio.c:170:
+		kobject_set_name(&mem->kobj,"map%d",mi);
 		                                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#289: FILE: drivers/uio/uio.c:181:
+	for (mi--; mi>=0; mi--) {
 	             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: drivers/uio/uio.c:197:
+	struct uio_mem *mem;
+	for (mi = 0; mi < MAX_UIO_MAPS; mi++) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: drivers/uio/uio.c:362:
+			if (copy_to_user(buf, &event_count, count))
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#472: FILE: drivers/uio/uio.c:364:
+			else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#514: FILE: drivers/uio/uio.c:406:
+	struct uio_device *idev = vma->vm_private_data;
+	idev->vma_count++;

WARNING:LINE_SPACING: Missing a blank line after declarations
#520: FILE: drivers/uio/uio.c:412:
+	struct uio_device *idev = vma->vm_private_data;
+	idev->vma_count--;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#527: FILE: drivers/uio/uio.c:419:
+	struct page* page = NOPAGE_SIGBUS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#530: FILE: drivers/uio/uio.c:422:
+	int mi = uio_find_mem_index(vma);
+	if (mi < 0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#536: FILE: drivers/uio/uio.c:428:
+		page = vmalloc_to_page((void*)idev->info->mem[mi].addr);

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#543: FILE: drivers/uio/uio.c:435:
+static struct vm_operations_struct uio_vm_ops = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#553: FILE: drivers/uio/uio.c:445:
+	int mi = uio_find_mem_index(vma);
+	if (mi < 0)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#591: FILE: drivers/uio/uio.c:483:
+	actual_pages = (idev->info->mem[mi].size + PAGE_SIZE -1) >> PAGE_SHIFT;
 	                                                     ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#603: FILE: drivers/uio/uio.c:495:
+	switch (idev->info->mem[mi].memtype) {
+		case UIO_MEM_PHYS:
[...]
+		case UIO_MEM_LOGICAL:
+		case UIO_MEM_VIRTUAL:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:CONST_STRUCT: struct file_operations should normally be const
#614: FILE: drivers/uio/uio.c:506:
+static struct file_operations uio_fops = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "uio_class"
#641: FILE: drivers/uio/uio.c:533:
+	if (uio_class != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#661: FILE: drivers/uio/uio.c:553:
+		printk(KERN_ERR "class_create failed for uio\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#733: FILE: drivers/uio/uio.c:625:
+		printk(KERN_ERR "UIO: device register failed\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#795: FILE: drivers/uio/uio.c:687:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#816: FILE: include/linux/uio_driver.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#817: FILE: include/linux/uio_driver.h:2:
+ * include/linux/uio_driver.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#852: FILE: include/linux/uio_driver.h:37:
+#define MAX_UIO_MAPS ^I5$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#893: FILE: include/linux/uio_driver.h:78:
+}
+extern void uio_unregister_device(struct uio_info *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#893: FILE: include/linux/uio_driver.h:78:
+extern void uio_unregister_device(struct uio_info *info);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#894: FILE: include/linux/uio_driver.h:79:
+extern void uio_event_notify(struct uio_info *info);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 30 warnings, 7 checks, 819 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
