WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#39: FILE: Makefile:4:
+EXTRAVERSION = .3
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __always_inline over __attribute__((always_inline))
#88: FILE: arch/sparc64/kernel/irq.c:688:
+static __attribute__((always_inline)) void *set_hardirq_stack(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#101: FILE: arch/sparc64/kernel/irq.c:701:
+}
+static __attribute__((always_inline)) void restore_hardirq_stack(void *orig_sp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __always_inline over __attribute__((always_inline))
#101: FILE: arch/sparc64/kernel/irq.c:701:
+static __attribute__((always_inline)) void restore_hardirq_stack(void *orig_sp)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#163: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: arch/sparc64/kernel/kstack.h:1:
+#ifndef _KSTACK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#179: FILE: arch/sparc64/kernel/kstack.h:12:
+	unsigned long base = (unsigned long) tp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#186: FILE: arch/sparc64/kernel/kstack.h:19:
+		base = (unsigned long) hardirq_stack[tp->cpu];

CHECK:SPACING: No space is necessary after a cast
#190: FILE: arch/sparc64/kernel/kstack.h:23:
+		base = (unsigned long) softirq_stack[tp->cpu];

CHECK:SPACING: No space is necessary after a cast
#201: FILE: arch/sparc64/kernel/kstack.h:34:
+	unsigned long base = (unsigned long) tp;

CHECK:SPACING: No space is necessary after a cast
#202: FILE: arch/sparc64/kernel/kstack.h:35:
+	unsigned long addr = (unsigned long) regs;

CHECK:SPACING: No space is necessary after a cast
#209: FILE: arch/sparc64/kernel/kstack.h:42:
+		base = (unsigned long) hardirq_stack[tp->cpu];

CHECK:SPACING: No space is necessary after a cast
#213: FILE: arch/sparc64/kernel/kstack.h:46:
+		base = (unsigned long) softirq_stack[tp->cpu];

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#225: FILE: arch/sparc64/kernel/kstack.h:58:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#252: FILE: arch/sparc64/kernel/process.c:326:
+		if (kstack_valid(tp, (unsigned long) rw)) {

CHECK:SPACING: No space is necessary after a cast
#256: FILE: arch/sparc64/kernel/process.c:330:
+			if (kstack_valid(tp, (unsigned long) rw))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: arch/sparc64/kernel/process.c:397:
+			printk("I7[%s] ", buffer);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#274: FILE: arch/sparc64/kernel/process.c:399:
+			printk("RPC[%s]\n", buffer);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#280: FILE: arch/sparc64/kernel/process.c:403:
+			printk("             TPC[%lx] O7[%lx] I7[%lx] RPC[%lx]\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#528: FILE: arch/x86/boot/boot.h:252:
+};
+extern struct cpu_features cpu;

WARNING:SIZEOF_PARENTHESIS: sizeof tss_segment_16 should be sizeof(tss_segment_16)
#750: FILE: arch/x86/kvm/x86.c:3422:
+			   sizeof tss_segment_16))

WARNING:SIZEOF_PARENTHESIS: sizeof tss_segment_16 should be sizeof(tss_segment_16)
#758: FILE: arch/x86/kvm/x86.c:3428:
+			    sizeof tss_segment_16))

WARNING:SIZEOF_PARENTHESIS: sizeof tss_segment_16 should be sizeof(tss_segment_16)
#762: FILE: arch/x86/kvm/x86.c:3432:
+			   &tss_segment_16, sizeof tss_segment_16))

WARNING:SIZEOF_PARENTHESIS: sizeof tss_segment_32 should be sizeof(tss_segment_32)
#781: FILE: arch/x86/kvm/x86.c:3451:
+			   sizeof tss_segment_32))

WARNING:SIZEOF_PARENTHESIS: sizeof tss_segment_32 should be sizeof(tss_segment_32)
#789: FILE: arch/x86/kvm/x86.c:3457:
+			    sizeof tss_segment_32))

WARNING:SIZEOF_PARENTHESIS: sizeof tss_segment_32 should be sizeof(tss_segment_32)
#793: FILE: arch/x86/kvm/x86.c:3461:
+			   &tss_segment_32, sizeof tss_segment_32))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1284: FILE: drivers/misc/acer-wmi.c:762:
+			if (cap == ACER_CAP_WIRELESS ||
+				cap == ACER_CAP_BLUETOOTH) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1360: FILE: drivers/pci/quirks.c:1684:
 static void __devinit quirk_brcm_570x_limit_vpd(struct pci_dev *dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1370: FILE: drivers/pci/quirks.c:1693:
+  ^I    (dev->device == PCI_DEVICE_ID_NX2_5708S) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1370: FILE: drivers/pci/quirks.c:1693:
+  ^I    (dev->device == PCI_DEVICE_ID_NX2_5708S) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: drivers/pci/quirks.c:1693:
+  ^I    (dev->device == PCI_DEVICE_ID_NX2_5708S) ||$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1496: FILE: drivers/scsi/qla2xxx/qla_gbl.h:74:
+extern void qla2x00_abort_fcport_cmds(fc_port_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fc_port_t *' should also have an identifier name
#1496: FILE: drivers/scsi/qla2xxx/qla_gbl.h:74:
+extern void qla2x00_abort_fcport_cmds(fc_port_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1545: FILE: drivers/scsi/qla2xxx/qla_init.c:2253:
+	fcport->rport = rport = fc_remote_port_add(ha->host, 0, &rport_ids);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1606: FILE: drivers/scsi/qla2xxx/qla_os.c:640:
+			DEBUG2(qla_printk(KERN_WARNING, ha,
+			    "Abort failed --  %lx\n", sp->cmd->serial_number));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: drivers/scsi/qla2xxx/qla_os.c:645:
+				DEBUG2(qla_printk(KERN_WARNING, ha,
+				    "Abort failed while waiting --  %lx\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1614: FILE: drivers/scsi/qla2xxx/qla_os.c:648:
+
+		}

CHECK:BRACES: Unbalanced braces around else statement
#1658: FILE: drivers/scsi/qla2xxx/qla_os.c:1862:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1674: FILE: drivers/scsi/scsi_transport_spi.c:370:
+ * so we return 1 to terminate the iteration when we find it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1904: FILE: drivers/usb/storage/transport.c:1038:
+	if (residue && !(us->flags & US_FL_IGNORE_RESIDUE)) {
+

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#1909: FILE: drivers/usb/storage/transport.c:1043:
+		if (bcs->Status == US_BULK_STAT_OK &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1910: FILE: drivers/usb/storage/transport.c:1044:
+		if (bcs->Status == US_BULK_STAT_OK &&
+				scsi_get_resid(srb) == 0 &&

ERROR:SPACING: space prohibited after that open parenthesis '('
#1930: FILE: drivers/usb/storage/unusual_devs.h:361:
+UNUSUAL_DEV(  0x04b0, 0x0411, 0x0100, 0x0111,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1931: FILE: drivers/usb/storage/unusual_devs.h:362:
+UNUSUAL_DEV(  0x04b0, 0x0411, 0x0100, 0x0111,
 		"NIKON",

ERROR:SPACING: space prohibited after that open parenthesis '('
#1938: FILE: drivers/usb/storage/unusual_devs.h:368:
+UNUSUAL_DEV(  0x04b0, 0x0413, 0x0110, 0x0111,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1939: FILE: drivers/usb/storage/unusual_devs.h:369:
+UNUSUAL_DEV(  0x04b0, 0x0413, 0x0110, 0x0111,
 		"NIKON",

ERROR:SPACING: space prohibited after that open parenthesis '('
#1947: FILE: drivers/usb/storage/unusual_devs.h:1191:
+UNUSUAL_DEV(  0x07c4, 0xa4a5, 0x0000, 0xffff,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1948: FILE: drivers/usb/storage/unusual_devs.h:1192:
+UNUSUAL_DEV(  0x07c4, 0xa4a5, 0x0000, 0xffff,
+		"Simple Tech/Datafab",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1951: FILE: drivers/usb/storage/unusual_devs.h:1195:
+		US_FL_IGNORE_RESIDUE ),

ERROR:SPACING: space prohibited after that open parenthesis '('
#1961: FILE: drivers/usb/storage/unusual_devs.h:1769:
+UNUSUAL_DEV(  0x4102, 0x1020, 0x0100,  0x0100,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1962: FILE: drivers/usb/storage/unusual_devs.h:1770:
+UNUSUAL_DEV(  0x4102, 0x1020, 0x0100,  0x0100,
+		"iRiver",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1965: FILE: drivers/usb/storage/unusual_devs.h:1773:
+		US_FL_IGNORE_RESIDUE ),

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2219: FILE: drivers/video/vt8623fb.c:717:
+		dev_err(info->device, "memory size detection failed (%x %x), suppose 16 MB\n", memsize1, memsize2);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2273: FILE: fs/cifs/asn1.c:403:
+	if (size < 2 || size > UINT_MAX/sizeof(unsigned long))
 	                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2288: FILE: fs/cifs/cifs_spnego.c:70:
+#define MAX_VER_STR_LEN   8 /* length of longest version string e.g.
+				strlen("ver=0xFF") */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2288: FILE: fs/cifs/cifs_spnego.c:70:
+				strlen("ver=0xFF") */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2302: FILE: fs/cifs/cifs_spnego.c:85:
+	/* length of fields (with semicolons): ver=0xyz ip4=ipaddress
+	   host=hostname sec=mechanism uid=0xFF user=username */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2302: FILE: fs/cifs/cifs_spnego.c:85:
+	   host=hostname sec=mechanism uid=0xFF user=username */

CHECK:CAMELCASE: Avoid CamelCase: <sesInfo>
#2308: FILE: fs/cifs/cifs_spnego.c:91:
+		   6 /* len of ";user=" */ + strlen(sesInfo->userName) + 1;

CHECK:CAMELCASE: Avoid CamelCase: <userName>
#2308: FILE: fs/cifs/cifs_spnego.c:91:
+		   6 /* len of ";user=" */ + strlen(sesInfo->userName) + 1;

ERROR:DEFINE_ARCH_HAS: #define of '__ARCH_HAS_DO_SOFTIRQ' is wrong - use Kconfig variables or standard guards instead
#2361: FILE: include/asm-sparc64/irq.h:95:
+#define __ARCH_HAS_DO_SOFTIRQ

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#2411: FILE: include/asm-x86/i387.h:297:
+ * get used from interrupt context aswell. To prevent these kernel instructions
                                    ^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2488: FILE: include/video/radeon.h:530:
+#define RB2D_DC_FLUSH_2D			   (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#2489: FILE: include/video/radeon.h:531:
+#define RB2D_DC_FREE_2D				   (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2499: FILE: include/video/radeon.h:746:
+#define WAIT_DMA_GUI_IDLE			   (1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2500: FILE: include/video/radeon.h:747:
+#define WAIT_2D_IDLECLEAN			   (1 << 16)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2706: FILE: mm/memory.c:2760:
+		/*
+		   SUS require strange return value to mlock

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2743: FILE: net/dccp/proto.c:480:
+	/*
+	 * rfc4340: 6.1. Change Options

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2840: FILE: sound/soc/fsl/fsl_dma.c:336:
+ *      ^I   The last link descriptor$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2842: FILE: sound/soc/fsl/fsl_dma.c:338:
+ *  |   ^I |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2843: FILE: sound/soc/fsl/fsl_dma.c:339:
+ *  V   ^I |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2858: FILE: sound/soc/fsl/fsl_dma.c:354:
+ *  |   ^I |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2859: FILE: sound/soc/fsl/fsl_dma.c:355:
+ *  V   ^I |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2898: FILE: sound/soc/fsl/fsl_dma.c:394:
+^Iu64 temp_link;  ^I/* Pointer to next link descriptor */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2931: FILE: sound/soc/fsl/fsl_dma.c:480:
+	out_be32(&dma_channel->clndar,
+		CCSR_DMA_CLNDAR_ADDR(dma_private->ld_buf_phys));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2933: FILE: sound/soc/fsl/fsl_dma.c:482:
+	out_be32(&dma_channel->eclndar,
+		CCSR_DMA_ECLNDAR_ADDR(dma_private->ld_buf_phys));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2964: FILE: sound/soc/fsl/fsl_dma.c:513:
+	/* For playback, we want the destination address to be held.  For
+	   capture, set the source address to be held. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2964: FILE: sound/soc/fsl/fsl_dma.c:513:
+	   capture, set the source address to be held. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#3154: FILE: sound/soc/fsl/fsl_ssi.c:349:
+	if (!ssi_private->first_stream)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3156: FILE: sound/soc/fsl/fsl_ssi.c:351:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3186: FILE: sound/soc/fsl/fsl_ssi.c:381:
+		snd_pcm_hw_constraint_minmax(substream->runtime,
+			SNDRV_PCM_HW_PARAM_RATE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3190: FILE: sound/soc/fsl/fsl_ssi.c:385:
+		snd_pcm_hw_constraint_minmax(substream->runtime,
+			SNDRV_PCM_HW_PARAM_SAMPLE_BITS,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3232: FILE: sound/soc/fsl/fsl_ssi.c:457:
+			setbits32(&ssi->scr,
+				CCSR_SSI_SCR_SSIEN | CCSR_SSI_SCR_TE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3237: FILE: sound/soc/fsl/fsl_ssi.c:461:
+			setbits32(&ssi->scr,
+				CCSR_SSI_SCR_SSIEN | CCSR_SSI_SCR_RE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237465.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 36 warnings, 41 checks, 2721 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237465.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
