WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#32: 
devices exported exported by a virtual machine containing a physical

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/block/Kconfig:456:
+config XEN_BLKDEV_FRONTEND
+	tristate "Xen virtual block device support"
+	depends on XEN
+	help
+	  This driver implements the front-end of the Xen virtual
+	  block device driver.  It communicates with a back-end driver
+	  in another domain which drives the actual block device.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/block/xen-blkfront.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#142: FILE: drivers/block/xen-blkfront.c:64:
+static struct block_device_operations xlvbd_block_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#152: FILE: drivers/block/xen-blkfront.c:74:
+struct blkfront_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/block/xen-blkfront.c:77:
+ ^Istruct gendisk *gd;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/block/xen-blkfront.c:77:
+ ^Istruct gendisk *gd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/block/xen-blkfront.c:77:
+ ^Istruct gendisk *gd;$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#184: FILE: drivers/block/xen-blkfront.c:106:
+#define BLKIF_MAJOR(dev) ((dev)>>8)
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: drivers/block/xen-blkfront.c:118:
+	unsigned long free = info->shadow_free;
+	BUG_ON(free > BLK_RING_SIZE);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: drivers/block/xen-blkfront.c:118:
+	BUG_ON(free > BLK_RING_SIZE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#213: FILE: drivers/block/xen-blkfront.c:135:
+	struct blkfront_info *info = (struct blkfront_info *)arg;
+	schedule_work(&info->work);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#242: FILE: drivers/block/xen-blkfront.c:164:
+	if (gnttab_alloc_grant_references(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#244: FILE: drivers/block/xen-blkfront.c:166:
+		gnttab_request_free_callback(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: drivers/block/xen-blkfront.c:189:
+	rq_for_each_bio (bio, req) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: drivers/block/xen-blkfront.c:190:
+		bio_for_each_segment (bvec, bio, idx) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#269: FILE: drivers/block/xen-blkfront.c:191:
+			BUG_ON(ring_req->nr_segments

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/block/xen-blkfront.c:198:
+			BUG_ON(ref == -ENOSPC);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#278: FILE: drivers/block/xen-blkfront.c:200:
+			gnttab_grant_foreign_access_ref(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#282: FILE: drivers/block/xen-blkfront.c:204:
+				rq_data_dir(req) );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: drivers/block/xen-blkfront.c:229:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_blkif_request', this function's name, in a string
#328: FILE: drivers/block/xen-blkfront.c:250:
+	pr_debug("Entered do_blkif_request\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: drivers/block/xen-blkfront.c:265:
+		pr_debug("do_blk_req %p: cmd %p, sec %lx, "
+			 "(%u/%li) buffer:%p [%s]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: drivers/block/xen-blkfront.c:271:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#353: FILE: drivers/block/xen-blkfront.c:275:
+		wait:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq"
#371: FILE: drivers/block/xen-blkfront.c:293:
+	if (rq == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: drivers/block/xen-blkfront.c:318:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#408: FILE: drivers/block/xen-blkfront.c:330:
+	printk(KERN_INFO "blkfront: %s: barriers %s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#414: FILE: drivers/block/xen-blkfront.c:336:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: drivers/block/xen-blkfront.c:345:
+	BUG_ON(info->gd != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->gd"
#423: FILE: drivers/block/xen-blkfront.c:345:
+	BUG_ON(info->gd != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#424: FILE: drivers/block/xen-blkfront.c:346:
+	BUG_ON(info->rq != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->rq"
#424: FILE: drivers/block/xen-blkfront.c:346:
+	BUG_ON(info->rq != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gd"
#430: FILE: drivers/block/xen-blkfront.c:352:
+	if (gd == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->xbdev->dev
#445: FILE: drivers/block/xen-blkfront.c:367:
+	gd->driverfs_dev = &(info->xbdev->dev);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#513: FILE: drivers/block/xen-blkfront.c:435:
+					  (unsigned long)info->ring.sring);
 					                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#515: FILE: drivers/block/xen-blkfront.c:437:
+		info->ring.sring = NULL;
 		           ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#519: FILE: drivers/block/xen-blkfront.c:441:
+	info->evtchn = info->irq = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#521: FILE: drivers/block/xen-blkfront.c:443:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#526: FILE: drivers/block/xen-blkfront.c:448:
+	int i;
+	for (i = 0; i < s->req.nr_segments; i++)

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#537: FILE: drivers/block/xen-blkfront.c:459:
+	int uptodate;
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#562: FILE: drivers/block/xen-blkfront.c:484:
+		uptodate = (bret->status == BLKIF_RSP_OKAY);
 		^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#566: FILE: drivers/block/xen-blkfront.c:488:
+				printk("blkfront: %s: write barrier op failed\n",

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#568: FILE: drivers/block/xen-blkfront.c:490:
+				uptodate = -EOPNOTSUPP;
 				^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: drivers/block/xen-blkfront.c:492:
+^I^I^I        xlvbd_barrier(info);$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#572: FILE: drivers/block/xen-blkfront.c:494:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:SPLIT_STRING: quoted string split across lines
#577: FILE: drivers/block/xen-blkfront.c:499:
+				dev_dbg(&info->xbdev->dev, "Bad return from blkdev data "
+					"request: %x\n", bret->status);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#579: FILE: drivers/block/xen-blkfront.c:501:
+			ret = end_that_request_first(req, uptodate,
 			                                  ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/block/xen-blkfront.c:502:
+			ret = end_that_request_first(req, uptodate,
+				req->hard_nr_sectors);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#581: FILE: drivers/block/xen-blkfront.c:503:
+			BUG_ON(ret);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#582: FILE: drivers/block/xen-blkfront.c:504:
+			end_that_request_last(req, uptodate);
 			                           ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#585: FILE: drivers/block/xen-blkfront.c:507:
+			BUG();

CHECK:BRACES: braces {} should be used on all arms of this statement
#591: FILE: drivers/block/xen-blkfront.c:513:
+	if (i != info->ring.req_prod_pvt) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#593: FILE: drivers/block/xen-blkfront.c:515:
+		int more_to_do;
+		RING_FINAL_CHECK_FOR_RESPONSES(&info->ring, more_to_do);

CHECK:BRACES: Unbalanced braces around else statement
#596: FILE: drivers/block/xen-blkfront.c:518:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#606: FILE: drivers/block/xen-blkfront.c:528:
+
+

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#610: FILE: drivers/block/xen-blkfront.c:532:
+	struct blkif_sring *sring;
 	                    ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#615: FILE: drivers/block/xen-blkfront.c:537:
+	sring = (struct blkif_sring *)__get_free_page(GFP_KERNEL);
 	^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#616: FILE: drivers/block/xen-blkfront.c:538:
+	if (!sring) {
 	     ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#620: FILE: drivers/block/xen-blkfront.c:542:
+	SHARED_RING_INIT(sring);
 	                 ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#621: FILE: drivers/block/xen-blkfront.c:543:
+	FRONT_RING_INIT(&info->ring, sring, PAGE_SIZE);
 	                             ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#623: FILE: drivers/block/xen-blkfront.c:545:
+	err = xenbus_grant_ring(dev, virt_to_mfn(info->ring.sring));
 	                                                    ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#625: FILE: drivers/block/xen-blkfront.c:547:
+		free_page((unsigned long)sring);
 		                         ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#626: FILE: drivers/block/xen-blkfront.c:548:
+		info->ring.sring = NULL;
 		           ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#651: FILE: drivers/block/xen-blkfront.c:573:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#673: FILE: drivers/block/xen-blkfront.c:595:
+			    "ring-ref","%u", info->ring_ref);
 			              ^

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateInitialised>
#693: FILE: drivers/block/xen-blkfront.c:615:
+	xenbus_switch_state(dev, XenbusStateInitialised);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#707: FILE: drivers/block/xen-blkfront.c:629:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#740: FILE: drivers/block/xen-blkfront.c:662:
+		info->shadow[i].req.id = i+1;
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#741: FILE: drivers/block/xen-blkfront.c:663:
+	info->shadow[BLK_RING_SIZE-1].req.id = 0x0fffffff;
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: drivers/block/xen-blkfront.c:666:
+	info->handle = simple_strtoul(strrchr(dev->nodename,'/')+1, NULL, 0);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#744: FILE: drivers/block/xen-blkfront.c:666:
+	info->handle = simple_strtoul(strrchr(dev->nodename,'/')+1, NULL, 0);
 	                                                        ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#744: FILE: drivers/block/xen-blkfront.c:666:
+	info->handle = simple_strtoul(strrchr(dev->nodename,'/')+1, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#757: FILE: drivers/block/xen-blkfront.c:679:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#774: FILE: drivers/block/xen-blkfront.c:696:
+		info->shadow[i].req.id = i+1;
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#776: FILE: drivers/block/xen-blkfront.c:698:
+	info->shadow[BLK_RING_SIZE-1].req.id = 0x0fffffff;
 	                          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#794: FILE: drivers/block/xen-blkfront.c:716:
+			gnttab_grant_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#798: FILE: drivers/block/xen-blkfront.c:720:
+				rq_data_dir(

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#808: FILE: drivers/block/xen-blkfront.c:730:
+	xenbus_switch_state(info->xbdev, XenbusStateConnected);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'blkfront_resume', this function's name, in a string
#837: FILE: drivers/block/xen-blkfront.c:759:
+	dev_dbg(&dev->dev, "blkfront_resume: %s\n", dev->nodename);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#848: FILE: drivers/block/xen-blkfront.c:770:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->connected == BLKIF_STATE_CONNECTED'
#860: FILE: drivers/block/xen-blkfront.c:782:
+	if ((info->connected == BLKIF_STATE_CONNECTED) ||
+	    (info->connected == BLKIF_STATE_SUSPENDED) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->connected == BLKIF_STATE_SUSPENDED'
#860: FILE: drivers/block/xen-blkfront.c:782:
+	if ((info->connected == BLKIF_STATE_CONNECTED) ||
+	    (info->connected == BLKIF_STATE_SUSPENDED) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#861: FILE: drivers/block/xen-blkfront.c:783:
+	    (info->connected == BLKIF_STATE_SUSPENDED) )

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#909: FILE: drivers/block/xen-blkfront.c:831:
+ * acknowledgement.
    ^^^^^^^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'blkfront_closing', this function's name, in a string
#916: FILE: drivers/block/xen-blkfront.c:838:
+	dev_dbg(&dev->dev, "blkfront_closing: %s removed\n", dev->nodename);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->rq"
#918: FILE: drivers/block/xen-blkfront.c:840:
+	if (info->rq == NULL)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'backend_changed', this function's name, in a string
#951: FILE: drivers/block/xen-blkfront.c:873:
+	dev_dbg(&dev->dev, "blkfront:backend_changed.\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bd"
#967: FILE: drivers/block/xen-blkfront.c:889:
+		if (bd == NULL)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'blkfront_remove', this function's name, in a string
#986: FILE: drivers/block/xen-blkfront.c:908:
+	dev_dbg(&dev->dev, "blkfront_remove: %s removed\n", dev->nodename);

WARNING:LINE_SPACING: Missing a blank line after declarations
#998: FILE: drivers/block/xen-blkfront.c:920:
+	struct blkfront_info *info = inode->i_bdev->bd_disk->private_data;
+	info->users++;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1005: FILE: drivers/block/xen-blkfront.c:927:
+	struct blkfront_info *info = inode->i_bdev->bd_disk->private_data;
+	info->users--;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1008: FILE: drivers/block/xen-blkfront.c:930:
+		/* Check whether we have been instructed to close.  We will
+		   have ignored this request initially, as the device was

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1009: FILE: drivers/block/xen-blkfront.c:931:
+		   still mounted. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1010: FILE: drivers/block/xen-blkfront.c:932:
+		struct xenbus_device * dev = info->xbdev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateClosing>
#1013: FILE: drivers/block/xen-blkfront.c:935:
+		if (state == XenbusStateClosing)

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1019: FILE: drivers/block/xen-blkfront.c:941:
+static struct block_device_operations xlvbd_block_fops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1020: FILE: drivers/block/xen-blkfront.c:942:
+static struct block_device_operations xlvbd_block_fops =
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1026: FILE: drivers/block/xen-blkfront.c:948:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1048: FILE: drivers/block/xen-blkfront.c:970:
+		printk(KERN_WARNING "xen_blk: can't get major %d with name %s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: drivers/block/xen-blkfront.c:979:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1090: FILE: include/xen/interface/io/blkif.h:27:
+typedef uint16_t blkif_vdev_t;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1091: FILE: include/xen/interface/io/blkif.h:28:
+typedef uint64_t blkif_sector_t;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432475.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 53 warnings, 41 checks, 1026 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432475.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
