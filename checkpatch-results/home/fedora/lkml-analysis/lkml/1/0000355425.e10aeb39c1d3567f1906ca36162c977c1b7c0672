WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#18: 
Subject: [PATCH 3/4] UML - kill processes instead of panicing kernel
                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#27: 
UML was panicing in the case of failures of libc calls which shouldn't
        ^^^^^^^^

WARNING:TYPO_SPELLING: 'pursuade' may be misspelled - perhaps 'persuade'?
#41: 
was declared as noreturn, so in order to pursuade gcc that it actually
                                         ^^^^^^^^

WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#52: 
of panicing.  Callers of thes functions were changed to check for
   ^^^^^^^^

WARNING:TYPO_SPELLING: 'thes' may be misspelled - perhaps 'this'?
#52: 
of panicing.  Callers of thes functions were changed to check for
                         ^^^^

WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#58: 
status instead of panicing on failure, with their callers doing
                  ^^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#89: FILE: arch/um/include/os.h:241:
+extern void os_dump_core(void) __attribute__ ((noreturn));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: arch/um/include/os.h:241:
+extern void os_dump_core(void) __attribute__ ((noreturn));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#89: FILE: arch/um/include/os.h:241:
+extern void os_dump_core(void) __attribute__ ((noreturn));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: arch/um/include/os.h:272:
+extern int map_stub_pages(int fd, unsigned long code, unsigned long data,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: arch/um/include/registers.h:16:
+extern int save_registers(int pid, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: arch/um/include/registers.h:17:
+extern int restore_registers(int pid, struct uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: arch/um/include/registers.h:18:
+extern int init_registers(int pid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: arch/um/os-Linux/skas/process.c:77:
+			printk(UM_KERN_ERR "wait_stub_done : continue failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_stub_done', this function's name, in a string
#239: FILE: arch/um/os-Linux/skas/process.c:77:
+			printk(UM_KERN_ERR "wait_stub_done : continue failed, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: arch/um/os-Linux/skas/process.c:78:
+			printk(UM_KERN_ERR "wait_stub_done : continue failed, "
+			       "errno = %d\n", errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#252: FILE: arch/um/os-Linux/skas/process.c:91:
+	printk(UM_KERN_ERR "wait_stub_done : failed to wait for SIGTRAP, "

WARNING:SPLIT_STRING: quoted string split across lines
#253: FILE: arch/um/os-Linux/skas/process.c:92:
+	printk(UM_KERN_ERR "wait_stub_done : failed to wait for SIGTRAP, "
+	       "pid = %d, n = %d, errno = %d, status = 0x%x\n", pid, n, errno,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: arch/um/os-Linux/skas/process.c:106:
+			printk(UM_KERN_ERR "get_skas_faultinfo - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_skas_faultinfo', this function's name, in a string
#267: FILE: arch/um/os-Linux/skas/process.c:106:
+			printk(UM_KERN_ERR "get_skas_faultinfo - "

WARNING:SPLIT_STRING: quoted string split across lines
#268: FILE: arch/um/os-Linux/skas/process.c:107:
+			printk(UM_KERN_ERR "get_skas_faultinfo - "
+			       "PTRACE_FAULTINFO failed, errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#282: FILE: arch/um/os-Linux/skas/process.c:120:
+			printk(UM_KERN_ERR "Failed to continue stub, pid = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: arch/um/os-Linux/skas/process.c:121:
+			printk(UM_KERN_ERR "Failed to continue stub, pid = %d, "
+			       "errno = %d\n", pid, errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: arch/um/os-Linux/skas/process.c:157:
+			printk(UM_KERN_ERR "handle_trap - nullifying syscall "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_trap', this function's name, in a string
#297: FILE: arch/um/os-Linux/skas/process.c:157:
+			printk(UM_KERN_ERR "handle_trap - nullifying syscall "

WARNING:SPLIT_STRING: quoted string split across lines
#298: FILE: arch/um/os-Linux/skas/process.c:158:
+			printk(UM_KERN_ERR "handle_trap - nullifying syscall "
+			       "failed, errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#307: FILE: arch/um/os-Linux/skas/process.c:164:
+			printk(UM_KERN_ERR "handle_trap - continuing to end of "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_trap', this function's name, in a string
#307: FILE: arch/um/os-Linux/skas/process.c:164:
+			printk(UM_KERN_ERR "handle_trap - continuing to end of "

WARNING:SPLIT_STRING: quoted string split across lines
#308: FILE: arch/um/os-Linux/skas/process.c:165:
+			printk(UM_KERN_ERR "handle_trap - continuing to end of "
+			       "syscall failed, errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#321: FILE: arch/um/os-Linux/skas/process.c:174:
+				printk(UM_KERN_ERR "Failed to get registers "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#326: FILE: arch/um/os-Linux/skas/process.c:176:
+			printk(UM_KERN_ERR "handle_trap - failed to wait at "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_trap', this function's name, in a string
#326: FILE: arch/um/os-Linux/skas/process.c:176:
+			printk(UM_KERN_ERR "handle_trap - failed to wait at "

WARNING:SPLIT_STRING: quoted string split across lines
#327: FILE: arch/um/os-Linux/skas/process.c:177:
+			printk(UM_KERN_ERR "handle_trap - failed to wait at "
+			       "end of syscall, errno = %d, status = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: arch/um/os-Linux/skas/process.c:199:
+		printk(UM_KERN_ERR "userspace_tramp - setting timer failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'userspace_tramp', this function's name, in a string
#342: FILE: arch/um/os-Linux/skas/process.c:199:
+		printk(UM_KERN_ERR "userspace_tramp - setting timer failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: arch/um/os-Linux/skas/process.c:200:
+		printk(UM_KERN_ERR "userspace_tramp - setting timer failed, "
+		       "errno = %d\n", err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: arch/um/os-Linux/skas/process.c:246:
+			printk(UM_KERN_ERR "userspace_tramp - setting SIGSEGV "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'userspace_tramp', this function's name, in a string
#357: FILE: arch/um/os-Linux/skas/process.c:246:
+			printk(UM_KERN_ERR "userspace_tramp - setting SIGSEGV "

WARNING:SPLIT_STRING: quoted string split across lines
#358: FILE: arch/um/os-Linux/skas/process.c:247:
+			printk(UM_KERN_ERR "userspace_tramp - setting SIGSEGV "
+			       "handler failed - errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#378: FILE: arch/um/os-Linux/skas/process.c:272:
+		printk(UM_KERN_ERR "start_userspace : mmap failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_userspace', this function's name, in a string
#378: FILE: arch/um/os-Linux/skas/process.c:272:
+		printk(UM_KERN_ERR "start_userspace : mmap failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#379: FILE: arch/um/os-Linux/skas/process.c:273:
+		printk(UM_KERN_ERR "start_userspace : mmap failed, "
+		       "errno = %d", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#394: FILE: arch/um/os-Linux/skas/process.c:286:
+		printk(UM_KERN_ERR "start_userspace : clone failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_userspace', this function's name, in a string
#394: FILE: arch/um/os-Linux/skas/process.c:286:
+		printk(UM_KERN_ERR "start_userspace : clone failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#395: FILE: arch/um/os-Linux/skas/process.c:287:
+		printk(UM_KERN_ERR "start_userspace : clone failed, "
+		       "errno = %d", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#406: FILE: arch/um/os-Linux/skas/process.c:295:
+			printk(UM_KERN_ERR "start_userspace : wait failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_userspace', this function's name, in a string
#406: FILE: arch/um/os-Linux/skas/process.c:295:
+			printk(UM_KERN_ERR "start_userspace : wait failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#407: FILE: arch/um/os-Linux/skas/process.c:296:
+			printk(UM_KERN_ERR "start_userspace : wait failed, "
+			       "errno = %d", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#417: FILE: arch/um/os-Linux/skas/process.c:303:
+		printk(UM_KERN_ERR "start_userspace : expected SIGSTOP, got "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_userspace', this function's name, in a string
#417: FILE: arch/um/os-Linux/skas/process.c:303:
+		printk(UM_KERN_ERR "start_userspace : expected SIGSTOP, got "

WARNING:SPLIT_STRING: quoted string split across lines
#418: FILE: arch/um/os-Linux/skas/process.c:304:
+		printk(UM_KERN_ERR "start_userspace : expected SIGSTOP, got "
+		       "status = %d", status);

CHECK:SPACING: No space is necessary after a cast
#426: FILE: arch/um/os-Linux/skas/process.c:309:
+		   (void *) PTRACE_O_TRACESYSGOOD) < 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#428: FILE: arch/um/os-Linux/skas/process.c:311:
+		printk(UM_KERN_ERR "start_userspace : PTRACE_OLDSETOPTIONS "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_userspace', this function's name, in a string
#428: FILE: arch/um/os-Linux/skas/process.c:311:
+		printk(UM_KERN_ERR "start_userspace : PTRACE_OLDSETOPTIONS "

WARNING:SPLIT_STRING: quoted string split across lines
#429: FILE: arch/um/os-Linux/skas/process.c:312:
+		printk(UM_KERN_ERR "start_userspace : PTRACE_OLDSETOPTIONS "
+		       "failed, errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#437: FILE: arch/um/os-Linux/skas/process.c:318:
+		printk(UM_KERN_ERR "start_userspace : munmap failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_userspace', this function's name, in a string
#437: FILE: arch/um/os-Linux/skas/process.c:318:
+		printk(UM_KERN_ERR "start_userspace : munmap failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#438: FILE: arch/um/os-Linux/skas/process.c:319:
+		printk(UM_KERN_ERR "start_userspace : munmap failed, "
+		       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#479: FILE: arch/um/os-Linux/skas/process.c:363:
+			printk(UM_KERN_ERR "userspace - ptrace continue "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'userspace', this function's name, in a string
#479: FILE: arch/um/os-Linux/skas/process.c:363:
+			printk(UM_KERN_ERR "userspace - ptrace continue "

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: arch/um/os-Linux/skas/process.c:364:
+			printk(UM_KERN_ERR "userspace - ptrace continue "
+			       "failed, op = %d, errno = %d\n", op, errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#489: FILE: arch/um/os-Linux/skas/process.c:370:
+			printk(UM_KERN_ERR "userspace - wait failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'userspace', this function's name, in a string
#489: FILE: arch/um/os-Linux/skas/process.c:370:
+			printk(UM_KERN_ERR "userspace - wait failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#490: FILE: arch/um/os-Linux/skas/process.c:371:
+			printk(UM_KERN_ERR "userspace - wait failed, "
+			       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#499: FILE: arch/um/os-Linux/skas/process.c:377:
+			printk(UM_KERN_ERR "userspace - PTRACE_GETREGS failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'userspace', this function's name, in a string
#499: FILE: arch/um/os-Linux/skas/process.c:377:
+			printk(UM_KERN_ERR "userspace - PTRACE_GETREGS failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: arch/um/os-Linux/skas/process.c:378:
+			printk(UM_KERN_ERR "userspace - PTRACE_GETREGS failed, "
+			       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#523: FILE: arch/um/os-Linux/skas/process.c:481:
+		printk(UM_KERN_ERR "copy_context_skas0 : PTRACE_SETREGS "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#523: FILE: arch/um/os-Linux/skas/process.c:481:
+		printk(UM_KERN_ERR "copy_context_skas0 : PTRACE_SETREGS "

WARNING:SPLIT_STRING: quoted string split across lines
#524: FILE: arch/um/os-Linux/skas/process.c:482:
+		printk(UM_KERN_ERR "copy_context_skas0 : PTRACE_SETREGS "
+		       "failed, pid = %d, errno = %d\n", pid, -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#539: FILE: arch/um/os-Linux/skas/process.c:496:
+		printk(UM_KERN_ERR "Failed to continue new process, pid = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#540: FILE: arch/um/os-Linux/skas/process.c:497:
+		printk(UM_KERN_ERR "Failed to continue new process, pid = %d, "
+		       "errno = %d\n", pid, errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#551: FILE: arch/um/os-Linux/skas/process.c:505:
+		printk(UM_KERN_ERR "copy_context_skas0 - stub-parent reports "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#551: FILE: arch/um/os-Linux/skas/process.c:505:
+		printk(UM_KERN_ERR "copy_context_skas0 - stub-parent reports "

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: arch/um/os-Linux/skas/process.c:506:
+		printk(UM_KERN_ERR "copy_context_skas0 - stub-parent reports "
+		       "error %d\n", -pid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#565: FILE: arch/um/os-Linux/skas/process.c:516:
+		printk(UM_KERN_ERR "copy_context_skas0 - stub-child reports "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#565: FILE: arch/um/os-Linux/skas/process.c:516:
+		printk(UM_KERN_ERR "copy_context_skas0 - stub-child reports "

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: arch/um/os-Linux/skas/process.c:517:
+		printk(UM_KERN_ERR "copy_context_skas0 - stub-child reports "
+		       "error %ld\n", child_data->err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#577: FILE: arch/um/os-Linux/skas/process.c:525:
+		printk(UM_KERN_ERR "copy_context_skas0 : PTRACE_OLDSETOPTIONS "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#577: FILE: arch/um/os-Linux/skas/process.c:525:
+		printk(UM_KERN_ERR "copy_context_skas0 : PTRACE_OLDSETOPTIONS "

WARNING:SPLIT_STRING: quoted string split across lines
#578: FILE: arch/um/os-Linux/skas/process.c:526:
+		printk(UM_KERN_ERR "copy_context_skas0 : PTRACE_OLDSETOPTIONS "
+		       "failed, errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#607: FILE: arch/um/os-Linux/skas/process.c:567:
+		printk(UM_KERN_ERR "map_stub_pages : /proc/mm map for code "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_stub_pages', this function's name, in a string
#607: FILE: arch/um/os-Linux/skas/process.c:567:
+		printk(UM_KERN_ERR "map_stub_pages : /proc/mm map for code "

WARNING:SPLIT_STRING: quoted string split across lines
#608: FILE: arch/um/os-Linux/skas/process.c:568:
+		printk(UM_KERN_ERR "map_stub_pages : /proc/mm map for code "
+		       "failed, err = %d\n", n);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#622: FILE: arch/um/os-Linux/skas/process.c:589:
+			printk(UM_KERN_ERR "map_stub_pages : /proc/mm map for "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_stub_pages', this function's name, in a string
#622: FILE: arch/um/os-Linux/skas/process.c:589:
+			printk(UM_KERN_ERR "map_stub_pages : /proc/mm map for "

WARNING:SPLIT_STRING: quoted string split across lines
#623: FILE: arch/um/os-Linux/skas/process.c:590:
+			printk(UM_KERN_ERR "map_stub_pages : /proc/mm map for "
+			       "data failed, err = %d\n", n);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#637: FILE: arch/um/os-Linux/skas/process.c:656:
+		printk(UM_KERN_ERR "Bad sigsetjmp return in "

WARNING:SPLIT_STRING: quoted string split across lines
#638: FILE: arch/um/os-Linux/skas/process.c:657:
+		printk(UM_KERN_ERR "Bad sigsetjmp return in "
+		       "start_idle_thread - %d\n", n);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_idle_thread', this function's name, in a string
#638: FILE: arch/um/os-Linux/skas/process.c:657:
+		       "start_idle_thread - %d\n", n);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#651: FILE: arch/um/os-Linux/skas/process.c:702:
+			printk(UM_KERN_ERR "__switch_mm - PTRACE_SWITCH_MM "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__switch_mm', this function's name, in a string
#651: FILE: arch/um/os-Linux/skas/process.c:702:
+			printk(UM_KERN_ERR "__switch_mm - PTRACE_SWITCH_MM "

WARNING:SPLIT_STRING: quoted string split across lines
#652: FILE: arch/um/os-Linux/skas/process.c:703:
+			printk(UM_KERN_ERR "__switch_mm - PTRACE_SWITCH_MM "
+			       "failed, errno = %d\n", errno);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#666: FILE: arch/um/include/kern_util.h:65:
+extern void fatal_sigsegv(void) __attribute__ ((noreturn));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#666: FILE: arch/um/include/kern_util.h:65:
+extern void fatal_sigsegv(void) __attribute__ ((noreturn));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#666: FILE: arch/um/include/kern_util.h:65:
+extern void fatal_sigsegv(void) __attribute__ ((noreturn));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_uml', this function's name, in a string
#770: FILE: arch/um/kernel/skas/process.c:61:
+			printf("start_uml - start_userspace returned %d\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 90 warnings, 7 checks, 626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
