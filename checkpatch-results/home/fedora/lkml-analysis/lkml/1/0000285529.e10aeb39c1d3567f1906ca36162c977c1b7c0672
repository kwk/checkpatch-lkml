WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
paccept.  This syscall differs from accept in that it adds (at the userlevel)

WARNING:TYPO_SPELLING: 'desriptor' may be misspelled - perhaps 'descriptor'?
#32: 
which should be inherited from the file desriptor for the server but
                                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#include <errno.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#include <fcntl.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#include <pthread.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#include <signal.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#include <stdio.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#include <netinet/in.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#include <sys/socket.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#include <sys/syscall.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#ifndef __NR_paccept

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# ifdef __x86_64__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#  define __NR_paccept 288

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# elif defined __i386__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#  define SYS_PACCEPT 18

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#  define USE_SOCKETCALL 1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#  error "need __NR_paccept"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#ifdef USE_SOCKETCALL

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# define paccept(fd, addr, addrlen, mask, flags) \

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# define paccept(fd, addr, addrlen, mask, flags) \

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
#define PORT 57392

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#define SOCK_CLOEXEC 0x40000000

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: include/linux/net.h:219:
+extern long	     do_accept(int fd, struct sockaddr __user *upeer_sockaddr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#277: FILE: net/compat.c:725:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: net/compat.c:725:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: net/compat.c:725:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: net/compat.c:725:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: net/compat.c:725:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: net/compat.c:725:
+static unsigned char nas[19]={AL(0),AL(3),AL(3),AL(3),AL(2),AL(3),
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: net/compat.c:727:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: net/compat.c:727:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: net/compat.c:727:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: net/compat.c:727:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: net/compat.c:727:
+				AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 				                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#305: FILE: net/compat.c:757:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#311: FILE: net/compat.c:763:
+	if (ret == -ERESTARTNOHAND) {
[...]
+	} else if (sigmask)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#313: FILE: net/compat.c:765:
+		/*
+		 * Don't restore the signal mask yet. Let do_signal() deliver

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#416: FILE: net/socket.c:1520:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: net/socket.c:1522:
+        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: net/socket.c:1522:
+        }$

CHECK:BRACES: braces {} should be used on all arms of this statement
#422: FILE: net/socket.c:1526:
+	if (ret < 0 && signal_pending(current)) {
[...]
+	} else if (sigmask)
[...]

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#424: FILE: net/socket.c:1528:
+		/*
+		 * Don't restore the signal mask yet. Let do_signal() deliver

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#453: FILE: net/socket.c:2059:
+static const unsigned char nargs[19]={
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: net/socket.c:2062:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: net/socket.c:2062:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: net/socket.c:2062:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: net/socket.c:2062:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: net/socket.c:2062:
+	AL(6),AL(2),AL(5),AL(5),AL(3),AL(3),
 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: net/socket.c:2160:
+^I^I^I        (int __user *)a[2],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: net/socket.c:2160:
+		    sys_paccept(a0, (struct sockaddr __user *)a1,
+			        (int __user *)a[2],

CHECK:SPACING: No space is necessary after a cast
#490: FILE: net/socket.c:2161:
+				(const sigset_t __user *) a[3],

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285529.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 31 warnings, 7 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285529.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
