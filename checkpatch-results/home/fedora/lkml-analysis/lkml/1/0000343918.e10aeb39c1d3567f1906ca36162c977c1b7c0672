WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
  2856   2852  99%    0.14K    102       28       408K selinux_inode_security

WARNING:BAD_SIGN_OFF: Do not use whitespace before Tested-by:
#62: 
 Tested-by: Ingo Molnar <mingo@elte.hu>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#104: FILE: mm/slub.c:357:
+		printk(KERN_CONT " %02x", addr[i]);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#104: FILE: mm/slub.c:357:
+		printk(KERN_CONT " %02x", addr[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#109: FILE: mm/slub.c:361:
+			printk(KERN_CONT " %s\n", ascii);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#109: FILE: mm/slub.c:361:
+			printk(KERN_CONT " %s\n", ascii);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#117: FILE: mm/slub.c:368:
+			printk(KERN_CONT "   ");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#117: FILE: mm/slub.c:368:
+			printk(KERN_CONT "   ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#122: FILE: mm/slub.c:372:
+		printk(KERN_CONT " %s\n", ascii);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#122: FILE: mm/slub.c:372:
+		printk(KERN_CONT " %s\n", ascii);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: mm/slub.c:687:
+			check_bytes_and_report(s, page, p, "Alignment padding",
+				endobject, POISON_INUSE, s->inuse - s->objsize);

CHECK:BRACES: Unbalanced braces around else statement
#194: FILE: mm/slub.c:904:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: mm/slub.c:969:
 			printk(KERN_ERR "slub_debug option '%c' "
+				"unknown. skipped\n", *str);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#260: FILE: mm/slub.c:1298:
+	zonelist = &NODE_DATA(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#338: FILE: mm/slub.c:2878:
+	printk(KERN_INFO

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after slab_notifier
#358: FILE: mm/slub.c:3045:
+static struct notifier_block __cpuinitdata slab_notifier = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:SPLIT_STRING: quoted string split across lines
#370: FILE: mm/slub.c:3204:
 	printk(KERN_ERR "\n2. kmalloc-32: Clobber next pointer/next slab"
+			" 0x34 -> -0x%p\n", p);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#371: FILE: mm/slub.c:3205:
+	printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#381: FILE: mm/slub.c:3214:
+	printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#391: FILE: mm/slub.c:3228:
+	printk(KERN_ERR "\n2. kmalloc-256: Clobber 50th byte 0x9a->0x%p\n\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: mm/slub.c:3229:
+	printk(KERN_ERR "\n2. kmalloc-256: Clobber 50th byte 0x9a->0x%p\n\n",
+			p);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343918.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 4 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343918.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
