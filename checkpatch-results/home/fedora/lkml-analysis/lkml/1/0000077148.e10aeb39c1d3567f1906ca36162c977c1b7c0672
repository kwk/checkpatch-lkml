WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The worker will fire in periods specified by its value, if it is greater than zero,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: arch/x86/include/asm/kvm_para.h:54:
+extern int kvm_sync_wall_handler(struct ctl_table *table, int write,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#51: FILE: arch/x86/include/asm/kvm_para.h:55:
+                          struct file *filp, void __user *buffer,
                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: arch/x86/include/asm/kvm_para.h:55:
+                          struct file *filp, void __user *buffer,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: arch/x86/include/asm/kvm_para.h:55:
+extern int kvm_sync_wall_handler(struct ctl_table *table, int write,
+                          struct file *filp, void __user *buffer,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: arch/x86/include/asm/kvm_para.h:55:
+                          struct file *filp, void __user *buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: arch/x86/include/asm/kvm_para.h:56:
+                          size_t *lenp, loff_t *ppos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: arch/x86/include/asm/kvm_para.h:56:
+                          size_t *lenp, loff_t *ppos);$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#66: FILE: arch/x86/kernel/kvmclock.c:30:
+unsigned int kvm_wall_update_interval = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#75: FILE: arch/x86/kernel/kvmclock.c:103:
+	                  struct file *filp, void __user *buffer,
 	                               ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: arch/x86/kernel/kvmclock.c:103:
+^I                  struct file *filp, void __user *buffer,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: arch/x86/kernel/kvmclock.c:103:
+int kvm_sync_wall_handler(struct ctl_table *table, int write,
+	                  struct file *filp, void __user *buffer,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#78: FILE: arch/x86/kernel/kvmclock.c:106:
+	int ret  = proc_dointvec_minmax(table, write, filp, buffer, lenp, ppos);
 	                                              ^^^^

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#117: FILE: kernel/sysctl.c:1002:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000077148.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 7 warnings, 3 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000077148.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
