WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#117: FILE: arch/sparc/kernel/ds.c:289:
+	printk(KERN_INFO "ds-%llu: Machine description update.\n", dp->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#126: FILE: arch/sparc/kernel/ds.c:328:
+	printk(KERN_ALERT "ds-%llu: Shutdown request from "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#135: FILE: arch/sparc/kernel/ds.c:368:
+	printk(KERN_ALERT "ds-%llu: Panic request from "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#144: FILE: arch/sparc/kernel/ds.c:552:
+		printk(KERN_INFO "ds-%llu: Starting cpu %d...\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#153: FILE: arch/sparc/kernel/ds.c:568:
+			printk(KERN_INFO "ds-%llu: CPU startup failed err=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#162: FILE: arch/sparc/kernel/ds.c:608:
+		printk(KERN_INFO "ds-%llu: Shutting down cpu %d...\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#171: FILE: arch/sparc/kernel/ds.c:687:
+	printk(KERN_INFO "ds-%llu: PRI REQ [%llx:%llx], len=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#180: FILE: arch/sparc/kernel/ds.c:819:
+			printk(KERN_ERR "ds-%llu: var-config [%s:%s] "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#189: FILE: arch/sparc/kernel/ds.c:853:
+	printk(KERN_ERR "ds-%llu: ds_conn_reset() from %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#199: FILE: arch/sparc/kernel/ds.c:915:
+			printk(KERN_ERR "ds-%llu: REG ACK for unknown "

WARNING:SPLIT_STRING: quoted string split across lines
#200: FILE: arch/sparc/kernel/ds.c:916:
+			printk(KERN_ERR "ds-%llu: REG ACK for unknown "
+			       "handle %llx\n", dp->id, ap->handle);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#204: FILE: arch/sparc/kernel/ds.c:919:
+		printk(KERN_INFO "ds-%llu: Registered %s service.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#214: FILE: arch/sparc/kernel/ds.c:927:
+			printk(KERN_ERR "ds-%llu: REG NACK for "

WARNING:SPLIT_STRING: quoted string split across lines
#215: FILE: arch/sparc/kernel/ds.c:928:
+			printk(KERN_ERR "ds-%llu: REG NACK for "
+			       "unknown handle %llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#225: FILE: arch/sparc/kernel/ds.c:985:
+			printk(KERN_ERR "ds-%llu: Data for unknown "

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: arch/sparc/kernel/ds.c:986:
+			printk(KERN_ERR "ds-%llu: Data for unknown "
+			       "handle %llu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#235: FILE: arch/sparc/kernel/ds.c:1088:
+		printk(KERN_WARNING "ds-%llu: Unexpected LDC event %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#248: FILE: arch/sparc/kernel/iommu.c:437:
 			printk(KERN_WARNING "strbuf_flush: ctx flush "
+			       "timeout matchreg[%llx] ctx[%lx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#261: FILE: arch/sparc/kernel/mdesc.c:539:
+		printk("PLATFORM: hostid [%08llx]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#265: FILE: arch/sparc/kernel/mdesc.c:542:
+		printk("PLATFORM: serial# [%08llx]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: arch/sparc/kernel/mdesc.c:544:
+	printk("PLATFORM: stick-frequency [%08llx]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: arch/sparc/kernel/mdesc.c:547:
+		printk("PLATFORM: mac-address [%llx]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#276: FILE: arch/sparc/kernel/mdesc.c:550:
+		printk("PLATFORM: watchdog-resolution [%llu ms]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#280: FILE: arch/sparc/kernel/mdesc.c:553:
+		printk("PLATFORM: watchdog-max-timeout [%llu ms]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: arch/sparc/kernel/mdesc.c:556:
+		printk("PLATFORM: max-cpus [%llu]\n", *v);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: arch/sparc/kernel/of_device_64.c:557:
+			printk("%s reg[%d] -> %llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#310: FILE: arch/sparc/kernel/pci.c:226:
+			printk("  start: %llx, end: %llx, i: %x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#323: FILE: arch/sparc/kernel/pci_common.c:460:
+	printk("%s: PCI IO[%llx] MEM[%llx]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#337: FILE: arch/sparc/kernel/pci_msi.c:429:
+		printk(KERN_INFO "%s: MSI addr32[0x%llx:0x%x] "

WARNING:SPLIT_STRING: quoted string split across lines
#338: FILE: arch/sparc/kernel/pci_msi.c:430:
+		printk(KERN_INFO "%s: MSI addr32[0x%llx:0x%x] "
+		       "addr64[0x%llx:0x%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: arch/sparc/kernel/pci_schizo.c:797:
+		printk("%s: Unexpected Safari/JBUS error interrupt, errlog[%016llx]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: arch/sparc/kernel/pci_sun4v.c:76:
 				printk("iommu_batch_flush: IOMMU map of "
+				       "[%08lx:%08llx:%lx:%lx:%lx] failed with "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#377: FILE: arch/sparc/kernel/power.c:43:
+	printk(KERN_INFO "%s: Control reg at %llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#390: FILE: arch/sparc/kernel/prom_irqtrans.c:349:
+		printk("tomatillo_wsync_handler: DMA won't sync [%llx:%llx]\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tomatillo_wsync_handler', this function's name, in a string
#390: FILE: arch/sparc/kernel/prom_irqtrans.c:349:
+		printk("tomatillo_wsync_handler: DMA won't sync [%llx:%llx]\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#403: FILE: arch/sparc/kernel/psycho_common.c:334:
+	printk(KERN_ERR "%s: PCI AFAR [%016llx]\n", pbm->name, afar);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: arch/sparc/kernel/smp_64.c:456:
+		printk("CPU[%d]: mondo stuckage result[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: arch/sparc/kernel/smp_64.c:591:
+			printk("CPU[%d]: mondo stuckage result[%016llx]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#465: FILE: arch/sparc/kernel/time_64.c:425:
+	printk(KERN_INFO "%s: RTC regs at 0x%llx\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#470: FILE: arch/sparc/kernel/time_64.c:478:
 static int __devinit bq4802_probe(struct of_device *op, const struct of_device_id *match)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#474: FILE: arch/sparc/kernel/time_64.c:481:
+	printk(KERN_INFO "%s: BQ4802 regs at 0x%llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#483: FILE: arch/sparc/kernel/time_64.c:545:
+	printk(KERN_INFO "%s: Mostek regs at 0x%llx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#496: FILE: arch/sparc/kernel/traps_64.c:1171:
+	printk("%s" "ERROR(%d): D-cache idx[%x] tag[%016llx] utag[%016llx] stag[%016llx]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#496: FILE: arch/sparc/kernel/traps_64.c:1171:
+	printk("%s" "ERROR(%d): D-cache idx[%x] tag[%016llx] utag[%016llx] stag[%016llx]\n",

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#503: FILE: arch/sparc/kernel/traps_64.c:1177:
+	printk("%s" "ERROR(%d): D-cache data0[%016llx] data1[%016llx] data2[%016llx] data3[%016llx]\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#503: FILE: arch/sparc/kernel/traps_64.c:1177:
+	printk("%s" "ERROR(%d): D-cache data0[%016llx] data1[%016llx] data2[%016llx] data3[%016llx]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#503: FILE: arch/sparc/kernel/traps_64.c:1177:
+	printk("%s" "ERROR(%d): D-cache data0[%016llx] data1[%016llx] data2[%016llx] data3[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#511: FILE: arch/sparc/kernel/traps_64.c:1183:
+	printk("%s" "ERROR(%d): I-cache idx[%x] tag[%016llx] utag[%016llx] stag[%016llx] "

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#511: FILE: arch/sparc/kernel/traps_64.c:1183:
+	printk("%s" "ERROR(%d): I-cache idx[%x] tag[%016llx] utag[%016llx] stag[%016llx] "

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: arch/sparc/kernel/traps_64.c:1184:
+	printk("%s" "ERROR(%d): I-cache idx[%x] tag[%016llx] utag[%016llx] stag[%016llx] "
+	       "u[%016llx] l[%016llx]\n",

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#521: FILE: arch/sparc/kernel/traps_64.c:1192:
+	printk("%s" "ERROR(%d): I-cache INSN0[%016llx] INSN1[%016llx] INSN2[%016llx] INSN3[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: arch/sparc/kernel/traps_64.c:1192:
+	printk("%s" "ERROR(%d): I-cache INSN0[%016llx] INSN1[%016llx] INSN2[%016llx] INSN3[%016llx]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#521: FILE: arch/sparc/kernel/traps_64.c:1192:
+	printk("%s" "ERROR(%d): I-cache INSN0[%016llx] INSN1[%016llx] INSN2[%016llx] INSN3[%016llx]\n",

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#528: FILE: arch/sparc/kernel/traps_64.c:1198:
+	printk("%s" "ERROR(%d): I-cache INSN4[%016llx] INSN5[%016llx] INSN6[%016llx] INSN7[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#528: FILE: arch/sparc/kernel/traps_64.c:1198:
+	printk("%s" "ERROR(%d): I-cache INSN4[%016llx] INSN5[%016llx] INSN6[%016llx] INSN7[%016llx]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#528: FILE: arch/sparc/kernel/traps_64.c:1198:
+	printk("%s" "ERROR(%d): I-cache INSN4[%016llx] INSN5[%016llx] INSN6[%016llx] INSN7[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#535: FILE: arch/sparc/kernel/traps_64.c:1204:
+	printk("%s" "ERROR(%d): E-cache idx[%x] tag[%016llx]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#535: FILE: arch/sparc/kernel/traps_64.c:1204:
+	printk("%s" "ERROR(%d): E-cache idx[%x] tag[%016llx]\n",

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#539: FILE: arch/sparc/kernel/traps_64.c:1207:
+	printk("%s" "ERROR(%d): E-cache data0[%016llx] data1[%016llx] data2[%016llx] data3[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#539: FILE: arch/sparc/kernel/traps_64.c:1207:
+	printk("%s" "ERROR(%d): E-cache data0[%016llx] data1[%016llx] data2[%016llx] data3[%016llx]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#539: FILE: arch/sparc/kernel/traps_64.c:1207:
+	printk("%s" "ERROR(%d): E-cache data0[%016llx] data1[%016llx] data2[%016llx] data3[%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#548: FILE: arch/sparc/kernel/traps_64.c:1797:
+	printk("%s: err_handle[%llx] err_stick[%llx] err_type[%08x:%s]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#557: FILE: arch/sparc/kernel/traps_64.c:1821:
+	printk("%s: err_raddr[%016llx] err_size[%u] err_cpu[%u]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: arch/sparc/mm/init_64.c:1020:
+		numadbg("MLGROUP[%d]: node[%llx] latency[%llx] "
+			"match[%llx] mask[%llx]\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190441.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 64 warnings, 0 checks, 431 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190441.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
