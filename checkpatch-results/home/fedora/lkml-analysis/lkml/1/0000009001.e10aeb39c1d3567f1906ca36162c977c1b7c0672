WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
>>   Actually, there are more problems than these in the truncate path.  Some

WARNING:TYPO_SPELLING: 'agains' may be misspelled - perhaps 'against'?
#119: 
Patch prepared agains yours "truncate: introduce new sequence"
               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'necessery' may be misspelled - perhaps 'necessary'?
#129: 
Subject: [PATCH] vfs: inode_change_ok have to perform all necessery checks
                                                          ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: fs/attr.c:114:
+	int ret;
+	ret = inode_change_posix_ok(inode, attr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: fs/attr.c:123:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#196: FILE: fs/libfs.c:332:
 }
+/**

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: fs/libfs.c:344:
+	loff_t oldsize;
+	oldsize = inode->i_size;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/linux/fs.h:2364:
+extern void simple_setsize_nocheck(struct inode *inode, loff_t newsize);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: include/linux/fs.h:2399:
+extern int inode_change_posix_ok(const struct inode *, struct iattr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#254: FILE: include/linux/fs.h:2399:
+extern int inode_change_posix_ok(const struct inode *, struct iattr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#254: FILE: include/linux/fs.h:2399:
+extern int inode_change_posix_ok(const struct inode *, struct iattr *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: include/linux/fs.h:2401:
+extern int inode_change_ok(const struct inode *, struct iattr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#256: FILE: include/linux/fs.h:2401:
+extern int inode_change_ok(const struct inode *, struct iattr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#256: FILE: include/linux/fs.h:2401:
+extern int inode_change_ok(const struct inode *, struct iattr *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 5 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
