CHECK:BIT_MACRO: Prefer using the BIT macro
#50: FILE: arch/ia64/include/asm/kvm.h:218:
+#define KVM_IA64_VCPU_STACK_SIZE	(1UL << KVM_IA64_VCPU_STACK_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxW)
#72: FILE: arch/ia64/include/asm/kvm_host.h:119:
+#define KVM_STK_OFFSET		(__IA64_UL_CONST(1)<< KVM_STK_SHIFT)
                       		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: arch/ia64/kvm/kvm-ia64.c:1460:
+^I        void __user *first_p = argp;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#128: FILE: arch/ia64/kvm/kvm-ia64.c:1468:
+			printk(KERN_INFO "KVM_IA64_VCPU_GET_STACK: "

WARNING:SPLIT_STRING: quoted string split across lines
#129: FILE: arch/ia64/kvm/kvm-ia64.c:1469:
+			printk(KERN_INFO "KVM_IA64_VCPU_GET_STACK: "
+			       "Illegal user destination address for stack\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*stack)...) over kzalloc(sizeof(struct kvm_ia64_vcpu_stack)...)
#132: FILE: arch/ia64/kvm/kvm-ia64.c:1472:
+		stack = kzalloc(sizeof(struct kvm_ia64_vcpu_stack), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/ia64/kvm/kvm-ia64.c:1490:
+^I        void __user *first_p = argp;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: arch/ia64/kvm/kvm-ia64.c:1497:
+		if (!access_ok(VERIFY_READ, user_stack,
+			    sizeof(struct kvm_ia64_vcpu_stack))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#158: FILE: arch/ia64/kvm/kvm-ia64.c:1498:
+			printk(KERN_INFO "KVM_IA64_VCPU_SET_STACK: "

WARNING:SPLIT_STRING: quoted string split across lines
#159: FILE: arch/ia64/kvm/kvm-ia64.c:1499:
+			printk(KERN_INFO "KVM_IA64_VCPU_SET_STACK: "
+			       "Illegal user address for stack\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*stack)...) over kmalloc(sizeof(struct kvm_ia64_vcpu_stack)...)
#162: FILE: arch/ia64/kvm/kvm-ia64.c:1502:
+		stack = kmalloc(sizeof(struct kvm_ia64_vcpu_stack), GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161969.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 5 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161969.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
