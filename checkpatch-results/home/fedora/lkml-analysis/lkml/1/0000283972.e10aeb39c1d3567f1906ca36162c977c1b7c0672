WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
functionality to detect the memory layout. It further uses the memory hotplug

CHECK:BIT_MACRO: Prefer using the BIT macro
#59: FILE: drivers/net/ehea/ehea.h:124:
+#define EHEA_MAP_ENTRIES (1 << EHEA_DIR_INDEX_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#75: FILE: drivers/net/ehea/ehea.h:203:
+/*
+ * Memory map data structures

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#78: FILE: drivers/net/ehea/ehea.h:206:
+struct ehea_dir_bmap
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#81: FILE: drivers/net/ehea/ehea.h:209:
+};
+struct ehea_top_bmap

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#82: FILE: drivers/net/ehea/ehea.h:210:
+struct ehea_top_bmap
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#85: FILE: drivers/net/ehea/ehea.h:213:
+};
+struct ehea_bmap

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#86: FILE: drivers/net/ehea/ehea.h:214:
+struct ehea_bmap
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: drivers/net/ehea/ehea_main.c:3508:
+                             unsigned long action, void *data)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/net/ehea/ehea_main.c:3508:
+                             unsigned long action, void *data)$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#161: FILE: drivers/net/ehea/ehea_qmr.c:34:
+struct ehea_bmap *ehea_bmap = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: drivers/net/ehea/ehea_qmr.c:570:
+	if(!ehea_top_bmap->dir[dir]) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: drivers/net/ehea/ehea_qmr.c:581:
+	if(!ehea_bmap->top[top]) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#218: FILE: drivers/net/ehea/ehea_qmr.c:594:
+	unsigned long i, mr_len, start_section, end_section;
+	start_section = (pfn * PAGE_SIZE) / EHEA_SECTSIZE;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ehea_bmap)...) over kzalloc(sizeof(struct ehea_bmap)...)
#223: FILE: drivers/net/ehea/ehea_qmr.c:598:
+	ehea_bmap = kzalloc(sizeof(struct ehea_bmap), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: drivers/net/ehea/ehea_qmr.c:611:
+		if(ret)

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: drivers/net/ehea/ehea_qmr.c:633:
+	int ret;
+	mutex_lock(&ehea_busmap_mutex);

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/net/ehea/ehea_qmr.c:644:
+	int top, dir;
+	mutex_lock(&ehea_busmap_mutex);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: drivers/net/ehea/ehea_qmr.c:664:
+out_destroy:^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: drivers/net/ehea/ehea_qmr.c:696:
+	unsigned long ret = idx;
+	ret |= dir << EHEA_DIR_INDEX_SHIFT;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#363: FILE: drivers/net/ehea/ehea_qmr.c:713:
+	for (j = 0; j < (EHEA_PAGES_PER_SECTION / EHEA_MAX_RPAGE); j++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#371: FILE: drivers/net/ehea/ehea_qmr.c:721:
+		if ((hret != H_SUCCESS)
+		    && (hret != H_PAGE_REGISTERED)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#371: FILE: drivers/net/ehea/ehea_qmr.c:721:
+		if ((hret != H_SUCCESS)
+		    && (hret != H_PAGE_REGISTERED)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#372: FILE: drivers/net/ehea/ehea_qmr.c:722:
+		if ((hret != H_SUCCESS)
+		    && (hret != H_PAGE_REGISTERED)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/net/ehea/ehea_qmr.c:742:
+^I^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#394: FILE: drivers/net/ehea/ehea_qmr.c:744:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED))
+			    	return hret;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#394: FILE: drivers/net/ehea/ehea_qmr.c:744:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#394: FILE: drivers/net/ehea/ehea_qmr.c:744:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED))

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/net/ehea/ehea_qmr.c:745:
+^I^I^I    ^Ireturn hret;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: drivers/net/ehea/ehea_qmr.c:745:
+^I^I^I    ^Ireturn hret;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#412: FILE: drivers/net/ehea/ehea_qmr.c:762:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED))
+			    	return hret;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#412: FILE: drivers/net/ehea/ehea_qmr.c:762:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#412: FILE: drivers/net/ehea/ehea_qmr.c:762:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED))

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/net/ehea/ehea_qmr.c:763:
+^I^I^I    ^Ireturn hret;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: drivers/net/ehea/ehea_qmr.c:763:
+^I^I^I    ^Ireturn hret;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#492: FILE: drivers/net/ehea/ehea_qmr.c:806:
+		if((hret != H_PAGE_REGISTERED) && (hret != H_SUCCESS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#492: FILE: drivers/net/ehea/ehea_qmr.c:806:
+		if((hret != H_PAGE_REGISTERED) && (hret != H_SUCCESS))

ERROR:SPACING: space required before the open parenthesis '('
#492: FILE: drivers/net/ehea/ehea_qmr.c:806:
+		if((hret != H_PAGE_REGISTERED) && (hret != H_SUCCESS))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000283972.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 11 warnings, 14 checks, 439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000283972.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
