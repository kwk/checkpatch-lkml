WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/ec156764d424dd67283c2cd5e9f6f1b8388364ac

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#52: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#81: FILE: tools/perf/builtin-sched.c:17:
+static char			const *input_name = "perf.data";

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#88: FILE: tools/perf/builtin-sched.c:22:
+static unsigned long		total_comm = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: tools/perf/builtin-sched.c:58:
+#define BUG_ON(x)	assert(!(x))

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NEW_TYPEDEFS: do not add new typedefs
#132: FILE: tools/perf/builtin-sched.c:62:
+typedef unsigned long long nsec_t;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#134: FILE: tools/perf/builtin-sched.c:64:
+#define printk(x...)		do { printf(x); fflush(stdout); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#138: FILE: tools/perf/builtin-sched.c:68:
+#define __dprintk(x,y...) do {						 \
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#143: FILE: tools/perf/builtin-sched.c:73:
+	printf("%.3f [%Ld] [%.3f]: " x, (double)__now/1e6, __now, (double)__delta/1e6, y);\
 	                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#143: FILE: tools/perf/builtin-sched.c:73:
+	printf("%.3f [%Ld] [%.3f]: " x, (double)__now/1e6, __now, (double)__delta/1e6, y);\
 	                                                                         ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#143: FILE: tools/perf/builtin-sched.c:73:
+	printf("%.3f [%Ld] [%.3f]: " x, (double)__now/1e6, __now, (double)__delta/1e6, y);\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: tools/perf/builtin-sched.c:86:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#197: FILE: tools/perf/builtin-sched.c:127:
+		delta = T1-T0;
 		          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: tools/perf/builtin-sched.c:132:
+	printk("run measurement overhead: %Ld nsecs\n", min_delta);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#202: FILE: tools/perf/builtin-sched.c:132:
+	printk("run measurement overhead: %Ld nsecs\n", min_delta);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#214: FILE: tools/perf/builtin-sched.c:144:
+		delta = T1-T0;
 		          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: tools/perf/builtin-sched.c:150:
+	printk("sleep measurement overhead: %Ld nsecs\n", min_delta);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#220: FILE: tools/perf/builtin-sched.c:150:
+	printk("sleep measurement overhead: %Ld nsecs\n", min_delta);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#295: FILE: tools/perf/builtin-sched.c:225:
+	BUG_ON(!task->events);

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: tools/perf/builtin-sched.c:247:
+ ^I * optimize an existing RUN event by merging this one$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#317: FILE: tools/perf/builtin-sched.c:247:
+ ^I * optimize an existing RUN event by merging this one$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: tools/perf/builtin-sched.c:248:
+ ^I * to it:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: tools/perf/builtin-sched.c:248:
+ ^I * to it:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: tools/perf/builtin-sched.c:249:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: tools/perf/builtin-sched.c:249:
+ ^I */$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#380: FILE: tools/perf/builtin-sched.c:310:
+	BUG_ON(pid >= MAX_PID);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#399: FILE: tools/perf/builtin-sched.c:329:
+	tasks = realloc(tasks, nr_tasks*sizeof(struct task_task *));
 	                               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#400: FILE: tools/perf/builtin-sched.c:330:
+	BUG_ON(!tasks);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#403: FILE: tools/perf/builtin-sched.c:333:
+	printk("registered task #%ld, PID %ld (%s)\n", nr_tasks, pid, comm);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#408: FILE: tools/perf/builtin-sched.c:338:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#414: FILE: tools/perf/builtin-sched.c:344:
+void parse_line(char *line);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPLIT_STRING: quoted string split across lines
#428: FILE: tools/perf/builtin-sched.c:358:
+	ret = sscanf(line, "%20s %5ld %*s %ldus%*c:"
+			   " %128s <%20s %ld> (%ld %ld)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#443: FILE: tools/perf/builtin-sched.c:373:
+	BUG_ON(timestamp < prev_timestamp);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#446: FILE: tools/perf/builtin-sched.c:376:
+	dprintk("parsed: %s - %ld %Ld: %s - <%s %ld> (%ld %ld)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: tools/perf/builtin-sched.c:379:
+^I^Itimestamp, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#460: FILE: tools/perf/builtin-sched.c:390:
+		dprintk("%Ld: task %ld runs for %ld nsecs\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#464: FILE: tools/perf/builtin-sched.c:394:
+		dprintk("%Ld: task %ld wakes up task %ld\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#468: FILE: tools/perf/builtin-sched.c:398:
+		dprintk("%Ld: task %ld goes to sleep (uninterruptible: %ld)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: tools/perf/builtin-sched.c:411:
+		printk("task %6ld (%20s:%10ld), nr_events: %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: tools/perf/builtin-sched.c:412:
+		printk("task %6ld (%20s:%10ld), nr_events: %ld\n",
+			task->nr, task->comm, task->pid, task->nr_events);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#511: FILE: tools/perf/builtin-sched.c:441:
+	dprintk("task %ld, event #%ld, %Ld, delta: %.3f (%Ld)\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#513: FILE: tools/perf/builtin-sched.c:443:
+		(double)delta/1e6, delta);
 		             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#517: FILE: tools/perf/builtin-sched.c:447:
+			(double)event->timestamp/1e6,
 			                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#519: FILE: tools/perf/builtin-sched.c:449:
+			(double)delta/1e6);
 			             ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#524: FILE: tools/perf/builtin-sched.c:454:
+	switch (event->type) {
+		case SCHED_EVENT_RUN:
[...]
+		case SCHED_EVENT_SLEEP:
[...]
+		case SCHED_EVENT_WAKEUP:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#527: FILE: tools/perf/builtin-sched.c:457:
+				(double)event->timestamp/1e6,
 				                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#529: FILE: tools/perf/builtin-sched.c:459:
+				(double)event->duration/1e6);
 				                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#534: FILE: tools/perf/builtin-sched.c:464:
+				(double)event->timestamp/1e6,
 				                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#538: FILE: tools/perf/builtin-sched.c:468:
+			BUG_ON(ret);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#542: FILE: tools/perf/builtin-sched.c:472:
+				(double)event->timestamp/1e6,
 				                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#547: FILE: tools/perf/builtin-sched.c:477:
+			BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#550: FILE: tools/perf/builtin-sched.c:480:
+			BUG_ON(1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#561: FILE: tools/perf/builtin-sched.c:491:
+	BUG_ON(err);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#563: FILE: tools/perf/builtin-sched.c:493:
+	sum =  ru.ru_utime.tv_sec*1e9 + ru.ru_utime.tv_usec*1e3;
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#563: FILE: tools/perf/builtin-sched.c:493:
+	sum =  ru.ru_utime.tv_sec*1e9 + ru.ru_utime.tv_usec*1e3;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#564: FILE: tools/perf/builtin-sched.c:494:
+	sum += ru.ru_stime.tv_sec*1e9 + ru.ru_stime.tv_usec*1e3;
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#564: FILE: tools/perf/builtin-sched.c:494:
+	sum += ru.ru_stime.tv_sec*1e9 + ru.ru_stime.tv_usec*1e3;
 	                                                   ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#571: FILE: tools/perf/builtin-sched.c:501:
+	char filename [] = "/proc/1234567890/sched";

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#582: FILE: tools/perf/builtin-sched.c:512:
+	BUG_ON(!file);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: tools/perf/builtin-sched.c:518:
+		ret = sscanf(line, "se.sum_exec_runtime : %ld.%06ld\n",
+			&msecs, &nsecs);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#590: FILE: tools/perf/builtin-sched.c:520:
+			total = msecs*1e6 + nsecs;
 			             ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#591: FILE: tools/perf/builtin-sched.c:521:
+			dprintk("total: (%ld.%06ld) %Ld\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#616: FILE: tools/perf/builtin-sched.c:546:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#619: FILE: tools/perf/builtin-sched.c:549:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#621: FILE: tools/perf/builtin-sched.c:551:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#639: FILE: tools/perf/builtin-sched.c:569:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#643: FILE: tools/perf/builtin-sched.c:573:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#645: FILE: tools/perf/builtin-sched.c:575:
+	BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#659: FILE: tools/perf/builtin-sched.c:589:
+	BUG_ON(err);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#660: FILE: tools/perf/builtin-sched.c:590:
+	err = pthread_attr_setstacksize(&attr, (size_t)(16*1024));
 	                                                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#661: FILE: tools/perf/builtin-sched.c:591:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#663: FILE: tools/perf/builtin-sched.c:593:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#665: FILE: tools/perf/builtin-sched.c:595:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#673: FILE: tools/perf/builtin-sched.c:603:
+		BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#697: FILE: tools/perf/builtin-sched.c:627:
+		BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#701: FILE: tools/perf/builtin-sched.c:631:
+	BUG_ON(ret);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#707: FILE: tools/perf/builtin-sched.c:637:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#719: FILE: tools/perf/builtin-sched.c:649:
+			printk("task %ld missed events: %ld\n", i, missed);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#721: FILE: tools/perf/builtin-sched.c:651:
+		BUG_ON(ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#728: FILE: tools/perf/builtin-sched.c:658:
+		BUG_ON(ret);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#737: FILE: tools/perf/builtin-sched.c:667:
+	runavg_cpu_usage = (runavg_cpu_usage*9 + cpu_usage)/10;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#737: FILE: tools/perf/builtin-sched.c:667:
+	runavg_cpu_usage = (runavg_cpu_usage*9 + cpu_usage)/10;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#742: FILE: tools/perf/builtin-sched.c:672:
+	runavg_parent_cpu_usage = (runavg_parent_cpu_usage*9 +
 	                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#743: FILE: tools/perf/builtin-sched.c:673:
+				   parent_cpu_usage)/10;
 				                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#746: FILE: tools/perf/builtin-sched.c:676:
+	BUG_ON(ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#761: FILE: tools/perf/builtin-sched.c:691:
+	printk("nr_run_events:        %ld\n", nr_run_events);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#762: FILE: tools/perf/builtin-sched.c:692:
+	printk("nr_sleep_events:      %ld\n", nr_sleep_events);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#763: FILE: tools/perf/builtin-sched.c:693:
+	printk("nr_wakeup_events:     %ld\n", nr_wakeup_events);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#766: FILE: tools/perf/builtin-sched.c:696:
+		printk("target-less wakeups:  %ld\n", targetless_wakeups);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#768: FILE: tools/perf/builtin-sched.c:698:
+		printk("multi-target wakeups: %ld\n", multitarget_wakeups);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#770: FILE: tools/perf/builtin-sched.c:700:
+		printk("run events optimized: %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: tools/perf/builtin-sched.c:701:
+		printk("run events optimized: %ld\n",
+			nr_run_events_optimized);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#800: FILE: tools/perf/builtin-sched.c:730:
+	run_avg = (run_avg*9 + delta)/10;
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#800: FILE: tools/perf/builtin-sched.c:730:
+	run_avg = (run_avg*9 + delta)/10;
 	                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#802: FILE: tools/perf/builtin-sched.c:732:
+	printk("#%-3ld: %0.3f, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#803: FILE: tools/perf/builtin-sched.c:733:
+	printk("#%-3ld: %0.3f, ",
+		nr_runs, (double)delta/1000000.0);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#803: FILE: tools/perf/builtin-sched.c:733:
+		nr_runs, (double)delta/1000000.0);
 		                      ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#805: FILE: tools/perf/builtin-sched.c:735:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#806: FILE: tools/perf/builtin-sched.c:736:
+	printk("%0.2f +- %0.2f, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: tools/perf/builtin-sched.c:737:
+	printk("%0.2f +- %0.2f, ",
+		(double)avg_delta/1e6, (double)std_dev/1e6);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#807: FILE: tools/perf/builtin-sched.c:737:
+		(double)avg_delta/1e6, (double)std_dev/1e6);
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#807: FILE: tools/perf/builtin-sched.c:737:
+		(double)avg_delta/1e6, (double)std_dev/1e6);
 		                                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#809: FILE: tools/perf/builtin-sched.c:739:
+	printk("ravg: %0.2f, ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#810: FILE: tools/perf/builtin-sched.c:740:
+	printk("ravg: %0.2f, ",
+		(double)run_avg/1e6);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#810: FILE: tools/perf/builtin-sched.c:740:
+		(double)run_avg/1e6);
 		               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#812: FILE: tools/perf/builtin-sched.c:742:
+	printk("cpu: %0.2f / %0.2f",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: tools/perf/builtin-sched.c:743:
+	printk("cpu: %0.2f / %0.2f",
+		(double)cpu_usage/1e6, (double)runavg_cpu_usage/1e6);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#813: FILE: tools/perf/builtin-sched.c:743:
+		(double)cpu_usage/1e6, (double)runavg_cpu_usage/1e6);
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#813: FILE: tools/perf/builtin-sched.c:743:
+		(double)cpu_usage/1e6, (double)runavg_cpu_usage/1e6);
 		                                               ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#815: FILE: tools/perf/builtin-sched.c:745:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: tools/perf/builtin-sched.c:747:
+ ^I * rusage statistics done by the parent, these are less$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#817: FILE: tools/perf/builtin-sched.c:747:
+ ^I * rusage statistics done by the parent, these are less$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: tools/perf/builtin-sched.c:748:
+ ^I * accurate than the sum_exec_runtime based statistics:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#818: FILE: tools/perf/builtin-sched.c:748:
+ ^I * accurate than the sum_exec_runtime based statistics:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: tools/perf/builtin-sched.c:749:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#819: FILE: tools/perf/builtin-sched.c:749:
+ ^I */$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#820: FILE: tools/perf/builtin-sched.c:750:
+	printk(" [%0.2f / %0.2f]",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#821: FILE: tools/perf/builtin-sched.c:751:
+	printk(" [%0.2f / %0.2f]",
+		(double)parent_cpu_usage/1e6,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#821: FILE: tools/perf/builtin-sched.c:751:
+		(double)parent_cpu_usage/1e6,
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#822: FILE: tools/perf/builtin-sched.c:752:
+		(double)runavg_parent_cpu_usage/1e6);
 		                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#825: FILE: tools/perf/builtin-sched.c:755:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#828: FILE: tools/perf/builtin-sched.c:758:
+		printk(" (%ld sleep corrections)\n", nr_sleep_corrections);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#840: FILE: tools/perf/builtin-sched.c:770:
+	printk("the run test took %Ld nsecs\n", T1-T0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#840: FILE: tools/perf/builtin-sched.c:770:
+	printk("the run test took %Ld nsecs\n", T1-T0);
 	                                          ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#840: FILE: tools/perf/builtin-sched.c:770:
+	printk("the run test took %Ld nsecs\n", T1-T0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#846: FILE: tools/perf/builtin-sched.c:776:
+	printk("the sleep test took %Ld nsecs\n", T1-T0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#846: FILE: tools/perf/builtin-sched.c:776:
+	printk("the sleep test took %Ld nsecs\n", T1-T0);
 	                                            ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#846: FILE: tools/perf/builtin-sched.c:776:
+	printk("the sleep test took %Ld nsecs\n", T1-T0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: tools/perf/builtin-sched.c:802:
+static void process_sched_wakeup_event(struct event *event,
+		  int cpu __used, u64 timestamp __used, struct thread *thread __used)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#863: FILE: tools/perf/builtin-sched.c:808:
+static void process_sched_switch_event(struct event *event,
+		  int cpu __used, u64 timestamp __used, struct thread *thread __used)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: tools/perf/builtin-sched.c:833:
+	printf("id %d, type: %d, event: %s\n",
+		raw_event->header.type, type, event->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#946: FILE: tools/perf/builtin-sched.c:1084:
+	printk("------------------------------------------------------------\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072364.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 74 warnings, 47 checks, 931 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072364.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
