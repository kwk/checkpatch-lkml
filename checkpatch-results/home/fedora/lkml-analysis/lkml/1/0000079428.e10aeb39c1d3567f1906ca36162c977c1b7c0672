WARNING:NEW_TYPEDEFS: do not add new typedefs
#168: FILE: arch/score/include/asm/elf.h:33:
+typedef unsigned long	elf_greg_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#171: FILE: arch/score/include/asm/elf.h:36:
+typedef elf_greg_t	elf_gregset_t[ELF_NGREG];

WARNING:NEW_TYPEDEFS: do not add new typedefs
#176: FILE: arch/score/include/asm/elf.h:39:
+typedef double		elf_fpreg_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#177: FILE: arch/score/include/asm/elf.h:40:
+typedef elf_fpreg_t	elf_fpregset_t;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#209: FILE: arch/score/include/asm/irq.h:23:
+extern void interrupt_exception_vector(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#250: FILE: arch/score/include/asm/linkage.h:4:
+#define __ALIGN .align 2

CHECK:SPACING: No space is necessary after a cast
#265: FILE: arch/score/include/asm/page.h:61:
+#define __va(x)		((void *)((unsigned long) (x) + PAGE_OFFSET))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#278: FILE: arch/score/include/asm/pgalloc.h:75:
+#define __pte_free_tlb(tlb, pte, buf)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb), pte);			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: arch/score/include/asm/pgtable.h:178:
+#define __swp_offset(x) ^I((x).val >> 11)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#428: FILE: arch/score/include/asm/uaccess.h:18:
 	|| ((unsigned long)(size) > 0x80000000)			\
+	|| (((unsigned long __force)(addr) + (unsigned long)(size)) > 0x80000000)))

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#433: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#438: FILE: arch/score/include/asm/ucontext.h:1:
+#include <asm-generic/ucontext.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#612: FILE: arch/score/kernel/irq.c:60:
+		__raw_writel((__raw_readl(SCORE_PIC + INT_MASKL) | \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#617: FILE: arch/score/kernel/irq.c:63:
+		__raw_writel((__raw_readl(SCORE_PIC + INT_MASKH) | \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#628: FILE: arch/score/kernel/irq.c:72:
+		__raw_writel((__raw_readl(SCORE_PIC + INT_MASKL) & \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#633: FILE: arch/score/kernel/irq.c:75:
+		__raw_writel((__raw_readl(SCORE_PIC + INT_MASKH) & \

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#654: FILE: arch/score/kernel/module.c:23:
  * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'r_offset < 0'
#672: FILE: arch/score/kernel/module.c:63:
+		if ((r_offset < 0) ||
+		    (r_offset > (symsec->sh_size / sizeof(Elf32_Sym)))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#673: FILE: arch/score/kernel/module.c:64:
+		    (r_offset > (symsec->sh_size / sizeof(Elf32_Sym)))) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#712: FILE: arch/score/kernel/ptrace.c:23:
  * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: arch/score/kernel/ptrace.c:47:
+	ret = user_regset_copyout_zero(&pos, &count, &kbuf, &ubuf,
+					0, offsetof(struct pt_regs, regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: arch/score/kernel/ptrace.c:57:
+		ret = user_regset_copyout_zero(&pos, &count, &kbuf, &ubuf,
+						sizeof(struct pt_regs), -1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: arch/score/kernel/ptrace.c:79:
+	ret = user_regset_copyin(&pos, &count, &kbuf, &ubuf,
+				  regs->regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#942: FILE: arch/score/kernel/ptrace.c:336:
+		ret = copy_regset_to_user(child, &user_score_native_view,
+						REGSET_GENERAL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#950: FILE: arch/score/kernel/ptrace.c:343:
+		ret = copy_regset_from_user(child, &user_score_native_view,
+						REGSET_GENERAL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1070: FILE: arch/score/kernel/signal.c:122:
+static void __user *get_sigframe(struct k_sigaction *ka,
+			struct pt_regs *regs, size_t frame_size)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1079: FILE: arch/score/kernel/signal.c:134:
+	return (void __user*)((sp - frame_size) & ~7);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1088: FILE: arch/score/kernel/signal.c:140:
+	const stack_t __user *uss = (const stack_t __user *) regs->regs[4];

CHECK:SPACING: No space is necessary after a cast
#1089: FILE: arch/score/kernel/signal.c:141:
+	stack_t __user *uoss = (stack_t __user *) regs->regs[5];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: arch/score/kernel/signal.c:193:
+static int setup_rt_frame(struct k_sigaction *ka, struct pt_regs *regs,
 		int signr, sigset_t *set, siginfo_t *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: arch/score/kernel/signal.c:246:
+static int handle_signal(unsigned long sig, siginfo_t *info,
 	struct k_sigaction *ka, sigset_t *oldset, struct pt_regs *regs)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1153: FILE: arch/score/kernel/sys_call_table.c:1:
+#include <linux/syscalls.h>

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1160: FILE: arch/score/kernel/sys_call_table.c:8:
+#define __SYSCALL(nr, call) [nr] = (call),

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: arch/score/kernel/sys_score.c:34:
+asmlinkage long $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1222: FILE: arch/score/kernel/sys_score.c:94:
+	filename = getname((char __user*)regs->regs[4]);

ERROR:SPACING: space required before that '*' (ctx:VxB)
#1229: FILE: arch/score/kernel/sys_score.c:99:
+	error = do_execve(filename, (char __user *__user*)regs->regs[5],
 	                                                ^

CHECK:SPACING: No space is necessary after a cast
#1361: FILE: arch/score/mm/init.c:139:
+		virt_to_phys((void *) start),

CHECK:SPACING: No space is necessary after a cast
#1362: FILE: arch/score/mm/init.c:140:
+		virt_to_phys((void *) end));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 12 warnings, 18 checks, 1077 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
