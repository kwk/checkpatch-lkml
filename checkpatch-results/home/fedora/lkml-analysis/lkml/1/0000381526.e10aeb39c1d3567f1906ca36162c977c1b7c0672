CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: fs/9p/fid.c:83:
+	P9_DPRINTK(P9_DEBUG_VFS, " dentry: %s (%p) uid %d any %d\n",
+		dentry->d_iname, dentry, uid, any);

CHECK:SPACING: No space is necessary after a cast
#154: FILE: fs/9p/fid.c:84:
+	dent = (struct v9fs_dentry *) dentry->d_fsdata;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: fs/9p/fid.c:161:
+			fid = p9_client_attach(v9ses->clnt, NULL, uname, uid,
+				v9ses->aname);

CHECK:BRACES: Unbalanced braces around else statement
#252: FILE: fs/9p/fid.c:168:
+	} else /* walk from the parent */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#258: FILE: fs/9p/fid.c:174:
+	wnames = kmalloc(sizeof(char *) * n, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#263: FILE: fs/9p/fid.c:179:
+		wnames[i] = (char *) d->d_name.name;

CHECK:CAMELCASE: Avoid CamelCase: <Opt_access>
#305: FILE: fs/9p/v9fs.c:95:
+	Opt_access,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#350: FILE: fs/9p/v9fs.c:196:
+			if (strcmp(s, "user") == 0)
[...]
+			else if (strcmp(s, "any") == 0)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#354: FILE: fs/9p/v9fs.c:200:
+			else {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#356: FILE: fs/9p/v9fs.c:202:
+				v9ses->uid = simple_strtol(s, &e, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: fs/9p/v9fs.c:283:
+	if (!v9fs_extended(v9ses) &&
+		((v9ses->flags&V9FS_ACCESS_MASK) == V9FS_ACCESS_USER)) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#407: FILE: fs/9p/v9fs.c:283:
+		((v9ses->flags&V9FS_ACCESS_MASK) == V9FS_ACCESS_USER)) {
 		              ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#408: FILE: fs/9p/v9fs.c:284:
+		((v9ses->flags&V9FS_ACCESS_MASK) == V9FS_ACCESS_USER)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: fs/9p/v9fs.c:291:
+	fid = p9_client_attach(v9ses->clnt, NULL, v9ses->uname, ~0,
+							v9ses->aname);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fid->qid.version'
#509: FILE: fs/9p/vfs_inode.c:596:
+	if ((fid->qid.version) && (v9ses->cache))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'v9ses->cache'
#509: FILE: fs/9p/vfs_inode.c:596:
+	if ((fid->qid.version) && (v9ses->cache))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: include/net/9p/9p.h:389:
+struct p9_fcall *p9_create_tauth(u32 afid, char *uname, char *aname,
+	u32 n_uname, int dotu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: include/net/9p/client.h:62:
+struct p9_fid *p9_client_auth(struct p9_client *clnt, char *uname,
+						u32 n_uname, char *aname);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#627: FILE: net/9p/client.c:168:
+	tc = p9_create_tattach(fid->fid, afid?afid->fid:P9_NOFID, uname, aname,
 	                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#627: FILE: net/9p/client.c:168:
+	tc = p9_create_tattach(fid->fid, afid?afid->fid:P9_NOFID, uname, aname,
 	                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: net/9p/client.c:169:
+	tc = p9_create_tattach(fid->fid, afid?afid->fid:P9_NOFID, uname, aname,
+		n_uname, clnt->dotu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: net/9p/client.c:195:
+struct p9_fid *p9_client_auth(struct p9_client *clnt, char *uname,
+	u32 n_uname, char *aname)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: net/9p/conv.c:551:
+struct p9_fcall *p9_create_tauth(u32 afid, char *uname, char *aname,
+	u32 n_uname, int dotu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: net/9p/conv.c:590:
+p9_create_tattach(u32 fid, u32 afid, char *uname, char *aname,
+	u32 n_uname, int dotu)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000381526.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 22 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000381526.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
