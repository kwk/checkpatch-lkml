WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'ee8ffeaf1ba6aee56cf822cba291fbacb5dd450b', maybe rebased or not pulled?
#29: 
commit ee8ffeaf1ba6aee56cf822cba291fbacb5dd450b

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
    we connected, we must synthesize them so that 'perf record' can get what

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#43: 
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: Documentation/perf_counter/builtin-record.c:37:
+#define ALIGN(x,a)		__ALIGN_MASK(x,(typeof(x))(a)-1)
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: Documentation/perf_counter/builtin-record.c:37:
+#define ALIGN(x,a)		__ALIGN_MASK(x,(typeof(x))(a)-1)
                   		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#53: FILE: Documentation/perf_counter/builtin-record.c:37:
+#define ALIGN(x,a)		__ALIGN_MASK(x,(typeof(x))(a)-1)
                   		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#54: FILE: Documentation/perf_counter/builtin-record.c:38:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))
                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#54: FILE: Documentation/perf_counter/builtin-record.c:38:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))
                             	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#54: FILE: Documentation/perf_counter/builtin-record.c:38:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))
                             	             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#54: FILE: Documentation/perf_counter/builtin-record.c:38:
+#define __ALIGN_MASK(x,mask)	(((x)+(mask))&~(mask))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#95: FILE: Documentation/perf_counter/builtin-record.c:224:
+		case 'p': target_pid			=   atoi(optarg); break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#121: FILE: Documentation/perf_counter/builtin-record.c:368:
+};
+struct comm_event {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: Documentation/perf_counter/builtin-record.c:370:
+	__u32 pid,tid;
 	         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: Documentation/perf_counter/builtin-record.c:400:
+        int nr = sscanf(bf, "%d %s %c %d %d ",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: Documentation/perf_counter/builtin-record.c:400:
+        int nr = sscanf(bf, "%d %s %c %d %d ",$

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: Documentation/perf_counter/builtin-record.c:416:
+	int ret = write(output, &comm_ev, comm_ev.header.size);
+	if (ret < 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp"
#184: FILE: Documentation/perf_counter/builtin-record.c:431:
+	if (fp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: Documentation/perf_counter/builtin-record.c:444:
+		size_t size;
+		if (fgets(bf, sizeof(bf), fp) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fgets"
#197: FILE: Documentation/perf_counter/builtin-record.c:444:
+		if (fgets(bf, sizeof(bf), fp) == NULL)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#201: FILE: Documentation/perf_counter/builtin-record.c:448:
+		sscanf(bf, "%llx-%llx %c%c%c%c %llx %x:%x %lu",
+			&mmap_ev.start, &mmap_ev.len,
+                        &vm_read, &vm_write, &vm_exec, &vm_mayshare,
+                        &mmap_ev.pgoff, &major, &minor, &ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: Documentation/perf_counter/builtin-record.c:449:
+		sscanf(bf, "%llx-%llx %c%c%c%c %llx %x:%x %lu",
+			&mmap_ev.start, &mmap_ev.len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: Documentation/perf_counter/builtin-record.c:450:
+                        &vm_read, &vm_write, &vm_exec, &vm_mayshare,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: Documentation/perf_counter/builtin-record.c:450:
+                        &vm_read, &vm_write, &vm_exec, &vm_mayshare,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: Documentation/perf_counter/builtin-record.c:451:
+                        &mmap_ev.pgoff, &major, &minor, &ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: Documentation/perf_counter/builtin-record.c:451:
+                        &mmap_ev.pgoff, &major, &minor, &ino);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!execname"
#208: FILE: Documentation/perf_counter/builtin-record.c:455:
+			if (execname == NULL || execname[1] != '/')

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: Documentation/perf_counter/builtin-record.c:468:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: Documentation/perf_counter/builtin-record.c:487:
+		pid_t pgid = pid_synthesize_comm_event(pid);
+		pid_synthesize_mmap_events(pid, pgid);

CHECK:BRACES: braces {} should be used on all arms of this statement
#256: FILE: Documentation/perf_counter/builtin-record.c:565:
+	if (!system_wide) {
[...]
+	} else for (i = 0; i < nr_cpus; i++)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#258: FILE: Documentation/perf_counter/builtin-record.c:567:
+	} else for (i = 0; i < nr_cpus; i++)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#258: FILE: Documentation/perf_counter/builtin-record.c:567:
+	} else for (i = 0; i < nr_cpus; i++)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 10 warnings, 10 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
