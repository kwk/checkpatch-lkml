WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#107: FILE: drivers/serial/Kconfig:327:
+config SERIAL_SB1250_DUART
+	tristate "BCM1xxx on-chip DUART serial support"
+	depends on SIBYTE_SB1xxx_SOC=y
+	select SERIAL_CORE
+	default y
+	---help---
+	  Support for the asynchronous serial interface (DUART) included in
+	  the BCM1250 and derived System-On-a-Chip (SOC) devices.  Note that
+	  the letter D in DUART stands for "dual", which is how the device
+	  is implemented.  Depending on the SOC configuration there may be
+	  one or more DUARTs available of which all are handled.
+
+	  If unsure, say Y.  To compile this driver as a module, choose M here:
+	  the module will be called sb1250-duart.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#122: FILE: drivers/serial/Kconfig:342:
+config SERIAL_SB1250_DUART_CONSOLE
+	bool "Support for console on a BCM1xxx DUART serial port"
+	depends on SERIAL_SB1250_DUART=y
+	select SERIAL_CORE_CONSOLE
+	default y
+	---help---
+	  If you say Y here, it will be possible to use a serial port as the
+	  system console (the system console is the device which receives all
+	  kernel messages and warnings and which allows logins in single user
+	  mode).
+
+	  If unsure, say Y.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: drivers/serial/sb1250-duart.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#154: FILE: drivers/serial/sb1250-duart.c:2:
+ *	drivers/serial/sb1250-duart.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#195: FILE: drivers/serial/sb1250-duart.c:43:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#196: FILE: drivers/serial/sb1250-duart.c:44:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: drivers/serial/sb1250-duart.c:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: drivers/serial/sb1250-duart.c:73:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#230: FILE: drivers/serial/sb1250-duart.c:78:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#258: FILE: drivers/serial/sb1250-duart.c:106:
+#define __unused __attribute__((__unused__))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: drivers/serial/sb1250-duart.c:108:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#344: FILE: drivers/serial/sb1250-duart.c:192:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: drivers/serial/sb1250-duart.c:235:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#485: FILE: drivers/serial/sb1250-duart.c:333:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#508: FILE: drivers/serial/sb1250-duart.c:356:
+			if (status & M_DUART_RCVD_BRK) {
[...]
+			} else if (status & M_DUART_FRM_ERR)
[...]
+			else if (status & M_DUART_PARITY_ERR)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/serial/sb1250-duart.c:471:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#667: FILE: drivers/serial/sb1250-duart.c:515:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#794: FILE: drivers/serial/sb1250-duart.c:642:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#827: FILE: drivers/serial/sb1250-duart.c:675:
+		printk(err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#835: FILE: drivers/serial/sb1250-duart.c:683:
+		printk(err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#854: FILE: drivers/serial/sb1250-duart.c:702:
+		printk(err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#862: FILE: drivers/serial/sb1250-duart.c:710:
+			printk(err);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#896: FILE: drivers/serial/sb1250-duart.c:744:
+static int sbd_verify_port(struct uart_port *uport, struct serial_struct *ser)
                                                                           ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#909: FILE: drivers/serial/sb1250-duart.c:757:
+
+

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#910: FILE: drivers/serial/sb1250-duart.c:758:
+static struct uart_ops sbd_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#976: FILE: drivers/serial/sb1250-duart.c:824:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1067: FILE: drivers/serial/sb1250-duart.c:915:
+#define SERIAL_SB1250_DUART_CONSOLE	&sbd_console

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1072: FILE: drivers/serial/sb1250-duart.c:920:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chan' - possible side-effects?
#1143: FILE: include/asm-mips/sibyte/bcm1480_regs.h:223:
+#define A_BCM1480_DUART_CHANREG(chan, reg)				\
+	(A_BCM1480_DUART(chan) +					\
+	 BCM1480_DUART_CHANREG_SPACING * (((chan) & 1) + 1) + (reg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chan' - possible side-effects?
#1155: FILE: include/asm-mips/sibyte/bcm1480_regs.h:235:
+#define A_BCM1480_DUART_IMRREG(chan)					\
+	(A_BCM1480_DUART_CTRLREG((chan), R_BCM1480_DUART_IMRREG(chan)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chan' - possible side-effects?
#1157: FILE: include/asm-mips/sibyte/bcm1480_regs.h:237:
+#define A_BCM1480_DUART_ISRREG(chan)					\
+	(A_BCM1480_DUART_CTRLREG((chan), R_BCM1480_DUART_ISRREG(chan)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1291: FILE: include/asm-mips/sibyte/sb1250_uart.h:250:
+#define M_DUART_ISR_ALL_A	    _SB_MAKEMASK(4,0)
                          	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1297: FILE: include/asm-mips/sibyte/sb1250_uart.h:256:
+#define M_DUART_ISR_ALL_B	    _SB_MAKEMASK(4,4)
                          	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1305: FILE: include/asm-mips/sibyte/sb1250_uart.h:269:
+#define M_DUART_ISR_ALL		    _SB_MAKEMASK(4,0)
                        		                  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407087.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 13 warnings, 17 checks, 1206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407087.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
