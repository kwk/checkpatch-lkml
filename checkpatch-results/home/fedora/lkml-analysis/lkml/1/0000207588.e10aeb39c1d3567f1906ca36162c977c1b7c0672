WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: fs/proc/base.c:131:
+#define MNT(NAME, MODE, OTYPE) ^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: fs/proc/base.c:132:
+^INOD(NAME, (S_IFDIR|(MODE)), ^I^I^I\$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#76: FILE: fs/proc/base.c:132:
+	NOD(NAME, (S_IFDIR|(MODE)), 			\
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#78: FILE: fs/proc/base.c:134:
+		{} )

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#87: FILE: fs/proc/base.c:2460:
+	MNT("net",        S_IRUGO|S_IXUGO, net),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#87: FILE: fs/proc/base.c:2460:
+	MNT("net",        S_IRUGO|S_IXUGO, net),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#115: FILE: fs/proc/proc_net.c:123:
+void *proc_net_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                     ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: fs/proc/proc_net.c:167:
+	while (d_mountpoint(nd->path.dentry) &&
+		follow_down(&nd->path.mnt, &nd->path.dentry))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: fs/proc/proc_net.c:190:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#251: FILE: fs/proc/proc_net.c:216:
+	printk("%s: get root inode failed\n", __func__);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#252: FILE: fs/proc/proc_net.c:217:
+	iput(root_inode);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: fs/proc/proc_net.c:234:
+static int proc_net_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data, struct vfsmount *mnt)

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: fs/proc/proc_net.c:247:
+		int err;
+		sb->s_flags = flags;

WARNING:LINE_SPACING: Missing a blank line after declarations
#447: FILE: security/selinux/hooks.c:1151:
+		int namelen = strlen(name);
+		buflen -= namelen;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 5 checks, 376 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
