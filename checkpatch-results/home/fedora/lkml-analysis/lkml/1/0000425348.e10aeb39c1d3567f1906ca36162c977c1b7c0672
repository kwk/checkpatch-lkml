WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
fragmentation. This patch introduces two metrics for evaluation the state of

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: include/linux/compaction.h:1:
+#ifndef _LINUX_COMPACTION_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: include/linux/compaction.h:5:
+extern int unusable_free_index(struct zone *zone, unsigned int target_order);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: include/linux/compaction.h:6:
+extern int fragmentation_index(struct zone *zone, unsigned int target_order);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: mm/compaction.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#70: FILE: mm/compaction.c:2:
+ * linux/mm/compaction.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: mm/compaction.c:15:
+void calculate_freepages(struct zone *zone, unsigned int target_order,
+				unsigned long *ret_freepages,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#92: FILE: mm/compaction.c:24:
+	freepages = areas_free = suitable_areas_free = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: mm/compaction.c:57:
+	calculate_freepages(zone, target_order,
+				&freepages, &areas_free, &suitable_areas_free);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: mm/compaction.c:79:
+	calculate_freepages(zone, target_order,
+				&freepages, &areas_free, &suitable_areas_free);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: mm/vmstat.c:629:
+static void pagetypeinfo_showunusable_print(struct seq_file *m,
+					pg_data_t *pgdat, struct zone *zone)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: mm/vmstat.c:634:
+	seq_printf(m, "Node %4d, zone %8s %19s",
+				pgdat->node_id,

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#201: FILE: mm/vmstat.c:647:
+	seq_printf(m, "\nPercentage unusable free memory at order\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: mm/vmstat.c:654:
+static void pagetypeinfo_showfragmentation_print(struct seq_file *m,
+					pg_data_t *pgdat, struct zone *zone)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: mm/vmstat.c:659:
+	seq_printf(m, "Node %4d, zone %8s %19s",
+				pgdat->node_id,

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#226: FILE: mm/vmstat.c:672:
+	seq_printf(m, "\nFragmentation index\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425348.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 10 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425348.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
