WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#60: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: fs/ceph/osd_client.c:1:
+#include "ceph_debug.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const struct ceph_connection_operations '
#79: FILE: fs/ceph/osd_client.c:15:
+const static struct ceph_connection_operations osd_con_ops;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#125: FILE: fs/ceph/osd_client.c:61:
+		dout(" skipping last %llu, final file extent %llu~%llu\n",
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#135: FILE: fs/ceph/osd_client.c:71:
+	dout("calc_layout %s (%d) %llu~%llu (%d pages)\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'calc_layout', this function's name, in a string
#135: FILE: fs/ceph/osd_client.c:71:
+	dout("calc_layout %s (%d) %llu~%llu (%d pages)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: fs/ceph/osd_client.c:75:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#145: FILE: fs/ceph/osd_client.c:81:
+	dout("osdc put_request %p %d -> %d\n", req, atomic_read(&req->r_ref),
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#146: FILE: fs/ceph/osd_client.c:82:
+	     atomic_read(&req->r_ref)-1);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: fs/ceph/osd_client.c:83:
+	BUG_ON(atomic_read(&req->r_ref) <= 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#194: FILE: fs/ceph/osd_client.c:130:
+	size_t msg_size = sizeof(*head) + num_op*sizeof(*op);
 	                                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#204: FILE: fs/ceph/osd_client.c:140:
+	if (req == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#221: FILE: fs/ceph/osd_client.c:157:
+	WARN_ON((flags & (CEPH_OSD_FLAG_READ|CEPH_OSD_FLAG_WRITE)) == 0);
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#273: FILE: fs/ceph/osd_client.c:209:
+		prevofs = le64_to_cpu((op-1)->extent.offset);
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#275: FILE: fs/ceph/osd_client.c:211:
+						      (off-prevofs));
 						          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#290: FILE: fs/ceph/osd_client.c:226:
+	BUG_ON(p > msg->front.iov_base + msg->front.iov_len);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: fs/ceph/osd_client.c:248:
+			BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: fs/ceph/osd_client.c:295:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#373: FILE: fs/ceph/osd_client.c:309:
+	dout("osd_reset osd%d\n", osd->o_osd);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osd_reset', this function's name, in a string
#373: FILE: fs/ceph/osd_client.c:309:
+	dout("osd_reset osd%d\n", osd->o_osd);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#407: FILE: fs/ceph/osd_client.c:343:
+		dout("get_osd %p %d -> %d\n", osd, atomic_read(&osd->o_ref)-1,
 		^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#407: FILE: fs/ceph/osd_client.c:343:
+		dout("get_osd %p %d -> %d\n", osd, atomic_read(&osd->o_ref)-1,
 		                                                           ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_osd', this function's name, in a string
#407: FILE: fs/ceph/osd_client.c:343:
+		dout("get_osd %p %d -> %d\n", osd, atomic_read(&osd->o_ref)-1,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#410: FILE: fs/ceph/osd_client.c:346:
+		return osd;
+	} else {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#411: FILE: fs/ceph/osd_client.c:347:
+		dout("get_osd %p FAIL\n", osd);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_osd', this function's name, in a string
#411: FILE: fs/ceph/osd_client.c:347:
+		dout("get_osd %p FAIL\n", osd);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#418: FILE: fs/ceph/osd_client.c:354:
+	dout("put_osd %p %d -> %d\n", osd, atomic_read(&osd->o_ref),
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'put_osd', this function's name, in a string
#418: FILE: fs/ceph/osd_client.c:354:
+	dout("put_osd %p %d -> %d\n", osd, atomic_read(&osd->o_ref),

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#431: FILE: fs/ceph/osd_client.c:367:
+	dout("remove_osd %p\n", osd);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove_osd', this function's name, in a string
#431: FILE: fs/ceph/osd_client.c:367:
+	dout("remove_osd %p\n", osd);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#432: FILE: fs/ceph/osd_client.c:368:
+	BUG_ON(!list_empty(&osd->o_requests));

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#445: FILE: fs/ceph/osd_client.c:381:
+	dout("reset_osd %p osd%d\n", osd, osd->o_osd);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reset_osd', this function's name, in a string
#445: FILE: fs/ceph/osd_client.c:381:
+	dout("reset_osd %p osd%d\n", osd, osd->o_osd);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#470: FILE: fs/ceph/osd_client.c:406:
+			BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: fs/ceph/osd_client.c:430:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#508: FILE: fs/ceph/osd_client.c:444:
+	dout("register_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_request', this function's name, in a string
#508: FILE: fs/ceph/osd_client.c:444:
+	dout("register_request %p tid %lld\n", req, req->r_tid);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: fs/ceph/osd_client.c:450:
+		jiffies + osdc->client->mount_args.osd_timeout*HZ;
 		                                              ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#518: FILE: fs/ceph/osd_client.c:454:
+		dout("  timeout on tid %llu at %lu\n", req->r_tid,
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: fs/ceph/osd_client.c:457:
+		schedule_delayed_work(&osdc->timeout_work,
+		      round_jiffies_relative(req->r_timeout_stamp - jiffies));

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#532: FILE: fs/ceph/osd_client.c:468:
+	dout("__unregister_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__unregister_request', this function's name, in a string
#532: FILE: fs/ceph/osd_client.c:468:
+	dout("__unregister_request %p tid %lld\n", req, req->r_tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#545: FILE: fs/ceph/osd_client.c:481:
+			dout("no requests, canceling timeout\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#552: FILE: fs/ceph/osd_client.c:488:
+			dout("rescheduled timeout on tid %llu at %lu\n",
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: fs/ceph/osd_client.c:491:
+			schedule_delayed_work(&osdc->timeout_work,
+			      round_jiffies_relative(req->r_timeout_stamp -

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#590: FILE: fs/ceph/osd_client.c:526:
+	dout("map_osds %p tid %lld\n", req, req->r_tid);
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_osd"
#600: FILE: fs/ceph/osd_client.c:536:
+	    (req->r_osd == NULL && o == -1))

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#603: FILE: fs/ceph/osd_client.c:539:
+	dout("map_osds tid %llu pgid %llx pool %d osd%d (was osd%d)\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#630: FILE: fs/ceph/osd_client.c:566:
+		dout("map_osds osd %p is osd%d\n", req->r_osd, o);
 		^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_osd"
#660: FILE: fs/ceph/osd_client.c:596:
+	if (req->r_osd == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#661: FILE: fs/ceph/osd_client.c:597:
+		dout("send_request %p no up osds in pg\n", req);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#666: FILE: fs/ceph/osd_client.c:602:
+	dout("send_request %p tid %llu to osd%d flags %d\n",
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#674: FILE: fs/ceph/osd_client.c:610:
+	req->r_timeout_stamp = jiffies+osdc->client->mount_args.osd_timeout*HZ;
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#674: FILE: fs/ceph/osd_client.c:610:
+	req->r_timeout_stamp = jiffies+osdc->client->mount_args.osd_timeout*HZ;
 	                                                                   ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#701: FILE: fs/ceph/osd_client.c:637:
+	dout("timeout\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#713: FILE: fs/ceph/osd_client.c:649:
+			dout("osdc resending prev failed %lld\n", req->r_tid);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#716: FILE: fs/ceph/osd_client.c:652:
+				dout("osdc failed again on %lld\n", req->r_tid);
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#731: FILE: fs/ceph/osd_client.c:667:
+		dout(" tid %llu (at least) timed out on osd%d\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#765: FILE: fs/ceph/osd_client.c:701:
+	dout("handle_reply %p tid %llu\n", msg, tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#765: FILE: fs/ceph/osd_client.c:701:
+	dout("handle_reply %p tid %llu\n", msg, tid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#770: FILE: fs/ceph/osd_client.c:706:
+	if (req == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#771: FILE: fs/ceph/osd_client.c:707:
+		dout("handle_reply tid %llu dne\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#771: FILE: fs/ceph/osd_client.c:707:
+		dout("handle_reply tid %llu dne\n", tid);
 		                            ^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#771: FILE: fs/ceph/osd_client.c:707:
+		dout("handle_reply tid %llu dne\n", tid);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#789: FILE: fs/ceph/osd_client.c:725:
+		unsigned bytes;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#793: FILE: fs/ceph/osd_client.c:729:
+		dout("handle_reply result %d bytes %d\n", req->r_result,
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#793: FILE: fs/ceph/osd_client.c:729:
+		dout("handle_reply result %d bytes %d\n", req->r_result,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#803: FILE: fs/ceph/osd_client.c:739:
+		dout("handle_reply tid %llu dup ack\n", tid);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#803: FILE: fs/ceph/osd_client.c:739:
+		dout("handle_reply tid %llu dup ack\n", tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#807: FILE: fs/ceph/osd_client.c:743:
+	dout("handle_reply tid %llu flags %d\n", tid, flags);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#807: FILE: fs/ceph/osd_client.c:743:
+	dout("handle_reply tid %llu flags %d\n", tid, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#837: FILE: fs/ceph/osd_client.c:773:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#857: FILE: fs/ceph/osd_client.c:793:
+	dout("kick_requests osd%d\n", kickosd ? kickosd->o_osd : -1);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kick_requests', this function's name, in a string
#857: FILE: fs/ceph/osd_client.c:793:
+	dout("kick_requests osd%d\n", kickosd ? kickosd->o_osd : -1);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#877: FILE: fs/ceph/osd_client.c:813:
+			dout(" r_resend set on tid %llu\n", req->r_tid);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#893: FILE: fs/ceph/osd_client.c:829:
+			dout(" setting r_resend on %llu\n", req->r_tid);
 			^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_osd"
#897: FILE: fs/ceph/osd_client.c:833:
+		if (req->r_osd == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#898: FILE: fs/ceph/osd_client.c:834:
+			dout("tid %llu maps to no valid osd\n", req->r_tid);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#904: FILE: fs/ceph/osd_client.c:840:
+		dout("kicking tid %llu osd%d\n", req->r_tid, req->r_osd->o_osd);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#908: FILE: fs/ceph/osd_client.c:844:
+			dout(" setting r_resend on %llu\n", req->r_tid);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#915: FILE: fs/ceph/osd_client.c:851:
+		dout("%d requests for down osds, need new map\n", needmap);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#936: FILE: fs/ceph/osd_client.c:872:
+	dout("handle_map have %u\n", osdc->osdmap ? osdc->osdmap->epoch : 0);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#952: FILE: fs/ceph/osd_client.c:888:
+	dout(" %d inc maps\n", nr_maps);
 	^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#954: FILE: fs/ceph/osd_client.c:890:
+		ceph_decode_need(&p, end, 2*sizeof(u32), bad);
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#959: FILE: fs/ceph/osd_client.c:895:
+		if (osdc->osdmap && osdc->osdmap->epoch+1 == epoch) {
 		                                       ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#960: FILE: fs/ceph/osd_client.c:896:
+			dout("applying incremental map %u len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#974: FILE: fs/ceph/osd_client.c:910:
+			dout("ignoring incremental map %u len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#985: FILE: fs/ceph/osd_client.c:921:
+	dout(" %d full maps\n", nr_maps);
 	^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#987: FILE: fs/ceph/osd_client.c:923:
+		ceph_decode_need(&p, end, 2*sizeof(u32), bad);
 		                           ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#992: FILE: fs/ceph/osd_client.c:928:
+			dout("skipping non-latest full map %u len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#995: FILE: fs/ceph/osd_client.c:931:
+			dout("skipping full map %u len %d, "
 			^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#996: FILE: fs/ceph/osd_client.c:932:
+			dout("skipping full map %u len %d, "
+			     "older than our %u\n", epoch, maplen,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#999: FILE: fs/ceph/osd_client.c:935:
+			dout("taking full map %u len %d\n", epoch, maplen);
 			^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1000: FILE: fs/ceph/osd_client.c:936:
+			newmap = osdmap_decode(&p, p+maplen);
 			                            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#1026: FILE: fs/ceph/osd_client.c:962:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1028: FILE: fs/ceph/osd_client.c:964:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1050: FILE: fs/ceph/osd_client.c:986:
+	dout("prepare_pages on msg %p want %d\n", m, want);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_pages', this function's name, in a string
#1050: FILE: fs/ceph/osd_client.c:986:
+	dout("prepare_pages on msg %p want %d\n", m, want);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1058: FILE: fs/ceph/osd_client.c:994:
+		dout("prepare_pages unknown tid %llu\n", tid);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_pages', this function's name, in a string
#1058: FILE: fs/ceph/osd_client.c:994:
+		dout("prepare_pages unknown tid %llu\n", tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1061: FILE: fs/ceph/osd_client.c:997:
+	dout("prepare_pages tid %llu has %d pages, want %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prepare_pages', this function's name, in a string
#1061: FILE: fs/ceph/osd_client.c:997:
+	dout("prepare_pages tid %llu has %d pages, want %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1095: FILE: fs/ceph/osd_client.c:1031:
+			dout("osdc_start_request failed send, marking %lld\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1121: FILE: fs/ceph/osd_client.c:1057:
+		dout("wait_request tid %llu timed out\n", req->r_tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1125: FILE: fs/ceph/osd_client.c:1061:
+	dout("wait_request tid %llu result %d\n", req->r_tid, req->r_result);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1152: FILE: fs/ceph/osd_client.c:1088:
+		dout("sync waiting on tid %llu (last is %llu)\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1159: FILE: fs/ceph/osd_client.c:1095:
+	dout("sync done (thru tid %llu)\n", last_tid);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1169: FILE: fs/ceph/osd_client.c:1105:
+	dout("init\n");
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: fs/ceph/osd_client.c:1120:
+	osdc->req_mempool = mempool_create_kmalloc_pool(10,
+					sizeof(struct ceph_osd_request));

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1223: FILE: fs/ceph/osd_client.c:1159:
+	dout("readpages on ino %llx.%llx on %llu~%llu\n", vino.ino,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1237: FILE: fs/ceph/osd_client.c:1173:
+	dout("readpages  final extent is %llu~%llu (%d pages)\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1245: FILE: fs/ceph/osd_client.c:1181:
+	dout("readpages result %d\n", rc);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1264: FILE: fs/ceph/osd_client.c:1200:
+	BUG_ON(vino.snap != CEPH_NOSNAP);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1278: FILE: fs/ceph/osd_client.c:1214:
+	dout("writepages %llu~%llu (%d pages)\n", off, len,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1288: FILE: fs/ceph/osd_client.c:1224:
+	dout("writepages result %d\n", rc);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1339: FILE: fs/ceph/osd_client.c:1275:
+	struct ceph_osd *osd = con->private;
+	if (get_osd(osd))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1347: FILE: fs/ceph/osd_client.c:1283:
+	struct ceph_osd *osd = con->private;
+	put_osd(osd);

WARNING:STATIC_CONST: Move const after static - use 'static const struct ceph_connection_operations '
#1350: FILE: fs/ceph/osd_client.c:1286:
+const static struct ceph_connection_operations osd_con_ops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1365: FILE: fs/ceph/osd_client.h:1:
+#ifndef _FS_CEPH_OSD_CLIENT_H

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1419: FILE: fs/ceph/osd_client.h:55:
+^Istruct inode *r_inode;         ^I      /* for use by callbacks */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1429: FILE: fs/ceph/osd_client.h:65:
+	unsigned          r_num_pages;        /* size of page array (follows) */

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1443: FILE: fs/ceph/osd_client.h:79:
+	struct mutex           request_mutex;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1450: FILE: fs/ceph/osd_client.h:86:
+^Istruct dentry ^I       *debugfs_file;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1458: FILE: fs/ceph/osd_client.h:94:
+extern int ceph_osdc_init(struct ceph_osd_client *osdc,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1460: FILE: fs/ceph/osd_client.h:96:
+extern void ceph_osdc_stop(struct ceph_osd_client *osdc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1462: FILE: fs/ceph/osd_client.h:98:
+extern void ceph_osdc_handle_reply(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1464: FILE: fs/ceph/osd_client.h:100:
+extern void ceph_osdc_handle_map(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1467: FILE: fs/ceph/osd_client.h:103:
+extern struct ceph_osd_request *ceph_osdc_new_request(struct ceph_osd_client *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ceph_osd_client *' should also have an identifier name
#1467: FILE: fs/ceph/osd_client.h:103:
+extern struct ceph_osd_request *ceph_osdc_new_request(struct ceph_osd_client *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: fs/ceph/osd_client.h:104:
+extern struct ceph_osd_request *ceph_osdc_new_request(struct ceph_osd_client *,
+				      struct ceph_file_layout *layout,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1481: FILE: fs/ceph/osd_client.h:117:
+}
+extern void ceph_osdc_put_request(struct ceph_osd_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1481: FILE: fs/ceph/osd_client.h:117:
+extern void ceph_osdc_put_request(struct ceph_osd_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1483: FILE: fs/ceph/osd_client.h:119:
+extern int ceph_osdc_start_request(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1486: FILE: fs/ceph/osd_client.h:122:
+extern int ceph_osdc_wait_request(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1488: FILE: fs/ceph/osd_client.h:124:
+extern void ceph_osdc_sync(struct ceph_osd_client *osdc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1490: FILE: fs/ceph/osd_client.h:126:
+extern int ceph_osdc_readpages(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1497: FILE: fs/ceph/osd_client.h:133:
+extern int ceph_osdc_writepages(struct ceph_osd_client *osdc,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1515: FILE: fs/ceph/osdmap.c:1:
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1552: FILE: fs/ceph/osdmap.c:38:
+static int calc_bits_of(unsigned t)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1555: FILE: fs/ceph/osdmap.c:41:
+	int b = 0;
+	while (t) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1567: FILE: fs/ceph/osdmap.c:53:
+	pi->pg_num_mask = (1 << calc_bits_of(le32_to_cpu(pi->v.pg_num)-1)) - 1;
 	                                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1569: FILE: fs/ceph/osdmap.c:55:
+		(1 << calc_bits_of(le32_to_cpu(pi->v.pgp_num)-1)) - 1;
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1571: FILE: fs/ceph/osdmap.c:57:
+		(1 << calc_bits_of(le32_to_cpu(pi->v.lpg_num)-1)) - 1;
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1573: FILE: fs/ceph/osdmap.c:59:
+		(1 << calc_bits_of(le32_to_cpu(pi->v.lpgp_num)-1)) - 1;
 		                                              ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1582: FILE: fs/ceph/osdmap.c:68:
+	dout("crush_decode_uniform_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_uniform_bucket', this function's name, in a string
#1582: FILE: fs/ceph/osdmap.c:68:
+	dout("crush_decode_uniform_bucket %p to %p\n", *p, end);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1583: FILE: fs/ceph/osdmap.c:69:
+	ceph_decode_need(p, end, (1+b->h.size) * sizeof(u32), bad);
 	                           ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1594: FILE: fs/ceph/osdmap.c:80:
+	dout("crush_decode_list_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1594: FILE: fs/ceph/osdmap.c:80:
+	int j;
+	dout("crush_decode_list_bucket %p to %p\n", *p, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_list_bucket', this function's name, in a string
#1594: FILE: fs/ceph/osdmap.c:80:
+	dout("crush_decode_list_bucket %p to %p\n", *p, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->item_weights"
#1596: FILE: fs/ceph/osdmap.c:82:
+	if (b->item_weights == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->sum_weights"
#1599: FILE: fs/ceph/osdmap.c:85:
+	if (b->sum_weights == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1615: FILE: fs/ceph/osdmap.c:101:
+	dout("crush_decode_tree_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1615: FILE: fs/ceph/osdmap.c:101:
+	int j;
+	dout("crush_decode_tree_bucket %p to %p\n", *p, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_tree_bucket', this function's name, in a string
#1615: FILE: fs/ceph/osdmap.c:101:
+	dout("crush_decode_tree_bucket %p to %p\n", *p, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->node_weights"
#1618: FILE: fs/ceph/osdmap.c:104:
+	if (b->node_weights == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1632: FILE: fs/ceph/osdmap.c:118:
+	dout("crush_decode_straw_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1632: FILE: fs/ceph/osdmap.c:118:
+	int j;
+	dout("crush_decode_straw_bucket %p to %p\n", *p, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_straw_bucket', this function's name, in a string
#1632: FILE: fs/ceph/osdmap.c:118:
+	dout("crush_decode_straw_bucket %p to %p\n", *p, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->item_weights"
#1634: FILE: fs/ceph/osdmap.c:120:
+	if (b->item_weights == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->straws"
#1637: FILE: fs/ceph/osdmap.c:123:
+	if (b->straws == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1658: FILE: fs/ceph/osdmap.c:144:
+	dout("crush_decode %p to %p len %d\n", *p, end, (int)(end - *p));
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1658: FILE: fs/ceph/osdmap.c:144:
+	dout("crush_decode %p to %p len %d\n", *p, end, (int)(end - *p));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1661: FILE: fs/ceph/osdmap.c:147:
+	if (c == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1664: FILE: fs/ceph/osdmap.c:150:
+	ceph_decode_need(p, end, 4*sizeof(u32), bad);
 	                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1667: FILE: fs/ceph/osdmap.c:153:
+		pr_err("crush_decode magic %x != current %x\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1668: FILE: fs/ceph/osdmap.c:154:
+		       (unsigned)magic, (unsigned)CRUSH_MAGIC);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1668: FILE: fs/ceph/osdmap.c:154:
+		       (unsigned)magic, (unsigned)CRUSH_MAGIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->device_parents"
#1676: FILE: fs/ceph/osdmap.c:162:
+	if (c->device_parents == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->bucket_parents"
#1679: FILE: fs/ceph/osdmap.c:165:
+	if (c->bucket_parents == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->buckets"
#1683: FILE: fs/ceph/osdmap.c:169:
+	if (c->buckets == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->rules"
#1686: FILE: fs/ceph/osdmap.c:172:
+	if (c->rules == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1700: FILE: fs/ceph/osdmap.c:186:
+		dout("crush_decode bucket %d off %x %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1700: FILE: fs/ceph/osdmap.c:186:
+		dout("crush_decode bucket %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1701: FILE: fs/ceph/osdmap.c:187:
+		     i, (int)(*p-start), *p, end);
 		                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1719: FILE: fs/ceph/osdmap.c:205:
+		BUG_ON(size == 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1720: FILE: fs/ceph/osdmap.c:206:
+		b = c->buckets[i] = kzalloc(size, GFP_NOFS);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b"
#1721: FILE: fs/ceph/osdmap.c:207:
+		if (b == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1724: FILE: fs/ceph/osdmap.c:210:
+		ceph_decode_need(p, end, 4*sizeof(u32), bad);
 		                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1731: FILE: fs/ceph/osdmap.c:217:
+		dout("crush_decode bucket size %d off %x %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1731: FILE: fs/ceph/osdmap.c:217:
+		dout("crush_decode bucket size %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1732: FILE: fs/ceph/osdmap.c:218:
+		     b->size, (int)(*p-start), *p, end);
 		                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->items"
#1735: FILE: fs/ceph/osdmap.c:221:
+		if (b->items == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->perm"
#1738: FILE: fs/ceph/osdmap.c:224:
+		if (b->perm == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1742: FILE: fs/ceph/osdmap.c:228:
+		ceph_decode_need(p, end, b->size*sizeof(u32), bad);
 		                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1749: FILE: fs/ceph/osdmap.c:235:
+			err = crush_decode_uniform_bucket(p, end,
+				  (struct crush_bucket_uniform *)b);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1755: FILE: fs/ceph/osdmap.c:241:
+			err = crush_decode_list_bucket(p, end,
+			       (struct crush_bucket_list *)b);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1761: FILE: fs/ceph/osdmap.c:247:
+			err = crush_decode_tree_bucket(p, end,
+				(struct crush_bucket_tree *)b);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1767: FILE: fs/ceph/osdmap.c:253:
+			err = crush_decode_straw_bucket(p, end,
+				(struct crush_bucket_straw *)b);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1775: FILE: fs/ceph/osdmap.c:261:
+	dout("rule vec is %p\n", c->rules);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1782: FILE: fs/ceph/osdmap.c:268:
+			dout("crush_decode NO rule %d off %x %p to %p\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1782: FILE: fs/ceph/osdmap.c:268:
+			dout("crush_decode NO rule %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1783: FILE: fs/ceph/osdmap.c:269:
+			     i, (int)(*p-start), *p, end);
 			                ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1788: FILE: fs/ceph/osdmap.c:274:
+		dout("crush_decode rule %d off %x %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1788: FILE: fs/ceph/osdmap.c:274:
+		dout("crush_decode rule %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1789: FILE: fs/ceph/osdmap.c:275:
+		     i, (int)(*p-start), *p, end);
 		                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1797: FILE: fs/ceph/osdmap.c:283:
+		r = c->rules[i] = kmalloc(sizeof(*r) +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1798: FILE: fs/ceph/osdmap.c:284:
+					  yes*sizeof(struct crush_rule_step),
 					     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r"
#1800: FILE: fs/ceph/osdmap.c:286:
+		if (r == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1802: FILE: fs/ceph/osdmap.c:288:
+		dout(" rule %d is at %p\n", i, r);
 		^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1805: FILE: fs/ceph/osdmap.c:291:
+		ceph_decode_need(p, end, r->len*3*sizeof(u32), bad);
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1805: FILE: fs/ceph/osdmap.c:291:
+		ceph_decode_need(p, end, r->len*3*sizeof(u32), bad);
 		                                 ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1815: FILE: fs/ceph/osdmap.c:301:
+	dout("crush_decode success\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1815: FILE: fs/ceph/osdmap.c:301:
+	dout("crush_decode success\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1821: FILE: fs/ceph/osdmap.c:307:
+	dout("crush_decode fail %d\n", err);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1821: FILE: fs/ceph/osdmap.c:307:
+	dout("crush_decode fail %d\n", err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1826: FILE: fs/ceph/osdmap.c:312:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1832: FILE: fs/ceph/osdmap.c:318:
+	dout("osdmap_destroy %p\n", map);
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#1856: FILE: fs/ceph/osdmap.c:342:
+	if (state == NULL || addr == NULL || weight == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!addr"
#1856: FILE: fs/ceph/osdmap.c:342:
+	if (state == NULL || addr == NULL || weight == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!weight"
#1856: FILE: fs/ceph/osdmap.c:342:
+	if (state == NULL || addr == NULL || weight == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1865: FILE: fs/ceph/osdmap.c:351:
+		memcpy(state, map->osd_state, map->max_osd*sizeof(*state));
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1866: FILE: fs/ceph/osdmap.c:352:
+		memcpy(addr, map->osd_addr, map->max_osd*sizeof(*addr));
 		                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1867: FILE: fs/ceph/osdmap.c:353:
+		memcpy(weight, map->osd_weight, map->max_osd*sizeof(*weight));
 		                                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1898: FILE: fs/ceph/osdmap.c:384:
+			BUG();

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1916: FILE: fs/ceph/osdmap.c:402:
+	dout("osdmap_decode %p to %p len %d\n", *p, end, (int)(end - *p));
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1916: FILE: fs/ceph/osdmap.c:402:
+	dout("osdmap_decode %p to %p len %d\n", *p, end, (int)(end - *p));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#1919: FILE: fs/ceph/osdmap.c:405:
+	if (map == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1925: FILE: fs/ceph/osdmap.c:411:
+	ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), bad);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1925: FILE: fs/ceph/osdmap.c:411:
+	ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), bad);
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1925: FILE: fs/ceph/osdmap.c:411:
+	ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), bad);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1940: FILE: fs/ceph/osdmap.c:426:
+		ceph_decode_need(p, end, 4+sizeof(map->pg_pool->v), bad);
 		                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1960: FILE: fs/ceph/osdmap.c:446:
+	dout("osdmap_decode max_osd = %d\n", map->max_osd);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1960: FILE: fs/ceph/osdmap.c:446:
+	dout("osdmap_decode max_osd = %d\n", map->max_osd);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1964: FILE: fs/ceph/osdmap.c:450:
+	ceph_decode_need(p, end, 3*sizeof(u32) +
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1965: FILE: fs/ceph/osdmap.c:451:
+			 map->max_osd*(1 + sizeof(*map->osd_weight) +
 			             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1975: FILE: fs/ceph/osdmap.c:461:
+	ceph_decode_copy(p, map->osd_addr, map->max_osd*sizeof(*map->osd_addr));
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1988: FILE: fs/ceph/osdmap.c:474:
+		pg = kmalloc(sizeof(*pg) + n*sizeof(u32), GFP_NOFS);
 		                            ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1999: FILE: fs/ceph/osdmap.c:485:
+		dout(" added pg_temp %llx len %d\n", pgid, len);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2004: FILE: fs/ceph/osdmap.c:490:
+	dout("osdmap_decode crush len %d from off 0x%x\n", len,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#2004: FILE: fs/ceph/osdmap.c:490:
+	dout("osdmap_decode crush len %d from off 0x%x\n", len,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2018: FILE: fs/ceph/osdmap.c:504:
+	dout("osdmap_decode done %p %p\n", *p, end);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#2018: FILE: fs/ceph/osdmap.c:504:
+	dout("osdmap_decode done %p %p\n", *p, end);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2022: FILE: fs/ceph/osdmap.c:508:
+	dout("osdmap_decode fail\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#2022: FILE: fs/ceph/osdmap.c:508:
+	dout("osdmap_decode fail\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2048: FILE: fs/ceph/osdmap.c:534:
+	ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2048: FILE: fs/ceph/osdmap.c:534:
+	ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
 	                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2048: FILE: fs/ceph/osdmap.c:534:
+	ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
 	                                                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2052: FILE: fs/ceph/osdmap.c:538:
+	BUG_ON(epoch != map->epoch+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2052: FILE: fs/ceph/osdmap.c:538:
+	BUG_ON(epoch != map->epoch+1);
 	                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2059: FILE: fs/ceph/osdmap.c:545:
+		dout("apply_incremental full map len %d, %p to %p\n",
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2061: FILE: fs/ceph/osdmap.c:547:
+		newmap = osdmap_decode(p, min(*p+len, end));
 		                                ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2068: FILE: fs/ceph/osdmap.c:554:
+		dout("apply_incremental new crush map len %d, %p to %p\n",
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2070: FILE: fs/ceph/osdmap.c:556:
+		newcrush = crush_decode(*p, min(*p+len, end));
 		                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2079: FILE: fs/ceph/osdmap.c:565:
+	ceph_decode_need(p, end, 5*sizeof(u32), bad);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2114: FILE: fs/ceph/osdmap.c:600:
+			map->num_pools = pool+1;
 			                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2131: FILE: fs/ceph/osdmap.c:617:
+		struct ceph_entity_addr addr;
+		ceph_decode_32_safe(p, end, osd, bad);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2134: FILE: fs/ceph/osdmap.c:620:
+		BUG_ON(osd >= map->max_osd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2143: FILE: fs/ceph/osdmap.c:629:
+		u32 osd;
+		ceph_decode_32_safe(p, end, osd, bad);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2154: FILE: fs/ceph/osdmap.c:640:
+		u32 osd, off;
+		ceph_decode_need(p, end, sizeof(u32)*2, bad);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2154: FILE: fs/ceph/osdmap.c:640:
+		ceph_decode_need(p, end, sizeof(u32)*2, bad);
 		                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2158: FILE: fs/ceph/osdmap.c:644:
+		pr_info("osd%d weight 0x%x %s\n", osd, off,
+		     off == CEPH_OSD_IN ? "(in)" :

WARNING:LINE_SPACING: Missing a blank line after declarations
#2172: FILE: fs/ceph/osdmap.c:658:
+		u32 pglen;
+		ceph_decode_need(p, end, sizeof(u64) + sizeof(u32), bad);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2180: FILE: fs/ceph/osdmap.c:666:
+			struct rb_node *cur = rbp;
+			rbp = rb_next(rbp);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2181: FILE: fs/ceph/osdmap.c:667:
+			dout(" removed pg_temp %llx\n",
 			^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2188: FILE: fs/ceph/osdmap.c:674:
+			ceph_decode_need(p, end, pglen*sizeof(u32), bad);
 			                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2189: FILE: fs/ceph/osdmap.c:675:
+			pg = kmalloc(sizeof(*pg) + sizeof(u32)*pglen, GFP_NOFS);
 			                                      ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2199: FILE: fs/ceph/osdmap.c:685:
+			dout(" added pg_temp %llx len %d\n", pgid, pglen);
 			^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2204: FILE: fs/ceph/osdmap.c:690:
+		struct rb_node *cur = rbp;
+		rbp = rb_next(rbp);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2205: FILE: fs/ceph/osdmap.c:691:
+		dout(" removed pg_temp %llx\n",
 		^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2222: FILE: fs/ceph/osdmap.c:708:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2224: FILE: fs/ceph/osdmap.c:710:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2245: FILE: fs/ceph/osdmap.c:731:
+	dout("mapping %llu~%llu  osize %u fl_su %u\n", off, *plen,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2248: FILE: fs/ceph/osdmap.c:734:
+	dout("osize %u / su %u = su_per_object %u\n", osize, su,
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2251: FILE: fs/ceph/osdmap.c:737:
+	BUG_ON((su & ~PAGE_MASK) != 0);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2256: FILE: fs/ceph/osdmap.c:742:
+	dout("off %llu / su %u = bl %u\n", off, su, bl);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2263: FILE: fs/ceph/osdmap.c:749:
+	dout("objset %u * sc %u = bno %u\n", objsetno, sc, (unsigned)*bno);
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2263: FILE: fs/ceph/osdmap.c:749:
+	dout("objset %u * sc %u = bno %u\n", objsetno, sc, (unsigned)*bno);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2270: FILE: fs/ceph/osdmap.c:756:
+	dout(" obj extent %llu~%llu\n", *oxoff, *oxlen);
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2282: FILE: fs/ceph/osdmap.c:768:
+	unsigned num, num_mask;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2305: FILE: fs/ceph/osdmap.c:791:
+		dout("calc_object_layout '%s' pgid %d.%xp%d (%llx)\n", oid,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2308: FILE: fs/ceph/osdmap.c:794:
+		dout("calc_object_layout '%s' pgid %d.%x (%llx)\n", oid,
 		^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2328: FILE: fs/ceph/osdmap.c:814:
+	unsigned pps; /* placement ps */

CHECK:BRACES: braces {} should be used on all arms of this statement
#2333: FILE: fs/ceph/osdmap.c:819:
+		if (pgid.pg64 < pg->pgid)
[...]
+		else if (pgid.pg64 > pg->pgid)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#2337: FILE: fs/ceph/osdmap.c:823:
+		else {

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#2386: FILE: fs/ceph/osdmap.c:872:
+			return osds[i];
+			break;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2396: FILE: fs/ceph/osdmap.h:1:
+#ifndef _FS_CEPH_OSDMAP_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2447: FILE: fs/ceph/osdmap.h:52:
+	 * the list of osds that store+replicate them. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2466: FILE: fs/ceph/osdmap.h:71:
+static inline unsigned ceph_file_layout_stripe_width(struct ceph_file_layout *l)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2473: FILE: fs/ceph/osdmap.h:78:
+static inline unsigned ceph_file_layout_period(struct ceph_file_layout *l)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2479: FILE: fs/ceph/osdmap.h:84:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2490: FILE: fs/ceph/osdmap.h:95:
+extern char *ceph_osdmap_state_str(char *str, int len, int state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2500: FILE: fs/ceph/osdmap.h:105:
+extern struct ceph_osdmap *osdmap_decode(void **p, void *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2501: FILE: fs/ceph/osdmap.h:106:
+extern struct ceph_osdmap *osdmap_apply_incremental(void **p, void *end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2502: FILE: fs/ceph/osdmap.h:107:
+extern struct ceph_osdmap *osdmap_apply_incremental(void **p, void *end,
+					    struct ceph_osdmap *map,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2504: FILE: fs/ceph/osdmap.h:109:
+extern void ceph_osdmap_destroy(struct ceph_osdmap *map);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2507: FILE: fs/ceph/osdmap.h:112:
+extern void ceph_calc_file_object_mapping(struct ceph_file_layout *layout,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2512: FILE: fs/ceph/osdmap.h:117:
+extern int ceph_calc_object_layout(struct ceph_object_layout *ol,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2516: FILE: fs/ceph/osdmap.h:121:
+extern int ceph_calc_pg_primary(struct ceph_osdmap *osdmap, union ceph_pg pgid);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063741.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 173 warnings, 116 checks, 2436 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063741.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
