WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#138: FILE: arch/x86/kernel/pci-dma.c:14:
+int panic_on_overflow __read_mostly = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#139: FILE: arch/x86/kernel/pci-dma.c:15:
+int force_iommu __read_mostly = 0;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#170: FILE: arch/x86/kernel/pci-nommu.c:1:
+/* Fallback functions when the main IOMMU code is not compiled in. This

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: arch/x86/kernel/pci-nommu.c:2:
+/* Fallback functions when the main IOMMU code is not compiled in. This
+   code is roughly equivalent to i386. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: arch/x86/kernel/pci-nommu.c:2:
+   code is roughly equivalent to i386. */

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#180: FILE: arch/x86/kernel/pci-nommu.c:11:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#188: FILE: arch/x86/kernel/pci-nommu.c:19:
+			printk(KERN_ERR

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#189: FILE: arch/x86/kernel/pci-nommu.c:20:
+			    "nommu_%s: overflow %Lx+%zu of device mask %Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: arch/x86/kernel/pci-nommu.c:30:
+nommu_map_single(struct device *hwdev, phys_addr_t paddr, size_t size,
+	       int direction)

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: arch/x86/kernel/pci-nommu.c:33:
+	dma_addr_t bus = paddr;
+	WARN_ON(size == 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 32)
#203: FILE: arch/x86/kernel/pci-nommu.c:34:
+	if (!check_addr("map_single", hwdev, bus, size))
+				return bad_dma_address;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: arch/x86/kernel/pci-nommu.c:40:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/x86/kernel/pci-nommu.c:57:
+static int nommu_map_sg(struct device *hwdev, struct scatterlist *sg,
+	       int nents, int direction)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: arch/x86/kernel/pci-nommu.c:65:
+		BUG_ON(!sg_page(s));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#254: FILE: arch/x86/kernel/pci-nommu.c:85:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298103.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 5 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298103.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
