WARNING:REPEATED_WORD: Possible repeated word: 'an'
#47: 
interference of a ptraced process, particularly when an an application

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#49: 
to the debug session, but are occuring frequently.
                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'architecutres' may be misspelled - perhaps 'architectures'?
#85: 
for the i386 and x86_64 architecutres.  Other architectures will ptrace
                        ^^^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#119: FILE: arch/i386/kernel/ptrace.c:643:
+		if (!access_ok( VERIFY_READ, datap, sizeof(sigset_t))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#181: FILE: arch/i386/kernel/signal.c:549:
  	if (unlikely(regs->eflags & TF_MASK)
+	    && likely(current->ptrace & PT_DTRACE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#182: FILE: arch/i386/kernel/signal.c:550:
+	    && likely(current->ptrace & PT_DTRACE)
+	    && sigismember(&current->ptrace_sigmask, sig)) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#250: FILE: arch/x86_64/kernel/ptrace.c:573:
+		if (!access_ok(

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#250: FILE: arch/x86_64/kernel/ptrace.c:573:
+		if (!access_ok(
+			VERIFY_WRITE, (unsigned *)data, sizeof(sigset_t)))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#251: FILE: arch/x86_64/kernel/ptrace.c:574:
+			VERIFY_WRITE, (unsigned *)data, sizeof(sigset_t)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: arch/x86_64/kernel/ptrace.c:581:
+			ret = __put_user(child->ptrace_sigmask.sig[i],
+				(unsigned long *)data);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#270: FILE: arch/x86_64/kernel/ptrace.c:593:
+		if (!access_ok(

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#270: FILE: arch/x86_64/kernel/ptrace.c:593:
+		if (!access_ok(
+			VERIFY_READ, (unsigned *)data, sizeof(sigset_t)))
+		{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#271: FILE: arch/x86_64/kernel/ptrace.c:594:
+			VERIFY_READ, (unsigned *)data, sizeof(sigset_t)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#320: FILE: arch/x86_64/kernel/signal.c:364:
+		if (likely(current->ptrace & PT_DTRACE)
+		    && sigismember(&current->ptrace_sigmask, sig)) {

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#361: FILE: include/linux/ptrace.h:93:
long addr, long data);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: include/linux/ptrace.h:95:
+extern void ptrace_update_traced_signals(struct task_struct *child, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/linux/ptrace.h:95:
+extern void ptrace_update_traced_signals(struct task_struct *child, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: include/linux/ptrace.h:96:
+extern void ptrace_update_traced_signals(struct task_struct *child, 
  extern void __ptrace_link(struct task_struct *child,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: kernel/signal.c:1623:
+void ptrace_update_traced_signals(struct task_struct *child,
+							sigset_t *new_smaskp)

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#533: FILE: kernel/signal.c:1626:
+	unsigned long int flags;

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: kernel/signal.c:1637:
+                               ^Isig = ffz(~prev_smask.sig[index]) +$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: kernel/signal.c:1637:
+                               ^Isig = ffz(~prev_smask.sig[index]) +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: kernel/signal.c:1637:
+                               ^Isig = ffz(~prev_smask.sig[index]) +$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!child->sighand"
#555: FILE: kernel/signal.c:1648:
+		if (child->sighand == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: kernel/signal.c:1806:
+		if ((current->ptrace & PT_PTRACED) && signr != SIGKILL &&
+				sigismember(&current->ptrace_sigmask, signr)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417850.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 8 warnings, 11 checks, 388 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417850.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
