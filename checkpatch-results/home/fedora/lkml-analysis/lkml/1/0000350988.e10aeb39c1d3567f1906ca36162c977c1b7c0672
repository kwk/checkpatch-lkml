WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#72: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: drivers/rtc/rtc-ds1511.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#105: FILE: drivers/rtc/rtc-ds1511.c:29:
+typedef enum ds1511reg {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/rtc/rtc-ds1511.c:107:
+ static noinline void$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#184: FILE: drivers/rtc/rtc-ds1511.c:108:
+rtc_write(uint8_t val, uint32_t reg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/rtc/rtc-ds1511.c:113:
+ static inline void$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#190: FILE: drivers/rtc/rtc-ds1511.c:114:
+rtc_write_alarm(uint8_t val, ds1511reg_t reg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/rtc/rtc-ds1511.c:119:
+ static noinline uint8_t$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/rtc/rtc-ds1511.c:125:
+ static inline void$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/rtc/rtc-ds1511.c:131:
+ static noinline void$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/rtc/rtc-ds1511.c:144:
+ void$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/rtc/rtc-ds1511.c:162:
+ void$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/rtc/rtc-ds1511.c:182:
+ int$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#267: FILE: drivers/rtc/rtc-ds1511.c:191:
+	if (rtc_tm->tm_year < 1900) {
+		rtc_tm->tm_year += 1900;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#271: FILE: drivers/rtc/rtc-ds1511.c:195:
+	if (rtc_tm->tm_year < 1970) {
+		return -EINVAL;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mon > 12'
#283: FILE: drivers/rtc/rtc-ds1511.c:207:
+	if ((mon > 12) || (day == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'day == 0'
#283: FILE: drivers/rtc/rtc-ds1511.c:207:
+	if ((mon > 12) || (day == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#283: FILE: drivers/rtc/rtc-ds1511.c:207:
+	if ((mon > 12) || (day == 0)) {
+		return -EINVAL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#287: FILE: drivers/rtc/rtc-ds1511.c:211:
+	if (day > rtc_month_days(rtc_tm->tm_mon, rtc_tm->tm_year)) {
+		return -EINVAL;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hrs >= 24'
#291: FILE: drivers/rtc/rtc-ds1511.c:215:
+	if ((hrs >= 24) || (min >= 60) || (sec >= 60)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'min >= 60'
#291: FILE: drivers/rtc/rtc-ds1511.c:215:
+	if ((hrs >= 24) || (min >= 60) || (sec >= 60)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sec >= 60'
#291: FILE: drivers/rtc/rtc-ds1511.c:215:
+	if ((hrs >= 24) || (min >= 60) || (sec >= 60)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#291: FILE: drivers/rtc/rtc-ds1511.c:215:
+	if ((hrs >= 24) || (min >= 60) || (sec >= 60)) {
+		return -EINVAL;
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/rtc/rtc-ds1511.c:246:
+ int$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#333: FILE: drivers/rtc/rtc-ds1511.c:257:
+	if (pdata->last_jiffies == jiffies) {
+		msleep(1);
+	}

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#333: FILE: drivers/rtc/rtc-ds1511.c:257:
+	if (pdata->last_jiffies == jiffies) {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#334: FILE: drivers/rtc/rtc-ds1511.c:258:
+		msleep(1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/rtc/rtc-ds1511.c:310:
+ static void$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/rtc/rtc-ds1511.c:333:
+ static int$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#415: FILE: drivers/rtc/rtc-ds1511.c:339:
+	if (pdata->irq < 0) {
+		return -EINVAL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#422: FILE: drivers/rtc/rtc-ds1511.c:346:
+	if (alrm->enabled) {
+		pdata->irqen |= RTC_AF;
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/rtc/rtc-ds1511.c:353:
+ static int$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#435: FILE: drivers/rtc/rtc-ds1511.c:359:
+	if (pdata->irq < 0) {
+		return -EINVAL;
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/rtc/rtc-ds1511.c:370:
+ static irqreturn_t$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#456: FILE: drivers/rtc/rtc-ds1511.c:380:
+	if (!(rtc_read(RTC_CMD1) & DS1511_IRQF)) {
+		return IRQ_NONE;
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#459: FILE: drivers/rtc/rtc-ds1511.c:383:
+	if (rtc_read(RTC_ALARM_SEC) & 0x80) {
[...]
+	} else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/rtc/rtc-ds1511.c:392:
+ static void$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/rtc/rtc-ds1511.c:404:
+ static int$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#486: FILE: drivers/rtc/rtc-ds1511.c:410:
+	if (pdata->irq < 0) {
+		return -ENOIOCTLCMD; /* fall back into rtc-dev's emulation */
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/rtc/rtc-ds1511.c:445:
+ static ssize_t$

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#522: FILE: drivers/rtc/rtc-ds1511.c:446:
+ds1511_nvram_read(struct kobject *kobj, struct bin_attribute *ba,
                                                               ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: drivers/rtc/rtc-ds1511.c:447:
+ds1511_nvram_read(struct kobject *kobj, struct bin_attribute *ba,
+				char *buf, loff_t pos, size_t size)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#531: FILE: drivers/rtc/rtc-ds1511.c:455:
+	if (size > 1) {
+		rtc_write((rtc_read(RTC_CMD) | DS1511_BME), RTC_CMD);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#534: FILE: drivers/rtc/rtc-ds1511.c:458:
+	if (pos > DS1511_RAM_MAX) {
+		pos = DS1511_RAM_MAX;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#537: FILE: drivers/rtc/rtc-ds1511.c:461:
+	if (size + pos > DS1511_RAM_MAX + 1) {
+		size = DS1511_RAM_MAX - pos + 1;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#541: FILE: drivers/rtc/rtc-ds1511.c:465:
+	for (count = 0; size > 0; count++, size--) {
+		*buf++ = rtc_read(DS1511_RAMDATA);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#544: FILE: drivers/rtc/rtc-ds1511.c:468:
+	if (count > 1) {
+		rtc_write((rtc_read(RTC_CMD) & ~DS1511_BME), RTC_CMD);
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/rtc/rtc-ds1511.c:474:
+ static ssize_t$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/rtc/rtc-ds1511.c:476:
+ds1511_nvram_write(struct kobject *kobj, struct bin_attribute *bin_attr,
+				char *buf, loff_t pos, size_t size)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#560: FILE: drivers/rtc/rtc-ds1511.c:484:
+	if (size > 1) {
+		rtc_write((rtc_read(RTC_CMD) | DS1511_BME), RTC_CMD);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#563: FILE: drivers/rtc/rtc-ds1511.c:487:
+	if (pos > DS1511_RAM_MAX) {
+		pos = DS1511_RAM_MAX;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#566: FILE: drivers/rtc/rtc-ds1511.c:490:
+	if (size + pos > DS1511_RAM_MAX + 1) {
+		size = DS1511_RAM_MAX - pos + 1;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#570: FILE: drivers/rtc/rtc-ds1511.c:494:
+	for (count = 0; size > 0; count++, size--) {
+		rtc_write(*buf++, DS1511_RAMDATA);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#573: FILE: drivers/rtc/rtc-ds1511.c:497:
+	if (count > 1) {
+		rtc_write((rtc_read(RTC_CMD) & ~DS1511_BME), RTC_CMD);
+	}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#582: FILE: drivers/rtc/rtc-ds1511.c:506:
+		.mode = S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/rtc/rtc-ds1511.c:514:
+ static int __devinit$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#590: FILE: drivers/rtc/rtc-ds1511.c:514:
+ static int __devinit

WARNING:BRACES: braces {} are not necessary for single statement blocks
#599: FILE: drivers/rtc/rtc-ds1511.c:523:
+	if (!res) {
+		return -ENODEV;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#603: FILE: drivers/rtc/rtc-ds1511.c:527:
+	if (!pdata) {
+		return -ENOMEM;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#640: FILE: drivers/rtc/rtc-ds1511.c:564:
+	if (rtc_read(RTC_CMD1) & DS1511_BLF1) {
+		dev_warn(&pdev->dev, "voltage-low detected.\n");
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#652: FILE: drivers/rtc/rtc-ds1511.c:576:
+				IRQF_DISABLED | IRQF_SHARED, pdev->name, pdev) < 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/rtc/rtc-ds1511.c:583:
+	rtc = rtc_device_register(pdev->name, &pdev->dev, &ds1511_rtc_ops,
+		THIS_MODULE);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#668: FILE: drivers/rtc/rtc-ds1511.c:592:
+	if (ret) {
+		goto out;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#673: FILE: drivers/rtc/rtc-ds1511.c:597:
+	if (pdata->rtc) {
+		rtc_device_unregister(pdata->rtc);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#676: FILE: drivers/rtc/rtc-ds1511.c:600:
+	if (pdata->irq >= 0) {
+		free_irq(pdata->irq, pdev);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#683: FILE: drivers/rtc/rtc-ds1511.c:607:
+	if (pdata->baseaddr) {
+		release_mem_region(pdata->baseaddr, pdata->size);
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/rtc/rtc-ds1511.c:615:
+ static int __devexit$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#691: FILE: drivers/rtc/rtc-ds1511.c:615:
+ static int __devexit

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: drivers/rtc/rtc-ds1511.c:647:
+ static int __init$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/rtc/rtc-ds1511.c:653:
+ static void __exit$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350988.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 59 warnings, 11 checks, 688 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350988.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
