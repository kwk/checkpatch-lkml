CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/net/wext.h:15:
+extern int compat_wext_handle_ioctl(struct net *net, unsigned int cmd,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: include/net/wext.h:31:
 }
+static inline int compat_wext_handle_ioctl(struct net *net, unsigned int cmd,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#151: FILE: net/wireless/wext.c:1116:
+static int compat_standard_call(struct net_device *	dev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#152: FILE: net/wireless/wext.c:1117:
+				struct iwreq *		iwr,

CHECK:SPACING: No space is necessary after a cast
#167: FILE: net/wireless/wext.c:1132:
+	iwp_compat = (struct compat_iw_point *) &iwr->u.data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#200: FILE: net/wireless/wext.c:1165:
+		ret = handler(dev, &info, &(iwr->u), (char *) &(iwr->u));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#200: FILE: net/wireless/wext.c:1165:
+		ret = handler(dev, &info, &(iwr->u), (char *) &(iwr->u));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#200: FILE: net/wireless/wext.c:1165:
+		ret = handler(dev, &info, &(iwr->u), (char *) &(iwr->u));

CHECK:SPACING: No space is necessary after a cast
#205: FILE: net/wireless/wext.c:1170:
+		iwp_compat = (struct compat_iw_point *) &iwr->u.data;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#236: FILE: net/wireless/wext.c:1201:
+	iwr.ifr_name[IFNAMSIZ-1] = 0;
 	                     ^

CHECK:SPACING: No space is necessary after a cast
#241: FILE: net/wireless/wext.c:1206:
+	ret = wext_ioctl_dispatch(net, (struct ifreq *) &iwr, cmd,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271912.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 0 warnings, 9 checks, 186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271912.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
