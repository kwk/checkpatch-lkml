CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: arch/x86/pci/irq.c:49:
+	int (*set)(struct pci_dev *router, struct pci_dev *dev, int pirq,
+		int new);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: arch/x86/pci/irq.c:82:
+		DBG(KERN_DEBUG "PCI: Interrupt Routing Table found at 0x%p\n",
+			rt);

CHECK:SPACING: No space is necessary after a cast
#91: FILE: arch/x86/pci/irq.c:105:
+	for (addr = (u8 *) __va(0xf0000); addr < (u8 *) __va(0x100000);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/x86/pci/irq.c:135:
+			DBG(KERN_DEBUG "%02x:%02x slot=%02x", e->bus,
+				e->devfn/8, e->slot);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#111: FILE: arch/x86/pci/irq.c:135:
+				e->devfn/8, e->slot);
 				        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/x86/pci/irq.c:138:
+				DBG(" %d:%02x/%04x", j, e->irq[j].link,
+					e->irq[j].bitmap);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: arch/x86/pci/irq.c:183:
+static unsigned int read_config_nybble(struct pci_dev *router, unsigned offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: arch/x86/pci/irq.c:184:
+static unsigned int read_config_nybble(struct pci_dev *router, unsigned offset,
+	unsigned nr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#131: FILE: arch/x86/pci/irq.c:184:
+	unsigned nr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#140: FILE: arch/x86/pci/irq.c:193:
+static void write_config_nybble(struct pci_dev *router, unsigned offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/x86/pci/irq.c:194:
+static void write_config_nybble(struct pci_dev *router, unsigned offset,
+	unsigned nr, unsigned int val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#141: FILE: arch/x86/pci/irq.c:194:
+	unsigned nr, unsigned int val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: arch/x86/pci/irq.c:219:
+static int pirq_ali_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/x86/pci/irq.c:246:
+static int pirq_piix_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/x86/pci/irq.c:263:
+static int pirq_via_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/x86/pci/irq.c:275:
+static int pirq_via586_get(struct pci_dev *router, struct pci_dev *dev,
+	int pirq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/x86/pci/irq.c:284:
+static int pirq_via586_set(struct pci_dev *router, struct pci_dev *dev,
+	int pirq, int irq)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#212: FILE: arch/x86/pci/irq.c:303:
+	return read_config_nybble(router, 0x43, pirqmap[pirq-1]);
 	                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: arch/x86/pci/irq.c:307:
+static int pirq_ite_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/x86/pci/irq.c:326:
+static int pirq_opti_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+		int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: arch/x86/pci/irq.c:343:
+static int pirq_cyrix_set(struct pci_dev *router, struct pci_dev *dev,
+	int pirq, int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/x86/pci/irq.c:427:
+static int pirq_sis_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: arch/x86/pci/irq.c:462:
+static int pirq_vlsi_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: arch/x86/pci/irq.c:485:
+static int pirq_serverworks_get(struct pci_dev *router, struct pci_dev *dev,
+	int pirq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: arch/x86/pci/irq.c:492:
+static int pirq_serverworks_set(struct pci_dev *router, struct pci_dev *dev,
+	int pirq, int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: arch/x86/pci/irq.c:508:
+static int pirq_amd756_get(struct pci_dev *router, struct pci_dev *dev,
+	int pirq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#322: FILE: arch/x86/pci/irq.c:514:
+	printk(KERN_INFO "AMD756: dev %04x:%04x, router pirq : %d "

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: arch/x86/pci/irq.c:515:
+	printk(KERN_INFO "AMD756: dev %04x:%04x, router pirq : %d "
+		"get irq : %2d\n", dev->vendor, dev->device, pirq, irq);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: arch/x86/pci/irq.c:520:
+static int pirq_amd756_set(struct pci_dev *router, struct pci_dev *dev,
+	int pirq, int irq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#333: FILE: arch/x86/pci/irq.c:522:
+	printk(KERN_INFO "AMD756: dev %04x:%04x, router pirq : %d "

WARNING:SPLIT_STRING: quoted string split across lines
#334: FILE: arch/x86/pci/irq.c:523:
+	printk(KERN_INFO "AMD756: dev %04x:%04x, router pirq : %d "
+		"SET irq : %2d\n", dev->vendor, dev->device, pirq, irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: arch/x86/pci/irq.c:552:
+static int pirq_bios_set(struct pci_dev *router, struct pci_dev *dev, int pirq,
+	int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: arch/x86/pci/irq.c:562:
+static __init int intel_router_probe(struct irq_router *r,
+	struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: arch/x86/pci/irq.c:672:
+static __init int vlsi_router_probe(struct irq_router *r,
+	struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: arch/x86/pci/irq.c:686:
+static __init int serverworks_router_probe(struct irq_router *r,
+		struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: arch/x86/pci/irq.c:700:
+static __init int sis_router_probe(struct irq_router *r, struct pci_dev *router,
+	u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: arch/x86/pci/irq.c:712:
+static __init int cyrix_router_probe(struct irq_router *r,
+	struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: arch/x86/pci/irq.c:725:
+static __init int opti_router_probe(struct irq_router *r,
+	struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: arch/x86/pci/irq.c:738:
+static __init int ite_router_probe(struct irq_router *r, struct pci_dev *router,
+	u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: arch/x86/pci/irq.c:751:
+static __init int ali_router_probe(struct irq_router *r, struct pci_dev *router,
+	u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: arch/x86/pci/irq.c:766:
+static __init int amd_router_probe(struct irq_router *r, struct pci_dev *router,
+	u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: arch/x86/pci/irq.c:787:
+static __init int pico_router_probe(struct irq_router *r,
+	struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: arch/x86/pci/irq.c:861:
+		if (rt->rtr_vendor == h->vendor &&
+			h->probe(r, pirq_router_dev, rt->rtr_device))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: arch/x86/pci/irq.c:865:
+		if (pirq_router_dev->vendor == h->vendor &&
+			h->probe(r, pirq_router_dev, pirq_router_dev->device))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: arch/x86/pci/irq.c:886:
+		if (info->bus == dev->bus->number &&
+			PCI_SLOT(info->devfn) == PCI_SLOT(dev->devfn))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: arch/x86/pci/irq.c:928:
+	DBG(" -> PIRQ %02x, mask %04x, excl %04x", pirq, mask,
+		pirq_table->exclusive_irqs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: arch/x86/pci/irq.c:942:
+	if (acer_tm360_irqrouting && dev->irq == 11 &&
+		dev->vendor == PCI_VENDOR_ID_O2) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#757: FILE: arch/x86/pci/irq.c:958:
+			printk("\n" KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#759: FILE: arch/x86/pci/irq.c:960:
+				"PCI: IRQ %i for device %s doesn't match PIRQ "
+				"mask - try pci=usepirqmask\n" KERN_DEBUG,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: arch/x86/pci/irq.c:968:
+			if (pirq_penalty[i] < pirq_penalty[newirq] &&
+				can_request_irq(i, IRQF_SHARED))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#778: FILE: arch/x86/pci/irq.c:979:
+	} else if (r->get && (irq = r->get(pirq_router_dev, dev, pirq)) && \

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#778: FILE: arch/x86/pci/irq.c:979:
+	} else if (r->get && (irq = r->get(pirq_router_dev, dev, pirq)) && \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#794: FILE: arch/x86/pci/irq.c:1003:
+	printk(KERN_INFO "PCI: %s IRQ %d for device %s\n", msg, irq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: arch/x86/pci/irq.c:1004:
+	printk(KERN_INFO "PCI: %s IRQ %d for device %s\n", msg, irq,
+		pci_name(dev));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#806: FILE: arch/x86/pci/irq.c:1017:
+			 * information. Give a warning! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#807: FILE: arch/x86/pci/irq.c:1018:
+			if (dev2->irq && dev2->irq != irq && \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#814: FILE: arch/x86/pci/irq.c:1022:
+				printk(KERN_INFO "IRQ routing conflict for %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#815: FILE: arch/x86/pci/irq.c:1023:
+				printk(KERN_INFO "IRQ routing conflict for %s, "
+					"have irq %d, want irq %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#826: FILE: arch/x86/pci/irq.c:1031:
+				printk(KERN_INFO "PCI: Sharing IRQ %d "

WARNING:SPLIT_STRING: quoted string split across lines
#827: FILE: arch/x86/pci/irq.c:1032:
+				printk(KERN_INFO "PCI: Sharing IRQ %d "
+					"with %s\n", irq, pci_name(dev2));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: arch/x86/pci/irq.c:1052:
+			DBG(KERN_DEBUG "%s: ignoring bogus IRQ %d\n",
+				pci_name(dev), dev->irq);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#850: FILE: arch/x86/pci/irq.c:1056:
+		 * ignore its ISA use penalty */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#852: FILE: arch/x86/pci/irq.c:1058:
+		if (pirq_penalty[dev->irq] >= 100 &&
+				pirq_penalty[dev->irq] < 100000)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#869: FILE: arch/x86/pci/irq.c:1075:
+				pin--; /* interrupt pins are numbered
+					  starting from 1 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#869: FILE: arch/x86/pci/irq.c:1075:
+					  starting from 1 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#871: FILE: arch/x86/pci/irq.c:1077:
+				irq = IO_APIC_get_PCI_irq_vector(dev->bus->number,
+					PCI_SLOT(dev->devfn), pin);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: arch/x86/pci/irq.c:1090:
+					irq = IO_APIC_get_PCI_irq_vector(bridge->bus->number,
+							PCI_SLOT(bridge->devfn),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#893: FILE: arch/x86/pci/irq.c:1093:
+						printk(KERN_WARNING "PCI: "

WARNING:SPLIT_STRING: quoted string split across lines
#894: FILE: arch/x86/pci/irq.c:1094:
+						printk(KERN_WARNING "PCI: "
+							"using PPB %s[%c] to "

WARNING:SPLIT_STRING: quoted string split across lines
#895: FILE: arch/x86/pci/irq.c:1095:
+							"using PPB %s[%c] to "
+							"get irq %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#901: FILE: arch/x86/pci/irq.c:1100:
+					printk(KERN_INFO "PCI->APIC IRQ "

WARNING:SPLIT_STRING: quoted string split across lines
#902: FILE: arch/x86/pci/irq.c:1101:
+					printk(KERN_INFO "PCI->APIC IRQ "
+						"transform: %s[%c] -> IRQ %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#911: FILE: arch/x86/pci/irq.c:1124:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: arch/x86/pci/irq.c:1125:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",
+			d->ident);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#921: FILE: arch/x86/pci/irq.c:1138:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: arch/x86/pci/irq.c:1139:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",
+			d->ident);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#932: FILE: arch/x86/pci/irq.c:1152:
+			DMI_MATCH(DMI_PRODUCT_VERSION,
+				"HP Pavilion Notebook Model GE"),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#947: FILE: arch/x86/pci/irq.c:1192:
+		 * routing table */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: arch/x86/pci/irq.c:1245:
+			irq = IO_APIC_get_PCI_irq_vector(dev->bus->number,
+				PCI_SLOT(dev->devfn), pin);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: arch/x86/pci/irq.c:1261:
+				irq = IO_APIC_get_PCI_irq_vector(bridge->bus->number,
 						PCI_SLOT(bridge->devfn), pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#990: FILE: arch/x86/pci/irq.c:1263:
+					printk(KERN_WARNING "PCI: using PPB "

WARNING:SPLIT_STRING: quoted string split across lines
#991: FILE: arch/x86/pci/irq.c:1264:
+					printk(KERN_WARNING "PCI: using PPB "
+						"%s[%c] to get irq %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1000: FILE: arch/x86/pci/irq.c:1271:
+				printk(KERN_INFO "PCI->APIC IRQ transform: "

WARNING:SPLIT_STRING: quoted string split across lines
#1001: FILE: arch/x86/pci/irq.c:1272:
+				printk(KERN_INFO "PCI->APIC IRQ transform: "
+					"%s[%c] -> IRQ %d\n", pci_name(dev),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1013: FILE: arch/x86/pci/irq.c:1284:
+		 * a problem.. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1015: FILE: arch/x86/pci/irq.c:1286:
+		if (dev->class >> 8 == PCI_CLASS_STORAGE_IDE &&
+				!(dev->class & 0x5))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1020: FILE: arch/x86/pci/irq.c:1289:
+		printk(KERN_WARNING "PCI: No IRQ known for interrupt pin "

WARNING:SPLIT_STRING: quoted string split across lines
#1021: FILE: arch/x86/pci/irq.c:1290:
+		printk(KERN_WARNING "PCI: No IRQ known for interrupt pin "
+		       "%c of device %s.%s\n", 'A' + pin, pci_name(dev), msg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281623.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 36 warnings, 51 checks, 934 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281623.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
