WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#93: FILE: drivers/block/umem.c:231:
+	dev_printk(KERN_DEBUG, &card->dev->dev, "DMAstat - ");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#102: FILE: drivers/block/umem.c:293:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: drivers/block/umem.c:469:
+			last=1;
 			    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#176: FILE: drivers/block/umem.c:484:
+			dev_printk(KERN_WARNING, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/block/umem.c:485:
+			dev_printk(KERN_WARNING, &card->dev->dev,
+				"I/O error on sector %d/%d\n",

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#178: FILE: drivers/block/umem.c:486:
+				le32_to_cpu(desc->local_addr)>>9,
 				                             ^

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#187: FILE: drivers/block/umem.c:493:
+				dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/block/umem.c:494:
+				dev_printk(KERN_INFO, &card->dev->dev,
+					"memory now initialised\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#207: FILE: drivers/block/umem.c:604:
+			dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/block/umem.c:605:
+			dev_printk(KERN_ERR, &card->dev->dev,
+				"Memory access error detected (err count %d)\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#213: FILE: drivers/block/umem.c:608:
+			dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/block/umem.c:609:
+			dev_printk(KERN_ERR, &card->dev->dev,
+				"Multi-bit EDC error\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#220: FILE: drivers/block/umem.c:611:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/block/umem.c:612:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"Fault Address 0x%02x%08x, Fault Data 0x%08x%08x\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#223: FILE: drivers/block/umem.c:614:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/block/umem.c:615:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"Fault Check 0x%02x, Fault Syndrome 0x%02x\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#232: FILE: drivers/block/umem.c:622:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/block/umem.c:623:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"PARITY ERROR REPORTED\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#240: FILE: drivers/block/umem.c:629:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/block/umem.c:630:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"PARITY ERROR DETECTED\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#248: FILE: drivers/block/umem.c:636:
+		dev_printk(KERN_ERR, &card->dev->dev, "SYSTEM ERROR\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#255: FILE: drivers/block/umem.c:642:
+		dev_printk(KERN_ERR, &card->dev->dev, "TARGET ABORT\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#262: FILE: drivers/block/umem.c:648:
+		dev_printk(KERN_ERR, &card->dev->dev, "MASTER ABORT\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#281: FILE: drivers/block/umem.c:699:
+			dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/block/umem.c:700:
+			dev_printk(KERN_ERR, &card->dev->dev,
+				"Battery %d now good\n", battery + 1);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#287: FILE: drivers/block/umem.c:703:
+			dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/block/umem.c:704:
+			dev_printk(KERN_ERR, &card->dev->dev,
+				"Battery %d now FAILED\n", battery + 1);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#297: FILE: drivers/block/umem.c:711:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/block/umem.c:712:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"Battery %d still FAILED after 5 hours\n", battery + 1);

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#308: FILE: drivers/block/umem.c:736:
+		dev_printk(KERN_DEBUG, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: drivers/block/umem.c:737:
+		dev_printk(KERN_DEBUG, &card->dev->dev,
+			"checking battery status, 1 = %s, 2 = %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#334: FILE: drivers/block/umem.c:862:
+		printk(KERN_INFO DRIVER_VERSION " : " DRIVER_DESC "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#355: FILE: drivers/block/umem.c:878:
+	dev_printk(KERN_INFO, &dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/block/umem.c:879:
+	dev_printk(KERN_INFO, &dev->dev,
+		"Micro Memory(tm) controller found (PCI Mem Module (Battery Backup))\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#361: FILE: drivers/block/umem.c:883:
+		dev_printk(KERN_WARNING, &dev->dev, "NO suitable DMA found\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#370: FILE: drivers/block/umem.c:889:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/block/umem.c:890:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"Unable to request memory region\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#379: FILE: drivers/block/umem.c:896:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: drivers/block/umem.c:897:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"Unable to remap memory region\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#388: FILE: drivers/block/umem.c:903:
+	dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/block/umem.c:904:
+	dev_printk(KERN_INFO, &card->dev->dev,
+		"CSR 0x%08lx -> 0x%p (0x%lx)\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#399: FILE: drivers/block/umem.c:929:
+		dev_printk(KERN_ERR, &card->dev->dev, "Magic number invalid\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#408: FILE: drivers/block/umem.c:942:
+		dev_printk(KERN_ERR, &card->dev->dev, "alloc failed\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#429: FILE: drivers/block/umem.c:997:
+		dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/block/umem.c:998:
+		dev_printk(KERN_INFO, &card->dev->dev,
+			"Size %d KB\n", card->mm_size);

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#434: FILE: drivers/block/umem.c:1000:
+		dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: drivers/block/umem.c:1001:
+		dev_printk(KERN_INFO, &card->dev->dev,
+			"Size %d KB, Battery 1 %s (%s), Battery 2 %s (%s)\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#450: FILE: drivers/block/umem.c:1021:
+		dev_printk(KERN_ERR, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/block/umem.c:1022:
+		dev_printk(KERN_ERR, &card->dev->dev,
+			"Unable to allocate IRQ\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#460: FILE: drivers/block/umem.c:1028:
+	dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: drivers/block/umem.c:1029:
+	dev_printk(KERN_INFO, &card->dev->dev,
+		"Window size %d bytes, IRQ %d\n", data, dev->irq);

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#470: FILE: drivers/block/umem.c:1049:
+		dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/block/umem.c:1050:
+		dev_printk(KERN_INFO, &card->dev->dev,
+			"memory NOT initialized. Consider over-writing whole device.\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#475: FILE: drivers/block/umem.c:1053:
+		dev_printk(KERN_INFO, &card->dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/block/umem.c:1054:
+		dev_printk(KERN_INFO, &card->dev->dev,
+			"memory already initialized\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#538: FILE: drivers/block/umem.c:1146:
+	err = major_nr = register_blkdev(0, DRIVER_NAME);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#547: FILE: drivers/block/umem.c:1172:
+	printk(KERN_INFO "MM: desc_per_page = %ld\n", DESC_PER_PAGE);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#568: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#573: FILE: drivers/block/umem.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#587: FILE: drivers/block/umem.h:15:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#592: FILE: drivers/block/umem.h:20:
+#define  MM_MAGIC_VALUE		(unsigned char)0x59

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#663: FILE: drivers/block/umem.h:91:
+/*
+3.SOME PCs HAVE HOST BRIDGES WHICH APPARENTLY DO NOT CORRECTLY HANDLE

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#675: FILE: drivers/block/umem.h:103:
+
+

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#676: FILE: drivers/block/umem.h:104:
+#define DMASCR_ERROR_MASK	(DMASCR_MASTER_ABT | DMASCR_TARGET_ABT | DMASCR_SYSTEM_ERR_SIG | DMASCR_PARITY_ERR_DET | DMASCR_MBE_ERR | DMASCR_ANY_ERR)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#677: FILE: drivers/block/umem.h:105:
+#define DMASCR_HARD_ERROR	(DMASCR_MASTER_ABT | DMASCR_TARGET_ABT | DMASCR_SYSTEM_ERR_SIG | DMASCR_PARITY_ERR_DET | DMASCR_MBE_ERR)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#698: FILE: drivers/block/umem.h:126:
+} __attribute__((aligned(8)));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000375891.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 37 warnings, 27 checks, 630 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000375891.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
