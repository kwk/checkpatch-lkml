WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
>  > If we provide a definition for acpi_processor_get_bios_limit(), we will

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# CONFIG_X86_POWERNOW_K7_ACPI is not set

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: Documentation/cpu-freq/user-guide.txt:216:
+^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/acpi/processor_perflib.c:173:
+^I$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'pr->performance->states[pr->performance_platform_limit].core_frequency'
#262: FILE: drivers/acpi/processor_perflib.c:178:
+	*limit = pr->performance->states[pr->performance_platform_limit].
+		core_frequency * 1000;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: drivers/cpufreq/cpufreq.c:657:
+	int ret;
+	if (cpufreq_driver->bios_limit) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: include/acpi/processor.h:298:
+extern int acpi_processor_get_bios_limit(int cpu, unsigned int *limit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#332: FILE: include/acpi/processor.h:320:
 }
+static inline int acpi_processor_get_bios_limit(int cpu, unsigned int *limit)

WARNING:SPACING: Unnecessary space before function pointer arguments
#348: FILE: include/linux/cpufreq.h:235:
+	int	(*bios_limit)	(int cpu, unsigned int *limit);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045971.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 2 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045971.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
