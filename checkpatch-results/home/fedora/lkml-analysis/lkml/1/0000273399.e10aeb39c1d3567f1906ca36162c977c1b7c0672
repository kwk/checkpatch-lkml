WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
 include/asm-x86/futex.h            |   55 +++++++++++++++++++++++++++++++++++--

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#72: FILE: arch/x86/ia32/sys_ia32.c:871:
+/* For the futex syscall with 64-bit values we would need more than the six
+   available syscall parameters.  Pass the parameters in memory instead.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#72: FILE: arch/x86/ia32/sys_ia32.c:871:
+   available syscall parameters.  Pass the parameters in memory instead.  */

CHECK:SPACING: No space is necessary after a cast
#95: FILE: arch/x86/ia32/sys_ia32.c:894:
+	utime = (struct compat_timespec __user *) (u64) a.utime;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#112: FILE: arch/x86/ia32/sys_ia32.c:911:
+	return do_futex((void __user *) (u64) a.uaddr, a.op, a.val, tp,

CHECK:SPACING: No space is necessary after a cast
#113: FILE: arch/x86/ia32/sys_ia32.c:912:
+			(void __user *) (u64) a.uaddr2, val2, a.val3);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: arch/x86/kernel/sys_i386_32.c:248:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: arch/x86/kernel/sys_i386_32.c:250:
+/* For the futex syscall with 64-bit values we would need more than the six
+   available syscall parameters.  Pass the parameters in memory instead.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: arch/x86/kernel/sys_i386_32.c:250:
+   available syscall parameters.  Pass the parameters in memory instead.  */

CHECK:SPACING: No space is necessary after a cast
#167: FILE: arch/x86/kernel/sys_i386_32.c:291:
+		val2 = (u32) (unsigned long) a.utime;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uaddr' - possible side-effects?
#225: FILE: include/asm-x86/futex.h:50:
+#define __futex_atomic64_op(insns, ret, oldval, uaddr, oparg)	\
+  do {								\
+	u32 oldvaltemp1, oldvaltemp2;				\
+	int tem2;						\
+	asm volatile("1:\tmovl	%3, %0\n"			\
+		     "2:\tmovl %4, %1\n"			\
+		     "\tmovl\t%0, %5\n"				\
+		     "\tmovl\t%1, %6\n"				\
+		     "\t" insns "\n"				\
+		     "3:\tlock; cmpxchg8b %3\n"			\
+		     "\tjnz\t1b\n"				\
+		     "4:\t.section .fixup,\"ax\"\n"		\
+		     "5:\tmov\t%5, %1\n"			\
+		     "\tjmp\t4b\n"				\
+		     "\t.previous\n"				\
+		     _ASM_EXTABLE(1b, 5b)			\
+		     _ASM_EXTABLE(2b, 5b)			\
+		     _ASM_EXTABLE(3b, 5b)			\
+		     : "=&a" (oldvaltemp1), "=&d" (oldvaltmep2),\
+		       "=&r" (ret),				\
+		       "+m" (((u32 __user *) uaddr)[0]),	\
+		       "+m" (((u32 __user *) uaddr)[1]),	\
+		       "=&b" (tem), "=&c" (tem2)		\
+		     : "r" (oparg), "i" (-EFAULT), "2" (0));	\
+	oldval = (((u64) oldvaltemp2) << 32) | oldvaltemp1;	\
+  } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: include/asm-x86/futex.h:51:
+  do {^I^I^I^I^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#245: FILE: include/asm-x86/futex.h:70:
+		       "+m" (((u32 __user *) uaddr)[0]),	\

CHECK:SPACING: No space is necessary after a cast
#246: FILE: include/asm-x86/futex.h:71:
+		       "+m" (((u32 __user *) uaddr)[1]),	\

CHECK:SPACING: No space is necessary after a cast
#249: FILE: include/asm-x86/futex.h:74:
+	oldval = (((u64) oldvaltemp2) << 32) | oldvaltemp1;	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: include/asm-x86/futex.h:75:
+  } while (0)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#261: FILE: include/asm-x86/futex.h:129:
+	/* Not all 32-bit machines support 8-byte cmpxchg.  We just
+	   unconditionally perform a runtime check for the feature.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#261: FILE: include/asm-x86/futex.h:129:
+	   unconditionally perform a runtime check for the feature.  */

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#263: FILE: include/asm-x86/futex.h:131:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: include/asm-x86/futex.h:170:
+^I^Ibreak;^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273399.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 9 checks, 212 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273399.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
