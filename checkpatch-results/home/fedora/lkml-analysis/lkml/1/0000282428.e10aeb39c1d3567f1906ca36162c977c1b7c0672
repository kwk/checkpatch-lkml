WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> > attached you can find a driver for MMC/SD card controllers that have been

WARNING:TYPO_SPELLING: 'insterted' may be misspelled - perhaps 'inserted'?
#55: 
> > Whenever a MMC or SD card is insterted in the cardslot of one of these
                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'tranfer' may be misspelled - perhaps 'transfer'?
#296: 
> > +	/* wait until the tranfer is finished */
     	                  ^^^^^^^

WARNING:TYPO_SPELLING: 'controler' may be misspelled - perhaps 'controller'?
#508: 
> > +	/* reset the controler */
     	             ^^^^^^^^^

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#579: 
Yes. At least noone who wants to enable this driver will forget the yenta 
              ^^^^^

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#601: FILE: mmc/host/sdricoh_cs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#618: FILE: mmc/host/sdricoh_cs.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#619: FILE: mmc/host/sdricoh_cs.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#624: FILE: mmc/host/sdricoh_cs.c:24:
+/*
+#define DEBUG

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#711: FILE: mmc/host/sdricoh_cs.c:111:
+	unsigned int value = readl(host->iobase + reg);
+	dev_vdbg(host->dev, "rl %x 0x%x\n", reg, value);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#721: FILE: mmc/host/sdricoh_cs.c:121:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: mmc/host/sdricoh_cs.c:127:
+	unsigned int value = readw(host->iobase + reg);
+	dev_vdbg(host->dev, "rb %x 0x%x\n", reg, value);

WARNING:LINE_SPACING: Missing a blank line after declarations
#735: FILE: mmc/host/sdricoh_cs.c:135:
+	unsigned int value = readb(host->iobase + reg);
+	dev_vdbg(host->dev, "rb %x 0x%x\n", reg, value);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#739: FILE: mmc/host/sdricoh_cs.c:139:
+static int sdricoh_query_status(struct sdricoh_host *host, unsigned int wanted,
+				unsigned int timeout){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#744: FILE: mmc/host/sdricoh_cs.c:144:
+	struct device *dev = host->dev;
+	for (loop = 0; loop < timeout; loop++) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#763: FILE: mmc/host/sdricoh_cs.c:163:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#786: FILE: mmc/host/sdricoh_cs.c:186:
+		/* don't check for timeout in the loop it is not always
+		   reset correctly

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#791: FILE: mmc/host/sdricoh_cs.c:191:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: mmc/host/sdricoh_cs.c:193:
+	dev_dbg(dev, "mmc_cmd opcode=%i arg=0x%x => %i (queries=%i)\n",
+	    opcode, arg, result, loop);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#815: FILE: mmc/host/sdricoh_cs.c:215:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#829: FILE: mmc/host/sdricoh_cs.c:229:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: mmc/host/sdricoh_cs.c:237:
+static int sdricoh_blockio(struct sdricoh_host *host, int read,
+				unsigned int *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: mmc/host/sdricoh_cs.c:243:
+		if (sdricoh_query_status(host, STATUS_READY_TO_READ,
+						TRANSFER_TIMEOUT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: mmc/host/sdricoh_cs.c:251:
+		if (sdricoh_query_status(host, STATUS_READY_TO_WRITE,
+						TRANSFER_TIMEOUT))

WARNING:TYPO_SPELLING: 'tranfer' may be misspelled - perhaps 'transfer'?
#866: FILE: mmc/host/sdricoh_cs.c:266:
+	/* wait until the tranfer is finished */
 	                  ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#880: FILE: mmc/host/sdricoh_cs.c:280:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sdricoh_request', this function's name, in a string
#890: FILE: mmc/host/sdricoh_cs.c:290:
+	dev_dbg(dev, "sdricoh_request opcode=%i\n", cmd->opcode);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#895: FILE: mmc/host/sdricoh_cs.c:295:
+	/* we cannot handle all commands that require a block transfer
+	   therefore do some ugly special handling here

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#907: FILE: mmc/host/sdricoh_cs.c:307:
+			cmd->error = sdricoh_mmc_cmd(host, cmd->opcode,
+							cmd->arg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#918: FILE: mmc/host/sdricoh_cs.c:318:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sdricoh_request', this function's name, in a string
#923: FILE: mmc/host/sdricoh_cs.c:323:
+			dev_err(dev, "sdricoh_request: unable to prepare "

WARNING:SPLIT_STRING: quoted string split across lines
#924: FILE: mmc/host/sdricoh_cs.c:324:
+			dev_err(dev, "sdricoh_request: unable to prepare "
+				"transfer %x\n", cmd->error);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#928: FILE: mmc/host/sdricoh_cs.c:328:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#969: FILE: mmc/host/sdricoh_cs.c:369:
+		dev_dbg(dev, "transfer: blksz %i blocks %i sg_len %i "
+			"sg length %i\n", data->blksz, data->blocks,

WARNING:LINE_SPACING: Missing a blank line after declarations
#978: FILE: mmc/host/sdricoh_cs.c:378:
+			size_t xfered;
+			page = sg_page(data->sg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#983: FILE: mmc/host/sdricoh_cs.c:383:
+				sdricoh_blockio(host,
+					data->flags & MMC_DATA_READ, buf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#986: FILE: mmc/host/sdricoh_cs.c:386:
+			if (!xfered) {
[...]
+			} else
[...]

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sdricoh_request', this function's name, in a string
#987: FILE: mmc/host/sdricoh_cs.c:387:
+				dev_err(dev, "sdricoh_request: "

WARNING:SPLIT_STRING: quoted string split across lines
#988: FILE: mmc/host/sdricoh_cs.c:388:
+				dev_err(dev, "sdricoh_request: "
+					"block transfer failed\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#991: FILE: mmc/host/sdricoh_cs.c:391:
+				break;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#991: FILE: mmc/host/sdricoh_cs.c:391:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: mmc/host/sdricoh_cs.c:398:
+		if (sdricoh_query_status(host, STATUS_TRANSFER_FINISHED,
+					TRANSFER_TIMEOUT)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sdricoh_request', this function's name, in a string
#999: FILE: mmc/host/sdricoh_cs.c:399:
+			dev_err(dev, "sdricoh_request: transfer end error\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sdricoh_request', this function's name, in a string
#1006: FILE: mmc/host/sdricoh_cs.c:406:
+				dev_err(dev, "sdricoh_request: transfer not "

WARNING:SPLIT_STRING: quoted string split across lines
#1007: FILE: mmc/host/sdricoh_cs.c:407:
+				dev_err(dev, "sdricoh_request: transfer not "
+					"finished %x\n", cmd->error);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1010: FILE: mmc/host/sdricoh_cs.c:410:
+
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1019: FILE: mmc/host/sdricoh_cs.c:419:
+	struct sdricoh_host *host = mmc_priv(mmc);
+	dev_dbg(host->dev, "set_ios\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1085: FILE: mmc/host/sdricoh_cs.c:485:
+	mmc = pcmcia_dev->priv =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'controler' may be misspelled - perhaps 'controller'?
#1108: FILE: mmc/host/sdricoh_cs.c:508:
+	/* reset the controler */
 	             ^^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1114: FILE: mmc/host/sdricoh_cs.c:514:
+
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#1138: FILE: mmc/host/sdricoh_cs.c:538:
+	dev_info(&pcmcia_dev->dev, "Searching MMC controller for pcmcia device"
+		" %s %s ...\n", pcmcia_dev->prod_id[0], pcmcia_dev->prod_id[1]);

WARNING:TYPO_SPELLING: 'controler' may be misspelled - perhaps 'controller'?
#1140: FILE: mmc/host/sdricoh_cs.c:540:
+	/* search pci cardbus bridge that contains the mmc controler */
 	                                                   ^^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1151: FILE: mmc/host/sdricoh_cs.c:551:
+
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1165: FILE: mmc/host/sdricoh_cs.c:565:
+		struct sdricoh_host *host = mmc_priv(mmc);
+		mmc_remove_host(mmc);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1172: FILE: mmc/host/sdricoh_cs.c:572:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1177: FILE: mmc/host/sdricoh_cs.c:577:
+	struct mmc_host *mmc = link->priv;
+	dev_dbg(&link->dev, "suspend\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1185: FILE: mmc/host/sdricoh_cs.c:585:
+	struct mmc_host *mmc = link->priv;
+	dev_dbg(&link->dev, "resume\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1220: FILE: mmc/host/sdricoh_cs.c:620:
+
+}

WARNING:SPLIT_STRING: quoted string split across lines
#1232: FILE: mmc/host/sdricoh_cs.c:632:
+MODULE_PARM_DESC(switchlocked, "Switch the cards locked status."
+		"Use this when unlocked cards are shown readonly (default 0)");

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 36 warnings, 23 checks, 650 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
