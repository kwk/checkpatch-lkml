WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#224: FILE: drivers/block/floppy.c:2544:
+			printk(KERN_DEBUG "fsector_t=%d buffer_min=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#226: FILE: drivers/block/floppy.c:2546:
+			printk(KERN_DEBUG "current_count_sectors=%ld\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#235: FILE: drivers/block/floppy.c:2549:
+				printk(KERN_DEBUG "read\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#237: FILE: drivers/block/floppy.c:2551:
+				printk(KERN_DEBUG "write\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: drivers/block/lguest_blk.c:152:
+		BUG_ON(i == LGUEST_MAX_DMA_SECTIONS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#279: FILE: drivers/block/lguest_blk.c:156:
+		BUG_ON(!bvec.bv_len);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#347: FILE: drivers/block/nbd.c:226:
+				printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#380: FILE: drivers/block/nbd.c:328:
+				printk(KERN_ERR

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: drivers/block/xen-blkfront.c:189:
+		BUG_ON(ring_req->nr_segments

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#430: FILE: drivers/block/xen-blkfront.c:196:
+		BUG_ON(ref == -ENOSPC);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#432: FILE: drivers/block/xen-blkfront.c:198:
+		gnttab_grant_foreign_access_ref(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#436: FILE: drivers/block/xen-blkfront.c:202:
+			rq_data_dir(req) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#672: FILE: drivers/s390/block/dasd_eckd.c:1214:
+		if (idal_is_needed (page_address(bv.bv_page),

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: drivers/s390/block/dasd_fba.c:265:
+		if (idal_is_needed (page_address(bv.bv_page),

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#872: FILE: drivers/s390/char/tape_34xx.c:1147:
+	rq_for_each_segment(req, i, bv)
 			count += bv->bv_len >> (TAPEBLOCK_HSEC_S2B + 9);

CHECK:SPACING: No space is necessary after a cast
#902: FILE: drivers/s390/char/tape_34xx.c:1182:
+			set_normalized_cda(ccw, (void *) __pa(dst));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#966: FILE: drivers/s390/char/tape_3590.c:662:
+			set_normalized_cda(ccw, (void *) __pa(dst));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#971: FILE: drivers/s390/char/tape_3590.c:667:
+			BUG();

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#988: FILE: include/linux/blkdev.h:645:
+#define _bio_for_each_segment(bvec, bio, i)		\
+	for (i = (bio)->bi_idx;				\
+	     i < (bio)->bi_vcnt;			\
+	     i++) if ((bvec = *bio_iovec_idx(bio, i)), 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bio' - possible side-effects?
#988: FILE: include/linux/blkdev.h:645:
+#define _bio_for_each_segment(bvec, bio, i)		\
+	for (i = (bio)->bi_idx;				\
+	     i < (bio)->bi_vcnt;			\
+	     i++) if ((bvec = *bio_iovec_idx(bio, i)), 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#988: FILE: include/linux/blkdev.h:645:
+#define _bio_for_each_segment(bvec, bio, i)		\
+	for (i = (bio)->bi_idx;				\
+	     i < (bio)->bi_vcnt;			\
+	     i++) if ((bvec = *bio_iovec_idx(bio, i)), 1)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#989: FILE: include/linux/blkdev.h:646:
+	for (i = (bio)->bi_idx;				\
[...]
+	     i++) if ((bvec = *bio_iovec_idx(bio, i)), 1)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#991: FILE: include/linux/blkdev.h:648:
+	     i++) if ((bvec = *bio_iovec_idx(bio, i)), 1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_iter' - possible side-effects?
#993: FILE: include/linux/blkdev.h:650:
+#define rq_for_each_segment(rq, _iter, bvec)	\
+	for (_iter.bio = (rq)->bio;		\
+	     _iter.bio;				\
+	     _iter.bio = _iter.bio->bi_next)	\
+		_bio_for_each_segment(bvec, _iter.bio, _iter.i)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#999: FILE: include/linux/blkdev.h:656:
+#define rq_iter_last(rq, _iter) (_iter.bio->bi_next == NULL && ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_iter' - possible side-effects?
#999: FILE: include/linux/blkdev.h:656:
+#define rq_iter_last(rq, _iter) (_iter.bio->bi_next == NULL && 	\
+				 _iter.i == _iter.bio->bi_vcnt - 1)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!_iter.bio->bi_next"
#999: FILE: include/linux/blkdev.h:656:
+#define rq_iter_last(rq, _iter) (_iter.bio->bi_next == NULL && 	\

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 27 warnings, 8 checks, 869 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
