WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Gitweb:     http://git.kernel.org/tip/091ad3658e3c76c5fb05f65bfb64a0246f8f31b5

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: include/trace/events/sched.h:87:
+DECLARE_EVENT_CLASS(sched_wakeup_template,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/trace/events/sched.h:201:
+DECLARE_EVENT_CLASS(sched_process_template,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: include/trace/events/sched.h:320:
+DECLARE_EVENT_CLASS(sched_stat_template,
 

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#173: FILE: include/trace/ftrace.h:119:
+#define DECLARE_EVENT_CLASS(call, proto, args, tstruct, assign, print)	\
 	struct ftrace_data_offsets_##call {				\
 		tstruct;						\
 	};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 3 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
