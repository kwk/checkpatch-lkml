WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
- merge 2 timers into one -- one can handle the emptywait as good as the other

CHECK:CAMELCASE: Avoid CamelCase: <tableAddr>
#43: FILE: drivers/char/moxa.c:133:
+	void __iomem *tableAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DCDState>
#65: FILE: drivers/char/moxa.c:145:
+	u8 DCDState;

CHECK:CAMELCASE: Avoid CamelCase: <lineCtrl>
#66: FILE: drivers/char/moxa.c:146:
+	u8 lineCtrl;

CHECK:CAMELCASE: Avoid CamelCase: <lowChkFlag>
#67: FILE: drivers/char/moxa.c:147:
+	u8 lowChkFlag;

CHECK:CAMELCASE: Avoid CamelCase: <moxaLowWaterChk>
#75: FILE: drivers/char/moxa.c:169:
+static unsigned int moxaLowWaterChk;

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortReadData>
#102: FILE: drivers/char/moxa.c:228:
+static int MoxaPortReadData(struct moxa_port *);

CHECK:CAMELCASE: Avoid CamelCase: <ofsAddr>
#116: FILE: drivers/char/moxa.c:260:
+static void moxa_low_water_check(void __iomem *ofsAddr)

CHECK:CAMELCASE: Avoid CamelCase: <FlagStat>
#120: FILE: drivers/char/moxa.c:264:
+	if (readb(ofsAddr + FlagStat) & Xoff_state) {

CHECK:CAMELCASE: Avoid CamelCase: <Xoff_state>
#120: FILE: drivers/char/moxa.c:264:
+	if (readb(ofsAddr + FlagStat) & Xoff_state) {

CHECK:CAMELCASE: Avoid CamelCase: <RXrptr>
#121: FILE: drivers/char/moxa.c:265:
+		rptr = readw(ofsAddr + RXrptr);

CHECK:CAMELCASE: Avoid CamelCase: <RXwptr>
#122: FILE: drivers/char/moxa.c:266:
+		wptr = readw(ofsAddr + RXwptr);

CHECK:CAMELCASE: Avoid CamelCase: <Low_water>
#125: FILE: drivers/char/moxa.c:269:
+		if (len <= Low_water)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dcd != p->DCDState'
#214: FILE: drivers/char/moxa.c:1363:
+	if ((dcd != p->DCDState) && p->tty && C_CLOCAL(p->tty)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/char/moxa.c:1374:
+static int moxa_poll_port(struct moxa_port *p, unsigned int handle,
+		u16 __iomem *ip)

CHECK:BRACES: braces {} should be used on all arms of this statement
#234: FILE: drivers/char/moxa.c:1380:
+	if (tty) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/char/moxa.c:1382:
+		if ((p->statusflags & EMPTYWAIT) &&
+				MoxaPortTxQueue(p) == 0) {

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortTxQueue>
#236: FILE: drivers/char/moxa.c:1382:
+				MoxaPortTxQueue(p) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/char/moxa.c:1387:
+		if ((p->statusflags & LOWWAIT) && !tty->stopped &&
+				MoxaPortTxQueue(p) <= WAKEUP_CHARS) {

CHECK:BRACES: Unbalanced braces around else statement
#245: FILE: drivers/char/moxa.c:1391:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <IntrTx>
#257: FILE: drivers/char/moxa.c:1403:
+	if (intr & IntrTx) /* disable tx intr */

CHECK:CAMELCASE: Avoid CamelCase: <HostStat>
#258: FILE: drivers/char/moxa.c:1404:
+		writew(readw(ofsAddr + HostStat) & ~WakeupTx,

CHECK:CAMELCASE: Avoid CamelCase: <WakeupTx>
#258: FILE: drivers/char/moxa.c:1404:
+		writew(readw(ofsAddr + HostStat) & ~WakeupTx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/char/moxa.c:1405:
+		writew(readw(ofsAddr + HostStat) & ~WakeupTx,
+				ofsAddr + HostStat);

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortFlushData>
#265: FILE: drivers/char/moxa.c:1411:
+		MoxaPortFlushData(p, 0);

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortRxQueue>
#269: FILE: drivers/char/moxa.c:1415:
+	if (!(p->statusflags & THROTTLE) && MoxaPortRxQueue(p) > 0) { /* RX */

CHECK:CAMELCASE: Avoid CamelCase: <IntrBreak>
#274: FILE: drivers/char/moxa.c:1420:
+	if ((intr & IntrBreak) && !I_IGNBRK(tty)) { /* BREAK */

CHECK:CAMELCASE: Avoid CamelCase: <IntrLine>
#279: FILE: drivers/char/moxa.c:1425:
+	if (intr & IntrLine)

CHECK:CAMELCASE: Avoid CamelCase: <intPend>
#330: FILE: drivers/char/moxa.c:1444:
+		if (readb(brd->intPend) == 0xff)

CHECK:CAMELCASE: Avoid CamelCase: <intTable>
#331: FILE: drivers/char/moxa.c:1445:
+			ip = brd->intTable + readb(brd->intNdx);

CHECK:CAMELCASE: Avoid CamelCase: <intNdx>
#331: FILE: drivers/char/moxa.c:1445:
+			ip = brd->intTable + readb(brd->intNdx);

CHECK:CAMELCASE: Avoid CamelCase: <numPorts>
#333: FILE: drivers/char/moxa.c:1447:
+		for (port = 0; port < brd->numPorts; port++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#341: FILE: drivers/char/moxa.c:1455:
+			struct moxa_port *p = brd->ports;
+			for (port = 0; port < brd->numPorts; port++, p++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <moxaLog>
#668: FILE: drivers/char/moxa.c:2121:
+	moxaLog.rxcnt[tty->index] += total;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325206.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 32 checks, 660 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325206.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
