CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#60: FILE: include/linux/kprobes.h:284:
 }
+static inline int register_jprobes(struct jprobe **jps, int num)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#62: FILE: include/linux/kprobes.h:286:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#67: FILE: include/linux/kprobes.h:291:
 }
+static inline void unregister_jprobes(struct jprobe **jps, int num)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: kernel/kprobes.c:759:
+static int __register_jprobes(struct jprobe **jps, int num,
+	unsigned long called_from)

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: kernel/kprobes.c:768:
+		unsigned long addr;
+		jp = jps[i];

CHECK:BRACES: braces {} should be used on all arms of this statement
#97: FILE: kernel/kprobes.c:771:
+		if (!kernel_text_address(addr))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#99: FILE: kernel/kprobes.c:773:
+		else {

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#148: FILE: kernel/kprobes.c:816:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: kernel/kprobes.c:1285:
+EXPORT_SYMBOL_GPL(unregister_jprobes);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000307197.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 5 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000307197.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
