WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#69: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: arch/x86/kernel/process_32.c:491:
+		err = do_set_thread_area(p, -1,
+			(struct user_desc __user *)childregs->esi, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/x86/kernel/process_32.c:493:
+ ^Iif (err && p->thread.io_bitmap_ptr) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: arch/x86/kernel/process_32.c:493:
+ ^Iif (err && p->thread.io_bitmap_ptr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/x86/kernel/process_32.c:493:
+ ^Iif (err && p->thread.io_bitmap_ptr) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: arch/x86/kernel/process_64.c:517:
+			err = do_set_thread_area(p, -1,
+				(struct user_desc __user *)childregs->rsi, 0);

CHECK:SPACING: No space is necessary after a cast
#551: FILE: arch/x86/kernel/ptrace_32.c:529:
+					 (struct user_desc __user *) data);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#560: FILE: arch/x86/kernel/ptrace_32.c:536:
+					 (struct user_desc __user *) data, 0);

CHECK:SPACING: No space is necessary after a cast
#590: FILE: arch/x86/kernel/ptrace_64.c:481:
+					 (struct user_desc __user *) data);

CHECK:SPACING: No space is necessary after a cast
#597: FILE: arch/x86/kernel/ptrace_64.c:488:
+					 (struct user_desc __user *) data, 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#609: FILE: arch/x86/kernel/tls.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#614: FILE: arch/x86/kernel/tls.c:6:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#618: FILE: arch/x86/kernel/tls.c:10:
+#include <asm/processor.h>

CHECK:SPACING: No space is necessary after a cast
#668: FILE: arch/x86/kernel/tls.c:60:
+	desc = (u32 *) &t->tls_array[idx - GDT_ENTRY_TLS_MIN];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#694: FILE: arch/x86/kernel/tls.c:86:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc' - possible side-effects?
#699: FILE: arch/x86/kernel/tls.c:91:
+#define GET_LIMIT(desc) ( \
+	((desc)[0] & 0x0ffff) | \
+	 ((desc)[1] & 0xf0000) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#701: FILE: arch/x86/kernel/tls.c:93:
+	 ((desc)[1] & 0xf0000) )

CHECK:SPACING: No space is necessary after a cast
#723: FILE: arch/x86/kernel/tls.c:115:
+	desc = (u32 *) &t->tls_array[idx - GDT_ENTRY_TLS_MIN];

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#734: FILE: arch/x86/kernel/tls.c:126:
+	info.useable = GET_USEABLE(desc);
 	     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#773: FILE: include/asm-x86/proto.h:27:
+extern int do_get_thread_area(struct task_struct *p, int idx,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#775: FILE: include/asm-x86/proto.h:29:
+extern int do_set_thread_area(struct task_struct *p, int idx,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355035.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 14 checks, 517 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355035.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
