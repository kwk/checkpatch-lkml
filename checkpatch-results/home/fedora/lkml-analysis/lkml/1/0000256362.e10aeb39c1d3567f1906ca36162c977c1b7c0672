WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
This also introduces a new irq_chip for cleaner irq migration (in the process

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: arch/x86/kernel/io_apic_64.c:2326:
+		BUG_ON(ir_index == -1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: arch/x86/kernel/io_apic_64.c:2328:
+		memset (&irte, 0, sizeof(irte));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#103: FILE: arch/x86/kernel/io_apic_64.c:2345:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#195: FILE: arch/x86/kernel/io_apic_64.c:2488:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#202: FILE: arch/x86/kernel/io_apic_64.c:2495:
+		printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/x86/kernel/io_apic_64.c:2497:
+^I^I        pci_name(dev));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Unbalanced braces around else statement
#231: FILE: arch/x86/kernel/io_apic_64.c:2524:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/linux/dmar.h:112:
+extern struct intel_iommu *map_dev_to_ir(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BIT_MACRO: Prefer using the BIT macro
#371: FILE: include/asm-x86/msidef.h:51:
+#define MSI_ADDR_IR_EXT_INT		(1 << 4)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#372: FILE: include/asm-x86/msidef.h:52:
+#define MSI_ADDR_IR_SHV			(1 << 3)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'index' may be better as '(index)' to avoid precedence issues
#373: FILE: include/asm-x86/msidef.h:53:
+#define MSI_ADDR_IR_INDEX1(index)	((index & 0x8000) >> 13)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'index' may be better as '(index)' to avoid precedence issues
#374: FILE: include/asm-x86/msidef.h:54:
+#define MSI_ADDR_IR_INDEX2(index)	((index & 0x7fff) << 5)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256362.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 7 checks, 303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256362.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
