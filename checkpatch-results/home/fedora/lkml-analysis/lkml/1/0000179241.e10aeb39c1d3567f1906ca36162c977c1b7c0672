CHECK:SPACING: No space is necessary after a cast
#93: FILE: arch/arm/mach-pxa/am300epd.c:198:
+	return (u16) val;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#103: FILE: arch/arm/mach-pxa/am300epd.c:204:
+	int err;
+	err = gpio_set_batch(DB0_GPIO_PIN, data, 0xFFFF, 16);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#124: FILE: arch/arm/mach-pxa/gpio.c:169:
+static int pxa_gpio_set_batch(struct gpio_chip *chip, unsigned offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/arm/mach-pxa/gpio.c:170:
+static int pxa_gpio_set_batch(struct gpio_chip *chip, unsigned offset,
+				u32 values, u32 bitmask, int width)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: arch/arm/mach-pxa/gpio.c:196:
+static int pxa_gpio_get_batch(struct gpio_chip *chip, unsigned offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: arch/arm/mach-pxa/gpio.c:197:
+static int pxa_gpio_get_batch(struct gpio_chip *chip, unsigned offset,
+				u32 bitmask, int width, u32 *result)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: arch/arm/mach-pxa/gpio.c:219:
+#define SET_BATCH_MACRO^I.set_batch ^I  = pxa_gpio_set_batch,$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: arch/arm/mach-pxa/include/mach/gpio.h:60:
+static inline int gpio_set_batch(unsigned gpio, u32 values, u32 bitmask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/arm/mach-pxa/include/mach/gpio.h:61:
+static inline int gpio_set_batch(unsigned gpio, u32 values, u32 bitmask,
+					int bitwidth)

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: arch/arm/mach-pxa/include/mach/gpio.h:64:
+	int err = 0;
+	if (__builtin_constant_p(gpio) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/arm/mach-pxa/include/mach/gpio.h:65:
+	if (__builtin_constant_p(gpio) &&
+		(gpio + bitwidth < NR_BUILTIN_GPIO) &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#208: FILE: arch/arm/mach-pxa/include/mach/gpio.h:66:
+		((gpio + bitwidth) <= roundup(gpio+1, 32))) {
 		                                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#227: FILE: arch/arm/mach-pxa/include/mach/gpio.h:85:
+static inline int gpio_get_batch(unsigned gpio, u32 bitmask, int bitwidth,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/arm/mach-pxa/include/mach/gpio.h:86:
+static inline int gpio_get_batch(unsigned gpio, u32 bitmask, int bitwidth,
+					u32 *result)

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: arch/arm/mach-pxa/include/mach/gpio.h:89:
+	int ret = 0;
+	if (__builtin_constant_p(gpio) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: arch/arm/mach-pxa/include/mach/gpio.h:90:
+	if (__builtin_constant_p(gpio) &&
+		(gpio + bitwidth < NR_BUILTIN_GPIO) &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: arch/arm/mach-pxa/include/mach/gpio.h:91:
+		((gpio + bitwidth) <= roundup(gpio+1, 32))) {
 		                                  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179241.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 9 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179241.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
