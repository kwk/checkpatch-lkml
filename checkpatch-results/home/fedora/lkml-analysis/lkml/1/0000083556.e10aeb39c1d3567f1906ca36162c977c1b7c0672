WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
of SPI in kernel) - need to set CS_HIGH mode to work as in the previous patch.

WARNING:TYPO_SPELLING: 'Particulary' may be misspelled - perhaps 'Particularly'?
#49: 
   Particulary problematic with NO_CS mode where this word can't be
   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'distiguished' may be misspelled - perhaps 'distinguished'?
#50: 
   distiguished from correct words. Problem was in davinci_chip_select.
   ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Uglyness' may be misspelled - perhaps 'Ugliness'?
#62: 
Uglyness still there:
^^^^^^^^

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#77: 
 Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#86: 
 Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#86: 
 Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: arch/arm/mach-davinci/dm644x.c:325:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: arch/arm/mach-davinci/dm644x.c:329:
+^I.version ^I= SPI_VERSION_3,$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#177: FILE: arch/arm/mach-davinci/dm644x.c:363:
+void __init dm644x_init_spi(struct spi_board_info *info, unsigned len)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: arch/arm/mach-davinci/dm644x.c:370:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: arch/arm/mach-davinci/dm646x.c:364:
+^I.version ^I= SPI_VERSION_1,$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#270: FILE: arch/arm/mach-davinci/dm646x.c:398:
+void __init dm646x_init_spi0(struct spi_board_info *info, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#289: FILE: arch/arm/mach-davinci/include/mach/dm644x.h:40:
+void __init dm644x_init_spi(struct spi_board_info *info, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: arch/arm/mach-davinci/include/mach/dm646x.h:29:
+void dm646x_init_spi0(struct spi_board_info *info, unsigned len);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#307: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#312: FILE: arch/arm/mach-davinci/include/mach/spi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#326: FILE: arch/arm/mach-davinci/include/mach/spi.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#327: FILE: arch/arm/mach-davinci/include/mach/spi.h:16:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#366: FILE: drivers/spi/Kconfig:80:
+config SPI_DAVINCI
+	tristate "SPI controller driver for DaVinci/DA8xx SoC's"
+	depends on SPI_MASTER && ARCH_DAVINCI
+	select SPI_BITBANG
+	help
+	  SPI master controller for DaVinci and DA8xx SPI modules.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#394: FILE: drivers/spi/davinci_spi.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#408: FILE: drivers/spi/davinci_spi.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#409: FILE: drivers/spi/davinci_spi.c:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#428: FILE: drivers/spi/davinci_spi.c:35:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#510: FILE: drivers/spi/davinci_spi.c:117:
+	 * chip select, so nothing needs to be done in this function.
+	*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#512: FILE: drivers/spi/davinci_spi.c:119:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/spi/davinci_spi.c:131:
+static int davinci_spi_setup_transfer(struct spi_device *spi,
+		struct spi_transfer *t)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#526: FILE: drivers/spi/davinci_spi.c:133:
+{
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#548: FILE: drivers/spi/davinci_spi.c:155:
+	if (bits_per_word <= 8 && bits_per_word >= 2) {
[...]
+	} else if (bits_per_word <= 16 && bits_per_word >= 2) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#556: FILE: drivers/spi/davinci_spi.c:163:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/spi/davinci_spi.c:170:
+	clear_fmt_bits(davinci_spi->base, SPIFMT_CHARLEN_MASK,
+			spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/spi/davinci_spi.c:172:
+	set_fmt_bits(davinci_spi->base, bits_per_word & 0x1f,
+			spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: drivers/spi/davinci_spi.c:206:
+		set_fmt_bits(davinci_spi->base, SPIFMT_SHIFTDIR_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: drivers/spi/davinci_spi.c:209:
+		clear_fmt_bits(davinci_spi->base, SPIFMT_SHIFTDIR_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/spi/davinci_spi.c:213:
+		set_fmt_bits(davinci_spi->base, SPIFMT_POLARITY_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/spi/davinci_spi.c:216:
+		clear_fmt_bits(davinci_spi->base, SPIFMT_POLARITY_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/spi/davinci_spi.c:220:
+		set_fmt_bits(davinci_spi->base, SPIFMT_PHASE_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: drivers/spi/davinci_spi.c:223:
+		clear_fmt_bits(davinci_spi->base, SPIFMT_PHASE_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: drivers/spi/davinci_spi.c:227:
+		clear_fmt_bits(davinci_spi->base, SPIFMT_WDELAY_MASK,
+				spi->chip_select);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: drivers/spi/davinci_spi.c:229:
+		set_fmt_bits(davinci_spi->base,
+				(davinci_spi->pdata->wdelay

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/spi/davinci_spi.c:236:
+			set_fmt_bits(davinci_spi->base,
+					SPIFMT_ODD_PARITY_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/spi/davinci_spi.c:240:
+			clear_fmt_bits(davinci_spi->base,
+					SPIFMT_ODD_PARITY_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: drivers/spi/davinci_spi.c:245:
+			set_fmt_bits(davinci_spi->base,
+					SPIFMT_PARITYENA_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: drivers/spi/davinci_spi.c:249:
+			clear_fmt_bits(davinci_spi->base,
+					SPIFMT_PARITYENA_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/spi/davinci_spi.c:254:
+			set_fmt_bits(davinci_spi->base,
+					SPIFMT_WAITENA_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: drivers/spi/davinci_spi.c:258:
+			clear_fmt_bits(davinci_spi->base,
+					SPIFMT_WAITENA_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/spi/davinci_spi.c:263:
+			set_fmt_bits(davinci_spi->base,
+					SPIFMT_DISTIMER_MASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/spi/davinci_spi.c:267:
+			clear_fmt_bits(davinci_spi->base,
+					SPIFMT_DISTIMER_MASK,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#665: FILE: drivers/spi/davinci_spi.c:272:
+		set_io_bits(davinci_spi->base + SPIDEF, 1<<spi->chip_select);
 		                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#667: FILE: drivers/spi/davinci_spi.c:274:
+		clear_io_bits(davinci_spi->base + SPIDEF, 1<<spi->chip_select);
 		                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/spi/davinci_spi.c:312:
+		set_io_bits(davinci_spi->base + SPIGCR1,
+				SPIGCR1_LOOPBACK_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: drivers/spi/davinci_spi.c:315:
+		clear_io_bits(davinci_spi->base + SPIGCR1,
+				SPIGCR1_LOOPBACK_MASK);

WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#785: FILE: drivers/spi/davinci_spi.c:392:
+ * of SPI controller and then wait untill the completion will be marked
                                    ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#791: FILE: drivers/spi/davinci_spi.c:398:
+	 * another transfer */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#822: FILE: drivers/spi/davinci_spi.c:429:
+	tmp = (1<<spi->chip_select) ^ (tmp & 3);
 	        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: drivers/spi/davinci_spi.c:475:
+					iowrite32(data1_reg_val,
+						davinci_spi->base + SPIDAT1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: drivers/spi/davinci_spi.c:494:
+				set_io_bits(davinci_spi->base + SPIINT,
+						SPIINT_BITERR_INTR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: drivers/spi/davinci_spi.c:499:
+				iowrite32(data1_reg_val,
+						davinci_spi->base + SPIDAT1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#899: FILE: drivers/spi/davinci_spi.c:506:
+			iowrite32((data1_reg_val & 0x0ffcffff),
+					davinci_spi->base + SPIDAT1);

CHECK:BRACES: braces {} should be used on all arms of this statement
#940: FILE: drivers/spi/davinci_spi.c:547:
+		if (likely(int_status & SPIFLG_RX_INTR_MASK)) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#946: FILE: drivers/spi/davinci_spi.c:553:
+			iowrite32(~SPIINT_RX_INTR,
+					davinci_spi->base + SPIINT);

CHECK:BRACES: Unbalanced braces around else statement
#947: FILE: drivers/spi/davinci_spi.c:554:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#976: FILE: drivers/spi/davinci_spi.c:583:
+	if (pdata == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!master"
#982: FILE: drivers/spi/davinci_spi.c:589:
+	if (master == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!davinci_spi"
#990: FILE: drivers/spi/davinci_spi.c:597:
+	if (davinci_spi == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r"
#996: FILE: drivers/spi/davinci_spi.c:603:
+	if (r == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1006: FILE: drivers/spi/davinci_spi.c:613:
+	mem = request_mem_region(r->start, davinci_spi->region_size,
+					pdev->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem"
#1007: FILE: drivers/spi/davinci_spi.c:614:
+	if (mem == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!davinci_spi->base"
#1014: FILE: drivers/spi/davinci_spi.c:621:
+	if (davinci_spi->base == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!davinci_spi->bitbang.master"
#1033: FILE: drivers/spi/davinci_spi.c:640:
+	if (davinci_spi->bitbang.master == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1045: FILE: drivers/spi/davinci_spi.c:652:
+
+

WARNING:TYPO_SPELLING: 'modle' may be misspelled - perhaps 'model'?
#1066: FILE: drivers/spi/davinci_spi.c:673:
+	/* Reset In/OUT SPI modle */
 	                    ^^^^^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1068: FILE: drivers/spi/davinci_spi.c:675:
+	udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1076: FILE: drivers/spi/davinci_spi.c:683:
+		set_io_bits(davinci_spi->base + SPIGCR1,
+				SPIGCR1_CLKMOD_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/spi/davinci_spi.c:686:
+		clear_io_bits(davinci_spi->base + SPIGCR1,
+				SPIGCR1_CLKMOD_MASK);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1094: FILE: drivers/spi/davinci_spi.c:701:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1099: FILE: drivers/spi/davinci_spi.c:706:
+	dev_info(&pdev->dev, "Controller at 0x%p (irq = %d) \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1100: FILE: drivers/spi/davinci_spi.c:707:
+	dev_info(&pdev->dev, "Controller at 0x%p (irq = %d) \n",
+		davinci_spi->base, davinci_spi->irq);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1176: FILE: drivers/spi/davinci_spi.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1190: FILE: drivers/spi/davinci_spi.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1191: FILE: drivers/spi/davinci_spi.h:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1241: FILE: drivers/spi/davinci_spi.h:66:
+#define SPIDAT1_CSNR_MASK	(BIT(17 | BIT(16))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1243: FILE: drivers/spi/davinci_spi.h:68:
+#define SPIDAT1_DFSEL_MASK	(BIT(24 | BIT(25))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1267: FILE: drivers/spi/davinci_spi.h:92:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1280: FILE: drivers/spi/davinci_spi.h:105:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct davinci_spi *' should also have an identifier name
#1347: FILE: drivers/spi/davinci_spi.h:172:
+	void			(*get_rx)(u32 rx_data, struct davinci_spi *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct davinci_spi *' should also have an identifier name
#1348: FILE: drivers/spi/davinci_spi.h:173:
+	u32			(*get_tx)(struct davinci_spi *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083556.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 25 warnings, 54 checks, 1192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083556.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
