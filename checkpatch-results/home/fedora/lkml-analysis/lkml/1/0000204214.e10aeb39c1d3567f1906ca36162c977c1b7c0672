WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: fs/ceph/snap.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#140: FILE: fs/ceph/snap.c:83:
+		dout(20, "get_snap_realm created %llx %p\n", realm->ino, realm);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#142: FILE: fs/ceph/snap.c:85:
+	dout(20, "get_snap_realm %llx %p %d -> %d\n", realm->ino, realm,
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#143: FILE: fs/ceph/snap.c:86:
+	     realm->nref, realm->nref+1);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#154: FILE: fs/ceph/snap.c:97:
+	dout(20, "put_snap_realm %llx %p %d -> %d\n", realm->ino, realm,
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#155: FILE: fs/ceph/snap.c:98:
+	     realm->nref, realm->nref-1);
 	                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#190: FILE: fs/ceph/snap.c:133:
+	dout(20, "adjust_snap_realm_parent %llx %p: %llx %p -> %llx %p\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'adjust_snap_realm_parent', this function's name, in a string
#190: FILE: fs/ceph/snap.c:133:
+	dout(20, "adjust_snap_realm_parent %llx %p: %llx %p -> %llx %p\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: fs/ceph/snap.c:146:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: fs/ceph/snap.c:182:
+	/* do i actually need to update?  not if my context seq
+	   matches realm seq, and my parents' does to.  (this works

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#241: FILE: fs/ceph/snap.c:184:
+	   hierarchy after each update.) */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#246: FILE: fs/ceph/snap.c:189:
+		dout(10, "build_snap_context %llx %p: %p seq %lld (%d snaps)"
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'build_snap_context', this function's name, in a string
#246: FILE: fs/ceph/snap.c:189:
+		dout(10, "build_snap_context %llx %p: %p seq %lld (%d snaps)"

WARNING:SPLIT_STRING: quoted string split across lines
#247: FILE: fs/ceph/snap.c:190:
+		dout(10, "build_snap_context %llx %p: %p seq %lld (%d snaps)"
+		     " (unchanged)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#256: FILE: fs/ceph/snap.c:199:
+	snapc = kzalloc(sizeof(*snapc) + num*sizeof(u64), GFP_NOFS);
 	                                    ^

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#265: FILE: fs/ceph/snap.c:208:
+		/* include any of parent's snaps occuring _after_ my
 		                                 ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#266: FILE: fs/ceph/snap.c:209:
+		/* include any of parent's snaps occuring _after_ my
+		   parent became my parent */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#266: FILE: fs/ceph/snap.c:209:
+		   parent became my parent */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#276: FILE: fs/ceph/snap.c:219:
+	       sizeof(u64)*realm->num_snaps);
 	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#279: FILE: fs/ceph/snap.c:222:
+	       sizeof(u64)*realm->num_prior_parent_snaps);
 	                  ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#284: FILE: fs/ceph/snap.c:227:
+	dout(10, "build_snap_context %llx %p: %p seq %lld (%d snaps)\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'build_snap_context', this function's name, in a string
#284: FILE: fs/ceph/snap.c:227:
+	dout(10, "build_snap_context %llx %p: %p seq %lld (%d snaps)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'build_snap_context', this function's name, in a string
#301: FILE: fs/ceph/snap.c:244:
+	derr(0, "build_snap_context %llx %p fail %d\n", realm->ino,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#314: FILE: fs/ceph/snap.c:257:
+	dout(10, "rebuild_snap_realms %llx %p\n", realm->ino, realm);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rebuild_snap_realms', this function's name, in a string
#314: FILE: fs/ceph/snap.c:257:
+	dout(10, "rebuild_snap_realms %llx %p\n", realm->ino, realm);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#323: FILE: fs/ceph/snap.c:266:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: fs/ceph/snap.c:288:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#377: FILE: fs/ceph/snap.c:320:
+		/* there is no point in queuing multiple "pending" cap_snaps,
+		   as no new writes are allowed to start when pending, so any

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#379: FILE: fs/ceph/snap.c:322:
+		   cap_snap.  lucky us. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#380: FILE: fs/ceph/snap.c:323:
+		dout(10, "queue_cap_snap %p snapc %p seq %llu used %d"
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: fs/ceph/snap.c:324:
+		dout(10, "queue_cap_snap %p snapc %p seq %llu used %d"
+		     " already pending\n", inode, snapc, snapc->seq, used);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#389: FILE: fs/ceph/snap.c:332:
+		/* dirty page count moved from _head to this cap_snap;
+		   all subsequent writes page dirties occur _after_ this

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#390: FILE: fs/ceph/snap.c:333:
+		   snapshot. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#398: FILE: fs/ceph/snap.c:341:
+			dout(10, "queue_cap_snap %p cap_snap %p snapc %p"
 			^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#399: FILE: fs/ceph/snap.c:342:
+			dout(10, "queue_cap_snap %p cap_snap %p snapc %p"
+			     " seq %llu used WR, now pending\n", inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: fs/ceph/snap.c:363:
+int __ceph_finish_cap_snap(struct ceph_inode_info *ci,
+			    struct ceph_cap_snap *capsnap)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#425: FILE: fs/ceph/snap.c:368:
+	BUG_ON(capsnap->writing);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#432: FILE: fs/ceph/snap.c:375:
+		dout(10, "finish_cap_snap %p cap_snap %p snapc %p %llu s=%llu "
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#433: FILE: fs/ceph/snap.c:376:
+		dout(10, "finish_cap_snap %p cap_snap %p snapc %p %llu s=%llu "
+		     "still has %d dirty pages\n", inode, capsnap,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#438: FILE: fs/ceph/snap.c:381:
+	dout(10, "finish_cap_snap %p cap_snap %p snapc %p %llu s=%llu clean\n",
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: fs/ceph/snap.c:391:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#466: FILE: fs/ceph/snap.c:409:
+	dout(10, "update_snap_trace deletion=%d\n", deletion);
 	^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#471: FILE: fs/ceph/snap.c:414:
+	ceph_decode_need(&p, e, sizeof(u64)*(le32_to_cpu(ri->num_snaps) +
 	                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#486: FILE: fs/ceph/snap.c:429:
+		 * nref bumped) to the caller. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#492: FILE: fs/ceph/snap.c:435:
+		dout(10, "update_snap_trace updating %llx %p %lld -> %lld\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#511: FILE: fs/ceph/snap.c:454:
+			dout(20, "update_snap_trace cap_snaps queued\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#515: FILE: fs/ceph/snap.c:458:
+		dout(10, "update_snap_trace %llx %p seq %lld unchanged\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#548: FILE: fs/ceph/snap.c:491:
+	dout(10, "done with %llx %p, invalidated=%d, %p %p\n", realm->ino,
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#568: FILE: fs/ceph/snap.c:511:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#581: FILE: fs/ceph/snap.c:524:
+	dout(10, "flush_snaps\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'flush_snaps', this function's name, in a string
#581: FILE: fs/ceph/snap.c:524:
+	dout(10, "flush_snaps\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#592: FILE: fs/ceph/snap.c:535:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#601: FILE: fs/ceph/snap.c:544:
+	dout(10, "flush_snaps done\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'flush_snaps', this function's name, in a string
#601: FILE: fs/ceph/snap.c:544:
+	dout(10, "flush_snaps done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#604: FILE: fs/ceph/snap.c:547:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: fs/ceph/snap.c:587:
+					  * existing realm */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#650: FILE: fs/ceph/snap.c:593:
+	dout(10, "handle_snap from mds%d op %s split %llx tracelen %d\n", mds,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#660: FILE: fs/ceph/snap.c:603:
+		dout(10, "WTF, got snap but no session for mds%d\n", mds);
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#685: FILE: fs/ceph/snap.c:628:
+		 * ceph_update_snap_trace. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#692: FILE: fs/ceph/snap.c:635:
+		dout(10, "splitting snap_realm %llx %p\n", realm->ino, realm);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#717: FILE: fs/ceph/snap.c:660:
+				dout(15, " leaving %p in newer realm %llx %p\n",
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#722: FILE: fs/ceph/snap.c:665:
+			dout(15, " will move %p to split realm %llx %p\n",
 			^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#737: FILE: fs/ceph/snap.c:680:
+			iput(inode);
 			^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#740: FILE: fs/ceph/snap.c:683:
+		skip_inode:

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#742: FILE: fs/ceph/snap.c:685:
+			iput(inode);
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: fs/ceph/snap.c:692:
+				ceph_get_snap_realm(mdsc,
+					   le64_to_cpu(split_realms[i]));

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#788: FILE: fs/ceph/snap.c:731:
+			iput(inode);
 			^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#807: FILE: fs/ceph/snap.c:750:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#809: FILE: fs/ceph/snap.c:752:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 55 warnings, 15 checks, 753 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
