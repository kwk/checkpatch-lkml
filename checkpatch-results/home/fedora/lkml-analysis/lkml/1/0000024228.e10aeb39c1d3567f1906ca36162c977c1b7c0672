WARNING:TYPO_SPELLING: 'sucession' may be misspelled - perhaps 'succession'?
#37: 
sucession, or if we don't use modules at all, right Peter? ;-)
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#52: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#139: FILE: tools/perf/util/event.c:160:
+	struct rb_node *nd;
 	                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#141: FILE: tools/perf/util/event.c:162:
+	for (nd = rb_first(&session->kmaps.maps[MAP__FUNCTION]);
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: tools/perf/util/event.c:163:
+	     nd; nd = rb_next(nd)) {
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: tools/perf/util/event.c:163:
+	     nd; nd = rb_next(nd)) {
 	         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: tools/perf/util/event.c:163:
+	     nd; nd = rb_next(nd)) {
 	                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#145: FILE: tools/perf/util/event.c:166:
+		struct map *pos = rb_entry(nd, struct map, rb_node);
 		                           ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: tools/perf/util/event.c:175:
+^I^I^I^I        (sizeof(ev.mmap.filename) - size));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited before semicolon
#176: FILE: tools/perf/util/event.c:257:
+	ev.mmap.len   = session->vmlinux_maps[MAP__FUNCTION]->end - ev.mmap.start ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#206: FILE: tools/perf/util/event.c:330:
+			if (name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dot"
#211: FILE: tools/perf/util/event.c:335:
+			if (dot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#221: FILE: tools/perf/util/event.c:345:
+			if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#225: FILE: tools/perf/util/event.c:349:
+			if (name == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kernel"
#240: FILE: tools/perf/util/event.c:364:
+			if (kernel == NULL)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#249: FILE: tools/perf/util/event.c:373:
+			session->vmlinux_maps[MAP__FUNCTION]->end   = self->mmap.start + self->mmap.len;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dso"
#306: FILE: tools/perf/util/session.c:268:
+		if (dso != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: tools/perf/util/symbol.c:507:
+^I^I^I^I^I         "inconsistency while looking "$

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: tools/perf/util/symbol.c:507:
 					pr_debug("/proc/{kallsyms,modules} "
+					         "inconsistency while looking "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: tools/perf/util/symbol.c:508:
+					         "inconsistency while looking "
+						 "for \"%s\" module!\n", module);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dso"
#409: FILE: tools/perf/util/symbol.c:1471:
+	if (dso == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#413: FILE: tools/perf/util/symbol.c:1475:
+	if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#445: FILE: tools/perf/util/symbol.c:1522:
+		if (map == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#474: FILE: tools/perf/util/symbol.c:1610:
+		if (sysfs__read_build_id("/sys/kernel/notes", kallsyms_build_id,
[...]
+		is_kallsyms = dso__build_id_equal(self, kallsyms_build_id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kernel"
#521: FILE: tools/perf/util/symbol.c:1766:
+	if (kernel == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024228.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 13 warnings, 10 checks, 434 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024228.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
