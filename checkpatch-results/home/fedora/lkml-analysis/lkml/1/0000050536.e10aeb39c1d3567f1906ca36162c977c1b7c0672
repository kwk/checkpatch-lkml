ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#46: FILE: drivers/scsi/in2000.c:258:
+static int is_dir_out(struct scsi_cmnd * cmd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: drivers/scsi/in2000.c:337:
+static int in2000_queuecommand(struct scsi_cmnd * cmd, void (*done) (struct scsi_cmnd *))

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#77: FILE: drivers/scsi/in2000.c:420:
+		for (tmp = (struct scsi_cmnd *) hostdata->input_Q; tmp->host_scribble; tmp = (struct scsi_cmnd *) tmp->host_scribble);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#77: FILE: drivers/scsi/in2000.c:420:
+		for (tmp = (struct scsi_cmnd *) hostdata->input_Q; tmp->host_scribble; tmp = (struct scsi_cmnd *) tmp->host_scribble);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#77: FILE: drivers/scsi/in2000.c:420:
+		for (tmp = (struct scsi_cmnd *) hostdata->input_Q; tmp->host_scribble; tmp = (struct scsi_cmnd *) tmp->host_scribble);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#95: FILE: drivers/scsi/in2000.c:470:
+	cmd = (struct scsi_cmnd *) hostdata->input_Q;

CHECK:SPACING: No space is necessary after a cast
#102: FILE: drivers/scsi/in2000.c:476:
+		cmd = (struct scsi_cmnd *) cmd->host_scribble;

CHECK:SPACING: No space is necessary after a cast
#111: FILE: drivers/scsi/in2000.c:493:
+		hostdata->input_Q = (struct scsi_cmnd *) cmd->host_scribble;

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#120: FILE: drivers/scsi/in2000.c:542:
+	for (prev = (struct scsi_cmnd *) hostdata->input_Q; prev; prev = (struct scsi_cmnd *) prev->host_scribble) {

CHECK:SPACING: No space is necessary after a cast
#120: FILE: drivers/scsi/in2000.c:542:
+	for (prev = (struct scsi_cmnd *) hostdata->input_Q; prev; prev = (struct scsi_cmnd *) prev->host_scribble) {

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#123: FILE: drivers/scsi/in2000.c:544:
+			for (prev = (struct scsi_cmnd *) hostdata->input_Q; prev; prev = (struct scsi_cmnd *) prev->host_scribble)

CHECK:SPACING: No space is necessary after a cast
#123: FILE: drivers/scsi/in2000.c:544:
+			for (prev = (struct scsi_cmnd *) hostdata->input_Q; prev; prev = (struct scsi_cmnd *) prev->host_scribble)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: drivers/scsi/in2000.c:746:
+static void transfer_bytes(struct scsi_cmnd * cmd, int data_in_dir)

CHECK:SPACING: No space is necessary after a cast
#150: FILE: drivers/scsi/in2000.c:912:
+		cmd = (struct scsi_cmnd *) hostdata->connected;	/* assume we're connected */

CHECK:SPACING: No space is necessary after a cast
#159: FILE: drivers/scsi/in2000.c:994:
+	cmd = (struct scsi_cmnd *) hostdata->connected;	/* assume we're connected */

CHECK:SPACING: No space is necessary after a cast
#168: FILE: drivers/scsi/in2000.c:1071:
+			cmd = (struct scsi_cmnd *) hostdata->selecting;	/* get a valid cmd */

CHECK:SPACING: No space is necessary after a cast
#177: FILE: drivers/scsi/in2000.c:1093:
+		    hostdata->connected = cmd = (struct scsi_cmnd *) hostdata->selecting;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#177: FILE: drivers/scsi/in2000.c:1093:
+		    hostdata->connected = cmd = (struct scsi_cmnd *) hostdata->selecting;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#186: FILE: drivers/scsi/in2000.c:1494:
+				cmd = (struct scsi_cmnd *) hostdata->selecting;

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/scsi/in2000.c:1535:
+		cmd = (struct scsi_cmnd *) hostdata->disconnected_Q;

CHECK:SPACING: No space is necessary after a cast
#202: FILE: drivers/scsi/in2000.c:1541:
+			cmd = (struct scsi_cmnd *) cmd->host_scribble;

CHECK:SPACING: No space is necessary after a cast
#211: FILE: drivers/scsi/in2000.c:1556:
+			hostdata->disconnected_Q = (struct scsi_cmnd *) cmd->host_scribble;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: drivers/scsi/in2000.c:1642:
+static int in2000_bus_reset(struct scsi_cmnd * cmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: drivers/scsi/in2000.c:1678:
+static int __in2000_abort(struct scsi_cmnd * cmd)

CHECK:SPACING: No space is necessary after a cast
#243: FILE: drivers/scsi/in2000.c:1697:
+	tmp = (struct scsi_cmnd *) hostdata->input_Q;

CHECK:SPACING: No space is necessary after a cast
#252: FILE: drivers/scsi/in2000.c:1710:
+		tmp = (struct scsi_cmnd *) tmp->host_scribble;

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#261: FILE: drivers/scsi/in2000.c:1777:
+	for (tmp = (struct scsi_cmnd *) hostdata->disconnected_Q; tmp; tmp = (struct scsi_cmnd *) tmp->host_scribble)

CHECK:SPACING: No space is necessary after a cast
#261: FILE: drivers/scsi/in2000.c:1777:
+	for (tmp = (struct scsi_cmnd *) hostdata->disconnected_Q; tmp; tmp = (struct scsi_cmnd *) tmp->host_scribble)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: drivers/scsi/in2000.c:1799:
+static int in2000_abort(struct scsi_cmnd * cmd)

CHECK:SPACING: No space is necessary after a cast
#288: FILE: drivers/scsi/in2000.c:2270:
+			cmd = (struct scsi_cmnd *) hd->connected;

CHECK:SPACING: No space is necessary after a cast
#296: FILE: drivers/scsi/in2000.c:2277:
+		cmd = (struct scsi_cmnd *) hd->input_Q;

CHECK:SPACING: No space is necessary after a cast
#301: FILE: drivers/scsi/in2000.c:2281:
+			cmd = (struct scsi_cmnd *) cmd->host_scribble;

CHECK:SPACING: No space is necessary after a cast
#307: FILE: drivers/scsi/in2000.c:2286:
+		cmd = (struct scsi_cmnd *) hd->disconnected_Q;

CHECK:SPACING: No space is necessary after a cast
#312: FILE: drivers/scsi/in2000.c:2290:
+			cmd = (struct scsi_cmnd *) cmd->host_scribble;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/scsi/in2000.h:286:
+    volatile struct scsi_cmnd *input_Q;       /* commands waiting to be started */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#328: FILE: drivers/scsi/in2000.h:286:
+    volatile struct scsi_cmnd *input_Q;       /* commands waiting to be started */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/scsi/in2000.h:287:
+    volatile struct scsi_cmnd *selecting;     /* trying to select this command */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#329: FILE: drivers/scsi/in2000.h:287:
+    volatile struct scsi_cmnd *selecting;     /* trying to select this command */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/scsi/in2000.h:288:
+    volatile struct scsi_cmnd *connected;     /* currently connected command */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#330: FILE: drivers/scsi/in2000.h:288:
+    volatile struct scsi_cmnd *connected;     /* currently connected command */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/scsi/in2000.h:289:
+    volatile struct scsi_cmnd *disconnected_Q;/* commands waiting for reconnect */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#331: FILE: drivers/scsi/in2000.h:289:
+    volatile struct scsi_cmnd *disconnected_Q;/* commands waiting for reconnect */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 12 warnings, 23 checks, 280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
