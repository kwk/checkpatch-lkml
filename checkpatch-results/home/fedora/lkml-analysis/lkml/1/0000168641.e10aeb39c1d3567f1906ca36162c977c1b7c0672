ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: include/linux/jhash.h:15:
+ * hashword(), hashlittle(), hashlittle2(), hashbig(), mix(), and final() $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: include/linux/jhash.h:16:
+ * are externally useful functions.  Routines to test the hash are included $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: include/linux/jhash.h:26:
+#define __rot(x,k) (((x)<<(k)) | ((x)>>(32-(k))))
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#83: FILE: include/linux/jhash.h:26:
+#define __rot(x,k) (((x)<<(k)) | ((x)>>(32-(k))))
                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#83: FILE: include/linux/jhash.h:26:
+#define __rot(x,k) (((x)<<(k)) | ((x)>>(32-(k))))
                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#83: FILE: include/linux/jhash.h:26:
+#define __rot(x,k) (((x)<<(k)) | ((x)>>(32-(k))))
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#83: FILE: include/linux/jhash.h:26:
+#define __rot(x,k) (((x)<<(k)) | ((x)>>(32-(k))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#83: FILE: include/linux/jhash.h:26:
+#define __rot(x,k) (((x)<<(k)) | ((x)>>(32-(k))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: include/linux/jhash.h:29:
+#define __jhash_mix(a,b,c) \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: include/linux/jhash.h:29:
+#define __jhash_mix(a,b,c) \
                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#86: FILE: include/linux/jhash.h:29:
+#define __jhash_mix(a,b,c) \
+{ \
+  a -= c;  a ^= __rot(c, 4);  c += b; \
+  b -= a;  b ^= __rot(a, 6);  a += c; \
+  c -= b;  c ^= __rot(b, 8);  b += a; \
+  a -= c;  a ^= __rot(c,16);  c += b; \
+  b -= a;  b ^= __rot(a,19);  a += c; \
+  c -= b;  c ^= __rot(b, 4);  b += a; \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#86: FILE: include/linux/jhash.h:29:
+#define __jhash_mix(a,b,c) \
+{ \
+  a -= c;  a ^= __rot(c, 4);  c += b; \
+  b -= a;  b ^= __rot(a, 6);  a += c; \
+  c -= b;  c ^= __rot(b, 8);  b += a; \
+  a -= c;  a ^= __rot(c,16);  c += b; \
+  b -= a;  b ^= __rot(a,19);  a += c; \
+  c -= b;  c ^= __rot(b, 4);  b += a; \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#86: FILE: include/linux/jhash.h:29:
+#define __jhash_mix(a,b,c) \
+{ \
+  a -= c;  a ^= __rot(c, 4);  c += b; \
+  b -= a;  b ^= __rot(a, 6);  a += c; \
+  c -= b;  c ^= __rot(b, 8);  b += a; \
+  a -= c;  a ^= __rot(c,16);  c += b; \
+  b -= a;  b ^= __rot(a,19);  a += c; \
+  c -= b;  c ^= __rot(b, 4);  b += a; \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#86: FILE: include/linux/jhash.h:29:
+#define __jhash_mix(a,b,c) \
+{ \
+  a -= c;  a ^= __rot(c, 4);  c += b; \
+  b -= a;  b ^= __rot(a, 6);  a += c; \
+  c -= b;  c ^= __rot(b, 8);  b += a; \
+  a -= c;  a ^= __rot(c,16);  c += b; \
+  b -= a;  b ^= __rot(a,19);  a += c; \
+  c -= b;  c ^= __rot(b, 4);  b += a; \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/jhash.h:31:
+  a -= c;  a ^= __rot(c, 4);  c += b; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: include/linux/jhash.h:32:
+  b -= a;  b ^= __rot(a, 6);  a += c; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/jhash.h:33:
+  c -= b;  c ^= __rot(b, 8);  b += a; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/linux/jhash.h:34:
+  a -= c;  a ^= __rot(c,16);  c += b; \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: include/linux/jhash.h:34:
+  a -= c;  a ^= __rot(c,16);  c += b; \
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: include/linux/jhash.h:35:
+  b -= a;  b ^= __rot(a,19);  a += c; \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: include/linux/jhash.h:35:
+  b -= a;  b ^= __rot(a,19);  a += c; \
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: include/linux/jhash.h:36:
+  c -= b;  c ^= __rot(b, 4);  b += a; \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
 { \
+  c ^= b; c -= __rot(b,14); \
+  a ^= c; a -= __rot(c,11); \
+  b ^= a; b -= __rot(a,25); \
+  c ^= b; c -= __rot(b,16); \
+  a ^= c; a -= __rot(c,4);  \
+  b ^= a; b -= __rot(a,14); \
+  c ^= b; c -= __rot(b,24); \
 }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
 { \
+  c ^= b; c -= __rot(b,14); \
+  a ^= c; a -= __rot(c,11); \
+  b ^= a; b -= __rot(a,25); \
+  c ^= b; c -= __rot(b,16); \
+  a ^= c; a -= __rot(c,4);  \
+  b ^= a; b -= __rot(a,14); \
+  c ^= b; c -= __rot(b,24); \
 }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
 { \
+  c ^= b; c -= __rot(b,14); \
+  a ^= c; a -= __rot(c,11); \
+  b ^= a; b -= __rot(a,25); \
+  c ^= b; c -= __rot(b,16); \
+  a ^= c; a -= __rot(c,4);  \
+  b ^= a; b -= __rot(a,14); \
+  c ^= b; c -= __rot(b,24); \
 }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
 { \
+  c ^= b; c -= __rot(b,14); \
+  a ^= c; a -= __rot(c,11); \
+  b ^= a; b -= __rot(a,25); \
+  c ^= b; c -= __rot(b,16); \
+  a ^= c; a -= __rot(c,4);  \
+  b ^= a; b -= __rot(a,14); \
+  c ^= b; c -= __rot(b,24); \
 }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#97: FILE: include/linux/jhash.h:40:
+#define __jhash_final(a,b,c) \
 { \
+  c ^= b; c -= __rot(b,14); \
+  a ^= c; a -= __rot(c,11); \
+  b ^= a; b -= __rot(a,25); \
+  c ^= b; c -= __rot(b,16); \
+  a ^= c; a -= __rot(c,4);  \
+  b ^= a; b -= __rot(a,14); \
+  c ^= b; c -= __rot(b,24); \
 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: include/linux/jhash.h:42:
+  c ^= b; c -= __rot(b,14); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: include/linux/jhash.h:42:
+  c ^= b; c -= __rot(b,14); \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/linux/jhash.h:43:
+  a ^= c; a -= __rot(c,11); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: include/linux/jhash.h:43:
+  a ^= c; a -= __rot(c,11); \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: include/linux/jhash.h:44:
+  b ^= a; b -= __rot(a,25); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: include/linux/jhash.h:44:
+  b ^= a; b -= __rot(a,25); \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/linux/jhash.h:45:
+  c ^= b; c -= __rot(b,16); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: include/linux/jhash.h:45:
+  c ^= b; c -= __rot(b,16); \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: include/linux/jhash.h:46:
+  a ^= c; a -= __rot(c,4);  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: include/linux/jhash.h:46:
+  a ^= c; a -= __rot(c,4);  \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: include/linux/jhash.h:47:
+  b ^= a; b -= __rot(a,14); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: include/linux/jhash.h:47:
+  b ^= a; b -= __rot(a,14); \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/linux/jhash.h:48:
+  c ^= b; c -= __rot(b,24); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: include/linux/jhash.h:48:
+  c ^= b; c -= __rot(b,24); \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/linux/jhash.h:60:
+	u32 a,b,c;
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/linux/jhash.h:60:
+	u32 a,b,c;
 	       ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#143: FILE: include/linux/jhash.h:64:
+	a = b = c = JHASH_GOLDEN_RATIO + length + initval;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: include/linux/jhash.h:68:
+    ^I^Ia += (k[0] + ((u32)k[1]<<8) + ((u32)k[2]<<16) + ((u32)k[3]<<24));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: include/linux/jhash.h:68:
+    ^I^Ia += (k[0] + ((u32)k[1]<<8) + ((u32)k[2]<<16) + ((u32)k[3]<<24));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: include/linux/jhash.h:68:
+    ^I^Ia += (k[0] + ((u32)k[1]<<8) + ((u32)k[2]<<16) + ((u32)k[3]<<24));$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#147: FILE: include/linux/jhash.h:68:
+    		a += (k[0] + ((u32)k[1]<<8) + ((u32)k[2]<<16) + ((u32)k[3]<<24));
     		                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#147: FILE: include/linux/jhash.h:68:
+    		a += (k[0] + ((u32)k[1]<<8) + ((u32)k[2]<<16) + ((u32)k[3]<<24));
     		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#147: FILE: include/linux/jhash.h:68:
+    		a += (k[0] + ((u32)k[1]<<8) + ((u32)k[2]<<16) + ((u32)k[3]<<24));
     		                                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#148: FILE: include/linux/jhash.h:69:
+		b += (k[4] + ((u32)k[5]<<8) + ((u32)k[6]<<16) + ((u32)k[7]<<24));
 		                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#148: FILE: include/linux/jhash.h:69:
+		b += (k[4] + ((u32)k[5]<<8) + ((u32)k[6]<<16) + ((u32)k[7]<<24));
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#148: FILE: include/linux/jhash.h:69:
+		b += (k[4] + ((u32)k[5]<<8) + ((u32)k[6]<<16) + ((u32)k[7]<<24));
 		                                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: include/linux/jhash.h:70:
+		c += (k[8] + ((u32)k[9]<<8) + ((u32)k[10]<<16) + ((u32)k[11]<<24));
 		                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: include/linux/jhash.h:70:
+		c += (k[8] + ((u32)k[9]<<8) + ((u32)k[10]<<16) + ((u32)k[11]<<24));
 		                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: include/linux/jhash.h:70:
+		c += (k[8] + ((u32)k[9]<<8) + ((u32)k[10]<<16) + ((u32)k[11]<<24));
 		                                                            ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#165: FILE: include/linux/jhash.h:77:
+	/* all the case statements fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: include/linux/jhash.h:79:
+	case 12: c += (u32)k[11]<<24;
 	                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#167: FILE: include/linux/jhash.h:79:
+	case 12: c += (u32)k[11]<<24;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#168: FILE: include/linux/jhash.h:80:
+	case 11: c += (u32)k[10]<<16;
 	                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#168: FILE: include/linux/jhash.h:80:
+	case 11: c += (u32)k[10]<<16;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#169: FILE: include/linux/jhash.h:81:
+	case 10: c += (u32)k[9]<<8;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#169: FILE: include/linux/jhash.h:81:
+	case 10: c += (u32)k[9]<<8;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#170: FILE: include/linux/jhash.h:82:
+	case 9 : c += k[8];
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#170: FILE: include/linux/jhash.h:82:
+	case 9 : c += k[8];

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#171: FILE: include/linux/jhash.h:83:
+	case 8 : b += (u32)k[7]<<24;
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#171: FILE: include/linux/jhash.h:83:
+	case 8 : b += (u32)k[7]<<24;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#171: FILE: include/linux/jhash.h:83:
+	case 8 : b += (u32)k[7]<<24;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#172: FILE: include/linux/jhash.h:84:
+	case 7 : b += (u32)k[6]<<16;
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#172: FILE: include/linux/jhash.h:84:
+	case 7 : b += (u32)k[6]<<16;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#172: FILE: include/linux/jhash.h:84:
+	case 7 : b += (u32)k[6]<<16;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#173: FILE: include/linux/jhash.h:85:
+	case 6 : b += (u32)k[5]<<8;
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#173: FILE: include/linux/jhash.h:85:
+	case 6 : b += (u32)k[5]<<8;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: include/linux/jhash.h:85:
+	case 6 : b += (u32)k[5]<<8;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#178: FILE: include/linux/jhash.h:87:
+	case 4 : a += (u32)k[3]<<24;
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#178: FILE: include/linux/jhash.h:87:
+	case 4 : a += (u32)k[3]<<24;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#178: FILE: include/linux/jhash.h:87:
+	case 4 : a += (u32)k[3]<<24;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#179: FILE: include/linux/jhash.h:88:
+	case 3 : a += (u32)k[2]<<16;
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#179: FILE: include/linux/jhash.h:88:
+	case 3 : a += (u32)k[2]<<16;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#179: FILE: include/linux/jhash.h:88:
+	case 3 : a += (u32)k[2]<<16;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#180: FILE: include/linux/jhash.h:89:
+	case 2 : a += (u32)k[1]<<8;
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#180: FILE: include/linux/jhash.h:89:
+	case 2 : a += (u32)k[1]<<8;
 	                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#180: FILE: include/linux/jhash.h:89:
+	case 2 : a += (u32)k[1]<<8;

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#186: FILE: include/linux/jhash.h:92:
+	case 0 :
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: include/linux/jhash.h:107:
+	a = b = c = JHASH_GOLDEN_RATIO + (length<<2) + initval;
 	                                        ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#203: FILE: include/linux/jhash.h:107:
+	a = b = c = JHASH_GOLDEN_RATIO + (length<<2) + initval;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: include/linux/jhash.h:120:
+^I/* all the case statements fall through */ $

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#226: FILE: include/linux/jhash.h:120:
+	/* all the case statements fall through */ 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#228: FILE: include/linux/jhash.h:122:
+	case 3: c += k[2];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#229: FILE: include/linux/jhash.h:123:
+	case 2: b += k[1];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#230: FILE: include/linux/jhash.h:124:
+	case 1: a += k[0];

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000168641.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 41 errors, 17 warnings, 35 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000168641.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
