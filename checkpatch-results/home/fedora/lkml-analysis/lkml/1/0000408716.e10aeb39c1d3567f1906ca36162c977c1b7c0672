WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
> WARNING: kernel/built-in.o(.text+0x1add5): Section mismatch: reference to .init.text: (between 'kthreadd' and 'init_waitqueue_head')

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: mm/page_alloc.c:129:
+  static struct node_active_region __meminitdata early_node_map[MAX_ACTIVE_REGIONS];$

WARNING:MISPLACED_INIT: __meminitdata should be placed after early_node_map[MAX_ACTIVE_REGIONS]
#78: FILE: mm/page_alloc.c:129:
+  static struct node_active_region __meminitdata early_node_map[MAX_ACTIVE_REGIONS];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: mm/page_alloc.c:130:
+  static int __meminitdata nr_nodemap_entries;$

WARNING:MISPLACED_INIT: __meminitdata should be placed after nr_nodemap_entries
#79: FILE: mm/page_alloc.c:130:
+  static int __meminitdata nr_nodemap_entries;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: mm/page_alloc.c:131:
+  static unsigned long __meminitdata arch_zone_lowest_possible_pfn[MAX_NR_ZONES];$

WARNING:MISPLACED_INIT: __meminitdata should be placed after arch_zone_lowest_possible_pfn[MAX_NR_ZONES]
#80: FILE: mm/page_alloc.c:131:
+  static unsigned long __meminitdata arch_zone_lowest_possible_pfn[MAX_NR_ZONES];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: mm/page_alloc.c:132:
+  static unsigned long __meminitdata arch_zone_highest_possible_pfn[MAX_NR_ZONES];$

WARNING:MISPLACED_INIT: __meminitdata should be placed after arch_zone_highest_possible_pfn[MAX_NR_ZONES]
#81: FILE: mm/page_alloc.c:132:
+  static unsigned long __meminitdata arch_zone_highest_possible_pfn[MAX_NR_ZONES];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: mm/page_alloc.c:134:
+  static unsigned long __meminitdata node_boundary_start_pfn[MAX_NUMNODES];$

WARNING:MISPLACED_INIT: __meminitdata should be placed after node_boundary_start_pfn[MAX_NUMNODES]
#85: FILE: mm/page_alloc.c:134:
+  static unsigned long __meminitdata node_boundary_start_pfn[MAX_NUMNODES];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: mm/page_alloc.c:135:
+  static unsigned long __meminitdata node_boundary_end_pfn[MAX_NUMNODES];$

WARNING:MISPLACED_INIT: __meminitdata should be placed after node_boundary_end_pfn[MAX_NUMNODES]
#86: FILE: mm/page_alloc.c:135:
+  static unsigned long __meminitdata node_boundary_end_pfn[MAX_NUMNODES];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: mm/page_alloc.c:2602:
+static void __meminit account_node_boundary(unsigned int nid,
 		unsigned long *start_pfn, unsigned long *end_pfn)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#104: FILE: mm/page_alloc.c:2621:
+static void __meminit account_node_boundary(unsigned int nid,
 		unsigned long *start_pfn, unsigned long *end_pfn) {}

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: mm/page_alloc.c:2622:
+static void __meminit account_node_boundary(unsigned int nid,
 		unsigned long *start_pfn, unsigned long *end_pfn) {}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 2 checks, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
