WARNING:TYPO_SPELLING: 'implementaion' may be misspelled - perhaps 'implementation'?
#41: 
Note this implementaion is neither certified, nor feature complete!
          ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: include/net/ieee802154/mac802154.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#116: FILE: include/net/ieee802154/mac802154.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#117: FILE: include/net/ieee802154/mac802154.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#125: FILE: include/net/ieee802154/mac802154.h:25:
+typedef enum {

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: include/net/ieee802154/mac802154.h:55:
+#define IEEE802154_FLAGS_OMIT_CKSUM	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: include/net/ieee802154/mac802154.h:65:
+	phy_status_t (*set_trx_state)(struct ieee802154_dev *dev,
+			phy_status_t state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: include/net/ieee802154/mac802154.h:72:
+int ieee802154_register_device(struct ieee802154_dev *dev,
+		struct ieee802154_ops *ops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: include/net/ieee802154/mac802154.h:81:
+void ieee802154_rx_irqsafe(struct ieee802154_dev *dev, struct sk_buff *skb,
+		u8 lqi);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#214: FILE: net/mac802154/Kconfig:1:
+config MAC802154
+	tristate "Generic IEEE 802.15.4 Soft Networking Stack (mac802154)"
+	depends on IEEE802154 && EXPERIMENTAL
+	select CRC_ITU_T
+	---help---
+	  This option enables the hardware independent IEEE 802.15.4
+	  networking stack for SoftMAC devices (the ones implementing
+	  only PHY level of IEEE 802.15.4 standard).
+
+	  Note: this implementation is neither certified, nor feature
+	  complete! We do not garantee that it is compatible w/ other
+	  implementations, etc.
+
+	  If you plan to use HardMAC IEEE 802.15.4 devices, you can
+          say N here. Alternatievly you can say M to compile it as
+	  module.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'garantee' may be misspelled - perhaps 'guarantee'?
#224: FILE: net/mac802154/Kconfig:11:
+	  complete! We do not garantee that it is compatible w/ other
 	                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'Alternatievly' may be misspelled - perhaps 'Alternatively'?
#228: FILE: net/mac802154/Kconfig:15:
+          say N here. Alternatievly you can say M to compile it as
                       ^^^^^^^^^^^^^

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#240: FILE: net/mac802154/Makefile:4:
+EXTRA_CFLAGS += -Wall -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#247: FILE: net/mac802154/dev.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#260: FILE: net/mac802154/dev.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#261: FILE: net/mac802154/dev.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: net/mac802154/dev.c:66:
+	struct ieee802154_netdev_priv *priv;
+	priv = netdev_priv(dev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: net/mac802154/dev.c:71:
+		u8 *data = skb_put(skb, 2);
+		data[0] = crc & 0xff;

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#323: FILE: net/mac802154/dev.c:77:
+	skb->iif = dev->ifindex;
 	     ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: net/mac802154/dev.c:101:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: net/mac802154/dev.c:103:
+static int ieee802154_slave_ioctl(struct net_device *dev, struct ifreq *ifr,
+		int cmd)

WARNING:TYPO_SPELLING: 'DEBUGing' may be misspelled - perhaps 'Debugging'?
#367: FILE: net/mac802154/dev.c:121:
+			"Using DEBUGing ioctl SIOCSIFADDR isn't recommened!\n");
 			       ^^^^^^^^

WARNING:TYPO_SPELLING: 'recommened' may be misspelled - perhaps 'recommended'?
#367: FILE: net/mac802154/dev.c:121:
+			"Using DEBUGing ioctl SIOCSIFADDR isn't recommened!\n");
 			                                        ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: net/mac802154/dev.c:121:
+		dev_warn(&dev->dev,
+			"Using DEBUGing ioctl SIOCSIFADDR isn't recommened!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: net/mac802154/dev.c:148:
+static int ieee802154_header_create(struct sk_buff *skb,
+			   struct net_device *dev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#396: FILE: net/mac802154/dev.c:150:
+			   const void *_saddr, unsigned len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: net/mac802154/dev.c:178:
+			memcpy(dev_addr.hwaddr, dev->dev_addr,
+					IEEE802154_ADDR_LEN);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'saddr->pan_id == daddr->pan_id'
#452: FILE: net/mac802154/dev.c:206:
+		if ((saddr->pan_id == daddr->pan_id) &&
+		    (saddr->pan_id != IEEE802154_PANID_BROADCAST))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'saddr->pan_id != IEEE802154_PANID_BROADCAST'
#452: FILE: net/mac802154/dev.c:206:
+		if ((saddr->pan_id == daddr->pan_id) &&
+		    (saddr->pan_id != IEEE802154_PANID_BROADCAST))

CHECK:BRACES: Unbalanced braces around else statement
#456: FILE: net/mac802154/dev.c:210:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: net/mac802154/dev.c:233:
+static int ieee802154_header_parse(const struct sk_buff *skb,
+		unsigned char *haddr)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#531: FILE: net/mac802154/dev.c:285:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#568: FILE: net/mac802154/dev.c:322:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: net/mac802154/dev.c:370:
+	dev = alloc_netdev(sizeof(struct ieee802154_netdev_priv),
+			"wpan%d", ieee802154_netdev_setup);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#618: FILE: net/mac802154/dev.c:372:
+		printk(KERN_ERR "Failure to initialize IEEE802154 device\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#643: FILE: net/mac802154/dev.c:397:
+	/*
+	 * If the name is a format string the caller wants us to do a

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: net/mac802154/dev.c:426:
+	struct ieee802154_netdev_priv *ndp;
+	ASSERT_RTNL();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#674: FILE: net/mac802154/dev.c:428:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#690: FILE: net/mac802154/dev.c:444:
+/*
+ * This is for hw unregistration only, as it doesn't do RCU locking

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#716: FILE: net/mac802154/dev.c:470:
+	BUG_ON(!skb || !skb->dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#717: FILE: net/mac802154/dev.c:471:
+	BUG_ON(!mac_cb_is_ackreq(skb));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: net/mac802154/dev.c:495:
+static int ieee802154_process_beacon(struct net_device *dev,
+		struct sk_buff *skb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: net/mac802154/dev.c:516:
+static int ieee802154_subif_frame(struct ieee802154_netdev_priv *ndp,
+		struct sk_buff *skb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: net/mac802154/dev.c:519:
+	pr_debug("%s Getting packet via slave interface %s\n",
+				__func__, ndp->dev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: net/mac802154/dev.c:535:
+		else if (!memcmp(mac_cb(skb)->da.hwaddr, ndp->dev->dev_addr,
+					IEEE802154_ADDR_LEN))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: net/mac802154/dev.c:538:
+		else if (!memcmp(mac_cb(skb)->da.hwaddr, ndp->dev->broadcast,
+					IEEE802154_ADDR_LEN))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: net/mac802154/dev.c:573:
+		pr_warning("ieee802154: Bad frame received (type = %d)\n",
+				mac_cb_type(skb));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#829: FILE: net/mac802154/dev.c:583:
+	BUG_ON(skb->len < 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#841: FILE: net/mac802154/dev.c:595:
+	BUG_ON(skb->len < 2);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#850: FILE: net/mac802154/dev.c:604:
+	BUG_ON(skb->len < IEEE802154_ADDR_LEN);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#856: FILE: net/mac802154/dev.c:610:
+#define IEEE802154_FETCH_U8(skb, var)		\
+	do {					\
+		if (skb->len < 1)		\
+			goto exit_error;	\
+		var = fetch_skb_u8(skb);	\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#856: FILE: net/mac802154/dev.c:610:
+#define IEEE802154_FETCH_U8(skb, var)		\
+	do {					\
+		if (skb->len < 1)		\
+			goto exit_error;	\
+		var = fetch_skb_u8(skb);	\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#856: FILE: net/mac802154/dev.c:610:
+#define IEEE802154_FETCH_U8(skb, var)		\
+	do {					\
+		if (skb->len < 1)		\
+			goto exit_error;	\
+		var = fetch_skb_u8(skb);	\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#863: FILE: net/mac802154/dev.c:617:
+#define IEEE802154_FETCH_U16(skb, var)		\
+	do {					\
+		if (skb->len < 2)		\
+			goto exit_error;	\
+		var = fetch_skb_u16(skb);	\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#863: FILE: net/mac802154/dev.c:617:
+#define IEEE802154_FETCH_U16(skb, var)		\
+	do {					\
+		if (skb->len < 2)		\
+			goto exit_error;	\
+		var = fetch_skb_u16(skb);	\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#863: FILE: net/mac802154/dev.c:617:
+#define IEEE802154_FETCH_U16(skb, var)		\
+	do {					\
+		if (skb->len < 2)		\
+			goto exit_error;	\
+		var = fetch_skb_u16(skb);	\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#870: FILE: net/mac802154/dev.c:624:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#870: FILE: net/mac802154/dev.c:624:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#870: FILE: net/mac802154/dev.c:624:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#870: FILE: net/mac802154/dev.c:624:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: net/mac802154/dev.c:685:
+			pr_debug("%s(): src IEEE802154_FC_INTRA_PAN\n",
+					__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: net/mac802154/dev.c:688:
+			pr_debug("%s(): src PAN address %04x\n",
+					__func__, mac_cb(skb)->sa.pan_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: net/mac802154/dev.c:692:
+		pr_debug("%s(): dst PAN address %04x\n",
+				__func__, mac_cb(skb)->da.pan_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: net/mac802154/dev.c:697:
+			pr_debug("%s(): dst SHORT address %04x\n",
+					__func__, mac_cb(skb)->da.short_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: net/mac802154/dev.c:710:
+			pr_debug("%s(): src IEEE802154_FC_INTRA_PAN\n",
+					__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: net/mac802154/dev.c:716:
+			pr_debug("%s(): src IEEE802154_ADDR_SHORT\n",
+					__func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#982: FILE: net/mac802154/dev.c:736:
+	pr_debug("%s()\n", __func__);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1008: FILE: net/mac802154/dev.c:762:
+	list_for_each_entry_rcu(ndp, &priv->slaves, list)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1012: FILE: net/mac802154/dev.c:766:
+			struct sk_buff *skb2 = skb_clone(skb, GFP_ATOMIC);
+			if (skb2)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1029: FILE: net/mac802154/dev.c:783:
+	return;
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1035: FILE: net/mac802154/dev.c:789:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1044: FILE: net/mac802154/dev.c:798:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1053: FILE: net/mac802154/dev.c:807:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1057: FILE: net/mac802154/dev.c:811:
+}
+void ieee802154_dev_set_short_addr(struct net_device *dev, u16 val)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1061: FILE: net/mac802154/dev.c:815:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1065: FILE: net/mac802154/dev.c:819:
+}
+void ieee802154_dev_set_channel(struct net_device *dev, u8 val)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1069: FILE: net/mac802154/dev.c:823:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1078: FILE: net/mac802154/dev.c:832:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1087: FILE: net/mac802154/dev.c:841:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1098: FILE: net/mac802154/mac802154.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1111: FILE: net/mac802154/mac802154.h:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1112: FILE: net/mac802154/mac802154.h:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1133: FILE: net/mac802154/mac802154.h:36:
+	struct mutex		slaves_mtx;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1135: FILE: net/mac802154/mac802154.h:38:
+	 * jobs not to be interfered with serial driver */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1166: FILE: net/mac802154/mac_cmd.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1181: FILE: net/mac802154/mac_cmd.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1182: FILE: net/mac802154/mac_cmd.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1208: FILE: net/mac802154/mac_cmd.c:43:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: net/mac802154/mac_cmd.c:45:
+static int ieee802154_mlme_assoc_req(struct net_device *dev,
+		struct ieee802154_addr *addr, u8 channel, u8 cap)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1218: FILE: net/mac802154/mac_cmd.c:53:
+static int ieee802154_mlme_assoc_resp(struct net_device *dev,
+		struct ieee802154_addr *addr, u16 short_addr, u8 status)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1224: FILE: net/mac802154/mac_cmd.c:59:
+static int ieee802154_mlme_disassoc_req(struct net_device *dev,
+		struct ieee802154_addr *addr, u8 reason)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1230: FILE: net/mac802154/mac_cmd.c:65:
+static int ieee802154_mlme_start_req(struct net_device *dev, struct ieee802154_addr *addr,
+				u8 channel,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: net/mac802154/mac_cmd.c:73:
+static int ieee802154_mlme_scan_req(struct net_device *dev, u8 type, u32 channels,
+		u8 duration)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1241: FILE: net/mac802154/mac_cmd.c:76:
+	u8 edl[27] = {};
+	return ieee802154_nl_scan_confirm(dev, IEEE802154_SUCCESS, type,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1246: FILE: net/mac802154/mac_cmd.c:81:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1266: FILE: net/mac802154/mdev.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1279: FILE: net/mac802154/mdev.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1280: FILE: net/mac802154/mdev.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1337: FILE: net/mac802154/mdev.c:72:
+static int ieee802154_master_hard_start_xmit(struct sk_buff *skb,
+		struct net_device *dev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*work)...) over kzalloc(sizeof(struct xmit_work)...)
#1347: FILE: net/mac802154/mdev.c:82:
+	work = kzalloc(sizeof(struct xmit_work), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#1364: FILE: net/mac802154/mdev.c:99:
+	phy_status_t status;
+	priv = netdev_priv(dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1367: FILE: net/mac802154/mdev.c:102:
+		pr_debug("%s:%s: unable to get master private data\n",
+				__FILE__, __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1383: FILE: net/mac802154/mdev.c:118:
+	struct ieee802154_priv *priv;
+	netif_stop_queue(dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1389: FILE: net/mac802154/mdev.c:124:
+}
+static int ieee802154_master_ioctl(struct net_device *dev, struct ifreq *ifr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1390: FILE: net/mac802154/mdev.c:125:
+static int ieee802154_master_ioctl(struct net_device *dev, struct ifreq *ifr,
+		int cmd)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1393: FILE: net/mac802154/mdev.c:128:
+	struct ieee802154_priv *priv = netdev_priv(dev);
+	switch (cmd) {

CHECK:SPACING: No space is necessary after a cast
#1398: FILE: net/mac802154/mdev.c:133:
+				(u8 *) &ifr->ifr_hwaddr.sa_data);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1414: FILE: net/mac802154/mdev.c:149:
+}
+static ssize_t ieee802154_netdev_show(const struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1415: FILE: net/mac802154/mdev.c:150:
+static ssize_t ieee802154_netdev_show(const struct device *dev,
+		   struct device_attribute *attr, char *buf,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1426: FILE: net/mac802154/mdev.c:161:
+}
+#define MASTER_SHOW(field, format_string)				\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#1426: FILE: net/mac802154/mdev.c:161:
+#define MASTER_SHOW(field, format_string)				\
+static ssize_t format_##field(const struct net_device *dev, char *buf)	\
+{									\
+	struct ieee802154_priv *priv = netdev_priv(dev);		\
+	return sprintf(buf, format_string, priv->hw.field);		\
+}									\
+static ssize_t show_##field(struct device *dev,				\
+			    struct device_attribute *attr, char *buf)	\
+{									\
+	return ieee802154_netdev_show(dev, attr, buf, format_##field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1437: FILE: net/mac802154/mdev.c:172:
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: net/mac802154/mdev.c:220:
+	dev = alloc_netdev(sizeof(struct ieee802154_priv),
+			"mwpan%d", ieee802154_netdev_setup_master);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1487: FILE: net/mac802154/mdev.c:222:
+		printk(KERN_ERR

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1505: FILE: net/mac802154/mdev.c:240:
+	BUG_ON(!list_empty(&priv->slaves));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1506: FILE: net/mac802154/mdev.c:241:
+	BUG_ON(!priv->hw.netdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1513: FILE: net/mac802154/mdev.c:248:
+int ieee802154_register_device(struct ieee802154_dev *dev,
+		struct ieee802154_ops *ops)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1521: FILE: net/mac802154/mdev.c:256:
+	BUG_ON(!dev || !dev->name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1522: FILE: net/mac802154/mdev.c:257:
+	BUG_ON(!ops || !ops->tx || !ops->cca || !ops->ed ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1523: FILE: net/mac802154/mdev.c:258:
+	BUG_ON(!ops || !ops->tx || !ops->cca || !ops->ed ||
+			!ops->set_trx_state);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1570: FILE: net/mac802154/mib.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1583: FILE: net/mac802154/mib.h:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1584: FILE: net/mac802154/mib.h:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1600: FILE: net/mac802154/mib.h:31:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1608: FILE: net/mac802154/rx.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1621: FILE: net/mac802154/rx.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1622: FILE: net/mac802154/rx.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1640: FILE: net/mac802154/rx.c:33:
+static void __ieee802154_rx_prepare(struct ieee802154_dev *dev,
+		struct sk_buff *skb, u8 lqi)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1644: FILE: net/mac802154/rx.c:37:
+	BUG_ON(!skb);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1650: FILE: net/mac802154/rx.c:43:
+	skb->iif = skb->dev->ifindex;
 	     ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1682: FILE: net/mac802154/rx.c:75:
+	struct sk_buff *skb2 = skb_clone(skb, GFP_KERNEL);
+	netif_rx(skb2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1689: FILE: net/mac802154/rx.c:82:
+void ieee802154_rx_irqsafe(struct ieee802154_dev *dev,
+		struct sk_buff *skb, u8 lqi)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*work)...) over kzalloc(sizeof(struct rx_work)...)
#1692: FILE: net/mac802154/rx.c:85:
+	struct rx_work *work = kzalloc(sizeof(struct rx_work), GFP_ATOMIC);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 56 warnings, 62 checks, 1562 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
