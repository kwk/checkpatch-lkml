WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#87: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:32:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#111: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:56:
+#if 0

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#123: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:68:
+static char gpio_name[] = "etrax gpio";

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#133: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:78:
+static int gpio_open(struct inode *inode, struct file *filp);
                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#134: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:79:
+static int gpio_release(struct inode *inode, struct file *filp);
                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#135: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:80:
+static unsigned int gpio_poll(struct file *filp,
                                            ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:108:
+#define NUM_PORTS (GPIO_MINOR_LAST+1)
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:109:
+#define GIO_REG_RD_ADDR(reg) \
+	(volatile unsigned long *)(regi_gio + REG_RD_ADDR_gio_##reg)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#165: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:110:
+	(volatile unsigned long *)(regi_gio + REG_RD_ADDR_gio_##reg)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#166: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:111:
+#define GIO_REG_WR_ADDR(reg) \
+	(volatile unsigned long *)(regi_gio + REG_WR_ADDR_gio_##reg)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#167: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:112:
+	(volatile unsigned long *)(regi_gio + REG_WR_ADDR_gio_##reg)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#177: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:122:
+static volatile unsigned long *data_out[NUM_PORTS] = {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#189: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:134:
+static volatile unsigned long *data_in[NUM_PORTS] = {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#225: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:170:
+static volatile unsigned long *dir_oe[NUM_PORTS] = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:199:
+		int pin = bit / 8;
+		if (priv->minor < GPIO_MINOR_LEDS)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#259: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:204:
+		if (priv->highalarm & (1<<bit)) {
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#264: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:209:
+		} else if (priv->lowalarm & (1<<bit)) {
 		                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#292: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:237:
+	if (priv->minor <= GPIO_MINOR_D) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#299: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:244:
+	} else

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#303: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:248:
+		mask = POLLIN|POLLRDNORM;
 		             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#305: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:250:
+	DP(printk(KERN_DEBUG "gpio_poll ready: mask 0x%08X\n", mask));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gpio_poll', this function's name, in a string
#305: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:250:
+	DP(printk(KERN_DEBUG "gpio_poll ready: mask 0x%08X\n", mask));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:281:
+		i2c_read(VIRT_I2C_ADDR, (void *)&cached_virtual_gpio_read,
+			sizeof(cached_virtual_gpio_read));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#362: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:307:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:309:
+static ssize_t gpio_write(struct file *file, const char *buf, size_t count,
+	loff_t *off)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#370: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:315:
+	volatile unsigned long *port;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#373: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:318:
+	/* Only bits 0-7 may be used for write operations but allow all
+	   devices except leds... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#373: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:318:
+	   devices except leds... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#396: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:341:
+	D(printk(KERN_DEBUG "gpio_write: %lu to data 0x%02X clk 0x%02X "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gpio_write', this function's name, in a string
#396: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:341:
+	D(printk(KERN_DEBUG "gpio_write: %lu to data 0x%02X clk 0x%02X "

WARNING:SPLIT_STRING: quoted string split across lines
#397: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:342:
+	D(printk(KERN_DEBUG "gpio_write: %lu to data 0x%02X clk 0x%02X "
+		"msb: %i\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:348:
+		int i;
+		data = *buf++;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#409: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:354:
+				if (data & 1<<i)
 				            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#422: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:367:
+				if (data & 1<<i)
 				            ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#436: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:381:
+gpio_open(struct inode *inode, struct file *filp)
                                             ^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*priv)...) over kmalloc(sizeof(struct gpio_private)...)
#445: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:390:
+	priv = kmalloc(sizeof(struct gpio_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#456: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:401:
+	if (p <= GPIO_MINOR_LAST) {
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#475: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:420:
+gpio_release(struct inode *inode, struct file *filp)
                                                ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#490: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:435:
+		if (p == todel)
[...]
+		 else {
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#492: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:437:
+		 else {

CHECK:BRACES: Unbalanced braces around else statement
#492: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:437:
+		 else {

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#608: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:553:
+		return *data_in[priv->minor];
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#649: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:594:
+		return setget_input(priv, arg);
+		break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:604:
+		unsigned long dir_shadow;
+		dir_shadow = *dir_oe[priv->minor];

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#683: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:628:
+		return 0;
+		break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#761: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:706:
+		unsigned long dir_shadow;
+		dir_shadow = *dir_oe[priv->minor];

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#786: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:731:
+		return 0;
+		break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#800: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:745:
+		unsigned short input_mask = ~*dir_oe[priv->minor];
+		if (copy_from_user(&val, (unsigned long *)arg, sizeof(val)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#810: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:755:
+			unsigned short change = input_mask ^ val;
+			i2c_read(VIRT_I2C_ADDR, (void *)&shadow,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:756:
+			i2c_read(VIRT_I2C_ADDR, (void *)&shadow,
+				sizeof(shadow));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:760:
+			i2c_write(VIRT_I2C_ADDR, (void *)&shadow,
+				sizeof(shadow));

CHECK:SPACING: No space is necessary after a cast
#844: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:789:
+		green = ((unsigned char) arg) & 1;

CHECK:SPACING: No space is necessary after a cast
#845: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:790:
+		red   = (((unsigned char) arg) >> 1) & 1;

CHECK:SPACING: No space is necessary after a cast
#868: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:813:
+	if (get_user(mode, &((struct io_pwm_set_mode *) arg)->mode))

CHECK:SPACING: No space is necessary after a cast
#887: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:832:
+	if (copy_from_user(&periods, (struct io_pwm_set_period *) arg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:833:
+	if (copy_from_user(&periods, (struct io_pwm_set_period *) arg,
+			sizeof(periods)))

CHECK:SPACING: No space is necessary after a cast
#904: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:849:
+	if (get_user(duty, &((struct io_pwm_set_duty *) arg)->duty))

WARNING:CONST_STRUCT: struct file_operations should normally be const
#932: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:877:
+struct file_operations gpio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1010: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:955:
+		printk(KERN_ERR "gpio: couldn't get a major number.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1021: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:966:
+	printk(KERN_INFO "ETRAX FS GPIO driver v2.6, (c) 2003-2007 "

WARNING:SPLIT_STRING: quoted string split across lines
#1022: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:967:
+	printk(KERN_INFO "ETRAX FS GPIO driver v2.6, (c) 2003-2007 "
+		"Axis Communications AB\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1025: FILE: arch/cris/arch-v32/drivers/mach-a3/gpio.c:970:
+		printk(KERN_ERR "err: irq for gpio\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1046: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1071: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:26:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1094: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:49:
+	reg_pio_rw_dout dout;
 	                ^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1101: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:56:
+		dout = REG_RD(pio, regi_pio, rw_dout);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1102: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:57:
+		dout.regf_NCE = (ctrl & NAND_NCE) ? 0 : 1;
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1120: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:75:
+		dout.regf_CLE = (ctrl & NAND_CLE) ? 1 : 0;
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1121: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:76:
+		dout.regf_ALE = (ctrl & NAND_ALE) ? 1 : 0;
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1123: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:78:
+		REG_WR(pio, regi_pio, rw_dout, dout);
 		                               ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1134: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:89:
+/*
+*	read device ready pin

WARNING:LINE_SPACING: Missing a blank line after declarations
#1139: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:94:
+	reg_pio_r_din din = REG_RD(pio, regi_pio, r_din);
+	return din.rdy;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1167: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:122:
+	reg_pio_rw_dout dout = { .regf_NCE = 1 };
 	                ^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1173: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:128:
+	REG_WR(pio, regi_pio, rw_dout, dout);
 	                               ^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*crisv32_mtd)...) over kmalloc(sizeof(struct mtd_info)...)
#1177: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:132:
+	crisv32_mtd = kmalloc(sizeof(struct mtd_info) +

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1180: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:135:
+		printk(KERN_ERR "Unable to allocate CRISv32 NAND MTD "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1180: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:135:
+	if (!crisv32_mtd) {
+		printk(KERN_ERR "Unable to allocate CRISv32 NAND MTD "

WARNING:SPLIT_STRING: quoted string split across lines
#1181: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:136:
+		printk(KERN_ERR "Unable to allocate CRISv32 NAND MTD "
+			"device structure.\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1186: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:141:
+	read_cs = write_cs = (void __iomem *)REG_ADDR(pio, regi_pio,

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#1190: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:145:
+	this = (struct nand_chip *) (&crisv32_mtd[1]);

CHECK:SPACING: No space is necessary after a cast
#1193: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:148:
+	memset((char *) crisv32_mtd, 0, sizeof(struct mtd_info));

CHECK:SPACING: No space is necessary after a cast
#1194: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:149:
+	memset((char *) this, 0, sizeof(struct nand_chip));

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#1211: FILE: arch/cris/arch-v32/drivers/mach-a3/nandflash.c:166:
+	/* Scan to find existance of the device */
 	                ^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342193.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 53 warnings, 30 checks, 1168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342193.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
