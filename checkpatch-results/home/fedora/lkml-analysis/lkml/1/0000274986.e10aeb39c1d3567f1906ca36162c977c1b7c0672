WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#110: 
Every VMA can be in two states: either it manages a power-of-2 sized compound

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#171: FILE: fs/binfmt_flat.c:549:
+							PROT_READ|PROT_WRITE|PROT_EXEC,
 							         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#171: FILE: fs/binfmt_flat.c:549:
+							PROT_READ|PROT_WRITE|PROT_EXEC,
 							                    ^

CHECK:BRACES: Unbalanced braces around else statement
#442: FILE: mm/nommu.c:385:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#444: FILE: mm/nommu.c:387:
+		struct page *p = virt_to_page(vma->vm_start);
+		free_pages(vma->vm_start, (unsigned long)p[1].lru.prev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#512: FILE: mm/nommu.c:561:
+
+

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#515: FILE: mm/nommu.c:564:
+ * either for the first part or the the tail.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#517: FILE: mm/nommu.c:566:
+static int split_nommu_vma(struct mm_struct * mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#517: FILE: mm/nommu.c:566:
+static int split_nommu_vma(struct mm_struct * mm, struct vm_area_struct * vma,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct vm_area_struct)...)
#531: FILE: mm/nommu.c:580:
+	new = kmalloc(sizeof(struct vm_area_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vml)...) over kzalloc(sizeof(struct vm_list_struct)...)
#534: FILE: mm/nommu.c:583:
+	vml = kzalloc(sizeof(struct vm_list_struct), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#600: FILE: mm/nommu.c:880:
+	base = (void *)__get_free_pages(GFP_KERNEL|__GFP_COMP, order);
 	                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: mm/nommu.c:1176:
+static void unmap_one_vma (struct mm_struct *mm, struct vm_area_struct *vma,

WARNING:LINE_SPACING: Missing a blank line after declarations
#689: FILE: mm/nommu.c:1181:
+	size_t len = vma->vm_end - vma->vm_start;
+	vml = *parent;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#722: FILE: mm/nommu.c:1208:
+	if ((len = PAGE_ALIGN(len)) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: mm/nommu.c:1213:
+		int err;
+		vma = (*parent)->vma;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#781: FILE: mm/nommu.c:1251:
+	printk(KERN_NOTICE "munmap of non-mmaped memory [%p-%p] by process %d (%s)\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#782: FILE: mm/nommu.c:1252:
+	       (void *)addr, (void *)addr+len, current->pid, current->comm);
 	                                 ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#811: FILE: mm/nommu.c:1341:
+	if (vma->vm_flags & VM_SPLIT_PAGES)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#813: FILE: mm/nommu.c:1343:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#816: FILE: mm/nommu.c:1346:
+		int order = (int)page[1].lru.prev;
+		max_len = PAGE_SIZE << order;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274986.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 8 warnings, 10 checks, 660 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274986.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
