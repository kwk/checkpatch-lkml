WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#72: 
 arch/x86/mm/mmio-mod.c         |  140 +++++++++++--------------------------

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#158: FILE: arch/x86/mm/mmio-mod.c:102:
+#if 0 /* XXX: needs rewrite */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#369: FILE: arch/x86/mm/mmio-mod.c:405:
+#if 0 /* XXX: out of order */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#498: FILE: include/linux/mmiotrace.h:84:
+extern void enable_mmiotrace(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#499: FILE: include/linux/mmiotrace.h:85:
+extern void disable_mmiotrace(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#500: FILE: include/linux/mmiotrace.h:86:
+extern void mmio_trace_rw(struct mmiotrace_rw *rw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: include/linux/mmiotrace.h:87:
+extern void mmio_trace_mapping(struct mmiotrace_map *map);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: kernel/trace/trace.c:685:
+void __trace_mmiotrace_rw(struct trace_array *tr, struct trace_array_cpu *data,
+						struct mmiotrace_rw *rw)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: kernel/trace/trace.c:701:
+void __trace_mmiotrace_map(struct trace_array *tr, struct trace_array_cpu *data,
+						struct mmiotrace_map *map)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: kernel/trace/trace.h:270:
+extern void __trace_mmiotrace_rw(struct trace_array *tr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: kernel/trace/trace.h:271:
+extern void __trace_mmiotrace_rw(struct trace_array *tr,
+				struct trace_array_cpu *data,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#693: FILE: kernel/trace/trace.h:273:
+extern void __trace_mmiotrace_map(struct trace_array *tr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: kernel/trace/trace.h:274:
+extern void __trace_mmiotrace_map(struct trace_array *tr,
+				struct trace_array_cpu *data,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#705: FILE: kernel/trace/trace.h:310:
+extern int trace_seq_printf(struct trace_seq *s, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#706: FILE: kernel/trace/trace.h:311:
+extern long ns2usecs(cycle_t nsec);

WARNING:LINE_SPACING: Missing a blank line after declarations
#771: FILE: kernel/trace/trace_mmiotrace.c:60:
+	struct trace_seq *s = &iter->seq;
+	trace_seq_printf(s, "VERSION broken 20070824\n");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#782: FILE: kernel/trace/trace_mmiotrace.c:71:
+	unsigned secs		= (unsigned long)t;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: kernel/trace/trace_mmiotrace.c:77:
+		ret = trace_seq_printf(s,
+			"R %d %lu.%06lu %d 0x%lx 0x%lx 0x%lx %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: kernel/trace/trace_mmiotrace.c:83:
+		ret = trace_seq_printf(s,
+			"W %d %lu.%06lu %d 0x%lx 0x%lx 0x%lx %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: kernel/trace/trace_mmiotrace.c:89:
+		ret = trace_seq_printf(s,
+			"UNKNOWN %lu.%06lu %d 0x%lx %02x,%02x,%02x 0x%lx %d\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#821: FILE: kernel/trace/trace_mmiotrace.c:110:
+	unsigned secs		= (unsigned long)t;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: kernel/trace/trace_mmiotrace.c:116:
+		ret = trace_seq_printf(s,
+			"MAP %lu.%06lu %d 0x%lx 0x%lx 0x%lx 0x%lx %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: kernel/trace/trace_mmiotrace.c:122:
+		ret = trace_seq_printf(s,
+			"UNMAP %lu.%06lu %d 0x%lx %d\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 17 checks, 759 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
