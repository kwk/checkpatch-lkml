WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Support runtime selection of the max number of partitions based on the hardware

CHECK:CAMELCASE: Avoid CamelCase: <xpUnsupported>
#132: FILE: drivers/misc/sgi-xp/xp.h:265:
+	xpUnsupported,		/* 54: unsupported functionality or resource */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xpUnknownReason>
#133: FILE: drivers/misc/sgi-xp/xp.h:266:
+	xpUnknownReason		/* 55: unknown reason - must be last in enum */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: drivers/misc/sgi-xp/xp.h:416:
+extern enum xp_retval xp_init_sn2(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: drivers/misc/sgi-xp/xp.h:417:
+extern enum xp_retval xp_init_uv(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: drivers/misc/sgi-xp/xp.h:418:
+extern void xp_exit_sn2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: drivers/misc/sgi-xp/xp.h:419:
+extern void xp_exit_uv(void);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*part->channels)...) over kzalloc(sizeof(struct xpc_channel)...)
#269: FILE: drivers/misc/sgi-xp/xpc_channel.c:113:
+	part->channels = kzalloc(sizeof(struct xpc_channel) * XPC_MAX_NCHANNELS,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_remote_copy_buffer"
#435: FILE: drivers/misc/sgi-xp/xpc_main.c:1142:
+	if (xpc_remote_copy_buffer == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*xpc_partitions)...) over kzalloc(sizeof(struct xpc_partition)...)
#444: FILE: drivers/misc/sgi-xp/xpc_main.c:1147:
+	xpc_partitions = kzalloc(sizeof(struct xpc_partition) *

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_partitions"
#446: FILE: drivers/misc/sgi-xp/xpc_main.c:1149:
+	if (xpc_partitions == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#447: FILE: drivers/misc/sgi-xp/xpc_main.c:1150:
+	if (xpc_partitions == NULL) {
+		dev_err(xpc_part, "can't get memory for partition structure\n");

CHECK:CAMELCASE: Avoid CamelCase: <xpSuccess>
#694: FILE: drivers/misc/sgi-xp/xp_main.c:238:
+	if (ret != xpSuccess)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#725: FILE: drivers/misc/sgi-xp/xp_sn2.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <xpSalError>
#774: FILE: drivers/misc/sgi-xp/xp_sn2.c:50:
+		return xpSalError;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#802: FILE: drivers/misc/sgi-xp/xp_sn2.c:78:
+	BUG_ON(!is_shub());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#812: FILE: drivers/misc/sgi-xp/xp_sn2.c:88:
+	BUG_ON(!is_shub());

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#822: FILE: drivers/misc/sgi-xp/xp_uv.c:1:
+/*

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#842: FILE: drivers/misc/sgi-xp/xp_uv.c:21:
+	BUG_ON(!is_uv());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#850: FILE: drivers/misc/sgi-xp/xp_uv.c:29:
+	BUG_ON(!is_uv());

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270508.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 12 checks, 732 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270508.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
