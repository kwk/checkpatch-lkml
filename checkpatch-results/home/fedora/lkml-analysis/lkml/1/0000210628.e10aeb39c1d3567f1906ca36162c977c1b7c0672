WARNING:TYPO_SPELLING: 'unneccesary' may be misspelled - perhaps 'unnecessary'?
#83: 
  * remove unneccesary wqt_get_stats(), use default get_stats() instead
           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,mpc8349-mu" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#111: FILE: arch/powerpc/boot/dts/mpc834x_mds.dts:108:
+			compatible = "fsl,mpc8349-mu";

WARNING:TYPO_SPELLING: 'inteded' may be misspelled - perhaps 'intended'?
#149: FILE: drivers/net/Kconfig:2303:
+	  This is inteded for use in a system that has a crate full of
 	          ^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#154: FILE: drivers/net/Kconfig:2308:
+config PCINET_DISABLE_CHECKSUM
+	bool "Disable packet checksumming"
+	depends on PCINET_FSL || PCINET_HOST
+	default n
+	help
+	  Disable packet checksumming on packets received by the PCINet
+	  driver. This gives a possible speed boost.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#180: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#185: FILE: drivers/net/pcinet.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#212: FILE: drivers/net/pcinet.h:28:
+} __attribute__((__packed__));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: drivers/net/pcinet.h:49:
+#define IMMR_R32(_off) ioread32(priv->immr+(_off))
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#234: FILE: drivers/net/pcinet.h:50:
+#define IMMR_W32(_off, _val) iowrite32((_val), priv->immr+(_off))
                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: drivers/net/pcinet.h:51:
+#define IMMR_R32BE(_off) ioread32be(priv->immr+(_off))
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: drivers/net/pcinet.h:52:
+#define IMMR_W32BE(_off, _val) iowrite32be((_val), priv->immr+(_off))
                                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: drivers/net/pcinet.h:55:
+#define PCINET_UART_RX_ENABLED		(1<<0)
                               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#239: FILE: drivers/net/pcinet.h:55:
+#define PCINET_UART_RX_ENABLED		(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: drivers/net/pcinet.h:56:
+#define PCINET_NET_STATUS_RUNNING	(1<<1)
                                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#240: FILE: drivers/net/pcinet.h:56:
+#define PCINET_NET_STATUS_RUNNING	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: drivers/net/pcinet.h:57:
+#define PCINET_NET_RXINT_OFF		(1<<2)
                             		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#241: FILE: drivers/net/pcinet.h:57:
+#define PCINET_NET_RXINT_OFF		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: drivers/net/pcinet.h:58:
+#define PCINET_NET_REGISTERS_VALID	(1<<3)
                                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#242: FILE: drivers/net/pcinet.h:58:
+#define PCINET_NET_REGISTERS_VALID	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#249: FILE: drivers/net/pcinet.h:65:
+#define UART_RX_READY_DBELL	(1<<0)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: drivers/net/pcinet.h:65:
+#define UART_RX_READY_DBELL	(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#250: FILE: drivers/net/pcinet.h:66:
+#define UART_TX_EMPTY_DBELL	(1<<1)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#250: FILE: drivers/net/pcinet.h:66:
+#define UART_TX_EMPTY_DBELL	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#251: FILE: drivers/net/pcinet.h:67:
+#define NET_RX_PACKET_DBELL	(1<<2)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#251: FILE: drivers/net/pcinet.h:67:
+#define NET_RX_PACKET_DBELL	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#252: FILE: drivers/net/pcinet.h:68:
+#define NET_TX_COMPLETE_DBELL	(1<<3)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#252: FILE: drivers/net/pcinet.h:68:
+#define NET_TX_COMPLETE_DBELL	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#253: FILE: drivers/net/pcinet.h:69:
+#define NET_START_REQ_DBELL	(1<<4)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#253: FILE: drivers/net/pcinet.h:69:
+#define NET_START_REQ_DBELL	(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#254: FILE: drivers/net/pcinet.h:70:
+#define NET_START_ACK_DBELL	(1<<5)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#254: FILE: drivers/net/pcinet.h:70:
+#define NET_START_ACK_DBELL	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#255: FILE: drivers/net/pcinet.h:71:
+#define NET_STOP_REQ_DBELL	(1<<6)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#255: FILE: drivers/net/pcinet.h:71:
+#define NET_STOP_REQ_DBELL	(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#256: FILE: drivers/net/pcinet.h:72:
+#define NET_STOP_ACK_DBELL	(1<<7)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#256: FILE: drivers/net/pcinet.h:72:
+#define NET_STOP_ACK_DBELL	(1<<7)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#265: FILE: drivers/net/pcinet_fsl.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#327: FILE: drivers/net/pcinet_fsl.c:63:
+	struct mutex irq_mutex;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#330: FILE: drivers/net/pcinet_fsl.c:66:
+	spinlock_t irq_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#366: FILE: drivers/net/pcinet_fsl.c:102:
+	spinlock_t net_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#368: FILE: drivers/net/pcinet_fsl.c:104:
+	struct mutex net_mutex;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#429: FILE: drivers/net/pcinet_fsl.c:165:
+	 * the code doesn't expect them to be called */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#462: FILE: drivers/net/pcinet_fsl.c:198:
+ * Blocking, must not be called with any spinlocks held */

CHECK:BOOL_COMPARISON: Using comparison to true is error prone
#470: FILE: drivers/net/pcinet_fsl.c:206:
+	while (priv->uart_tx_ready != true) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#505: FILE: drivers/net/pcinet_fsl.c:241:
+	while (true) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#717: FILE: drivers/net/pcinet_fsl.c:453:
+ * process context, with priv->net_mutex held. They are expected to sleep */

CHECK:BRACES: braces {} should be used on all arms of this statement
#826: FILE: drivers/net/pcinet_fsl.c:562:
+		if (chan == priv->chan)
[...]
+		else if (priv->chan)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#830: FILE: drivers/net/pcinet_fsl.c:566:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/net/pcinet_fsl.c:580:
+		dev_dbg(priv->dev, "unhandled DMA event %u (%s)\n",
+				state, chan->dev.bus_id);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#939: FILE: drivers/net/pcinet_fsl.c:675:
+	 * respond to us anyway */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#946: FILE: drivers/net/pcinet_fsl.c:682:
+	ret = wait_for_completion_timeout(&priv->net_start_completion, 5*HZ);
 	                                                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#950: FILE: drivers/net/pcinet_fsl.c:686:
+		 * side will start us when it comes back up */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#972: FILE: drivers/net/pcinet_fsl.c:708:
+	ret = wait_for_completion_timeout(&priv->net_stop_completion, 5*HZ);
 	                                                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu < 68'
#988: FILE: drivers/net/pcinet_fsl.c:724:
+	if ((new_mtu < 68) || (new_mtu > PH_MAX_MTU))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu > PH_MAX_MTU'
#988: FILE: drivers/net/pcinet_fsl.c:724:
+	if ((new_mtu < 68) || (new_mtu > PH_MAX_MTU))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1083: FILE: drivers/net/pcinet_fsl.c:819:
+		BUG_ON(skb == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1083: FILE: drivers/net/pcinet_fsl.c:819:
+		BUG_ON(skb == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1136: FILE: drivers/net/pcinet_fsl.c:872:
+		if (skb == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1192: FILE: drivers/net/pcinet_fsl.c:928:
+	 * was less than our budget, stop polling */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1284: FILE: drivers/net/pcinet_fsl.c:1020:
+static void wqtuart_set_termios(struct uart_port *port,
+			       struct ktermios *termios,

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1308: FILE: drivers/net/pcinet_fsl.c:1044:
+			      struct serial_struct *ser)
 			                            ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: drivers/net/pcinet_fsl.c:1044:
+static int wqtuart_verify_port(struct uart_port *port,
+			      struct serial_struct *ser)

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#1330: FILE: drivers/net/pcinet_fsl.c:1066:
+static struct uart_ops wqtuart_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1364: FILE: drivers/net/pcinet_fsl.c:1100:
+	BUG_ON(priv->netregs == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->netregs"
#1364: FILE: drivers/net/pcinet_fsl.c:1100:
+	BUG_ON(priv->netregs == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1365: FILE: drivers/net/pcinet_fsl.c:1101:
+	BUG_ON(priv->netregs_addr == 0x0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1380: FILE: drivers/net/pcinet_fsl.c:1116:
+	BUG_ON(priv->netregs != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv->netregs"
#1380: FILE: drivers/net/pcinet_fsl.c:1116:
+	BUG_ON(priv->netregs != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1381: FILE: drivers/net/pcinet_fsl.c:1117:
+	BUG_ON(priv->netregs_addr != 0x0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1384: FILE: drivers/net/pcinet_fsl.c:1120:
+	 * This is PCI BAR1, and will be used as network device registers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1450: FILE: drivers/net/pcinet_fsl.c:1186:
+	 * NOTE: receiving from is the other side's TX buffers */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1497: FILE: drivers/net/pcinet_fsl.c:1233:
+	ndev->watchdog_timeo    = HZ/4;
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1524: FILE: drivers/net/pcinet_fsl.c:1260:
+	dev_info(priv->dev, "using serial device %s%d\n",
+			wqtuart_driver.dev_name, priv->port.line);

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#1564: FILE: drivers/net/pcinet_fsl.c:1300:
+static struct of_device_id wqt_match[] = {

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,mpc8349-mu" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#1565: FILE: drivers/net/pcinet_fsl.c:1301:
+	{ .compatible = "fsl,mpc8349-mu", },

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1625: FILE: drivers/net/pcinet_host.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1680: FILE: drivers/net/pcinet_host.c:56:
+	struct mutex irq_mutex;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1683: FILE: drivers/net/pcinet_host.c:59:
+	spinlock_t irq_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1721: FILE: drivers/net/pcinet_host.c:97:
+	spinlock_t net_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1723: FILE: drivers/net/pcinet_host.c:99:
+	struct mutex net_mutex;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1781: FILE: drivers/net/pcinet_host.c:157:
+	 * the code doesn't expect them to be called */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1814: FILE: drivers/net/pcinet_host.c:190:
+ * Blocking, must not be called with any spinlocks held */

CHECK:BOOL_COMPARISON: Using comparison to true is error prone
#1822: FILE: drivers/net/pcinet_host.c:198:
+	while (priv->uart_tx_ready != true) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1857: FILE: drivers/net/pcinet_host.c:233:
+	while (true) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2069: FILE: drivers/net/pcinet_host.c:445:
+ * process context, with priv->net_mutex held. They are expected to sleep */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2078: FILE: drivers/net/pcinet_host.c:454:
+	BUG_ON(!wqtstatus_remote_testbit(priv, PCINET_NET_REGISTERS_VALID));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2263: FILE: drivers/net/pcinet_host.c:639:
+		BUG_ON(priv->rx_skbs[i] != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv->rx_skbs[i]"
#2263: FILE: drivers/net/pcinet_host.c:639:
+		BUG_ON(priv->rx_skbs[i] != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2264: FILE: drivers/net/pcinet_host.c:640:
+		BUG_ON(priv->rx_skb_addrs[i] != 0x0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#2269: FILE: drivers/net/pcinet_host.c:645:
+		if (skb == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2292: FILE: drivers/net/pcinet_host.c:668:
+		BUG_ON(priv->tx_skbs[i] != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv->tx_skbs[i]"
#2292: FILE: drivers/net/pcinet_host.c:668:
+		BUG_ON(priv->tx_skbs[i] != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2293: FILE: drivers/net/pcinet_host.c:669:
+		BUG_ON(priv->tx_skb_addrs[i] != 0x0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2298: FILE: drivers/net/pcinet_host.c:674:
+	 * NOTE: requested to be initialized */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2345: FILE: drivers/net/pcinet_host.c:721:
+	 * respond to us anyway */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2352: FILE: drivers/net/pcinet_host.c:728:
+	ret = wait_for_completion_timeout(&priv->net_start_completion, 5*HZ);
 	                                                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2356: FILE: drivers/net/pcinet_host.c:732:
+		 * side will start us when it comes back up */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2383: FILE: drivers/net/pcinet_host.c:759:
+	ret = wait_for_completion_timeout(&priv->net_stop_completion, 5*HZ);
 	                                                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu < 68'
#2401: FILE: drivers/net/pcinet_host.c:777:
+	if ((new_mtu < 68) || (new_mtu > PH_MAX_MTU))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu > PH_MAX_MTU'
#2401: FILE: drivers/net/pcinet_host.c:777:
+	if ((new_mtu < 68) || (new_mtu > PH_MAX_MTU))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2438: FILE: drivers/net/pcinet_host.c:814:
+	BUG_ON(priv->tx_skbs[dirty_idx] != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv->tx_skbs[dirty_idx]"
#2438: FILE: drivers/net/pcinet_host.c:814:
+	BUG_ON(priv->tx_skbs[dirty_idx] != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2439: FILE: drivers/net/pcinet_host.c:815:
+	BUG_ON(priv->tx_skb_addrs[dirty_idx] != 0x0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2495: FILE: drivers/net/pcinet_host.c:871:
+		BUG_ON(skb == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#2495: FILE: drivers/net/pcinet_host.c:871:
+		BUG_ON(skb == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2496: FILE: drivers/net/pcinet_host.c:872:
+		BUG_ON(skb_addr == 0x0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2552: FILE: drivers/net/pcinet_host.c:928:
+		BUG_ON(skb == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#2552: FILE: drivers/net/pcinet_host.c:928:
+		BUG_ON(skb == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2553: FILE: drivers/net/pcinet_host.c:929:
+		BUG_ON(skb_addr == 0x0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skbn"
#2558: FILE: drivers/net/pcinet_host.c:934:
+		if (skbn == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2621: FILE: drivers/net/pcinet_host.c:997:
+	 * was less than our budget, stop polling */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2713: FILE: drivers/net/pcinet_host.c:1089:
+static void wqtuart_set_termios(struct uart_port *port,
+			       struct ktermios *termios,

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2737: FILE: drivers/net/pcinet_host.c:1113:
+			      struct serial_struct *ser)
 			                            ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2737: FILE: drivers/net/pcinet_host.c:1113:
+static int wqtuart_verify_port(struct uart_port *port,
+			      struct serial_struct *ser)

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#2759: FILE: drivers/net/pcinet_host.c:1135:
+static struct uart_ops wqtuart_ops = {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2886: FILE: drivers/net/pcinet_host.c:1262:
+	ndev->watchdog_timeo    = HZ/4;
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2913: FILE: drivers/net/pcinet_host.c:1289:
+	dev_info(priv->dev, "using serial device %s%d\n",
+			wqtuart_driver.dev_name, priv->port.line);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3014: FILE: drivers/net/pcinet_hw.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3039: FILE: drivers/net/pcinet_hw.h:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3042: FILE: drivers/net/pcinet_hw.h:29:
+#define LAWAR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3042: FILE: drivers/net/pcinet_hw.h:29:
+#define LAWAR0_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3045: FILE: drivers/net/pcinet_hw.h:32:
+#define POCMR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3045: FILE: drivers/net/pcinet_hw.h:32:
+#define POCMR0_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3050: FILE: drivers/net/pcinet_hw.h:37:
+#define LAWAR1_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3050: FILE: drivers/net/pcinet_hw.h:37:
+#define LAWAR1_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3053: FILE: drivers/net/pcinet_hw.h:40:
+#define POCMR1_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3053: FILE: drivers/net/pcinet_hw.h:40:
+#define POCMR1_ENABLE		(1<<31)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3057: FILE: drivers/net/pcinet_hw.h:44:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3065: FILE: drivers/net/pcinet_hw.h:52:
+#define DMA_CHANNEL_BUSY	(1<<2)
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3065: FILE: drivers/net/pcinet_hw.h:52:
+#define DMA_CHANNEL_BUSY	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3067: FILE: drivers/net/pcinet_hw.h:54:
+#define DMA_DIRECT_MODE_SNOOP	(1<<20)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3067: FILE: drivers/net/pcinet_hw.h:54:
+#define DMA_DIRECT_MODE_SNOOP	(1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3068: FILE: drivers/net/pcinet_hw.h:55:
+#define DMA_CHANNEL_MODE_DIRECT	(1<<2)
                                	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3068: FILE: drivers/net/pcinet_hw.h:55:
+#define DMA_CHANNEL_MODE_DIRECT	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3069: FILE: drivers/net/pcinet_hw.h:56:
+#define DMA_CHANNEL_START	(1<<0)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3069: FILE: drivers/net/pcinet_hw.h:56:
+#define DMA_CHANNEL_START	(1<<0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3071: FILE: drivers/net/pcinet_hw.h:58:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3074: FILE: drivers/net/pcinet_hw.h:61:
+#define LAWAR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3074: FILE: drivers/net/pcinet_hw.h:61:
+#define LAWAR0_ENABLE		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3077: FILE: drivers/net/pcinet_hw.h:64:
+#define POCMR0_ENABLE		(1<<31)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3077: FILE: drivers/net/pcinet_hw.h:64:
+#define POCMR0_ENABLE		(1<<31)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3081: FILE: drivers/net/pcinet_hw.h:68:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3086: FILE: drivers/net/pcinet_hw.h:73:
+#define PIWAR0_ENABLED		(1<<31)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3086: FILE: drivers/net/pcinet_hw.h:73:
+#define PIWAR0_ENABLED		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3087: FILE: drivers/net/pcinet_hw.h:74:
+#define PIWAR0_PREFETCH		(1<<29)
                        		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3087: FILE: drivers/net/pcinet_hw.h:74:
+#define PIWAR0_PREFETCH		(1<<29)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 47 warnings, 98 checks, 2950 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
