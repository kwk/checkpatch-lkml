ERROR:INITIALISED_STATIC: do not initialise statics to 0
#164: FILE: drivers/video/atafb.c:161:
+static int DontCalcRes = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <DontCalcRes>
#164: FILE: drivers/video/atafb.c:161:
+static int DontCalcRes = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#270: FILE: drivers/video/atafb.c:237:
+};
+static int MV300_reg_4bit[16] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#273: FILE: drivers/video/atafb.c:240:
+};
+static int MV300_reg_8bit[256] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: drivers/video/atafb.c:341:
+
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#602: FILE: drivers/video/atafb.c:545:
+		FB_SYNC_VERT_HIGH_ACT | FB_SYNC_COMP_HIGH_ACT, FB_VMODE_NONINTERLACED | FB_VMODE_YWRAP

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: drivers/video/atafb.c:554:
+		"falh", 60, 896, 608, 32000, 18, 42, 31, 1, 96,3,
 		                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#618: FILE: drivers/video/atafb.c:561:
+static char *mode_option __initdata = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#627: FILE: drivers/video/atafb.c:570:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#938: FILE: drivers/video/atafb.c:761:
+	var->blue = var->green = var->red;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#943: FILE: drivers/video/atafb.c:766:
+	if (!use_hwscroll)
[...]
 	else if (screen_len) {
[...]
 			var->yres_virtual = screen_len / linelen;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1069: FILE: drivers/video/atafb.c:841:
+		udelay(20);		/* wait a while for things to settle down */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/video/atafb.c:881:
+	{ 4,2,1 }, { 4,2,1 }, { 4,2,2 }, { 4,2,1 }
 	                                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1191: FILE: drivers/video/atafb.c:976:
+	if (bpp <= 1) {
[...]
-	}
[...]
 		par->hw.falcon.f_shift = 0x000;
[...]
+	} else if (bpp <= 4) {
[...]
 		par->hw.falcon.st_shift = 0x000;
[...]
+	} else if (bpp <= 8) {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1221: FILE: drivers/video/atafb.c:994:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1255: FILE: drivers/video/atafb.c:1080:
+	} else
[...]
 	if (mon_type == F_MON_SC || mon_type == F_MON_TV) {

CHECK:BRACES: Unbalanced braces around else statement
#1255: FILE: drivers/video/atafb.c:1080:
+	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1290: FILE: drivers/video/atafb.c:1131:
+^I^I^I         fext.f)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1449: FILE: drivers/video/atafb.c:1288:
+	if ((par->HDB & 0x200) && (par->HDB & ~0x200) - par->HDE <= 5) {
 		/* if this happens increase margins, decrease hfreq. */
 	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1672: FILE: drivers/video/atafb.c:1492:
+		var->blue = var->green = var->red;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1777: FILE: drivers/video/atafb.c:1609:
+^I           ((hw->f_shift & 0x510) == 0 && hw->st_shift == 0x200);$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1802: FILE: drivers/video/atafb.c:1643:
+			*(volatile unsigned short *)0xffff9202 = 0xffbf;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1806: FILE: drivers/video/atafb.c:1646:
+			*(volatile unsigned short *)0xffff9202;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1861: FILE: drivers/video/atafb.c:1715:
+^I        (var->yoffset * info->var.xres_virtual + xoffset) * bpp / 8;$

CHECK:BRACES: Unbalanced braces around else statement
#2025: FILE: drivers/video/atafb.c:1893:
+		} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2131: FILE: drivers/video/atafb.c:1959:
+	var->blue = var->green = var->red;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2139: FILE: drivers/video/atafb.c:1967:
+	if (!use_hwscroll)
[...]
 	else if (screen_len) {
[...]
 			var->yres_virtual = screen_len / linelen;
[...]

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2267: FILE: drivers/video/atafb.c:2045:
+		udelay(20);		/* wait a while for things to settle down */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2295: FILE: drivers/video/atafb.c:2092:
+	unsigned long flags;
+	register unsigned char old, new;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2350: FILE: drivers/video/atafb.c:2118:
+	if (atari_switches & (ATARI_SWITCH_OVSC_SND6|ATARI_SWITCH_OVSC_SND7)) {
 	                                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2353: FILE: drivers/video/atafb.c:2121:
+				   ((atari_switches & ATARI_SWITCH_OVSC_SND6) ? 0x40:0) |
 				                                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2354: FILE: drivers/video/atafb.c:2122:
+				   ((atari_switches & ATARI_SWITCH_OVSC_SND7) ? 0x80:0);
 				                                                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2502: FILE: drivers/video/atafb.c:2217:
+	var->blue = var->green = var->red;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2529: FILE: drivers/video/atafb.c:2240:
+	*((unsigned volatile char *) ((port)+external_vgaiobase)) = (val)
 	                                    ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2529: FILE: drivers/video/atafb.c:2240:
+	*((unsigned volatile char *) ((port)+external_vgaiobase)) = (val)

CHECK:CAMELCASE: Avoid CamelCase: <DACDelay>
#2533: FILE: drivers/video/atafb.c:2243:
+#define DACDelay				\

ERROR:CODE_INDENT: code indent should use tabs where possible
#2654: FILE: drivers/video/atafb.c:2318:
+^I        (var->yoffset * info->var.xres_virtual + var->xoffset)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2655: FILE: drivers/video/atafb.c:2319:
+^I        * info->var.bits_per_pixel / 8;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#2984: FILE: drivers/video/atafb.c:2510:
+	if (fbhw->pan_display) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2988: FILE: drivers/video/atafb.c:2514:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <Please>
#3013: FILE: drivers/video/atafb.c:2539:
+#define Please update me

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3013: FILE: drivers/video/atafb.c:2539:
+#define Please update me

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3033: FILE: drivers/video/atafb.c:2555:
+	 * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:RETURN_VOID: void function return statements are not generally useful
#3113: FILE: drivers/video/atafb.c:2621:
+	return;
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3151: FILE: drivers/video/atafb.c:2655:
+		while (height--) {
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3224: FILE: drivers/video/atafb.c:2729:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3237: FILE: drivers/video/atafb.c:2741:
+	  * then encoding hw par back into new, validated var */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3255: FILE: drivers/video/atafb.c:2759:
+	 * hw par just decoded */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3270: FILE: drivers/video/atafb.c:2774:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3328: FILE: drivers/video/atafb.c:2813:
+			sprintf(default_name,"default%d", i);
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3336: FILE: drivers/video/atafb.c:2819:
+			if (!do_fb_set_var(&var,1))
 			                       ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3586: FILE: drivers/video/atafb.c:2894:
+		external_vgaiobase = simple_strtoul(p, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3705: FILE: drivers/video/atafb.c:2969:
+	tt_yres = st_yres = simple_strtoul(p, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3705: FILE: drivers/video/atafb.c:2969:
+	tt_yres = st_yres = simple_strtoul(p, NULL, 10);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3706: FILE: drivers/video/atafb.c:2970:
+	if ((p = strsep(&spec, ";")) && *p)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3707: FILE: drivers/video/atafb.c:2971:
+		sttt_xres_virtual = simple_strtoul(p, NULL, 10);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3708: FILE: drivers/video/atafb.c:2972:
+	if ((p = strsep(&spec, ";")) && *p)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3709: FILE: drivers/video/atafb.c:2973:
+		sttt_yres_virtual = simple_strtoul(p, NULL, 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3710: FILE: drivers/video/atafb.c:2974:
+	if ((p = strsep(&spec, ";")) && *p)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3711: FILE: drivers/video/atafb.c:2975:
+		ovsc_offset = simple_strtoul(p, NULL, 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3796: FILE: drivers/video/atafb.c:3058:
+		if ((temp = get_video_mode(this_opt))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#3796: FILE: drivers/video/atafb.c:3058:
+		if ((temp = get_video_mode(this_opt))) {
[...]
+		} else if (!strcmp(this_opt, "inverse"))
[...]
+		else if (!strncmp(this_opt, "hwscroll_", 9)) {
[...]

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3802: FILE: drivers/video/atafb.c:3064:
+			hwscroll = simple_strtoul(this_opt + 9, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3822: FILE: drivers/video/atafb.c:3081:
+			fext.f = simple_strtoul(this_opt + 7, NULL, 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3853: FILE: drivers/video/atafb.c:3110:
+	printk("atafb_init: start\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atafb_init', this function's name, in a string
#3853: FILE: drivers/video/atafb.c:3110:
+	printk("atafb_init: start\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3861: FILE: drivers/video/atafb.c:3118:
+			printk("atafb_init: initializing external hw\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atafb_init', this function's name, in a string
#3861: FILE: drivers/video/atafb.c:3118:
+			printk("atafb_init: initializing external hw\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3870: FILE: drivers/video/atafb.c:3127:
+			printk("atafb_init: initializing TT hw\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atafb_init', this function's name, in a string
#3870: FILE: drivers/video/atafb.c:3127:
+			printk("atafb_init: initializing TT hw\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3896: FILE: drivers/video/atafb.c:3136:
+			printk("atafb_init: initializing Falcon hw\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atafb_init', this function's name, in a string
#3896: FILE: drivers/video/atafb.c:3136:
+			printk("atafb_init: initializing Falcon hw\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#3900: FILE: drivers/video/atafb.c:3140:
+^I^I^I            "framebuffer/modeswitch", falcon_vbl_switcher);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3908: FILE: drivers/video/atafb.c:3148:
+			printk("atafb_init: initializing ST/E hw\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atafb_init', this function's name, in a string
#3908: FILE: drivers/video/atafb.c:3148:
+			printk("atafb_init: initializing ST/E hw\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3916: FILE: drivers/video/atafb.c:3156:
+		printk("Cannot determine video hardware; defaulting to ST(e)\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3951: FILE: drivers/video/atafb.c:3191:
+			 * write-through also for internal video hardware! */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3956: FILE: drivers/video/atafb.c:3196:
+		printk("atafb: screen_base %p real_screen_base %p screen_len %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3957: FILE: drivers/video/atafb.c:3197:
+		printk("atafb: screen_base %p real_screen_base %p screen_len %d\n",
+			screen_base, real_screen_base, screen_len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3971: FILE: drivers/video/atafb.c:3211:
+		memset (screen_base, 0, external_len);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around fb_info.cmap
#3995: FILE: drivers/video/atafb.c:3235:
+	fb_alloc_cmap(&(fb_info.cmap), 1 << fb_info.var.bits_per_pixel, 0);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3997: FILE: drivers/video/atafb.c:3237:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3998: FILE: drivers/video/atafb.c:3238:
+	printk("Determined %dx%d, depth %d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fb_info.var.xres != fb_info.var.xres_virtual'
#4000: FILE: drivers/video/atafb.c:3240:
+	if ((fb_info.var.xres != fb_info.var.xres_virtual) ||
+	    (fb_info.var.yres != fb_info.var.yres_virtual))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fb_info.var.yres != fb_info.var.yres_virtual'
#4000: FILE: drivers/video/atafb.c:3240:
+	if ((fb_info.var.xres != fb_info.var.xres_virtual) ||
+	    (fb_info.var.yres != fb_info.var.yres_virtual))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4002: FILE: drivers/video/atafb.c:3242:
+		printk("   virtual %dx%d\n", fb_info.var.xres_virtual,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4012: FILE: drivers/video/atafb.c:3252:
+			iounmap((void*)external_vgaiobase);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4022: FILE: drivers/video/atafb.c:3262:
+	printk("fb%d: frame buffer device, using %dK of video memory\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4045: FILE: drivers/video/atafb.h:1:
+#ifndef _VIDEO_ATAFB_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4084: FILE: drivers/video/atafb_iplan2p2.c:1:
+/*

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#4125: FILE: drivers/video/atafb_iplan2p2.c:42:
+	int w, l , i, j;
 	         ^

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4159: FILE: drivers/video/atafb_iplan2p2.c:76:
+			src = (u8 *)info->screen_base + (sy - 1) * next_line + ((sx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4160: FILE: drivers/video/atafb_iplan2p2.c:77:
+			dst = (u8 *)info->screen_base + (dy - 1) * next_line + ((dx + width + 8) & ~15) / (8 / BPL);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#4210: FILE: drivers/video/atafb_iplan2p2.c:127:
+				if (f & 1) {
[...]
+				} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4223: FILE: drivers/video/atafb_iplan2p2.c:140:
+				if (f & 2) {
+					dst32[0] = (dst32[0] & mask) | pval[0];
+				}

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4235: FILE: drivers/video/atafb_iplan2p2.c:152:
+			src = (u8 *)info->screen_base + (sy - 1) * next_line + ((sx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4236: FILE: drivers/video/atafb_iplan2p2.c:153:
+			dst = (u8 *)info->screen_base + (dy - 1) * next_line + ((dx + width + 8) & ~15) / (8 / BPL);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#4252: FILE: drivers/video/atafb_iplan2p2.c:169:
+				if (f & 1) {
[...]
+				} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4265: FILE: drivers/video/atafb_iplan2p2.c:182:
+				if (!(f & 2)) {
+					dst32[-1] = (dst32[-1] & mask) | pval[0];
+				}

ERROR:CODE_INDENT: code indent should use tabs where possible
#4277: FILE: drivers/video/atafb_iplan2p2.c:194:
+                             int sy, int sx, int height, int width)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4277: FILE: drivers/video/atafb_iplan2p2.c:194:
+                             int sy, int sx, int height, int width)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#4302: FILE: drivers/video/atafb_iplan2p2.c:219:
+		u32 off = next_line - rows * BPL * 2;
+		for (i = height; i; i--) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#4323: FILE: drivers/video/atafb_iplan2p2.c:240:
+                             int dy, int dx, u32 width,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4323: FILE: drivers/video/atafb_iplan2p2.c:240:
+                             int dy, int dx, u32 width,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4324: FILE: drivers/video/atafb_iplan2p2.c:241:
+                             const u8 *data, u32 bgcolor, u32 fgcolor)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4324: FILE: drivers/video/atafb_iplan2p2.c:241:
+                             const u8 *data, u32 bgcolor, u32 fgcolor)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#4344: FILE: drivers/video/atafb_iplan2p2.c:261:
+			u16 d = *data16++;
+			m = d | ((u32)d << 16);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4369: FILE: drivers/video/atafb_iplan2p2.c:286:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#4374: FILE: drivers/video/atafb_iplan2p2.c:291:
+EXPORT_SYMBOL(atafb_iplan2p2_copyarea);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#4375: FILE: drivers/video/atafb_iplan2p2.c:292:
+EXPORT_SYMBOL(atafb_iplan2p2_fillrect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#4376: FILE: drivers/video/atafb_iplan2p2.c:293:
+EXPORT_SYMBOL(atafb_iplan2p2_linefill);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4380: FILE: drivers/video/atafb_iplan2p4.c:1:
+/*

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#4421: FILE: drivers/video/atafb_iplan2p4.c:42:
+	int w, l , i, j;
 	         ^

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4455: FILE: drivers/video/atafb_iplan2p4.c:76:
+			src = (u8 *)info->screen_base + (sy - 1) * next_line + ((sx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4456: FILE: drivers/video/atafb_iplan2p4.c:77:
+			dst = (u8 *)info->screen_base + (dy - 1) * next_line + ((dx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4538: FILE: drivers/video/atafb_iplan2p4.c:159:
+			src = (u8 *)info->screen_base + (sy - 1) * next_line + ((sx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4539: FILE: drivers/video/atafb_iplan2p4.c:160:
+			dst = (u8 *)info->screen_base + (dy - 1) * next_line + ((dx + width + 8) & ~15) / (8 / BPL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#4587: FILE: drivers/video/atafb_iplan2p4.c:208:
+                             int sy, int sx, int height, int width)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4587: FILE: drivers/video/atafb_iplan2p4.c:208:
+                             int sy, int sx, int height, int width)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#4612: FILE: drivers/video/atafb_iplan2p4.c:233:
+		u32 off = next_line - rows * BPL * 2;
+		for (i = height; i; i--) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#4633: FILE: drivers/video/atafb_iplan2p4.c:254:
+                             int dy, int dx, u32 width,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4633: FILE: drivers/video/atafb_iplan2p4.c:254:
+                             int dy, int dx, u32 width,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4634: FILE: drivers/video/atafb_iplan2p4.c:255:
+                             const u8 *data, u32 bgcolor, u32 fgcolor)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4634: FILE: drivers/video/atafb_iplan2p4.c:255:
+                             const u8 *data, u32 bgcolor, u32 fgcolor)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#4654: FILE: drivers/video/atafb_iplan2p4.c:275:
+			u16 d = *data16++;
+			m = d | ((u32)d << 16);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4680: FILE: drivers/video/atafb_iplan2p4.c:301:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#4685: FILE: drivers/video/atafb_iplan2p4.c:306:
+EXPORT_SYMBOL(atafb_iplan2p4_copyarea);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#4686: FILE: drivers/video/atafb_iplan2p4.c:307:
+EXPORT_SYMBOL(atafb_iplan2p4_fillrect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#4687: FILE: drivers/video/atafb_iplan2p4.c:308:
+EXPORT_SYMBOL(atafb_iplan2p4_linefill);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4691: FILE: drivers/video/atafb_iplan2p8.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4714: FILE: drivers/video/atafb_iplan2p8.c:24:
+
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#4739: FILE: drivers/video/atafb_iplan2p8.c:49:
+	int w, l , i, j;
 	         ^

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4773: FILE: drivers/video/atafb_iplan2p8.c:83:
+			src = (u8 *)info->screen_base + (sy - 1) * next_line + ((sx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4774: FILE: drivers/video/atafb_iplan2p8.c:84:
+			dst = (u8 *)info->screen_base + (dy - 1) * next_line + ((dx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4870: FILE: drivers/video/atafb_iplan2p8.c:180:
+			src = (u8 *)info->screen_base + (sy - 1) * next_line + ((sx + width + 8) & ~15) / (8 / BPL);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#4871: FILE: drivers/video/atafb_iplan2p8.c:181:
+			dst = (u8 *)info->screen_base + (dy - 1) * next_line + ((dx + width + 8) & ~15) / (8 / BPL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#4933: FILE: drivers/video/atafb_iplan2p8.c:243:
+                             int sy, int sx, int height, int width)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4933: FILE: drivers/video/atafb_iplan2p8.c:243:
+                             int sy, int sx, int height, int width)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#4958: FILE: drivers/video/atafb_iplan2p8.c:268:
+		u32 off = next_line - rows * BPL * 2;
+		for (i = height; i; i--) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#5000: FILE: drivers/video/atafb_iplan2p8.c:310:
+			u16 d = *data16++;
+			m = d | ((u32)d << 16);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5028: FILE: drivers/video/atafb_iplan2p8.c:338:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5033: FILE: drivers/video/atafb_iplan2p8.c:343:
+EXPORT_SYMBOL(atafb_iplan2p8_copyarea);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5034: FILE: drivers/video/atafb_iplan2p8.c:344:
+EXPORT_SYMBOL(atafb_iplan2p8_fillrect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5035: FILE: drivers/video/atafb_iplan2p8.c:345:
+EXPORT_SYMBOL(atafb_iplan2p8_linefill);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5039: FILE: drivers/video/atafb_mfb.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5057: FILE: drivers/video/atafb_mfb.c:19:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5124: FILE: drivers/video/atafb_mfb.c:86:
+	for (rows = width / 8; rows--; /* check margins */ ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5143: FILE: drivers/video/atafb_mfb.c:105:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5148: FILE: drivers/video/atafb_mfb.c:110:
+EXPORT_SYMBOL(atafb_mfb_copyarea);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5149: FILE: drivers/video/atafb_mfb.c:111:
+EXPORT_SYMBOL(atafb_mfb_fillrect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5150: FILE: drivers/video/atafb_mfb.c:112:
+EXPORT_SYMBOL(atafb_mfb_linefill);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5154: FILE: drivers/video/atafb_utils.h:1:
+#ifndef _VIDEO_ATAFB_UTILS_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5187: FILE: drivers/video/atafb_utils.h:34:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5196: FILE: drivers/video/atafb_utils.h:43:
+/* ++andreas: more optimizations:
+   subl #65536,d0 replaced by clrw d0; subql #1,d0 for dbcc

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5199: FILE: drivers/video/atafb_utils.h:46:
+   some functions rewritten in C for clarity, no speed loss */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5229: FILE: drivers/video/atafb_utils.h:76:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#5246: FILE: drivers/video/atafb_utils.h:93:
+		long tmp;
+		asm volatile ("\n"

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5269: FILE: drivers/video/atafb_utils.h:116:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5282: FILE: drivers/video/atafb_utils.h:129:
+		: "d" (-1), "0" ((char *)s+count), "1" (count));
 		                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5296: FILE: drivers/video/atafb_utils.h:143:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#5311: FILE: drivers/video/atafb_utils.h:158:
+			long tmp;
+			asm volatile ("\n"

CHECK:SPACING: No space is necessary after a cast
#5340: FILE: drivers/video/atafb_utils.h:187:
+				: "0" ((char *) d + count), "1" ((char *) s + count), "2" (count));

CHECK:SPACING: No space is necessary after a cast
#5362: FILE: drivers/video/atafb_utils.h:209:
+				: "0" ((char *) d + count), "1" ((char *) s + count), "2" (count));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5369: FILE: drivers/video/atafb_utils.h:216:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5371: FILE: drivers/video/atafb_utils.h:218:
+/* ++andreas: Simple and fast version of memmove, assumes size is
+   divisible by 16, suitable for moving the whole screen bitplane */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5371: FILE: drivers/video/atafb_utils.h:218:
+   divisible by 16, suitable for moving the whole screen bitplane */

WARNING:LINE_SPACING: Missing a blank line after declarations
#5435: FILE: drivers/video/atafb_utils.h:282:
+	u32 tmp = m[0];
+	dst[0] = tmp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#5531: FILE: drivers/video/atafb_utils.h:378:
+        s = src;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5531: FILE: drivers/video/atafb_utils.h:378:
+        s = src;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5532: FILE: drivers/video/atafb_utils.h:379:
+        d = dst;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5532: FILE: drivers/video/atafb_utils.h:379:
+        d = dst;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5533: FILE: drivers/video/atafb_utils.h:380:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5533: FILE: drivers/video/atafb_utils.h:380:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5534: FILE: drivers/video/atafb_utils.h:381:
+                v = (*s++ & mask) | (*d  & ~mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5534: FILE: drivers/video/atafb_utils.h:381:
+                v = (*s++ & mask) | (*d  & ~mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5535: FILE: drivers/video/atafb_utils.h:382:
+                *d++ = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5535: FILE: drivers/video/atafb_utils.h:382:
+                *d++ = v;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5537: FILE: drivers/video/atafb_utils.h:384:
+                v = (*s++ & mask) | (*d  & ~mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5537: FILE: drivers/video/atafb_utils.h:384:
+                v = (*s++ & mask) | (*d  & ~mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5538: FILE: drivers/video/atafb_utils.h:385:
+                *d++ = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5538: FILE: drivers/video/atafb_utils.h:385:
+                *d++ = v;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5541: FILE: drivers/video/atafb_utils.h:388:
+                v = (*s++ & mask) | (*d  & ~mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5541: FILE: drivers/video/atafb_utils.h:388:
+                v = (*s++ & mask) | (*d  & ~mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5542: FILE: drivers/video/atafb_utils.h:389:
+                *d++ = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5542: FILE: drivers/video/atafb_utils.h:389:
+                *d++ = v;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5543: FILE: drivers/video/atafb_utils.h:390:
+                v = (*s++ & mask) | (*d  & ~mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5543: FILE: drivers/video/atafb_utils.h:390:
+                v = (*s++ & mask) | (*d  & ~mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5544: FILE: drivers/video/atafb_utils.h:391:
+                *d++ = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5544: FILE: drivers/video/atafb_utils.h:391:
+                *d++ = v;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5546: FILE: drivers/video/atafb_utils.h:393:
+                d = (u32 *)((u8 *)d + bytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5546: FILE: drivers/video/atafb_utils.h:393:
+                d = (u32 *)((u8 *)d + bytes);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5547: FILE: drivers/video/atafb_utils.h:394:
+                s = (u32 *)((u8 *)s + bytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5547: FILE: drivers/video/atafb_utils.h:394:
+                s = (u32 *)((u8 *)s + bytes);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5548: FILE: drivers/video/atafb_utils.h:395:
+        } while (--h);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5548: FILE: drivers/video/atafb_utils.h:395:
+        } while (--h);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437470.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 50 errors, 104 warnings, 48 checks, 5404 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437470.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
