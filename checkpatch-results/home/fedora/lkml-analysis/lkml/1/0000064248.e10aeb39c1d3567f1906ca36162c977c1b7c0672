WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
    They are read/write/execute/unlink/rmdir/truncate/symlink/rewrite/chroot/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: security/tomoyo/new-file.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#68: FILE: security/tomoyo/new-file.c:11:
+#define ACC_MODE(x) ("\000\004\002\006"[(x)&O_ACCMODE])
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: security/tomoyo/new-file.c:87:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: security/tomoyo/new-file.c:122:
+ const bool may_use_pattern)$

CHECK:SPACING: No space is necessary after a cast
#241: FILE: security/tomoyo/new-file.c:184:
+	strcat((char *) buf->name, "/");

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: security/tomoyo/new-file.c:199:
+	int len;
+	if (!name || !tail)

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: security/tomoyo/new-file.c:218:
+	struct path path = { mnt, dentry };
+	buf->name = tomoyo_realpath_from_path(&path);

WARNING:TYPO_SPELLING: 'unconditionnaly' may be misspelled - perhaps 'unconditionally'?
#409: FILE: security/tomoyo/new-file.c:352:
+ * tomoyo_is_globally_readable_file - Check if the file is unconditionnaly permitted to be open()ed for reading.
                                                            ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#409: FILE: security/tomoyo/new-file.c:352:
+ * tomoyo_is_globally_readable_file - Check if the file is unconditionnaly permitted to be open()ed for reading.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: security/tomoyo/new-file.c:365:
+	bool found = false;
+	list_for_each_entry_rcu(ptr, &tomoyo_globally_readable_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#446: FILE: security/tomoyo/new-file.c:389:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!tomoyo_is_correct_path(data, 1, 0, -1))

WARNING:LINE_SPACING: Missing a blank line after declarations
#486: FILE: security/tomoyo/new-file.c:429:
+	bool done = true;
+	list_for_each_cookie(pos, head->read_var2,

WARNING:LINE_SPACING: Missing a blank line after declarations
#489: FILE: security/tomoyo/new-file.c:432:
+		struct tomoyo_globally_readable_file_entry *ptr;
+		ptr = list_entry(pos,

WARNING:LINE_SPACING: Missing a blank line after declarations
#540: FILE: security/tomoyo/new-file.c:483:
+	const struct tomoyo_path_info *pattern = NULL;
+	list_for_each_entry_rcu(ptr, &tomoyo_pattern_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#570: FILE: security/tomoyo/new-file.c:513:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!e.pattern)

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: security/tomoyo/new-file.c:552:
+	bool done = true;
+	list_for_each_cookie(pos, head->read_var2, &tomoyo_pattern_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#611: FILE: security/tomoyo/new-file.c:554:
+		struct tomoyo_pattern_entry *ptr;
+		ptr = list_entry(pos, struct tomoyo_pattern_entry, list);

WARNING:TYPO_SPELLING: 'rewrited' may be misspelled - perhaps 'rewrote'?
#647: FILE: security/tomoyo/new-file.c:590:
+ * tomoyo_is_no_rewrite_file - Check if the given pathname is not permitted to be rewrited.
                                                                                   ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#660: FILE: security/tomoyo/new-file.c:603:
+	bool matched = false;
+	list_for_each_entry_rcu(ptr, &tomoyo_no_rewrite_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#685: FILE: security/tomoyo/new-file.c:628:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!tomoyo_is_correct_path(data, 0, 0, 0))

WARNING:LINE_SPACING: Missing a blank line after declarations
#724: FILE: security/tomoyo/new-file.c:667:
+	bool done = true;
+	list_for_each_cookie(pos, head->read_var2,

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: security/tomoyo/new-file.c:670:
+		struct tomoyo_no_rewrite_entry *ptr;
+		ptr = list_entry(pos, struct tomoyo_no_rewrite_entry, list);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: security/tomoyo/new-file.c:699:
+ struct tomoyo_condition *condition, const bool is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: security/tomoyo/new-file.c:741:
+	int error = -EPERM;
+	list_for_each_entry_rcu(ptr, &domain->acl_info_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#800: FILE: security/tomoyo/new-file.c:743:
+		struct tomoyo_path_acl *acl;
+		if (ptr->is_deleted || ptr->type != TOMOYO_TYPE_PATH_ACL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#838: FILE: security/tomoyo/new-file.c:781:
+	int error = -EPERM;
+	list_for_each_entry_rcu(ptr, &domain->acl_info_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#840: FILE: security/tomoyo/new-file.c:783:
+		struct tomoyo_path_number3_acl *acl;
+		if (ptr->is_deleted ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#878: FILE: security/tomoyo/new-file.c:821:
+	u16 perm = 0;
+	if (!filename)

CHECK:BRACES: braces {} should be used on all arms of this statement
#880: FILE: security/tomoyo/new-file.c:823:
+	if (mode == 6) {
[...]
+	} else if (mode == 4) {
[...]
+	} else if (mode == 2) {
[...]
+	} else if (mode == 1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#892: FILE: security/tomoyo/new-file.c:835:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#893: FILE: security/tomoyo/new-file.c:836:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#897: FILE: security/tomoyo/new-file.c:840:
+		if (error && mode == 4 && !r->domain->ignore_global_allow_read
+		    && tomoyo_is_globally_readable_file(filename))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: security/tomoyo/new-file.c:870:
+ const bool is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#933: FILE: security/tomoyo/new-file.c:876:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!domain)

WARNING:LINE_SPACING: Missing a blank line after declarations
#945: FILE: security/tomoyo/new-file.c:888:
+		struct tomoyo_execute_handler_record *acl;
+		if (ptr->type != type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#955: FILE: security/tomoyo/new-file.c:898:
+			struct tomoyo_acl_info *ptr2;
+			list_for_each_entry_rcu(ptr2, &domain->acl_info_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1008: FILE: security/tomoyo/new-file.c:951:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (type == TOMOYO_TYPE_READ_WRITE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: security/tomoyo/new-file.c:1015:
+ struct tomoyo_domain_info * const domain, struct tomoyo_condition *condition,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: security/tomoyo/new-file.c:1016:
+ const bool is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1084: FILE: security/tomoyo/new-file.c:1027:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!tomoyo_parse_name_union(filename, &e.name) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: security/tomoyo/new-file.c:1086:
+ struct tomoyo_domain_info * const domain, struct tomoyo_condition *condition,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: security/tomoyo/new-file.c:1087:
+ const bool is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1155: FILE: security/tomoyo/new-file.c:1098:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!tomoyo_parse_name_union(filename1, &e.name1) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#1216: FILE: security/tomoyo/new-file.c:1159:
+	int error = -EPERM;
+	list_for_each_entry_rcu(ptr, &domain->acl_info_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1218: FILE: security/tomoyo/new-file.c:1161:
+		struct tomoyo_path2_acl *acl;
+		if (ptr->is_deleted || ptr->type != TOMOYO_TYPE_PATH2_ACL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1302: FILE: security/tomoyo/new-file.c:1245:
+	const unsigned int minor = MINOR(dev);
+	if (!r->mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1360: FILE: security/tomoyo/new-file.c:1303:
+	int idx;
+	if (task->in_execve &&

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1374: FILE: security/tomoyo/new-file.c:1317:
+	if ((acc_mode & MAY_WRITE) && !(flag & O_APPEND)
+	    && tomoyo_init_request_info(&r, NULL, TOMOYO_MAC_FILE_REWRITE)

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1405: FILE: security/tomoyo/new-file.c:1348:
+ * tomoyo_path_perm - Check permission for "unlink", "rmdir", "truncate", "symlink", "chroot" and "unmount".

WARNING:LINE_SPACING: Missing a blank line after declarations
#1427: FILE: security/tomoyo/new-file.c:1370:
+	int idx;
+	buf.name = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1489: FILE: security/tomoyo/new-file.c:1432:
+	int idx;
+	buf.name = NULL;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1512: FILE: security/tomoyo/new-file.c:1455:
+ * @filp: Pointer to "struct file".
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1516: FILE: security/tomoyo/new-file.c:1459:
+int tomoyo_rewrite_permission(struct file *filp)
                                            ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1527: FILE: security/tomoyo/new-file.c:1470:
+	int idx;
+	buf.name = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1580: FILE: security/tomoyo/new-file.c:1523:
+	int idx;
+	buf1.name = NULL;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1598: FILE: security/tomoyo/new-file.c:1541:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1636: FILE: security/tomoyo/new-file.c:1579:
+ struct tomoyo_domain_info * const domain, struct tomoyo_condition *condition,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: security/tomoyo/new-file.c:1580:
+ const bool is_delete)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1648: FILE: security/tomoyo/new-file.c:1591:
+	int error = is_delete ? -ENOENT : -ENOMEM;
+	if (!domain)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1712: FILE: security/tomoyo/new-file.c:1655:
+	int error = -EPERM;
+	list_for_each_entry_rcu(ptr, &domain->acl_info_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1714: FILE: security/tomoyo/new-file.c:1657:
+		struct tomoyo_path_number_acl *acl;
+		if (ptr->is_deleted ||

WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#1731: FILE: security/tomoyo/new-file.c:1674:
+ * tomoyo_path_number_perm2 - Check permission for "create", "mkdir", "mkfifo", "mksock", "ioctl", "chmod", "chown", "chgrp".

WARNING:LINE_SPACING: Missing a blank line after declarations
#1750: FILE: security/tomoyo/new-file.c:1693:
+	const char *msg = tomoyo_path_number2keyword(type);
+	if (!filename)

WARNING:LONG_LINE_COMMENT: line length of 124 exceeds 100 columns
#1784: FILE: security/tomoyo/new-file.c:1727:
+ * tomoyo_path_number_perm - Check permission for "create", "mkdir", "mkfifo", "mksock", "ioctl", "chmod", "chown", "chgrp".

WARNING:LINE_SPACING: Missing a blank line after declarations
#1804: FILE: security/tomoyo/new-file.c:1747:
+	int idx;
+	if (!vfsmnt || !dentry)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1836: FILE: security/tomoyo/new-file.c:1779:
+int tomoyo_ioctl_permission(struct file *filp, unsigned int cmd,
                                          ^^^^

CHECK:SPACING: No space is necessary after a cast
#1883: FILE: security/tomoyo/new-file.c:1826:
+	if (mode == (mode_t) -1)

CHECK:SPACING: No space is necessary after a cast
#1905: FILE: security/tomoyo/new-file.c:1848:
+	if (user == (uid_t) -1 && group == (gid_t) -1)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1905: FILE: security/tomoyo/new-file.c:1848:
+	int error = 0;
+	if (user == (uid_t) -1 && group == (gid_t) -1)

CHECK:SPACING: No space is necessary after a cast
#1909: FILE: security/tomoyo/new-file.c:1852:
+	if (user != (uid_t) -1)

CHECK:SPACING: No space is necessary after a cast
#1912: FILE: security/tomoyo/new-file.c:1855:
+	if (!error && group != (gid_t) -1)

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#1926: FILE: security/tomoyo/new-file.c:1869:
+int tomoyo_pivot_root_permission(struct path *old_path, struct path*new_path)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1981: FILE: security/tomoyo/new-file.c:1924:
+	u8 type;
+	if (!tomoyo_tokenize(data, w, sizeof(w)) || !w[1][0])

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1984: FILE: security/tomoyo/new-file.c:1927:
+		if (sscanf(w[0], "%u", &perm) == 1)
+			return tomoyo_update_file_acl((u8) perm, w[1], domain,
+						      condition, is_delete);

CHECK:SPACING: No space is necessary after a cast
#1985: FILE: security/tomoyo/new-file.c:1928:
+			return tomoyo_update_file_acl((u8) perm, w[1], domain,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2059: FILE: security/tomoyo/new-file.c:2002:
+	int error = tomoyo_may_create(dir, dentry);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2071: FILE: security/tomoyo/new-file.c:2014:
+	int error = tomoyo_may_create(dir, dentry);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2084: FILE: security/tomoyo/new-file.c:2027:
+	int error = tomoyo_may_create(dir, dentry);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2095: FILE: security/tomoyo/new-file.c:2038:
+	int error = tomoyo_may_delete(dir, dentry, 1);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2106: FILE: security/tomoyo/new-file.c:2049:
+	int error = tomoyo_may_delete(dir, dentry, 0);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2119: FILE: security/tomoyo/new-file.c:2062:
+	int error;
+	if (!inode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2139: FILE: security/tomoyo/new-file.c:2082:
+	int error = tomoyo_may_create(dir, dentry);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2154: FILE: security/tomoyo/new-file.c:2097:
+	const int is_dir = S_ISDIR(old_dentry->d_inode->i_mode);
+	if (old_dentry->d_inode == new_dentry->d_inode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2178: FILE: security/tomoyo/new-file.c:2121:
+	int error;
+	if (S_ISCHR(mode) && !tomoyo_capable(TOMOYO_CREATE_CHAR_DEV))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2226: FILE: security/tomoyo/new-file.c:2169:
+	int error = tomoyo_pre_vfs_mkdir(dir, dentry);
+	if (!error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2237: FILE: security/tomoyo/new-file.c:2180:
+	int error = tomoyo_pre_vfs_rmdir(dir, dentry);
+	if (!error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2248: FILE: security/tomoyo/new-file.c:2191:
+	int error;
+	if (!tomoyo_capable(TOMOYO_SYS_UNLINK))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2262: FILE: security/tomoyo/new-file.c:2205:
+	int error;
+	if (!tomoyo_capable(TOMOYO_SYS_SYMLINK))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2284: FILE: security/tomoyo/new-file.c:2227:
+	int error;
+	if (!tomoyo_capable(TOMOYO_SYS_RENAME))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2299: FILE: security/tomoyo/new-file.c:2242:
+	int error;
+	if (!tomoyo_capable(TOMOYO_SYS_LINK))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 78 warnings, 12 checks, 2249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
