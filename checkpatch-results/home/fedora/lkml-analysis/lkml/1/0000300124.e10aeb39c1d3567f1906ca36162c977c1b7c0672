WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
The balloon driver allows memory to be dynamically added or removed from the domain,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#58: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: drivers/xen/balloon.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#144: FILE: drivers/xen/balloon.c:51:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#145: FILE: drivers/xen/balloon.c:52:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#154: FILE: drivers/xen/balloon.c:61:
+#define PAGES2KB(_p) ((_p)<<(PAGE_SHIFT-10))
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#154: FILE: drivers/xen/balloon.c:61:
+#define PAGES2KB(_p) ((_p)<<(PAGE_SHIFT-10))
                                        ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#193: FILE: drivers/xen/balloon.c:100:
+extern unsigned long totalram_pages;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: drivers/xen/balloon.c:107:
+#define inc_totalhigh_pages() do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: drivers/xen/balloon.c:108:
+#define dec_totalhigh_pages() do {} while(0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#213: FILE: drivers/xen/balloon.c:120:
+/* When ballooning out (allocating memory to return to Xen) we don't really
+   want the kernel to try too hard since that can trigger the oom killer. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: drivers/xen/balloon.c:120:
+   want the kernel to try too hard since that can trigger the oom killer. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: drivers/xen/balloon.c:129:
+		void *v = kmap(page);
+		clear_page(v);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: drivers/xen/balloon.c:133:
+		void *v = page_address(page);
+		clear_page(v);

CHECK:BRACES: braces {} should be used on all arms of this statement
#256: FILE: drivers/xen/balloon.c:163:
+	if (PageHighMem(page)) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#260: FILE: drivers/xen/balloon.c:167:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: drivers/xen/balloon.c:183:
+	struct list_head *next = page->lru.next;
+	if (next == &ballooned_pages)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#316: FILE: drivers/xen/balloon.c:223:
+		BUG_ON(page == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#316: FILE: drivers/xen/balloon.c:223:
+		BUG_ON(page == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#317: FILE: drivers/xen/balloon.c:224:
+		frame_list[i] = page_to_pfn(page);;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#323: FILE: drivers/xen/balloon.c:230:
+	rc = HYPERVISOR_memory_op(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/xen/balloon.c:239:
+			ret = HYPERVISOR_memory_op(XENMEM_decrease_reservation,
+					&reservation);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#333: FILE: drivers/xen/balloon.c:240:
+			BUG_ON(ret != rc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: drivers/xen/balloon.c:250:
+		BUG_ON(page == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#343: FILE: drivers/xen/balloon.c:250:
+		BUG_ON(page == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#346: FILE: drivers/xen/balloon.c:253:
+		BUG_ON(!xen_feature(XENFEAT_auto_translated_physmap) &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: drivers/xen/balloon.c:261:
+			int ret;
+			ret = HYPERVISOR_update_va_mapping(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#354: FILE: drivers/xen/balloon.c:261:
+			ret = HYPERVISOR_update_va_mapping(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#358: FILE: drivers/xen/balloon.c:265:
+			BUG_ON(ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: drivers/xen/balloon.c:299:
+		if ((page = alloc_page(GFP_BALLOON)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#420: FILE: drivers/xen/balloon.c:327:
+	BUG_ON(ret != nr_pages);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#473: FILE: drivers/xen/balloon.c:380:
+static struct xenbus_watch target_watch =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#504: FILE: drivers/xen/balloon.c:411:
+		printk(KERN_ERR "Failed to set balloon watcher\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/xen/balloon.c:462:
+    return;$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#569: FILE: drivers/xen/balloon.c:476:
+static int dealloc_pte_fn(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#583: FILE: drivers/xen/balloon.c:490:
+	BUG_ON(ret != 1);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#593: FILE: drivers/xen/balloon.c:500:
+	pagevec = kmalloc(sizeof(page) * nr_pages, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pagevec"
#594: FILE: drivers/xen/balloon.c:501:
+	if (pagevec == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#598: FILE: drivers/xen/balloon.c:505:
+		page = pagevec[i] = alloc_page(GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#599: FILE: drivers/xen/balloon.c:506:
+		if (page == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pagevec"
#656: FILE: drivers/xen/balloon.c:563:
+	if (pagevec == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#661: FILE: drivers/xen/balloon.c:568:
+		BUG_ON(page_count(pagevec[i]) != 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#683: FILE: drivers/xen/balloon.c:590:
+
+

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#684: FILE: drivers/xen/balloon.c:591:
+#define BALLOON_SHOW(name, format, args...)			\
+	static ssize_t show_##name(struct sys_device *dev,	\
+				   char *buf)			\
+	{							\
+		return sprintf(buf, format, ##args);		\
+	}							\
+	static SYSDEV_ATTR(name, S_IRUGO, show_##name, NULL)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#690: FILE: drivers/xen/balloon.c:597:
+	static SYSDEV_ATTR(name, S_IRUGO, show_##name, NULL)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#696: FILE: drivers/xen/balloon.c:603:
+	     (balloon_stats.hard_limit!=~0UL) ? "%lu\n" : "???\n",
 	                              ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#696: FILE: drivers/xen/balloon.c:603:
+	     (balloon_stats.hard_limit!=~0UL) ? "%lu\n" : "???\n",
 	                                ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#697: FILE: drivers/xen/balloon.c:604:
+	     (balloon_stats.hard_limit!=~0UL) ? PAGES2KB(balloon_stats.hard_limit) : 0);
 	                              ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#697: FILE: drivers/xen/balloon.c:604:
+	     (balloon_stats.hard_limit!=~0UL) ? PAGES2KB(balloon_stats.hard_limit) : 0);
 	                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#727: FILE: drivers/xen/balloon.c:634:
+static SYSDEV_ATTR(target_kb, S_IRUGO | S_IWUSR,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#811: FILE: include/xen/balloon.h:1:
+/******************************************************************************

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#849: FILE: include/xen/balloon.h:39:
+#if 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: include/xen/interface/memory.h:32:
+    ulong extent_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: include/xen/interface/memory.h:88:
+    ulong extent_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: include/xen/interface/memory.h:132:
+    ulong gpfn_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: include/xen/interface/memory.h:138:
+    ulong mfn_list;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300124.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 33 warnings, 14 checks, 855 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300124.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
