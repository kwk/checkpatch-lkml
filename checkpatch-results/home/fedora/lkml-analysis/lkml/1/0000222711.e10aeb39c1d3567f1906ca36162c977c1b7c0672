WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: arch/x86/kernel/dumpstack_32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: arch/x86/kernel/dumpstack_32.c:36:
+	symname = kallsyms_lookup(address, &symsize, &offset,
+					&modname, namebuf);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#95: FILE: arch/x86/kernel/dumpstack_32.c:38:
+		printk(" [<%08lx>]\n", address);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#102: FILE: arch/x86/kernel/dumpstack_32.c:45:
+		modname = delim = "";

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: arch/x86/kernel/dumpstack_32.c:46:
+	printk(" [<%08lx>] %s%s%s%s%s+0x%lx/0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: arch/x86/kernel/dumpstack_32.c:47:
+	printk(" [<%08lx>] %s%s%s%s%s+0x%lx/0x%lx\n",
+		address, reliab, delim, modname, delim, symname, offset, symsize);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: arch/x86/kernel/dumpstack_32.c:49:
+	printk(" [<%08lx>]\n", address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/x86/kernel/dumpstack_32.c:54:
+static inline int valid_stack_ptr(struct thread_info *tinfo,
+			void *p, unsigned int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#114: FILE: arch/x86/kernel/dumpstack_32.c:57:
+	void *t = tinfo;
+	return	p > t && p <= t + THREAD_SIZE - size;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/x86/kernel/dumpstack_32.c:68:
+print_context_stack(struct thread_info *tinfo,
+		unsigned long *stack, unsigned long bp,

CHECK:SPACING: No space is necessary after a cast
#135: FILE: arch/x86/kernel/dumpstack_32.c:78:
+			if ((unsigned long) stack == bp + 4) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#138: FILE: arch/x86/kernel/dumpstack_32.c:81:
+				bp = (unsigned long) frame;

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: arch/x86/kernel/dumpstack_32.c:100:
+		unsigned long dummy;
+		stack = &dummy;

CHECK:SPACING: No space is necessary after a cast
#169: FILE: arch/x86/kernel/dumpstack_32.c:112:
+			bp = *(unsigned long *) task->thread.sp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#198: FILE: arch/x86/kernel/dumpstack_32.c:141:
+	printk(data);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#200: FILE: arch/x86/kernel/dumpstack_32.c:143:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: arch/x86/kernel/dumpstack_32.c:148:
+	printk("%s%s\n", (char *)data, msg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#218: FILE: arch/x86/kernel/dumpstack_32.c:161:
+	printk("%s [<%08lx>] ", (char *)data, addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/x86/kernel/dumpstack_32.c:163:
+		printk("? ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: arch/x86/kernel/dumpstack_32.c:177:
+show_trace_log_lvl(struct task_struct *task, struct pt_regs *regs,
+		unsigned long *stack, unsigned long bp, char *log_lvl)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: arch/x86/kernel/dumpstack_32.c:180:
+	printk("%s =======================\n", log_lvl);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sp"
#253: FILE: arch/x86/kernel/dumpstack_32.c:196:
+	if (sp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#265: FILE: arch/x86/kernel/dumpstack_32.c:208:
+			printk("\n%s       ", log_lvl);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: arch/x86/kernel/dumpstack_32.c:209:
+		printk("%08lx ", *stack++);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: arch/x86/kernel/dumpstack_32.c:211:
+	printk("\n%sCall Trace:\n", log_lvl);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#275: FILE: arch/x86/kernel/dumpstack_32.c:218:
+	printk("       ");

ERROR:SPACING: spaces required around that ':' (ctx:VxB)
#289: FILE: arch/x86/kernel/dumpstack_32.c:232:
+		asm("movl %%ebp, %0" : "=r" (bp):);
 		                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/x86/kernel/dumpstack_32.c:235:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: arch/x86/kernel/dumpstack_32.c:236:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",
+		current->pid, current->comm, print_tainted(),

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#301: FILE: arch/x86/kernel/dumpstack_32.c:244:
+EXPORT_SYMBOL(dump_stack);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#310: FILE: arch/x86/kernel/dumpstack_32.c:253:
+	printk(KERN_EMERG "Process %.*s (pid: %d, ti=%p task=%p task.ti=%p)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: arch/x86/kernel/dumpstack_32.c:254:
+	printk(KERN_EMERG "Process %.*s (pid: %d, ti=%p task=%p task.ti=%p)",
+		TASK_COMM_LEN, current->comm, task_pid_nr(current),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#323: FILE: arch/x86/kernel/dumpstack_32.c:266:
+		printk("\n" KERN_EMERG "Stack: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#326: FILE: arch/x86/kernel/dumpstack_32.c:269:
+		printk(KERN_EMERG "Code: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: arch/x86/kernel/dumpstack_32.c:279:
+			if (ip < (u8 *)PAGE_OFFSET ||
+					probe_kernel_address(ip, c)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#337: FILE: arch/x86/kernel/dumpstack_32.c:280:
+				printk(" Bad EIP value.");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#341: FILE: arch/x86/kernel/dumpstack_32.c:284:
+				printk("<%02x> ", c);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#343: FILE: arch/x86/kernel/dumpstack_32.c:286:
+				printk("%02x ", c);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#346: FILE: arch/x86/kernel/dumpstack_32.c:289:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#417: FILE: arch/x86/kernel/dumpstack_32.c:360:
+	printk(KERN_EMERG "%s: %04lx [#%d] ", str, err & 0xffff, ++die_counter);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#419: FILE: arch/x86/kernel/dumpstack_32.c:362:
+	printk("PREEMPT ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#422: FILE: arch/x86/kernel/dumpstack_32.c:365:
+	printk("SMP ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: arch/x86/kernel/dumpstack_32.c:368:
+	printk("DEBUG_PAGEALLOC");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#427: FILE: arch/x86/kernel/dumpstack_32.c:370:
+	printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: arch/x86/kernel/dumpstack_32.c:372:
+	if (notify_die(DIE_OOPS, str, regs, err,
+			current->thread.trap_no, SIGSEGV) == NOTIFY_STOP)

CHECK:SPACING: No space is necessary after a cast
#434: FILE: arch/x86/kernel/dumpstack_32.c:377:
+	sp = (unsigned long) (&regs->sp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#440: FILE: arch/x86/kernel/dumpstack_32.c:383:
+	printk(KERN_EMERG "EIP: [<%08lx>] ", regs->ip);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#442: FILE: arch/x86/kernel/dumpstack_32.c:385:
+	printk(" SS:ESP %04x:%08lx\n", ss, sp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#460: FILE: arch/x86/kernel/dumpstack_32.c:403:
+		printk(KERN_EMERG "Recursive die() failure, output suppressed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'die', this function's name, in a string
#460: FILE: arch/x86/kernel/dumpstack_32.c:403:
+		printk(KERN_EMERG "Recursive die() failure, output suppressed\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#468: FILE: arch/x86/kernel/dumpstack_32.c:411:
+	kstack_depth_to_print = simple_strtoul(s, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#472: FILE: arch/x86/kernel/dumpstack_32.c:415:
+__setup("kstack=", kstack_setup);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#476: FILE: arch/x86/kernel/dumpstack_32.c:419:
+	code_bytes = simple_strtoul(s, NULL, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#482: FILE: arch/x86/kernel/dumpstack_32.c:425:
+__setup("code_bytes=", code_bytes_setup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222711.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 37 warnings, 17 checks, 838 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222711.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
