WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .21
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#172: FILE: drivers/ata/ata_piix.c:1391:
+		dev_printk(KERN_WARNING, host->dev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#180: FILE: drivers/ata/ata_piix.c:1399:
 static void __devinit piix_init_sidpr(struct ata_host *host)

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/md/dm-ioctl.c:707:
+	    invalid_str(new_name, (void *) param + param_size) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#515: FILE: drivers/usb/serial/ftdi_sio.h:889:
+#define ADI_VID ^I^I0x0456$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#516: FILE: drivers/usb/serial/ftdi_sio.h:890:
+#define ADI_GNICE_PID ^I^I0xF000$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#570: FILE: drivers/usb/serial/option.c:405:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_U727) }, /* Novatel MC727/U727/USB727 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#603: FILE: drivers/usb/storage/unusual_devs.h:222:
+UNUSUAL_DEV( 0x0421, 0x0492, 0x0452, 0x9999,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: drivers/usb/storage/unusual_devs.h:223:
+UNUSUAL_DEV( 0x0421, 0x0492, 0x0452, 0x9999,
 		"Nokia",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#613: FILE: drivers/usb/storage/unusual_devs.h:994:
+ * Thomas Bartosik <tbartdev@gmx-topmail.de> */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space prohibited after that open parenthesis '('
#614: FILE: drivers/usb/storage/unusual_devs.h:995:
+UNUSUAL_DEV( 0x067b, 0x2507, 0x0001, 0x0100,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: drivers/usb/storage/unusual_devs.h:996:
+UNUSUAL_DEV( 0x067b, 0x2507, 0x0001, 0x0100,
 		"Prolific Technology Inc.",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#625: FILE: drivers/usb/storage/unusual_devs.h:1413:
+ * interface as an interface driver */

ERROR:SPACING: space prohibited after that open parenthesis '('
#626: FILE: drivers/usb/storage/unusual_devs.h:1414:
+UNUSUAL_DEV( 0x0af0, 0x7501, 0x0000, 0x0000,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: drivers/usb/storage/unusual_devs.h:1415:
+UNUSUAL_DEV( 0x0af0, 0x7501, 0x0000, 0x0000,
+		"Option",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#630: FILE: drivers/usb/storage/unusual_devs.h:1418:
+		0 ),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->ki_filp"
#664: FILE: fs/aio.c:495:
+		if (req->ki_filp != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->ki_eventfd"
#666: FILE: fs/aio.c:497:
+		if (req->ki_eventfd != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->ki_eventfd"
#704: FILE: fs/aio.c:541:
+	if (req->ki_eventfd != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iocb->ki_eventfd"
#719: FILE: fs/aio.c:1011:
+	if (iocb->ki_eventfd != NULL)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#752: FILE: include/asm-x86/msr-index.h:200:
+#define MSR_IA32_MISC_ENABLE_FAST_STRING	(1ULL << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#753: FILE: include/asm-x86/msr-index.h:201:
+#define MSR_IA32_MISC_ENABLE_TCC		(1ULL << 1)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#754: FILE: include/asm-x86/msr-index.h:202:
+#define MSR_IA32_MISC_ENABLE_EMON		(1ULL << 7)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#755: FILE: include/asm-x86/msr-index.h:203:
+#define MSR_IA32_MISC_ENABLE_BTS_UNAVAIL	(1ULL << 11)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#756: FILE: include/asm-x86/msr-index.h:204:
+#define MSR_IA32_MISC_ENABLE_PEBS_UNAVAIL	(1ULL << 12)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#757: FILE: include/asm-x86/msr-index.h:205:
+#define MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP	(1ULL << 16)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#758: FILE: include/asm-x86/msr-index.h:206:
+#define MSR_IA32_MISC_ENABLE_MWAIT		(1ULL << 18)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#759: FILE: include/asm-x86/msr-index.h:207:
+#define MSR_IA32_MISC_ENABLE_LIMIT_CPUID	(1ULL << 22)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#760: FILE: include/asm-x86/msr-index.h:208:
+#define MSR_IA32_MISC_ENABLE_XTPR_DISABLE	(1ULL << 23)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#761: FILE: include/asm-x86/msr-index.h:209:
+#define MSR_IA32_MISC_ENABLE_XD_DISABLE		(1ULL << 34)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#764: FILE: include/asm-x86/msr-index.h:212:
+#define MSR_IA32_MISC_ENABLE_X87_COMPAT		(1ULL << 2)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#765: FILE: include/asm-x86/msr-index.h:213:
+#define MSR_IA32_MISC_ENABLE_TM1		(1ULL << 3)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#766: FILE: include/asm-x86/msr-index.h:214:
+#define MSR_IA32_MISC_ENABLE_SPLIT_LOCK_DISABLE	(1ULL << 4)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#767: FILE: include/asm-x86/msr-index.h:215:
+#define MSR_IA32_MISC_ENABLE_L3CACHE_DISABLE	(1ULL << 6)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#768: FILE: include/asm-x86/msr-index.h:216:
+#define MSR_IA32_MISC_ENABLE_SUPPRESS_LOCK	(1ULL << 8)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#769: FILE: include/asm-x86/msr-index.h:217:
+#define MSR_IA32_MISC_ENABLE_PREFETCH_DISABLE	(1ULL << 9)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#770: FILE: include/asm-x86/msr-index.h:218:
+#define MSR_IA32_MISC_ENABLE_FERR		(1ULL << 10)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#771: FILE: include/asm-x86/msr-index.h:219:
+#define MSR_IA32_MISC_ENABLE_FERR_MULTIPLEX	(1ULL << 10)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#772: FILE: include/asm-x86/msr-index.h:220:
+#define MSR_IA32_MISC_ENABLE_TM2		(1ULL << 13)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#773: FILE: include/asm-x86/msr-index.h:221:
+#define MSR_IA32_MISC_ENABLE_ADJ_PREF_DISABLE	(1ULL << 19)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#774: FILE: include/asm-x86/msr-index.h:222:
+#define MSR_IA32_MISC_ENABLE_SPEEDSTEP_LOCK	(1ULL << 20)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#775: FILE: include/asm-x86/msr-index.h:223:
+#define MSR_IA32_MISC_ENABLE_L1D_CONTEXT	(1ULL << 24)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#776: FILE: include/asm-x86/msr-index.h:224:
+#define MSR_IA32_MISC_ENABLE_DCU_PREF_DISABLE	(1ULL << 37)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#777: FILE: include/asm-x86/msr-index.h:225:
+#define MSR_IA32_MISC_ENABLE_TURBO_DISABLE	(1ULL << 38)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#778: FILE: include/asm-x86/msr-index.h:226:
+#define MSR_IA32_MISC_ENABLE_IP_PREF_DISABLE	(1ULL << 39)

CHECK:BRACES: Unbalanced braces around else statement
#862: FILE: sound/pci/hda/hda_intel.c:2120:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150733.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 9 warnings, 34 checks, 677 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150733.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
