WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#56: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: include/linux/clocklib.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#89: FILE: include/linux/clocklib.h:29:
+	long int (*round_rate)(struct clk *clk, void *data, unsigned long rate, bool apply);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#92: FILE: include/linux/clocklib.h:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: include/linux/clocklib.h:34:
+struct clk *clk_alloc(struct clk *parent, const struct clk_ops *ops,
+		void * data, const char *fmt, ...)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: include/linux/clocklib.h:34:
+		void * data, const char *fmt, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#95: FILE: include/linux/clocklib.h:35:
+		void * data, const char *fmt, ...)
+		__attribute__((format(printf, 4, 5)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 5) over __attribute__((format(printf, 4, 5)))
#95: FILE: include/linux/clocklib.h:35:
+		__attribute__((format(printf, 4, 5)));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: include/linux/clocklib.h:64:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: lib/clocklib.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#158: FILE: lib/clocklib.c:2:
+ * lib/clocklib.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: lib/clocklib.c:27:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: lib/clocklib.c:38:
+static ssize_t clk_usage_show(struct kobject *kobj,
+				struct kobj_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: lib/clocklib.c:58:
+static ssize_t clk_rate_show(struct kobject *kobj,
+				struct kobj_attribute *attr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: lib/clocklib.c:68:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: lib/clocklib.c:115:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: lib/clocklib.c:117:
+struct clk *clk_alloc(struct clk *parent, const struct clk_ops *ops,
+		void * data, const char *fmt, ...)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: lib/clocklib.c:117:
+		void * data, const char *fmt, ...)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: lib/clocklib.c:141:
+	rc = kobject_init_and_add(&clk->kobj, &clk_ktype,
+			parent? &parent->kobj : NULL,

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#297: FILE: lib/clocklib.c:141:
+			parent? &parent->kobj : NULL,
 			      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: lib/clocklib.c:158:
+	unsigned long flags;
+	spin_lock_irqsave(&clocks_lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: lib/clocklib.c:173:
+	int rc = 0;
+	for (i = 0; i < size; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: lib/clocklib.c:176:
+		struct clk *clk;
+		if (clks[i].parent_name) {

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#346: FILE: lib/clocklib.c:190:
+			i --;
 			  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: lib/clocklib.c:208:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: lib/clocklib.c:225:
+			if (p->ops && p->ops->can_get &&
+					p->ops->can_get(p, p->data, dev)) {

ERROR:SPACING: space required one side of that '++' (ctx:WxW)
#425: FILE: lib/clocklib.c:269:
+	if (clk->usage ++ != 0)
 	               ^

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#434: FILE: lib/clocklib.c:278:
+		clk->usage --;
 		           ^

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#456: FILE: lib/clocklib.c:300:
+	clk->usage --;
 	           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#539: FILE: lib/clocklib.c:383:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#550: FILE: lib/clocklib.c:394:
+	printk("!!! %sable: %s (%s)\n", enable? "en": "dis",

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#550: FILE: lib/clocklib.c:394:
+	printk("!!! %sable: %s (%s)\n", enable? "en": "dis",
 	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#550: FILE: lib/clocklib.c:394:
+	printk("!!! %sable: %s (%s)\n", enable? "en": "dis",
 	                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: lib/clocklib.c:395:
+	printk("!!! %sable: %s (%s)\n", enable? "en": "dis",
+				kobject_name(&clk->kobj),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#554: FILE: lib/clocklib.c:398:
+	BUG_ON(!parent);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#571: FILE: lib/clocklib.c:415:
+	BUG_ON(!parent);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000276610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 13 warnings, 14 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000276610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
