WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .6
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#50: FILE: arch/x86/kernel/cpuid.c:195:
+	if (__register_chrdev(CPUID_MAJOR, 0, NR_CPUS,

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#60: FILE: arch/x86/kernel/cpuid.c:225:
+	__unregister_chrdev(CPUID_MAJOR, 0, NR_CPUS, "cpu/cpuid");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#73: FILE: arch/x86/kernel/msr.c:254:
+	if (__register_chrdev(MSR_MAJOR, 0, NR_CPUS, "cpu/msr", &msr_fops)) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#82: FILE: arch/x86/kernel/msr.c:282:
+	__unregister_chrdev(MSR_MAJOR, 0, NR_CPUS, "cpu/msr");

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: arch/x86/pci/i386.c:287:
+ ^I * Return error if pat is not enabled and write_combine is requested.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: arch/x86/pci/i386.c:287:
+ ^I * Return error if pat is not enabled and write_combine is requested.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: arch/x86/pci/i386.c:288:
+ ^I * Caller can followup with UC MINUS request and add a WC mtrr if there$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: arch/x86/pci/i386.c:288:
+ ^I * Caller can followup with UC MINUS request and add a WC mtrr if there$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/x86/pci/i386.c:289:
+ ^I * is a free mtrr slot.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: arch/x86/pci/i386.c:289:
+ ^I * is a free mtrr slot.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/x86/pci/i386.c:290:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: arch/x86/pci/i386.c:290:
+ ^I */$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#200: FILE: drivers/acpi/ec.c:309:
+	if (test_bit(EC_FLAGS_GPE_STORM, &ec->flags)) {
+		acpi_disable_gpe(NULL, ec->gpe);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#209: FILE: drivers/acpi/ec.c:318:
+		msleep(1);

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: drivers/acpi/ec.c:323:
+		pr_info(PREFIX "GPE storm detected, "
+			"transactions will use polling mode\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: drivers/acpi/ec.c:448:
+static int acpi_ec_query_unlocked(struct acpi_ec *ec, u8 * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: drivers/acpi/ec.c:513:
+	struct acpi_ec_query_handler *handler = cxt;
+	if (!handler)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: drivers/acpi/ec.c:529:
+	struct acpi_ec_query_handler *handler, *copy;
+	if ((status = acpi_ec_query_unlocked(ec, &value)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#282: FILE: drivers/acpi/ec.c:529:
+	if ((status = acpi_ec_query_unlocked(ec, &value)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#310: FILE: drivers/acpi/ec.c:549:
+	struct acpi_ec *ec = ec_cxt;
+	if (!ec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/gpu/drm/i915/intel_sdvo.c:509:
+	intel_sdvo_debug_write(intel_output, SDVO_CMD_SET_CONTROL_BUS_SWITCH,
+					&target, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/gpu/drm/i915/intel_sdvo.c:528:
+		DRM_DEBUG_KMS("DDC switch command returns response %d\n",
+					ret_value[0]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edid"
#458: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1642:
+	if (edid == NULL && intel_sdvo_multifunc_encoder(intel_output)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#459: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1643:
+		uint8_t saved_ddc, temp_ddc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#460: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1644:
+		uint8_t saved_ddc, temp_ddc;
+		saved_ddc = sdvo_priv->ddc_bus;

ERROR:SPACING: space required before the open parenthesis '('
#466: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1650:
+		while(temp_ddc > 1) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1653:
+			edid = drm_get_edid(&intel_output->base,
+				intel_output->ddc_bus);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edid"
#480: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1664:
+		if (edid == NULL)

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/md/dm-table.c:510:
+		       (unsigned long long) start << SECTOR_SHIFT);

WARNING:SPLIT_STRING: quoted string split across lines
#518: FILE: drivers/md/dm-table.c:1029:
 			       "(start sect %llu len %llu) "
+			       "caused an alignment inconsistency",

WARNING:LINE_SPACING: Missing a blank line after declarations
#641: FILE: drivers/staging/asus_oled/asus_oled.c:198:
+	unsigned long value;
+	if (strict_strtoul(buf, 10, &value))

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#641: FILE: drivers/staging/asus_oled/asus_oled.c:198:
+	if (strict_strtoul(buf, 10, &value))

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#656: FILE: drivers/staging/asus_oled/asus_oled.c:214:
+	if (strict_strtoul(buf, 10, &value))

CHECK:CAMELCASE: Avoid CamelCase: <HvSynicInit>
#673: FILE: drivers/staging/hv/Hv.c:389:
+void HvSynicInit(void *irqarg)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <irqVector>
#682: FILE: drivers/staging/hv/Hv.c:397:
+	u32 irqVector = *((u32 *)(irqarg));

CHECK:CAMELCASE: Avoid CamelCase: <gHvContext>
#699: FILE: drivers/staging/hv/Hv.c:429:
+			gHvContext.synICMessagePage[cpu] =

CHECK:CAMELCASE: Avoid CamelCase: <synICMessagePage>
#699: FILE: drivers/staging/hv/Hv.c:429:
+			gHvContext.synICMessagePage[cpu] =

CHECK:CAMELCASE: Avoid CamelCase: <synICEventPage>
#702: FILE: drivers/staging/hv/Hv.c:431:
+			gHvContext.synICEventPage[cpu] =

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gHvContext.synICMessagePage[cpu]"
#717: FILE: drivers/staging/hv/Hv.c:442:
+		if (gHvContext.synICMessagePage[cpu] == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gHvContext.synICEventPage[cpu]"
#726: FILE: drivers/staging/hv/Hv.c:449:
+		if (gHvContext.synICEventPage[cpu] == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <BaseSimpGpa>
#735: FILE: drivers/staging/hv/Hv.c:458:
+		simp.BaseSimpGpa = virt_to_phys(gHvContext.synICMessagePage[cpu])

CHECK:CAMELCASE: Avoid CamelCase: <BaseSiefpGpa>
#744: FILE: drivers/staging/hv/Hv.c:469:
+		siefp.BaseSiefpGpa = virt_to_phys(gHvContext.synICEventPage[cpu])

CHECK:CAMELCASE: Avoid CamelCase: <osd_PageFree>
#762: FILE: drivers/staging/hv/Hv.c:510:
+			osd_PageFree(gHvContext.synICEventPage[cpu], 1);

CHECK:CAMELCASE: Avoid CamelCase: <HvSynicCleanup>
#780: FILE: drivers/staging/hv/Hv.c:523:
+void HvSynicCleanup(void *arg)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#826: FILE: drivers/staging/hv/Hv.h:140:
+extern void HvSynicInit(void *irqarg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#829: FILE: drivers/staging/hv/Hv.h:142:
+extern void HvSynicCleanup(void *arg);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#909: FILE: drivers/usb/core/hub.c:3290:
+					msleep(10);

WARNING:SPLIT_STRING: quoted string split across lines
#1006: FILE: drivers/usb/host/ehci-hub.c:136:
+				ehci_dbg(ehci, "suspend failed because "
+						"port %d is resuming\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/usb/host/uhci-hcd.c:761:
+	else if (hcd->self.root_hub->do_remote_wakeup &&
+			uhci->resuming_ports) {

WARNING:SPLIT_STRING: quoted string split across lines
#1073: FILE: drivers/usb/host/uhci-hcd.c:763:
+		dev_dbg(uhci_dev(uhci), "suspend failed because a port "
+				"is resuming\n");

CHECK:BRACES: Unbalanced braces around else statement
#1075: FILE: drivers/usb/host/uhci-hcd.c:765:
+	} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1189: FILE: fs/ecryptfs/file.c:205:
+	if ((ecryptfs_inode_to_private(inode)->lower_file->f_flags & O_RDONLY)
+	    && !(file->f_flags & O_RDONLY)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1191: FILE: fs/ecryptfs/file.c:207:
+		printk(KERN_WARNING "%s: Lower persistent file is RO; eCryptfs "

WARNING:SPLIT_STRING: quoted string split across lines
#1192: FILE: fs/ecryptfs/file.c:208:
+		printk(KERN_WARNING "%s: Lower persistent file is RO; eCryptfs "
+		       "file must hence be opened RO\n", __func__);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1206: FILE: include/linux/blkdev.h:945:
+extern int bdev_stack_limits(struct queue_limits *t, struct block_device *bdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1207: FILE: include/linux/blkdev.h:946:
+extern int bdev_stack_limits(struct queue_limits *t, struct block_device *bdev,
+			    sector_t offset);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000020177.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 26 warnings, 25 checks, 1112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000020177.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
