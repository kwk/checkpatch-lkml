WARNING:BAD_SIGN_OFF: Non-standard signature: Inspired-by:
#35: 
Inspired-by: Luming Yu <luming.yu@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#51: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:REPEATED_WORD: Possible repeated word: 'send'
#76: FILE: Documentation/ABI/testing/sysfs-firmware-acpi:21:
+		Or the handler may send send a Notify event

CHECK:BRACES: braces {} should be used on all arms of this statement
#194: FILE: drivers/acpi/osl.c:339:
+	if (handled) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#197: FILE: drivers/acpi/osl.c:342:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#247: FILE: drivers/acpi/system.c:190:
+};
+static struct kobj_attribute *counter_attrs;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#291: FILE: drivers/acpi/system.c:234:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#306: FILE: drivers/acpi/system.c:249:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#319: FILE: drivers/acpi/system.c:262:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/acpi/system.c:265:
+static ssize_t counter_show(struct kobject *kobj,
+	struct kobj_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/acpi/system.c:280:
+static ssize_t counter_set(struct kobject *kobj,
+	struct kobj_attribute *attr, const char *buf, size_t size)

CHECK:BRACES: braces {} should be used on all arms of this statement
#341: FILE: drivers/acpi/system.c:284:
+	if (index == num_gpes + ACPI_NUM_FIXED_EVENTS + COUNT_SCI) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: drivers/acpi/system.c:286:
+		int i;
+		for (i = 0; i < num_counters; ++i)

CHECK:BRACES: Unbalanced braces around else statement
#348: FILE: drivers/acpi/system.c:291:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: drivers/acpi/system.c:308:
+	all_attrs = kzalloc(sizeof(struct attribute *) * (num_counters + 1),
+			GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!all_attrs"
#366: FILE: drivers/acpi/system.c:309:
+	if (all_attrs == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!all_counters"
#370: FILE: drivers/acpi/system.c:313:
+	if (all_counters == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*counter_attrs)...) over kzalloc(sizeof(struct kobj_attribute)...)
#373: FILE: drivers/acpi/system.c:316:
+	counter_attrs = kzalloc(sizeof(struct kobj_attribute) * (num_counters),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/acpi/system.c:317:
+	counter_attrs = kzalloc(sizeof(struct kobj_attribute) * (num_counters),
+			GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!counter_attrs"
#375: FILE: drivers/acpi/system.c:318:
+	if (counter_attrs == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#404: FILE: drivers/acpi/system.c:347:
+		if (name == NULL)

WARNING:RETURN_VOID: void function return statements are not generally useful
#423: FILE: drivers/acpi/system.c:366:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#432: FILE: drivers/acpi/system.c:375:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 14 checks, 397 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
