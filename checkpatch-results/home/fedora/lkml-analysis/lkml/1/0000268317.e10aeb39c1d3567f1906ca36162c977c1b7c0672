WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git davem-next

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#104: FILE: drivers/net/Kconfig:527:
+config SH_ETH
+	tristate "Renesas SuperH Ethernet support"
+	depends on SUPERH && \
+		(CPU_SUBTYPE_SH7710 || CPU_SUBTYPE_SH7712)
+	select CRC32
+	select MII
+	select MDIO_BITBANG
+	select PHYLIB
+	help
+	  Renesas SuperH Ethernet device driver.
+	  This driver support SH7710 and SH7712.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#326: FILE: drivers/net/mac8390.c:235:
+static enum mac8390_access __init mac8390_testio(volatile unsigned long membase)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#430: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#435: FILE: drivers/net/sh_eth.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#450: FILE: drivers/net/sh_eth.c:16:
+ *  this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#451: FILE: drivers/net/sh_eth.c:17:
+ *  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#472: FILE: drivers/net/sh_eth.c:38:
+/*
+ * Program the hardware MAC address from dev->dev_addr.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#486: FILE: drivers/net/sh_eth.c:52:
+/*
+ * Get MAC address from SuperH MAC address register

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/net/sh_eth.c:102:
+	struct bb_info *bitbang = container_of(ctrl, struct bb_info, ctrl);
+	if (bit)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#557: FILE: drivers/net/sh_eth.c:123:
+	struct bb_info *bitbang = container_of(ctrl, struct bb_info, ctrl);
+	return bb_read(bitbang->addr, bitbang->mdi_msk);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#625: FILE: drivers/net/sh_eth.c:191:
+	mdp->cur_rx = mdp->cur_tx = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#626: FILE: drivers/net/sh_eth.c:192:
+	mdp->dirty_rx = mdp->dirty_tx = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#636: FILE: drivers/net/sh_eth.c:202:
+		if (skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#650: FILE: drivers/net/sh_eth.c:216:
+	mdp->dirty_rx = (u32) (i - RX_RING_SIZE);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#675: FILE: drivers/net/sh_eth.c:241:
+	/*
+	 * +26 gets the maximum ethernet encapsulation, +7 & ~7 because the

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: drivers/net/sh_eth.c:251:
+	mdp->rx_skbuff = kmalloc(sizeof(*mdp->rx_skbuff) * RX_RING_SIZE,
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#687: FILE: drivers/net/sh_eth.c:253:
+		printk(KERN_ERR "%s: Cannot allocate Rx skb\n", ndev->name);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#687: FILE: drivers/net/sh_eth.c:253:
+	if (!mdp->rx_skbuff) {
+		printk(KERN_ERR "%s: Cannot allocate Rx skb\n", ndev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: drivers/net/sh_eth.c:259:
+	mdp->tx_skbuff = kmalloc(sizeof(*mdp->tx_skbuff) * TX_RING_SIZE,
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#695: FILE: drivers/net/sh_eth.c:261:
+		printk(KERN_ERR "%s: Cannot allocate Tx skb\n", ndev->name);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#695: FILE: drivers/net/sh_eth.c:261:
+	if (!mdp->tx_skbuff) {
+		printk(KERN_ERR "%s: Cannot allocate Tx skb\n", ndev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: drivers/net/sh_eth.c:269:
+	mdp->rx_ring = dma_alloc_coherent(NULL, rx_ringsize, &mdp->rx_desc_dma,
+			GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#706: FILE: drivers/net/sh_eth.c:272:
+		printk(KERN_ERR "%s: Cannot allocate Rx Ring (size %d bytes)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: drivers/net/sh_eth.c:273:
+		printk(KERN_ERR "%s: Cannot allocate Rx Ring (size %d bytes)\n",
+			ndev->name, rx_ringsize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: drivers/net/sh_eth.c:283:
+	mdp->tx_ring = dma_alloc_coherent(NULL, tx_ringsize, &mdp->tx_desc_dma,
+			GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#719: FILE: drivers/net/sh_eth.c:285:
+		printk(KERN_ERR "%s: Cannot allocate Tx Ring (size %d bytes)\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#719: FILE: drivers/net/sh_eth.c:285:
+	if (!mdp->tx_ring) {
+		printk(KERN_ERR "%s: Cannot allocate Tx Ring (size %d bytes)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: drivers/net/sh_eth.c:286:
+		printk(KERN_ERR "%s: Cannot allocate Tx Ring (size %d bytes)\n",
+			ndev->name, tx_ringsize);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#742: FILE: drivers/net/sh_eth.c:308:
+	u_int32_t rx_int_var, tx_int_var;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#761: FILE: drivers/net/sh_eth.c:327:
+	rx_int_var = mdp->rx_int_var = DESC_I_RINT8 | DESC_I_RINT5;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#762: FILE: drivers/net/sh_eth.c:328:
+	tx_int_var = mdp->tx_int_var = DESC_I_TINT2;

CHECK:CAMELCASE: Avoid CamelCase: <freeNum>
#810: FILE: drivers/net/sh_eth.c:376:
+	int freeNum = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdp->rx_skbuff[entry]"
#891: FILE: drivers/net/sh_eth.c:457:
+		if (mdp->rx_skbuff[entry] == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#894: FILE: drivers/net/sh_eth.c:460:
+			if (skb == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#932: FILE: drivers/net/sh_eth.c:498:
+			u32 link_stat = (ctrl_inl(ioaddr + PSR));
+			if (!(link_stat & PHY_ST_LINK)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#963: FILE: drivers/net/sh_eth.c:529:
+			printk(KERN_ERR "Receive Frame Overflow\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#980: FILE: drivers/net/sh_eth.c:546:
+		printk(KERN_ERR "Receive Descriptor Empty\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#985: FILE: drivers/net/sh_eth.c:551:
+		printk(KERN_ERR "Receive FIFO Overflow\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#992: FILE: drivers/net/sh_eth.c:558:
+		printk(KERN_ERR "%s:TX error. status=%8.8x cur_tx=%8.8x ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/net/sh_eth.c:559:
+		printk(KERN_ERR "%s:TX error. status=%8.8x cur_tx=%8.8x ",
+				ndev->name, intr_status, mdp->cur_tx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#994: FILE: drivers/net/sh_eth.c:560:
+		printk(KERN_ERR "dirty_tx=%8.8x state=%8.8x EDTRR=%8.8x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#995: FILE: drivers/net/sh_eth.c:561:
+		printk(KERN_ERR "dirty_tx=%8.8x state=%8.8x EDTRR=%8.8x.\n",
+				mdp->dirty_tx, (u32) ndev->state, edtrr);

CHECK:SPACING: No space is necessary after a cast
#995: FILE: drivers/net/sh_eth.c:561:
+				mdp->dirty_tx, (u32) ndev->state, edtrr);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1029: FILE: drivers/net/sh_eth.c:595:
+			   EESR_TINT4 | EESR_TINT3 | EESR_TINT2 | EESR_TINT1)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1038: FILE: drivers/net/sh_eth.c:604:
+		printk(KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1104: FILE: drivers/net/sh_eth.c:670:
+	snprintf(phy_id, BUS_ID_SIZE, PHY_ID_FMT,
+		mdp->mii_bus->id , mdp->phy_id);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1104: FILE: drivers/net/sh_eth.c:670:
+		mdp->mii_bus->id , mdp->phy_id);
 		                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/net/sh_eth.c:678:
+	phydev = phy_connect(ndev, phy_id, &sh_eth_adjust_link,
+				0, PHY_INTERFACE_MODE_MII);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1118: FILE: drivers/net/sh_eth.c:684:
+	dev_info(&ndev->dev, "attached phy %i to driver %s\n",
+	phydev->addr, phydev->drv->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1150: FILE: drivers/net/sh_eth.c:716:
+		printk(KERN_ERR "Can not assign IRQ number to %s\n", CARDNAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1192: FILE: drivers/net/sh_eth.c:758:
+	printk(KERN_WARNING "%s: transmit timed out, status %8.8x,"

WARNING:SPLIT_STRING: quoted string split across lines
#1193: FILE: drivers/net/sh_eth.c:759:
+	printk(KERN_WARNING "%s: transmit timed out, status %8.8x,"
+	       " resetting...\n", ndev->name, (int)ctrl_inl(ioaddr + EESR));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/net/sh_eth.c:893:
+static int sh_eth_do_ioctl(struct net_device *ndev, struct ifreq *rq,
+				int cmd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1341: FILE: drivers/net/sh_eth.c:907:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bitbang)...) over kzalloc(sizeof(struct bb_info)...)
#1407: FILE: drivers/net/sh_eth.c:973:
+	bitbang = kzalloc(sizeof(struct bb_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1434: FILE: drivers/net/sh_eth.c:1000:
+	mdp->mii_bus->irq = kmalloc(sizeof(int)*PHY_MAX_ADDR, GFP_KERNEL);
 	                                       ^

WARNING:TYPO_SPELLING: 'regist' may be misspelled - perhaps 'register'?
#1443: FILE: drivers/net/sh_eth.c:1009:
+	/* regist mdio bus */
 	   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#1474: FILE: drivers/net/sh_eth.c:1040:
+	if (unlikely(res == NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1482: FILE: drivers/net/sh_eth.c:1048:
+		printk(KERN_ERR "%s: could not allocate device.\n", CARDNAME);

WARNING:TYPO_SPELLING: 'infomation' may be misspelled - perhaps 'information'?
#1547: FILE: drivers/net/sh_eth.c:1113:
+	/* pritnt device infomation */
 	                 ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1548: FILE: drivers/net/sh_eth.c:1114:
+	printk(KERN_INFO "%s: %s at 0x%x, ",

CHECK:SPACING: No space is necessary after a cast
#1549: FILE: drivers/net/sh_eth.c:1115:
+	       ndev->name, CARDNAME, (u32) ndev->base_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1552: FILE: drivers/net/sh_eth.c:1118:
+		printk(KERN_INFO "%2.2x:", ndev->dev_addr[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1553: FILE: drivers/net/sh_eth.c:1119:
+	printk(KERN_INFO "%2.2x, IRQ %d.\n", ndev->dev_addr[i], ndev->irq);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1615: FILE: drivers/net/sh_eth.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1630: FILE: drivers/net/sh_eth.h:16:
+ *  this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1631: FILE: drivers/net/sh_eth.h:17:
+ *  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1648: FILE: drivers/net/sh_eth.h:34:
+#define TX_TIMEOUT	(5*HZ)
                   	  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1705: FILE: drivers/net/sh_eth.h:91:
+#define MPR ^I0x01BC$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1726: FILE: drivers/net/sh_eth.h:112:
+#define TSU_ADQT0 ^I0x048$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1835: FILE: drivers/net/sh_eth.h:221:
+};
+#define RDF1ST	RC_RFP1

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1837: FILE: drivers/net/sh_eth.h:223:
+#define RD_RFP	(RC_RFP1|RC_RFP0)
               	        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1845: FILE: drivers/net/sh_eth.h:231:
+};
+#define FIFO_F_D_RFF	(FCFTR_RFF2|FCFTR_RFF1|FCFTR_RFF0)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1845: FILE: drivers/net/sh_eth.h:231:
+#define FIFO_F_D_RFF	(FCFTR_RFF2|FCFTR_RFF1|FCFTR_RFF0)
                     	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1845: FILE: drivers/net/sh_eth.h:231:
+#define FIFO_F_D_RFF	(FCFTR_RFF2|FCFTR_RFF1|FCFTR_RFF0)
                     	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1846: FILE: drivers/net/sh_eth.h:232:
+#define FIFO_F_D_RFD	(FCFTR_RFD2|FCFTR_RFD1|FCFTR_RFD0)
                     	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1846: FILE: drivers/net/sh_eth.h:232:
+#define FIFO_F_D_RFD	(FCFTR_RFD2|FCFTR_RFD1|FCFTR_RFD0)
                     	                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1853: FILE: drivers/net/sh_eth.h:239:
+};
+#define TDF1ST	TD_TFP1

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1855: FILE: drivers/net/sh_eth.h:241:
+#define TD_TFP	(TD_TFP1|TD_TFP0)
               	        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1908: FILE: drivers/net/sh_eth.h:294:
+};
+enum phy_offsets {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1920: FILE: drivers/net/sh_eth.h:306:
+};
+#define DM9161_PHY_C_ANEGEN 0	/* auto nego special */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1937: FILE: drivers/net/sh_eth.h:323:
+};
+/* PHY_ANL */

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_Repeatmode>
#1954: FILE: drivers/net/sh_eth.h:340:
+	PHY_16_BP_ADPOK = 0x1000, PHY_16_Repeatmode = 0x0800,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_TXselect>
#1955: FILE: drivers/net/sh_eth.h:341:
+	PHY_16_TXselect = 0x0400,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_Rsvd>
#1956: FILE: drivers/net/sh_eth.h:342:
+	PHY_16_Rsvd = 0x0200, PHY_16_RMIIEnable = 0x0100,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_RMIIEnable>
#1956: FILE: drivers/net/sh_eth.h:342:
+	PHY_16_Rsvd = 0x0200, PHY_16_RMIIEnable = 0x0100,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_Force100LNK>
#1957: FILE: drivers/net/sh_eth.h:343:
+	PHY_16_Force100LNK = 0x0080,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_ResetStMch>
#1960: FILE: drivers/net/sh_eth.h:346:
+	PHY_16_ResetStMch = 0x0008, PHY_16_PreamSupr = 0x0004,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_PreamSupr>
#1960: FILE: drivers/net/sh_eth.h:346:
+	PHY_16_ResetStMch = 0x0008, PHY_16_PreamSupr = 0x0004,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_Sleepmode>
#1961: FILE: drivers/net/sh_eth.h:347:
+	PHY_16_Sleepmode = 0x0002,

CHECK:CAMELCASE: Avoid CamelCase: <PHY_16_RemoteLoopOut>
#1962: FILE: drivers/net/sh_eth.h:348:
+	PHY_16_RemoteLoopOut = 0x0001,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2008: FILE: drivers/net/sh_eth.h:394:
+/*
+ * The sh ether Tx buffer descriptors.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2025: FILE: drivers/net/sh_eth.h:411:
+/*
+ * The sh ether Rx buffer descriptors.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2050: FILE: drivers/net/sh_eth.h:436:
+	spinlock_t lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2073: FILE: drivers/net/sh_eth.h:459:
+	u32 *maxp;
+	maxp = p + ((len + sizeof(u32) - 1) / sizeof(u32));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#2145: FILE: drivers/net/smc911x.c:156:
+#define SMC_ENABLE_INT(lp, x) do {			\
 	unsigned int  __mask;				\
 	unsigned long __flags;				\
 	spin_lock_irqsave(&lp->lock, __flags);		\
+	__mask = SMC_GET_INT_EN((lp));			\
 	__mask |= (x);					\
+	SMC_SET_INT_EN((lp), __mask);			\
 	spin_unlock_irqrestore(&lp->lock, __flags);	\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lp' may be better as '(lp)' to avoid precedence issues
#2145: FILE: drivers/net/smc911x.c:156:
+#define SMC_ENABLE_INT(lp, x) do {			\
 	unsigned int  __mask;				\
 	unsigned long __flags;				\
 	spin_lock_irqsave(&lp->lock, __flags);		\
+	__mask = SMC_GET_INT_EN((lp));			\
 	__mask |= (x);					\
+	SMC_SET_INT_EN((lp), __mask);			\
 	spin_unlock_irqrestore(&lp->lock, __flags);	\
 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#2159: FILE: drivers/net/smc911x.c:167:
+#define SMC_DISABLE_INT(lp, x) do {			\
 	unsigned int  __mask;				\
 	unsigned long __flags;				\
 	spin_lock_irqsave(&lp->lock, __flags);		\
+	__mask = SMC_GET_INT_EN((lp));			\
 	__mask &= ~(x);					\
+	SMC_SET_INT_EN((lp), __mask);			\
 	spin_unlock_irqrestore(&lp->lock, __flags);	\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lp' may be better as '(lp)' to avoid precedence issues
#2159: FILE: drivers/net/smc911x.c:167:
+#define SMC_DISABLE_INT(lp, x) do {			\
 	unsigned int  __mask;				\
 	unsigned long __flags;				\
 	spin_lock_irqsave(&lp->lock, __flags);		\
+	__mask = SMC_GET_INT_EN((lp));			\
 	__mask &= ~(x);					\
+	SMC_SET_INT_EN((lp), __mask);			\
 	spin_unlock_irqrestore(&lp->lock, __flags);	\
 } while (0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#2220: FILE: drivers/net/smc911x.c:229:
+	while ( timeout-- && (SMC_GET_E2P_CMD(lp) & E2P_CMD_EPC_BUSY_)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2220: FILE: drivers/net/smc911x.c:229:
+	while ( timeout-- && (SMC_GET_E2P_CMD(lp) & E2P_CMD_EPC_BUSY_)) {
 		udelay(10);
 	}

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2297: FILE: drivers/net/smc911x.c:297:
+	SMC_SET_RX_CFG(lp, (2<<8) & RX_CFG_RXDOFF_);
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2411: FILE: drivers/net/smc911x.c:431:
+		SMC_SET_RX_CFG(lp, RX_CFG_RX_END_ALGN16_ | ((2<<8) & RX_CFG_RXDOFF_));
 		                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2415: FILE: drivers/net/smc911x.c:434:
+		SMC_PULL_DATA(lp, data, (pkt_len+2+15) & ~15);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2415: FILE: drivers/net/smc911x.c:434:
+		SMC_PULL_DATA(lp, data, (pkt_len+2+15) & ~15);
 		                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2421: FILE: drivers/net/smc911x.c:438:
+		SMC_SET_RX_CFG(lp, RX_CFG_RX_END_ALGN4_ | ((2<<8) & RX_CFG_RXDOFF_));
 		                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2422: FILE: drivers/net/smc911x.c:439:
+		SMC_PULL_DATA(lp, data, pkt_len+2+3);
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2422: FILE: drivers/net/smc911x.c:439:
+		SMC_PULL_DATA(lp, data, pkt_len+2+3);
 		                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2489: FILE: drivers/net/smc911x.c:540:
+		SMC_SET_FIFO_TDA(lp, (SMC911X_TX_FIFO_LOW_THRESHOLD)/64);
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2772: FILE: drivers/net/smc911x.c:997:
+	SMC_GET_PHY_INT_SRC(lp, phyaddr,status);
 	                               ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#2833: FILE: drivers/net/smc911x.c:1058:
+			dev->stats.rx_dropped+=SMC_GET_RX_DROP(lp);
 			                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3342: FILE: drivers/net/smc911x.c:2182:
+			SMC_SET_PMT_CTRL(lp, 2<<12);
 			                      ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3368: FILE: drivers/net/smc911x.h:47:
+/*
+ * Default configuration

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3377: FILE: drivers/net/smc911x.h:56:
+	/*
+	 * If I have to wait until the DMA is finished and ready to reload a

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3406: FILE: drivers/net/smc911x.h:85:
+	spinlock_t lock;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3442: FILE: drivers/net/smc911x.h:121:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3461: FILE: drivers/net/smc911x.h:140:
+	BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3465: FILE: drivers/net/smc911x.h:144:
+static inline void SMC_insl(struct smc911x_local *lp, int reg,
+			      void *addr, unsigned int count)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3479: FILE: drivers/net/smc911x.h:158:
+	BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3497: FILE: drivers/net/smc911x.h:176:
+	BUG();

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#3507: FILE: drivers/net/smc911x.h:180:
+#define SMC_inl(lp, r)		 ((readw((lp)->base + (r)) & 0xFFFF) + (readw((lp)->base + (r) + 2) << 16))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3507: FILE: drivers/net/smc911x.h:180:
+#define SMC_inl(lp, r)		 ((readw((lp)->base + (r)) & 0xFFFF) + (readw((lp)->base + (r) + 2) << 16))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'r' - possible side-effects?
#3507: FILE: drivers/net/smc911x.h:180:
+#define SMC_inl(lp, r)		 ((readw((lp)->base + (r)) & 0xFFFF) + (readw((lp)->base + (r) + 2) << 16))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3508: FILE: drivers/net/smc911x.h:181:
+#define SMC_outl(v, lp, r) ^I^I^I \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'v' - possible side-effects?
#3508: FILE: drivers/net/smc911x.h:181:
+#define SMC_outl(v, lp, r) 			 \
 	do{					 \
+		 writew(v & 0xFFFF, (lp)->base + (r));	 \
+		 writew(v >> 16, (lp)->base + (r) + 2); \
 	 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#3508: FILE: drivers/net/smc911x.h:181:
+#define SMC_outl(v, lp, r) 			 \
 	do{					 \
+		 writew(v & 0xFFFF, (lp)->base + (r));	 \
+		 writew(v >> 16, (lp)->base + (r) + 2); \
 	 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3508: FILE: drivers/net/smc911x.h:181:
+#define SMC_outl(v, lp, r) 			 \
 	do{					 \
+		 writew(v & 0xFFFF, (lp)->base + (r));	 \
+		 writew(v >> 16, (lp)->base + (r) + 2); \
 	 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'r' - possible side-effects?
#3508: FILE: drivers/net/smc911x.h:181:
+#define SMC_outl(v, lp, r) 			 \
 	do{					 \
+		 writew(v & 0xFFFF, (lp)->base + (r));	 \
+		 writew(v >> 16, (lp)->base + (r) + 2); \
 	 } while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#3509: FILE: drivers/net/smc911x.h:182:
 	do{					 \
+		 writew(v & 0xFFFF, (lp)->base + (r));	 \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3517: FILE: drivers/net/smc911x.h:186:
+#define SMC_insl(lp, r, p, l)	 readsw((short*)((lp)->base + (r)), p, l*2)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3517: FILE: drivers/net/smc911x.h:186:
+#define SMC_insl(lp, r, p, l)	 readsw((short*)((lp)->base + (r)), p, l*2)
                              	                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'l' may be better as '(l)' to avoid precedence issues
#3517: FILE: drivers/net/smc911x.h:186:
+#define SMC_insl(lp, r, p, l)	 readsw((short*)((lp)->base + (r)), p, l*2)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3518: FILE: drivers/net/smc911x.h:187:
+#define SMC_outsl(lp, r, p, l)	 writesw((short*)((lp)->base + (r)), p, l*2)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3518: FILE: drivers/net/smc911x.h:187:
+#define SMC_outsl(lp, r, p, l)	 writesw((short*)((lp)->base + (r)), p, l*2)
                               	                                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'l' may be better as '(l)' to avoid precedence issues
#3518: FILE: drivers/net/smc911x.h:187:
+#define SMC_outsl(lp, r, p, l)	 writesw((short*)((lp)->base + (r)), p, l*2)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3530: FILE: drivers/net/smc911x.h:192:
+#define SMC_insl(lp, r, p, l)	 readsl((int*)((lp)->base + (r)), p, l)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3531: FILE: drivers/net/smc911x.h:193:
+#define SMC_outsl(lp, r, p, l)	 writesl((int*)((lp)->base + (r)), p, l)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3545: FILE: drivers/net/smc911x.h:233:
+#define SMC_insl(lp, r, p, l) \
+	smc_pxa_dma_insl(lp, lp->physaddr, r, lp->rxdma, p, l)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3551: FILE: drivers/net/smc911x.h:238:
+smc_pxa_dma_insl(struct smc911x_local *lp, u_long physaddr,
 		int reg, int dma, u_char *buf, int len)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3603: FILE: drivers/net/smc911x.h:261:
+#define SMC_outsl(lp, r, p, l) \
+	 smc_pxa_dma_outsl(lp, lp->physaddr, r, lp->txdma, p, l)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3609: FILE: drivers/net/smc911x.h:266:
+smc_pxa_dma_outsl(struct smc911x_local *lp, u_long physaddr,
 		int reg, int dma, u_char *buf, int len)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3669: FILE: drivers/net/smc911x.h:695:
+#define SMC_PUSH_DATA(lp, p, l)	SMC_outsl( lp, TX_DATA_FIFO, p, (l) >> 2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3669: FILE: drivers/net/smc911x.h:695:
+#define SMC_PUSH_DATA(lp, p, l)	SMC_outsl( lp, TX_DATA_FIFO, p, (l) >> 2 )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3670: FILE: drivers/net/smc911x.h:696:
+#define SMC_PULL_DATA(lp, p, l)	SMC_insl ( lp, RX_DATA_FIFO, p, (l) >> 2 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3670: FILE: drivers/net/smc911x.h:696:
+#define SMC_PULL_DATA(lp, p, l)	SMC_insl ( lp, RX_DATA_FIFO, p, (l) >> 2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3670: FILE: drivers/net/smc911x.h:696:
+#define SMC_PULL_DATA(lp, p, l)	SMC_insl ( lp, RX_DATA_FIFO, p, (l) >> 2 )

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3670: FILE: drivers/net/smc911x.h:696:
+#define SMC_PULL_DATA(lp, p, l)	SMC_insl ( lp, RX_DATA_FIFO, p, (l) >> 2 )

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3671: FILE: drivers/net/smc911x.h:697:
+#define SMC_SET_TX_FIFO(lp, x) ^ISMC_outl( x, lp, TX_DATA_FIFO )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#3671: FILE: drivers/net/smc911x.h:697:
+#define SMC_SET_TX_FIFO(lp, x) 	SMC_outl( x, lp, TX_DATA_FIFO )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3671: FILE: drivers/net/smc911x.h:697:
+#define SMC_SET_TX_FIFO(lp, x) 	SMC_outl( x, lp, TX_DATA_FIFO )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3672: FILE: drivers/net/smc911x.h:698:
+#define SMC_GET_RX_FIFO(lp)	SMC_inl( lp, RX_DATA_FIFO )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3672: FILE: drivers/net/smc911x.h:698:
+#define SMC_GET_RX_FIFO(lp)	SMC_inl( lp, RX_DATA_FIFO )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3692: FILE: drivers/net/smc911x.h:702:
+#define SMC_GET_TX_STS_FIFO(lp)		SMC_inl( lp, TX_STATUS_FIFO )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3692: FILE: drivers/net/smc911x.h:702:
+#define SMC_GET_TX_STS_FIFO(lp)		SMC_inl( lp, TX_STATUS_FIFO )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3693: FILE: drivers/net/smc911x.h:703:
+#define SMC_GET_RX_STS_FIFO(lp)		SMC_inl( lp, RX_STATUS_FIFO )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3693: FILE: drivers/net/smc911x.h:703:
+#define SMC_GET_RX_STS_FIFO(lp)		SMC_inl( lp, RX_STATUS_FIFO )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3694: FILE: drivers/net/smc911x.h:704:
+#define SMC_GET_RX_STS_FIFO_PEEK(lp)	SMC_inl( lp, RX_STATUS_FIFO_PEEK )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3694: FILE: drivers/net/smc911x.h:704:
+#define SMC_GET_RX_STS_FIFO_PEEK(lp)	SMC_inl( lp, RX_STATUS_FIFO_PEEK )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3695: FILE: drivers/net/smc911x.h:705:
+#define SMC_GET_PN(lp)			(SMC_inl( lp, ID_REV ) >> 16)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3695: FILE: drivers/net/smc911x.h:705:
+#define SMC_GET_PN(lp)			(SMC_inl( lp, ID_REV ) >> 16)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3696: FILE: drivers/net/smc911x.h:706:
+#define SMC_GET_REV(lp)			(SMC_inl( lp, ID_REV ) & 0xFFFF)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3696: FILE: drivers/net/smc911x.h:706:
+#define SMC_GET_REV(lp)			(SMC_inl( lp, ID_REV ) & 0xFFFF)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3697: FILE: drivers/net/smc911x.h:707:
+#define SMC_GET_IRQ_CFG(lp)		SMC_inl( lp, INT_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3697: FILE: drivers/net/smc911x.h:707:
+#define SMC_GET_IRQ_CFG(lp)		SMC_inl( lp, INT_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3698: FILE: drivers/net/smc911x.h:708:
+#define SMC_SET_IRQ_CFG(lp, x)		SMC_outl( x, lp, INT_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3698: FILE: drivers/net/smc911x.h:708:
+#define SMC_SET_IRQ_CFG(lp, x)		SMC_outl( x, lp, INT_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3699: FILE: drivers/net/smc911x.h:709:
+#define SMC_GET_INT(lp)			SMC_inl( lp, INT_STS )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3699: FILE: drivers/net/smc911x.h:709:
+#define SMC_GET_INT(lp)			SMC_inl( lp, INT_STS )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3700: FILE: drivers/net/smc911x.h:710:
+#define SMC_ACK_INT(lp, x)			SMC_outl( x, lp, INT_STS )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3700: FILE: drivers/net/smc911x.h:710:
+#define SMC_ACK_INT(lp, x)			SMC_outl( x, lp, INT_STS )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3701: FILE: drivers/net/smc911x.h:711:
+#define SMC_GET_INT_EN(lp)		SMC_inl( lp, INT_EN )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3701: FILE: drivers/net/smc911x.h:711:
+#define SMC_GET_INT_EN(lp)		SMC_inl( lp, INT_EN )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3702: FILE: drivers/net/smc911x.h:712:
+#define SMC_SET_INT_EN(lp, x)		SMC_outl( x, lp, INT_EN )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3702: FILE: drivers/net/smc911x.h:712:
+#define SMC_SET_INT_EN(lp, x)		SMC_outl( x, lp, INT_EN )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3703: FILE: drivers/net/smc911x.h:713:
+#define SMC_GET_BYTE_TEST(lp)		SMC_inl( lp, BYTE_TEST )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3703: FILE: drivers/net/smc911x.h:713:
+#define SMC_GET_BYTE_TEST(lp)		SMC_inl( lp, BYTE_TEST )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3704: FILE: drivers/net/smc911x.h:714:
+#define SMC_SET_BYTE_TEST(lp, x)		SMC_outl( x, lp, BYTE_TEST )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3704: FILE: drivers/net/smc911x.h:714:
+#define SMC_SET_BYTE_TEST(lp, x)		SMC_outl( x, lp, BYTE_TEST )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3705: FILE: drivers/net/smc911x.h:715:
+#define SMC_GET_FIFO_INT(lp)		SMC_inl( lp, FIFO_INT )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3705: FILE: drivers/net/smc911x.h:715:
+#define SMC_GET_FIFO_INT(lp)		SMC_inl( lp, FIFO_INT )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3706: FILE: drivers/net/smc911x.h:716:
+#define SMC_SET_FIFO_INT(lp, x)		SMC_outl( x, lp, FIFO_INT )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3706: FILE: drivers/net/smc911x.h:716:
+#define SMC_SET_FIFO_INT(lp, x)		SMC_outl( x, lp, FIFO_INT )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3707: FILE: drivers/net/smc911x.h:717:
+#define SMC_SET_FIFO_TDA(lp, x)					\
 	do {							\
 		unsigned long __flags;				\
 		int __mask;					\
 		local_irq_save(__flags);			\
+		__mask = SMC_GET_FIFO_INT((lp)) & ~(0xFF<<24);	\
+		SMC_SET_FIFO_INT( (lp), __mask | (x)<<24 );	\
 		local_irq_restore(__flags);			\
 	} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3714: FILE: drivers/net/smc911x.h:722:
+		__mask = SMC_GET_FIFO_INT((lp)) & ~(0xFF<<24);	\
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3715: FILE: drivers/net/smc911x.h:723:
+		SMC_SET_FIFO_INT( (lp), __mask | (x)<<24 );	\
 		                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3715: FILE: drivers/net/smc911x.h:723:
+		SMC_SET_FIFO_INT( (lp), __mask | (x)<<24 );	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3715: FILE: drivers/net/smc911x.h:723:
+		SMC_SET_FIFO_INT( (lp), __mask | (x)<<24 );	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3719: FILE: drivers/net/smc911x.h:726:
+#define SMC_SET_FIFO_TSL(lp, x)					\
 	do {							\
 		unsigned long __flags;				\
 		int __mask;					\
 		local_irq_save(__flags);			\
+		__mask = SMC_GET_FIFO_INT((lp)) & ~(0xFF<<16);	\
+		SMC_SET_FIFO_INT( (lp), __mask | (((x) & 0xFF)<<16));	\
 		local_irq_restore(__flags);			\
 	} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3726: FILE: drivers/net/smc911x.h:731:
+		__mask = SMC_GET_FIFO_INT((lp)) & ~(0xFF<<16);	\
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3727: FILE: drivers/net/smc911x.h:732:
+		SMC_SET_FIFO_INT( (lp), __mask | (((x) & 0xFF)<<16));	\
 		                                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3727: FILE: drivers/net/smc911x.h:732:
+		SMC_SET_FIFO_INT( (lp), __mask | (((x) & 0xFF)<<16));	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3731: FILE: drivers/net/smc911x.h:735:
+#define SMC_SET_FIFO_RSA(lp, x)					\
 	do {							\
 		unsigned long __flags;				\
 		int __mask;					\
 		local_irq_save(__flags);			\
+		__mask = SMC_GET_FIFO_INT((lp)) & ~(0xFF<<8);	\
+		SMC_SET_FIFO_INT( (lp), __mask | (((x) & 0xFF)<<8));	\
 		local_irq_restore(__flags);			\
 	} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3738: FILE: drivers/net/smc911x.h:740:
+		__mask = SMC_GET_FIFO_INT((lp)) & ~(0xFF<<8);	\
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3739: FILE: drivers/net/smc911x.h:741:
+		SMC_SET_FIFO_INT( (lp), __mask | (((x) & 0xFF)<<8));	\
 		                                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3739: FILE: drivers/net/smc911x.h:741:
+		SMC_SET_FIFO_INT( (lp), __mask | (((x) & 0xFF)<<8));	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3743: FILE: drivers/net/smc911x.h:744:
+#define SMC_SET_FIFO_RSL(lp, x)					\
 	do {							\
 		unsigned long __flags;				\
 		int __mask;					\
 		local_irq_save(__flags);			\
+		__mask = SMC_GET_FIFO_INT((lp)) & ~0xFF;	\
+		SMC_SET_FIFO_INT( (lp),__mask | ((x) & 0xFF));	\
 		local_irq_restore(__flags);			\
 	} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3751: FILE: drivers/net/smc911x.h:750:
+		SMC_SET_FIFO_INT( (lp),__mask | ((x) & 0xFF));	\
 		                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3751: FILE: drivers/net/smc911x.h:750:
+		SMC_SET_FIFO_INT( (lp),__mask | ((x) & 0xFF));	\

ERROR:SPACING: space prohibited after that open parenthesis '('
#3784: FILE: drivers/net/smc911x.h:753:
+#define SMC_GET_RX_CFG(lp)		SMC_inl( lp, RX_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3784: FILE: drivers/net/smc911x.h:753:
+#define SMC_GET_RX_CFG(lp)		SMC_inl( lp, RX_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3785: FILE: drivers/net/smc911x.h:754:
+#define SMC_SET_RX_CFG(lp, x)		SMC_outl( x, lp, RX_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3785: FILE: drivers/net/smc911x.h:754:
+#define SMC_SET_RX_CFG(lp, x)		SMC_outl( x, lp, RX_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3786: FILE: drivers/net/smc911x.h:755:
+#define SMC_GET_TX_CFG(lp)		SMC_inl( lp, TX_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3786: FILE: drivers/net/smc911x.h:755:
+#define SMC_GET_TX_CFG(lp)		SMC_inl( lp, TX_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3787: FILE: drivers/net/smc911x.h:756:
+#define SMC_SET_TX_CFG(lp, x)		SMC_outl( x, lp, TX_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3787: FILE: drivers/net/smc911x.h:756:
+#define SMC_SET_TX_CFG(lp, x)		SMC_outl( x, lp, TX_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3788: FILE: drivers/net/smc911x.h:757:
+#define SMC_GET_HW_CFG(lp)		SMC_inl( lp, HW_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3788: FILE: drivers/net/smc911x.h:757:
+#define SMC_GET_HW_CFG(lp)		SMC_inl( lp, HW_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3789: FILE: drivers/net/smc911x.h:758:
+#define SMC_SET_HW_CFG(lp, x)		SMC_outl( x, lp, HW_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3789: FILE: drivers/net/smc911x.h:758:
+#define SMC_SET_HW_CFG(lp, x)		SMC_outl( x, lp, HW_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3790: FILE: drivers/net/smc911x.h:759:
+#define SMC_GET_RX_DP_CTRL(lp)		SMC_inl( lp, RX_DP_CTRL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3790: FILE: drivers/net/smc911x.h:759:
+#define SMC_GET_RX_DP_CTRL(lp)		SMC_inl( lp, RX_DP_CTRL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3791: FILE: drivers/net/smc911x.h:760:
+#define SMC_SET_RX_DP_CTRL(lp, x)		SMC_outl( x, lp, RX_DP_CTRL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3791: FILE: drivers/net/smc911x.h:760:
+#define SMC_SET_RX_DP_CTRL(lp, x)		SMC_outl( x, lp, RX_DP_CTRL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3792: FILE: drivers/net/smc911x.h:761:
+#define SMC_GET_PMT_CTRL(lp)		SMC_inl( lp, PMT_CTRL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3792: FILE: drivers/net/smc911x.h:761:
+#define SMC_GET_PMT_CTRL(lp)		SMC_inl( lp, PMT_CTRL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3793: FILE: drivers/net/smc911x.h:762:
+#define SMC_SET_PMT_CTRL(lp, x)		SMC_outl( x, lp, PMT_CTRL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3793: FILE: drivers/net/smc911x.h:762:
+#define SMC_SET_PMT_CTRL(lp, x)		SMC_outl( x, lp, PMT_CTRL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3794: FILE: drivers/net/smc911x.h:763:
+#define SMC_GET_GPIO_CFG(lp)		SMC_inl( lp, GPIO_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3794: FILE: drivers/net/smc911x.h:763:
+#define SMC_GET_GPIO_CFG(lp)		SMC_inl( lp, GPIO_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3795: FILE: drivers/net/smc911x.h:764:
+#define SMC_SET_GPIO_CFG(lp, x)		SMC_outl( x, lp, GPIO_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3795: FILE: drivers/net/smc911x.h:764:
+#define SMC_SET_GPIO_CFG(lp, x)		SMC_outl( x, lp, GPIO_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3796: FILE: drivers/net/smc911x.h:765:
+#define SMC_GET_RX_FIFO_INF(lp)		SMC_inl( lp, RX_FIFO_INF )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3796: FILE: drivers/net/smc911x.h:765:
+#define SMC_GET_RX_FIFO_INF(lp)		SMC_inl( lp, RX_FIFO_INF )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3797: FILE: drivers/net/smc911x.h:766:
+#define SMC_SET_RX_FIFO_INF(lp, x)		SMC_outl( x, lp, RX_FIFO_INF )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3797: FILE: drivers/net/smc911x.h:766:
+#define SMC_SET_RX_FIFO_INF(lp, x)		SMC_outl( x, lp, RX_FIFO_INF )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3798: FILE: drivers/net/smc911x.h:767:
+#define SMC_GET_TX_FIFO_INF(lp)		SMC_inl( lp, TX_FIFO_INF )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3798: FILE: drivers/net/smc911x.h:767:
+#define SMC_GET_TX_FIFO_INF(lp)		SMC_inl( lp, TX_FIFO_INF )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3799: FILE: drivers/net/smc911x.h:768:
+#define SMC_SET_TX_FIFO_INF(lp, x)		SMC_outl( x, lp, TX_FIFO_INF )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3799: FILE: drivers/net/smc911x.h:768:
+#define SMC_SET_TX_FIFO_INF(lp, x)		SMC_outl( x, lp, TX_FIFO_INF )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3800: FILE: drivers/net/smc911x.h:769:
+#define SMC_GET_GPT_CFG(lp)		SMC_inl( lp, GPT_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3800: FILE: drivers/net/smc911x.h:769:
+#define SMC_GET_GPT_CFG(lp)		SMC_inl( lp, GPT_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3801: FILE: drivers/net/smc911x.h:770:
+#define SMC_SET_GPT_CFG(lp, x)		SMC_outl( x, lp, GPT_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3801: FILE: drivers/net/smc911x.h:770:
+#define SMC_SET_GPT_CFG(lp, x)		SMC_outl( x, lp, GPT_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3802: FILE: drivers/net/smc911x.h:771:
+#define SMC_GET_RX_DROP(lp)		SMC_inl( lp, RX_DROP )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3802: FILE: drivers/net/smc911x.h:771:
+#define SMC_GET_RX_DROP(lp)		SMC_inl( lp, RX_DROP )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3803: FILE: drivers/net/smc911x.h:772:
+#define SMC_SET_RX_DROP(lp, x)		SMC_outl( x, lp, RX_DROP )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3803: FILE: drivers/net/smc911x.h:772:
+#define SMC_SET_RX_DROP(lp, x)		SMC_outl( x, lp, RX_DROP )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3804: FILE: drivers/net/smc911x.h:773:
+#define SMC_GET_MAC_CMD(lp)		SMC_inl( lp, MAC_CSR_CMD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3804: FILE: drivers/net/smc911x.h:773:
+#define SMC_GET_MAC_CMD(lp)		SMC_inl( lp, MAC_CSR_CMD )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3805: FILE: drivers/net/smc911x.h:774:
+#define SMC_SET_MAC_CMD(lp, x)		SMC_outl( x, lp, MAC_CSR_CMD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3805: FILE: drivers/net/smc911x.h:774:
+#define SMC_SET_MAC_CMD(lp, x)		SMC_outl( x, lp, MAC_CSR_CMD )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3806: FILE: drivers/net/smc911x.h:775:
+#define SMC_GET_MAC_DATA(lp)		SMC_inl( lp, MAC_CSR_DATA )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3806: FILE: drivers/net/smc911x.h:775:
+#define SMC_GET_MAC_DATA(lp)		SMC_inl( lp, MAC_CSR_DATA )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3807: FILE: drivers/net/smc911x.h:776:
+#define SMC_SET_MAC_DATA(lp, x)		SMC_outl( x, lp, MAC_CSR_DATA )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3807: FILE: drivers/net/smc911x.h:776:
+#define SMC_SET_MAC_DATA(lp, x)		SMC_outl( x, lp, MAC_CSR_DATA )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3808: FILE: drivers/net/smc911x.h:777:
+#define SMC_GET_AFC_CFG(lp)		SMC_inl( lp, AFC_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3808: FILE: drivers/net/smc911x.h:777:
+#define SMC_GET_AFC_CFG(lp)		SMC_inl( lp, AFC_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3809: FILE: drivers/net/smc911x.h:778:
+#define SMC_SET_AFC_CFG(lp, x)		SMC_outl( x, lp, AFC_CFG )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3809: FILE: drivers/net/smc911x.h:778:
+#define SMC_SET_AFC_CFG(lp, x)		SMC_outl( x, lp, AFC_CFG )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3810: FILE: drivers/net/smc911x.h:779:
+#define SMC_GET_E2P_CMD(lp)		SMC_inl( lp, E2P_CMD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3810: FILE: drivers/net/smc911x.h:779:
+#define SMC_GET_E2P_CMD(lp)		SMC_inl( lp, E2P_CMD )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3811: FILE: drivers/net/smc911x.h:780:
+#define SMC_SET_E2P_CMD(lp, x)		SMC_outl( x, lp, E2P_CMD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3811: FILE: drivers/net/smc911x.h:780:
+#define SMC_SET_E2P_CMD(lp, x)		SMC_outl( x, lp, E2P_CMD )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3812: FILE: drivers/net/smc911x.h:781:
+#define SMC_GET_E2P_DATA(lp)		SMC_inl( lp, E2P_DATA )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3812: FILE: drivers/net/smc911x.h:781:
+#define SMC_GET_E2P_DATA(lp)		SMC_inl( lp, E2P_DATA )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3813: FILE: drivers/net/smc911x.h:782:
+#define SMC_SET_E2P_DATA(lp, x)		SMC_outl( x, lp, E2P_DATA )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3813: FILE: drivers/net/smc911x.h:782:
+#define SMC_SET_E2P_DATA(lp, x)		SMC_outl( x, lp, E2P_DATA )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3817: FILE: drivers/net/smc911x.h:785:
+#define SMC_GET_MAC_CSR(lp,a,v)						\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3817: FILE: drivers/net/smc911x.h:785:
+#define SMC_GET_MAC_CSR(lp,a,v)						\
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3817: FILE: drivers/net/smc911x.h:785:
+#define SMC_GET_MAC_CSR(lp,a,v)						\
 	do {								\
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\
+		SMC_SET_MAC_CMD((lp),MAC_CSR_CMD_CSR_BUSY_ |		\
 			MAC_CSR_CMD_R_NOT_W_ | (a) );			\
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\
+		v = SMC_GET_MAC_DATA((lp));			       	\
 	} while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3821: FILE: drivers/net/smc911x.h:787:
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3822: FILE: drivers/net/smc911x.h:788:
+		SMC_SET_MAC_CMD((lp),MAC_CSR_CMD_CSR_BUSY_ |		\
 		                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3826: FILE: drivers/net/smc911x.h:790:
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3827: FILE: drivers/net/smc911x.h:791:
+^I^Iv = SMC_GET_MAC_DATA((lp));^I^I^I       ^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3830: FILE: drivers/net/smc911x.h:793:
+#define SMC_SET_MAC_CSR(lp,a,v)						\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3830: FILE: drivers/net/smc911x.h:793:
+#define SMC_SET_MAC_CSR(lp,a,v)						\
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3830: FILE: drivers/net/smc911x.h:793:
+#define SMC_SET_MAC_CSR(lp,a,v)						\
 	do {								\
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\
+		SMC_SET_MAC_DATA((lp), v);				\
+		SMC_SET_MAC_CMD((lp), MAC_CSR_CMD_CSR_BUSY_ | (a) );	\
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\
 	} while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3836: FILE: drivers/net/smc911x.h:795:
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3838: FILE: drivers/net/smc911x.h:797:
+		SMC_SET_MAC_CMD((lp), MAC_CSR_CMD_CSR_BUSY_ | (a) );	\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3839: FILE: drivers/net/smc911x.h:798:
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\

ERROR:SPACING: space prohibited after that open parenthesis '('
#3864: FILE: drivers/net/smc911x.h:800:
+#define SMC_GET_MAC_CR(lp, x)	SMC_GET_MAC_CSR( (lp), MAC_CR, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3864: FILE: drivers/net/smc911x.h:800:
+#define SMC_GET_MAC_CR(lp, x)	SMC_GET_MAC_CSR( (lp), MAC_CR, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3865: FILE: drivers/net/smc911x.h:801:
+#define SMC_SET_MAC_CR(lp, x)	SMC_SET_MAC_CSR( (lp), MAC_CR, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3865: FILE: drivers/net/smc911x.h:801:
+#define SMC_SET_MAC_CR(lp, x)	SMC_SET_MAC_CSR( (lp), MAC_CR, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3866: FILE: drivers/net/smc911x.h:802:
+#define SMC_GET_ADDRH(lp, x)	SMC_GET_MAC_CSR( (lp), ADDRH, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3866: FILE: drivers/net/smc911x.h:802:
+#define SMC_GET_ADDRH(lp, x)	SMC_GET_MAC_CSR( (lp), ADDRH, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3867: FILE: drivers/net/smc911x.h:803:
+#define SMC_SET_ADDRH(lp, x)	SMC_SET_MAC_CSR( (lp), ADDRH, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3867: FILE: drivers/net/smc911x.h:803:
+#define SMC_SET_ADDRH(lp, x)	SMC_SET_MAC_CSR( (lp), ADDRH, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3868: FILE: drivers/net/smc911x.h:804:
+#define SMC_GET_ADDRL(lp, x)	SMC_GET_MAC_CSR( (lp), ADDRL, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3868: FILE: drivers/net/smc911x.h:804:
+#define SMC_GET_ADDRL(lp, x)	SMC_GET_MAC_CSR( (lp), ADDRL, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3869: FILE: drivers/net/smc911x.h:805:
+#define SMC_SET_ADDRL(lp, x)	SMC_SET_MAC_CSR( (lp), ADDRL, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3869: FILE: drivers/net/smc911x.h:805:
+#define SMC_SET_ADDRL(lp, x)	SMC_SET_MAC_CSR( (lp), ADDRL, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3870: FILE: drivers/net/smc911x.h:806:
+#define SMC_GET_HASHH(lp, x)	SMC_GET_MAC_CSR( (lp), HASHH, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3870: FILE: drivers/net/smc911x.h:806:
+#define SMC_GET_HASHH(lp, x)	SMC_GET_MAC_CSR( (lp), HASHH, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3871: FILE: drivers/net/smc911x.h:807:
+#define SMC_SET_HASHH(lp, x)	SMC_SET_MAC_CSR( (lp), HASHH, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3871: FILE: drivers/net/smc911x.h:807:
+#define SMC_SET_HASHH(lp, x)	SMC_SET_MAC_CSR( (lp), HASHH, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3872: FILE: drivers/net/smc911x.h:808:
+#define SMC_GET_HASHL(lp, x)	SMC_GET_MAC_CSR( (lp), HASHL, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3872: FILE: drivers/net/smc911x.h:808:
+#define SMC_GET_HASHL(lp, x)	SMC_GET_MAC_CSR( (lp), HASHL, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3873: FILE: drivers/net/smc911x.h:809:
+#define SMC_SET_HASHL(lp, x)	SMC_SET_MAC_CSR( (lp), HASHL, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3873: FILE: drivers/net/smc911x.h:809:
+#define SMC_SET_HASHL(lp, x)	SMC_SET_MAC_CSR( (lp), HASHL, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3874: FILE: drivers/net/smc911x.h:810:
+#define SMC_GET_MII_ACC(lp, x)	SMC_GET_MAC_CSR( (lp), MII_ACC, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3874: FILE: drivers/net/smc911x.h:810:
+#define SMC_GET_MII_ACC(lp, x)	SMC_GET_MAC_CSR( (lp), MII_ACC, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3875: FILE: drivers/net/smc911x.h:811:
+#define SMC_SET_MII_ACC(lp, x)	SMC_SET_MAC_CSR( (lp), MII_ACC, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3875: FILE: drivers/net/smc911x.h:811:
+#define SMC_SET_MII_ACC(lp, x)	SMC_SET_MAC_CSR( (lp), MII_ACC, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3876: FILE: drivers/net/smc911x.h:812:
+#define SMC_GET_MII_DATA(lp, x)	SMC_GET_MAC_CSR( (lp), MII_DATA, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3876: FILE: drivers/net/smc911x.h:812:
+#define SMC_GET_MII_DATA(lp, x)	SMC_GET_MAC_CSR( (lp), MII_DATA, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3877: FILE: drivers/net/smc911x.h:813:
+#define SMC_SET_MII_DATA(lp, x)	SMC_SET_MAC_CSR( (lp), MII_DATA, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3877: FILE: drivers/net/smc911x.h:813:
+#define SMC_SET_MII_DATA(lp, x)	SMC_SET_MAC_CSR( (lp), MII_DATA, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3878: FILE: drivers/net/smc911x.h:814:
+#define SMC_GET_FLOW(lp, x)		SMC_GET_MAC_CSR( (lp), FLOW, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3878: FILE: drivers/net/smc911x.h:814:
+#define SMC_GET_FLOW(lp, x)		SMC_GET_MAC_CSR( (lp), FLOW, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3879: FILE: drivers/net/smc911x.h:815:
+#define SMC_SET_FLOW(lp, x)		SMC_SET_MAC_CSR( (lp), FLOW, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3879: FILE: drivers/net/smc911x.h:815:
+#define SMC_SET_FLOW(lp, x)		SMC_SET_MAC_CSR( (lp), FLOW, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3880: FILE: drivers/net/smc911x.h:816:
+#define SMC_GET_VLAN1(lp, x)	SMC_GET_MAC_CSR( (lp), VLAN1, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3880: FILE: drivers/net/smc911x.h:816:
+#define SMC_GET_VLAN1(lp, x)	SMC_GET_MAC_CSR( (lp), VLAN1, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3881: FILE: drivers/net/smc911x.h:817:
+#define SMC_SET_VLAN1(lp, x)	SMC_SET_MAC_CSR( (lp), VLAN1, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3881: FILE: drivers/net/smc911x.h:817:
+#define SMC_SET_VLAN1(lp, x)	SMC_SET_MAC_CSR( (lp), VLAN1, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3882: FILE: drivers/net/smc911x.h:818:
+#define SMC_GET_VLAN2(lp, x)	SMC_GET_MAC_CSR( (lp), VLAN2, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3882: FILE: drivers/net/smc911x.h:818:
+#define SMC_GET_VLAN2(lp, x)	SMC_GET_MAC_CSR( (lp), VLAN2, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3883: FILE: drivers/net/smc911x.h:819:
+#define SMC_SET_VLAN2(lp, x)	SMC_SET_MAC_CSR( (lp), VLAN2, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3883: FILE: drivers/net/smc911x.h:819:
+#define SMC_SET_VLAN2(lp, x)	SMC_SET_MAC_CSR( (lp), VLAN2, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3884: FILE: drivers/net/smc911x.h:820:
+#define SMC_SET_WUFF(lp, x)		SMC_SET_MAC_CSR( (lp), WUFF, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3884: FILE: drivers/net/smc911x.h:820:
+#define SMC_SET_WUFF(lp, x)		SMC_SET_MAC_CSR( (lp), WUFF, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3885: FILE: drivers/net/smc911x.h:821:
+#define SMC_GET_WUCSR(lp, x)	SMC_GET_MAC_CSR( (lp), WUCSR, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3885: FILE: drivers/net/smc911x.h:821:
+#define SMC_GET_WUCSR(lp, x)	SMC_GET_MAC_CSR( (lp), WUCSR, x )

ERROR:SPACING: space prohibited after that open parenthesis '('
#3886: FILE: drivers/net/smc911x.h:822:
+#define SMC_SET_WUCSR(lp, x)	SMC_SET_MAC_CSR( (lp), WUCSR, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3886: FILE: drivers/net/smc911x.h:822:
+#define SMC_SET_WUCSR(lp, x)	SMC_SET_MAC_CSR( (lp), WUCSR, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3890: FILE: drivers/net/smc911x.h:825:
+#define SMC_GET_MII(lp,a,phy,v)					\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3890: FILE: drivers/net/smc911x.h:825:
+#define SMC_GET_MII(lp,a,phy,v)					\
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3890: FILE: drivers/net/smc911x.h:825:
+#define SMC_GET_MII(lp,a,phy,v)					\
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3890: FILE: drivers/net/smc911x.h:825:
+#define SMC_GET_MII(lp,a,phy,v)					\
 	do {							\
 		u32 __v;					\
 		do {						\
+			SMC_GET_MII_ACC((lp), __v);			\
 		} while ( __v & MII_ACC_MII_BUSY_ );		\
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\
 			MII_ACC_MII_BUSY_);			\
 		do {						\
+			SMC_GET_MII_ACC( (lp), __v);			\
 		} while ( __v & MII_ACC_MII_BUSY_ );		\
+		SMC_GET_MII_DATA((lp), v);				\
 	} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3898: FILE: drivers/net/smc911x.h:831:
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3898: FILE: drivers/net/smc911x.h:831:
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\
 		                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3898: FILE: drivers/net/smc911x.h:831:
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\

ERROR:SPACING: space prohibited after that open parenthesis '('
#3902: FILE: drivers/net/smc911x.h:834:
+			SMC_GET_MII_ACC( (lp), __v);			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3908: FILE: drivers/net/smc911x.h:838:
+#define SMC_SET_MII(lp,a,phy,v)					\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3908: FILE: drivers/net/smc911x.h:838:
+#define SMC_SET_MII(lp,a,phy,v)					\
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3908: FILE: drivers/net/smc911x.h:838:
+#define SMC_SET_MII(lp,a,phy,v)					\
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3908: FILE: drivers/net/smc911x.h:838:
+#define SMC_SET_MII(lp,a,phy,v)					\
 	do {							\
 		u32 __v;					\
 		do {						\
+			SMC_GET_MII_ACC((lp), __v);			\
 		} while ( __v & MII_ACC_MII_BUSY_ );		\
+		SMC_SET_MII_DATA((lp), v);				\
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\
 			MII_ACC_MII_BUSY_	 |		\
 			MII_ACC_MII_WRITE_  );			\
 		do {						\
+			SMC_GET_MII_ACC((lp), __v);			\
 		} while ( __v & MII_ACC_MII_BUSY_ );		\
 	} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3918: FILE: drivers/net/smc911x.h:845:
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3918: FILE: drivers/net/smc911x.h:845:
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\
 		                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3918: FILE: drivers/net/smc911x.h:845:
+		SMC_SET_MII_ACC( (lp), ((phy)<<11) | ((a)<<6) |	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3942: FILE: drivers/net/smc911x.h:852:
+#define SMC_GET_PHY_BMCR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMCR, phy, x )
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3942: FILE: drivers/net/smc911x.h:852:
+#define SMC_GET_PHY_BMCR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMCR, phy, x )
                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3942: FILE: drivers/net/smc911x.h:852:
+#define SMC_GET_PHY_BMCR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMCR, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3942: FILE: drivers/net/smc911x.h:852:
+#define SMC_GET_PHY_BMCR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMCR, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3943: FILE: drivers/net/smc911x.h:853:
+#define SMC_SET_PHY_BMCR(lp,phy,x)		SMC_SET_MII( (lp), MII_BMCR, phy, x )
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3943: FILE: drivers/net/smc911x.h:853:
+#define SMC_SET_PHY_BMCR(lp,phy,x)		SMC_SET_MII( (lp), MII_BMCR, phy, x )
                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3943: FILE: drivers/net/smc911x.h:853:
+#define SMC_SET_PHY_BMCR(lp,phy,x)		SMC_SET_MII( (lp), MII_BMCR, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3943: FILE: drivers/net/smc911x.h:853:
+#define SMC_SET_PHY_BMCR(lp,phy,x)		SMC_SET_MII( (lp), MII_BMCR, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3944: FILE: drivers/net/smc911x.h:854:
+#define SMC_GET_PHY_BMSR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMSR, phy, x )
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3944: FILE: drivers/net/smc911x.h:854:
+#define SMC_GET_PHY_BMSR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMSR, phy, x )
                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3944: FILE: drivers/net/smc911x.h:854:
+#define SMC_GET_PHY_BMSR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMSR, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3944: FILE: drivers/net/smc911x.h:854:
+#define SMC_GET_PHY_BMSR(lp,phy,x)		SMC_GET_MII( (lp), MII_BMSR, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3945: FILE: drivers/net/smc911x.h:855:
+#define SMC_GET_PHY_ID1(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID1, phy, x )
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3945: FILE: drivers/net/smc911x.h:855:
+#define SMC_GET_PHY_ID1(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID1, phy, x )
                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3945: FILE: drivers/net/smc911x.h:855:
+#define SMC_GET_PHY_ID1(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID1, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3945: FILE: drivers/net/smc911x.h:855:
+#define SMC_GET_PHY_ID1(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID1, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3946: FILE: drivers/net/smc911x.h:856:
+#define SMC_GET_PHY_ID2(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID2, phy, x )
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3946: FILE: drivers/net/smc911x.h:856:
+#define SMC_GET_PHY_ID2(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID2, phy, x )
                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3946: FILE: drivers/net/smc911x.h:856:
+#define SMC_GET_PHY_ID2(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID2, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3946: FILE: drivers/net/smc911x.h:856:
+#define SMC_GET_PHY_ID2(lp,phy,x)		SMC_GET_MII( (lp), MII_PHYSID2, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3947: FILE: drivers/net/smc911x.h:857:
+#define SMC_GET_PHY_MII_ADV(lp,phy,x)	SMC_GET_MII( (lp), MII_ADVERTISE, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3947: FILE: drivers/net/smc911x.h:857:
+#define SMC_GET_PHY_MII_ADV(lp,phy,x)	SMC_GET_MII( (lp), MII_ADVERTISE, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3947: FILE: drivers/net/smc911x.h:857:
+#define SMC_GET_PHY_MII_ADV(lp,phy,x)	SMC_GET_MII( (lp), MII_ADVERTISE, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3947: FILE: drivers/net/smc911x.h:857:
+#define SMC_GET_PHY_MII_ADV(lp,phy,x)	SMC_GET_MII( (lp), MII_ADVERTISE, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3948: FILE: drivers/net/smc911x.h:858:
+#define SMC_SET_PHY_MII_ADV(lp,phy,x)	SMC_SET_MII( (lp), MII_ADVERTISE, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3948: FILE: drivers/net/smc911x.h:858:
+#define SMC_SET_PHY_MII_ADV(lp,phy,x)	SMC_SET_MII( (lp), MII_ADVERTISE, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3948: FILE: drivers/net/smc911x.h:858:
+#define SMC_SET_PHY_MII_ADV(lp,phy,x)	SMC_SET_MII( (lp), MII_ADVERTISE, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3948: FILE: drivers/net/smc911x.h:858:
+#define SMC_SET_PHY_MII_ADV(lp,phy,x)	SMC_SET_MII( (lp), MII_ADVERTISE, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3949: FILE: drivers/net/smc911x.h:859:
+#define SMC_GET_PHY_MII_LPA(lp,phy,x)	SMC_GET_MII( (lp), MII_LPA, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3949: FILE: drivers/net/smc911x.h:859:
+#define SMC_GET_PHY_MII_LPA(lp,phy,x)	SMC_GET_MII( (lp), MII_LPA, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3949: FILE: drivers/net/smc911x.h:859:
+#define SMC_GET_PHY_MII_LPA(lp,phy,x)	SMC_GET_MII( (lp), MII_LPA, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3949: FILE: drivers/net/smc911x.h:859:
+#define SMC_GET_PHY_MII_LPA(lp,phy,x)	SMC_GET_MII( (lp), MII_LPA, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3950: FILE: drivers/net/smc911x.h:860:
+#define SMC_SET_PHY_MII_LPA(lp,phy,x)	SMC_SET_MII( (lp), MII_LPA, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3950: FILE: drivers/net/smc911x.h:860:
+#define SMC_SET_PHY_MII_LPA(lp,phy,x)	SMC_SET_MII( (lp), MII_LPA, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3950: FILE: drivers/net/smc911x.h:860:
+#define SMC_SET_PHY_MII_LPA(lp,phy,x)	SMC_SET_MII( (lp), MII_LPA, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3950: FILE: drivers/net/smc911x.h:860:
+#define SMC_SET_PHY_MII_LPA(lp,phy,x)	SMC_SET_MII( (lp), MII_LPA, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3951: FILE: drivers/net/smc911x.h:861:
+#define SMC_GET_PHY_CTRL_STS(lp,phy,x)	SMC_GET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3951: FILE: drivers/net/smc911x.h:861:
+#define SMC_GET_PHY_CTRL_STS(lp,phy,x)	SMC_GET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )
                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3951: FILE: drivers/net/smc911x.h:861:
+#define SMC_GET_PHY_CTRL_STS(lp,phy,x)	SMC_GET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3951: FILE: drivers/net/smc911x.h:861:
+#define SMC_GET_PHY_CTRL_STS(lp,phy,x)	SMC_GET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3952: FILE: drivers/net/smc911x.h:862:
+#define SMC_SET_PHY_CTRL_STS(lp,phy,x)	SMC_SET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3952: FILE: drivers/net/smc911x.h:862:
+#define SMC_SET_PHY_CTRL_STS(lp,phy,x)	SMC_SET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )
                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3952: FILE: drivers/net/smc911x.h:862:
+#define SMC_SET_PHY_CTRL_STS(lp,phy,x)	SMC_SET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3952: FILE: drivers/net/smc911x.h:862:
+#define SMC_SET_PHY_CTRL_STS(lp,phy,x)	SMC_SET_MII( (lp), PHY_MODE_CTRL_STS, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3953: FILE: drivers/net/smc911x.h:863:
+#define SMC_GET_PHY_INT_SRC(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_SRC, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3953: FILE: drivers/net/smc911x.h:863:
+#define SMC_GET_PHY_INT_SRC(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_SRC, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3953: FILE: drivers/net/smc911x.h:863:
+#define SMC_GET_PHY_INT_SRC(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_SRC, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3953: FILE: drivers/net/smc911x.h:863:
+#define SMC_GET_PHY_INT_SRC(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_SRC, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: drivers/net/smc911x.h:864:
+#define SMC_SET_PHY_INT_SRC(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_SRC, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: drivers/net/smc911x.h:864:
+#define SMC_SET_PHY_INT_SRC(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_SRC, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3954: FILE: drivers/net/smc911x.h:864:
+#define SMC_SET_PHY_INT_SRC(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_SRC, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3954: FILE: drivers/net/smc911x.h:864:
+#define SMC_SET_PHY_INT_SRC(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_SRC, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3955: FILE: drivers/net/smc911x.h:865:
+#define SMC_GET_PHY_INT_MASK(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_MASK, phy, x )
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3955: FILE: drivers/net/smc911x.h:865:
+#define SMC_GET_PHY_INT_MASK(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_MASK, phy, x )
                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3955: FILE: drivers/net/smc911x.h:865:
+#define SMC_GET_PHY_INT_MASK(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_MASK, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3955: FILE: drivers/net/smc911x.h:865:
+#define SMC_GET_PHY_INT_MASK(lp,phy,x)	SMC_GET_MII( (lp), PHY_INT_MASK, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3956: FILE: drivers/net/smc911x.h:866:
+#define SMC_SET_PHY_INT_MASK(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_MASK, phy, x )
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3956: FILE: drivers/net/smc911x.h:866:
+#define SMC_SET_PHY_INT_MASK(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_MASK, phy, x )
                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3956: FILE: drivers/net/smc911x.h:866:
+#define SMC_SET_PHY_INT_MASK(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_MASK, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3956: FILE: drivers/net/smc911x.h:866:
+#define SMC_SET_PHY_INT_MASK(lp,phy,x)	SMC_SET_MII( (lp), PHY_INT_MASK, phy, x )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3957: FILE: drivers/net/smc911x.h:867:
+#define SMC_GET_PHY_SPECIAL(lp,phy,x)	SMC_GET_MII( (lp), PHY_SPECIAL, phy, x )
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3957: FILE: drivers/net/smc911x.h:867:
+#define SMC_GET_PHY_SPECIAL(lp,phy,x)	SMC_GET_MII( (lp), PHY_SPECIAL, phy, x )
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#3957: FILE: drivers/net/smc911x.h:867:
+#define SMC_GET_PHY_SPECIAL(lp,phy,x)	SMC_GET_MII( (lp), PHY_SPECIAL, phy, x )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3957: FILE: drivers/net/smc911x.h:867:
+#define SMC_GET_PHY_SPECIAL(lp,phy,x)	SMC_GET_MII( (lp), PHY_SPECIAL, phy, x )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3965: FILE: drivers/net/smc911x.h:874:
+#define SMC_GET_MAC_ADDR(lp, addr)				\
 	do {							\
 		unsigned int __v;				\
 								\
+		SMC_GET_MAC_CSR((lp), ADDRL, __v);			\
 		addr[0] = __v; addr[1] = __v >> 8;		\
 		addr[2] = __v >> 16; addr[3] = __v >> 24;	\
+		SMC_GET_MAC_CSR((lp), ADDRH, __v);			\
 		addr[4] = __v; addr[5] = __v >> 8;		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#3965: FILE: drivers/net/smc911x.h:874:
+#define SMC_GET_MAC_ADDR(lp, addr)				\
 	do {							\
 		unsigned int __v;				\
 								\
+		SMC_GET_MAC_CSR((lp), ADDRL, __v);			\
 		addr[0] = __v; addr[1] = __v >> 8;		\
 		addr[2] = __v >> 16; addr[3] = __v >> 24;	\
+		SMC_GET_MAC_CSR((lp), ADDRH, __v);			\
 		addr[4] = __v; addr[5] = __v >> 8;		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3980: FILE: drivers/net/smc911x.h:886:
+#define SMC_SET_MAC_ADDR(lp, addr)				\
 	do {							\
+		 SMC_SET_MAC_CSR((lp), ADDRL,				\
 				 addr[0] |			\
 				(addr[1] << 8) |		\
 				(addr[2] << 16) |		\
 				(addr[3] << 24));		\
+		 SMC_SET_MAC_CSR((lp), ADDRH, addr[4]|(addr[5] << 8));\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#3980: FILE: drivers/net/smc911x.h:886:
+#define SMC_SET_MAC_ADDR(lp, addr)				\
 	do {							\
+		 SMC_SET_MAC_CSR((lp), ADDRL,				\
 				 addr[0] |			\
 				(addr[1] << 8) |		\
 				(addr[2] << 16) |		\
 				(addr[3] << 24));		\
+		 SMC_SET_MAC_CSR((lp), ADDRH, addr[4]|(addr[5] << 8));\
 	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#3981: FILE: drivers/net/smc911x.h:887:
 	do {							\
+		 SMC_SET_MAC_CSR((lp), ADDRL,				\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3989: FILE: drivers/net/smc911x.h:893:
+		 SMC_SET_MAC_CSR((lp), ADDRH, addr[4]|(addr[5] << 8));\
 		                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lp' - possible side-effects?
#3994: FILE: drivers/net/smc911x.h:897:
+#define SMC_WRITE_EEPROM_CMD(lp, cmd, addr)				\
 	do {								\
+		while (SMC_GET_E2P_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\
+		SMC_SET_MAC_CMD((lp), MAC_CSR_CMD_R_NOT_W_ | a );		\
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\
 	} while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#3999: FILE: drivers/net/smc911x.h:899:
+		while (SMC_GET_E2P_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#4000: FILE: drivers/net/smc911x.h:900:
+		SMC_SET_MAC_CMD((lp), MAC_CSR_CMD_R_NOT_W_ | a );		\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#4001: FILE: drivers/net/smc911x.h:901:
+		while (SMC_GET_MAC_CMD((lp)) & MAC_CSR_CMD_CSR_BUSY_);	\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4064: FILE: drivers/net/usb/hso.c:1:
+/******************************************************************************

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4070: FILE: drivers/net/usb/hso.c:7:
+ *  ^I^I^I<ajb@spheresystems.co.uk>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4084: FILE: drivers/net/usb/hso.c:21:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4085: FILE: drivers/net/usb/hso.c:22:
+ *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4130: FILE: drivers/net/usb/hso.c:67:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4156: FILE: drivers/net/usb/hso.c:93:
+#define	HSO_NET_TX_TIMEOUT		(HZ*10)
        	                  		   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#4168: FILE: drivers/net/usb/hso.c:105:
+#define get_serial_by_tty(x)	\
+	(x ? (struct hso_serial *)x->driver_data : NULL)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4174: FILE: drivers/net/usb/hso.c:111:
+#define D__(lvl_, fmt, arg...)				\
+	do {						\
+		printk(lvl_ "[%d:%s]: " fmt "\n",	\
+		       __LINE__, __func__, ## arg);	\
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4176: FILE: drivers/net/usb/hso.c:113:
+		printk(lvl_ "[%d:%s]: " fmt "\n",	\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lvl' may be better as '(lvl)' to avoid precedence issues
#4180: FILE: drivers/net/usb/hso.c:117:
+#define D_(lvl, args...)				\
+	do {						\
+		if (lvl & debug)			\
+			D__(KERN_INFO, args);		\
+	} while (0)

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4212: FILE: drivers/net/usb/hso.c:149:
+	struct mutex shared_int_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#4232: FILE: drivers/net/usb/hso.c:169:
+	spinlock_t net_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4249: FILE: drivers/net/usb/hso.c:186:
+	/* rx/tx urb could be either a bulk urb or a control urb depending
+	   on which serial port it is used on. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4249: FILE: drivers/net/usb/hso.c:186:
+	   on which serial port it is used on. */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#4275: FILE: drivers/net/usb/hso.c:212:
+	spinlock_t serial_lock;

WARNING:SPACING: Unnecessary space before function pointer arguments
#4277: FILE: drivers/net/usb/hso.c:214:
+	int (*write_data) (struct hso_serial *serial);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4298: FILE: drivers/net/usb/hso.c:235:
+	struct mutex mutex;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4304: FILE: drivers/net/usb/hso.c:241:
+#define^IHSO_INTF_BULK   ^I0x0200$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#4360: FILE: drivers/net/usb/hso.c:297:
+#define dev2net(x) (x->port_data.dev_net)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#4361: FILE: drivers/net/usb/hso.c:298:
+#define dev2ser(x) (x->port_data.dev_serial)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4370: FILE: drivers/net/usb/hso.c:307:
+	printk(KERN_DEBUG "[%d:%s]: len %d", line_count, func_name, len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4374: FILE: drivers/net/usb/hso.c:311:
+			printk("\n    0x%03x:  ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4375: FILE: drivers/net/usb/hso.c:312:
+		printk("%02x ", (unsigned char)buf[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4377: FILE: drivers/net/usb/hso.c:314:
+	printk("\n");

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hso_sysfs_show_porttype' to 'hsotype_show'
#4516: FILE: drivers/net/usb/hso.c:453:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#4517: FILE: drivers/net/usb/hso.c:454:
+static DEVICE_ATTR(hsotype, S_IRUGO, hso_sysfs_show_porttype, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4573: FILE: drivers/net/usb/hso.c:510:
+static struct hso_serial *get_serial_by_shared_int_and_type(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4583: FILE: drivers/net/usb/hso.c:520:
+		if (serial_table[i]
+		    && (dev2ser(serial_table[i])->shared_int == shared_int)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4584: FILE: drivers/net/usb/hso.c:521:
+		    && (dev2ser(serial_table[i])->shared_int == shared_int)
+		    && ((serial_table[i]->port_spec & HSO_PORT_MASK) == port)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4592: FILE: drivers/net/usb/hso.c:529:
+static struct hso_serial *get_serial_by_index(unsigned index)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial_table[index]"
#4613: FILE: drivers/net/usb/hso.c:550:
+		if (serial_table[index] == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4620: FILE: drivers/net/usb/hso.c:557:
+	printk(KERN_ERR "%s: no free serial devices in table\n", __func__);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4624: FILE: drivers/net/usb/hso.c:561:
+static void set_serial_by_index(unsigned index, struct hso_serial *serial)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4627: FILE: drivers/net/usb/hso.c:564:
+	unsigned long flags;
+	spin_lock_irqsave(&serial_table_lock, flags);

WARNING:TYPO_SPELLING: 'meaningfull' may be misspelled - perhaps 'meaningful'?
#4635: FILE: drivers/net/usb/hso.c:572:
+/* log a meaningfull explanation of an USB status */
          ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4741: FILE: drivers/net/usb/hso.c:678:
+	 * anyhow */

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'odev->out_endp->bEndpointAddress'
#4775: FILE: drivers/net/usb/hso.c:712:
+					  odev->out_endp->
+					  bEndpointAddress & 0x7F),

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#4775: FILE: drivers/net/usb/hso.c:712:
+					  bEndpointAddress & 0x7F),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4786: FILE: drivers/net/usb/hso.c:723:
+		dev_warn(&odev->parent->interface->dev,
+			"failed mux_bulk_tx_urb %d", result);

WARNING:SIZEOF_PARENTHESIS: sizeof info->bus_info should be sizeof(info->bus_info)
#4806: FILE: drivers/net/usb/hso.c:743:
+	usb_make_path(odev->parent->usb, info->bus_info, sizeof info->bus_info);

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#4809: FILE: drivers/net/usb/hso.c:746:
+static struct ethtool_ops ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4827: FILE: drivers/net/usb/hso.c:764:
+	if (odev->mux_bulk_tx_urb
+	    && (odev->mux_bulk_tx_urb->status == -EINPROGRESS))

CHECK:CAMELCASE: Avoid CamelCase: <packetizeRx>
#4835: FILE: drivers/net/usb/hso.c:772:
+static void packetizeRx(struct hso_net *odev, unsigned char *ip_pkt,

WARNING:MINMAX: min() should probably be min_t(int, 128, count)
#4845: FILE: drivers/net/usb/hso.c:782:
+	DUMP(ip_pkt, min(128, (int)count));

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'odev->rx_buf_missing'
#4855: FILE: drivers/net/usb/hso.c:792:
+			     odev->rx_buf_missing) ? count : odev->
+			    rx_buf_missing;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4868: FILE: drivers/net/usb/hso.c:805:
+				 * continue to WAIT_DATA */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frame_len > DEFAULT_MRU'
#4871: FILE: drivers/net/usb/hso.c:808:
+				if ((frame_len > DEFAULT_MRU) ||
+				    (frame_len < sizeof(struct iphdr))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frame_len < sizeof(struct iphdr)'
#4871: FILE: drivers/net/usb/hso.c:808:
+				if ((frame_len > DEFAULT_MRU) ||
+				    (frame_len < sizeof(struct iphdr))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4891: FILE: drivers/net/usb/hso.c:828:
+				 * after tail. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around odev->rx_ip_hdr
#4895: FILE: drivers/net/usb/hso.c:832:
+				memcpy(tmp_rx_buf, (char *)&(odev->rx_ip_hdr),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4913: FILE: drivers/net/usb/hso.c:850:
+			 * buffer into the waiting sk_buf. */

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#4926: FILE: drivers/net/usb/hso.c:863:
+						__constant_htons(ETH_P_IP);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:LINE_SPACING: Missing a blank line after declarations
#5001: FILE: drivers/net/usb/hso.c:938:
+		u8 crc_check[4] = { 0xDE, 0xAD, 0xBE, 0xEF };
+		rest = urb->actual_length % odev->in_endp->wMaxPacketSize;

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#5001: FILE: drivers/net/usb/hso.c:938:
+		rest = urb->actual_length % odev->in_endp->wMaxPacketSize;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rest == 5'
#5002: FILE: drivers/net/usb/hso.c:939:
+		if (((rest == 5) || (rest == 6))
+		    && !memcmp(((u8 *) urb->transfer_buffer) +
+			       urb->actual_length - 4, crc_check, 4)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rest == 6'
#5002: FILE: drivers/net/usb/hso.c:939:
+		if (((rest == 5) || (rest == 6))
+		    && !memcmp(((u8 *) urb->transfer_buffer) +
+			       urb->actual_length - 4, crc_check, 4)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5003: FILE: drivers/net/usb/hso.c:940:
+		if (((rest == 5) || (rest == 6))
+		    && !memcmp(((u8 *) urb->transfer_buffer) +

CHECK:SPACING: No space is necessary after a cast
#5003: FILE: drivers/net/usb/hso.c:940:
+		    && !memcmp(((u8 *) urb->transfer_buffer) +

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5012: FILE: drivers/net/usb/hso.c:949:
+		 * stack if the packet is complete. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5021: FILE: drivers/net/usb/hso.c:958:
+	 * another frame. Reuse same as received. */

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'odev->in_endp->bEndpointAddress'
#5026: FILE: drivers/net/usb/hso.c:963:
+					  odev->in_endp->
+					  bEndpointAddress & 0x7F),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5031: FILE: drivers/net/usb/hso.c:968:
+	 * arrives. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!tty'
#5047: FILE: drivers/net/usb/hso.c:984:
+	if ((!tty) || (!tty->termios) || (!serial)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!tty->termios'
#5047: FILE: drivers/net/usb/hso.c:984:
+	if ((!tty) || (!tty->termios) || (!serial)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!serial'
#5047: FILE: drivers/net/usb/hso.c:984:
+	if ((!tty) || (!tty->termios) || (!serial)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5048: FILE: drivers/net/usb/hso.c:985:
+		printk(KERN_ERR "%s: no tty structures", __func__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5055: FILE: drivers/net/usb/hso.c:992:
+	/*
+	 * The default requirements for this device are:

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5075: FILE: drivers/net/usb/hso.c:1012:
+		| ICANON	/* disable erase, kill, werase, and rprnt
+				   special characters */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5075: FILE: drivers/net/usb/hso.c:1012:
+				   special characters */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5077: FILE: drivers/net/usb/hso.c:1014:
+		| ISIG		/* disable interrupt, quit, and suspend special
+				   characters */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5077: FILE: drivers/net/usb/hso.c:1014:
+				   characters */

WARNING:TYPO_SPELLING: 'buad' may be misspelled - perhaps 'baud'?
#5084: FILE: drivers/net/usb/hso.c:1021:
+		| CBAUDEX);	/* clear current buad rate */
 		           	                 ^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5092: FILE: drivers/net/usb/hso.c:1029:
+	/*
+	 * Force low_latency on; otherwise the pushes are scheduled;

WARNING:RETURN_VOID: void function return statements are not generally useful
#5098: FILE: drivers/net/usb/hso.c:1035:
+	return;
+}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#5101: FILE: drivers/net/usb/hso.c:1038:
+static int hso_serial_open(struct tty_struct *tty, struct file *filp)
                                                                 ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial"
#5107: FILE: drivers/net/usb/hso.c:1044:
+	if (serial == NULL || serial->magic != HSO_SERIAL_MAGIC) {

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#5125: FILE: drivers/net/usb/hso.c:1062:
+	/* check for port allready opened, if not set the termios */
 	                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#5153: FILE: drivers/net/usb/hso.c:1090:
+static void hso_serial_close(struct tty_struct *tty, struct file *filp)
                                                                   ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial"
#5193: FILE: drivers/net/usb/hso.c:1130:
+	if (serial == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5194: FILE: drivers/net/usb/hso.c:1131:
+		printk(KERN_ERR "%s: serial is NULL\n", __func__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#5252: FILE: drivers/net/usb/hso.c:1189:
+	return;
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial"
#5262: FILE: drivers/net/usb/hso.c:1199:
+	if (serial == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#5305: FILE: drivers/net/usb/hso.c:1242:
+	if_num = serial->parent->interface->altsetting->desc.bInterfaceNumber;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5377: FILE: drivers/net/usb/hso.c:1314:
+		printk(KERN_ERR "%s: Wrong arguments\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#5382: FILE: drivers/net/usb/hso.c:1319:
+	ctrl_req->wValue = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#5383: FILE: drivers/net/usb/hso.c:1320:
+	ctrl_req->wIndex = hso_port_to_mux(port);

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#5384: FILE: drivers/net/usb/hso.c:1321:
+	ctrl_req->wLength = size;

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#5388: FILE: drivers/net/usb/hso.c:1325:
+		ctrl_req->bRequestType = USB_DIR_IN |

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#5391: FILE: drivers/net/usb/hso.c:1328:
+		ctrl_req->bRequest = USB_CDC_GET_ENCAPSULATED_RESPONSE;

CHECK:SPACING: No space is necessary after a cast
#5411: FILE: drivers/net/usb/hso.c:1348:
+			     (u8 *) ctrl_req,

WARNING:SPLIT_STRING: quoted string split across lines
#5439: FILE: drivers/net/usb/hso.c:1376:
+			"ERROR: mux'd reads with multiple buffers "
+			"not possible\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "serial"
#5481: FILE: drivers/net/usb/hso.c:1418:
+			if (serial != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5486: FILE: drivers/net/usb/hso.c:1423:
+					 * port i */

WARNING:SPLIT_STRING: quoted string split across lines
#5490: FILE: drivers/net/usb/hso.c:1427:
+					D1("Already pending a read on "
+					   "port %d\n", i);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5502: FILE: drivers/net/usb/hso.c:1439:
+	if (NULL == serial)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:RETURN_VOID: void function return statements are not generally useful
#5538: FILE: drivers/net/usb/hso.c:1475:
+	return;
+}

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'serial->out_endp->bEndpointAddress'
#5550: FILE: drivers/net/usb/hso.c:1487:
+					  serial->out_endp->
+					  bEndpointAddress & 0x7F),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb"
#5616: FILE: drivers/net/usb/hso.c:1553:
+	if (urb == NULL || serial == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial"
#5616: FILE: drivers/net/usb/hso.c:1553:
+	if (urb == NULL || serial == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#5658: FILE: drivers/net/usb/hso.c:1595:
+			u8 crc_check[4] = { 0xDE, 0xAD, 0xBE, 0xEF };
+			rest =

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rest == 5'
#5661: FILE: drivers/net/usb/hso.c:1598:
+			if (((rest == 5) || (rest == 6))
+			    && !memcmp(((u8 *) urb->transfer_buffer) +
+				       urb->actual_length - 4, crc_check, 4)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rest == 6'
#5661: FILE: drivers/net/usb/hso.c:1598:
+			if (((rest == 5) || (rest == 6))
+			    && !memcmp(((u8 *) urb->transfer_buffer) +
+				       urb->actual_length - 4, crc_check, 4)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5662: FILE: drivers/net/usb/hso.c:1599:
+			if (((rest == 5) || (rest == 6))
+			    && !memcmp(((u8 *) urb->transfer_buffer) +

CHECK:SPACING: No space is necessary after a cast
#5662: FILE: drivers/net/usb/hso.c:1599:
+			    && !memcmp(((u8 *) urb->transfer_buffer) +

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5680: FILE: drivers/net/usb/hso.c:1617:
+	 * another frame */

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'serial->in_endp->bEndpointAddress'
#5684: FILE: drivers/net/usb/hso.c:1621:
+					  serial->in_endp->
+					  bEndpointAddress & 0x7F),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5688: FILE: drivers/net/usb/hso.c:1625:
+	 * arrives. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#5738: FILE: drivers/net/usb/hso.c:1675:
+	if ((hso_dev->port_spec & HSO_PORT_MASK) == HSO_PORT_NETWORK) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#5740: FILE: drivers/net/usb/hso.c:1677:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5758: FILE: drivers/net/usb/hso.c:1695:
+	for (i = 0; i < MUX_BULK_RX_BUF_COUNT; i++) {
+

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'hso_net->in_endp->bEndpointAddress'
#5764: FILE: drivers/net/usb/hso.c:1701:
+						  hso_net->in_endp->
+						  bEndpointAddress & 0x7F),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5774: FILE: drivers/net/usb/hso.c:1711:
+			dev_warn(&hso_dev->usb->dev,
+				"%s failed mux_bulk_rx_urb[%d] %d\n", __func__,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#5793: FILE: drivers/net/usb/hso.c:1730:
+
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5809: FILE: drivers/net/usb/hso.c:1746:
+	 * allocated in hso_serial_start) */

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'serial->in_endp->bEndpointAddress'
#5816: FILE: drivers/net/usb/hso.c:1753:
+							  serial->in_endp->
+							  bEndpointAddress &

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#5853: FILE: drivers/net/usb/hso.c:1790:
+		if (serial->rx_urb[i])
+				usb_kill_urb(serial->rx_urb[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5910: FILE: drivers/net/usb/hso.c:1847:
+	serial->parent->dev = tty_register_device(tty_drv, minor,
+					&serial->parent->interface->dev);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#5936: FILE: drivers/net/usb/hso.c:1873:
+		if (!serial->rx_data[i]) {
+			dev_err(dev, "%s - Out of memory\n", __func__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#5960: FILE: drivers/net/usb/hso.c:1897:
+	if (!serial->tx_buffer) {
+		dev_err(dev, "%s - Out of memory", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!network_table[i]"
#6070: FILE: drivers/net/usb/hso.c:2007:
+		if (network_table[i] == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6091: FILE: drivers/net/usb/hso.c:2028:
+		rv = usb_control_msg(hso_dev->usb, usb_rcvctrlpipe(hso_dev->usb, 0),
+				       enabled ? 0x82 : 0x81, 0x40, 0, 0, NULL, 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6099: FILE: drivers/net/usb/hso.c:2036:
+static void hso_create_rfkill(struct hso_device *hso_dev,
+			     struct usb_interface *interface)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6106: FILE: drivers/net/usb/hso.c:2043:
+	hso_net->rfkill = rfkill_allocate(&interface_to_usbdev(interface)->dev,
+				 RFKILL_TYPE_WLAN);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#6189: FILE: drivers/net/usb/hso.c:2126:
+		if (!hso_net->mux_bulk_rx_buf_pool[i]) {
+			dev_err(&interface->dev, "Could not allocate rx buf\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#6200: FILE: drivers/net/usb/hso.c:2137:
+	if (!hso_net->mux_bulk_tx_buf) {
+		dev_err(&interface->dev, "Could not allocate tx buf\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6239: FILE: drivers/net/usb/hso.c:2176:
+static struct hso_device *hso_create_bulk_serial_device(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#6273: FILE: drivers/net/usb/hso.c:2210:
+	if (!

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#6356: FILE: drivers/net/usb/hso.c:2293:
+
+}

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#6389: FILE: drivers/net/usb/hso.c:2326:
+	if (!mux->shared_intr_buf) {
+		dev_err(&interface->dev, "Could not allocate intr buf?");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6481: FILE: drivers/net/usb/hso.c:2418:
+	 * the device itself */

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#6487: FILE: drivers/net/usb/hso.c:2424:
+	if (interface->cur_altsetting->desc.bInterfaceClass != 0xFF) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6492: FILE: drivers/net/usb/hso.c:2429:
+	 * configuration */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6520: FILE: drivers/net/usb/hso.c:2457:
+				hso_dev = hso_create_mux_serial_device(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#6534: FILE: drivers/net/usb/hso.c:2471:
+		if (((port_spec & HSO_PORT_MASK) == HSO_PORT_NETWORK)
+		    && !disable_net)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'serial_table[i]->interface == iface'
#6620: FILE: drivers/net/usb/hso.c:2557:
+		if (serial_table[i] && (serial_table[i]->interface == iface)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'network_table[i]->interface == iface'
#6629: FILE: drivers/net/usb/hso.c:2566:
+		if (network_table[i] &&
+		    (network_table[i]->interface == iface)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'serial_table[i]->interface == iface'
#6649: FILE: drivers/net/usb/hso.c:2586:
+		if (serial_table[i] && (serial_table[i]->interface == iface)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'network_table[i]->interface == iface'
#6662: FILE: drivers/net/usb/hso.c:2599:
+		if (network_table[i] &&
+		    (network_table[i]->interface == iface)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6666: FILE: drivers/net/usb/hso.c:2603:
+			 * device. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'serial_table[i]->interface == interface'
#6696: FILE: drivers/net/usb/hso.c:2633:
+		if (serial_table[i]
+		    && (serial_table[i]->interface == interface)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#6697: FILE: drivers/net/usb/hso.c:2634:
+		if (serial_table[i]
+		    && (serial_table[i]->interface == interface)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'network_table[i]->interface == interface'
#6709: FILE: drivers/net/usb/hso.c:2646:
+		if (network_table[i]
+		    && (network_table[i]->interface == interface)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#6710: FILE: drivers/net/usb/hso.c:2647:
+		if (network_table[i]
+		    && (network_table[i]->interface == interface)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6713: FILE: drivers/net/usb/hso.c:2650:
+			 * traffic needs to start it again when suspended */

ERROR:SPACING: space required before the open parenthesis '('
#6718: FILE: drivers/net/usb/hso.c:2655:
+			if(rfk)

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#6735: FILE: drivers/net/usb/hso.c:2672:
+	for (i = 0; i < iface->desc.bNumEndpoints; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#6738: FILE: drivers/net/usb/hso.c:2675:
+		    ((endp->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) == type))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6774: FILE: drivers/net/usb/hso.c:2711:
+			 usb_rcvintpipe(usb,
+				shared_int->intr_endp->bEndpointAddress & 0x7F),

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#6778: FILE: drivers/net/usb/hso.c:2715:
+			 shared_int->intr_endp->bInterval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6783: FILE: drivers/net/usb/hso.c:2720:
+		dev_warn(&usb->dev, "%s failed mux_intr_urb %d", __func__,
+			result);

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#6789: FILE: drivers/net/usb/hso.c:2726:
+static struct tty_operations hso_serial_ops = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6816: FILE: drivers/net/usb/hso.c:2753:
+	printk(KERN_INFO "hso: %s\n", version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6852: FILE: drivers/net/usb/hso.c:2789:
+		printk(KERN_ERR "%s - tty_register_driver failed(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6853: FILE: drivers/net/usb/hso.c:2790:
+		printk(KERN_ERR "%s - tty_register_driver failed(%d)\n",
+			__func__, result);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6860: FILE: drivers/net/usb/hso.c:2797:
+		printk(KERN_ERR "Could not register hso driver? error: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6861: FILE: drivers/net/usb/hso.c:2798:
+		printk(KERN_ERR "Could not register hso driver? error: %d\n",
+			result);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6873: FILE: drivers/net/usb/hso.c:2810:
+	printk(KERN_INFO "hso: unloaded\n");

CHECK:CAMELCASE: Avoid CamelCase: <Version>
#6887: FILE: drivers/net/usb/hso.c:2824:
+MODULE_INFO(Version, DRIVER_VERSION);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#6891: FILE: drivers/net/usb/hso.c:2828:
+module_param(debug, int, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#6895: FILE: drivers/net/usb/hso.c:2832:
+module_param(tty_major, int, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#6899: FILE: drivers/net/usb/hso.c:2836:
+module_param(disable_net, int, S_IRUGO | S_IWUSR);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6906: FILE: include/linux/smc911x.h:1:
+#ifndef __SMC911X_H__

CHECK:BIT_MACRO: Prefer using the BIT macro
#6909: FILE: include/linux/smc911x.h:4:
+#define SMC911X_USE_16BIT (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#6910: FILE: include/linux/smc911x.h:5:
+#define SMC911X_USE_32BIT (1 << 1)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000268317.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 253 errors, 134 warnings, 184 checks, 6613 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000268317.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
