WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/bed1ffca022cc876fb83161d26670e9b5d3cf36b

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#51: 
some metadata informations:
              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'diplaying' may be misspelled - perhaps 'displaying'?
#63: 
a raw hex but higher level values diplaying is on my TODO list.
                                  ^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/linux/ftrace.h:522:
+extern void arch_init_ftrace_syscalls(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: include/linux/ftrace.h:523:
+extern struct syscall_metadata *syscall_nr_to_meta(int nr);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#154: FILE: include/linux/syscalls.h:101:
+#define __SC_STR_ADECL2(t, a, ...)	#a, __SC_STR_ADECL1(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#155: FILE: include/linux/syscalls.h:102:
+#define __SC_STR_ADECL3(t, a, ...)	#a, __SC_STR_ADECL2(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#156: FILE: include/linux/syscalls.h:103:
+#define __SC_STR_ADECL4(t, a, ...)	#a, __SC_STR_ADECL3(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: include/linux/syscalls.h:104:
+#define __SC_STR_ADECL5(t, a, ...)	#a, __SC_STR_ADECL4(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#158: FILE: include/linux/syscalls.h:105:
+#define __SC_STR_ADECL6(t, a, ...)	#a, __SC_STR_ADECL5(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#161: FILE: include/linux/syscalls.h:108:
+#define __SC_STR_TDECL2(t, a, ...)	#t, __SC_STR_TDECL1(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#162: FILE: include/linux/syscalls.h:109:
+#define __SC_STR_TDECL3(t, a, ...)	#t, __SC_STR_TDECL2(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#163: FILE: include/linux/syscalls.h:110:
+#define __SC_STR_TDECL4(t, a, ...)	#t, __SC_STR_TDECL3(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: include/linux/syscalls.h:111:
+#define __SC_STR_TDECL5(t, a, ...)	#t, __SC_STR_TDECL4(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#165: FILE: include/linux/syscalls.h:112:
+#define __SC_STR_TDECL6(t, a, ...)	#t, __SC_STR_TDECL5(__VA_ARGS__)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((__aligned__(4)))
#169: FILE: include/linux/syscalls.h:116:
+	  __attribute__((__aligned__(4)))			\

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__syscalls_metadata") over __attribute__((section("__syscalls_metadata")))
#170: FILE: include/linux/syscalls.h:117:
+	  __attribute__((section("__syscalls_metadata")))	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: include/linux/syscalls.h:119:
+^I^I.name ^I^I= "sys"#sname,^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: include/linux/syscalls.h:120:
+^I^I.nb_args ^I= nb,^I^I^I^I\$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((__aligned__(4)))
#180: FILE: include/linux/syscalls.h:127:
+	  __attribute__((__aligned__(4)))			\

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__syscalls_metadata") over __attribute__((section("__syscalls_metadata")))
#181: FILE: include/linux/syscalls.h:128:
+	  __attribute__((section("__syscalls_metadata")))	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: include/linux/syscalls.h:130:
+^I^I.name ^I^I= "sys_"#sname,^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: include/linux/syscalls.h:131:
+^I^I.nb_args ^I= 0,^I^I^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <SYSCALL_DEFINEx>
#200: FILE: include/linux/syscalls.h:161:
+#define SYSCALL_DEFINEx(x, sname, ...)				\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#200: FILE: include/linux/syscalls.h:161:
+#define SYSCALL_DEFINEx(x, sname, ...)				\
+	static const char *types_##sname[] = {			\
+		__SC_STR_TDECL##x(__VA_ARGS__)			\
+	};							\
+	static const char *args_##sname[] = {			\
+		__SC_STR_ADECL##x(__VA_ARGS__)			\
+	};							\
+	SYSCALL_METADATA(sname, x);				\
+	__SYSCALL_DEFINEx(x, sname, __VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sname' - possible side-effects?
#200: FILE: include/linux/syscalls.h:161:
+#define SYSCALL_DEFINEx(x, sname, ...)				\
+	static const char *types_##sname[] = {			\
+		__SC_STR_TDECL##x(__VA_ARGS__)			\
+	};							\
+	static const char *args_##sname[] = {			\
+		__SC_STR_ADECL##x(__VA_ARGS__)			\
+	};							\
+	SYSCALL_METADATA(sname, x);				\
+	__SYSCALL_DEFINEx(x, sname, __VA_ARGS__)

CHECK:CAMELCASE: Avoid CamelCase: <__SYSCALL_DEFINEx>
#208: FILE: include/linux/syscalls.h:169:
+	__SYSCALL_DEFINEx(x, sname, __VA_ARGS__)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: kernel/trace/trace.h:209:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: kernel/trace/trace_syscalls.c:87:
+	ret = trace_seq_printf(s, "%s -> 0x%lx\n", entry->name,
+				trace->ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: kernel/trace/trace_syscalls.c:153:
+	event = trace_current_buffer_lock_reserve(TRACE_SYSCALL_ENTER, size,
+							0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: kernel/trace/trace_syscalls.c:182:
+	event = trace_current_buffer_lock_reserve(TRACE_SYSCALL_EXIT,
+				sizeof(*entry), 0, 0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: kernel/trace/trace_syscalls.c:207:
+^I.type^I ^I= TRACE_SYSCALL_ENTER,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: kernel/trace/trace_syscalls.c:212:
+^I.type^I ^I= TRACE_SYSCALL_EXIT,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#461: FILE: kernel/trace/trace_syscalls.c:217:
+^I.name^I     ^I= "syscall",$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 14 warnings, 10 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
