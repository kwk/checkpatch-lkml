WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: drivers/mtd/ubi/ubi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#51: FILE: drivers/mtd/ubi/ubi.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#52: FILE: drivers/mtd/ubi/ubi.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#88: FILE: drivers/mtd/ubi/ubi.h:53:
+	printk(KERN_INFO "UBI: " fmt "\n", ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#91: FILE: drivers/mtd/ubi/ubi.h:56:
+	printk(KERN_WARNING "UBI warning: %s: " fmt "\n", __FUNCTION__, \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#91: FILE: drivers/mtd/ubi/ubi.h:56:
+	printk(KERN_WARNING "UBI warning: %s: " fmt "\n", __FUNCTION__, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#95: FILE: drivers/mtd/ubi/ubi.h:60:
+	printk(KERN_ERR "UBI error: %s " fmt "\n", __FUNCTION__,        \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#95: FILE: drivers/mtd/ubi/ubi.h:60:
+	printk(KERN_ERR "UBI error: %s " fmt "\n", __FUNCTION__,        \

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#232: FILE: drivers/mtd/ubi/ubi.h:197:
+	uint32_t leb_ver; /* FIXME: obsolete, to be removed */

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#563: FILE: drivers/mtd/ubi/ubi.h:528:
+ * @dev: class device object to make use of the the Linux device model

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#597: FILE: drivers/mtd/ubi/ubi.h:562:
+	spinlock_t vol_lock;

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#630: FILE: drivers/mtd/ubi/ubi.h:595:
+ * @dev: class device object to use the the Linux device model

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#633: FILE: drivers/mtd/ubi/ubi.h:598:
+ * @volumes_list_lock: protects the the @volumes list

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#653: FILE: drivers/mtd/ubi/ubi.h:618:
+	spinlock_t volumes_list_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#654: FILE: drivers/mtd/ubi/ubi.h:619:
+	struct mutex vol_check_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#655: FILE: drivers/mtd/ubi/ubi.h:620:
+	struct mutex vol_change_lock;

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#730: FILE: drivers/mtd/ubi/ubi.h:695:
+ * @rb: a pointer to type 'struct rb_node' to to use as a loop counter

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rb' - possible side-effects?
#735: FILE: drivers/mtd/ubi/ubi.h:700:
+#define rb_for_each_entry(rb, pos, root, member)                             \
+	for (rb = rb_first(root),                                            \
+	     pos = (rb ? container_of(rb, typeof(*pos), member) : NULL);     \
+	     rb;                                                             \
+	     rb = rb_next(rb), pos = container_of(rb, typeof(*pos), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#735: FILE: drivers/mtd/ubi/ubi.h:700:
+#define rb_for_each_entry(rb, pos, root, member)                             \
+	for (rb = rb_first(root),                                            \
+	     pos = (rb ? container_of(rb, typeof(*pos), member) : NULL);     \
+	     rb;                                                             \
+	     rb = rb_next(rb), pos = container_of(rb, typeof(*pos), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#735: FILE: drivers/mtd/ubi/ubi.h:700:
+#define rb_for_each_entry(rb, pos, root, member)                             \
+	for (rb = rb_first(root),                                            \
+	     pos = (rb ? container_of(rb, typeof(*pos), member) : NULL);     \
+	     rb;                                                             \
+	     rb = rb_next(rb), pos = container_of(rb, typeof(*pos), member))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#752: FILE: drivers/mtd/ubi/ubi.h:717:
+	return y*(x/y) + (!!(x % y)) * y;
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#752: FILE: drivers/mtd/ubi/ubi.h:717:
+	return y*(x/y) + (!!(x % y)) * y;
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#766: FILE: drivers/mtd/ubi/ubi.h:731:
+	return y*(x/y);
 	        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#766: FILE: drivers/mtd/ubi/ubi.h:731:
+	return y*(x/y);
 	           ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#892: FILE: drivers/mtd/ubi/ubi.h:857:
+	switch (vol_id) {
+		case UBI_LAYOUT_VOL_ID:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#896: FILE: drivers/mtd/ubi/ubi.h:861:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456201.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 12 checks, 867 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456201.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
