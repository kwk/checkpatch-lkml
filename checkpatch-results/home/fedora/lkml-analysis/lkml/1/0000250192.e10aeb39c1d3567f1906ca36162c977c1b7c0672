WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#117: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: arch/mips/kernel/kgdb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#123: FILE: arch/mips/kernel/kgdb.c:2:
+ * arch/mips/kernel/kgdb.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#151: FILE: arch/mips/kernel/kgdb.c:30:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:RETURN_VOID: void function return statements are not generally useful
#216: FILE: arch/mips/kernel/kgdb.c:95:
+	return;
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#220: FILE: arch/mips/kernel/kgdb.c:99:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#239: FILE: arch/mips/kernel/kgdb.c:118:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#279: FILE: arch/mips/kernel/kgdb.c:158:
+	return;
+}

WARNING:TYPO_SPELLING: 'Userpace' may be misspelled - perhaps 'Userspace'?
#295: FILE: arch/mips/kernel/kgdb.c:174:
+	/* Userpace events, ignore. */
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'trap == 9'
#306: FILE: arch/mips/kernel/kgdb.c:185:
+		if ((trap == 9) && (regs->cp0_epc == (unsigned long)breakinst))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs->cp0_epc == (unsigned long)breakinst'
#306: FILE: arch/mips/kernel/kgdb.c:185:
+		if ((trap == 9) && (regs->cp0_epc == (unsigned long)breakinst))

WARNING:CONST_STRUCT: struct kgdb_arch should normally be const
#350: FILE: arch/mips/kernel/kgdb.c:229:
+struct kgdb_arch arch_kgdb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#451: FILE: include/asm-mips/kdebug.h:1:
+#ifndef _ASM_MIPS_KDEBUG_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#470: FILE: include/asm-mips/kgdb.h:1:
+#ifdef __KERNEL__

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#496: FILE: include/asm-mips/kgdb.h:27:
+#define NUMREGBYTES		(90*sizeof(u32))
                    		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#497: FILE: include/asm-mips/kgdb.h:28:
+#define NUMCRITREGBYTES		(12*sizeof(u32))
                        		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#499: FILE: include/asm-mips/kgdb.h:30:
+#define NUMREGBYTES		(90*sizeof(u64))
                    		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#500: FILE: include/asm-mips/kgdb.h:31:
+#define NUMCRITREGBYTES		(12*sizeof(u64))
                        		   ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#505: FILE: include/asm-mips/kgdb.h:36:
+	__asm__ __volatile__(

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#513: FILE: include/asm-mips/kgdb.h:44:
+}
+#define CACHE_FLUSH_IS_SAFE	0

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#517: FILE: include/asm-mips/kgdb.h:48:
+extern void handle_exception(struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#518: FILE: include/asm-mips/kgdb.h:49:
+extern void trap_low(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#519: FILE: include/asm-mips/kgdb.h:50:
+extern void breakinst(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250192.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 13 checks, 429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250192.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
