WARNING:TYPO_SPELLING: 'commont' may be misspelled - perhaps 'common'?
#24: 
Subject: [PATCH 06/16] x86: cpu commont have same cpu_init with copying and macro
                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#74: FILE: arch/x86/kernel/cpu/common.c:928:
+	printk(KERN_INFO "Initializing CPU#%d\n", cpu);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#76: FILE: arch/x86/kernel/cpu/common.c:930:
+	clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#76: FILE: arch/x86/kernel/cpu/common.c:930:
+	clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#76: FILE: arch/x86/kernel/cpu/common.c:930:
+	clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 	                                                ^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#100: FILE: arch/x86/kernel/cpu/common.c:954:
+	if (!orig_ist->ist[0]) {
 	               ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: arch/x86/kernel/cpu/common.c:964:
+					panic("Cannot allocate exception "
+					      "stack %ld %d\n", v, cpu);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#113: FILE: arch/x86/kernel/cpu/common.c:967:
+			orig_ist->ist[v] = t->x86_tss.ist[v] =
 			          ^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#113: FILE: arch/x86/kernel/cpu/common.c:967:
+			orig_ist->ist[v] = t->x86_tss.ist[v] =
 			                              ^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#113: FILE: arch/x86/kernel/cpu/common.c:967:
+			orig_ist->ist[v] = t->x86_tss.ist[v] =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: arch/x86/kernel/cpu/common.c:983:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#144: FILE: arch/x86/kernel/cpu/common.c:998:
+	if (kgdb_connected && arch_kgdb_ops.correct_hw_break)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#146: FILE: arch/x86/kernel/cpu/common.c:1000:
+	else {
[...]
+	set_debugreg(0UL, 0);

CHECK:BRACES: Unbalanced braces around else statement
#146: FILE: arch/x86/kernel/cpu/common.c:1000:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#212: FILE: arch/x86/kernel/cpu/common_64.c:989:
+		printk(KERN_WARNING "CPU#%d already initialized!\n", cpu);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#213: FILE: arch/x86/kernel/cpu/common_64.c:990:
+		for (;;) local_irq_enable();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#216: FILE: arch/x86/kernel/cpu/common_64.c:993:
+	printk(KERN_INFO "Initializing CPU#%d\n", cpu);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#219: FILE: arch/x86/kernel/cpu/common_64.c:996:
+		clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 		                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#219: FILE: arch/x86/kernel/cpu/common_64.c:996:
+		clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 		                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#219: FILE: arch/x86/kernel/cpu/common_64.c:996:
+		clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 		                                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: arch/x86/kernel/cpu/common_64.c:1007:
+		BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: arch/x86/kernel/cpu/common_64.c:1054:
+	int cpu = raw_smp_processor_id();
+	cpu_clear(cpu, cpu_initialized);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 9 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
