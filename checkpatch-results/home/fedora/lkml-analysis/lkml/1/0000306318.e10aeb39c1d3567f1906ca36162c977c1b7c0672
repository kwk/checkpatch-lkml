ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: mm/memcontrol.c:230:
+                                        struct mem_cgroup *mem)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: mm/memcontrol.c:230:
+static inline void set_mem_cgroup(struct page_cgroup *pc,
+                                        struct mem_cgroup *mem)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: mm/memcontrol.c:230:
+                                        struct mem_cgroup *mem)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#63: FILE: mm/memcontrol.c:238:
+	struct mem_cgroup *mem = pc->mem_cgroup;
+	res_counter_uncharge(&mem->res, PAGE_SIZE);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'sould' may be misspelled - perhaps 'could'?
#68: FILE: mm/memcontrol.c:243:
+/* This sould be called in an RCU-protected section. */
         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: mm/memcontrol.c:247:
+	struct mem_cgroup *mem = rcu_dereference(mm->mem_cgroup);
+	get_mem_cgroup(mem);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: mm/memcontrol.c:252:
+static inline void mm_init_mem_cgroup(struct mm_struct *mm,
+					struct task_struct *p)

WARNING:LINE_SPACING: Missing a blank line after declarations
#80: FILE: mm/memcontrol.c:255:
+	struct mem_cgroup *mem = mem_cgroup_from_task(p);
+	get_mem_cgroup(mem);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: mm/memcontrol.c:374:
+static inline int mem_cgroup_try_to_allocate(struct mem_cgroup *mem,
+						gfp_t gfp_mask)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#149: FILE: mm/memcontrol.c:399:
+		congestion_wait(WRITE, HZ/10);
 		                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: mm/memcontrol.c:881:
+static inline void set_mem_cgroup(struct page_cgroup *pc,
+					struct mem_cgroup *mem) {}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: mm/memcontrol.c:890:
+static inline void mm_init_mem_cgroup(struct mm_struct *mm,
+					struct task_struct *p) {}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: mm/memcontrol.c:894:
+static inline int mem_cgroup_try_to_allocate(struct mem_cgroup *mem,
+					gfp_t gfp_mask)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: mm/memcontrol.c:898:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: mm/memcontrol.c:898:
+  $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306318.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 7 checks, 361 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306318.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
