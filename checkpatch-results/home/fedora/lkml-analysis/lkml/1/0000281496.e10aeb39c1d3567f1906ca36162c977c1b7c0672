CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: arch/x86/pci/irq.c:49:
+	int (*set)(struct pci_dev *router, struct pci_dev *dev, int pirq,
+		int new);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: arch/x86/pci/irq.c:82:
+		DBG(KERN_DEBUG "PCI: Interrupt Routing Table found at 0x%p\n",
+			rt);

CHECK:SPACING: No space is necessary after a cast
#110: FILE: arch/x86/pci/irq.c:105:
+	for (addr = (u8 *) __va(0xf0000); addr < (u8 *) __va(0x100000);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: arch/x86/pci/irq.c:135:
+			DBG(KERN_DEBUG "%02x:%02x slot=%02x", e->bus,
+				e->devfn/8, e->slot);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#130: FILE: arch/x86/pci/irq.c:135:
+				e->devfn/8, e->slot);
 				        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: arch/x86/pci/irq.c:138:
+				DBG(" %d:%02x/%04x", j, e->irq[j].link,
+					e->irq[j].bitmap);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: arch/x86/pci/irq.c:184:
+read_config_nybble(struct pci_dev *router, unsigned offset, unsigned nr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: arch/x86/pci/irq.c:184:
+read_config_nybble(struct pci_dev *router, unsigned offset, unsigned nr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#159: FILE: arch/x86/pci/irq.c:193:
+static void write_config_nybble(struct pci_dev *router, unsigned offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: arch/x86/pci/irq.c:194:
+static void write_config_nybble(struct pci_dev *router, unsigned offset,
+	unsigned nr, unsigned int val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#160: FILE: arch/x86/pci/irq.c:194:
+	unsigned nr, unsigned int val)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#231: FILE: arch/x86/pci/irq.c:303:
+	return read_config_nybble(router, 0x43, pirqmap[pirq-1]);
 	                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: arch/x86/pci/irq.c:492:
+static int pirq_serverworks_set(struct pci_dev *router, struct pci_dev *dev,
+	int pirq, int irq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#340: FILE: arch/x86/pci/irq.c:514:
+	printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#351: FILE: arch/x86/pci/irq.c:523:
+	printk(KERN_INFO

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: arch/x86/pci/irq.c:688:
+static __init int serverworks_router_probe(struct irq_router *r,
+		struct pci_dev *router, u16 device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: arch/x86/pci/irq.c:863:
+		if (rt->rtr_vendor == h->vendor &&
+			h->probe(r, pirq_router_dev, rt->rtr_device))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: arch/x86/pci/irq.c:867:
+		if (pirq_router_dev->vendor == h->vendor &&
+			h->probe(r, pirq_router_dev, pirq_router_dev->device))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: arch/x86/pci/irq.c:888:
+		if (info->bus == dev->bus->number &&
+			PCI_SLOT(info->devfn) == PCI_SLOT(dev->devfn))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: arch/x86/pci/irq.c:930:
+	DBG(" -> PIRQ %02x, mask %04x, excl %04x", pirq, mask,
+		pirq_table->exclusive_irqs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: arch/x86/pci/irq.c:944:
+	if (acer_tm360_irqrouting && dev->irq == 11 &&
+		dev->vendor == PCI_VENDOR_ID_O2) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#776: FILE: arch/x86/pci/irq.c:960:
+			printk("\n" KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: arch/x86/pci/irq.c:970:
+			if (pirq_penalty[i] < pirq_penalty[newirq] &&
+				can_request_irq(i, IRQF_SHARED))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#797: FILE: arch/x86/pci/irq.c:981:
+	} else if (r->get && (irq = r->get(pirq_router_dev, dev, pirq)) && \

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#797: FILE: arch/x86/pci/irq.c:981:
+	} else if (r->get && (irq = r->get(pirq_router_dev, dev, pirq)) && \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#813: FILE: arch/x86/pci/irq.c:1005:
+	printk(KERN_INFO "PCI: %s IRQ %d for device %s\n", msg, irq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: arch/x86/pci/irq.c:1006:
+	printk(KERN_INFO "PCI: %s IRQ %d for device %s\n", msg, irq,
+		pci_name(dev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: arch/x86/pci/irq.c:1020:
+^I^I^I * information. Give a warning! $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#828: FILE: arch/x86/pci/irq.c:1022:
+			if (dev2->irq && dev2->irq != irq && \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#835: FILE: arch/x86/pci/irq.c:1026:
+				printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#847: FILE: arch/x86/pci/irq.c:1035:
+				printk(KERN_INFO

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#866: FILE: arch/x86/pci/irq.c:1057:
+			DBG(KERN_DEBUG "%s: ignoring bogus IRQ %d\n",
+				pci_name(dev), dev->irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: arch/x86/pci/irq.c:1062:
+^I^I * ignore its ISA use penalty $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: arch/x86/pci/irq.c:1065:
+		if (pirq_penalty[dev->irq] >= 100 &&
+				pirq_penalty[dev->irq] < 100000)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#898: FILE: arch/x86/pci/irq.c:1087:
+				irq = IO_APIC_get_PCI_irq_vector(dev->bus->number,
+					PCI_SLOT(dev->devfn), pin);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: arch/x86/pci/irq.c:1100:
+					irq = IO_APIC_get_PCI_irq_vector(bridge->bus->number,
+							PCI_SLOT(bridge->devfn),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#920: FILE: arch/x86/pci/irq.c:1103:
+						printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#927: FILE: arch/x86/pci/irq.c:1109:
+					printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#937: FILE: arch/x86/pci/irq.c:1133:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: arch/x86/pci/irq.c:1134:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",
+			d->ident);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#947: FILE: arch/x86/pci/irq.c:1147:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: arch/x86/pci/irq.c:1148:
+		printk(KERN_INFO "%s detected - fixing broken IRQ routing\n",
+			d->ident);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: arch/x86/pci/irq.c:1161:
+			DMI_MATCH(DMI_PRODUCT_VERSION,
+				"HP Pavilion Notebook Model GE"),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: arch/x86/pci/irq.c:1202:
+^I^I * routing table $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: arch/x86/pci/irq.c:1256:
+			irq = IO_APIC_get_PCI_irq_vector(dev->bus->number,
+				PCI_SLOT(dev->devfn), pin);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: arch/x86/pci/irq.c:1272:
+				irq = IO_APIC_get_PCI_irq_vector(bridge->bus->number,
 						PCI_SLOT(bridge->devfn), pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1018: FILE: arch/x86/pci/irq.c:1274:
+					printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1027: FILE: arch/x86/pci/irq.c:1282:
+				printk(KERN_INFO

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1038: FILE: arch/x86/pci/irq.c:1294:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: arch/x86/pci/irq.c:1296:
+^I^I * a problem.. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: arch/x86/pci/irq.c:1299:
+		if (dev->class >> 8 == PCI_CLASS_STORAGE_IDE &&
+				!(dev->class & 0x5))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1048: FILE: arch/x86/pci/irq.c:1302:
+		printk(KERN_WARNING

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281496.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 19 warnings, 27 checks, 944 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281496.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
