ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#172: FILE: include/linux/cpuset.h:87:
+#define cpuset_init_dirty_nodes(__mapping)				\
+	(__mapping)->dirty_nodes = NODE_MASK_NONE

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#175: FILE: include/linux/cpuset.h:90:
+#define cpuset_update_dirty_nodes(__mapping, __page)			\
+	node_set(page_to_nid(__page), (__mapping)->dirty_nodes);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#178: FILE: include/linux/cpuset.h:93:
+#define cpuset_clear_dirty_nodes(__mapping)				\
+	(__mapping)->dirty_nodes = NODE_MASK_NONE

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__nodemask_ptr' - possible side-effects?
#181: FILE: include/linux/cpuset.h:96:
+#define cpuset_intersects_dirty_nodes(__mapping, __nodemask_ptr)	\
+	(!(__nodemask_ptr) ||						\
+	 nodes_intersects((__mapping)->dirty_nodes, *(__nodemask_ptr)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#188: FILE: include/linux/cpuset.h:103:
+#define cpuset_init_dirty_nodes(__mapping)				\
+	(__mapping)->dirty_nodes = NULL

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/linux/cpuset.h:106:
+extern void cpuset_update_dirty_nodes(struct address_space *mapping,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/cpuset.h:108:
+extern void cpuset_clear_dirty_nodes(struct address_space *mapping);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/cpuset.h:109:
+extern int cpuset_intersects_dirty_nodes(struct address_space *mapping,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210099.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 1 warnings, 4 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210099.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
