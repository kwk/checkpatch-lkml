WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1204: FILE: drivers/mfd/tps65010.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1221: FILE: drivers/mfd/tps65010.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1222: FILE: drivers/mfd/tps65010.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#1240: FILE: drivers/mfd/tps65010.c:37:
+#include <asm/gpio.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1242: FILE: drivers/mfd/tps65010.c:39:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1278: FILE: drivers/mfd/tps65010.c:75:
+	struct mutex		lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1307: FILE: drivers/mfd/tps65010.c:104:
+	snprintf(buf, len, "%02x%s%s%s%s%s%s%s%s\n",
+		chgstatus,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1312: FILE: drivers/mfd/tps65010.c:109:
+			((chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
 			                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1323: FILE: drivers/mfd/tps65010.c:120:
+	snprintf(buf, len, "%02x %s%s%s%s%s%s%s%s\n",
+		regstatus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: drivers/mfd/tps65010.c:142:
+	snprintf(buf, len, "%02x %s%s%s AC=%d%% USB=%dmA %sCharge\n",
+		chgconfig, hibit,

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1349: FILE: drivers/mfd/tps65010.c:146:
+		case 3:		p = 100; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1350: FILE: drivers/mfd/tps65010.c:147:
+		case 2:		p = 75; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1351: FILE: drivers/mfd/tps65010.c:148:
+		case 1:		p = 50; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1352: FILE: drivers/mfd/tps65010.c:149:
+		default:	p = 25; break;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1366: FILE: drivers/mfd/tps65010.c:163:
+	char buf [100];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1368: FILE: drivers/mfd/tps65010.c:165:
+	dbg_chgstat(buf, sizeof buf, chgstatus);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1374: FILE: drivers/mfd/tps65010.c:171:
+	char buf [100];

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1376: FILE: drivers/mfd/tps65010.c:173:
+	dbg_regstat(buf, sizeof buf, regstatus);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1382: FILE: drivers/mfd/tps65010.c:179:
+	char buf [100];

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1384: FILE: drivers/mfd/tps65010.c:181:
+	dbg_chgconf(por, buf, sizeof buf, chgconfig);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1402: FILE: drivers/mfd/tps65010.c:199:
+	unsigned	i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1407: FILE: drivers/mfd/tps65010.c:204:
+	case TPS65010:	chip = "tps65010"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1408: FILE: drivers/mfd/tps65010.c:205:
+	case TPS65011:	chip = "tps65011"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1409: FILE: drivers/mfd/tps65010.c:206:
+	case TPS65012:	chip = "tps65012"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1410: FILE: drivers/mfd/tps65010.c:207:
+	case TPS65013:	chip = "tps65013"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1411: FILE: drivers/mfd/tps65010.c:208:
+	default:	chip = NULL; break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: drivers/mfd/tps65010.c:211:
+	seq_printf(s, "driver  %s\nversion %s\nchip    %s\n\n",
+			DRIVER_NAME, DRIVER_VERSION, chip);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1424: FILE: drivers/mfd/tps65010.c:221:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1429: FILE: drivers/mfd/tps65010.c:226:
+	dbg_chgconf(tps->por, buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1433: FILE: drivers/mfd/tps65010.c:230:
+	dbg_chgstat(buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1436: FILE: drivers/mfd/tps65010.c:233:
+	dbg_chgstat(buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1441: FILE: drivers/mfd/tps65010.c:238:
+	dbg_regstat(buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1444: FILE: drivers/mfd/tps65010.c:241:
+	dbg_regstat(buf, sizeof buf, value);

CHECK:SPACING: No space is necessary after a cast
#1448: FILE: drivers/mfd/tps65010.c:245:
+	(void) schedule_delayed_work(&tps->work, POWER_POLL_DELAY);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1450: FILE: drivers/mfd/tps65010.c:247:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1463: FILE: drivers/mfd/tps65010.c:260:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: drivers/mfd/tps65010.c:265:
+	seq_printf(s, "led1 %s, on=%02x, per=%02x, %d/%d msec\n",
+		(value & 0x80)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1477: FILE: drivers/mfd/tps65010.c:274:
+	seq_printf(s, "led2 %s, on=%02x, per=%02x, %d/%d msec\n",
+		(value & 0x80)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1490: FILE: drivers/mfd/tps65010.c:287:
+			seq_printf(s, "  gpio%d-out %s\n", i + 1,
+				(value & (1 << i)) ? "low" : "hi ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1493: FILE: drivers/mfd/tps65010.c:290:
+			seq_printf(s, "  gpio%d-in  %s %s %s\n", i + 1,
+				(value & (1 << i)) ? "hi " : "low",

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1514: FILE: drivers/mfd/tps65010.c:311:
+#define	DEBUG_FOPS	&debug_fops

CHECK:BRACES: braces {} should be used on all arms of this statement
#1533: FILE: drivers/mfd/tps65010.c:330:
+	if (tps->nmask2) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1538: FILE: drivers/mfd/tps65010.c:335:
+	} else

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1547: FILE: drivers/mfd/tps65010.c:344:
+#if 0

CHECK:BRACES: braces {} should be used on all arms of this statement
#1560: FILE: drivers/mfd/tps65010.c:357:
+	if (tps->nmask1) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1565: FILE: drivers/mfd/tps65010.c:362:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1568: FILE: drivers/mfd/tps65010.c:365:
+		unsigned	charging = 0;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1571: FILE: drivers/mfd/tps65010.c:368:
+		if (tmp & (TPS_CHG_USB|TPS_CHG_AC))
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1578: FILE: drivers/mfd/tps65010.c:375:
+		if (!(tps->chgstatus & ~(TPS_CHG_USB|TPS_CHG_AC))
 		                                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1579: FILE: drivers/mfd/tps65010.c:376:
+		if (!(tps->chgstatus & ~(TPS_CHG_USB|TPS_CHG_AC))
+				&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1579: FILE: drivers/mfd/tps65010.c:376:
+				&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
 				                                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1580: FILE: drivers/mfd/tps65010.c:377:
+				&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
+				&& (tps->chgconf & TPS_CHARGE_ENABLE)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1582: FILE: drivers/mfd/tps65010.c:379:
+			if (tps->chgstatus & TPS_CHG_USB) {
[...]
+			} else if (tps->chgstatus & TPS_CHG_AC)
[...]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1594: FILE: drivers/mfd/tps65010.c:391:
+				((tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
 				                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1603: FILE: drivers/mfd/tps65010.c:400:
+	if ((tps->model != TPS65013 || !tps->charging)
+			&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1603: FILE: drivers/mfd/tps65010.c:400:
+			&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC)))
 			                                 ^

CHECK:SPACING: No space is necessary after a cast
#1606: FILE: drivers/mfd/tps65010.c:403:
+		(void) schedule_delayed_work(&tps->work, POWER_POLL_DELAY);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1626: FILE: drivers/mfd/tps65010.c:423:
+		chgconfig = i2c_smbus_read_byte_data(tps->client,
+					TPS_CHGCONFIG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1634: FILE: drivers/mfd/tps65010.c:431:
+		status = i2c_smbus_write_byte_data(tps->client,
+				TPS_CHGCONFIG, chgconfig);

CHECK:SPACING: No space is necessary after a cast
#1654: FILE: drivers/mfd/tps65010.c:451:
+	(void) schedule_work(&tps->work.work);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1665: FILE: drivers/mfd/tps65010.c:462:
+tps65010_gpio_set(struct gpio_chip *chip, unsigned offset, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1676: FILE: drivers/mfd/tps65010.c:473:
+tps65010_output(struct gpio_chip *chip, unsigned offset, int value)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1679: FILE: drivers/mfd/tps65010.c:476:
+	if (offset < 4) {
[...]
+	} else if (offset < 6)
[...]
+	else
[...]

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1694: FILE: drivers/mfd/tps65010.c:491:
+static int tps65010_gpio_get(struct gpio_chip *chip, unsigned offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1715: FILE: drivers/mfd/tps65010.c:512:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1727: FILE: drivers/mfd/tps65010.c:524:
+		int status = board->teardown(client, board->context);
+		if (status < 0)

WARNING:SIZEOF_PARENTHESIS: sizeof *tps should be sizeof(*tps)
#1757: FILE: drivers/mfd/tps65010.c:554:
+	tps = kzalloc(sizeof *tps, GFP_KERNEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1769: FILE: drivers/mfd/tps65010.c:566:
+	if (client->irq > 0) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1771: FILE: drivers/mfd/tps65010.c:568:
+		status = request_irq(client->irq, tps65010_irq,
+			IRQF_SAMPLE_RANDOM | IRQF_TRIGGER_FALLING,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1775: FILE: drivers/mfd/tps65010.c:572:
+			dev_dbg(&client->dev, "can't get IRQ %d, err %d\n",
+					client->irq, status);

CHECK:BRACES: Unbalanced braces around else statement
#1784: FILE: drivers/mfd/tps65010.c:581:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1787: FILE: drivers/mfd/tps65010.c:584:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1799: FILE: drivers/mfd/tps65010.c:596:
+	show_chgstatus("chg/init",
+		i2c_smbus_read_byte_data(client, TPS_CHGSTATUS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1801: FILE: drivers/mfd/tps65010.c:598:
+	show_regstatus("reg/init",
+		i2c_smbus_read_byte_data(client, TPS_REGSTATUS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1804: FILE: drivers/mfd/tps65010.c:601:
+	pr_debug("%s: vdcdc1 0x%02x, vdcdc2 %02x, vregs1 %02x\n", DRIVER_NAME,
+		i2c_smbus_read_byte_data(client, TPS_VDCDC1),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1808: FILE: drivers/mfd/tps65010.c:605:
+	pr_debug("%s: defgpio 0x%02x, mask3 0x%02x\n", DRIVER_NAME,
+		i2c_smbus_read_byte_data(client, TPS_DEFGPIO),

CHECK:SPACING: No space is necessary after a cast
#1827: FILE: drivers/mfd/tps65010.c:624:
+	(void) i2c_smbus_write_byte_data(client, TPS_MASK1, ~tps->nmask1);

CHECK:SPACING: No space is necessary after a cast
#1832: FILE: drivers/mfd/tps65010.c:629:
+	(void) i2c_smbus_write_byte_data(client, TPS_MASK2, ~tps->nmask2);

CHECK:SPACING: No space is necessary after a cast
#1834: FILE: drivers/mfd/tps65010.c:631:
+	(void) i2c_smbus_write_byte_data(client, TPS_MASK3, 0x0f

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1839: FILE: drivers/mfd/tps65010.c:636:
+	tps->file = debugfs_create_file(DRIVER_NAME, S_IRUGO, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1840: FILE: drivers/mfd/tps65010.c:637:
+	tps->file = debugfs_create_file(DRIVER_NAME, S_IRUGO, NULL,
+				tps, DEBUG_FOPS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1863: FILE: drivers/mfd/tps65010.c:660:
+			dev_err(&client->dev, "can't add gpiochip, err %d\n",
+					status);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1907: FILE: drivers/mfd/tps65010.c:704:
+int tps65010_set_vbus_draw(unsigned mA)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1924: FILE: drivers/mfd/tps65010.c:721:
+	if ((the_tps->chgstatus & TPS_CHG_USB)
+			&& test_and_set_bit(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1924: FILE: drivers/mfd/tps65010.c:721:
+			&& test_and_set_bit(

CHECK:SPACING: No space is necessary after a cast
#1927: FILE: drivers/mfd/tps65010.c:724:
+		(void) schedule_work(&the_tps->work.work);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1940: FILE: drivers/mfd/tps65010.c:737:
+int tps65010_set_gpio_out_value(unsigned gpio, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1940: FILE: drivers/mfd/tps65010.c:737:
+int tps65010_set_gpio_out_value(unsigned gpio, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1943: FILE: drivers/mfd/tps65010.c:740:
+	unsigned defgpio;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio < GPIO1'
#1947: FILE: drivers/mfd/tps65010.c:744:
+	if ((gpio < GPIO1) || (gpio > GPIO4))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio > GPIO4'
#1947: FILE: drivers/mfd/tps65010.c:744:
+	if ((gpio < GPIO1) || (gpio > GPIO4))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1969: FILE: drivers/mfd/tps65010.c:766:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+		TPS_DEFGPIO, defgpio);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1971: FILE: drivers/mfd/tps65010.c:768:
+	pr_debug("%s: gpio%dout = %s, defgpio 0x%02x\n", DRIVER_NAME,
 	                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1972: FILE: drivers/mfd/tps65010.c:769:
+	pr_debug("%s: gpio%dout = %s, defgpio 0x%02x\n", DRIVER_NAME,
+		gpio, value ? "high" : "low",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1985: FILE: drivers/mfd/tps65010.c:782:
+int tps65010_set_led(unsigned led, unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1985: FILE: drivers/mfd/tps65010.c:782:
+int tps65010_set_led(unsigned led, unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1988: FILE: drivers/mfd/tps65010.c:785:
+	unsigned led_on, led_per, offs;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1993: FILE: drivers/mfd/tps65010.c:790:
+	if (led == LED1)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1995: FILE: drivers/mfd/tps65010.c:792:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2003: FILE: drivers/mfd/tps65010.c:800:
+	pr_debug("%s: led%i_on   0x%02x\n", DRIVER_NAME, led,
+		i2c_smbus_read_byte_data(the_tps->client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2004: FILE: drivers/mfd/tps65010.c:801:
+		i2c_smbus_read_byte_data(the_tps->client,
+				TPS_LED1_ON + offs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2007: FILE: drivers/mfd/tps65010.c:804:
+	pr_debug("%s: led%i_per  0x%02x\n", DRIVER_NAME, led,
+		i2c_smbus_read_byte_data(the_tps->client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: drivers/mfd/tps65010.c:805:
+		i2c_smbus_read_byte_data(the_tps->client,
+				TPS_LED1_PER + offs));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2024: FILE: drivers/mfd/tps65010.c:821:
+		printk(KERN_ERR "%s: Wrong mode parameter for set_led()\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2031: FILE: drivers/mfd/tps65010.c:828:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+			TPS_LED1_ON + offs, led_on);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2034: FILE: drivers/mfd/tps65010.c:831:
+		printk(KERN_ERR "%s: Failed to write led%i_on register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2041: FILE: drivers/mfd/tps65010.c:838:
+	pr_debug("%s: led%i_on   0x%02x\n", DRIVER_NAME, led,
+		i2c_smbus_read_byte_data(the_tps->client, TPS_LED1_ON + offs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2044: FILE: drivers/mfd/tps65010.c:841:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+			TPS_LED1_PER + offs, led_per);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2047: FILE: drivers/mfd/tps65010.c:844:
+		printk(KERN_ERR "%s: Failed to write led%i_per register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2054: FILE: drivers/mfd/tps65010.c:851:
+	pr_debug("%s: led%i_per  0x%02x\n", DRIVER_NAME, led,
+		i2c_smbus_read_byte_data(the_tps->client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2055: FILE: drivers/mfd/tps65010.c:852:
+		i2c_smbus_read_byte_data(the_tps->client,
+				TPS_LED1_PER + offs));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2067: FILE: drivers/mfd/tps65010.c:864:
+int tps65010_set_vib(unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2070: FILE: drivers/mfd/tps65010.c:867:
+	unsigned vdcdc2;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2082: FILE: drivers/mfd/tps65010.c:879:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+		TPS_VDCDC2, vdcdc2);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2095: FILE: drivers/mfd/tps65010.c:892:
+int tps65010_set_low_pwr(unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2098: FILE: drivers/mfd/tps65010.c:895:
+	unsigned vdcdc1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2106: FILE: drivers/mfd/tps65010.c:903:
+	pr_debug("%s: %s low_pwr, vdcdc1 0x%02x\n", DRIVER_NAME,
+		mode ? "enable" : "disable",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2122: FILE: drivers/mfd/tps65010.c:919:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+			TPS_VDCDC1, vdcdc1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2125: FILE: drivers/mfd/tps65010.c:922:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2126: FILE: drivers/mfd/tps65010.c:923:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",
+			DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2129: FILE: drivers/mfd/tps65010.c:926:
+		pr_debug("%s: vdcdc1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(the_tps->client, TPS_VDCDC1));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2142: FILE: drivers/mfd/tps65010.c:939:
+int tps65010_config_vregs1(unsigned value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2152: FILE: drivers/mfd/tps65010.c:949:
+	pr_debug("%s: vregs1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(the_tps->client, TPS_VREGS1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2155: FILE: drivers/mfd/tps65010.c:952:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+			TPS_VREGS1, value);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2158: FILE: drivers/mfd/tps65010.c:955:
+		printk(KERN_ERR "%s: Failed to write vregs1 register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: drivers/mfd/tps65010.c:956:
+		printk(KERN_ERR "%s: Failed to write vregs1 register\n",
+			DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2162: FILE: drivers/mfd/tps65010.c:959:
+		pr_debug("%s: vregs1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(the_tps->client, TPS_VREGS1));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2176: FILE: drivers/mfd/tps65010.c:973:
+/* FIXME: Assumes AC or USB power is present. Setting AUA bit is not
+	required if power supply is through a battery */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2176: FILE: drivers/mfd/tps65010.c:973:
+	required if power supply is through a battery */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2178: FILE: drivers/mfd/tps65010.c:975:
+int tps65013_set_low_pwr(unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2181: FILE: drivers/mfd/tps65010.c:978:
+	unsigned vdcdc1, chgconfig;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2189: FILE: drivers/mfd/tps65010.c:986:
+	pr_debug("%s: %s low_pwr, chgconfig 0x%02x vdcdc1 0x%02x\n",
+		DRIVER_NAME,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2210: FILE: drivers/mfd/tps65010.c:1007:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+			TPS_CHGCONFIG, chgconfig);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2212: FILE: drivers/mfd/tps65010.c:1009:
+		printk(KERN_ERR "%s: Failed to write chconfig register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2213: FILE: drivers/mfd/tps65010.c:1010:
+		printk(KERN_ERR "%s: Failed to write chconfig register\n",
+	 DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2223: FILE: drivers/mfd/tps65010.c:1020:
+	status = i2c_smbus_write_byte_data(the_tps->client,
+			TPS_VDCDC1, vdcdc1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2226: FILE: drivers/mfd/tps65010.c:1023:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2227: FILE: drivers/mfd/tps65010.c:1024:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",
+	 DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2230: FILE: drivers/mfd/tps65010.c:1027:
+		pr_debug("%s: vdcdc1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(the_tps->client, TPS_VDCDC1));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2245: FILE: drivers/mfd/tps65010.c:1042:
+	printk(KERN_INFO "%s: version %s\n", DRIVER_NAME, DRIVER_VERSION);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2254: FILE: drivers/mfd/tps65010.c:1051:
+			printk(KERN_ERR "%s: no chip?\n", DRIVER_NAME);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2258: FILE: drivers/mfd/tps65010.c:1055:
+		msleep(10);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2263: FILE: drivers/mfd/tps65010.c:1060:
+}
+/* NOTE:  this MUST be initialized before the other parts of the system

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188172.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 46 warnings, 82 checks, 1131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188172.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
