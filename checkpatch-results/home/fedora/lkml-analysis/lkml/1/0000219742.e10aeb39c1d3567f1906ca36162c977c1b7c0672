WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: drivers/serial/8250.c:406:
+	unsigned int tmp;
+	offset = map_8250_in_reg(p, offset) << p->regshift;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#169: FILE: drivers/serial/8250.c:407:
+	if (offset == UART_IIR) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#172: FILE: drivers/serial/8250.c:410:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset == UART_IER'
#182: FILE: drivers/serial/8250.c:417:
+	if (!((offset == UART_IER) && (value & UART_IER_UUE)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: drivers/serial/8250.c:426:
+	 * Busy Detect interrupt occurs. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: drivers/serial/8250.c:429:
+		struct uart_8250_port *up = (struct uart_8250_port *)p;
+		up->lcr = value;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: drivers/serial/8250.c:433:
+	 * returning from ISR. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: drivers/serial/8250.c:496:
+	struct uart_port *p = &up->port;
+	switch (p->iotype) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'up' - possible side-effects?
#302: FILE: drivers/serial/8250.c:511:
+#define serial_in(up, offset)		\
+	(up->port.serial_in_fn(&(up)->port, (offset)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'up' may be better as '(up)' to avoid precedence issues
#302: FILE: drivers/serial/8250.c:511:
+#define serial_in(up, offset)		\
+	(up->port.serial_in_fn(&(up)->port, (offset)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'up' - possible side-effects?
#304: FILE: drivers/serial/8250.c:513:
+#define serial_out(up, offset, value)	\
+	(up->port.serial_out_fn(&(up)->port, (offset), (value)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'up' may be better as '(up)' to avoid precedence issues
#304: FILE: drivers/serial/8250.c:513:
+#define serial_out(up, offset, value)	\
+	(up->port.serial_out_fn(&(up)->port, (offset), (value)))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct uart_port *' should also have an identifier name
#338: FILE: include/linux/serial_8250.h:31:
+	unsigned int	(*serial_in_fn)(struct uart_port *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#338: FILE: include/linux/serial_8250.h:31:
+	unsigned int	(*serial_in_fn)(struct uart_port *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct uart_port *' should also have an identifier name
#339: FILE: include/linux/serial_8250.h:32:
+	void		(*serial_out_fn)(struct uart_port *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#339: FILE: include/linux/serial_8250.h:32:
+	void		(*serial_out_fn)(struct uart_port *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#339: FILE: include/linux/serial_8250.h:32:
+	void		(*serial_out_fn)(struct uart_port *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct uart_port *' should also have an identifier name
#351: FILE: include/linux/serial_core.h:246:
+	unsigned int		(*serial_in_fn)(struct uart_port *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#351: FILE: include/linux/serial_core.h:246:
+	unsigned int		(*serial_in_fn)(struct uart_port *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct uart_port *' should also have an identifier name
#352: FILE: include/linux/serial_core.h:247:
+	void			(*serial_out_fn)(struct uart_port *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#352: FILE: include/linux/serial_core.h:247:
+	void			(*serial_out_fn)(struct uart_port *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#352: FILE: include/linux/serial_core.h:247:
+	void			(*serial_out_fn)(struct uart_port *, int, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219742.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 7 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219742.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
