CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#53: FILE: include/asm-arm/dma-mapping.h:304:
+	dma_sync_single_for_cpu(dev, dma_handle, offset+size, direction);
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: include/asm-arm/dma-mapping.h:313:
+	dma_sync_single_for_device(dev, dma_handle, offset+size, direction);
 	                                                  ^

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#79: FILE: include/asm-arm/dma-mapping.h:349:
+extern void dma_sync_single_range_for_cpu(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/asm-arm/dma-mapping.h:349:
+extern void dma_sync_single_range_for_cpu(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#80: FILE: include/asm-arm/dma-mapping.h:350:
+extern void dma_sync_single_range_for_device(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: include/asm-arm/dma-mapping.h:350:
+extern void dma_sync_single_range_for_device(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device*' should also have an identifier name
#80: FILE: include/asm-arm/dma-mapping.h:350:
+extern void dma_sync_single_range_for_device(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#80: FILE: include/asm-arm/dma-mapping.h:350:
+extern void dma_sync_single_range_for_device(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#80: FILE: include/asm-arm/dma-mapping.h:350:
+extern void dma_sync_single_range_for_device(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#80: FILE: include/asm-arm/dma-mapping.h:350:
+extern void dma_sync_single_range_for_device(struct device*, dma_addr_t, unsigned long, size_t, enum dma_data_direction);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#92: FILE: include/asm-avr32/dma-mapping.h:245:
 }
+static inline void

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#98: FILE: include/asm-avr32/dma-mapping.h:251:
+	dma_sync_single_for_cpu(dev, dma_handle, offset+size, direction);
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: include/asm-avr32/dma-mapping.h:260:
+	dma_sync_single_for_device(dev, dma_handle, offset+size, direction);
 	                                                  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 7 checks, 63 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
