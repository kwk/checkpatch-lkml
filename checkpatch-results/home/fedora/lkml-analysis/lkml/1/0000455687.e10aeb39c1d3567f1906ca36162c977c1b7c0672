WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> > > > failures ('eth1: Can't allocate skb for Rx'). You'll find more here:

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#169: FILE: mm/page_alloc.c:691:
+	[MIGRATE_UNMOVABLE]   = { MIGRATE_RECLAIMABLE, MIGRATE_MOVABLE,   MIGRATE_HIGHATOMIC, MIGRATE_RESERVE },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#170: FILE: mm/page_alloc.c:692:
+	[MIGRATE_RECLAIMABLE] = { MIGRATE_UNMOVABLE,   MIGRATE_MOVABLE,   MIGRATE_HIGHATOMIC, MIGRATE_RESERVE },

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#171: FILE: mm/page_alloc.c:693:
+	[MIGRATE_MOVABLE]     = { MIGRATE_RECLAIMABLE, MIGRATE_UNMOVABLE, MIGRATE_HIGHATOMIC, MIGRATE_RESERVE },

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#172: FILE: mm/page_alloc.c:694:
+	[MIGRATE_HIGHATOMIC]  = { MIGRATE_RECLAIMABLE, MIGRATE_UNMOVABLE, MIGRATE_MOVABLE,    MIGRATE_RESERVE },

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#173: FILE: mm/page_alloc.c:695:
+	[MIGRATE_RESERVE]     = { MIGRATE_RESERVE,     MIGRATE_RESERVE,   MIGRATE_RESERVE,    MIGRATE_RESERVE },

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: mm/page_alloc.c:871:
+static struct page *__rmqueue_smallest(struct zone *zone, unsigned int order,
 						int migratetype)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: mm/page_alloc.c:874:
+	struct free_area * area;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: mm/page_alloc.c:901:
+static struct page *__rmqueue(struct zone *zone, unsigned int order,
+						int migratetype)

WARNING:TYPO_SPELLING: 'Initialse' may be misspelled - perhaps 'Initialise'?
#270: FILE: mm/page_alloc.c:2398:
+		/* Initialse a pageblock if this is the first PFN */
 		   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#271: FILE: mm/page_alloc.c:2399:
+		if ((pfn & (MAX_ORDER_NR_PAGES-1)) == 0) {
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: mm/page_alloc.c:2413:
+				set_pageblock_migratetype(page,
+							MIGRATE_MOVABLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: mm/page_alloc.c:2417:
+				set_pageblock_migratetype(page,
+							MIGRATE_RESERVE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 5 checks, 151 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
