WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#46: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: include/linux/byteorder.h:1:
+#ifndef _LINUX_BYTEORDER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#145: FILE: include/linux/byteorder.h:95:
+#define __constant_htons(x) __cpu_to_be16(x)

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_ntohs should be ntohs
#146: FILE: include/linux/byteorder.h:96:
+#define __constant_ntohs(x) __be16_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_le16_to_cpu should be le16_to_cpu
#148: FILE: include/linux/byteorder.h:98:
+#define __constant_le16_to_cpu(x) __le16_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_le32_to_cpu should be le32_to_cpu
#149: FILE: include/linux/byteorder.h:99:
+#define __constant_le32_to_cpu(x) __le32_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_le64_to_cpu should be le64_to_cpu
#150: FILE: include/linux/byteorder.h:100:
+#define __constant_le64_to_cpu(x) __le64_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_be16_to_cpu should be be16_to_cpu
#151: FILE: include/linux/byteorder.h:101:
+#define __constant_be16_to_cpu(x) __be16_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_be32_to_cpu should be be32_to_cpu
#152: FILE: include/linux/byteorder.h:102:
+#define __constant_be32_to_cpu(x) __be32_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_be64_to_cpu should be be64_to_cpu
#153: FILE: include/linux/byteorder.h:103:
+#define __constant_be64_to_cpu(x) __be64_to_cpu(x)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#155: FILE: include/linux/byteorder.h:105:
+#define __constant_cpu_to_le16(x) __cpu_to_le16(x)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le32 should be cpu_to_le32
#156: FILE: include/linux/byteorder.h:106:
+#define __constant_cpu_to_le32(x) __cpu_to_le32(x)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le64 should be cpu_to_le64
#157: FILE: include/linux/byteorder.h:107:
+#define __constant_cpu_to_le64(x) __cpu_to_le64(x)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#158: FILE: include/linux/byteorder.h:108:
+#define __constant_cpu_to_be16(x) __cpu_to_be16(x)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#159: FILE: include/linux/byteorder.h:109:
+#define __constant_cpu_to_be32(x) __cpu_to_be32(x)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be64 should be cpu_to_be64
#160: FILE: include/linux/byteorder.h:110:
+#define __constant_cpu_to_be64(x) __cpu_to_be64(x)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000255833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 0 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000255833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
