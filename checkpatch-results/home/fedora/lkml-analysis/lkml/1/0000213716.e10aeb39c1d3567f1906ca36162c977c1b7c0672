ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#56: FILE: drivers/staging/sxg/sxg_os.h:71:
+static __inline PLIST_ENTRY RemoveHeadList(list_entry * l)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <RemoveHeadList>
#56: FILE: drivers/staging/sxg/sxg_os.h:71:
+static __inline PLIST_ENTRY RemoveHeadList(list_entry * l)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:INLINE: plain inline is preferred over __inline
#56: FILE: drivers/staging/sxg/sxg_os.h:71:
+static __inline PLIST_ENTRY RemoveHeadList(list_entry * l)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#73: FILE: drivers/staging/sxg/sxg_os.h:81:
+	return (e);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: drivers/staging/sxg/sxg_os.h:84:
+static __inline PLIST_ENTRY RemoveTailList(list_entry * l)

CHECK:CAMELCASE: Avoid CamelCase: <RemoveTailList>
#78: FILE: drivers/staging/sxg/sxg_os.h:84:
+static __inline PLIST_ENTRY RemoveTailList(list_entry * l)

WARNING:INLINE: plain inline is preferred over __inline
#78: FILE: drivers/staging/sxg/sxg_os.h:84:
+static __inline PLIST_ENTRY RemoveTailList(list_entry * l)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#95: FILE: drivers/staging/sxg/sxg_os.h:94:
+	return (e);

CHECK:CAMELCASE: Avoid CamelCase: <Icr>
#142: FILE: drivers/staging/sxg/sxghif.h:17:
+	u32 Icr;		// Code = 0 (extended), ExCode = 0 - Int control

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg1>
#143: FILE: drivers/staging/sxg/sxghif.h:18:
+	u32 RsvdReg1;		// Code = 1 - TOE -NA

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg2>
#144: FILE: drivers/staging/sxg/sxghif.h:19:
+	u32 RsvdReg2;		// Code = 2 - TOE -NA

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg3>
#145: FILE: drivers/staging/sxg/sxghif.h:20:
+	u32 RsvdReg3;		// Code = 3 - TOE -NA

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg4>
#146: FILE: drivers/staging/sxg/sxghif.h:21:
+	u32 RsvdReg4;		// Code = 4 - TOE -NA

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg5>
#147: FILE: drivers/staging/sxg/sxghif.h:22:
+	u32 RsvdReg5;		// Code = 5 - TOE -NA

CHECK:CAMELCASE: Avoid CamelCase: <CardUp>
#148: FILE: drivers/staging/sxg/sxghif.h:23:
+	u32 CardUp;		// Code = 6 - Microcode initialized when 1

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg7>
#149: FILE: drivers/staging/sxg/sxghif.h:24:
+	u32 RsvdReg7;		// Code = 7 - TOE -NA

CHECK:CAMELCASE: Avoid CamelCase: <CodeNotUsed>
#150: FILE: drivers/staging/sxg/sxghif.h:25:
+	u32 CodeNotUsed[8];	// Codes 8-15 not used.  ExCode = 0

CHECK:CAMELCASE: Avoid CamelCase: <Isp>
#154: FILE: drivers/staging/sxg/sxghif.h:27:
+	u32 Isp;		// Code = 0 (extended), ExCode = 1

CHECK:CAMELCASE: Avoid CamelCase: <PadEx1>
#155: FILE: drivers/staging/sxg/sxghif.h:28:
+	u32 PadEx1[15];		// Codes 1-15 not used with extended codes

CHECK:CAMELCASE: Avoid CamelCase: <Isr>
#159: FILE: drivers/staging/sxg/sxghif.h:30:
+	u32 Isr;		// Code = 0 (extended), ExCode = 2

CHECK:CAMELCASE: Avoid CamelCase: <PadEx2>
#160: FILE: drivers/staging/sxg/sxghif.h:31:
+	u32 PadEx2[15];

CHECK:CAMELCASE: Avoid CamelCase: <EventBase>
#164: FILE: drivers/staging/sxg/sxghif.h:33:
+	u32 EventBase;		// Code = 0 (extended), ExCode = 3

CHECK:CAMELCASE: Avoid CamelCase: <PadEx3>
#165: FILE: drivers/staging/sxg/sxghif.h:34:
+	u32 PadEx3[15];

CHECK:CAMELCASE: Avoid CamelCase: <EventSize>
#169: FILE: drivers/staging/sxg/sxghif.h:36:
+	u32 EventSize;		// Code = 0 (extended), ExCode = 4

CHECK:CAMELCASE: Avoid CamelCase: <PadEx4>
#170: FILE: drivers/staging/sxg/sxghif.h:37:
+	u32 PadEx4[15];

CHECK:CAMELCASE: Avoid CamelCase: <TcbBase>
#174: FILE: drivers/staging/sxg/sxghif.h:39:
+	u32 TcbBase;		// Code = 0 (extended), ExCode = 5

CHECK:CAMELCASE: Avoid CamelCase: <PadEx5>
#175: FILE: drivers/staging/sxg/sxghif.h:40:
+	u32 PadEx5[15];

CHECK:CAMELCASE: Avoid CamelCase: <TcbCompBase>
#179: FILE: drivers/staging/sxg/sxghif.h:42:
+	u32 TcbCompBase;	// Code = 0 (extended), ExCode = 6

CHECK:CAMELCASE: Avoid CamelCase: <PadEx6>
#180: FILE: drivers/staging/sxg/sxghif.h:43:
+	u32 PadEx6[15];

CHECK:CAMELCASE: Avoid CamelCase: <XmtBase>
#184: FILE: drivers/staging/sxg/sxghif.h:45:
+	u32 XmtBase;		// Code = 0 (extended), ExCode = 7

CHECK:CAMELCASE: Avoid CamelCase: <PadEx7>
#185: FILE: drivers/staging/sxg/sxghif.h:46:
+	u32 PadEx7[15];

CHECK:CAMELCASE: Avoid CamelCase: <XmtSize>
#189: FILE: drivers/staging/sxg/sxghif.h:48:
+	u32 XmtSize;		// Code = 0 (extended), ExCode = 8

CHECK:CAMELCASE: Avoid CamelCase: <PadEx8>
#190: FILE: drivers/staging/sxg/sxghif.h:49:
+	u32 PadEx8[15];

CHECK:CAMELCASE: Avoid CamelCase: <RcvBase>
#194: FILE: drivers/staging/sxg/sxghif.h:51:
+	u32 RcvBase;		// Code = 0 (extended), ExCode = 9

CHECK:CAMELCASE: Avoid CamelCase: <PadEx9>
#195: FILE: drivers/staging/sxg/sxghif.h:52:
+	u32 PadEx9[15];

CHECK:CAMELCASE: Avoid CamelCase: <RcvSize>
#199: FILE: drivers/staging/sxg/sxghif.h:54:
+	u32 RcvSize;		// Code = 0 (extended), ExCode = 10

CHECK:CAMELCASE: Avoid CamelCase: <PadEx10>
#200: FILE: drivers/staging/sxg/sxghif.h:55:
+	u32 PadEx10[15];

CHECK:CAMELCASE: Avoid CamelCase: <Config>
#204: FILE: drivers/staging/sxg/sxghif.h:57:
+	u32 Config;		// Code = 0 (extended), ExCode = 11

CHECK:CAMELCASE: Avoid CamelCase: <PadEx11>
#205: FILE: drivers/staging/sxg/sxghif.h:58:
+	u32 PadEx11[15];

CHECK:CAMELCASE: Avoid CamelCase: <McastLow>
#209: FILE: drivers/staging/sxg/sxghif.h:60:
+	u32 McastLow;		// Code = 0 (extended), ExCode = 12

CHECK:CAMELCASE: Avoid CamelCase: <PadEx12>
#210: FILE: drivers/staging/sxg/sxghif.h:61:
+	u32 PadEx12[15];

CHECK:CAMELCASE: Avoid CamelCase: <McastHigh>
#214: FILE: drivers/staging/sxg/sxghif.h:63:
+	u32 McastHigh;		// Code = 0 (extended), ExCode = 13

CHECK:CAMELCASE: Avoid CamelCase: <PadEx13>
#215: FILE: drivers/staging/sxg/sxghif.h:64:
+	u32 PadEx13[15];

CHECK:CAMELCASE: Avoid CamelCase: <Ping>
#219: FILE: drivers/staging/sxg/sxghif.h:66:
+	u32 Ping;		// Code = 0 (extended), ExCode = 14

CHECK:CAMELCASE: Avoid CamelCase: <PadEx14>
#220: FILE: drivers/staging/sxg/sxghif.h:67:
+	u32 PadEx14[15];

CHECK:CAMELCASE: Avoid CamelCase: <LinkMtu>
#224: FILE: drivers/staging/sxg/sxghif.h:69:
+	u32 LinkMtu;		// Code = 0 (extended), ExCode = 15

CHECK:CAMELCASE: Avoid CamelCase: <PadEx15>
#225: FILE: drivers/staging/sxg/sxghif.h:70:
+	u32 PadEx15[15];

CHECK:CAMELCASE: Avoid CamelCase: <LoadSync>
#229: FILE: drivers/staging/sxg/sxghif.h:72:
+	u32 LoadSync;		// Code = 0 (extended), ExCode = 16

CHECK:CAMELCASE: Avoid CamelCase: <PadEx16>
#230: FILE: drivers/staging/sxg/sxghif.h:73:
+	u32 PadEx16[15];

CHECK:CAMELCASE: Avoid CamelCase: <Upper>
#234: FILE: drivers/staging/sxg/sxghif.h:75:
+	u32 Upper;		// Code = 0 (extended), ExCode = 17

CHECK:CAMELCASE: Avoid CamelCase: <PadEx17>
#235: FILE: drivers/staging/sxg/sxghif.h:76:
+	u32 PadEx17[15];

CHECK:CAMELCASE: Avoid CamelCase: <SPSendIndex>
#241: FILE: drivers/staging/sxg/sxghif.h:78:
+	u32 SPSendIndex;	// Code = 0 (extended), ExCode = 18

CHECK:CAMELCASE: Avoid CamelCase: <PadEx18>
#242: FILE: drivers/staging/sxg/sxghif.h:79:
+	u32 PadEx18[15];

CHECK:CAMELCASE: Avoid CamelCase: <RsvdXF>
#243: FILE: drivers/staging/sxg/sxghif.h:80:
+	u32 RsvdXF;		// Code = 0 (extended), ExCode = 19

CHECK:CAMELCASE: Avoid CamelCase: <PadEx19>
#244: FILE: drivers/staging/sxg/sxghif.h:81:
+	u32 PadEx19[15];

CHECK:CAMELCASE: Avoid CamelCase: <Aggregation>
#248: FILE: drivers/staging/sxg/sxghif.h:83:
+	u32 Aggregation;	// Code = 0 (extended), ExCode = 20

CHECK:CAMELCASE: Avoid CamelCase: <PadEx20>
#249: FILE: drivers/staging/sxg/sxghif.h:84:
+	u32 PadEx20[15];

CHECK:CAMELCASE: Avoid CamelCase: <PushTicks>
#253: FILE: drivers/staging/sxg/sxghif.h:86:
+	u32 PushTicks;		// Code = 0 (extended), ExCode = 21

CHECK:CAMELCASE: Avoid CamelCase: <PadEx21>
#254: FILE: drivers/staging/sxg/sxghif.h:87:
+	u32 PadEx21[15];

CHECK:CAMELCASE: Avoid CamelCase: <AckFrequency>
#258: FILE: drivers/staging/sxg/sxghif.h:89:
+	u32 AckFrequency;	// Code = 0 (extended), ExCode = 22

CHECK:CAMELCASE: Avoid CamelCase: <PadEx22>
#259: FILE: drivers/staging/sxg/sxghif.h:90:
+	u32 PadEx22[15];

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg23>
#263: FILE: drivers/staging/sxg/sxghif.h:92:
+	u32 RsvdReg23;

CHECK:CAMELCASE: Avoid CamelCase: <PadEx23>
#264: FILE: drivers/staging/sxg/sxghif.h:93:
+	u32 PadEx23[15];

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg24>
#268: FILE: drivers/staging/sxg/sxghif.h:95:
+	u32 RsvdReg24;

CHECK:CAMELCASE: Avoid CamelCase: <PadEx24>
#269: FILE: drivers/staging/sxg/sxghif.h:96:
+	u32 PadEx24[15];

CHECK:CAMELCASE: Avoid CamelCase: <RsvdReg25>
#273: FILE: drivers/staging/sxg/sxghif.h:98:
+	u32 RsvdReg25;		// Code = 0 (extended), ExCode = 25

CHECK:CAMELCASE: Avoid CamelCase: <PadEx25>
#274: FILE: drivers/staging/sxg/sxghif.h:99:
+	u32 PadEx25[15];

CHECK:CAMELCASE: Avoid CamelCase: <ReceiveChecksum>
#278: FILE: drivers/staging/sxg/sxghif.h:101:
+	u32 ReceiveChecksum;	// Code = 0 (extended), ExCode = 26

CHECK:CAMELCASE: Avoid CamelCase: <PadEx26>
#279: FILE: drivers/staging/sxg/sxghif.h:102:
+	u32 PadEx26[15];

CHECK:CAMELCASE: Avoid CamelCase: <Rss>
#283: FILE: drivers/staging/sxg/sxghif.h:104:
+	u32 Rss;		// Code = 0 (extended), ExCode = 27

CHECK:CAMELCASE: Avoid CamelCase: <PadEx27>
#284: FILE: drivers/staging/sxg/sxghif.h:105:
+	u32 PadEx27[15];

CHECK:CAMELCASE: Avoid CamelCase: <RssTable>
#288: FILE: drivers/staging/sxg/sxghif.h:107:
+	u32 RssTable;		// Code = 0 (extended), ExCode = 28

CHECK:CAMELCASE: Avoid CamelCase: <PadEx28>
#289: FILE: drivers/staging/sxg/sxghif.h:108:
+	u32 PadEx28[15];

CHECK:CAMELCASE: Avoid CamelCase: <EventRelease>
#293: FILE: drivers/staging/sxg/sxghif.h:110:
+	u32 EventRelease;	// Code = 0 (extended), ExCode = 29

CHECK:CAMELCASE: Avoid CamelCase: <PadEx29>
#294: FILE: drivers/staging/sxg/sxghif.h:111:
+	u32 PadEx29[15];

CHECK:CAMELCASE: Avoid CamelCase: <RcvCmd>
#298: FILE: drivers/staging/sxg/sxghif.h:113:
+	u32 RcvCmd;		// Code = 0 (extended), ExCode = 30

CHECK:CAMELCASE: Avoid CamelCase: <PadEx30>
#299: FILE: drivers/staging/sxg/sxghif.h:114:
+	u32 PadEx30[15];

CHECK:CAMELCASE: Avoid CamelCase: <XmtCmd>
#303: FILE: drivers/staging/sxg/sxghif.h:116:
+	u32 XmtCmd;		// Code = 0 (extended), ExCode = 31

CHECK:CAMELCASE: Avoid CamelCase: <PadEx31>
#304: FILE: drivers/staging/sxg/sxghif.h:117:
+	u32 PadEx31[15];

CHECK:CAMELCASE: Avoid CamelCase: <DumpCmd>
#308: FILE: drivers/staging/sxg/sxghif.h:119:
+	u32 DumpCmd;		// Code = 0 (extended), ExCode = 32

CHECK:CAMELCASE: Avoid CamelCase: <PadEx32>
#309: FILE: drivers/staging/sxg/sxghif.h:120:
+	u32 PadEx32[15];

CHECK:CAMELCASE: Avoid CamelCase: <DebugCmd>
#313: FILE: drivers/staging/sxg/sxghif.h:122:
+	u32 DebugCmd;		// Code = 0 (extended), ExCode = 33

CHECK:CAMELCASE: Avoid CamelCase: <PadEx33>
#314: FILE: drivers/staging/sxg/sxghif.h:123:
+	u32 PadEx33[15];

CHECK:CAMELCASE: Avoid CamelCase: <PadToNextCpu>
#321: FILE: drivers/staging/sxg/sxghif.h:129:
+	u32 PadToNextCpu[94][16];	// 94 = 128 - 34 (34 = Excodes 0 - 33)

CHECK:CAMELCASE: Avoid CamelCase: <ExCode>
#348: FILE: drivers/staging/sxg/sxghif.h:173:
+	u32 ExCode;		/* Extended codes - see SXG_UCODE_REGS */

CHECK:CAMELCASE: Avoid CamelCase: <Xmt>
#349: FILE: drivers/staging/sxg/sxghif.h:174:
+	u32 Xmt;		/* Code = 1 - # of Xmt descriptors added to ring */

CHECK:CAMELCASE: Avoid CamelCase: <Rcv>
#350: FILE: drivers/staging/sxg/sxghif.h:175:
+	u32 Rcv;		/* Code = 2 - # of Rcv descriptors added to ring */

CHECK:CAMELCASE: Avoid CamelCase: <Rsvd1>
#351: FILE: drivers/staging/sxg/sxghif.h:176:
+	u32 Rsvd1;		/* Code = 3 - TOE NA */

CHECK:CAMELCASE: Avoid CamelCase: <Rsvd2>
#352: FILE: drivers/staging/sxg/sxghif.h:177:
+	u32 Rsvd2;		/* Code = 4 - TOE NA */

CHECK:CAMELCASE: Avoid CamelCase: <Rsvd3>
#353: FILE: drivers/staging/sxg/sxghif.h:178:
+	u32 Rsvd3;		/* Code = 5 - TOE NA */

CHECK:CAMELCASE: Avoid CamelCase: <Invalid>
#354: FILE: drivers/staging/sxg/sxghif.h:179:
+	u32 Invalid;		/* Code = 6 - Reserved for "CardUp" see above */

CHECK:CAMELCASE: Avoid CamelCase: <Rsvd4>
#355: FILE: drivers/staging/sxg/sxghif.h:180:
+	u32 Rsvd4;		/* Code = 7 - TOE NA */

CHECK:CAMELCASE: Avoid CamelCase: <Rsvd5>
#356: FILE: drivers/staging/sxg/sxghif.h:181:
+	u32 Rsvd5;		/* Code = 8 - TOE NA */

CHECK:CAMELCASE: Avoid CamelCase: <Pad>
#357: FILE: drivers/staging/sxg/sxghif.h:182:
+	u32 Pad[7];		/* Codes 8-15 - Not used. */

CHECK:CAMELCASE: Avoid CamelCase: <SndUna>
#369: FILE: drivers/staging/sxg/sxghif.h:277:
+	u32 SndUna;		// SndUna value

CHECK:CAMELCASE: Avoid CamelCase: <Resid>
#370: FILE: drivers/staging/sxg/sxghif.h:278:
+	u32 Resid;		// receive MDL resid

CHECK:CAMELCASE: Avoid CamelCase: <HostHandle>
#374: FILE: drivers/staging/sxg/sxghif.h:280:
+		void *HostHandle;	// Receive host handle

CHECK:CAMELCASE: Avoid CamelCase: <NotUsed>
#379: FILE: drivers/staging/sxg/sxghif.h:283:
+			u32 NotUsed;

CHECK:CAMELCASE: Avoid CamelCase: <Toeplitz>
#384: FILE: drivers/staging/sxg/sxghif.h:287:
+	u32 Toeplitz;		// RSS Toeplitz hash

CHECK:CAMELCASE: Avoid CamelCase: <HdrOffset>
#389: FILE: drivers/staging/sxg/sxghif.h:290:
+		ushort HdrOffset;	// Slowpath

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#396: FILE: drivers/staging/sxg/sxghif.h:292:
+	ushort Length;		//

CHECK:CAMELCASE: Avoid CamelCase: <Code>
#398: FILE: drivers/staging/sxg/sxghif.h:294:
+	unsigned char Code;	// Event code

CHECK:CAMELCASE: Avoid CamelCase: <CommandIndex>
#399: FILE: drivers/staging/sxg/sxghif.h:295:
+	unsigned char CommandIndex;	// New ring index

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#400: FILE: drivers/staging/sxg/sxghif.h:296:
+	unsigned char Status;	// Event status

CHECK:CAMELCASE: Avoid CamelCase: <Ring>
#416: FILE: drivers/staging/sxg/sxghif.h:325:
+	SXG_EVENT Ring[EVENT_RING_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <Head>
#454: FILE: drivers/staging/sxg/sxghif.h:404:
+	unsigned char Head;	// Where we add entries - Note unsigned char:RING_SIZE

CHECK:CAMELCASE: Avoid CamelCase: <Tail>
#455: FILE: drivers/staging/sxg/sxghif.h:405:
+	unsigned char Tail;	// Where we pull off completed entries

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#456: FILE: drivers/staging/sxg/sxghif.h:406:
+	ushort Size;		// Ring size - Must be multiple of 2

CHECK:CAMELCASE: Avoid CamelCase: <Context>
#457: FILE: drivers/staging/sxg/sxghif.h:407:
+	void *Context[SXG_MAX_RING_SIZE];	// Shadow ring

CHECK:CAMELCASE: Avoid CamelCase: <Sgl>
#466: FILE: drivers/staging/sxg/sxghif.h:485:
+	dma_addr_t Sgl;		// Physical address of SGL

CHECK:CAMELCASE: Avoid CamelCase: <FirstSgeAddress>
#471: FILE: drivers/staging/sxg/sxghif.h:488:
+			dma64_addr_t FirstSgeAddress;	// Address of first SGE

CHECK:CAMELCASE: Avoid CamelCase: <FirstSgeLength>
#472: FILE: drivers/staging/sxg/sxghif.h:489:
+			u32 FirstSgeLength;	// Length of first SGE

CHECK:CAMELCASE: Avoid CamelCase: <SgeOffset>
#478: FILE: drivers/staging/sxg/sxghif.h:492:
+				u32 SgeOffset;	// Slowpath - 2nd SGE offset

CHECK:CAMELCASE: Avoid CamelCase: <TotalLength>
#484: FILE: drivers/staging/sxg/sxghif.h:496:
+				u32 TotalLength;	// Total transfer length

CHECK:CAMELCASE: Avoid CamelCase: <Mss>
#485: FILE: drivers/staging/sxg/sxghif.h:497:
+				u32 Mss;	// LSO MSS

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#494: FILE: drivers/staging/sxg/sxghif.h:503:
+			unsigned char Flags:4;	// slowpath flags

CHECK:CAMELCASE: Avoid CamelCase: <IpHl>
#495: FILE: drivers/staging/sxg/sxghif.h:504:
+			unsigned char IpHl:4;	// Ip header length (>>2)

CHECK:CAMELCASE: Avoid CamelCase: <MacLen>
#496: FILE: drivers/staging/sxg/sxghif.h:505:
+			unsigned char MacLen;	// Mac header len

CHECK:CAMELCASE: Avoid CamelCase: <TcpHdrOff>
#503: FILE: drivers/staging/sxg/sxghif.h:509:
+			ushort TcpHdrOff:7;	// TCP

CHECK:CAMELCASE: Avoid CamelCase: <SgEntries>
#511: FILE: drivers/staging/sxg/sxghif.h:515:
+		ushort SgEntries;	// SG entry count including first sge

CHECK:CAMELCASE: Avoid CamelCase: <VlanTci>
#526: FILE: drivers/staging/sxg/sxghif.h:526:
+	ushort VlanTci;

CHECK:CAMELCASE: Avoid CamelCase: <VlanTpid>
#527: FILE: drivers/staging/sxg/sxghif.h:527:
+	ushort VlanTpid;

CHECK:CAMELCASE: Avoid CamelCase: <Descriptors>
#544: FILE: drivers/staging/sxg/sxghif.h:568:
+	SXG_CMD Descriptors[SXG_XMT_RING_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <PhysicalAddress>
#574: FILE: drivers/staging/sxg/sxghif.h:674:
+	dma_addr_t PhysicalAddress;	// Buffer physical address

CHECK:CAMELCASE: Avoid CamelCase: <VirtualAddress>
#585: FILE: drivers/staging/sxg/sxghif.h:677:
+	void *VirtualAddress;	// Start of buffer

CHECK:CAMELCASE: Avoid CamelCase: <FreeList>
#586: FILE: drivers/staging/sxg/sxghif.h:678:
+	LIST_ENTRY FreeList;	// Free queue of buffers

CHECK:CAMELCASE: Avoid CamelCase: <Next>
#587: FILE: drivers/staging/sxg/sxghif.h:679:
+	struct _SXG_RCV_DATA_BUFFER_HDR *Next;	// Fastpath data buffer queue

CHECK:CAMELCASE: Avoid CamelCase: <ByteOffset>
#589: FILE: drivers/staging/sxg/sxghif.h:681:
+	u32 ByteOffset;		// See SXG_RESTORE_MDL_OFFSET

CHECK:CAMELCASE: Avoid CamelCase: <State>
#590: FILE: drivers/staging/sxg/sxghif.h:682:
+	unsigned char State;	// See SXG_BUFFER state above

CHECK:CAMELCASE: Avoid CamelCase: <ForceTo8Bytes>
#610: FILE: drivers/staging/sxg/sxghif.h:699:
+		u64 ForceTo8Bytes;	// Force x86 to 8-byte boundary

CHECK:CAMELCASE: Avoid CamelCase: <AllList>
#643: FILE: drivers/staging/sxg/sxghif.h:723:
+	LIST_ENTRY AllList;	// Queue of all SXG_RCV_BLOCKS

CHECK:CAMELCASE: Avoid CamelCase: <RcvDataBufferHdr>
#653: FILE: drivers/staging/sxg/sxghif.h:749:
+	PSXG_RCV_DATA_BUFFER_HDR RcvDataBufferHdr;

CHECK:CAMELCASE: Avoid CamelCase: <Available>
#654: FILE: drivers/staging/sxg/sxghif.h:750:
+	void *Available;

CHECK:CAMELCASE: Avoid CamelCase: <Address>
#704: FILE: drivers/staging/sxg/sxghif.h:802:
+	dma64_addr_t Address;	// same as wdm.h

CHECK:CAMELCASE: Avoid CamelCase: <CompilerPad>
#706: FILE: drivers/staging/sxg/sxghif.h:804:
+	u32 CompilerPad;	// The compiler pads to 8-bytes

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#707: FILE: drivers/staging/sxg/sxghif.h:805:
+	u64 Reserved;		// u32 * in wdm.h.  Force to 8 bytes

CHECK:CAMELCASE: Avoid CamelCase: <NumberOfElements>
#726: FILE: drivers/staging/sxg/sxghif.h:816:
+	u32 NumberOfElements;

CHECK:CAMELCASE: Avoid CamelCase: <Elements>
#728: FILE: drivers/staging/sxg/sxghif.h:818:
+	SCATTER_GATHER_ELEMENT Elements[];

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#759: FILE: drivers/staging/sxg/sxghif.h:832:
+	SXG_SGL_TYPE Type;	// FIRST! Dumb-nic or offload

CHECK:CAMELCASE: Avoid CamelCase: <CmdIndex>
#765: FILE: drivers/staging/sxg/sxghif.h:838:
+	unsigned char CmdIndex;	// Command ring index

CHECK:CAMELCASE: Avoid CamelCase: <DumbPacket>
#766: FILE: drivers/staging/sxg/sxghif.h:839:
+	struct sk_buff *DumbPacket;	// Associated Packet

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#767: FILE: drivers/staging/sxg/sxghif.h:840:
+	u32 Direction;		// For asynchronous completions

CHECK:CAMELCASE: Avoid CamelCase: <CurOffset>
#768: FILE: drivers/staging/sxg/sxghif.h:841:
+	u32 CurOffset;		// Current SGL offset

CHECK:CAMELCASE: Avoid CamelCase: <SglRef>
#769: FILE: drivers/staging/sxg/sxghif.h:842:
+	u32 SglRef;		// SGL reference count

CHECK:CAMELCASE: Avoid CamelCase: <VlanTag>
#770: FILE: drivers/staging/sxg/sxghif.h:843:
+	VLAN_HDR VlanTag;	// VLAN tag to be inserted into SGL

CHECK:CAMELCASE: Avoid CamelCase: <pSgl>
#771: FILE: drivers/staging/sxg/sxghif.h:844:
+	PSCATTER_GATHER_LIST pSgl;	// SGL Addr. Possibly &Sgl

CHECK:CAMELCASE: Avoid CamelCase: <Stop>
#781: FILE: drivers/staging/sxg/sxghif.h:856:
+Stop Compilation;

CHECK:CAMELCASE: Avoid CamelCase: <Compilation>
#781: FILE: drivers/staging/sxg/sxghif.h:856:
+Stop Compilation;

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#986: FILE: drivers/staging/sxg/sxghw.h:330:
+#define AXGMAC_AMIIM_FIELD_PORT_ADDR	0x0F800000		// Port address field (hstphyadx in spec)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1006: FILE: drivers/staging/sxg/sxghw.h:345:
+#define	MIIM_PORT_NUM				1		// All Sahara MIIM modules use port 1

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1013: FILE: drivers/staging/sxg/sxghw.h:348:
+#define	MIIM_DEV_PHY_PMA			1		// PHY PMA/PMD module MIIM device number

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1043: FILE: drivers/staging/sxg/sxghw.h:371:
+#define	LS_XGXS_CTL			0x10000000		// Hold XAUI XGXS logic reset until Serdes is up

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#1044: FILE: drivers/staging/sxg/sxghw.h:372:
+#define	LS_SERDES_DOWN			0x08000000		// When 0, XAUI Serdes is up and initialization is complete

WARNING:LONG_LINE_COMMENT: line length of 124 exceeds 100 columns
#1045: FILE: drivers/staging/sxg/sxghw.h:373:
+#define	LS_TRACE_DOWN			0x04000000		// When 0, Trace Serdes is up and initialization is complete

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1046: FILE: drivers/staging/sxg/sxghw.h:374:
+#define	LS_PHY_CLK_25MHZ		0x02000000		// Set PHY clock to 25 MHz (else 156.125 MHz)

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1085: FILE: drivers/staging/sxg/sxghw.h:418:
+#define XGXS_CONTROL1_SPEED		0x003C			// Everything reserved except zero (?)

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1194: FILE: drivers/staging/sxg/sxghw.h:516:
+#define	PCS_10B_BLOCK_LOCK		0x0001			// PCS 10GBASE-R locked to receive blocks

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1218: FILE: drivers/staging/sxg/sxghw.h:572:
+#define	XMT_CTL_PAUSE_FRAME		0x80	// current frame is a pause control frame (for statistics)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1268: FILE: drivers/staging/sxg/sxghw.h:729:
+#define SAHARA_WCS_SIZE			0x002000		// WCS - 8K instructions (x 108 bits)

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1275: FILE: drivers/staging/sxg/sxghw.h:733:
+#define	EEPROM_SIZE_XFMR		512			// true EEPROM size (bytes), including xfmr area

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 14 warnings, 142 checks, 1220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
