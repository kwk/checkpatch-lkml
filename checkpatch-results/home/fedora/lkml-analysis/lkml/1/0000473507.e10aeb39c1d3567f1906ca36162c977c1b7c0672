WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#58: FILE: fs/ufs/balloc.c:28:
+static u64 ufs_add_fragments(struct inode *, u64, unsigned, unsigned, int *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#58: FILE: fs/ufs/balloc.c:28:
+static u64 ufs_add_fragments(struct inode *, u64, unsigned, unsigned, int *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#59: FILE: fs/ufs/balloc.c:29:
+static u64 ufs_alloc_fragments(struct inode *, unsigned, u64, unsigned, int *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#59: FILE: fs/ufs/balloc.c:29:
+static u64 ufs_alloc_fragments(struct inode *, unsigned, u64, unsigned, int *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#61: FILE: fs/ufs/balloc.c:31:
+static u64 ufs_bitmap_search (struct super_block *, struct ufs_cg_private_info *, u64, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#61: FILE: fs/ufs/balloc.c:31:
+static u64 ufs_bitmap_search (struct super_block *, struct ufs_cg_private_info *, u64, unsigned);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#69: FILE: fs/ufs/balloc.c:38:
+void ufs_free_fragments(struct inode *inode, u64 fragment, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#77: FILE: fs/ufs/balloc.c:45:
+	unsigned cgno, bit, end_bit, bbase, blkmap, i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: fs/ufs/balloc.c:111:
+			unsigned cylno = ufs_cbtocylno (bbase);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: fs/ufs/balloc.c:111:
+			unsigned cylno = ufs_cbtocylno (bbase);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#122: FILE: fs/ufs/balloc.c:140:
+void ufs_free_blocks(struct inode *inode, u64 fragment, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: fs/ufs/balloc.c:147:
+	unsigned overflow, cgno, bit, end_bit, i;

WARNING:SPLIT_STRING: quoted string split across lines
#144: FILE: fs/ufs/balloc.c:159:
 		ufs_error (sb, "ufs_free_blocks", "internal error, "
+			   "fragment %llu, count %u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: fs/ufs/balloc.c:205:
+			unsigned cylno = ufs_cbtocylno(i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: fs/ufs/balloc.c:330:
+u64 ufs_new_fragments(struct inode *inode, void *p, u64 fragment,
+			   u64 goal, unsigned count, int *err,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#185: FILE: fs/ufs/balloc.c:330:
+			   u64 goal, unsigned count, int *err,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#192: FILE: fs/ufs/balloc.c:336:
+	unsigned cgno, oldcount, newcount;

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: fs/ufs/balloc.c:353:
+		ufs_warning(sb, "ufs_new_fragments", "internal warning"
+			    " fragment %llu, count %u",

WARNING:SPLIT_STRING: quoted string split across lines
#228: FILE: fs/ufs/balloc.c:366:
+			ufs_error(sb, "ufs_new_fragments", "internal error, "
+				  "fragment %llu, tmp %llu\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "locked_page"
#259: FILE: fs/ufs/balloc.c:414:
+					newcount - oldcount, locked_page != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: fs/ufs/balloc.c:480:
+			     unsigned oldcount, unsigned newcount, int *err)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: fs/ufs/balloc.c:480:
+			     unsigned oldcount, unsigned newcount, int *err)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#348: FILE: fs/ufs/balloc.c:563:
+static u64 ufs_alloc_fragments(struct inode *inode, unsigned cgno,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#349: FILE: fs/ufs/balloc.c:564:
+			       u64 goal, unsigned count, int *err)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#357: FILE: fs/ufs/balloc.c:571:
+	unsigned oldcg, i, j, k, allocsize;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#459: FILE: fs/ufs/balloc.c:734:
+		unsigned cylno = ufs_cbtocylno((unsigned)result);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#459: FILE: fs/ufs/balloc.c:734:
+		unsigned cylno = ufs_cbtocylno((unsigned)result);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#462: FILE: fs/ufs/balloc.c:737:
+					  ufs_cbtorpos((unsigned)result)), 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#480: FILE: fs/ufs/balloc.c:783:
+			     u64 goal, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#489: FILE: fs/ufs/balloc.c:798:
+	unsigned start, length, loc;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#554: FILE: fs/ufs/inode.c:181:
+	unsigned blockoff, lastblockoff;

WARNING:SPLIT_STRING: quoted string split across lines
#561: FILE: fs/ufs/inode.c:186:
+	UFSD("ENTER, ino %lu, fragment %llu, new_fragment %llu, required %u, "
+	     "metadata %d\n", inode->i_ino, (unsigned long long)fragment,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: fs/ufs/inode.c:245:
+		tmp = ufs_data_ptr_to_cpu(sb,
+					 ufs_get_direct_data_ptr(uspi, ufsi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: fs/ufs/inode.c:268:
+			tmp = ufs_data_ptr_to_cpu(sb,
+						 ufs_get_direct_data_ptr(uspi, ufsi, block - 1));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#675: FILE: fs/ufs/inode.c:337:
+	unsigned blockoff;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#716: FILE: fs/ufs/inode.c:376:
+	if (block && (uspi->fs_magic == UFS2_MAGIC ?

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#717: FILE: fs/ufs/inode.c:377:
+		      (tmp = fs64_to_cpu(sb, ((__fs64 *)bh->b_data)[block-1])) :
 		                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#718: FILE: fs/ufs/inode.c:378:
+		      (tmp = fs32_to_cpu(sb, ((__fs32 *)bh->b_data)[block-1]))))
 		                                                         ^

WARNING:SPLIT_STRING: quoted string split across lines
#784: FILE: fs/ufs/truncate.c:100:
+	UFSD("frag1 %llu, frag2 %llu, block1 %llu, block2 %llu, frag3 %llu,"
+	     " frag4 %llu\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#850: FILE: fs/ufs/truncate.c:178:
+	unsigned free_count;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#857: FILE: fs/ufs/truncate.c:184:
+	BUG_ON(!p);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1004: FILE: fs/ufs/truncate.c:338:
+	if (!(tmp = ufs_data_ptr_to_cpu(sb, p)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1039: FILE: fs/ufs/truncate.c:384:
+	unsigned i, end;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1102: FILE: include/linux/ufs_fs.h:718:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1114: FILE: include/linux/ufs_fs.h:947:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: include/linux/ufs_fs.h:947:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1114: FILE: include/linux/ufs_fs.h:947:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1115: FILE: include/linux/ufs_fs.h:948:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1115: FILE: include/linux/ufs_fs.h:948:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1115: FILE: include/linux/ufs_fs.h:948:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1115: FILE: include/linux/ufs_fs.h:948:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#1115: FILE: include/linux/ufs_fs.h:948:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#1115: FILE: include/linux/ufs_fs.h:948:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#1116: FILE: include/linux/ufs_fs.h:949:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1117: FILE: include/linux/ufs_fs.h:950:
+			     unsigned, int *, struct page *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1130: FILE: include/linux/ufs_fs.h:1016:
+static inline u64 ufs_dtog(struct ufs_sb_private_info * uspi, u64 b)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1135: FILE: include/linux/ufs_fs.h:1021:
+}
+/* #define	ufs_dtogd(d)	((d) % uspi->s_fpg) */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1136: FILE: include/linux/ufs_fs.h:1022:
+static inline u32 ufs_dtogd(struct ufs_sb_private_info * uspi, u64 b)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1165: FILE: fs/ufs/util.h:308:
+#define ubh_get_addr64(ubh,begin) \
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'begin' - possible side-effects?
#1165: FILE: fs/ufs/util.h:308:
+#define ubh_get_addr64(ubh,begin) \
+	(((__fs64*)((ubh)->bh[(begin) >> (uspi->s_fshift-3)]->b_data)) + \
+	((begin) & ((uspi->s_fsize>>3) - 1)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1166: FILE: fs/ufs/util.h:309:
+	(((__fs64*)((ubh)->bh[(begin) >> (uspi->s_fshift-3)]->b_data)) + \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1166: FILE: fs/ufs/util.h:309:
+	(((__fs64*)((ubh)->bh[(begin) >> (uspi->s_fshift-3)]->b_data)) + \
 	                                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1167: FILE: fs/ufs/util.h:310:
+	((begin) & ((uspi->s_fsize>>3) - 1)))
 	                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1191: FILE: fs/ufs/util.h:527:
+					    unsigned blk)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1193: FILE: fs/ufs/util.h:529:
+	BUG_ON(blk > UFS_TIND_BLOCK);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473507.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 52 warnings, 14 checks, 1106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473507.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
