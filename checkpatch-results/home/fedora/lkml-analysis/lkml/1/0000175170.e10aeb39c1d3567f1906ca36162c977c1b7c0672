CHECK:BIT_MACRO: Prefer using the BIT macro
#67: FILE: kernel/lockdep_internals.h:32:
+#define LOCKF_USED			(1 << LOCK_USED)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#68: FILE: kernel/lockdep_internals.h:33:
+#define LOCKF_USED_IN_HARDIRQ		(1 << LOCK_USED_IN_HARDIRQ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#69: FILE: kernel/lockdep_internals.h:34:
+#define LOCKF_USED_IN_SOFTIRQ		(1 << LOCK_USED_IN_SOFTIRQ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#70: FILE: kernel/lockdep_internals.h:35:
+#define LOCKF_USED_IN_RECLAIM_FS	(1 << LOCK_USED_IN_RECLAIM_FS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#71: FILE: kernel/lockdep_internals.h:36:
+#define LOCKF_ENABLED_HARDIRQ		(1 << LOCK_ENABLED_HARDIRQ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#72: FILE: kernel/lockdep_internals.h:37:
+#define LOCKF_ENABLED_SOFTIRQ		(1 << LOCK_ENABLED_SOFTIRQ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#73: FILE: kernel/lockdep_internals.h:38:
+#define LOCKF_ENABLED_RECLAIM_FS	(1 << LOCK_ENABLED_RECLAIM_FS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#78: FILE: kernel/lockdep_internals.h:43:
+#define LOCKF_USED_IN_HARDIRQ_READ	(1 << LOCK_USED_IN_HARDIRQ_READ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#79: FILE: kernel/lockdep_internals.h:44:
+#define LOCKF_USED_IN_SOFTIRQ_READ	(1 << LOCK_USED_IN_SOFTIRQ_READ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#80: FILE: kernel/lockdep_internals.h:45:
+#define LOCKF_USED_IN_RECLAIM_FS_READ	(1 << LOCK_USED_IN_RECLAIM_FS_READ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#81: FILE: kernel/lockdep_internals.h:46:
+#define LOCKF_ENABLED_HARDIRQ_READ	(1 << LOCK_ENABLED_HARDIRQ_READ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#82: FILE: kernel/lockdep_internals.h:47:
+#define LOCKF_ENABLED_SOFTIRQ_READ	(1 << LOCK_ENABLED_SOFTIRQ_READ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#83: FILE: kernel/lockdep_internals.h:48:
+#define LOCKF_ENABLED_RECLAIM_FS_READ	(1 << LOCK_ENABLED_RECLAIM_FS_READ)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#149: FILE: include/linux/lockdep.h:26:
+#define XXX_LOCK_USAGE_STATES		(1+3*4)
                              		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#149: FILE: include/linux/lockdep.h:26:
+#define XXX_LOCK_USAGE_STATES		(1+3*4)
                              		    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#167: FILE: kernel/lockdep_states.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175170.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 15 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175170.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
