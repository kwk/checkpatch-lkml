WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#74: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: arch/arm/plat-omap/include/plat/omap-serial.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#181: FILE: arch/arm/plat-omap/include/plat/omap-serial.h:103:
+	spinlock_t		tx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#182: FILE: arch/arm/plat-omap/include/plat/omap-serial.h:104:
+	spinlock_t		rx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#209: FILE: arch/arm/plat-omap/include/plat/omap-serial.h:131:
+	spinlock_t		uart_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#267: FILE: drivers/serial/omap-serial.c:1:
+/*

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#282: FILE: drivers/serial/omap-serial.c:16:
+ * Note: This driver is made seperate from 8250 driver as we cannot
                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#355: FILE: drivers/serial/omap-serial.c:89:
+	return port->uartclk/(baud * divisor);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_enable_ms', this function's name, in a string
#373: FILE: drivers/serial/omap-serial.c:107:
+	dev_dbg(up->port.dev, "serial_omap_enable_ms+%d\n", up->pdev->id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/serial/omap-serial.c:117:
+	if (up->use_dma &&
+		up->uart_dma.tx_dma_channel != OMAP_UART_DMA_CH_FREE) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#429: FILE: drivers/serial/omap-serial.c:163:
+			if (lsr & UART_LSR_BI) {
[...]
+			} else if (lsr & UART_LSR_PE)
[...]
+			else if (lsr & UART_LSR_FE)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: drivers/serial/omap-serial.c:267:
+		ret = omap_request_dma(up->uart_dma.uart_dma_tx,
+				"UART Tx DMA",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_dma_channel
#535: FILE: drivers/serial/omap-serial.c:269:
+				&(up->uart_dma.tx_dma_channel));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#544: FILE: drivers/serial/omap-serial.c:278:
+	spin_lock(&(up->uart_dma.tx_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#546: FILE: drivers/serial/omap-serial.c:280:
+	spin_unlock(&(up->uart_dma.tx_lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/serial/omap-serial.c:295:
+	omap_set_dma_dest_params(up->uart_dma.tx_dma_channel, 0,
+				OMAP_DMA_AMODE_CONSTANT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: drivers/serial/omap-serial.c:300:
+	omap_set_dma_transfer_params(up->uart_dma.tx_dma_channel,
+				OMAP_DMA_DATA_TYPE_S8,

WARNING:LINE_SPACING: Missing a blank line after declarations
#577: FILE: drivers/serial/omap-serial.c:311:
+	int status;
+	status = serial_in(up, UART_MSR);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.state"
#585: FILE: drivers/serial/omap-serial.c:319:
+	    up->port.state != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: drivers/serial/omap-serial.c:356:
+		if (!up->use_dma ||
+				serial_omap_start_rxdma(up) != 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_tx_empty', this function's name, in a string
#641: FILE: drivers/serial/omap-serial.c:375:
+	dev_dbg(up->port.dev, "serial_omap_tx_empty+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_get_mctrl', this function's name, in a string
#656: FILE: drivers/serial/omap-serial.c:390:
+	dev_dbg(up->port.dev, "serial_omap_get_mctrl+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_set_mctrl', this function's name, in a string
#674: FILE: drivers/serial/omap-serial.c:408:
+	dev_dbg(up->port.dev, "serial_omap_set_mctrl+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_break_ctl', this function's name, in a string
#695: FILE: drivers/serial/omap-serial.c:429:
+	dev_dbg(up->port.dev, "serial_omap_break_ctl+%d\n", up->pdev->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/serial/omap-serial.c:449:
+	retval = request_irq(up->port.irq, serial_omap_irq, up->port.irqflags,
+				up->name, up);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_startup', this function's name, in a string
#719: FILE: drivers/serial/omap-serial.c:453:
+	dev_dbg(up->port.dev, "serial_omap_startup+%d\n", up->pdev->id);

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#723: FILE: drivers/serial/omap-serial.c:457:
+	 * (they will be reenabled in set_termios())
 	                 ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/serial/omap-serial.c:466:
+	(void) serial_in(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#734: FILE: drivers/serial/omap-serial.c:468:
+		(void) serial_in(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#735: FILE: drivers/serial/omap-serial.c:469:
+	(void) serial_in(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#736: FILE: drivers/serial/omap-serial.c:470:
+	(void) serial_in(up, UART_MSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: drivers/serial/omap-serial.c:488:
+		up->port.state->xmit.buf = dma_alloc_coherent(NULL,
+			UART_XMIT_SIZE,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_buf_dma_phys
#755: FILE: drivers/serial/omap-serial.c:489:
+			(dma_addr_t *)&(up->uart_dma.tx_buf_dma_phys),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_timer
#757: FILE: drivers/serial/omap-serial.c:491:
+		init_timer(&(up->uart_dma.rx_timer));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/serial/omap-serial.c:496:
+		up->uart_dma.rx_buf = dma_alloc_coherent(NULL,
+			up->uart_dma.rx_buf_size,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_buf_dma_phys
#763: FILE: drivers/serial/omap-serial.c:497:
+			(dma_addr_t *)&(up->uart_dma.rx_buf_dma_phys), 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_shutdown', this function's name, in a string
#782: FILE: drivers/serial/omap-serial.c:516:
+	dev_dbg(up->port.dev, "serial_omap_shutdown+%d\n", up->pdev->id);

CHECK:SPACING: No space is necessary after a cast
#804: FILE: drivers/serial/omap-serial.c:538:
+		(void) serial_in(up, UART_RX);

WARNING:LINE_SPACING: Missing a blank line after declarations
#807: FILE: drivers/serial/omap-serial.c:541:
+		int tmp;
+		dma_free_coherent(up->port.dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: drivers/serial/omap-serial.c:542:
+		dma_free_coherent(up->port.dev,
+			UART_XMIT_SIZE,	up->port.state->xmit.buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/serial/omap-serial.c:547:
+		dma_free_coherent(up->port.dev,
+			up->uart_dma.rx_buf_size, up->uart_dma.rx_buf,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#921: FILE: drivers/serial/omap-serial.c:655:
+	baud = uart_get_baud_rate(port, termios, old, 0, port->uartclk/13);
 	                                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/serial/omap-serial.c:737:
+		serial_out(up, UART_OMAP_SCR,
+			(UART_FCR_TRIGGER_4 | UART_FCR_TRIGGER_8));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_set_termios', this function's name, in a string
#1063: FILE: drivers/serial/omap-serial.c:797:
+	dev_dbg(up->port.dev, "serial_omap_set_termios+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_pm', this function's name, in a string
#1073: FILE: drivers/serial/omap-serial.c:807:
+	dev_dbg(up->port.dev, "serial_omap_pm+%d\n", up->pdev->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1085: FILE: drivers/serial/omap-serial.c:819:
+	serial_out(up, UART_OMAP_WER,
+		(state != 0) ? OMAP_UART_WER_MOD_WKUP : 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_release_port', this function's name, in a string
#1090: FILE: drivers/serial/omap-serial.c:824:
+	dev_dbg(port->dev, "serial_omap_release_port+\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_request_port', this function's name, in a string
#1095: FILE: drivers/serial/omap-serial.c:829:
+	dev_dbg(port->dev, "serial_omap_request_port+\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_config_port', this function's name, in a string
#1103: FILE: drivers/serial/omap-serial.c:837:
+	dev_dbg(up->port.dev, "serial_omap_config_port+%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1104: FILE: drivers/serial/omap-serial.c:838:
+	dev_dbg(up->port.dev, "serial_omap_config_port+%d\n",
+							up->pdev->id);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1109: FILE: drivers/serial/omap-serial.c:843:
+serial_omap_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                       ^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_verify_port', this function's name, in a string
#1112: FILE: drivers/serial/omap-serial.c:846:
+	dev_dbg(port->dev, "serial_omap_verify_port+\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_type', this function's name, in a string
#1121: FILE: drivers/serial/omap-serial.c:855:
+	dev_dbg(up->port.dev, "serial_omap_type+%d\n", up->pdev->id);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1154: FILE: drivers/serial/omap-serial.c:888:
+			unsigned int msr = serial_in(up, UART_MSR);
+			up->msr_saved_flags |= msr & MSR_SAVE_FLAGS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1172: FILE: drivers/serial/omap-serial.c:906:
+serial_omap_console_write(struct console *co, const char *s,
+		unsigned int count)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial_omap_console_ports[co->index]"
#1212: FILE: drivers/serial/omap-serial.c:946:
+	if (serial_omap_console_ports[co->index] == NULL)

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#1250: FILE: drivers/serial/omap-serial.c:984:
+struct uart_ops serial_omap_pops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr_dma_pos == up->uart_dma.prev_rx_dma_pos'
#1306: FILE: drivers/serial/omap-serial.c:1040:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr_dma_pos == 0'
#1306: FILE: drivers/serial/omap-serial.c:1040:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1307: FILE: drivers/serial/omap-serial.c:1041:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: drivers/serial/omap-serial.c:1058:
+	tty_insert_flip_string(up->port.state->port.tty,
+			up->uart_dma.rx_buf +

WARNING:RETURN_VOID: void function return statements are not generally useful
#1348: FILE: drivers/serial/omap-serial.c:1082:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1356: FILE: drivers/serial/omap-serial.c:1090:
+		ret = omap_request_dma(up->uart_dma.uart_dma_rx,
+				"UART Rx DMA",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_dma_channel
#1358: FILE: drivers/serial/omap-serial.c:1092:
+				&(up->uart_dma.rx_dma_channel));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1363: FILE: drivers/serial/omap-serial.c:1097:
+		omap_set_dma_src_params(up->uart_dma.rx_dma_channel, 0,
+				OMAP_DMA_AMODE_CONSTANT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/serial/omap-serial.c:1100:
+		omap_set_dma_dest_params(up->uart_dma.rx_dma_channel, 0,
+				OMAP_DMA_AMODE_POST_INC,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1369: FILE: drivers/serial/omap-serial.c:1103:
+		omap_set_dma_transfer_params(up->uart_dma.rx_dma_channel,
+				OMAP_DMA_DATA_TYPE_S8,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1409: FILE: drivers/serial/omap-serial.c:1143:
+	omap_set_dma_dest_params(up->uart_dma.tx_dma_channel, 0,
+				OMAP_DMA_AMODE_CONSTANT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: drivers/serial/omap-serial.c:1148:
+	omap_set_dma_transfer_params(up->uart_dma.tx_dma_channel,
+				OMAP_DMA_DATA_TYPE_S8,

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1427: FILE: drivers/serial/omap-serial.c:1161:
+	xmit->tail = (xmit->tail + up->uart_dma.tx_buf_size) & \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#1435: FILE: drivers/serial/omap-serial.c:1169:
+		spin_lock(&(up->uart_dma.tx_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#1438: FILE: drivers/serial/omap-serial.c:1172:
+		spin_unlock(&(up->uart_dma.tx_lock));

WARNING:RETURN_VOID: void function return statements are not generally useful
#1445: FILE: drivers/serial/omap-serial.c:1179:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/serial/omap-serial.c:1200:
+	if (!request_mem_region(mem->start, (mem->end - mem->start) + 1,
+				     pdev->dev.driver->name)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!up"
#1484: FILE: drivers/serial/omap-serial.c:1218:
+	if (up == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#1515: FILE: drivers/serial/omap-serial.c:1249:
+		spin_lock_init(&(up->uart_dma.tx_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_lock
#1516: FILE: drivers/serial/omap-serial.c:1250:
+		spin_lock_init(&(up->uart_dma.rx_lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1532: FILE: drivers/serial/omap-serial.c:1266:
+	dev_err(&pdev->dev, "[UART%d]: failure [%s]: %d\n",
+				pdev->id, __func__, ret);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005947.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 51 checks, 1510 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005947.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
