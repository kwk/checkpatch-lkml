WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#87: FILE: drivers/ssb/Kconfig:3:
+config SSB
+	tristate "Sonics Silicon Backplane support"
+	depends on EXPERIMENTAL
+	help
+	  Support for the Sonics Silicon Backplane bus
+
+	  The module will be called ssb
+
+	  If unsure, say M
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#97: FILE: drivers/ssb/Kconfig:13:
+config SSB_PCIHOST
+	bool "Support for SSB on PCI-bus host"
+	depends on SSB && PCI
+	default y
+	help
+	  Support for a Sonics Silicon Backplane on top
+	  of a PCI device.
+
+	  If unsure, say Y
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#107: FILE: drivers/ssb/Kconfig:23:
+config SSB_PCMCIAHOST
+	bool "Support for SSB on PCMCIA-bus host"
+	depends on SSB && PCMCIA
+	help
+	  Support for a Sonics Silicon Backplane on top
+	  of a PCMCIA device.
+
+	  If unsure, say N
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#183: FILE: drivers/ssb/driver_chipcommon.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#199: FILE: drivers/ssb/driver_chipcommon.c:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: drivers/ssb/driver_chipcommon.c:28:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/ssb/driver_chipcommon.c:96:
+	struct ssb_bus *bus = cc->dev->bus;
+	u32 uninitialized_var(tmp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#278: FILE: drivers/ssb/driver_chipcommon.c:96:
+	u32 uninitialized_var(tmp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'tmp' should also have an identifier name
#278: FILE: drivers/ssb/driver_chipcommon.c:96:
+	u32 uninitialized_var(tmp);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#308: FILE: drivers/ssb/driver_chipcommon.c:126:
+	int uninitialized_var(limit);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'limit' should also have an identifier name
#308: FILE: drivers/ssb/driver_chipcommon.c:126:
+	int uninitialized_var(limit);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus->chip_id == 0x5365'
#479: FILE: drivers/ssb/driver_chipcommon.c:297:
+	if ((bus->chip_id == 0x5365) ||
+	    (dev->id.revision < 9))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->id.revision < 9'
#479: FILE: drivers/ssb/driver_chipcommon.c:297:
+	if ((bus->chip_id == 0x5365) ||
+	    (dev->id.revision < 9))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus->chip_id == 0x5365'
#482: FILE: drivers/ssb/driver_chipcommon.c:300:
+	if ((bus->chip_id == 0x5365) ||
+	    (dev->id.revision < 9) ||
+	    ((bus->chip_id == 0x5350) && (bus->chip_rev == 0)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->id.revision < 9'
#482: FILE: drivers/ssb/driver_chipcommon.c:300:
+	if ((bus->chip_id == 0x5365) ||
+	    (dev->id.revision < 9) ||
+	    ((bus->chip_id == 0x5350) && (bus->chip_rev == 0)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus->chip_id == 0x5350'
#482: FILE: drivers/ssb/driver_chipcommon.c:300:
+	if ((bus->chip_id == 0x5365) ||
+	    (dev->id.revision < 9) ||
+	    ((bus->chip_id == 0x5350) && (bus->chip_rev == 0)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus->chip_rev == 0'
#482: FILE: drivers/ssb/driver_chipcommon.c:300:
+	if ((bus->chip_id == 0x5365) ||
+	    (dev->id.revision < 9) ||
+	    ((bus->chip_id == 0x5350) && (bus->chip_rev == 0)))

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#493: FILE: drivers/ssb/driver_chipcommon.c:311:
+		chipco_write32(cc, SSB_CHIPCO_PROG_WAITCNT, tmp); /* 0x01020a0c for a 100Mhz clock */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: drivers/ssb/driver_chipcommon.c:315:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cc->dev->id.revision > 0'
#540: FILE: drivers/ssb/driver_chipcommon.c:358:
+		if ((cc->dev->id.revision > 0) &&
+		    !(chipco_read32(cc, SSB_CHIPCO_CORECTL) & SSB_CHIPCO_CORECTL_UARTCLK0)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#583: FILE: drivers/ssb/driver_mipscore.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#602: FILE: drivers/ssb/driver_mipscore.c:20:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_irq', this function's name, in a string
#685: FILE: drivers/ssb/driver_mipscore.c:103:
+		    "set_irq: core 0x%04x, irq %d => %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#705: FILE: drivers/ssb/driver_mipscore.c:123:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#706: FILE: drivers/ssb/driver_mipscore.c:124:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#708: FILE: drivers/ssb/driver_mipscore.c:126:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#714: FILE: drivers/ssb/driver_mipscore.c:132:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#715: FILE: drivers/ssb/driver_mipscore.c:133:
+		extifregs_t *eir = (extifregs_t *) regs;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#719: FILE: drivers/ssb/driver_mipscore.c:137:
+		sb = (sbconfig_t *)((ulong) eir + SBCONFIGOFF);

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/ssb/driver_mipscore.c:150:
+			regs = (void *) REG_MAP(base + (i * 8), 8);

CHECK:SPACING: No space is necessary after a cast
#744: FILE: drivers/ssb/driver_mipscore.c:162:
+				add((void *) &eir->uartdata, irq, sb_clock(sbh), 2);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#768: FILE: drivers/ssb/driver_mipscore.c:186:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#791: FILE: drivers/ssb/driver_mipscore.c:209:
+#if 0

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#813: FILE: drivers/ssb/driver_mipscore.c:231:
+	/* Assign IRQs to all cores on the bus, start with irq line 2, because serial usually takes 1 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#815: FILE: drivers/ssb/driver_mipscore.c:233:
+		dev = &(bus->devices[i]);

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#819: FILE: drivers/ssb/driver_mipscore.c:237:
+			/* shouldn't need a separate irq line for non-4710, most of them have a proper

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#820: FILE: drivers/ssb/driver_mipscore.c:238:
+			 * external usb controller on the pci */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus->chip_id == 0x4710'
#821: FILE: drivers/ssb/driver_mipscore.c:239:
+			if ((bus->chip_id == 0x4710) && (irq <= 4)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq <= 4'
#821: FILE: drivers/ssb/driver_mipscore.c:239:
+			if ((bus->chip_id == 0x4710) && (irq <= 4)) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#825: FILE: drivers/ssb/driver_mipscore.c:243:
+			/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#830: FILE: drivers/ssb/driver_mipscore.c:248:
+			/* These devices get their own IRQ line if available, the rest goes on IRQ0 */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#847: FILE: drivers/ssb/driver_pcicore.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#863: FILE: drivers/ssb/driver_pcicore.c:17:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#885: FILE: drivers/ssb/driver_pcicore.c:39:
+ * This is MIPS specific */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1154: FILE: drivers/ssb/driver_pcicore.c:308:
+	udelay(150);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1184: FILE: drivers/ssb/driver_pcicore.c:338:
+	 * to non-MIPS platform. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1204: FILE: drivers/ssb/driver_pcicore.c:358:
+	 * PCI is bonded out, some boards may leave the pins floating. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1218: FILE: drivers/ssb/driver_pcicore.c:372:
+
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1280: FILE: drivers/ssb/driver_pcicore.c:434:
+	udelay(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1285: FILE: drivers/ssb/driver_pcicore.c:439:
+		msleep(1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->id.revision >= 6'
#1329: FILE: drivers/ssb/driver_pcicore.c:483:
+	if (bus->host_pci &&
+	    ((pdev->id.revision >= 6) || (pdev->id.coreid == SSB_DEV_PCIE))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->id.coreid == SSB_DEV_PCIE'
#1329: FILE: drivers/ssb/driver_pcicore.c:483:
+	if (bus->host_pci &&
+	    ((pdev->id.revision >= 6) || (pdev->id.coreid == SSB_DEV_PCIE))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1349: FILE: drivers/ssb/driver_pcicore.c:503:
+			 * bit is wrong. Use a hardcoded constant. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->id.revision == 0'
#1384: FILE: drivers/ssb/driver_pcicore.c:538:
+		if ((pdev->id.revision == 0) || (pdev->id.revision == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->id.revision == 1'
#1384: FILE: drivers/ssb/driver_pcicore.c:538:
+		if ((pdev->id.revision == 0) || (pdev->id.revision == 1)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1417: FILE: drivers/ssb/main.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1440: FILE: drivers/ssb/main.c:24:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1444: FILE: drivers/ssb/main.c:28:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1452: FILE: drivers/ssb/main.c:36:
+ * Don't lock this directly, but use ssb_buses_[un]lock() below. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1460: FILE: drivers/ssb/main.c:44:
+ * available and needed early. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1466: FILE: drivers/ssb/main.c:50:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1468: FILE: drivers/ssb/main.c:52:
+struct ssb_bus * ssb_pci_dev_to_bus(struct pci_dev *pdev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1486: FILE: drivers/ssb/main.c:70:
+static struct ssb_device * ssb_device_get(struct ssb_device *dev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1545: FILE: drivers/ssb/main.c:129:
+	 * completely reinitialized on resume. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#1589: FILE: drivers/ssb/main.c:173:
+		dev = &(bus->devices[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#1604: FILE: drivers/ssb/main.c:188:
+		dev = &(bus->devices[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#1623: FILE: drivers/ssb/main.c:207:
+		dev = &(bus->devices[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#1645: FILE: drivers/ssb/main.c:229:
+		dev = &(bus->devices[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tabid->vendor != devid->vendor'
#1708: FILE: drivers/ssb/main.c:292:
+	if ((tabid->vendor != devid->vendor) &&
+	    tabid->vendor != SSB_ANY_VENDOR)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tabid->coreid != devid->coreid'
#1711: FILE: drivers/ssb/main.c:295:
+	if ((tabid->coreid != devid->coreid) &&
+	    tabid->coreid != SSB_ANY_ID)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tabid->revision != devid->revision'
#1714: FILE: drivers/ssb/main.c:298:
+	if ((tabid->revision != devid->revision) &&
+	    tabid->revision != SSB_ANY_REV)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#1764: FILE: drivers/ssb/main.c:348:
+		sdev = &(bus->devices[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#1800: FILE: drivers/ssb/main.c:384:
+		sdev = &(bus->devices[i]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1803: FILE: drivers/ssb/main.c:387:
+		 * as the drivers for them are built into SSB. */

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1817: FILE: drivers/ssb/main.c:401:
+		if (!devwrap) {
+			ssb_printk(KERN_ERR PFX

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1853: FILE: drivers/ssb/main.c:437:
+			 * dev on error unwinding. */

WARNING:SPLIT_STRING: quoted string split across lines
#2031: FILE: drivers/ssb/main.c:615:
+		ssb_printk(KERN_INFO PFX "Sonics Silicon Backplane found on "
+			   "PCI device %s\n", host_pci->dev.bus_id);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#2053: FILE: drivers/ssb/main.c:637:
+		ssb_printk(KERN_INFO PFX "Sonics Silicon Backplane found on "
+			   "PCMCIA device %s\n", pcmcia_dev->devname);

WARNING:SPLIT_STRING: quoted string split across lines
#2073: FILE: drivers/ssb/main.c:657:
+		ssb_printk(KERN_INFO PFX "Sonics Silicon Backplane found at "
+			   "address 0x%08lX\n", baseaddr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[i]
#2102: FILE: drivers/ssb/main.c:686:
+		ent = &(bus->devices[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plltype == SSB_PLLTYPE_1'
#2187: FILE: drivers/ssb/main.c:771:
+		if ((plltype == SSB_PLLTYPE_1) ||
+		    (plltype == SSB_PLLTYPE_3))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plltype == SSB_PLLTYPE_3'
#2187: FILE: drivers/ssb/main.c:771:
+		if ((plltype == SSB_PLLTYPE_1) ||
+		    (plltype == SSB_PLLTYPE_3))

CHECK:BRACES: braces {} should be used on all arms of this statement
#2237: FILE: drivers/ssb/main.c:821:
+	if (bus->chipco.dev) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2240: FILE: drivers/ssb/main.c:824:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2258: FILE: drivers/ssb/main.c:842:
+	 * Backplane revisions. */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2335: FILE: drivers/ssb/main.c:919:
+		udelay(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2337: FILE: drivers/ssb/main.c:921:
+	printk(KERN_ERR PFX "Timeout waiting for bitmask %08X on "

WARNING:SPLIT_STRING: quoted string split across lines
#2338: FILE: drivers/ssb/main.c:922:
+	printk(KERN_ERR PFX "Timeout waiting for bitmask %08X on "
+			    "register %04X to %s.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2408: FILE: drivers/ssb/main.c:992:
+	 * still cores that may want to run. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2527: FILE: drivers/ssb/pci.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2551: FILE: drivers/ssb/pci.c:25:
+
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2576: FILE: drivers/ssb/pci.c:50:
+		udelay(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2644: FILE: drivers/ssb/pci.c:118:
+				msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2652: FILE: drivers/ssb/pci.c:126:
+				msleep(5);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2684: FILE: drivers/ssb/pci.c:158:
+	printk(KERN_ERR PFX "Error: ssb_pci_xtal() could not access PCI config space!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ssb_pci_xtal', this function's name, in a string
#2684: FILE: drivers/ssb/pci.c:158:
+	printk(KERN_ERR PFX "Error: ssb_pci_xtal() could not access PCI config space!\n");

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2692: FILE: drivers/ssb/pci.c:166:
+#define SPEX(_outvar, _offset, _mask, _shift)	\
+	out->_outvar = ((in[SPOFF(_offset)] & (_mask)) >> (_shift))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_outvar' may be better as '(_outvar)' to avoid precedence issues
#2692: FILE: drivers/ssb/pci.c:166:
+#define SPEX(_outvar, _offset, _mask, _shift)	\
+	out->_outvar = ((in[SPOFF(_offset)] & (_mask)) >> (_shift))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2952: FILE: drivers/ssb/pci.c:426:
+		 * Always extract r1. */

WARNING:SPLIT_STRING: quoted string split across lines
#2970: FILE: drivers/ssb/pci.c:444:
+	ssb_printk(KERN_WARNING PFX "Unsupported SPROM revision %d "
+		   "detected. Will extract v1\n", out->revision);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3098: FILE: drivers/ssb/pci.c:572:
+		parsed = simple_strtoul(tmp, NULL, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPLIT_STRING: quoted string split across lines
#3171: FILE: drivers/ssb/pci.c:645:
+		ssb_printk(KERN_ERR PFX "SPROM write: Could not freeze devices. "
+			   "No suspend support. Is CONFIG_PM enabled?\n");

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0600' used
#3190: FILE: drivers/ssb/pci.c:664:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3230: FILE: drivers/ssb/pcihost_wrapper.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3246: FILE: drivers/ssb/pcihost_wrapper.c:17:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3340: FILE: drivers/ssb/pcmcia.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3362: FILE: drivers/ssb/pcmcia.c:23:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Action>
#3376: FILE: drivers/ssb/pcmcia.c:37:
+		reg.Action = CS_WRITE;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Offset>
#3377: FILE: drivers/ssb/pcmcia.c:38:
+		reg.Offset = 0x2E;

CHECK:CAMELCASE: Avoid CamelCase: <Value>
#3378: FILE: drivers/ssb/pcmcia.c:39:
+		reg.Value = (addr & 0x0000F000) >> 12;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3418: FILE: drivers/ssb/pcmcia.c:79:
+		udelay(10);

CHECK:CAMELCASE: Avoid CamelCase: <Function>
#3456: FILE: drivers/ssb/pcmcia.c:117:
+	reg.Function = 0;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3475: FILE: drivers/ssb/pcmcia.c:136:
+		udelay(10);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3489: FILE: drivers/ssb/pcmcia.c:150:
+ * All unlikely codepaths are out-of-line. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3581: FILE: drivers/ssb/pcmcia.c:242:
+	 * bus->mapped_pcmcia_seg with hardware state. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3610: FILE: drivers/ssb/scan.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3636: FILE: drivers/ssb/scan.c:27:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3637: FILE: drivers/ssb/scan.c:28:
+const char * ssb_core_name(u16 coreid)

CHECK:BRACES: braces {} should be used on all arms of this statement
#3781: FILE: drivers/ssb/scan.c:172:
+		if (offset >= 0x800) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3784: FILE: drivers/ssb/scan.c:175:
+		} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3823: FILE: drivers/ssb/scan.c:214:
+static void __iomem * ssb_ioremap(struct ssb_bus *bus,

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#3831: FILE: drivers/ssb/scan.c:222:
+		/* fallthrough... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bus->devices[dev_i]
#3940: FILE: drivers/ssb/scan.c:331:
+		dev = &(bus->devices[dev_i]);

WARNING:SPLIT_STRING: quoted string split across lines
#3953: FILE: drivers/ssb/scan.c:344:
+			    "Core %d found: %s "
+			    "(cc 0x%03X, rev 0x%02X, vendor 0x%04X)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#3963: FILE: drivers/ssb/scan.c:354:
+					ssb_dprintk(KERN_INFO PFX "Ignoring additional "
+						    "802.11 core\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4029: FILE: drivers/ssb/ssb_private.h:1:
+#ifndef LINUX_SSB_PRIVATE_H_

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4035: FILE: drivers/ssb/ssb_private.h:7:
+
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#4046: FILE: drivers/ssb/ssb_private.h:18:
+# define ssb_dprintk(fmt, x...)	ssb_printk(fmt , ##x)
                                	               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4053: FILE: drivers/ssb/ssb_private.h:25:
+# define SSB_BUG_ON(x)		BUG_ON(x)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4059: FILE: drivers/ssb/ssb_private.h:31:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4062: FILE: drivers/ssb/ssb_private.h:34:
+extern int ssb_pci_switch_core(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4064: FILE: drivers/ssb/ssb_private.h:36:
+extern int ssb_pci_switch_coreidx(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4066: FILE: drivers/ssb/ssb_private.h:38:
+extern int ssb_pci_xtal(struct ssb_bus *bus, u32 what,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4068: FILE: drivers/ssb/ssb_private.h:40:
+extern int ssb_pci_get_invariants(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4070: FILE: drivers/ssb/ssb_private.h:42:
+extern void ssb_pci_exit(struct ssb_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4071: FILE: drivers/ssb/ssb_private.h:43:
+extern int ssb_pci_init(struct ssb_bus *bus);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4081: FILE: drivers/ssb/ssb_private.h:53:
+}
+static inline int ssb_pci_switch_coreidx(struct ssb_bus *bus,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4086: FILE: drivers/ssb/ssb_private.h:58:
+}
+static inline int ssb_pci_xtal(struct ssb_bus *bus, u32 what,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4091: FILE: drivers/ssb/ssb_private.h:63:
+}
+static inline void ssb_pci_exit(struct ssb_bus *bus)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4094: FILE: drivers/ssb/ssb_private.h:66:
+}
+static inline int ssb_pci_init(struct ssb_bus *bus)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4100: FILE: drivers/ssb/ssb_private.h:72:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4103: FILE: drivers/ssb/ssb_private.h:75:
+extern int ssb_pcmcia_switch_core(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4105: FILE: drivers/ssb/ssb_private.h:77:
+extern int ssb_pcmcia_switch_coreidx(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4107: FILE: drivers/ssb/ssb_private.h:79:
+extern int ssb_pcmcia_switch_segment(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4109: FILE: drivers/ssb/ssb_private.h:81:
+extern int ssb_pcmcia_get_invariants(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4111: FILE: drivers/ssb/ssb_private.h:83:
+extern int ssb_pcmcia_init(struct ssb_bus *bus);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4119: FILE: drivers/ssb/ssb_private.h:91:
+}
+static inline int ssb_pcmcia_switch_coreidx(struct ssb_bus *bus,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4124: FILE: drivers/ssb/ssb_private.h:96:
+}
+static inline int ssb_pcmcia_switch_segment(struct ssb_bus *bus,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4129: FILE: drivers/ssb/ssb_private.h:101:
+}
+static inline int ssb_pcmcia_init(struct ssb_bus *bus)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4135: FILE: drivers/ssb/ssb_private.h:107:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4137: FILE: drivers/ssb/ssb_private.h:109:
+extern const char * ssb_core_name(u16 coreid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4137: FILE: drivers/ssb/ssb_private.h:109:
+extern const char * ssb_core_name(u16 coreid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4138: FILE: drivers/ssb/ssb_private.h:110:
+extern int ssb_bus_scan(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4140: FILE: drivers/ssb/ssb_private.h:112:
+extern void ssb_iounmap(struct ssb_bus *ssb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4142: FILE: drivers/ssb/ssb_private.h:114:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4144: FILE: drivers/ssb/ssb_private.h:116:
+extern u32 ssb_calc_clock_rate(u32 plltype, u32 n, u32 m);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4145: FILE: drivers/ssb/ssb_private.h:117:
+extern int ssb_devices_freeze(struct ssb_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4146: FILE: drivers/ssb/ssb_private.h:118:
+extern int ssb_devices_thaw(struct ssb_bus *bus);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4147: FILE: drivers/ssb/ssb_private.h:119:
+extern struct ssb_bus * ssb_pci_dev_to_bus(struct pci_dev *pdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4147: FILE: drivers/ssb/ssb_private.h:119:
+extern struct ssb_bus * ssb_pci_dev_to_bus(struct pci_dev *pdev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4156: FILE: include/linux/ssb/ssb_driver_chipcommon.h:1:
+#ifndef LINUX_SSB_CHIPCO_H_

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4181: FILE: include/linux/ssb/ssb_driver_chipcommon.h:26:
+#define SSB_CHIPCO_CAP^I ^I^I0x0004^I^I/* Capabilities */$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#4185: FILE: include/linux/ssb/ssb_driver_chipcommon.h:30:
+#define   SSB_CHIPCO_CAP_UARTCLK_INT	0x00000008	/* UARTs are driven by internal divided clock */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#4305: FILE: include/linux/ssb/ssb_driver_chipcommon.h:150:
+#define   SSB_CHIPCO_SLOWCLKCTL_SRC_XTAL	0x00000001	/* source of slow clock is crystal */

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#4308: FILE: include/linux/ssb/ssb_driver_chipcommon.h:153:
+#define  SSB_CHIPCO_SLOWCLKCTL_LPOPD	0x00000400	/* LPOPowerDown, 1: LPO is disabled, 0: LPO is enabled */

WARNING:LONG_LINE_COMMENT: line length of 133 exceeds 100 columns
#4309: FILE: include/linux/ssb/ssb_driver_chipcommon.h:154:
+#define  SSB_CHIPCO_SLOWCLKCTL_FSLOW	0x00000800	/* ForceSlowClk, 1: sb/cores running on slow clock, 0: power logic control */

WARNING:LONG_LINE_COMMENT: line length of 147 exceeds 100 columns
#4310: FILE: include/linux/ssb/ssb_driver_chipcommon.h:155:
+#define  SSB_CHIPCO_SLOWCLKCTL_IPLL	0x00001000	/* IgnorePllOffReq, 1/0: power logic ignores/honors PLL clock disable requests from core */

WARNING:LONG_LINE_COMMENT: line length of 139 exceeds 100 columns
#4311: FILE: include/linux/ssb/ssb_driver_chipcommon.h:156:
+#define  SSB_CHIPCO_SLOWCLKCTL_ENXTAL	0x00002000	/* XtalControlEn, 1/0: power logic does/doesn't disable crystal when appropriate */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#4312: FILE: include/linux/ssb/ssb_driver_chipcommon.h:157:
+#define  SSB_CHIPCO_SLOWCLKCTL_XTALPU	0x00004000	/* XtalPU (RO), 1/0: crystal running/disabled */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4353: FILE: include/linux/ssb/ssb_driver_chipcommon.h:198:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4411: FILE: include/linux/ssb/ssb_driver_chipcommon.h:256:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4425: FILE: include/linux/ssb/ssb_driver_chipcommon.h:270:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4476: FILE: include/linux/ssb/ssb_driver_chipcommon.h:321:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4504: FILE: include/linux/ssb/ssb_driver_chipcommon.h:349:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4515: FILE: include/linux/ssb/ssb_driver_chipcommon.h:360:
+extern void ssb_chipcommon_init(struct ssb_chipcommon *cc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4518: FILE: include/linux/ssb/ssb_driver_chipcommon.h:363:
+extern void ssb_chipco_suspend(struct ssb_chipcommon *cc, pm_message_t state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4519: FILE: include/linux/ssb/ssb_driver_chipcommon.h:364:
+extern void ssb_chipco_resume(struct ssb_chipcommon *cc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4521: FILE: include/linux/ssb/ssb_driver_chipcommon.h:366:
+extern void ssb_chipco_get_clockcontrol(struct ssb_chipcommon *cc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4523: FILE: include/linux/ssb/ssb_driver_chipcommon.h:368:
+extern void ssb_chipco_timing_init(struct ssb_chipcommon *cc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4532: FILE: include/linux/ssb/ssb_driver_chipcommon.h:377:
+extern void ssb_chipco_set_clockmode(struct ssb_chipcommon *cc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4536: FILE: include/linux/ssb/ssb_driver_chipcommon.h:381:
+extern int ssb_chipco_serial_init(struct ssb_chipcommon *cc,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4547: FILE: include/linux/ssb/ssb_driver_extif.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#4587: FILE: include/linux/ssb/ssb_driver_extif.h:41:
+#define SSB_EXTIF_GPIO_OUT(index)	({		\
+	BUILD_BUG_ON(index >= SSB_EXTIF_NR_GPIOOUT);	\
+	SSB_EXTIF_GPIO_OUT_BASE + ((index) * 8);	\
+					})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'index' may be better as '(index)' to avoid precedence issues
#4587: FILE: include/linux/ssb/ssb_driver_extif.h:41:
+#define SSB_EXTIF_GPIO_OUT(index)	({		\
+	BUILD_BUG_ON(index >= SSB_EXTIF_NR_GPIOOUT);	\
+	SSB_EXTIF_GPIO_OUT_BASE + ((index) * 8);	\
+					})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#4591: FILE: include/linux/ssb/ssb_driver_extif.h:45:
+#define SSB_EXTIF_GPIO_OUTEN(index)	({		\
+	BUILD_BUG_ON(index >= SSB_EXTIF_NR_GPIOOUT);	\
+	SSB_EXTIF_GPIO_OUTEN_BASE + ((index) * 8);	\
+					})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'index' may be better as '(index)' to avoid precedence issues
#4591: FILE: include/linux/ssb/ssb_driver_extif.h:45:
+#define SSB_EXTIF_GPIO_OUTEN(index)	({		\
+	BUILD_BUG_ON(index >= SSB_EXTIF_NR_GPIOOUT);	\
+	SSB_EXTIF_GPIO_OUTEN_BASE + ((index) * 8);	\
+					})

CHECK:BIT_MACRO: Prefer using the BIT macro
#4599: FILE: include/linux/ssb/ssb_driver_extif.h:53:
+#define  SSB_EXTIF_CTL_UARTEN		(1 << 0) /* UART enable */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#4601: FILE: include/linux/ssb/ssb_driver_extif.h:55:
+#define  SSB_EXTIF_EXTSTAT_EMODE	(1 << 0) /* Endian mode (ro) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4602: FILE: include/linux/ssb/ssb_driver_extif.h:56:
+#define  SSB_EXTIF_EXTSTAT_EIRQPIN	(1 << 1) /* External interrupt pin (ro) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4603: FILE: include/linux/ssb/ssb_driver_extif.h:57:
+#define  SSB_EXTIF_EXTSTAT_GPIOIRQPIN	(1 << 2) /* GPIO interrupt pin (ro) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4632: FILE: include/linux/ssb/ssb_driver_extif.h:86:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4634: FILE: include/linux/ssb/ssb_driver_extif.h:88:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#4636: FILE: include/linux/ssb/ssb_driver_extif.h:90:
+#define	SSB_EXTCFG_EN			(1 << 0)	/* enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4642: FILE: include/linux/ssb/ssb_driver_extif.h:96:
+#define	SSB_EXTCFG_DS16			(1 << 4)	/* destsize:  0=8bit, 1=16bit */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4643: FILE: include/linux/ssb/ssb_driver_extif.h:97:
+#define	SSB_EXTCFG_BSWAP		(1 << 5)	/* byteswap */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4649: FILE: include/linux/ssb/ssb_driver_extif.h:103:
+#define	SSB_EXTCFG_CLKEN		(1 << 8)	/* clock enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#4650: FILE: include/linux/ssb/ssb_driver_extif.h:104:
+#define	SSB_EXTCFG_STROBE		(1 << 9)	/* size/bytestrobe (synch only) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4705: FILE: include/linux/ssb/ssb_driver_extif.h:159:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4713: FILE: include/linux/ssb/ssb_driver_mips.h:1:
+#ifndef LINUX_SSB_MIPSCORE_H_

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4728: FILE: include/linux/ssb/ssb_driver_mips.h:16:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4739: FILE: include/linux/ssb/ssb_driver_mips.h:27:
+extern void ssb_mipscore_init(struct ssb_mipscore *mcore);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4741: FILE: include/linux/ssb/ssb_driver_mips.h:29:
+extern unsigned int ssb_mips_irq(struct ssb_device *dev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4743: FILE: include/linux/ssb/ssb_driver_mips.h:31:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4763: FILE: include/linux/ssb/ssb_driver_pci.h:1:
+#ifndef LINUX_SSB_PCICORE_H_

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#4777: FILE: include/linux/ssb/ssb_driver_pci.h:15:
+#define  SSB_PCICORE_ARBCTL_PARKID	0x00000006 /* Mask, selects which agent is parked on an idle bus */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4830: FILE: include/linux/ssb/ssb_driver_pci.h:68:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4834: FILE: include/linux/ssb/ssb_driver_pci.h:72:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4842: FILE: include/linux/ssb/ssb_driver_pci.h:80:
+extern void ssb_pcicore_init(struct ssb_pcicore *pc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4845: FILE: include/linux/ssb/ssb_driver_pci.h:83:
+extern int ssb_pcicore_dev_irqvecs_enable(struct ssb_pcicore *pc,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4848: FILE: include/linux/ssb/ssb_driver_pci.h:86:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4851: FILE: include/linux/ssb/ssb_driver_pci.h:89:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4875: FILE: include/linux/ssb/ssb.h:1:
+#ifndef LINUX_SSB_H_

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4886: FILE: include/linux/ssb/ssb.h:12:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4891: FILE: include/linux/ssb/ssb.h:17:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4981: FILE: include/linux/ssb/ssb.h:107:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4984: FILE: include/linux/ssb/ssb.h:110:
+ * Internal, don't use that outside of ssb. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4992: FILE: include/linux/ssb/ssb.h:118:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5035: FILE: include/linux/ssb/ssb.h:161:
+};
+#define SSB_DEVICE(_vendor, _coreid, _revision)  \

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5045: FILE: include/linux/ssb/ssb.h:171:
+ * following ugly workaround to get from struct device to struct ssb_device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5053: FILE: include/linux/ssb/ssb.h:179:
+	 * is an optimization. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5070: FILE: include/linux/ssb/ssb.h:196:
+struct ssb_device * dev_to_ssb_dev(struct device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#5073: FILE: include/linux/ssb/ssb.h:199:
+	struct __ssb_dev_wrapper *wrap = container_of(dev, struct __ssb_dev_wrapper, dev);
+	return wrap->sdev;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5082: FILE: include/linux/ssb/ssb.h:208:
+}
+static inline

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5083: FILE: include/linux/ssb/ssb.h:209:
+void * ssb_get_drvdata(struct ssb_device *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5091: FILE: include/linux/ssb/ssb.h:217:
+void * ssb_get_devtypedata(struct ssb_device *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5096: FILE: include/linux/ssb/ssb.h:222:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5109: FILE: include/linux/ssb/ssb.h:235:
+};
+#define drv_to_ssb_drv(_drv) container_of(_drv, struct ssb_driver, drv)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5111: FILE: include/linux/ssb/ssb.h:237:
+extern int __ssb_driver_register(struct ssb_driver *drv, struct module *owner);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5116: FILE: include/linux/ssb/ssb.h:242:
+}
+extern void ssb_driver_unregister(struct ssb_driver *drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5116: FILE: include/linux/ssb/ssb.h:242:
+extern void ssb_driver_unregister(struct ssb_driver *drv);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5118: FILE: include/linux/ssb/ssb.h:244:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5120: FILE: include/linux/ssb/ssb.h:246:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5201: FILE: include/linux/ssb/ssb.h:327:
+	 * using them in the ssb core code. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5217: FILE: include/linux/ssb/ssb.h:343:
+};
+/* Type of function to fetch the invariants. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5224: FILE: include/linux/ssb/ssb.h:350:
+ * Put the invariants into the struct pointed to by iv. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5225: FILE: include/linux/ssb/ssb.h:351:
+extern int ssb_bus_ssbbus_register(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5229: FILE: include/linux/ssb/ssb.h:355:
+extern int ssb_bus_pcibus_register(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5233: FILE: include/linux/ssb/ssb.h:359:
+extern int ssb_bus_pcmciabus_register(struct ssb_bus *bus,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5238: FILE: include/linux/ssb/ssb.h:364:
+extern void ssb_bus_unregister(struct ssb_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5240: FILE: include/linux/ssb/ssb.h:366:
+extern u32 ssb_clockspeed(struct ssb_bus *bus);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5245: FILE: include/linux/ssb/ssb.h:371:
+ * If no device-specific flags are available, use 0. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5250: FILE: include/linux/ssb/ssb.h:376:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5256: FILE: include/linux/ssb/ssb.h:382:
+}
+static inline u32 ssb_read32(struct ssb_device *dev, u16 offset)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5260: FILE: include/linux/ssb/ssb.h:386:
+}
+static inline void ssb_write16(struct ssb_device *dev, u16 offset, u16 value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5264: FILE: include/linux/ssb/ssb.h:390:
+}
+static inline void ssb_write32(struct ssb_device *dev, u16 offset, u32 value)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5269: FILE: include/linux/ssb/ssb.h:395:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5271: FILE: include/linux/ssb/ssb.h:397:
+ * addresses before they are given to a device. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5272: FILE: include/linux/ssb/ssb.h:398:
+extern u32 ssb_dma_translation(struct ssb_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5276: FILE: include/linux/ssb/ssb.h:402:
+extern int ssb_dma_set_mask(struct ssb_device *ssb_dev, u64 mask);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5278: FILE: include/linux/ssb/ssb.h:404:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5281: FILE: include/linux/ssb/ssb.h:407:
+extern int ssb_pcihost_register(struct pci_driver *driver);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5288: FILE: include/linux/ssb/ssb.h:414:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5292: FILE: include/linux/ssb/ssb.h:418:
+ * are other devices that want to run. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5293: FILE: include/linux/ssb/ssb.h:419:
+extern int ssb_bus_may_powerdown(struct ssb_bus *bus);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5296: FILE: include/linux/ssb/ssb.h:422:
+ * Otherwise static always-on powercontrol will be used. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5297: FILE: include/linux/ssb/ssb.h:423:
+extern int ssb_bus_powerup(struct ssb_bus *bus, bool dynamic_pctl);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5299: FILE: include/linux/ssb/ssb.h:425:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5301: FILE: include/linux/ssb/ssb.h:427:
+extern u32 ssb_admatch_base(u32 adm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5302: FILE: include/linux/ssb/ssb.h:428:
+extern u32 ssb_admatch_size(u32 adm);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5304: FILE: include/linux/ssb/ssb.h:430:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5312: FILE: include/linux/ssb/ssb_regs.h:1:
+#ifndef LINUX_SSB_REGS_H_

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5315: FILE: include/linux/ssb/ssb_regs.h:4:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5323: FILE: include/linux/ssb/ssb_regs.h:12:
+#define SSB_ENUM_BASE    ^I0x18000000^I/* Enumeration space base */$

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#5335: FILE: include/linux/ssb/ssb_regs.h:24:
+#define SSB_PCIE_DMA_L32	0x00000000	/* PCIE Client Mode sb2pcitranslation2 (2 ZettaBytes), low 32 bits */

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#5336: FILE: include/linux/ssb/ssb_regs.h:25:
+#define SSB_PCIE_DMA_H32	0x80000000	/* PCIE Client Mode sb2pcitranslation2 (2 ZettaBytes), high 32 bits */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5340: FILE: include/linux/ssb/ssb_regs.h:29:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5345: FILE: include/linux/ssb/ssb_regs.h:34:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5349: FILE: include/linux/ssb/ssb_regs.h:38:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5369: FILE: include/linux/ssb/ssb_regs.h:58:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#5492: FILE: include/linux/ssb/ssb_regs.h:181:
+#define  SSB_SPROM1_ETHPHY_ET0M		(1<<14)	/* MDIO for enet0 */
                                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#5492: FILE: include/linux/ssb/ssb_regs.h:181:
+#define  SSB_SPROM1_ETHPHY_ET0M		(1<<14)	/* MDIO for enet0 */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#5493: FILE: include/linux/ssb/ssb_regs.h:182:
+#define  SSB_SPROM1_ETHPHY_ET1M		(1<<15)	/* MDIO for enet1 */
                                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#5493: FILE: include/linux/ssb/ssb_regs.h:182:
+#define  SSB_SPROM1_ETHPHY_ET1M		(1<<15)	/* MDIO for enet1 */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#5547: FILE: include/linux/ssb/ssb_regs.h:236:
+#define SSB_SPROM3_OFDMAPO		0x102C	/* A-PHY OFDM Mid Power Offset (4 bytes, BigEndian) */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#5548: FILE: include/linux/ssb/ssb_regs.h:237:
+#define SSB_SPROM3_OFDMALPO		0x1030	/* A-PHY OFDM Low Power Offset (4 bytes, BigEndian) */

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#5549: FILE: include/linux/ssb/ssb_regs.h:238:
+#define SSB_SPROM3_OFDMAHPO		0x1034	/* A-PHY OFDM High Power Offset (4 bytes, BigEndian) */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#5550: FILE: include/linux/ssb/ssb_regs.h:239:
+#define SSB_SPROM3_GPIOLDC		0x1042	/* GPIO LED Powersave Duty Cycle (4 bytes, BigEndian) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5602: FILE: include/linux/ssb/ssb_regs.h:291:
+
+

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#5614: FILE: MAINTAINERS:3352:
+P:	Michael Buesch
+M:	mb@bu3sch.de

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399682.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 93 warnings, 176 checks, 5466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399682.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
