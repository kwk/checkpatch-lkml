WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
  - softlimit_priority -- local softlimit priority of the memcg. exported as

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: mm/memcontrol.c:222:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#125: FILE: mm/memcontrol.c:1563:
+	int i;
+	for (i = 0; i < SOFTLIMIT_MAX_PRIO; i++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: mm/memcontrol.c:1570:
+	int level = mem->softlimit_priority;
+	list_add(&mem->softlimit_list, &softlimit_head.list[level]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: mm/memcontrol.c:1586:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#183: FILE: mm/memcontrol.c:2016:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prio < 0'
#195: FILE: mm/memcontrol.c:2028:
+	if ((prio < 0) || (prio >= SOFTLIMIT_MAX_PRIO))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prio >= SOFTLIMIT_MAX_PRIO'
#195: FILE: mm/memcontrol.c:2028:
+	if ((prio < 0) || (prio >= SOFTLIMIT_MAX_PRIO))

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: mm/memcontrol.c:2293:
+	struct mem_cgroup *memcg = mem_cgroup_from_cont(cgrp);
+	return mem_cgroup_set_softlimit_prio(memcg, (int)val);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158479.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 5 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158479.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
