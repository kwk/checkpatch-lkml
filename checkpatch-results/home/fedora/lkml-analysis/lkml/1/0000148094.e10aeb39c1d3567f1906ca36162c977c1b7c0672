WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
The following changes since commit 5d80f8e5a9dc9c9a94d4aeaa567e219a808b8a4a:             

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '5d80f8e5a9dc9c9a94d4aeaa567e219a808b8a4a', maybe rebased or not pulled?
#32: 
The following changes since commit 5d80f8e5a9dc9c9a94d4aeaa567e219a808b8a4a:             

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '73d3e96bb9b6530e394630c1656715e5f67f3d1c', maybe rebased or not pulled?
#86: 
commit 73d3e96bb9b6530e394630c1656715e5f67f3d1c

WARNING:BAD_SIGN_OFF: Do not use whitespace before Reported-by:
#107: 
    Reported-by: Sitsofe Wheeler <sitsofe@yahoo.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Non-standard signature: Diagnosed-by:
#108: 
    Diagnosed-by: Frederic Weisbecker <fweisbec@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Diagnosed-by:
#108: 
    Diagnosed-by: Frederic Weisbecker <fweisbec@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Tested-by:
#109: 
    Tested-by: Frederic Weisbecker <fweisbec@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Tested-by:
#110: 
    Tested-by: Christof Schmitt <christof.schmitt@de.ibm.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#111: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#130: 
    Signed-off-by: WANG Cong <xiyou.wangcong@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#131: 
    Cc: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#132: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#132: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#148: 
    Cc: Anders Kaseorg <andersk@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#149: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#150: 
    Signed-off-by: Tim Abbott <tabbott@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#151: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> (bugfix and style)

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#172: 
    Cc: Anders Kaseorg <andersk@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#172: 
    Cc: Anders Kaseorg <andersk@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#173: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#173: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#174: 
    Cc: Tim Abbott <tabbott@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#175: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#175: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#195: 
    Cc: linux-mtd@lists.infradead.org

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#196: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#196: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#219: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#219: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#220: 
    Cc: Tim Abbott <tabbott@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#220: 
    Cc: Tim Abbott <tabbott@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#221: 
    Signed-off-by: Anders Kaseorg <andersk@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#222: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#222: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#244: 
    Cc: Anders Kaseorg <andersk@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#244: 
    Cc: Anders Kaseorg <andersk@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#245: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#245: 
    Cc: Jeff Arnold <jbarnold@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#246: 
    Signed-off-by: Tim Abbott <tabbott@mit.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#246: 
    Signed-off-by: Tim Abbott <tabbott@mit.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#247: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#247: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#279: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#279: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#297: 
    Cc: Shawn Bohrer <shawn.bohrer@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#298: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#298: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#322: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#322: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#349: 
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#350: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> (bool-ified)

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#351: 
    Cc: Jiri Slaby <jirislaby@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#371: 
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#371: 
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#372: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#372: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#389: 
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#389: 
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#390: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#390: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Acked-by:
#391: 
    Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Tested-by:
#430: 
    Tested-by: Kay Sievers <kay.sievers@vrfy.org>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#431: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#431: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#716: FILE: include/linux/kmod.h:32:
+extern int __request_module(bool wait, const char *name, ...) \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#716: FILE: include/linux/kmod.h:32:
+extern int __request_module(bool wait, const char *name, ...) \

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#717: FILE: include/linux/kmod.h:33:
+	__attribute__((format(printf, 2, 3)));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#720: FILE: include/linux/kmod.h:36:
+#define try_then_request_module(x, mod...) \
+	((x) ?: (__request_module(false, mod), (x)))

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#724: FILE: include/linux/kmod.h:39:
+static inline int request_module(const char *name, ...) { return -ENOSYS; }

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#725: FILE: include/linux/kmod.h:40:
+static inline int request_module_nowait(const char *name, ...) { return -ENOSYS; }

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#873: FILE: include/linux/moduleparam.h:143:
+extern void destroy_params(const struct kernel_param *params, unsigned num);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#873: FILE: include/linux/moduleparam.h:143:
+extern void destroy_params(const struct kernel_param *params, unsigned num);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#876: FILE: include/linux/moduleparam.h:146:
+				  unsigned num)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#971: FILE: kernel/kmod.c:113:
+	ret = call_usermodehelper(modprobe_path, argv, envp,
+			wait ? UMH_WAIT_PROC : UMH_WAIT_EXEC);

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#989: FILE: kernel/module.c:70:
+DEFINE_MUTEX(module_mutex);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1068: FILE: kernel/module.c:320:
+ * (optional) module which owns it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1138: FILE: kernel/module.c:870:
+	 * to module from symbol_get, so it can't go away. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1140: FILE: kernel/module.c:872:
+	BUG_ON(!modaddr);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1168: FILE: kernel/module.c:963:
+		printk(KERN_WARNING "%s: %s: kernel tainted.\n",

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#1193: FILE: kernel/module.c:1062:
+static const struct kernel_symbol *resolve_symbol(Elf_Shdr *sechdrs,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1210: FILE: kernel/module.c:1074:
+	/* use_module can fail due to OOM,
+	   or module initialization or unloading */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1210: FILE: kernel/module.c:1074:
+	   or module initialization or unloading */

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#1383: FILE: kernel/module.c:2272:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "__module_address"
#1457: FILE: kernel/module.c:2736:
+	ret = __module_address(addr) != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1485: FILE: kernel/module.c:2758:
+		if (within_module_core(addr, mod)
+		    || within_module_init(addr, mod))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "__module_text_address"
#1507: FILE: kernel/module.c:2777:
+	ret = __module_text_address(addr) != NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1523: FILE: kernel/module.c:2793:
+	struct module *mod = __module_address(addr);
+	if (mod) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1526: FILE: kernel/module.c:2796:
+		if (!within(addr, mod->module_init, mod->init_text_size)
+		    && !within(addr, mod->module_core, mod->core_text_size))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1543: FILE: kernel/module.c:2822:
+ * If these change, we don't want to try to parse the module. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1579: FILE: kernel/params.c:227:
+	 * don't need to; this mangled commandline is preserved. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1580: FILE: kernel/params.c:228:
+	if (slab_is_available()) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1585: FILE: kernel/params.c:233:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1595: FILE: kernel/params.c:589:
+void destroy_params(const struct kernel_param *params, unsigned num)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148094.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 81 warnings, 12 checks, 1040 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148094.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
