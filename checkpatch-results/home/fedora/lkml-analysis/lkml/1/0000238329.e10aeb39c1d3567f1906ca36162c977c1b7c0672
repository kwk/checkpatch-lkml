WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: init/dyn_array.c:1:
+#include <linux/types.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#199: FILE: init/dyn_array.c:13:
+	struct dyn_array **daa;
 	                   ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#203: FILE: init/dyn_array.c:17:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#203: FILE: init/dyn_array.c:17:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                               ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#203: FILE: init/dyn_array.c:17:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#204: FILE: init/dyn_array.c:18:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#208: FILE: init/dyn_array.c:22:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#208: FILE: init/dyn_array.c:22:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: init/dyn_array.c:23:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",
+			da->size, *da->nr, da->align);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#215: FILE: init/dyn_array.c:29:
+		printk(KERN_DEBUG "dyn_array total_size: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: init/dyn_array.c:30:
+		printk(KERN_DEBUG "dyn_array total_size: %#lx\n",
+			 total_size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#227: FILE: init/dyn_array.c:41:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#227: FILE: init/dyn_array.c:41:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                               ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#227: FILE: init/dyn_array.c:41:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#228: FILE: init/dyn_array.c:42:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#235: FILE: init/dyn_array.c:49:
+		printk(KERN_CONT " ==> [%#lx - %#lx]\n", phys, phys + size);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#235: FILE: init/dyn_array.c:49:
+		printk(KERN_CONT " ==> [%#lx - %#lx]\n", phys, phys + size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#257: FILE: init/dyn_array.c:71:
+	struct dyn_array **daa;
 	                   ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#258: FILE: init/dyn_array.c:72:
+	unsigned max_align = 1;

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#260: FILE: init/dyn_array.c:74:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#260: FILE: init/dyn_array.c:74:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                       ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#260: FILE: init/dyn_array.c:74:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#261: FILE: init/dyn_array.c:75:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#265: FILE: init/dyn_array.c:79:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#265: FILE: init/dyn_array.c:79:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: init/dyn_array.c:80:
+		printk(KERN_CONT "size:%#lx nr:%d align:%#lx\n",
+			da->size, *da->nr, da->align);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#272: FILE: init/dyn_array.c:86:
+		printk(KERN_DEBUG "per_cpu_dyn_array total_size: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: init/dyn_array.c:87:
+		printk(KERN_DEBUG "per_cpu_dyn_array total_size: %#lx\n",
+			 total_size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#284: FILE: init/dyn_array.c:98:
+	struct dyn_array **daa;
 	                   ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#289: FILE: init/dyn_array.c:103:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#289: FILE: init/dyn_array.c:103:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                       ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#289: FILE: init/dyn_array.c:103:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#290: FILE: init/dyn_array.c:104:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#301: FILE: init/dyn_array.c:115:
+		printk(KERN_CONT " ==> [%#lx - %#lx]\n", phys, phys + size);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#301: FILE: init/dyn_array.c:115:
+		printk(KERN_CONT " ==> [%#lx - %#lx]\n", phys, phys + size);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#305: FILE: init/dyn_array.c:119:
+		if (da->init_work) {
+			da->init_work(da);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000238329.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 33 warnings, 4 checks, 256 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000238329.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
