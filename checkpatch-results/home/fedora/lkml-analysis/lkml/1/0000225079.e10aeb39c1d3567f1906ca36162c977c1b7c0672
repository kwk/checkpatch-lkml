WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> > I already have wasted a month on this not-interesting work and want to fix

WARNING:TYPO_SPELLING: 'poitner' may be misspelled - perhaps 'pointer'?
#86: 
pre-allocate all page_cgroup at boot and remove page_cgroup poitner
                                                            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#111: FILE: mm/page_cgroup.c:1:
+#include <linux/mm.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#129: FILE: mm/page_cgroup.c:19:
+static unsigned long total_usage = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: mm/page_cgroup.c:52:
+	base = __alloc_bootmem_node_nopanic(NODE_DATA(nid),
+			table_size, PAGE_SIZE, __pa(MAX_DMA_ADDRESS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: mm/page_cgroup.c:78:
+	free_bootmem_node(NODE_DATA(nid),
+			(unsigned long)base, table_size);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#194: FILE: mm/page_cgroup.c:84:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: mm/page_cgroup.c:92:
+	printk("allocate page_cgroup at boot for %ld bytes", total_usage);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#203: FILE: mm/page_cgroup.c:93:
+	printk("please try cgroup_disable=memory option if you don't want\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: mm/page_cgroup.c:96:
+	printk("allocation of page_cgroup was failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#207: FILE: mm/page_cgroup.c:97:
+	printk("please try cgroup_disable=memory boot option\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: mm/page_cgroup.c:128:
+		printk("page cgroup allocation failure\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#250: FILE: mm/page_cgroup.c:140:
+}
+#ifdef CONFIG_MEMORY_HOTPLUG

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: mm/page_cgroup.c:155:
+int online_page_cgroup(unsigned long start_pfn,
+			unsigned long nr_pages,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: mm/page_cgroup.c:180:
+int offline_page_cgroup(unsigned long start_pfn,
+		unsigned long nr_pages, int nid)

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: mm/page_cgroup.c:188:
+                __free_page_cgroup(pfn);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: mm/page_cgroup.c:188:
+                __free_page_cgroup(pfn);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#301: FILE: mm/page_cgroup.c:191:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: mm/page_cgroup.c:194:
+static int page_cgroup_callback(struct notifier_block *self,
+			       unsigned long action, void *arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#308: FILE: mm/page_cgroup.c:198:
+	int ret = 0;
+	switch (action) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: mm/page_cgroup.c:201:
+		ret = online_page_cgroup(mn->start_pfn,
+				   mn->nr_pages, mn->status_change_nid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: mm/page_cgroup.c:206:
+		offline_page_cgroup(mn->start_pfn,
+				mn->nr_pages, mn->status_change_nid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: mm/page_cgroup.c:210:
+        case MEM_ONLINE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: mm/page_cgroup.c:210:
+        case MEM_ONLINE:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: mm/page_cgroup.c:228:
+^I^Ifail = init_section_page_cgroup(pfn);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#341: FILE: mm/page_cgroup.c:231:
+		printk("please try cgroup_disable=memory boot option\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#351: FILE: mm/page_cgroup.c:241:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#386: FILE: include/linux/page_cgroup.h:1:
+#ifndef __LINUX_PAGE_CGROUP_H

CHECK:CAMELCASE: Avoid CamelCase: <Cache>
#431: FILE: include/linux/page_cgroup.h:46:
+TESTPCGFLAG(Cache, CACHE)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Used>
#433: FILE: include/linux/page_cgroup.h:48:
+TESTPCGFLAG(Used, USED)

CHECK:CAMELCASE: Avoid CamelCase: <File>
#437: FILE: include/linux/page_cgroup.h:52:
+TESTPCGFLAG(File, FILE)

CHECK:CAMELCASE: Avoid CamelCase: <Active>
#441: FILE: include/linux/page_cgroup.h:56:
+TESTPCGFLAG(Active, ACTIVE)

CHECK:CAMELCASE: Avoid CamelCase: <Unevictable>
#445: FILE: include/linux/page_cgroup.h:60:
+TESTPCGFLAG(Unevictable, UNEVICTABLE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: include/linux/page_cgroup.h:89:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#583: FILE: mm/memcontrol.c:153:
+	(1 << PCG_ACTIVE) | (1 << PCG_CACHE) | (1 << PCG_USED)|  (1 << PCG_LOCK),
 	                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#800: FILE: mm/memcontrol.c:675:
 
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225079.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 14 warnings, 18 checks, 859 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225079.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
