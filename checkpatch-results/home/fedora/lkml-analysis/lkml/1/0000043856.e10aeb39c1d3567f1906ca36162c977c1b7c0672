WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#258: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: tools/perf/util/process_event.c:1:
+#include "process_event.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: tools/perf/util/process_event.c:13:
+	dump_printf("%p [%p]: PERF_RECORD_MMAP %d/%d: [%p(%p) @ %p]: %s\n",
+			(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#284: FILE: tools/perf/util/process_event.c:22:
+	if (thread == NULL || map == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#284: FILE: tools/perf/util/process_event.c:22:
+	if (thread == NULL || map == NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#294: FILE: tools/perf/util/process_event.c:32:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: tools/perf/util/process_event.c:40:
+	dump_printf("%p [%p]: PERF_RECORD_COMM: %s:%d\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#306: FILE: tools/perf/util/process_event.c:44:
+	if (thread == NULL ||

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#322: FILE: tools/perf/util/process_event.h:1:
+#ifndef __PROCESS_EVENT_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: tools/perf/util/process_event.h:26:
+extern int process_mmap_event(event_t *, unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'event_t *' should also have an identifier name
#347: FILE: tools/perf/util/process_event.h:26:
+extern int process_mmap_event(event_t *, unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#347: FILE: tools/perf/util/process_event.h:26:
+extern int process_mmap_event(event_t *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#347: FILE: tools/perf/util/process_event.h:26:
+extern int process_mmap_event(event_t *, unsigned long, unsigned long);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#348: FILE: tools/perf/util/process_event.h:27:
+extern int process_comm_event(event_t *, unsigned long , unsigned long);
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: tools/perf/util/process_event.h:27:
+extern int process_comm_event(event_t *, unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'event_t *' should also have an identifier name
#348: FILE: tools/perf/util/process_event.h:27:
+extern int process_comm_event(event_t *, unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#348: FILE: tools/perf/util/process_event.h:27:
+extern int process_comm_event(event_t *, unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#348: FILE: tools/perf/util/process_event.h:27:
+extern int process_comm_event(event_t *, unsigned long , unsigned long);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#357: FILE: tools/perf/util/process_events.c:1:
+#include "process_events.h"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: tools/perf/util/process_events.c:13:
+	dump_printf("%p [%p]: PERF_RECORD_MMAP %d/%d: [%p(%p) @ %p]: %s\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#378: FILE: tools/perf/util/process_events.c:22:
+	if (thread == NULL || map == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#378: FILE: tools/perf/util/process_events.c:22:
+	if (thread == NULL || map == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: tools/perf/util/process_events.c:40:
+	dump_printf("%p [%p]: PERF_RECORD_%s: (%d:%d):(%d:%d)\n",
+		(void *)(offset + head),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#427: FILE: tools/perf/util/process_events.h:1:
+#ifndef __PROCESS_EVENTS_H

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#458: FILE: tools/perf/util/process_events.h:32:
+extern int process_mmap_event(event_t *, unsigned long , unsigned long);
                                                        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: tools/perf/util/process_events.h:32:
+extern int process_mmap_event(event_t *, unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'event_t *' should also have an identifier name
#458: FILE: tools/perf/util/process_events.h:32:
+extern int process_mmap_event(event_t *, unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#458: FILE: tools/perf/util/process_events.h:32:
+extern int process_mmap_event(event_t *, unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#458: FILE: tools/perf/util/process_events.h:32:
+extern int process_mmap_event(event_t *, unsigned long , unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: tools/perf/util/process_events.h:33:
+extern int process_task_event(event_t *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'event_t *' should also have an identifier name
#459: FILE: tools/perf/util/process_events.h:33:
+extern int process_task_event(event_t *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#459: FILE: tools/perf/util/process_events.h:33:
+extern int process_task_event(event_t *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#459: FILE: tools/perf/util/process_events.h:33:
+extern int process_task_event(event_t *, unsigned long, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043856.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 17 warnings, 14 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043856.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
