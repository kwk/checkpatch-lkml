WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
We also have machines running kernel <= 2.6.18 which never showed the problem.

WARNING:TYPO_SPELLING: 'multible' may be misspelled - perhaps 'multiple'?
#94: 
with multible concurrent "dd if=/dev/zero of=foo bs=4000k" processes.
     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: kernel/acct.c:263:
+               if (!memcmp(tmp, "?", 2)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: kernel/acct.c:263:
+               if (!memcmp(tmp, "?", 2)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#415: FILE: kernel/acct.c:263:
+               if (!memcmp(tmp, "?", 2)) {
+                       struct file *file;

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: kernel/acct.c:264:
+                       struct file *file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: kernel/acct.c:264:
+                       struct file *file;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: kernel/acct.c:265:
+                       char *p, *path;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: kernel/acct.c:265:
+                       char *p, *path;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: kernel/acct.c:266:
+                       if (!acct_globals.file) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#418: FILE: kernel/acct.c:266:
+                       char *p, *path;
+                       if (!acct_globals.file) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: kernel/acct.c:266:
+                       if (!acct_globals.file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#418: FILE: kernel/acct.c:266:
+                       if (!acct_globals.file) {
+                               printk(KERN_INFO "Process accounting is off.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: kernel/acct.c:267:
+                               printk(KERN_INFO "Process accounting is off.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: kernel/acct.c:267:
+                               printk(KERN_INFO "Process accounting is off.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#419: FILE: kernel/acct.c:267:
+                               printk(KERN_INFO "Process accounting is off.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: kernel/acct.c:268:
+                               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: kernel/acct.c:268:
+                               return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: kernel/acct.c:269:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: kernel/acct.c:269:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: kernel/acct.c:270:
+                       file = acct_globals.file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: kernel/acct.c:270:
+                       file = acct_globals.file;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: kernel/acct.c:271:
+                       path = (char *)__get_free_page(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: kernel/acct.c:271:
+                       path = (char *)__get_free_page(GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: kernel/acct.c:272:
+                       if (!path)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: kernel/acct.c:272:
+                       if (!path)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#424: FILE: kernel/acct.c:272:
+                       if (!path)
+                               return -EUSERS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: kernel/acct.c:273:
+                               return -EUSERS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: kernel/acct.c:273:
+                               return -EUSERS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: kernel/acct.c:274:
+                       p = d_path(file->f_path.dentry, file->f_path.mnt, path, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: kernel/acct.c:274:
+                       p = d_path(file->f_path.dentry, file->f_path.mnt, path, PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: kernel/acct.c:275:
+                       if (IS_ERR(p)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/acct.c:275:
+                       if (IS_ERR(p)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#427: FILE: kernel/acct.c:275:
+                       if (IS_ERR(p)) {
+                               free_page((unsigned long)path);

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: kernel/acct.c:276:
+                               free_page((unsigned long)path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: kernel/acct.c:276:
+                               free_page((unsigned long)path);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: kernel/acct.c:277:
+                               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: kernel/acct.c:277:
+                               return error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: kernel/acct.c:278:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: kernel/acct.c:278:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: kernel/acct.c:279:
+                       p[PAGE_SIZE-1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: kernel/acct.c:279:
+                       p[PAGE_SIZE-1] = 0;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#431: FILE: kernel/acct.c:279:
+                       p[PAGE_SIZE-1] = 0;
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: kernel/acct.c:280:
+                       printk(KERN_INFO "Process accounting is on. File: >%s<\n", p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: kernel/acct.c:280:
+                       printk(KERN_INFO "Process accounting is on. File: >%s<\n", p);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#432: FILE: kernel/acct.c:280:
+                       printk(KERN_INFO "Process accounting is on. File: >%s<\n", p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: kernel/acct.c:281:
+                       free_page((unsigned long)path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: kernel/acct.c:281:
+                       free_page((unsigned long)path);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: kernel/acct.c:282:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: kernel/acct.c:282:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: kernel/acct.c:283:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/acct.c:283:
+               }$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 30 warnings, 1 checks, 27 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
