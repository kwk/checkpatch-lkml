CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#119: FILE: arch/um/drivers/xterm.c:33:
+	if (data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: arch/um/drivers/xterm.c:35:
+^I*data = ((struct xterm_chan) { .pid ^I^I= -1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: arch/um/drivers/xterm.c:37:
+^I^I^I^I       .device ^I^I= device,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: arch/um/drivers/xterm.c:39:
+^I^I^I^I       .raw  ^I^I= opts->raw } );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#130: FILE: arch/um/drivers/xterm.c:39:
+				       .raw  		= opts->raw } );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!line"
#140: FILE: arch/um/drivers/xterm.c:54:
+	if (line == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!line"
#150: FILE: arch/um/drivers/xterm.c:62:
+	if (line == NULL)

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#179: FILE: arch/um/drivers/xterm.c:91:
+	char *argv[] = { terminal_emulator, title_switch, title, exec_switch,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!getenv"
#191: FILE: arch/um/drivers/xterm.c:100:
+	if (getenv("DISPLAY") == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: arch/um/drivers/xterm.c:101:
+		printk(UM_KERN_ERR "xterm_open: $DISPLAY not set.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#192: FILE: arch/um/drivers/xterm.c:101:
+		printk(UM_KERN_ERR "xterm_open: $DISPLAY not set.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#207: FILE: arch/um/drivers/xterm.c:114:
+		printk(UM_KERN_ERR "xterm_open : mkstemp failed, errno = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#207: FILE: arch/um/drivers/xterm.c:114:
+		printk(UM_KERN_ERR "xterm_open : mkstemp failed, errno = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#216: FILE: arch/um/drivers/xterm.c:121:
+		printk(UM_KERN_ERR "xterm_open : unlink failed, errno = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#216: FILE: arch/um/drivers/xterm.c:121:
+		printk(UM_KERN_ERR "xterm_open : unlink failed, errno = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#229: FILE: arch/um/drivers/xterm.c:129:
+		printk(UM_KERN_ERR "xterm_open : create_unix_socket failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#229: FILE: arch/um/drivers/xterm.c:129:
+		printk(UM_KERN_ERR "xterm_open : create_unix_socket failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#230: FILE: arch/um/drivers/xterm.c:130:
+		printk(UM_KERN_ERR "xterm_open : create_unix_socket failed, "
+		       "errno = %d\n", -fd);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: arch/um/drivers/xterm.c:138:
+		printk(UM_KERN_ERR "xterm_open : run_helper failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#243: FILE: arch/um/drivers/xterm.c:138:
+		printk(UM_KERN_ERR "xterm_open : run_helper failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: arch/um/drivers/xterm.c:139:
+		printk(UM_KERN_ERR "xterm_open : run_helper failed, "
+		       "errno = %d\n", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: arch/um/drivers/xterm.c:145:
+		printk(UM_KERN_ERR "xterm_open : failed to set descriptor "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#260: FILE: arch/um/drivers/xterm.c:145:
+		printk(UM_KERN_ERR "xterm_open : failed to set descriptor "

WARNING:SPLIT_STRING: quoted string split across lines
#261: FILE: arch/um/drivers/xterm.c:146:
+		printk(UM_KERN_ERR "xterm_open : failed to set descriptor "
+		       "non-blocking, err = %d\n", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#271: FILE: arch/um/drivers/xterm.c:153:
+		printk(UM_KERN_ERR "xterm_open : os_rcv_fd failed, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#271: FILE: arch/um/drivers/xterm.c:153:
+		printk(UM_KERN_ERR "xterm_open : os_rcv_fd failed, err = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: arch/um/drivers/xterm.c:160:
+		printk(UM_KERN_ERR "xterm_open : failed to set xterm "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xterm_open', this function's name, in a string
#281: FILE: arch/um/drivers/xterm.c:160:
+		printk(UM_KERN_ERR "xterm_open : failed to set xterm "

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: arch/um/drivers/xterm.c:161:
+		printk(UM_KERN_ERR "xterm_open : failed to set xterm "
+		       "descriptor non-blocking, err = %d\n", -err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#421: FILE: arch/um/drivers/xterm_kern.c:41:
+	if (data == NULL) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#432: FILE: arch/um/drivers/xterm_kern.c:47:
+^I*data = ((struct xterm_wait) { .fd ^I^I= socket,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#433: FILE: arch/um/drivers/xterm_kern.c:48:
+^I^I^I^I       .pid ^I^I= -1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: arch/um/drivers/xterm_kern.c:49:
+^I^I^I^I       .new_fd^I ^I= -1 });$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000418994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 27 warnings, 5 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000418994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
