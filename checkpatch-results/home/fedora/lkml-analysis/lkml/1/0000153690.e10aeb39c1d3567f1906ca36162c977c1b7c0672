WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .8
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#178: FILE: arch/powerpc/kernel/align.c:370:
+	char *ptr0 = (char *) &current->thread.TS_FPR(reg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#179: FILE: arch/powerpc/kernel/align.c:371:
+	char *ptr1 = (char *) &current->thread.TS_FPR(reg+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#179: FILE: arch/powerpc/kernel/align.c:371:
+	char *ptr1 = (char *) &current->thread.TS_FPR(reg+1);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#205: FILE: arch/powerpc/kernel/align.c:383:
+			ret |= __get_user(ptr0[i^sw], addr + i);
 			                        ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#206: FILE: arch/powerpc/kernel/align.c:384:
+			ret |= __get_user(ptr1[i^sw], addr + i + 8);
 			                        ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#208: FILE: arch/powerpc/kernel/align.c:386:
+			ret |= __put_user(ptr0[i^sw], addr + i);
 			                        ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#209: FILE: arch/powerpc/kernel/align.c:387:
+			ret |= __put_user(ptr1[i^sw], addr + i + 8);
 			                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: arch/sparc64/kernel/traps.c:323:
+			printk("Exception: PC<%016lx> faddr<UNKNOWN>\n", regs->tpc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#279: FILE: arch/sparc64/kernel/traps.c:324:
+			printk("EX_TABLE: insn<%016lx> fixup<%016lx>\n",

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs' should also have an identifier name
#479: FILE: arch/x86/include/asm/traps.h:44:
+dotraplinkage void do_device_not_available(struct pt_regs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct math_emu_info *' should also have an identifier name
#487: FILE: arch/x86/include/asm/traps.h:77:
+void math_emulate(struct math_emu_info *);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#503: FILE: arch/x86/kernel/cpu/mtrr/main.c:1603:
+		printk(KERN_INFO "CPU MTRRs all blank - virtualized system.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#639: FILE: arch/x86/kernel/vmiclock_32.c:291:
+	cycle_t ret = (cycle_t)vmi_timer_ops.get_cycle_counter(VMI_CYCLES_REAL);
+	return ret >= clocksource_vmi.cycle_last ?

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: arch/x86/math-emu/fpu_proto.h:54:
+extern void math_emulate(struct math_emu_info *info);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#686: FILE: arch/x86/math-emu/fpu_proto.h:55:
+extern void math_abort(struct math_emu_info *info, unsigned int signal);

CHECK:SPACING: No space is necessary after a cast
#715: FILE: arch/x86/math-emu/fpu_system.h:37:
+#define FPU_CS			(*(unsigned short *) &(FPU_info->regs->cs))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around FPU_info->regs->cs
#715: FILE: arch/x86/math-emu/fpu_system.h:37:
+#define FPU_CS			(*(unsigned short *) &(FPU_info->regs->cs))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#716: FILE: arch/x86/math-emu/fpu_system.h:38:
+#define FPU_SS			(*(unsigned short *) &(FPU_info->regs->ss))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around FPU_info->regs->ss
#716: FILE: arch/x86/math-emu/fpu_system.h:38:
+#define FPU_SS			(*(unsigned short *) &(FPU_info->regs->ss))

CHECK:SPACING: No space is necessary after a cast
#717: FILE: arch/x86/math-emu/fpu_system.h:39:
+#define FPU_DS			(*(unsigned short *) &(FPU_info->regs->ds))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around FPU_info->regs->ds
#717: FILE: arch/x86/math-emu/fpu_system.h:39:
+#define FPU_DS			(*(unsigned short *) &(FPU_info->regs->ds))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#775: FILE: arch/x86/math-emu/get_address.c:55:
+		(reg_offset_vm86[((unsigned)x)] + (u_char *)FPU_info->regs))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#796: FILE: arch/x86/math-emu/get_address.c:68:
+		(reg_offset_pm[((unsigned)x)] + (u_char *)FPU_info->regs))

ERROR:POINTER_LOCATION: "foo __meminit  bar" should be "foo __meminit bar"
#852: FILE: arch/x86/mm/numa_64.c:148:
+int __meminit  __early_pfn_to_nid(unsigned long pfn)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: arch/x86/oprofile/op_model_ppro.c:87:
+		if (!(eax.split.version_id == 0 &&
+			current_cpu_data.x86 == 6 &&

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#874: FILE: arch/x86/oprofile/op_model_ppro.c:89:
+				current_cpu_data.x86_model == 15)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: drivers/atm/fore200e.c:2522:
+    if ((err = request_firmware(&firmware, buf, device)) < 0) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1011: FILE: drivers/atm/fore200e.c:2522:
+    if ((err = request_firmware(&firmware, buf, device)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1012: FILE: drivers/atm/fore200e.c:2523:
+	printk(FORE200E "problem loading firmware image %s\n", fore200e->bus->model_name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1087: FILE: drivers/block/xen-blkfront.c:243:
+	BUG_ON(ring_req->nr_segments > BLKIF_MAX_SEGMENTS_PER_REQUEST);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#1360: FILE: drivers/infiniband/hw/nes/nes_cm.c:2627:
+			nes_debug(NES_DBG_CM, "Unable to register memory region"
+					"for lSMM for cm_node = %p \n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#1360: FILE: drivers/infiniband/hw/nes/nes_cm.c:2627:
+			nes_debug(NES_DBG_CM, "Unable to register memory region"
+					"for lSMM for cm_node = %p \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1360: FILE: drivers/infiniband/hw/nes/nes_cm.c:2627:
+					"for lSMM for cm_node = %p \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1381: FILE: drivers/infiniband/hw/nes/nes_cm.c:2647:
+		set_wqe_64bit_value(wqe->wqe_words,
+					NES_IWARP_SQ_WQE_FRAG0_LOW_IDX,

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1429: FILE: drivers/md/raid1.c:1238:
+		md_done_sync(mddev, s, uptodate);
 		                       ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1545: FILE: drivers/media/dvb/frontends/s5h1409.c:563:
+	/* Issue a reset to the demod so it knows to resync against the
+	   newly tuned frequency */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1545: FILE: drivers/media/dvb/frontends/s5h1409.c:563:
+	   newly tuned frequency */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1602: FILE: drivers/media/video/saa7127.c:152:
+^I{ SAA7127_REG_OUTPUT_PORT_CONTROL, ^I^I0xbf },$

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1614: FILE: drivers/media/video/saa7127.c:485:
+			state->reg_2d = 0x08;	/* 00001000 CVBS only, RGB DAC's off (high impedance mode) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#1753: FILE: drivers/mmc/core/mmc_ops.c:251:
+	if (opcode == MMC_SEND_CSD || opcode == MMC_SEND_CID) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1760: FILE: drivers/mmc/core/mmc_ops.c:258:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1813: FILE: drivers/mmc/host/sdhci.c:1293:
+		 * fall through and take the SDHCI_INT_RESPONSE */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1813: FILE: drivers/mmc/host/sdhci.c:1293:
+		 * fall through and take the SDHCI_INT_RESPONSE */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1823: FILE: drivers/mmc/host/sdhci.c:1725:
+	snprintf(host->led_name, sizeof(host->led_name),
+		"%s::", mmc_hostname(mmc));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1837: FILE: drivers/mmc/host/sdhci.h:214:
+#define SDHCI_QUIRK_NO_BUSY_IRQ				(1<<15)
                                				  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1837: FILE: drivers/mmc/host/sdhci.h:214:
+#define SDHCI_QUIRK_NO_BUSY_IRQ				(1<<15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BRACES: Unbalanced braces around else statement
#1858: FILE: drivers/mtd/devices/mtd_dataflash.c:818:
+			} else

CHECK:SPACING: No space is necessary after a cast
#1874: FILE: drivers/net/usb/asix.c:1456:
+	.driver_info = (unsigned long) &ax88178_info,

CHECK:SPACING: No space is necessary after a cast
#1878: FILE: drivers/net/usb/asix.c:1460:
+	.driver_info = (unsigned long) &ax88772_info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1893: FILE: drivers/net/usb/cdc_ether.c:565:
+	USB_DEVICE_AND_INTERFACE_INFO(0x0bdb, 0x1900, USB_CLASS_COMM,
+			USB_CDC_SUBCLASS_MDLM, USB_CDC_PROTO_NONE),

CHECK:SPACING: No space is necessary after a cast
#1894: FILE: drivers/net/usb/cdc_ether.c:566:
+	.driver_info = (unsigned long) &cdc_info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1909: FILE: drivers/net/usb/zaurus.c:347:
+	USB_DEVICE_AND_INTERFACE_INFO(0x22b8, 0x6425, USB_CLASS_COMM,
+			USB_CDC_SUBCLASS_MDLM, USB_CDC_PROTO_NONE),

CHECK:SPACING: No space is necessary after a cast
#1910: FILE: drivers/net/usb/zaurus.c:348:
+	.driver_info = (unsigned long) &bogus_mdlm_info,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1954: FILE: drivers/pci/pcie/aer/aerdrv_core.c:111:
 
+

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#1971: FILE: drivers/pci/pcie/aer/aerdrv_core.c:128:
+ * set_downstream_devices_error_reporting - enable/disable the error reporting  bits on the root port and its downstream ports.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2059: FILE: drivers/pci/quirks.c:1551:
+static void __devinit quirk_disable_aspm_l0s(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2079: FILE: drivers/pci/quirks.c:1571:
 static void __devinit fixup_rev1_53c810(struct pci_dev* dev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2163: FILE: drivers/serial/8250.c:2018:
+	/* Serial over Lan (SoL) hack:
+	   Intel 8257x Gigabit ethernet chips have a

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2196: FILE: drivers/serial/8250_pci.c:762:
+static int skip_tx_en_setup(struct serial_private *priv,
+			const struct pciserial_board *board,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2200: FILE: drivers/serial/8250_pci.c:766:
+	printk(KERN_DEBUG "serial8250: skipping TxEn test for device "

WARNING:SPLIT_STRING: quoted string split across lines
#2201: FILE: drivers/serial/8250_pci.c:767:
+	printk(KERN_DEBUG "serial8250: skipping TxEn test for device "
+			  "[%04x:%04x] subsystem [%04x:%04x]\n",

CHECK:SPACING: No space is necessary after a cast
#2296: FILE: drivers/usb/core/message.c:699:
+		if (result > 1 && ((u8 *) buf)[1] != USB_DT_STRING) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2394: FILE: drivers/usb/host/ehci-sched.c:2125:
+		struct ehci_iso_stream	*stream = itd->stream;
+		itd->stream = NULL;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2446: FILE: drivers/usb/host/ehci.h:92:
+	unsigned		clock_frame;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2492: FILE: drivers/usb/storage/unusual_devs.h:879:
+		US_FL_GO_SLOW | US_FL_MAX_SECTORS_64 | US_FL_IGNORE_RESIDUE ),

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2499: FILE: drivers/usb/storage/unusual_devs.h:885:
+		US_FL_GO_SLOW | US_FL_MAX_SECTORS_64 | US_FL_IGNORE_RESIDUE ),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2545: FILE: drivers/watchdog/rc32434_wdt.c:48:
+ * the watchdog timer ticks at. */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2546: FILE: drivers/watchdog/rc32434_wdt.c:49:
+extern unsigned int idt_cpu_freq;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2549: FILE: drivers/watchdog/rc32434_wdt.c:52:
+#define WTCOMP2SEC(x)	(x / idt_cpu_freq)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2550: FILE: drivers/watchdog/rc32434_wdt.c:53:
+#define SEC2WTCOMP(x)	(x * idt_cpu_freq)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2554: FILE: drivers/watchdog/rc32434_wdt.c:57:
+ * ((2 ^ 32) - 1) / (400MHz / 2) = 21s.  */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#2565: FILE: drivers/watchdog/rc32434_wdt.c:68:
+#define SET_BITS(addr, or, nand) \
+	writel((readl(&addr) | or) & ~nand, &addr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#2565: FILE: drivers/watchdog/rc32434_wdt.c:68:
+#define SET_BITS(addr, or, nand) \
+	writel((readl(&addr) | or) & ~nand, &addr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'or' may be better as '(or)' to avoid precedence issues
#2565: FILE: drivers/watchdog/rc32434_wdt.c:68:
+#define SET_BITS(addr, or, nand) \
+	writel((readl(&addr) | or) & ~nand, &addr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nand' may be better as '(nand)' to avoid precedence issues
#2565: FILE: drivers/watchdog/rc32434_wdt.c:68:
+#define SET_BITS(addr, or, nand) \
+	writel((readl(&addr) | or) & ~nand, &addr)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2587: FILE: drivers/watchdog/rc32434_wdt.c:79:
+	 * do a warm reset instead */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2627: FILE: drivers/watchdog/rc32434_wdt.c:106:
+		printk(KERN_ERR KBUILD_MODNAME

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2745: FILE: drivers/watchdog/rc32434_wdt.c:220:
+		/* Fall through */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2754: FILE: drivers/watchdog/rc32434_wdt.c:245:
+static char banner[] __devinitdata = KERN_INFO KBUILD_MODNAME

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2758: FILE: drivers/watchdog/rc32434_wdt.c:248:
+static int __devinit rc32434_wdt_probe(struct platform_device *pdev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2798: FILE: drivers/watchdog/rc32434_wdt.c:283:
+static int __devexit rc32434_wdt_remove(struct platform_device *pdev)

CHECK:CAMELCASE: Avoid CamelCase: <serverOS>
#2839: FILE: fs/cifs/sess.c:231:
+	ses->serverOS = kzalloc((4 * len) + 2 /* trailing null */, GFP_KERNEL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <serverNOS>
#2848: FILE: fs/cifs/sess.c:244:
+	ses->serverNOS = kzalloc((4 * len) + 2 /* trailing null */, GFP_KERNEL);

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#2888: FILE: fs/ext4/ialloc.c:708:
+			if (ret2 == 0 && printk_ratelimit())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2889: FILE: fs/ext4/ialloc.c:709:
+				printk(KERN_NOTICE "ext4: find_group_flex "

WARNING:SPLIT_STRING: quoted string split across lines
#2890: FILE: fs/ext4/ialloc.c:710:
+				printk(KERN_NOTICE "ext4: find_group_flex "
+				       "failed, fallback succeeded dir %lu\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2906: FILE: fs/ext4/inode.c:49:
+	return jbd2_journal_begin_ordered_truncate(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2918: FILE: fs/ext4/inode.c:1351:
+	 * started */

CHECK:BRACES: braces {} should be used on all arms of this statement
#2947: FILE: fs/ext4/inode.c:2448:
+	if (wbc->range_cyclic) {
[...]
+		wbc->range_cyclic = 0;
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2955: FILE: fs/ext4/inode.c:2455:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3002: FILE: fs/ext4/inode.c:2611:
+	 * started */

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#3097: FILE: fs/ext4/migrate.c:619:
+	iput(tmp_inode);
 	^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3164: FILE: fs/fs-writeback.c:541:
+			if (inode->i_state & (I_FREEING|I_WILL_FREE|I_NEW))
 			                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3164: FILE: fs/fs-writeback.c:541:
+			if (inode->i_state & (I_FREEING|I_WILL_FREE|I_NEW))
 			                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3192: FILE: fs/inode.c:600:
+	WARN_ON((inode->i_state & (I_LOCK|I_NEW)) != (I_LOCK|I_NEW));
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3192: FILE: fs/inode.c:600:
+	WARN_ON((inode->i_state & (I_LOCK|I_NEW)) != (I_LOCK|I_NEW));
 	                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3268: FILE: fs/jbd2/journal.c:514:
+		 * it's commit has been scheduled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3332: FILE: fs/jbd2/transaction.c:2084:
+	 * a transaction adding the inode to orphan list */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3343: FILE: fs/jbd2/transaction.c:2093:
+		ret = filemap_fdatawrite_range(jinode->i_vfs_inode->i_mapping,
 			new_size, LLONG_MAX);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3430: FILE: fs/ocfs2/journal.h:448:
+	return jbd2_journal_begin_ordered_truncate(

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3453: FILE: fs/pipe.c:706:
+			fasync_helper(-1, filp, 0, &pipe->fasync_readers);
 			                  ^^^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#3467: FILE: fs/proc/page.c:83:
+#define kpf_copy_bit(flags, dstpos, srcpos) (((flags >> srcpos) & 1) << dstpos)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dstpos' may be better as '(dstpos)' to avoid precedence issues
#3467: FILE: fs/proc/page.c:83:
+#define kpf_copy_bit(flags, dstpos, srcpos) (((flags >> srcpos) & 1) << dstpos)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'srcpos' may be better as '(srcpos)' to avoid precedence issues
#3467: FILE: fs/proc/page.c:83:
+#define kpf_copy_bit(flags, dstpos, srcpos) (((flags >> srcpos) & 1) << dstpos)

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#3519: FILE: fs/seq_file.c:154:
+			goto Done;

CHECK:BRACES: Unbalanced braces around else statement
#3531: FILE: fs/seq_file.c:257:
+	else {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3603: FILE: include/drm/i915_drm.h:180:
+#define DRM_IOCTL_I915_GEM_INIT		DRM_IOW(DRM_COMMAND_BASE + DRM_I915_GEM_INIT, struct drm_i915_gem_init)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#3604: FILE: include/drm/i915_drm.h:181:
+#define DRM_IOCTL_I915_GEM_EXECBUFFER	DRM_IOW(DRM_COMMAND_BASE + DRM_I915_GEM_EXECBUFFER, struct drm_i915_gem_execbuffer)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3658: FILE: include/linux/jbd2.h:1090:
+extern int	   jbd2_journal_begin_ordered_truncate(journal_t *journal,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3659: FILE: include/linux/jbd2.h:1091:
+extern int	   jbd2_journal_begin_ordered_truncate(journal_t *journal,
+				struct jbd2_inode *inode, loff_t new_size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3677: FILE: include/linux/mm.h:1033:
+    !defined(CONFIG_HAVE_ARCH_EARLY_PFN_TO_NID)$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3684: FILE: include/linux/mm.h:1040:
+extern int __meminit early_pfn_to_nid(unsigned long pfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3687: FILE: include/linux/mm.h:1043:
+extern int __meminit __early_pfn_to_nid(unsigned long pfn);

CHECK:SPACING: No space is necessary after a cast
#3749: FILE: include/linux/serial_core.h:291:
+#define UPF_NO_TXEN_TEST	((__force upf_t) (1 << 15))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3835: FILE: kernel/fork.c:1216:
+	if (clone_flags & (CLONE_PARENT|CLONE_THREAD)) {
 	                               ^

WARNING:INDENTED_LABEL: labels should not be indented
#3902: FILE: kernel/tsacct.c:138:
+	out:

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3963: FILE: mm/vmalloc.c:326:
+	BUG_ON(!size);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sk"
#4083: FILE: security/selinux/netlabel.c:391:
+	if (sk == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sksec"
#4087: FILE: security/selinux/netlabel.c:394:
+	if (sksec == NULL || sksec->nlbl_state != NLBL_REQUIRE)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4229: FILE: sound/usb/usbaudio.c:2535:
+		fp->rate_min = fp->rate_max = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 54 warnings, 64 checks, 3409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
