WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: arch/x86/kernel/cpu/perf_event.c:207:
+^ILBR_FORMAT_32 ^I^I= 0x00,$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: arch/x86/kernel/cpu/perf_event.c:1267:
+	BUG_ON(cpuc->lbr_users < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: arch/x86/kernel/cpu/perf_event.c:1778:
+	if (cpuc->lbr_users = 1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#239: FILE: arch/x86/kernel/cpu/perf_event.c:2299:
+#define LBR_FROM_FLAG_MISPRED	(1ULL << 63)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TRACE_PRINTK: Do not use trace_printk() in production code (this can be ignored if built only with a debug config option)
#289: FILE: arch/x86/kernel/cpu/perf_event.c:2610:
+	trace_printk("LBR TOS: %Ld\n", intel_pmu_lbr_tos());

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#289: FILE: arch/x86/kernel/cpu/perf_event.c:2610:
+	trace_printk("LBR TOS: %Ld\n", intel_pmu_lbr_tos());

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/x86/kernel/cpu/perf_event.c:3177:
+^I^I^I          X86_DEBUGCTL_FREEZE_LBRS_ON_PMI;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: arch/x86/kernel/cpu/perf_event.c:3192:
+^I^I^I          X86_DEBUGCTL_FREEZE_LBRS_ON_PMI;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: arch/x86/kernel/cpu/perf_event.c:3208:
+^I^I^I             X86_DEBUGCTL_FREEZE_LBRS_ON_PMI;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#468: FILE: arch/x86/include/asm/perf_event.h:127:
+#define X86_DEBUGCTL_LBR		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#469: FILE: arch/x86/include/asm/perf_event.h:128:
+#define X86_DEBUGCTL_FREEZE_LBRS_ON_PMI	(1 << 11)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#484: FILE: arch/x86/include/asm/perf_event.h:143:
+extern void perf_nmi_exit(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: include/linux/perf_event.h:400:
+^I * ^I{ u64^I^I^Inr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#545: FILE: include/linux/perf_event.h:401:
+^I * ^I  struct lbr_format^Ilbr[nr];  } && PERF_SAMPLE_LBR$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010077.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 4 checks, 453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010077.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
