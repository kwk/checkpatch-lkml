WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
>>> (Because a freezer may cause a deadlock by accessing the frozen filesystem.)

WARNING:TYPO_SPELLING: 'fileystem' may be misspelled - perhaps 'filesystem'?
#38: 
>>timer, how do you know that the work for which you needed the fileystem
                                                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#75: 
　  #define FITHAW          _IOWR('X', 120, int)
^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sb->s_op->write_super_lockfs"
#231: FILE: fs/ioctl.c:197:
+		if (sb->s_op->write_super_lockfs == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#237: FILE: fs/ioctl.c:203:
+		error = get_user(timeout_sec, (long __user *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sb->s_op->unlockfs"
#261: FILE: fs/ioctl.c:227:
+		if (sb->s_op->unlockfs == NULL) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#275: FILE: fs/ioctl.c:241:
+		struct super_block *sb
+			= filp->f_path.dentry->d_inode->i_sb;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: No space is necessary after a cast
#283: FILE: fs/ioctl.c:249:
+		error = get_user(timeout_sec, (long __user *) arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: fs/ioctl.c:268:
+				add_freeze_timeout(sb->s_bdev,
+					timeout_msec);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#380: FILE: fs/super.c:1001:
+	BUG_ON(sb == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sb"
#380: FILE: fs/super.c:1001:
+	BUG_ON(sb == NULL);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#452: FILE: include/linux/buffer_head.h:173:
+struct super_block *freeze_bdev(struct block_device *, long timeout_msec);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/linux/fs.h:1938:
+extern void put_super(struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#496: FILE: include/linux/fs.h:1940:
+extern struct super_block *get_super_without_lock(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#496: FILE: include/linux/fs.h:1940:
+extern struct super_block *get_super_without_lock(struct block_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#512: FILE: include/linux/fs.h:2110:
+extern void add_freeze_timeout(struct block_device *bdev, long timeout_msec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#513: FILE: include/linux/fs.h:2111:
+extern void del_freeze_timeout(struct block_device *bdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#514: FILE: include/linux/fs.h:2112:
+extern void freeze_timeout(struct work_struct *work);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315271.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 13 checks, 369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315271.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
