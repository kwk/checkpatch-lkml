CHECK:CAMELCASE: Avoid CamelCase: <xdr_decode_AFSFetchVolumeStatus>
#190: FILE: fs/afs/fsclient.c:207:
+static void xdr_decode_AFSFetchVolumeStatus(const __be32 **_bp,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#242: FILE: fs/afs/fsclient.c:1500:
+		case 0:		break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#256: FILE: fs/afs/fsclient.c:1514:
+		case 0:		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#275: FILE: fs/afs/fsclient.c:1533:
+			case 0:		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#299: FILE: fs/afs/fsclient.c:1557:
+		case 0:		break;

WARNING:INDENTED_LABEL: labels should not be indented
#306: FILE: fs/afs/fsclient.c:1564:
+	no_volname_padding:

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#312: FILE: fs/afs/fsclient.c:1570:
+		case 0:		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#331: FILE: fs/afs/fsclient.c:1589:
+			case 0:		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#355: FILE: fs/afs/fsclient.c:1613:
+		case 0:		break;

WARNING:INDENTED_LABEL: labels should not be indented
#362: FILE: fs/afs/fsclient.c:1620:
+	no_offline_padding:

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#368: FILE: fs/afs/fsclient.c:1626:
+		case 0:		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#387: FILE: fs/afs/fsclient.c:1645:
+			case 0:		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#411: FILE: fs/afs/fsclient.c:1669:
+		case 0:		break;

WARNING:INDENTED_LABEL: labels should not be indented
#418: FILE: fs/afs/fsclient.c:1676:
+	no_motd_padding:

CHECK:CAMELCASE: Avoid CamelCase: <afs_RXFSGetVolumeStatus>
#447: FILE: fs/afs/fsclient.c:1705:
+static const struct afs_call_type afs_RXFSGetVolumeStatus = {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: fs/afs/internal.h:509:
+extern int afs_fs_get_volume_status(struct afs_server *, struct key *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct afs_server *' should also have an identifier name
#501: FILE: fs/afs/internal.h:509:
+extern int afs_fs_get_volume_status(struct afs_server *, struct key *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct key *' should also have an identifier name
#501: FILE: fs/afs/internal.h:509:
+extern int afs_fs_get_volume_status(struct afs_server *, struct key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct afs_vnode *' should also have an identifier name
#501: FILE: fs/afs/internal.h:509:
+extern int afs_fs_get_volume_status(struct afs_server *, struct key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct afs_volume_status *' should also have an identifier name
#501: FILE: fs/afs/internal.h:509:
+extern int afs_fs_get_volume_status(struct afs_server *, struct key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct afs_wait_mode *' should also have an identifier name
#501: FILE: fs/afs/internal.h:509:
+extern int afs_fs_get_volume_status(struct afs_server *, struct key *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#512: FILE: fs/afs/internal.h:680:
+extern int afs_vnode_get_volume_status(struct afs_vnode *, struct key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct afs_vnode *' should also have an identifier name
#512: FILE: fs/afs/internal.h:680:
+extern int afs_vnode_get_volume_status(struct afs_vnode *, struct key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct key *' should also have an identifier name
#512: FILE: fs/afs/internal.h:680:
+extern int afs_vnode_get_volume_status(struct afs_vnode *, struct key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct afs_volume_status *' should also have an identifier name
#512: FILE: fs/afs/internal.h:680:
+extern int afs_vnode_get_volume_status(struct afs_vnode *, struct key *,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#589: FILE: fs/afs/super.c:539:
+	buf->f_bavail = buf->f_bfree = buf->f_blocks - vs.blocks_in_use;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 11 warnings, 5 checks, 559 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000432955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
