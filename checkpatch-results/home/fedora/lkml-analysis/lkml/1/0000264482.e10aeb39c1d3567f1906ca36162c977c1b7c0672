CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#87: FILE: arch/x86/kernel/setup_32.c:207:
+	if (ramdisk_size >= (end_of_lowmem>>1)) {
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#96: FILE: arch/x86/kernel/setup_32.c:230:
+	ramdisk_target = max_pfn_mapped<<PAGE_SHIFT;
 	                               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#97: FILE: arch/x86/kernel/setup_32.c:231:
+	ramdisk_here = find_e820_area(min(ramdisk_target, end_of_lowmem>>1),
 	                                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: arch/x86/kernel/setup_32.c:232:
+	ramdisk_here = find_e820_area(min(ramdisk_target, end_of_lowmem>>1),
 				 end_of_lowmem, ramdisk_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/x86/mm/discontig_32.c:313:
+void __init initmem_init(unsigned long start_pfn,
 				  unsigned long end_pfn)

CHECK:SPACING: No space is necessary after a cast
#194: FILE: arch/x86/mm/discontig_32.c:361:
+	high_memory = (void *) __va(max_low_pfn * PAGE_SIZE - 1) + 1;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#200: FILE: arch/x86/mm/discontig_32.c:365:
+	printk("min_low_pfn = %ld, max_low_pfn = %ld, highstart_pfn = %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/x86/mm/discontig_32.c:366:
+	printk("min_low_pfn = %ld, max_low_pfn = %ld, highstart_pfn = %ld\n",
 			min_low_pfn, max_low_pfn, highstart_pfn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: arch/x86/mm/init_32.c:638:
+void __init initmem_init(unsigned long start_pfn,
 				  unsigned long end_pfn)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: include/asm-x86/page_32.h:100:
+extern void find_low_pfn_range(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/asm-x86/page_32.h:101:
+extern void initmem_init(unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#285: FILE: include/asm-x86/page_32.h:101:
+extern void initmem_init(unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#285: FILE: include/asm-x86/page_32.h:101:
+extern void initmem_init(unsigned long, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264482.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 10 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264482.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
