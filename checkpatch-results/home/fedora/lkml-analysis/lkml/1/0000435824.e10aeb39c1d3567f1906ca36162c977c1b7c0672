WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
      [S390] dasd: New read device characteristics and read configuration data.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#193: FILE: arch/s390/kernel/setup.c:77:
+unsigned long elf_hwcap = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#204: FILE: arch/s390/kernel/setup.c:756:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: arch/s390/kernel/setup.c:759:
+		EX_TABLE(0b,0b));
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#213: FILE: arch/s390/kernel/setup.c:765:
+	typedef struct { unsigned long long _[doublewords]; } addrtype;

CHECK:SPACING: No space is necessary after a cast
#217: FILE: arch/s390/kernel/setup.c:769:
+		     : "=m" (*(addrtype *) list), "+d" (__nr) : : "cc");

WARNING:TYPO_SPELLING: 'facilites' may be misspelled - perhaps 'facilities'?
#258: FILE: arch/s390/kernel/setup.c:810:
+	 * doublewords passed to the instruction. The additional facilites
 	                                                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#408: FILE: drivers/s390/block/dasd.c:2177:
+struct dasd_ccw_req * dasd_generic_build_rdc(struct dasd_device *device,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#429: FILE: drivers/s390/block/dasd.c:2198:
+	cqr->expires = 10*HZ;
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#437: FILE: drivers/s390/block/dasd.c:2206:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: drivers/s390/block/dasd_eckd.c:453:
+struct dasd_ccw_req * dasd_eckd_build_rcd_lpm(struct dasd_device *device,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#485: FILE: drivers/s390/block/dasd_eckd.c:474:
+	cqr->expires = 10*HZ;
 	                 ^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#523: FILE: drivers/s390/block/dasd_eckd.c:512:
+	 * on success we update the user input parms
 	                                       ^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#583: FILE: drivers/s390/block/dasd_int.h:512:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void **, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#583: FILE: drivers/s390/block/dasd_int.h:512:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void **, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#583: FILE: drivers/s390/block/dasd_int.h:512:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void **, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#583: FILE: drivers/s390/block/dasd_int.h:512:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void **, int);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#616: FILE: drivers/s390/char/tape_3590.c:1553:
 
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#682: FILE: drivers/s390/char/tape_3590.h:134:
+} __attribute__ ((packed));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#696: FILE: drivers/s390/char/tape_core.c:76:
+	[TO_KEKL_QUERY] = "KLQ",[TO_RDC] = "RDC",
 	                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1210: FILE: drivers/s390/net/qeth.h:291:
+#define QETH_RCD_TIMEOUT	60 * HZ

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->data.ccwdev == cdev'
#1244: FILE: drivers/s390/net/qeth_main.c:337:
+			if (card && (card->data.ccwdev == cdev)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel == &card->data'
#1266: FILE: drivers/s390/net/qeth_main.c:441:
+	if ((channel == &card->data) && (intparm != 0) &&
+	    (intparm != QETH_RCD_PARM))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intparm != 0'
#1266: FILE: drivers/s390/net/qeth_main.c:441:
+	if ((channel == &card->data) && (intparm != 0) &&
+	    (intparm != QETH_RCD_PARM))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intparm != QETH_RCD_PARM'
#1266: FILE: drivers/s390/net/qeth_main.c:441:
+	if ((channel == &card->data) && (intparm != 0) &&
+	    (intparm != QETH_RCD_PARM))

CHECK:SPACING: No space is necessary after a cast
#1317: FILE: drivers/s390/net/qeth_main.c:1245:
+	channel->ccw.cda = (__u32) __pa (rcd_buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1317: FILE: drivers/s390/net/qeth_main.c:1245:
+	channel->ccw.cda = (__u32) __pa (rcd_buf);

CHECK:SPACING: No space is necessary after a cast
#1353: FILE: drivers/s390/net/qeth_main.c:1281:
+	rc = qeth_read_conf_data(card, (void **) &prcd, &length);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1391: FILE: include/asm-s390/ccwdev.h:167:
+extern int __deprecated read_dev_chars(struct ccw_device *cdev, void **buffer, int length);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1392: FILE: include/asm-s390/ccwdev.h:168:
+extern int __deprecated read_conf_data(struct ccw_device *cdev, void **buffer, int *length);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1393: FILE: include/asm-s390/ccwdev.h:169:
+extern int __deprecated read_conf_data_lpm(struct ccw_device *cdev, void **buffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1394: FILE: include/asm-s390/ccwdev.h:170:
+extern int __deprecated read_conf_data_lpm(struct ccw_device *cdev, void **buffer,
 			      int *length, __u8 lpm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1442: FILE: include/asm-s390/kdebug.h:35:
+}
+static inline int unregister_page_fault_notifier(struct notifier_block *nb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: include/asm-s390/kprobes.h:102:
+int kprobe_exceptions_notify(struct notifier_block *self,
+	unsigned long val, void *data);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1494: FILE: include/asm-s390/lowcore.h:232:
+	__u8	     pad3[0xc8-0xc4];	       /* 0x0c4 */
 	    	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1496: FILE: include/asm-s390/lowcore.h:234:
+	__u8	     pad4[0xd4-0xcc];	       /* 0x0cc */
 	    	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1502: FILE: include/asm-s390/lowcore.h:239:
+	__u8	     pad5[0xf4-0xf0];	       /* 0x0f0 */
 	    	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1506: FILE: include/asm-s390/lowcore.h:242:
+	__u8	     pad6[0x100-0xfc];	       /* 0x0fc */
 	    	               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1509: FILE: include/asm-s390/lowcore.h:244:
+	__u8	     pad7[0x120-0x110];        /* 0x110 */
 	    	               ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000435824.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 10 warnings, 23 checks, 1254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000435824.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
