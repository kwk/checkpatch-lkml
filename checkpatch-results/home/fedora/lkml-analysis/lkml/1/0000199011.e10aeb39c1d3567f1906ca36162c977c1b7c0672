WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: net/decnet/af_decnet.c:198:
+	while(check_port(cpu_to_le16(++port)) != 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: net/decnet/af_decnet.c:258:
+		for(i = 0; i < le16_to_cpu(addr->sdn_objnamel); i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 0'
#187: FILE: net/decnet/af_decnet.c:367:
+	if ((len < 0) || (le16_to_cpu(sdn->sdn_objnamel) > namel))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#200: FILE: net/decnet/af_decnet.c:394:
+			if (memcmp(scp->addr.sdn_objname, addr->sdn_objname, le16_to_cpu(addr->sdn_objnamel)) != 0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#242: FILE: net/decnet/af_decnet.c:803:
+		memcpy(scp->addr.sdn_objname, scp->accessdata.acc_acc, le16_to_cpu(scp->addr.sdn_objnamel));

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#332: FILE: net/decnet/dn_dev.c:898:
+	msg->timer   = cpu_to_le16((unsigned short)dn_db->parms.t3);
 	                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#362: FILE: net/decnet/dn_dev.c:980:
+	*((__le16 *)ptr) = cpu_to_le16((unsigned short)dn_db->parms.t3);
 	                                                      ^^^^^

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#381: FILE: net/decnet/dn_dev.c:1404:
+				dn_db->router ? dn_addr2asc(le16_to_cpu(*(__le16 *)dn_db->router->primary_key), router_buf) : "",

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#382: FILE: net/decnet/dn_dev.c:1405:
+				dn_db->peer ? dn_addr2asc(le16_to_cpu(*(__le16 *)dn_db->peer->primary_key), peer_buf) : "");

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#447: FILE: net/decnet/dn_neigh.c:413:
+		if ((le16_to_cpu(src)>>10) == (le16_to_cpu((decnet_address))>>10)) {
 		                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#447: FILE: net/decnet/dn_neigh.c:413:
+		if ((le16_to_cpu(src)>>10) == (le16_to_cpu((decnet_address))>>10)) {
 		                                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#478: FILE: net/decnet/dn_nsp_in.c:86:
+		printk(KERN_INFO "DECnet: Martian packet (%s) dev=%s src=0x%04hx dst=0x%04hx srcport=0x%04hx dstport=0x%04hx\n",

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#478: FILE: net/decnet/dn_nsp_in.c:86:
+		printk(KERN_INFO "DECnet: Martian packet (%s) dev=%s src=0x%04hx dst=0x%04hx srcport=0x%04hx dstport=0x%04hx\n",
+		       msg, devname, le16_to_cpu(cb->src), le16_to_cpu(cb->dst),
+		       le16_to_cpu(cb->src_port), le16_to_cpu(cb->dst_port));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#478: FILE: net/decnet/dn_nsp_in.c:86:
+		printk(KERN_INFO "DECnet: Martian packet (%s) dev=%s src=0x%04hx dst=0x%04hx srcport=0x%04hx dstport=0x%04hx\n",
+		       msg, devname, le16_to_cpu(cb->src), le16_to_cpu(cb->dst),
+		       le16_to_cpu(cb->src_port), le16_to_cpu(cb->dst_port));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#478: FILE: net/decnet/dn_nsp_in.c:86:
+		printk(KERN_INFO "DECnet: Martian packet (%s) dev=%s src=0x%04hx dst=0x%04hx srcport=0x%04hx dstport=0x%04hx\n",
+		       msg, devname, le16_to_cpu(cb->src), le16_to_cpu(cb->dst),
+		       le16_to_cpu(cb->src_port), le16_to_cpu(cb->dst_port));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#478: FILE: net/decnet/dn_nsp_in.c:86:
+		printk(KERN_INFO "DECnet: Martian packet (%s) dev=%s src=0x%04hx dst=0x%04hx srcport=0x%04hx dstport=0x%04hx\n",
+		       msg, devname, le16_to_cpu(cb->src), le16_to_cpu(cb->dst),
+		       le16_to_cpu(cb->src_port), le16_to_cpu(cb->dst_port));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#489: FILE: net/decnet/dn_nsp_in.c:138:
+	if ((ack = le16_to_cpu(*ptr)) & 0x8000) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#498: FILE: net/decnet/dn_nsp_in.c:152:
+	if ((ack = le16_to_cpu(*ptr)) & 0x8000) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#573: FILE: net/decnet/dn_nsp_in.c:625:
+	cb->segnum = segnum = le16_to_cpu(*(__le16 *)skb->data);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#582: FILE: net/decnet/dn_nsp_in.c:653:
+	cb->segnum = segnum = le16_to_cpu(*(__le16 *)skb->data);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#633: FILE: net/decnet/dn_nsp_out.c:562:
+			printk(KERN_DEBUG "DECnet: dn_nsp_do_disc: BUG! Please report this to SteveW@ACM.org rem=%u dst=%p\n", le16_to_cpu(rem), dst);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#633: FILE: net/decnet/dn_nsp_out.c:562:
+			printk(KERN_DEBUG "DECnet: dn_nsp_do_disc: BUG! Please report this to SteveW@ACM.org rem=%u dst=%p\n", le16_to_cpu(rem), dst);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dn_nsp_do_disc', this function's name, in a string
#633: FILE: net/decnet/dn_nsp_out.c:562:
+			printk(KERN_DEBUG "DECnet: dn_nsp_do_disc: BUG! Please report this to SteveW@ACM.org rem=%u dst=%p\n", le16_to_cpu(rem), dst);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#723: FILE: net/decnet/dn_route.c:889:
+		       " iif=%d oif=%d\n", le16_to_cpu(oldflp->fld_dst),
 		         ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#723: FILE: net/decnet/dn_route.c:889:
 		       "dn_route_output_slow: dst=%04x src=%04x mark=%d"
+		       " iif=%d oif=%d\n", le16_to_cpu(oldflp->fld_dst),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#757: FILE: net/decnet/dn_table.c:88:
+	u16 h = le16_to_cpu(key.datum)>>(16 - dz->dz_order);
 	                              ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 17 warnings, 6 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
