WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#62: FILE: drivers/block/cciss.c:3394:
+static __devinit int cciss_message(struct pci_dev *pdev, unsigned char opcode, unsigned char type)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#64: FILE: drivers/block/cciss.c:3396:
+	typedef struct {

CHECK:CAMELCASE: Avoid CamelCase: <CommandListHeader_struct>
#65: FILE: drivers/block/cciss.c:3397:
+		CommandListHeader_struct CommandHeader;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CommandHeader>
#65: FILE: drivers/block/cciss.c:3397:
+		CommandListHeader_struct CommandHeader;

CHECK:CAMELCASE: Avoid CamelCase: <RequestBlock_struct>
#66: FILE: drivers/block/cciss.c:3398:
+		RequestBlock_struct Request;

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#66: FILE: drivers/block/cciss.c:3398:
+		RequestBlock_struct Request;

CHECK:CAMELCASE: Avoid CamelCase: <ErrDescriptor_struct>
#67: FILE: drivers/block/cciss.c:3399:
+		ErrDescriptor_struct ErrorDescriptor;

CHECK:CAMELCASE: Avoid CamelCase: <ErrorDescriptor>
#67: FILE: drivers/block/cciss.c:3399:
+		ErrDescriptor_struct ErrorDescriptor;

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#68: FILE: drivers/block/cciss.c:3400:
+	} Command;

CHECK:CAMELCASE: Avoid CamelCase: <ErrorInfo_struct>
#69: FILE: drivers/block/cciss.c:3401:
+	static const size_t cmd_sz = sizeof(Command) + sizeof(ErrorInfo_struct);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#72: FILE: drivers/block/cciss.c:3404:
+	uint32_t paddr32, tag;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vaddr"
#77: FILE: drivers/block/cciss.c:3409:
+	if (vaddr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#81: FILE: drivers/block/cciss.c:3413:
+	/* The Inbound Post Queue only accepts 32-bit physical addresses for the
+	   CCISS commands, so they must be allocated from the lower 4GiB of

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#82: FILE: drivers/block/cciss.c:3414:
+	   memory. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#90: FILE: drivers/block/cciss.c:3422:
+	if (cmd == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: drivers/block/cciss.c:3428:
+	/* This must fit, because of the 32-bit consistent DMA mask.  Also,
+	   although there's no guarantee, we assume that the address is at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#97: FILE: drivers/block/cciss.c:3429:
+	   least 4-byte aligned (most likely, it's page-aligned). */

CHECK:CAMELCASE: Avoid CamelCase: <ReplyQueue>
#100: FILE: drivers/block/cciss.c:3432:
+	cmd->CommandHeader.ReplyQueue = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#101: FILE: drivers/block/cciss.c:3433:
+	cmd->CommandHeader.SGList = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SGTotal>
#102: FILE: drivers/block/cciss.c:3434:
+	cmd->CommandHeader.SGTotal = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#103: FILE: drivers/block/cciss.c:3435:
+	cmd->CommandHeader.Tag.lower = paddr32;

CHECK:CAMELCASE: Avoid CamelCase: <LunAddrBytes>
#105: FILE: drivers/block/cciss.c:3437:
+	memset(&cmd->CommandHeader.LUN.LunAddrBytes, 0, 8);

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#107: FILE: drivers/block/cciss.c:3439:
+	cmd->Request.CDBLen = 16;

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#108: FILE: drivers/block/cciss.c:3440:
+	cmd->Request.Type.Type = TYPE_MSG;

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#109: FILE: drivers/block/cciss.c:3441:
+	cmd->Request.Type.Attribute = ATTR_HEADOFQUEUE;

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#110: FILE: drivers/block/cciss.c:3442:
+	cmd->Request.Type.Direction = XFER_NONE;

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#111: FILE: drivers/block/cciss.c:3443:
+	cmd->Request.Timeout = 0; /* Don't time out */

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#116: FILE: drivers/block/cciss.c:3448:
+	cmd->ErrorDescriptor.Addr.lower = paddr32 + sizeof(Command);

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#118: FILE: drivers/block/cciss.c:3450:
+	cmd->ErrorDescriptor.Len = sizeof(ErrorInfo_struct);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: drivers/block/cciss.c:3464:
+	/* we leak the DMA buffer here ... no choice since the controller could
+	   still complete the command. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#132: FILE: drivers/block/cciss.c:3464:
+	   still complete the command. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#134: FILE: drivers/block/cciss.c:3466:
+		printk(KERN_ERR "cciss: controller message %02x:%02x timed out\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/block/cciss.c:3467:
+		printk(KERN_ERR "cciss: controller message %02x:%02x timed out\n",
+			opcode, type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#142: FILE: drivers/block/cciss.c:3474:
+		printk(KERN_ERR "cciss: controller message %02x:%02x failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/block/cciss.c:3475:
+		printk(KERN_ERR "cciss: controller message %02x:%02x failed\n",
+			opcode, type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#147: FILE: drivers/block/cciss.c:3479:
+	printk(KERN_INFO "cciss: controller message %02x:%02x succeeded\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/block/cciss.c:3480:
+	printk(KERN_INFO "cciss: controller message %02x:%02x succeeded\n",
+		opcode, type);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#155: FILE: drivers/block/cciss.c:3487:
+static __devinit int cciss_reset_msi(struct pci_dev *pdev)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#158: FILE: drivers/block/cciss.c:3490:
+#define msi_control_reg(base)		(base + PCI_MSI_FLAGS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#159: FILE: drivers/block/cciss.c:3491:
+#define PCI_MSIX_FLAGS_ENABLE		(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#168: FILE: drivers/block/cciss.c:3500:
+			printk(KERN_INFO "cciss: resetting MSI\n");

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#169: FILE: drivers/block/cciss.c:3501:
+			pci_write_config_word(pdev, msi_control_reg(pos), control & ~PCI_MSI_FLAGS_ENABLE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#177: FILE: drivers/block/cciss.c:3509:
+			printk(KERN_INFO "cciss: resetting MSI-X\n");

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#178: FILE: drivers/block/cciss.c:3510:
+			pci_write_config_word(pdev, msi_control_reg(pos), control & ~PCI_MSIX_FLAGS_ENABLE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#186: FILE: drivers/block/cciss.c:3518:
+ * states. */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#187: FILE: drivers/block/cciss.c:3519:
+static __devinit int cciss_hard_reset_controller(struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#192: FILE: drivers/block/cciss.c:3524:
+	printk(KERN_INFO "cciss: using PCI PM to reset controller\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#195: FILE: drivers/block/cciss.c:3527:
+	/* This is very nearly the same thing as
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#207: FILE: drivers/block/cciss.c:3539:
+	   comment below).  So we roll our own .... */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#210: FILE: drivers/block/cciss.c:3542:
+		pci_read_config_word(pdev, 2*i, &saved_config_space[i]);
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#214: FILE: drivers/block/cciss.c:3546:
+		printk(KERN_ERR "cciss_reset_controller: PCI PM not supported\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: drivers/block/cciss.c:3556:
+	 * controller." */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#248: FILE: drivers/block/cciss.c:3580:
+	 * 16-bits at offset 06h."  Note that the offset is 2*i. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#252: FILE: drivers/block/cciss.c:3584:
+		pci_write_config_word(pdev, 2*i, saved_config_space[i]);
 		                             ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#254: FILE: drivers/block/cciss.c:3586:
+	wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#273: FILE: drivers/block/cciss.c:3612:
+		/* Some devices (notably the HP Smart Array 5i Controller)
+		   need a little pause here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#273: FILE: drivers/block/cciss.c:3612:
+		   need a little pause here */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#274: FILE: drivers/block/cciss.c:3613:
+		schedule_timeout_uninterruptible(30*HZ);
 		                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#277: FILE: drivers/block/cciss.c:3616:
+		for (i=0; i<12; i++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#277: FILE: drivers/block/cciss.c:3616:
+		for (i=0; i<12; i++) {
 		           ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#280: FILE: drivers/block/cciss.c:3619:
+				break;
+			else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: drivers/block/cciss.c:3620:
+				printk("cciss: no-op failed%s\n", (i < 11 ? "; re-trying" : ""));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170236.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 29 warnings, 31 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170236.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
