WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
According to Dave Hansen's comments on the tpm_show_*, some of these functions

CHECK:SPACING: No space is necessary after a cast
#109: FILE: drivers/char/tpm/tpm.c:456:
+	len = tpm_transmit(chip,(u8 *) cmd, len);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/char/tpm/tpm.c:456:
+	len = tpm_transmit(chip,(u8 *) cmd, len);
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: drivers/char/tpm/tpm.c:516:
+	rc = transmit_cmd(chip, &tpm_cmd, TPM_INTERNAL_RESULT_SIZE,
 			"attempting to determine the timeouts");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/char/tpm/tpm.c:533:
+	rc = transmit_cmd(chip, &tpm_cmd, TPM_INTERNAL_RESULT_SIZE,
 			"attempting to determine the timeouts");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/char/tpm/tpm.c:563:
+	rc = transmit_cmd(chip, &tpm_cmd, TPM_INTERNAL_RESULT_SIZE,
 			"attempting to determine the durations");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/char/tpm/tpm.c:606:
+	rc = tpm_getcap(dev, TPM_CAP_FLAG_PERM, &cap,
+			 "attempting to determine the permanent enabled state");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: drivers/char/tpm/tpm.c:622:
+	rc = tpm_getcap(dev, TPM_CAP_FLAG_PERM, &cap,
+			 "attempting to determine the permanent active state");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: drivers/char/tpm/tpm.c:638:
+	rc = tpm_getcap(dev, TPM_CAP_PROP_OWNER, &cap,
+			 "attempting to determine the owner state");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/char/tpm/tpm.c:654:
+	rc = tpm_getcap(dev, TPM_CAP_FLAG_VOL, &cap,
+			 "attempting to determine the temporary state");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/char/tpm/tpm.c:731:
+	err = transmit_cmd(chip, &tpm_cmd, READ_PUBEK_RESULT_SIZE,
 			"attempting to read the PUBEK");

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: drivers/char/tpm/tpm.c:785:
+^I^I        "attempting to determine the 1.1 version");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/char/tpm/tpm.c:785:
+	rc = tpm_getcap(dev, CAP_VERSION_1_1, &cap,
+		        "attempting to determine the 1.1 version");

CHECK:CAMELCASE: Avoid CamelCase: <Major>
#600: FILE: drivers/char/tpm/tpm.c:790:
+		       cap.tpm_version.Major, cap.tpm_version.Minor,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Minor>
#600: FILE: drivers/char/tpm/tpm.c:790:
+		       cap.tpm_version.Major, cap.tpm_version.Minor,

CHECK:CAMELCASE: Avoid CamelCase: <revMajor>
#601: FILE: drivers/char/tpm/tpm.c:791:
+		       cap.tpm_version.revMajor, cap.tpm_version.revMinor);

CHECK:CAMELCASE: Avoid CamelCase: <revMinor>
#601: FILE: drivers/char/tpm/tpm.c:791:
+		       cap.tpm_version.revMajor, cap.tpm_version.revMinor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: drivers/char/tpm/tpm.c:810:
+	rc = tpm_getcap(dev, CAP_VERSION_1_2, &cap,
+			 "attempting to determine the 1.2 version");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#678: FILE: drivers/char/tpm/tpm.h:126:
 }
+struct tpm_input_header {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that close brace '}'
#682: FILE: drivers/char/tpm/tpm.h:130:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#682: FILE: drivers/char/tpm/tpm.h:130:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#688: FILE: drivers/char/tpm/tpm.h:136:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#688: FILE: drivers/char/tpm/tpm.h:136:
+}__attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <disableForceClear>
#693: FILE: drivers/char/tpm/tpm.h:141:
+	u8	disableForceClear;

CHECK:CAMELCASE: Avoid CamelCase: <physicalPresence>
#694: FILE: drivers/char/tpm/tpm.h:142:
+	u8	physicalPresence;

CHECK:CAMELCASE: Avoid CamelCase: <physicalPresenceLock>
#695: FILE: drivers/char/tpm/tpm.h:143:
+	u8	physicalPresenceLock;

CHECK:CAMELCASE: Avoid CamelCase: <bGlobalLock>
#696: FILE: drivers/char/tpm/tpm.h:144:
+	u8	bGlobalLock;

ERROR:SPACING: space required after that close brace '}'
#697: FILE: drivers/char/tpm/tpm.h:145:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#697: FILE: drivers/char/tpm/tpm.h:145:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#704: FILE: drivers/char/tpm/tpm.h:152:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#704: FILE: drivers/char/tpm/tpm.h:152:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#712: FILE: drivers/char/tpm/tpm.h:160:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#712: FILE: drivers/char/tpm/tpm.h:160:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#719: FILE: drivers/char/tpm/tpm.h:167:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#719: FILE: drivers/char/tpm/tpm.h:167:
+}__attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <readPubek>
#726: FILE: drivers/char/tpm/tpm.h:174:
+	u8	readPubek;

CHECK:CAMELCASE: Avoid CamelCase: <disableOwnerClear>
#727: FILE: drivers/char/tpm/tpm.h:175:
+	u8	disableOwnerClear;

CHECK:CAMELCASE: Avoid CamelCase: <allowMaintenance>
#728: FILE: drivers/char/tpm/tpm.h:176:
+	u8	allowMaintenance;

CHECK:CAMELCASE: Avoid CamelCase: <physicalPresenceLifetimeLock>
#729: FILE: drivers/char/tpm/tpm.h:177:
+	u8	physicalPresenceLifetimeLock;

CHECK:CAMELCASE: Avoid CamelCase: <physicalPresenceHWEnable>
#730: FILE: drivers/char/tpm/tpm.h:178:
+	u8	physicalPresenceHWEnable;

CHECK:CAMELCASE: Avoid CamelCase: <physicalPresenceCMDEnable>
#731: FILE: drivers/char/tpm/tpm.h:179:
+	u8	physicalPresenceCMDEnable;

CHECK:CAMELCASE: Avoid CamelCase: <CEKPUsed>
#732: FILE: drivers/char/tpm/tpm.h:180:
+	u8	CEKPUsed;

CHECK:CAMELCASE: Avoid CamelCase: <TPMpost>
#733: FILE: drivers/char/tpm/tpm.h:181:
+	u8	TPMpost;

CHECK:CAMELCASE: Avoid CamelCase: <TPMpostLock>
#734: FILE: drivers/char/tpm/tpm.h:182:
+	u8	TPMpostLock;

CHECK:CAMELCASE: Avoid CamelCase: <enableRevokeEK>
#737: FILE: drivers/char/tpm/tpm.h:185:
+	u8	enableRevokeEK;

CHECK:CAMELCASE: Avoid CamelCase: <nvLocked>
#738: FILE: drivers/char/tpm/tpm.h:186:
+	u8	nvLocked;

CHECK:CAMELCASE: Avoid CamelCase: <readSRKPub>
#739: FILE: drivers/char/tpm/tpm.h:187:
+	u8	readSRKPub;

CHECK:CAMELCASE: Avoid CamelCase: <tpmEstablished>
#740: FILE: drivers/char/tpm/tpm.h:188:
+	u8	tpmEstablished;

CHECK:CAMELCASE: Avoid CamelCase: <maintenanceDone>
#741: FILE: drivers/char/tpm/tpm.h:189:
+	u8	maintenanceDone;

CHECK:CAMELCASE: Avoid CamelCase: <disableFullDALogicInfo>
#742: FILE: drivers/char/tpm/tpm.h:190:
+	u8	disableFullDALogicInfo;

ERROR:SPACING: space required after that close brace '}'
#743: FILE: drivers/char/tpm/tpm.h:191:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#743: FILE: drivers/char/tpm/tpm.h:191:
+}__attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#745: FILE: drivers/char/tpm/tpm.h:193:
+typedef union {

ERROR:SPACING: space required after that close brace '}'
#760: FILE: drivers/char/tpm/tpm.h:208:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#760: FILE: drivers/char/tpm/tpm.h:208:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#765: FILE: drivers/char/tpm/tpm.h:213:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#765: FILE: drivers/char/tpm/tpm.h:213:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#775: FILE: drivers/char/tpm/tpm.h:223:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#775: FILE: drivers/char/tpm/tpm.h:223:
+}__attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#777: FILE: drivers/char/tpm/tpm.h:225:
+typedef union {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#782: FILE: drivers/char/tpm/tpm.h:230:
+typedef union {

ERROR:SPACING: space required after that close brace '}'
#792: FILE: drivers/char/tpm/tpm.h:240:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#792: FILE: drivers/char/tpm/tpm.h:240:
+}__attribute__((packed));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#794: FILE: drivers/char/tpm/tpm.h:242:
+ssize_t	tpm_getcap(struct device *, __be32, cap_t *, const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__be32' should also have an identifier name
#794: FILE: drivers/char/tpm/tpm.h:242:
+ssize_t	tpm_getcap(struct device *, __be32, cap_t *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cap_t *' should also have an identifier name
#794: FILE: drivers/char/tpm/tpm.h:242:
+ssize_t	tpm_getcap(struct device *, __be32, cap_t *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#794: FILE: drivers/char/tpm/tpm.h:242:
+ssize_t	tpm_getcap(struct device *, __be32, cap_t *, const char *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 19 warnings, 35 checks, 740 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
