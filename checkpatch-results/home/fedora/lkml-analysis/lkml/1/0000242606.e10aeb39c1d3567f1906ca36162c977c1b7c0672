WARNING:TYPO_SPELLING: 'accrording' may be misspelled - perhaps 'according'?
#64: 
v2: accrording to Eric, change get_irq_desc() to irq_desc()
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: arch/alpha/kernel/irq_alpha.c:244:
+	struct irq_desc *desc = irq_desc(RTC_IRQ);
+	desc->status = IRQ_DISABLED;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#298: FILE: arch/alpha/kernel/irq_i8259.c:82:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: arch/alpha/kernel/irq_i8259.c:111:
+		struct irq_desc *desc;
+		desc = irq_desc(i);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#324: FILE: arch/alpha/kernel/irq_pyxis.c:53:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#353: FILE: arch/alpha/kernel/irq_srm.c:46:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#382: FILE: arch/alpha/kernel/sys_alcor.c:88:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#414: FILE: arch/alpha/kernel/sys_cabriolet.c:70:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#440: FILE: arch/alpha/kernel/sys_dp264.c:128:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#449: FILE: arch/alpha/kernel/sys_dp264.c:160:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#460: FILE: arch/alpha/kernel/sys_dp264.c:302:
+		struct irq_desc *desc = irq_desc(i);
+		desc->status = IRQ_DISABLED | IRQ_LEVEL;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#474: FILE: arch/alpha/kernel/sys_eb64p.c:68:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#500: FILE: arch/alpha/kernel/sys_eiger.c:79:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#511: FILE: arch/alpha/kernel/sys_eiger.c:157:
+		struct irq_desc *desc = irq_desc(i);
+		desc->status = IRQ_DISABLED | IRQ_LEVEL;

CHECK:BRACES: Unbalanced braces around else statement
#525: FILE: arch/alpha/kernel/sys_jensen.c:71:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#545: FILE: arch/alpha/kernel/sys_jensen.c:164:
+	if (irq_desc(irq)->action == NULL) {
[...]
 	    if (vector >= 0x900)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!action"
#545: FILE: arch/alpha/kernel/sys_jensen.c:164:
+	if (irq_desc(irq)->action == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#575: FILE: arch/alpha/kernel/sys_marvel.c:155:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#627: FILE: arch/alpha/kernel/sys_mikasa.c:67:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: arch/alpha/kernel/sys_noritake.c:72:
+        if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: arch/alpha/kernel/sys_noritake.c:72:
+        if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#653: FILE: arch/alpha/kernel/sys_noritake.c:72:
+        if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#679: FILE: arch/alpha/kernel/sys_rawhide.c:134:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#705: FILE: arch/alpha/kernel/sys_rx164.c:71:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#731: FILE: arch/alpha/kernel/sys_sable.c:487:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#757: FILE: arch/alpha/kernel/sys_takara.c:73:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#783: FILE: arch/alpha/kernel/sys_titan.c:142:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#813: FILE: arch/alpha/kernel/sys_wildfire.c:156:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#826: FILE: arch/alpha/kernel/sys_wildfire.c:202:
+		desc = irq_desc(i+irq_bias);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#833: FILE: arch/alpha/kernel/sys_wildfire.c:207:
+	irq_desc(36+irq_bias)->status = IRQ_DISABLED | IRQ_LEVEL;
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#834: FILE: arch/alpha/kernel/sys_wildfire.c:208:
+	irq_desc(36+irq_bias)->chip = &wildfire_irq_type;
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#838: FILE: arch/alpha/kernel/sys_wildfire.c:210:
+		struct irq_desc *desc = irq_desc(i+irq_bias);
 		                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#839: FILE: arch/alpha/kernel/sys_wildfire.c:211:
+		struct irq_desc *desc = irq_desc(i+irq_bias);
+		desc->status = IRQ_DISABLED | IRQ_LEVEL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1038: FILE: arch/arm/mach-sa1100/h3600.c:826:
+		struct irq_desc *desc = irq_desc(irq);
+		desc->valid    = 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1048: FILE: arch/arm/mach-sa1100/h3600.c:834:
+		struct irq_desc *desc = irq_desc(irq);
+		desc->valid    = 1;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1070: FILE: arch/arm/plat-mxc/gpio.c:114:
+		BUG_ON(!(desc->handle_irq));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#1974: FILE: arch/m32r/platforms/m32700ut/setup.c:435:
+	lcdpld_icu_data[irq2lcdpldirq(M32700UT_LCD_IRQ_USB_INT1)].icucr = PLD_ICUCR_IEN|PLD_ICUCR_ISMOD01;	/* "L" level sense */

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1974: FILE: arch/m32r/platforms/m32700ut/setup.c:435:
+	lcdpld_icu_data[irq2lcdpldirq(M32700UT_LCD_IRQ_USB_INT1)].icucr = PLD_ICUCR_IEN|PLD_ICUCR_ISMOD01;	/* "L" level sense */
 	                                                                               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2013: FILE: arch/m32r/platforms/mappi/setup.c:81:
+	unsigned irq;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2256: FILE: arch/m32r/platforms/mappi2/setup.c:166:
+	irq_desc PLD_IRQ_CFIREQ;
+	desc = irq_desc(irq);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2742: FILE: arch/m32r/platforms/opsput/setup.c:439:
+	icr_data[M32R_IRQ_INT1].icucr = M32R_ICUCR_IEN|M32R_ICUCR_ISMOD11;
 	                                              ^

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#2760: FILE: arch/m32r/platforms/opsput/setup.c:451:
+	lcdpld_icu_data[irq2lcdpldirq(OPSPUT_LCD_IRQ_USB_INT1)].icucr = PLD_ICUCR_IEN|PLD_ICUCR_ISMOD01;	/* "L" level sense */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2760: FILE: arch/m32r/platforms/opsput/setup.c:451:
+	lcdpld_icu_data[irq2lcdpldirq(OPSPUT_LCD_IRQ_USB_INT1)].icucr = PLD_ICUCR_IEN|PLD_ICUCR_ISMOD01;	/* "L" level sense */
 	                                                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3032: FILE: arch/mips/kernel/irq-msc01.c:82:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3124: FILE: arch/mips/sgi-ip32/ip32-irq.c:230:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3142: FILE: arch/mips/sgi-ip32/ip32-irq.c:379:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3155: FILE: arch/mips/sibyte/bcm1480/irq.c:252:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED | IRQ_INPROGRESS))) {
 		bcm1480_unmask_irq(bcm1480_irq_owner[irq], irq);
 	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3168: FILE: arch/mips/sibyte/sb1250/irq.c:222:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED | IRQ_INPROGRESS))) {
 		sb1250_unmask_irq(sb1250_irq_owner[irq], irq);
 	}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3194: FILE: arch/mips/sni/pcimt.c:212:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3207: FILE: arch/mips/sni/pcit.c:174:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3220: FILE: arch/mips/sni/rm200.c:446:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3472: FILE: arch/powerpc/sysdev/cpm2_pic.c:122:
+	if (!(desc->status & (IRQ_DISABLED|IRQ_INPROGRESS))
 	                                  ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3473: FILE: arch/powerpc/sysdev/cpm2_pic.c:123:
+	if (!(desc->status & (IRQ_DISABLED|IRQ_INPROGRESS))
+			&& desc->action) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3574: FILE: arch/sh/boards/cayman/irq.c:99:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#3596: FILE: arch/sh/boards/dreamcast/irq.c:89:
+        if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3596: FILE: arch/sh/boards/dreamcast/irq.c:89:
+        if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3596: FILE: arch/sh/boards/dreamcast/irq.c:89:
+        if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3622: FILE: arch/sh/boards/renesas/systemh/irq.c:92:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3643: FILE: arch/sh/boards/se/7206/irq.c:93:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3665: FILE: arch/sh/boards/superh/microdev/irq.c:148:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3678: FILE: arch/sh/cchips/hd6446x/hd64461.c:51:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3700: FILE: arch/sh/cchips/hd6446x/hd64465/setup.c:53:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3722: FILE: arch/sh/kernel/cpu/irq/imask.c:99:
+	if (!(irq_desc(irq)->status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                           ^

CHECK:BRACES: Unbalanced braces around else statement
#4052: FILE: arch/x86/kernel/io_apic_32.c:2068:
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#4271: FILE: arch/x86/kernel/io_apic_64.c:1899:
+			else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4931: FILE: drivers/xen/events.c:144:
+		struct irq_desc *desc = irq_desc(i);
+		desc->affinity = cpumask_of_cpu(0);

CHECK:CAMELCASE: Avoid CamelCase: <irq_descX>
#4945: FILE: include/asm-ia64/hw_irq.h:149:
+extern irq_desc_t irq_descX[NR_IRQS];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#4956: FILE: include/asm-mips/irq.h:67:
 do {									\
+    if (!cpu_isset(smp_processor_id(), irq_desc(irq)->affinity)) {	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4958: FILE: include/asm-mips/irq.h:68:
+    if (!cpu_isset(smp_processor_id(), irq_desc(irq)->affinity)) {^I\$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4998: FILE: include/linux/irq.h:188:
+extern struct irq_desc *irq_desc(unsigned int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5275: FILE: kernel/irq/handle.c:73:
 
+

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#5290: FILE: kernel/irq/handle.c:88:
+		nr_irq_desc = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5307: FILE: kernel/irq/handle.c:106:
+		desc[i-1].next = &desc[i];
 		      ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#5315: FILE: kernel/irq/handle.c:112:
+extern int after_bootmem;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#5316: FILE: kernel/irq/handle.c:113:
+extern void *__alloc_bootmem_nopanic(unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5317: FILE: kernel/irq/handle.c:114:
+extern void *__alloc_bootmem_nopanic(unsigned long size,
+			     unsigned long align,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5325: FILE: kernel/irq/handle.c:122:
+	BUG_ON(irq == -1U);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5327: FILE: kernel/irq/handle.c:124:
+	desc_pri = desc = &irq_descX[0];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5344: FILE: kernel/irq/handle.c:141:
+	printk(KERN_DEBUG "try to get more irq_desc %d\n", nr_irq_desc);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'irq_desc', this function's name, in a string
#5344: FILE: kernel/irq/handle.c:141:
+	printk(KERN_DEBUG "try to get more irq_desc %d\n", nr_irq_desc);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5347: FILE: kernel/irq/handle.c:144:
+		desc = kzalloc(sizeof(struct irq_desc)*nr_irq_desc, GFP_ATOMIC);
 		                                      ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*desc)...) over kzalloc(sizeof(struct irq_desc)...)
#5347: FILE: kernel/irq/handle.c:144:
+		desc = kzalloc(sizeof(struct irq_desc)*nr_irq_desc, GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5349: FILE: kernel/irq/handle.c:146:
+		desc = __alloc_bootmem_nopanic(sizeof(struct irq_desc)*nr_irq_desc, PAGE_SIZE, 0);
 		                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#5351: FILE: kernel/irq/handle.c:148:
+        if (!desc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5351: FILE: kernel/irq/handle.c:148:
+        if (!desc)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5358: FILE: kernel/irq/handle.c:155:
+		desc[i-1].next = &desc[i];
 		      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#5377: FILE: kernel/irq/handle.c:174:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5378: FILE: kernel/irq/handle.c:175:
+}
+static struct irq_desc *irq_descX;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#5566: FILE: kernel/irq/manage.c:299:
+	action =desc->action;
 	       ^

CHECK:SPACING: No space is necessary after a cast
#5694: FILE: kernel/irq/proc.c:116:
+	struct irq_desc *desc = irq_desc((long) data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5723: FILE: kernel/irq/proc.c:152:
+	if (!desc->dir || action->dir || !action->name ||
 					!name_unique(irq, action))

WARNING:LINE_SPACING: Missing a blank line after declarations
#5779: FILE: kernel/irq/proc.c:208:
+		struct irq_desc *desc = irq_desc(irq);
+		remove_proc_entry(action->dir->name, desc->dir);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000242606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 29 warnings, 59 checks, 4743 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000242606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
