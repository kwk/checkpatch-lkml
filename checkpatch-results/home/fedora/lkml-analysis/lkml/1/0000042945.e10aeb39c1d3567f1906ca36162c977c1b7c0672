WARNING:TYPO_SPELLING: 'paramter' may be misspelled - perhaps 'parameter'?
#46: 
clone(), except that it takes a 'pids' paramter. This parameter lets
                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#173: FILE: arch/x86/include/asm/processor.h:1055:
+extern int do_eclone_common(struct pt_regs *regs, unsigned flags_low,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: arch/x86/include/asm/processor.h:1055:
+extern int do_eclone_common(struct pt_regs *regs, unsigned flags_low,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: arch/x86/include/asm/processor.h:1056:
+extern int do_eclone_common(struct pt_regs *regs, unsigned flags_low,
+				struct clone_args __user *uca, int args_size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#186: FILE: arch/x86/include/asm/syscalls.h:43:
+int sys_eclone(struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#227: FILE: arch/x86/kernel/process.c:613:
+int do_eclone_common(struct pt_regs *regs, unsigned flags_low,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/x86/kernel/process.c:614:
+int do_eclone_common(struct pt_regs *regs, unsigned flags_low,
+			struct clone_args __user *uca, int args_size,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: arch/x86/kernel/process.c:632:
+^I * ^I higher word(s) of 'flags':$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: arch/x86/kernel/process.c:634:
+^I * ^I^Iflags = (kca.clone_flags_high << 32) | flags_low;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#266: FILE: arch/x86/kernel/process.c:652:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/linux/sched.h:2156:
+extern int fetch_clone_args_from_user(struct clone_args __user *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clone_args __user *' should also have an identifier name
#310: FILE: include/linux/sched.h:2156:
+extern int fetch_clone_args_from_user(struct clone_args __user *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#310: FILE: include/linux/sched.h:2156:
+extern int fetch_clone_args_from_user(struct clone_args __user *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clone_args *' should also have an identifier name
#310: FILE: include/linux/sched.h:2156:
+extern int fetch_clone_args_from_user(struct clone_args __user *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: include/linux/sched.h:2157:
+extern int fetch_clone_args_from_user(struct clone_args __user *, int,
+				struct clone_args *);

WARNING:REPEATED_WORD: Possible repeated word: 'of'
#327: FILE: include/linux/types.h:211:
+	 * the base of of stack. If child_stack is used as the stack pointer,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#406: FILE: kernel/fork.c:1431:
+^I * ^I youngest (target_pids[0] corresponds to init_pid_ns). i.e.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: kernel/fork.c:1432:
+^I * ^I the order is:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: kernel/fork.c:1434:
+^I * ^I^I- pids for 'unknown-namespaces' (if any)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: kernel/fork.c:1435:
+^I * ^I^I- pids for 'known-namespaces' (requested pids)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: kernel/fork.c:1436:
+^I * ^I^I- 0 in the last entry (for CLONE_NEWPID).$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: kernel/fork.c:1456:
+fetch_clone_args_from_user(struct clone_args __user *uca, int args_size,
+			struct clone_args *kca)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: kernel/fork.c:1462:
+^I * ^I could be that kernel is newer and has an extended structure.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#438: FILE: kernel/fork.c:1463:
+^I * ^I When that happens, this check needs to be smarter.  For now,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: kernel/fork.c:1464:
+^I * ^I assume exact match.$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042945.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 7 checks, 280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042945.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
