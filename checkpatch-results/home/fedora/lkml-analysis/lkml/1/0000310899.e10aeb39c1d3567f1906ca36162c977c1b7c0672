CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: fs/ocfs2/slot_map.c:45:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#115: FILE: fs/ocfs2/slot_map.c:66:
+	BUG_ON((slot_num < 0) || (slot_num >= si->si_num_slots));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#122: FILE: fs/ocfs2/slot_map.c:73:
+	BUG_ON((slot_num < 0) || (slot_num >= si->si_num_slots));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: fs/ocfs2/slot_map.c:74:
+	BUG_ON((node_num == O2NM_INVALID_NODE_NUM) ||

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#172: FILE: fs/ocfs2/slot_map.c:180:
+ * if nothing is found. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node_num == si->si_slots[i].sl_node_num'
#183: FILE: fs/ocfs2/slot_map.c:187:
+		if (si->si_slots[i].sl_valid &&
+		    (node_num == si->si_slots[i].sl_node_num)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'preferred >= 0'
#204: FILE: fs/ocfs2/slot_map.c:202:
+	if ((preferred >= 0) && (preferred < si->si_num_slots)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'preferred < si->si_num_slots'
#204: FILE: fs/ocfs2/slot_map.c:202:
+	if ((preferred >= 0) && (preferred < si->si_num_slots)) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*si)...) over kzalloc(sizeof(struct ocfs2_slot_info)...)
#290: FILE: fs/ocfs2/slot_map.c:345:
+	si = kzalloc(sizeof(struct ocfs2_slot_info) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310899.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 5 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310899.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
