ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Herbert van den Bergh (herbert.van.den.bergh@oracle.com)'
#55: 
Signed-off-by: Herbert van den Bergh (herbert.van.den.bergh@oracle.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Dave McCracken (dave.mccracken@oracle.com)'
#56: 
Signed-off-by: Dave McCracken (dave.mccracken@oracle.com)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/proc/task_mmu.c:34:
+       data = mm->total_vm - mm->shared_vm - mm->stack_vm - mm->exec_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: mm/mprotect.c:165:
+        /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: mm/mprotect.c:166:
+        * Check against private data size limit. When execute permission$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#77: FILE: mm/mprotect.c:166:
+        /*
+        * Check against private data size limit. When execute permission

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: mm/mprotect.c:167:
+        * is removed, the mapping is counted toward the private data size.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: mm/mprotect.c:168:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: mm/mprotect.c:169:
+       if (!(newflags & VM_EXEC) && (vma->vm_flags & VM_EXEC)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#80: FILE: mm/mprotect.c:169:
+       if (!(newflags & VM_EXEC) && (vma->vm_flags & VM_EXEC)) {
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: mm/mprotect.c:170:
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: mm/mprotect.c:170:
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: mm/mprotect.c:171:
+               if (rlim < RLIM_INFINITY) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: mm/mprotect.c:171:
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;
+               if (rlim < RLIM_INFINITY) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: mm/mprotect.c:171:
+               if (rlim < RLIM_INFINITY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#82: FILE: mm/mprotect.c:171:
+               if (rlim < RLIM_INFINITY) {
+                       unsigned long priv_vm;

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: mm/mprotect.c:172:
+                       unsigned long priv_vm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: mm/mprotect.c:172:
+                       unsigned long priv_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: mm/mprotect.c:173:
+                       priv_vm = mm->total_vm - mm->shared_vm - mm->exec_vm;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: mm/mprotect.c:173:
+                       unsigned long priv_vm;
+                       priv_vm = mm->total_vm - mm->shared_vm - mm->exec_vm;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: mm/mprotect.c:173:
+                       priv_vm = mm->total_vm - mm->shared_vm - mm->exec_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: mm/mprotect.c:174:
+                       priv_vm <<= PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: mm/mprotect.c:174:
+                       priv_vm <<= PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: mm/mprotect.c:175:
+                       if (priv_vm + (end - start) > rlim)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: mm/mprotect.c:175:
+                       if (priv_vm + (end - start) > rlim)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#86: FILE: mm/mprotect.c:175:
+                       if (priv_vm + (end - start) > rlim)
+                               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: mm/mprotect.c:176:
+                               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: mm/mprotect.c:176:
+                               return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: mm/mprotect.c:177:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: mm/mprotect.c:177:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: mm/mprotect.c:178:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: mm/mprotect.c:178:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: mm/mremap.c:346:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: mm/mremap.c:347:
+        * Check against private data size limit. Count memory allocations$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#101: FILE: mm/mremap.c:347:
+        /*
+        * Check against private data size limit. Count memory allocations

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: mm/mremap.c:348:
+        * which are not shared and not executable code as private data.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: mm/mremap.c:349:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: mm/mremap.c:350:
+       if (!(vma->vm_flags & (VM_EXEC|VM_SHARED))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: mm/mremap.c:350:
+       if (!(vma->vm_flags & (VM_EXEC|VM_SHARED))) {
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#104: FILE: mm/mremap.c:350:
+       if (!(vma->vm_flags & (VM_EXEC|VM_SHARED))) {
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: mm/mremap.c:351:
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: mm/mremap.c:351:
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: mm/mremap.c:352:
+               if (rlim < RLIM_INFINITY) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: mm/mremap.c:352:
+               unsigned long rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;
+               if (rlim < RLIM_INFINITY) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: mm/mremap.c:352:
+               if (rlim < RLIM_INFINITY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#106: FILE: mm/mremap.c:352:
+               if (rlim < RLIM_INFINITY) {
+                       unsigned long priv_vm;

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: mm/mremap.c:353:
+                       unsigned long priv_vm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: mm/mremap.c:353:
+                       unsigned long priv_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: mm/mremap.c:354:
+                       struct mm_struct *mm = current->mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: mm/mremap.c:354:
+                       struct mm_struct *mm = current->mm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: mm/mremap.c:355:
+                       priv_vm = mm->total_vm - mm->shared_vm - mm->exec_vm;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#109: FILE: mm/mremap.c:355:
+                       struct mm_struct *mm = current->mm;
+                       priv_vm = mm->total_vm - mm->shared_vm - mm->exec_vm;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: mm/mremap.c:355:
+                       priv_vm = mm->total_vm - mm->shared_vm - mm->exec_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: mm/mremap.c:356:
+                       priv_vm <<= PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: mm/mremap.c:356:
+                       priv_vm <<= PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: mm/mremap.c:357:
+                       if (priv_vm + (new_len - old_len) > rlim)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: mm/mremap.c:357:
+                       if (priv_vm + (new_len - old_len) > rlim)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#111: FILE: mm/mremap.c:357:
+                       if (priv_vm + (new_len - old_len) > rlim)
+                               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: mm/mremap.c:358:
+                               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: mm/mremap.c:358:
+                               goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: mm/mremap.c:359:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: mm/mremap.c:359:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: mm/mremap.c:360:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: mm/mremap.c:360:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: mm/mmap.c:260:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: mm/mmap.c:261:
+        * Check against private data size limit. Count memory allocations$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#143: FILE: mm/mmap.c:261:
+        /*
+        * Check against private data size limit. Count memory allocations

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: mm/mmap.c:262:
+        * which are not shared and not executable code as private data.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: mm/mmap.c:263:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: mm/mmap.c:264:
+        rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: mm/mmap.c:264:
+        rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: mm/mmap.c:265:
+        if (rlim < RLIM_INFINITY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: mm/mmap.c:265:
+        if (rlim < RLIM_INFINITY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#147: FILE: mm/mmap.c:265:
+        if (rlim < RLIM_INFINITY) {
+            unsigned long priv_vm;

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: mm/mmap.c:266:
+            unsigned long priv_vm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: mm/mmap.c:266:
+            unsigned long priv_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: mm/mmap.c:267:
+            priv_vm = (mm->total_vm - mm->shared_vm - mm->exec_vm) << PAGE_SHIFT;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: mm/mmap.c:267:
+            unsigned long priv_vm;
+            priv_vm = (mm->total_vm - mm->shared_vm - mm->exec_vm) << PAGE_SHIFT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: mm/mmap.c:267:
+            priv_vm = (mm->total_vm - mm->shared_vm - mm->exec_vm) << PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: mm/mmap.c:268:
+            if (priv_vm + (newbrk-oldbrk) > rlim)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: mm/mmap.c:268:
+            if (priv_vm + (newbrk-oldbrk) > rlim)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: mm/mmap.c:268:
+            if (priv_vm + (newbrk-oldbrk) > rlim)
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: mm/mmap.c:269:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: mm/mmap.c:269:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: mm/mmap.c:270:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: mm/mmap.c:270:
+        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#160: FILE: mm/mmap.c:879:
        if (file) {
+               if (flags & VM_SHARED)

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: mm/mmap.c:880:
+               if (flags & VM_SHARED)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: mm/mmap.c:880:
+               if (flags & VM_SHARED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#162: FILE: mm/mmap.c:880:
+               if (flags & VM_SHARED)
+                       mm->shared_vm += pages;

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: mm/mmap.c:881:
+                       mm->shared_vm += pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: mm/mmap.c:881:
+                       mm->shared_vm += pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: mm/mmap.c:1047:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: mm/mmap.c:1048:
+        * Check against private data size limit. Count memory allocations$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#172: FILE: mm/mmap.c:1048:
+        /*
+        * Check against private data size limit. Count memory allocations

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: mm/mmap.c:1049:
+        * which are not shared and not executable code as private data.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: mm/mmap.c:1050:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: mm/mmap.c:1051:
+       if (!(vm_flags & (VM_SHARED|VM_EXEC))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 12)
#175: FILE: mm/mmap.c:1051:
+       if (!(vm_flags & (VM_SHARED|VM_EXEC))) {
+            unsigned long rlim, priv_vm;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#175: FILE: mm/mmap.c:1051:
+       if (!(vm_flags & (VM_SHARED|VM_EXEC))) {
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: mm/mmap.c:1052:
+            unsigned long rlim, priv_vm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/mmap.c:1052:
+            unsigned long rlim, priv_vm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: mm/mmap.c:1053:
+            rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: mm/mmap.c:1053:
+            unsigned long rlim, priv_vm;
+            rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: mm/mmap.c:1053:
+            rlim = current->signal->rlim[RLIMIT_DATA].rlim_cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: mm/mmap.c:1054:
+           if (rlim < RLIM_INFINITY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: mm/mmap.c:1054:
+           if (rlim < RLIM_INFINITY) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: mm/mmap.c:1055:
+                priv_vm = (mm->total_vm - mm->shared_vm - mm->exec_vm) << PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: mm/mmap.c:1055:
+                priv_vm = (mm->total_vm - mm->shared_vm - mm->exec_vm) << PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: mm/mmap.c:1056:
+                if (priv_vm + len > rlim)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: mm/mmap.c:1056:
+                if (priv_vm + len > rlim)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#180: FILE: mm/mmap.c:1056:
+                if (priv_vm + len > rlim)
+                   return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: mm/mmap.c:1057:
+                   return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: mm/mmap.c:1057:
+                   return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: mm/mmap.c:1058:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: mm/mmap.c:1058:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: mm/mmap.c:1059:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: mm/mmap.c:1059:
+        }$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424191.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 54 errors, 61 warnings, 3 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424191.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
