WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#51: FILE: drivers/block/cciss.c:66:
+	printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#56: FILE: drivers/block/cciss.c:71:
+		printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__);	\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intinfo.delay == 0'
#115: FILE: drivers/block/cciss.c:1161:
+			if ((intinfo.delay == 0) && (intinfo.count == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intinfo.count == 0'
#115: FILE: drivers/block/cciss.c:1161:
+			if ((intinfo.delay == 0) && (intinfo.count == 0)) {

CHECK:CAMELCASE: Avoid CamelCase: <CfgTable_struct>
#165: FILE: drivers/block/cciss.c:3484:
+static void cciss_debug_cfg_table(CfgTable_struct *tb)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->SpecValence
#194: FILE: drivers/block/cciss.c:3496:
+	cciss_debug("   Spec Number = %d\n", readl(&(tb->SpecValence)));

CHECK:CAMELCASE: Avoid CamelCase: <SpecValence>
#194: FILE: drivers/block/cciss.c:3496:
+	cciss_debug("   Spec Number = %d\n", readl(&(tb->SpecValence)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->TransportSupport
#196: FILE: drivers/block/cciss.c:3498:
+		    readl(&(tb->TransportSupport)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportSupport>
#196: FILE: drivers/block/cciss.c:3498:
+		    readl(&(tb->TransportSupport)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->TransportActive
#198: FILE: drivers/block/cciss.c:3500:
+		    readl(&(tb->TransportActive)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportActive>
#198: FILE: drivers/block/cciss.c:3500:
+		    readl(&(tb->TransportActive)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.TransportRequest
#200: FILE: drivers/block/cciss.c:3502:
+		    readl(&(tb->HostWrite.TransportRequest)));

CHECK:CAMELCASE: Avoid CamelCase: <HostWrite>
#200: FILE: drivers/block/cciss.c:3502:
+		    readl(&(tb->HostWrite.TransportRequest)));

CHECK:CAMELCASE: Avoid CamelCase: <TransportRequest>
#200: FILE: drivers/block/cciss.c:3502:
+		    readl(&(tb->HostWrite.TransportRequest)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.CoalIntDelay
#202: FILE: drivers/block/cciss.c:3504:
+		    readl(&(tb->HostWrite.CoalIntDelay)));

CHECK:CAMELCASE: Avoid CamelCase: <CoalIntDelay>
#202: FILE: drivers/block/cciss.c:3504:
+		    readl(&(tb->HostWrite.CoalIntDelay)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HostWrite.CoalIntCount
#204: FILE: drivers/block/cciss.c:3506:
+		    readl(&(tb->HostWrite.CoalIntCount)));

CHECK:CAMELCASE: Avoid CamelCase: <CoalIntCount>
#204: FILE: drivers/block/cciss.c:3506:
+		    readl(&(tb->HostWrite.CoalIntCount)));

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#205: FILE: drivers/block/cciss.c:3507:
+	cciss_debug("   Max outstanding commands = 0x%d\n",

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->CmdsOutMax
#206: FILE: drivers/block/cciss.c:3508:
+		    readl(&(tb->CmdsOutMax)));

CHECK:CAMELCASE: Avoid CamelCase: <CmdsOutMax>
#206: FILE: drivers/block/cciss.c:3508:
+		    readl(&(tb->CmdsOutMax)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->BusTypes
#207: FILE: drivers/block/cciss.c:3509:
+	cciss_debug("   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:CAMELCASE: Avoid CamelCase: <BusTypes>
#207: FILE: drivers/block/cciss.c:3509:
+	cciss_debug("   Bus Types = 0x%x\n", readl(&(tb->BusTypes)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tb->HeartBeat
#216: FILE: drivers/block/cciss.c:3515:
+		    readl(&(tb->HeartBeat)));

CHECK:CAMELCASE: Avoid CamelCase: <HeartBeat>
#216: FILE: drivers/block/cciss.c:3515:
+		    readl(&(tb->HeartBeat)));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'scsi_cmd_free', this function's name, in a string
#333: FILE: drivers/block/cciss_scsi.c:188:
+		pr_info("scsi_cmd_free called too many times.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#408: FILE: drivers/block/cciss_scsi.c:256:
+cciss_debug_cmd(CommandList_struct *cp)

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#454: FILE: drivers/block/cciss_scsi.c:259:
+	cciss_debug("queue:%d\n", cp->Header.ReplyQueue);

CHECK:CAMELCASE: Avoid CamelCase: <ReplyQueue>
#454: FILE: drivers/block/cciss_scsi.c:259:
+	cciss_debug("queue:%d\n", cp->Header.ReplyQueue);

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#455: FILE: drivers/block/cciss_scsi.c:260:
+	cciss_debug("sglist:%d\n", cp->Header.SGList);

CHECK:CAMELCASE: Avoid CamelCase: <SGTotal>
#456: FILE: drivers/block/cciss_scsi.c:261:
+	cciss_debug("sgtot:%d\n", cp->Header.SGTotal);

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#458: FILE: drivers/block/cciss_scsi.c:263:
+		    cp->Header.Tag.upper, cp->Header.Tag.lower);

CHECK:CAMELCASE: Avoid CamelCase: <LunAddrBytes>
#460: FILE: drivers/block/cciss_scsi.c:265:
+		    cp->Header.LUN.LunAddrBytes[0],

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#468: FILE: drivers/block/cciss_scsi.c:273:
+	cciss_debug("CDBLen:%d\n", cp->Request.CDBLen);

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#468: FILE: drivers/block/cciss_scsi.c:273:
+	cciss_debug("CDBLen:%d\n", cp->Request.CDBLen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#469: FILE: drivers/block/cciss_scsi.c:274:
+	cciss_debug("Type:%d\n",cp->Request.Type.Type);
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#469: FILE: drivers/block/cciss_scsi.c:274:
+	cciss_debug("Type:%d\n",cp->Request.Type.Type);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: drivers/block/cciss_scsi.c:275:
+	cciss_debug("Attr:%d\n",cp->Request.Type.Attribute);
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#470: FILE: drivers/block/cciss_scsi.c:275:
+	cciss_debug("Attr:%d\n",cp->Request.Type.Attribute);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#471: FILE: drivers/block/cciss_scsi.c:276:
+	cciss_debug(" Dir:%d\n",cp->Request.Type.Direction);
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#471: FILE: drivers/block/cciss_scsi.c:276:
+	cciss_debug(" Dir:%d\n",cp->Request.Type.Direction);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: drivers/block/cciss_scsi.c:277:
+	cciss_debug("Timeout:%d\n",cp->Request.Timeout);
 	                          ^

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#472: FILE: drivers/block/cciss_scsi.c:277:
+	cciss_debug("Timeout:%d\n",cp->Request.Timeout);

WARNING:SPLIT_STRING: quoted string split across lines
#474: FILE: drivers/block/cciss_scsi.c:279:
+	cciss_debug("CDB: %02x %02x %02x %02x %02x %02x %02x %02x"
+		    " %02x %02x %02x %02x %02x %02x %02x %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <ErrDesc>
#484: FILE: drivers/block/cciss_scsi.c:289:
+		    cp->ErrDesc.Addr.upper, cp->ErrDesc.Addr.lower,

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#484: FILE: drivers/block/cciss_scsi.c:289:
+		    cp->ErrDesc.Addr.upper, cp->ErrDesc.Addr.lower,

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#485: FILE: drivers/block/cciss_scsi.c:290:
+		    cp->ErrDesc.Len);

CHECK:CAMELCASE: Avoid CamelCase: <ScsiStatus>
#487: FILE: drivers/block/cciss_scsi.c:292:
+	cciss_debug("scsistatus:%d\n", cp->err_info->ScsiStatus);

CHECK:CAMELCASE: Avoid CamelCase: <SenseLen>
#488: FILE: drivers/block/cciss_scsi.c:293:
+	cciss_debug("senselen:%d\n", cp->err_info->SenseLen);

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#489: FILE: drivers/block/cciss_scsi.c:294:
+	cciss_debug("cmd status:%d\n", cp->err_info->CommandStatus);

CHECK:CAMELCASE: Avoid CamelCase: <ResidualCnt>
#490: FILE: drivers/block/cciss_scsi.c:295:
+	cciss_debug("resid cnt:%d\n", cp->err_info->ResidualCnt);

CHECK:CAMELCASE: Avoid CamelCase: <MoreErrInfo>
#492: FILE: drivers/block/cciss_scsi.c:297:
+		    cp->err_info->MoreErrInfo.Invalid_Cmd.offense_size);

CHECK:CAMELCASE: Avoid CamelCase: <Invalid_Cmd>
#492: FILE: drivers/block/cciss_scsi.c:297:
+		    cp->err_info->MoreErrInfo.Invalid_Cmd.offense_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#542: FILE: drivers/block/cciss_scsi.c:532:
+			/* pr_info("%d: %s device c%db%dt%dl%d removed.\n",
+				   ctlr, scsi_device_type(csd->devtype), hostno,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#543: FILE: drivers/block/cciss_scsi.c:533:
+				   csd->bus, csd->target, csd->lun); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#581: FILE: drivers/block/cciss_scsi.c:794:
+	/* pr_info("c:%p:c%db%dt%dl%d ",
+		cmd, ctlr->ctlr, cmd->channel, cmd->target, cmd->lun); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: drivers/block/cciss_scsi.c:794:
+		cmd, ctlr->ctlr, cmd->channel, cmd->target, cmd->lun); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#641: FILE: drivers/block/cciss_scsi.c:1369:
+	/* pr_info("%s: p=%p, cmd=0x%02x, c%db%dt%dl%d\n",
+		__func__, cmd, cmd->cmnd[0],

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#642: FILE: drivers/block/cciss_scsi.c:1370:
+		ctlr, cmd->channel, cmd->target, cmd->lun);*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#644: FILE: drivers/block/cciss_scsi.c:1372:
+	/* pr_info("q:%p:c%db%dt%dl%d ",
+		cmd, ctlr, cmd->channel, cmd->target, cmd->lun); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: drivers/block/cciss_scsi.c:1372:
+		cmd, ctlr, cmd->channel, cmd->target, cmd->lun); */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031750.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 12 warnings, 44 checks, 598 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031750.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
