WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
- merge 2 timers into one -- one can handle the emptywait as good as the other

CHECK:CAMELCASE: Avoid CamelCase: <tableAddr>
#48: FILE: drivers/char/moxa.c:133:
+	void __iomem *tableAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DCDState>
#70: FILE: drivers/char/moxa.c:145:
+	u8 DCDState;

CHECK:CAMELCASE: Avoid CamelCase: <lineCtrl>
#71: FILE: drivers/char/moxa.c:146:
+	u8 lineCtrl;

CHECK:CAMELCASE: Avoid CamelCase: <lowChkFlag>
#72: FILE: drivers/char/moxa.c:147:
+	u8 lowChkFlag;

CHECK:CAMELCASE: Avoid CamelCase: <moxaLowWaterChk>
#80: FILE: drivers/char/moxa.c:169:
+static unsigned int moxaLowWaterChk;

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortReadData>
#107: FILE: drivers/char/moxa.c:228:
+static int MoxaPortReadData(struct moxa_port *);

CHECK:CAMELCASE: Avoid CamelCase: <ofsAddr>
#121: FILE: drivers/char/moxa.c:260:
+static void moxa_low_water_check(void __iomem *ofsAddr)

CHECK:CAMELCASE: Avoid CamelCase: <FlagStat>
#125: FILE: drivers/char/moxa.c:264:
+	if (readb(ofsAddr + FlagStat) & Xoff_state) {

CHECK:CAMELCASE: Avoid CamelCase: <Xoff_state>
#125: FILE: drivers/char/moxa.c:264:
+	if (readb(ofsAddr + FlagStat) & Xoff_state) {

CHECK:CAMELCASE: Avoid CamelCase: <RXrptr>
#126: FILE: drivers/char/moxa.c:265:
+		rptr = readw(ofsAddr + RXrptr);

CHECK:CAMELCASE: Avoid CamelCase: <RXwptr>
#127: FILE: drivers/char/moxa.c:266:
+		wptr = readw(ofsAddr + RXwptr);

CHECK:CAMELCASE: Avoid CamelCase: <Low_water>
#130: FILE: drivers/char/moxa.c:269:
+		if (len <= Low_water)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dcd != p->DCDState'
#219: FILE: drivers/char/moxa.c:1363:
+	if ((dcd != p->DCDState) && p->tty && C_CLOCAL(p->tty)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/char/moxa.c:1374:
+static int moxa_poll_port(struct moxa_port *p, unsigned int handle,
+		u16 __iomem *ip)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/char/moxa.c:1383:
+		if ((p->statusflags & EMPTYWAIT) &&
+				MoxaPortTxQueue(p) == 0) {

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortTxQueue>
#242: FILE: drivers/char/moxa.c:1383:
+				MoxaPortTxQueue(p) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/char/moxa.c:1388:
+		if ((p->statusflags & LOWWAIT) && !tty->stopped &&
+				MoxaPortTxQueue(p) <= WAKEUP_CHARS) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/char/moxa.c:1394:
+		if (inited && !(p->statusflags & THROTTLE) &&
+				MoxaPortRxQueue(p) > 0) { /* RX */

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortRxQueue>
#253: FILE: drivers/char/moxa.c:1394:
+				MoxaPortRxQueue(p) > 0) { /* RX */

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortFlushData>
#259: FILE: drivers/char/moxa.c:1400:
+		MoxaPortFlushData(p, 0); /* flush RX */

CHECK:CAMELCASE: Avoid CamelCase: <IntrTx>
#271: FILE: drivers/char/moxa.c:1412:
+	if (intr & IntrTx) /* disable tx intr */

CHECK:CAMELCASE: Avoid CamelCase: <HostStat>
#272: FILE: drivers/char/moxa.c:1413:
+		writew(readw(ofsAddr + HostStat) & ~WakeupTx,

CHECK:CAMELCASE: Avoid CamelCase: <WakeupTx>
#272: FILE: drivers/char/moxa.c:1413:
+		writew(readw(ofsAddr + HostStat) & ~WakeupTx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/char/moxa.c:1414:
+		writew(readw(ofsAddr + HostStat) & ~WakeupTx,
+				ofsAddr + HostStat);

CHECK:CAMELCASE: Avoid CamelCase: <IntrBreak>
#278: FILE: drivers/char/moxa.c:1419:
+	if (tty && (intr & IntrBreak) && !I_IGNBRK(tty)) { /* BREAK */

CHECK:CAMELCASE: Avoid CamelCase: <IntrLine>
#283: FILE: drivers/char/moxa.c:1424:
+	if (intr & IntrLine)

CHECK:CAMELCASE: Avoid CamelCase: <intPend>
#334: FILE: drivers/char/moxa.c:1443:
+		if (readb(brd->intPend) == 0xff)

CHECK:CAMELCASE: Avoid CamelCase: <intTable>
#335: FILE: drivers/char/moxa.c:1444:
+			ip = brd->intTable + readb(brd->intNdx);

CHECK:CAMELCASE: Avoid CamelCase: <intNdx>
#335: FILE: drivers/char/moxa.c:1444:
+			ip = brd->intTable + readb(brd->intNdx);

CHECK:CAMELCASE: Avoid CamelCase: <numPorts>
#337: FILE: drivers/char/moxa.c:1446:
+		for (port = 0; port < brd->numPorts; port++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: drivers/char/moxa.c:1454:
+			struct moxa_port *p = brd->ports;
+			for (port = 0; port < brd->numPorts; port++, p++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <moxaLog>
#672: FILE: drivers/char/moxa.c:2120:
+	moxaLog.rxcnt[tty->index] += total;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 31 checks, 659 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
