WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_info *' should also have an identifier name
#106: FILE: fs/autofs/autofs_i.h:190:
+void autofs_free_ino(struct autofs_info *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#117: FILE: fs/autofs/autofs_i.h:193:
+int is_autofs_dentry(struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#119: FILE: fs/autofs/autofs_i.h:195:
+int autofs_expire_run(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#119: FILE: fs/autofs/autofs_i.h:195:
+int autofs_expire_run(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_sb_info *' should also have an identifier name
#119: FILE: fs/autofs/autofs_i.h:195:
+int autofs_expire_run(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_packet_expire __user *' should also have an identifier name
#119: FILE: fs/autofs/autofs_i.h:195:
+int autofs_expire_run(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#124: FILE: fs/autofs/autofs_i.h:200:
+int autofs_expire_multi(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#124: FILE: fs/autofs/autofs_i.h:200:
+int autofs_expire_multi(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_sb_info *' should also have an identifier name
#124: FILE: fs/autofs/autofs_i.h:200:
+int autofs_expire_multi(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int __user *' should also have an identifier name
#124: FILE: fs/autofs/autofs_i.h:200:
+int autofs_expire_multi(struct super_block *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#165: FILE: fs/autofs/autofs_i.h:226:
+int autofs_fill_super(struct super_block *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#165: FILE: fs/autofs/autofs_i.h:226:
+int autofs_fill_super(struct super_block *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#165: FILE: fs/autofs/autofs_i.h:226:
+int autofs_fill_super(struct super_block *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_info *' should also have an identifier name
#166: FILE: fs/autofs/autofs_i.h:227:
+struct autofs_info *autofs_init_ino(struct autofs_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_sb_info *' should also have an identifier name
#166: FILE: fs/autofs/autofs_i.h:227:
+struct autofs_info *autofs_init_ino(struct autofs_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mode_t' should also have an identifier name
#166: FILE: fs/autofs/autofs_i.h:227:
+struct autofs_info *autofs_init_ino(struct autofs_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_sb_info *' should also have an identifier name
#174: FILE: fs/autofs/autofs_i.h:232:
+int autofs_wait(struct autofs_sb_info *, struct dentry *, enum autofs_notify);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#174: FILE: fs/autofs/autofs_i.h:232:
+int autofs_wait(struct autofs_sb_info *, struct dentry *, enum autofs_notify);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_sb_info *' should also have an identifier name
#175: FILE: fs/autofs/autofs_i.h:233:
+int autofs_wait_release(struct autofs_sb_info *, autofs_wqt_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'autofs_wqt_t' should also have an identifier name
#175: FILE: fs/autofs/autofs_i.h:233:
+int autofs_wait_release(struct autofs_sb_info *, autofs_wqt_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#175: FILE: fs/autofs/autofs_i.h:233:
+int autofs_wait_release(struct autofs_sb_info *, autofs_wqt_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct autofs_sb_info *' should also have an identifier name
#176: FILE: fs/autofs/autofs_i.h:234:
+void autofs_catatonic_mode(struct autofs_sb_info *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: fs/autofs/autofs_i.h:304:
+extern void autofs_kill_sb(struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#233: FILE: fs/autofs/autofs_i.h:304:
+extern void autofs_kill_sb(struct super_block *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: fs/autofs/expire.c:18:
+static inline int autofs_can_expire(struct dentry *dentry,
 					unsigned long timeout, int do_now)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: fs/autofs/expire.c:143:
+static int autofs_tree_busy(struct vfsmount *mnt,
 			     struct dentry *top,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: fs/autofs/root.c:107:
+static void autofs_add_rehash_entry(struct autofs_info *ino,
 				     struct rehash_entry *entry)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1138: FILE: fs/autofs/root.c:266:
+static void *autofs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1176: FILE: fs/autofs/root.c:360:
+static int autofs_revalidate(struct dentry *dentry, struct nameidata *nd)
                                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1360: FILE: fs/autofs/root.c:701:
+				    struct nameidata *nd)
 				                      ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1644: FILE: fs/autofs/root.c:1069:
+static int autofs_root_ioctl(struct inode *inode, struct file *filp,
                                                                ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1709: FILE: fs/autofs/symlink.c:12:
+static void *autofs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1765: FILE: fs/autofs/waitq.c:165:
+		printk(KERN_ERR "autofs_notify_daemon: bad type %d!\n", type);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042786.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 30 warnings, 4 checks, 1698 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042786.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
