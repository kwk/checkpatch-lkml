WARNING:BAD_SIGN_OFF: Duplicate signature
#56: 
Cc: Mike Miller <mike.miller@hp.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#228: FILE: block/blk-core.c:188:
+	printk(KERN_INFO "  sector %llu, nr/cnr %u/%u\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#380: FILE: block/deadline-iosched.c:141:
+			BUG_ON(sector != blk_rq_pos(__rq));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#393: FILE: block/elevator.c:55:
+#define rq_hash_key(rq)		(blk_rq_pos(rq) + blk_rq_sectors(rq))

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#462: FILE: drivers/block/DAC960.c:3341:
+	Command->BlockNumber = blk_rq_pos(Request);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <BlockNumber>
#462: FILE: drivers/block/DAC960.c:3341:
+	Command->BlockNumber = blk_rq_pos(Request);

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#462: FILE: drivers/block/DAC960.c:3341:
+	Command->BlockNumber = blk_rq_pos(Request);

CHECK:CAMELCASE: Avoid CamelCase: <BlockCount>
#463: FILE: drivers/block/DAC960.c:3342:
+	Command->BlockCount = blk_rq_sectors(Request);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/block/DAC960.c:3434:
+  Command->BlockNumber = blk_rq_pos(Request);$

WARNING:TABSTOP: Statements should start on a tabstop
#506: FILE: drivers/block/ataflop.c:728:
+		    if (++ReqCnt < blk_rq_cur_sectors(CURRENT)) {

CHECK:CAMELCASE: Avoid CamelCase: <ReqCnt>
#506: FILE: drivers/block/ataflop.c:728:
+		    if (++ReqCnt < blk_rq_cur_sectors(CURRENT)) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#524: FILE: drivers/block/ataflop.c:1397:
+		CURRENT ? blk_rq_pos(CURRENT) : 0 ));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ReqBlock>
#542: FILE: drivers/block/ataflop.c:1453:
+	ReqBlock = blk_rq_pos(CURRENT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#559: FILE: drivers/block/cciss.c:2840:
+	printk(KERN_DEBUG "ciss: sector =%d nr_sectors=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#570: FILE: drivers/block/cciss.c:2867:
+	printk(KERN_DEBUG "cciss: Submitting %u sectors in %d segments\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#594: FILE: drivers/block/cciss.c:2896:
+			c->Request.CDB[10]= (blk_rq_sectors(creq) >> 24) & 0xff;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#595: FILE: drivers/block/cciss.c:2897:
+			c->Request.CDB[11]= (blk_rq_sectors(creq) >> 16) & 0xff;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#596: FILE: drivers/block/cciss.c:2898:
+			c->Request.CDB[12]= (blk_rq_sectors(creq) >>  8) & 0xff;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#597: FILE: drivers/block/cciss.c:2899:
+			c->Request.CDB[13]= blk_rq_sectors(creq) & 0xff;
 			                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#614: FILE: drivers/block/cpqarray.c:925:
+	printk("sector=%d, nr_sectors=%u\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#624: FILE: drivers/block/cpqarray.c:944:
+DBGPX(	printk("Submitting %u sectors in %d segments\n", blk_rq_sectors(creq), seg); );

ERROR:SPACING: space prohibited after that open parenthesis '('
#624: FILE: drivers/block/cpqarray.c:944:
+DBGPX(	printk("Submitting %u sectors in %d segments\n", blk_rq_sectors(creq), seg); );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#624: FILE: drivers/block/cpqarray.c:944:
+DBGPX(	printk("Submitting %u sectors in %d segments\n", blk_rq_sectors(creq), seg); );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#690: FILE: drivers/block/floppy.c:2520:
+		printk("current_req->nr_sectors=%u\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#788: FILE: drivers/block/floppy.c:2993:
+		printk("sect=%ld type=%x flags=%x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#803: FILE: drivers/block/hd.c:231:
+				printk(", sector=%ld", blk_rq_pos(CURRENT));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#814: FILE: drivers/block/hd.c:460:
+	printk("%s: read: sector %ld, remaining = %u, buffer=%p\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#816: FILE: drivers/block/hd.c:462:
+	       blk_rq_sectors(req) - 1, req->buffer+512);
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#869: FILE: drivers/block/nbd.c:243:
+	dprintk(DBG_TX, "%s: request %p: sending control (%s@%llu,%uB)\n",
 			lo->disk->disk_name, req,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#991: FILE: drivers/block/swim3.c:315:
+		printk("do_fd_req: dev=%s cmd=%d sec=%ld nr_sec=%u buf=%p\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#997: FILE: drivers/block/swim3.c:318:
+		printk("           errors=%d current_nr_sectors=%u\n",

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1052: FILE: drivers/block/swim3.c:604:
+	       (rq_data_dir(fd_req)==WRITE? "writ": "read"),
 	                           ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1052: FILE: drivers/block/swim3.c:604:
+	       (rq_data_dir(fd_req)==WRITE? "writ": "read"),
 	                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1052: FILE: drivers/block/swim3.c:604:
+	       (rq_data_dir(fd_req)==WRITE? "writ": "read"),
 	                                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1144: FILE: drivers/block/xd.c:309:
+		unsigned block = blk_rq_pos(req);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1145: FILE: drivers/block/xd.c:310:
+		unsigned count = blk_rq_sectors(req);

WARNING:SPLIT_STRING: quoted string split across lines
#1171: FILE: drivers/block/xen-blkfront.c:313:
 		pr_debug("do_blk_req %p: cmd %p, sec %lx, "
+			 "(%u/%u) buffer:%p [%s]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1262: FILE: drivers/cdrom/gdrom.c:587:
+		block = blk_rq_pos(req)/GD_TO_BLK + GD_SESSION_OFFSET;
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1263: FILE: drivers/cdrom/gdrom.c:588:
+		block_cnt = blk_rq_sectors(req)/GD_TO_BLK;
 		                               ^

CHECK:SPACING: No space is necessary after a cast
#1350: FILE: drivers/message/i2o/i2o_block.c:830:
+		*((u32 *) & cmd[2]) = cpu_to_be32(blk_rq_pos(req) * hwsec);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1350: FILE: drivers/message/i2o/i2o_block.c:830:
+		*((u32 *) & cmd[2]) = cpu_to_be32(blk_rq_pos(req) * hwsec);
 		          ^

CHECK:SPACING: No space is necessary after a cast
#1351: FILE: drivers/message/i2o/i2o_block.c:831:
+		*((u16 *) & cmd[7]) = cpu_to_be16(blk_rq_sectors(req) * hwsec);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1351: FILE: drivers/message/i2o/i2o_block.c:831:
+		*((u16 *) & cmd[7]) = cpu_to_be16(blk_rq_sectors(req) * hwsec);
 		          ^

CHECK:SPACING: No space is necessary after a cast
#1368: FILE: drivers/message/i2o/i2o_block.c:845:
+		    cpu_to_le32((u32) (blk_rq_pos(req) << KERNEL_SECTOR_SHIFT));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1412: FILE: drivers/mmc/card/block.c:347:
+			       (unsigned)blk_rq_pos(req),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1413: FILE: drivers/mmc/card/block.c:348:
+			       (unsigned)blk_rq_sectors(req), status);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1480: FILE: drivers/s390/block/dasd_eckd.c:2357:
+	first_rec = first_trk = blk_rq_pos(req) >> block->s2b_shift;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#1585: FILE: drivers/scsi/eata.c:1828:
+		flush_dev(SCpnt->device, blk_rq_pos(SCpnt->request), ha, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1652: FILE: drivers/scsi/lpfc/lpfc_scsi.c:1316:
+	printk(KERN_ERR "BG ERROR in cmd 0x%x lba 0x%llx blk cnt 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#1667: FILE: drivers/scsi/lpfc/lpfc_scsi.c:2378:
 					"9035 BLKGRD: READ @ sector %llu, "
+					"count %u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1674: FILE: drivers/scsi/lpfc/lpfc_scsi.c:2384:
 					"9036 BLKGRD: WRITE @ sector %llu, "
+					"count %u cmd=%p\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1686: FILE: drivers/scsi/lpfc/lpfc_scsi.c:2406:
 					 "9040 dbg: READ @ sector %llu, "
+					 "count %u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1694: FILE: drivers/scsi/lpfc/lpfc_scsi.c:2412:
 					 "9041 dbg: WRITE @ sector %llu, "
+					 "count %u cmd=%p\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1710: FILE: drivers/scsi/scsi_lib.c:790:
+	SCSI_LOG_HLCOMPLETE(1, printk("%u sectors total, "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1840: FILE: drivers/scsi/sr.c:353:
+		SCSI_LOG_HLQUEUE(2, printk("Finishing %u sectors\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1859: FILE: drivers/scsi/sr.c:426:
+	SCSI_LOG_HLQUEUE(2, printk("%s : %s %d/%u 512 byte blocks.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1860: FILE: drivers/scsi/sr.c:427:
+	SCSI_LOG_HLQUEUE(2, printk("%s : %s %d/%u 512 byte blocks.\n",
 				cd->cdi.name,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1881: FILE: drivers/scsi/u14-34f.c:1309:
+      flush_dev(SCpnt->device, blk_rq_pos(SCpnt->request), j, FALSE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1891: FILE: drivers/scsi/u14-34f.c:1613:
+      if (blk_rq_pos(SCpnt->request) < minsec)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#1891: FILE: drivers/scsi/u14-34f.c:1613:
+      if (blk_rq_pos(SCpnt->request) < minsec)
+	 minsec = blk_rq_pos(SCpnt->request);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1893: FILE: drivers/scsi/u14-34f.c:1615:
+      if (blk_rq_pos(SCpnt->request) > maxsec)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#1893: FILE: drivers/scsi/u14-34f.c:1615:
+      if (blk_rq_pos(SCpnt->request) > maxsec)
+	 maxsec = blk_rq_pos(SCpnt->request);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1898: FILE: drivers/scsi/u14-34f.c:1618:
+      sl[n] = blk_rq_pos(SCpnt->request);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1899: FILE: drivers/scsi/u14-34f.c:1619:
+      ioseek += blk_rq_sectors(SCpnt->request);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1908: FILE: drivers/scsi/u14-34f.c:1647:
+      ll[n] = blk_rq_sectors(SCpnt->request); pl[n] = SCpnt->serial_number;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1917: FILE: drivers/scsi/u14-34f.c:1671:
+         printk("%s %d.%d:%d pid %ld mb %d fc %d nr %d sec %ld ns %u"\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1917: FILE: drivers/scsi/u14-34f.c:1671:
+         printk("%s %d.%d:%d pid %ld mb %d fc %d nr %d sec %ld ns %u"\$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1917: FILE: drivers/scsi/u14-34f.c:1671:
+         printk("%s %d.%d:%d pid %ld mb %d fc %d nr %d sec %ld ns %u"\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1917: FILE: drivers/scsi/u14-34f.c:1671:
+         printk("%s %d.%d:%d pid %ld mb %d fc %d nr %d sec %ld ns %u"\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1923: FILE: drivers/scsi/u14-34f.c:1675:
+                blk_rq_pos(SCpnt->request), blk_rq_sectors(SCpnt->request),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1923: FILE: drivers/scsi/u14-34f.c:1675:
+                blk_rq_pos(SCpnt->request), blk_rq_sectors(SCpnt->request),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#1930: FILE: drivers/scsi/u14-34f.c:1802:
    if (linked_comm && SCpnt->device->queue_depth > 2
[...]
+      flush_dev(SCpnt->device, blk_rq_pos(SCpnt->request), j, TRUE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1933: FILE: drivers/scsi/u14-34f.c:1804:
+      flush_dev(SCpnt->device, blk_rq_pos(SCpnt->request), j, TRUE);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000132687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 42 warnings, 17 checks, 1476 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000132687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
