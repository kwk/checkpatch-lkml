WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#210: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#215: FILE: arch/i386/kernel/cpu/perfctr.c:1:
+#include <linux/bitops.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#261: FILE: arch/i386/kernel/cpu/perfctr.c:47:
+void __devinit probe_performance_counters(void)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: arch/i386/kernel/cpu/perfctr.c:98:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#326: FILE: arch/i386/kernel/cpu/perfctr.c:112:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: arch/i386/kernel/cpu/perfctr.c:125:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#354: FILE: arch/i386/kernel/cpu/perfctr.c:140:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: arch/i386/kernel/cpu/perfctr.c:153:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#382: FILE: arch/i386/kernel/cpu/perfctr.c:168:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#387: FILE: arch/i386/kernel/cpu/perfctr.c:173:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#388: FILE: arch/i386/kernel/cpu/perfctr.c:174:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi_bit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#389: FILE: arch/i386/kernel/cpu/perfctr.c:175:
+EXPORT_SYMBOL(reserve_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#390: FILE: arch/i386/kernel/cpu/perfctr.c:176:
+EXPORT_SYMBOL(release_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#391: FILE: arch/i386/kernel/cpu/perfctr.c:177:
+EXPORT_SYMBOL(reserve_evntsel_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#392: FILE: arch/i386/kernel/cpu/perfctr.c:178:
+EXPORT_SYMBOL(release_evntsel_nmi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#432: FILE: include/asm-i386/nmi.h:21:
+extern void probe_performance_counters(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#444: FILE: include/asm-x86_64/nmi.h:49:
+extern void probe_performance_counters(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 2 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
