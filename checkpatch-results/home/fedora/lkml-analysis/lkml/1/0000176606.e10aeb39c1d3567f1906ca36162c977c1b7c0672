WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
x86: syscalls: sys_setrlimit64/sys_getrlimit64 calls to provide FSIZE  limits > 2^32-1

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#58: 
    And a type 'struct rlimit64' to accomodate more no. of limits <= 2^64-1
                                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'IST' may be misspelled - perhaps 'IS'?
#69: 
        Sat Jan 17 16:57:07 IST 2009 i686 GNU/Linux
                            ^^^

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#86: 
    Signed-off-by: Narendra Prasad Madanapalli <narendramind@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#177: FILE: kernel/ChangeLog:7:
+        And a type 'struct rlimit64' to accomodate more no. of limits <= 2^64-1
                                         ^^^^^^^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof sig->rlim64 should be sizeof(sig->rlim64)
#188: FILE: kernel/fork.c:865:
+	memcpy(sig->rlim64, current->signal->rlim64, sizeof sig->rlim64);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: kernel/sys.c:1581:
+SYSCALL_DEFINE2(getrlimit64, unsigned int, resource,
+				struct rlimit64 __user *, rlim)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#212: FILE: kernel/sys.c:1593:
+		return copy_to_user(rlim, &value, sizeof(*rlim)) ? -EFAULT : 0;
+	} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: kernel/sys.c:1608:
+SYSCALL_DEFINE2(setrlimit64, unsigned int, resource,
+				struct rlimit64 __user *, rlim)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim64_cur > old_rlim->rlim64_max'
#244: FILE: kernel/sys.c:1625:
+		if (((new_rlim.rlim64_cur > old_rlim->rlim64_max) ||
+			(new_rlim.rlim64_max > old_rlim->rlim64_max)) &&
+			!capable(CAP_SYS_RESOURCE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim64_max > old_rlim->rlim64_max'
#244: FILE: kernel/sys.c:1625:
+		if (((new_rlim.rlim64_cur > old_rlim->rlim64_max) ||
+			(new_rlim.rlim64_max > old_rlim->rlim64_max)) &&
+			!capable(CAP_SYS_RESOURCE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: kernel/sys.c:1626:
+		if (((new_rlim.rlim64_cur > old_rlim->rlim64_max) ||
+			(new_rlim.rlim64_max > old_rlim->rlim64_max)) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim64_cur > old_rlim->rlim_max'
#268: FILE: kernel/sys.c:1649:
+	if (((new_rlim.rlim64_cur > old_rlim->rlim_max) ||
+		(new_rlim.rlim64_max > old_rlim->rlim_max)) &&
+		!capable(CAP_SYS_RESOURCE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim64_max > old_rlim->rlim_max'
#268: FILE: kernel/sys.c:1649:
+	if (((new_rlim.rlim64_cur > old_rlim->rlim_max) ||
+		(new_rlim.rlim64_max > old_rlim->rlim_max)) &&
+		!capable(CAP_SYS_RESOURCE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: kernel/sys.c:1650:
+	if (((new_rlim.rlim64_cur > old_rlim->rlim_max) ||
+		(new_rlim.rlim64_max > old_rlim->rlim_max)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: kernel/sys.c:1655:
+		if (new_rlim.rlim64_cur > INR_OPEN ||
+			new_rlim.rlim64_max > INR_OPEN)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000176606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 9 checks, 207 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000176606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
