WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#88: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/power/external_power.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#165: FILE: drivers/power/external_power.c:47:
+	pr_debug("%s: %s %d\n", __FUNCTION__, pst->name, ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/power/external_power.c:62:
+^I^I                &bpsy->psy->bound_supplicants, node) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/power/external_power.c:62:
+		list_for_each_entry_safe(bpst, bpst_tmp,
+		                &bpsy->psy->bound_supplicants, node) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#194: FILE: drivers/power/external_power.c:76:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/power/external_power.c:86:
+^I                                                              node) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/power/external_power.c:86:
+	list_for_each_entry_safe(bpst, bpst_tmp, &psy->bound_supplicants,
+	                                                              node) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/power/external_power.c:88:
+^I^I                &bpst->pst->bound_supplies, node) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: drivers/power/external_power.c:88:
+		list_for_each_entry_safe(bpsy, bpsy_tmp,
+		                &bpst->pst->bound_supplies, node) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#219: FILE: drivers/power/external_power.c:101:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/power/external_power.c:104:
+                           struct power_supply *psy)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/power/external_power.c:104:
+                           struct power_supply *psy)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/power/external_power.c:119:
+^I         pst->name, psy->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/power/external_power.c:125:
+                           struct power_supplicant *pst)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/power/external_power.c:125:
+                           struct power_supplicant *pst)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/power/external_power.c:136:
+^I         psy->name, pst->name);$

WARNING:RETURN_VOID: void function return statements are not generally useful
#310: FILE: drivers/power/external_power.c:192:
+	return;
+}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#317: FILE: drivers/power/external_power.c:199:
+	dev_dbg(psy->dev, "%s\n", __FUNCTION__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#325: FILE: drivers/power/external_power.c:207:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: drivers/power/external_power.c:210:
+                                        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/power/external_power.c:210:
+                                        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/power/external_power.c:211:
+                                        char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/power/external_power.c:211:
+                                        char *buf)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/power/external_power.c:219:
+                                      struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/power/external_power.c:219:
+                                      struct device_attribute *attr, char *buf)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/power/external_power.c:227:
+                                                 struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/power/external_power.c:227:
+                                                 struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/power/external_power.c:228:
+                                                 char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/power/external_power.c:228:
+                                                 char *buf)$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'power_supply_show_online' to 'online_show'
#351: FILE: drivers/power/external_power.c:233:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'power_supply_show_type' to 'type_show'
#354: FILE: drivers/power/external_power.c:236:
+static DEVICE_ATTR(type, 0444, power_supply_show_type, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'power_supply_show_nominal_voltage' to 'nominal_voltage_show'
#355: FILE: drivers/power/external_power.c:237:
+static DEVICE_ATTR(nominal_voltage, 0444, power_supply_show_nominal_voltage,

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/power/external_power.c:238:
+                   NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/power/external_power.c:238:
+                   NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: drivers/power/external_power.c:241:
+                            struct power_supply *psy)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/power/external_power.c:241:
+int power_supply_register(struct device *parent,
+                            struct power_supply *psy)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/power/external_power.c:241:
+                            struct power_supply *psy)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: drivers/power/external_power.c:251:
+^I                         psy->name);$

WARNING:TYPO_SPELLING: 'registred' may be misspelled - perhaps 'registered'?
#405: FILE: drivers/power/external_power.c:287:
+	/* notify supplicants that supply registred */
 	                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:RETURN_VOID: void function return statements are not generally useful
#437: FILE: drivers/power/external_power.c:319:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#445: FILE: drivers/power/external_power.c:327:
+		printk(KERN_ERR "external_power: failed to create "

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: drivers/power/external_power.c:328:
+		printk(KERN_ERR "external_power: failed to create "
+		       "power_supply class\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:RETURN_VOID: void function return statements are not generally useful
#464: FILE: drivers/power/external_power.c:346:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#466: FILE: drivers/power/external_power.c:348:
+EXPORT_SYMBOL_GPL(power_supplicant_am_i_supplied);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#467: FILE: drivers/power/external_power.c:349:
+EXPORT_SYMBOL_GPL(power_supplicant_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#468: FILE: drivers/power/external_power.c:350:
+EXPORT_SYMBOL_GPL(power_supplicant_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#470: FILE: drivers/power/external_power.c:352:
+EXPORT_SYMBOL_GPL(power_supply_changed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#471: FILE: drivers/power/external_power.c:353:
+EXPORT_SYMBOL_GPL(power_supply_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#472: FILE: drivers/power/external_power.c:354:
+EXPORT_SYMBOL_GPL(power_supply_unregister);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#486: FILE: include/linux/external_power.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#518: FILE: include/linux/external_power.h:33:
+extern void power_supply_changed(struct power_supply *psy);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#519: FILE: include/linux/external_power.h:34:
+extern int power_supply_register(struct device *parent,

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: include/linux/external_power.h:35:
+                                 struct power_supply *psy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: include/linux/external_power.h:35:
+                                 struct power_supply *psy);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/linux/external_power.h:36:
+extern void power_supply_unregister(struct power_supply *psy);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#528: FILE: include/linux/external_power.h:43:
+	 * do not sleep there, this is called from irq, most probably */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: include/linux/external_power.h:45:
+^I                             struct power_supply *psy);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#537: FILE: include/linux/external_power.h:52:
+extern int power_supplicant_am_i_supplied(struct power_supplicant *pst);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#538: FILE: include/linux/external_power.h:53:
+extern int power_supplicant_register(struct power_supplicant *pst);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#539: FILE: include/linux/external_power.h:54:
+extern void power_supplicant_unregister(struct power_supplicant *pst);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441226.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 34 warnings, 10 checks, 446 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441226.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
