WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Subject: x86: add code to dump the (kernel) page tables for visual inspection by kernel developers

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: arch/x86/mm/dump_pagetables.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#102: FILE: arch/x86/mm/dump_pagetables.c:19:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: arch/x86/mm/dump_pagetables.c:43:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#135: FILE: arch/x86/mm/dump_pagetables.c:52:
+		seq_printf(m, "USR ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#137: FILE: arch/x86/mm/dump_pagetables.c:54:
+		seq_printf(m, "    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#139: FILE: arch/x86/mm/dump_pagetables.c:56:
+		seq_printf(m, "RW ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#141: FILE: arch/x86/mm/dump_pagetables.c:58:
+		seq_printf(m, "ro ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#143: FILE: arch/x86/mm/dump_pagetables.c:60:
+		seq_printf(m, "PWT ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#145: FILE: arch/x86/mm/dump_pagetables.c:62:
+		seq_printf(m, "    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#147: FILE: arch/x86/mm/dump_pagetables.c:64:
+		seq_printf(m, "PCD ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#149: FILE: arch/x86/mm/dump_pagetables.c:66:
+		seq_printf(m, "    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#154: FILE: arch/x86/mm/dump_pagetables.c:71:
+			seq_printf(m, "PSE ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#156: FILE: arch/x86/mm/dump_pagetables.c:73:
+			seq_printf(m, "    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#159: FILE: arch/x86/mm/dump_pagetables.c:76:
+			seq_printf(m, "pat ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#161: FILE: arch/x86/mm/dump_pagetables.c:78:
+			seq_printf(m, "    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#164: FILE: arch/x86/mm/dump_pagetables.c:81:
+		seq_printf(m, "GLB ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#166: FILE: arch/x86/mm/dump_pagetables.c:83:
+		seq_printf(m, "    ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#168: FILE: arch/x86/mm/dump_pagetables.c:85:
+		seq_printf(m, "NX ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#170: FILE: arch/x86/mm/dump_pagetables.c:87:
+		seq_printf(m, "x  ");

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#178: FILE: arch/x86/mm/dump_pagetables.c:95:
+	if (u>>47)
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: arch/x86/mm/dump_pagetables.c:106:
+static void note_page(struct seq_file *m, struct pg_state *st,
+					pgprot_t new_prot, int level)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/x86/mm/dump_pagetables.c:118:
+	if ((prot != cur || level != st->level) &&
+				st->current_address != st->start_address) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/x86/mm/dump_pagetables.c:128:
+		if (!st->printed_vmalloc &&
+				st->start_address >= VMALLOC_START) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#212: FILE: arch/x86/mm/dump_pagetables.c:129:
+			seq_printf(m, "---[ VMALLOC SPACE ]---\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: arch/x86/mm/dump_pagetables.c:133:
+		if (!st->printed_modules &&
+				st->start_address >= MODULES_VADDR) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#217: FILE: arch/x86/mm/dump_pagetables.c:134:
+			seq_printf(m, "---[ MODULES SPACE ]---\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: arch/x86/mm/dump_pagetables.c:138:
+		if (st->printed_modules < 2 &&
+				st->start_address >= MODULES_END) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#222: FILE: arch/x86/mm/dump_pagetables.c:139:
+			seq_printf(m, "---[ END MODULES SPACE ]---\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/x86/mm/dump_pagetables.c:143:
+		if (!st->printed_vmemmap &&
+				st->start_address >= VMEMMAP_START) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#227: FILE: arch/x86/mm/dump_pagetables.c:144:
+			seq_printf(m, "---[ VMMEMMAP SPACE ]---\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/x86/mm/dump_pagetables.c:148:
+		if (!st->printed_highmap &&
+				st->start_address >= __START_KERNEL_map) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#232: FILE: arch/x86/mm/dump_pagetables.c:149:
+			seq_printf(m, "---[ HIGH KERNEL MAPPING ]---\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: arch/x86/mm/dump_pagetables.c:157:
+		seq_printf(m, "[ %016lx -  %016lx   ",
+				st->start_address, st->current_address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: arch/x86/mm/dump_pagetables.c:172:
+			seq_printf(m, "                           L%i]\n",
+					st->level);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: arch/x86/mm/dump_pagetables.c:181:
+static void walk_level_4(struct seq_file *m, struct pg_state *st, pmd_t addr,
+							unsigned long P)

CHECK:SPACING: No space is necessary after a cast
#269: FILE: arch/x86/mm/dump_pagetables.c:186:
+	start = (pte_t *) pmd_page_vaddr(addr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#279: FILE: arch/x86/mm/dump_pagetables.c:196:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: arch/x86/mm/dump_pagetables.c:198:
+static void walk_level_3(struct seq_file *m, struct pg_state *st, pud_t addr,
+							unsigned long P)

CHECK:SPACING: No space is necessary after a cast
#286: FILE: arch/x86/mm/dump_pagetables.c:203:
+	start = (pmd_t *) pud_page_vaddr(addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#289: FILE: arch/x86/mm/dump_pagetables.c:206:
+		if (!pmd_none(*start)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/x86/mm/dump_pagetables.c:215:
+				walk_level_4(m, st, *start,
+							P + i * LEVEL_3_MULT);

CHECK:BRACES: Unbalanced braces around else statement
#299: FILE: arch/x86/mm/dump_pagetables.c:216:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: arch/x86/mm/dump_pagetables.c:222:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: arch/x86/mm/dump_pagetables.c:224:
+static void walk_level_2(struct seq_file *m, struct pg_state *st, pgd_t addr,
+							unsigned long P)

CHECK:SPACING: No space is necessary after a cast
#312: FILE: arch/x86/mm/dump_pagetables.c:229:
+	start = (pud_t *) pgd_page_vaddr(addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#315: FILE: arch/x86/mm/dump_pagetables.c:232:
+		if (!pud_none(*start)) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: arch/x86/mm/dump_pagetables.c:241:
+				walk_level_3(m, st, *start,
+					P + i * LEVEL_2_MULT);

CHECK:BRACES: Unbalanced braces around else statement
#325: FILE: arch/x86/mm/dump_pagetables.c:242:
+		} else

CHECK:SPACING: No space is necessary after a cast
#334: FILE: arch/x86/mm/dump_pagetables.c:251:
+	pgd_t *start = (pgd_t *) &init_level4_pgt;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#357: FILE: arch/x86/mm/dump_pagetables.c:274:
+static int ptdump_open(struct inode *inode, struct file *filp)
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#359: FILE: arch/x86/mm/dump_pagetables.c:276:
+	return single_open(filp, ptdump_show, NULL);
 	                   ^^^^

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#381: FILE: arch/x86/mm/dump_pagetables.c:298:
+__initcall(pt_dump_init);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 26 warnings, 27 checks, 322 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
