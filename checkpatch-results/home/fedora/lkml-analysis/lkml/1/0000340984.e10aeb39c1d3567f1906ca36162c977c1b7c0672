WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: arch/x86/kernel/reboot.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#74: FILE: arch/x86/kernel/reboot.c:8:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#85: FILE: arch/x86/kernel/reboot.c:19:
+# include <asm/pgtable.h>

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#94: FILE: arch/x86/kernel/reboot.c:28:
+EXPORT_SYMBOL(pm_power_off);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: arch/x86/kernel/reboot.c:40:
+/* reboot=b[ios] | s[mp] | t[riple] | k[bd] | e[fi] [, [w]arm | [c]old]
+   warm   Don't set the cold reboot flag

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#131: FILE: arch/x86/kernel/reboot.c:65:
+			if (isdigit(*(str+1))) {
 			                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#132: FILE: arch/x86/kernel/reboot.c:66:
+				reboot_cpu = (int) (*(str+1) - '0');

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: arch/x86/kernel/reboot.c:66:
+				reboot_cpu = (int) (*(str+1) - '0');
 				                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: arch/x86/kernel/reboot.c:67:
+				if (isdigit(*(str+2)))
 				                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#134: FILE: arch/x86/kernel/reboot.c:68:
+					reboot_cpu = reboot_cpu*10 + (int)(*(str+2) - '0');
 					                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#134: FILE: arch/x86/kernel/reboot.c:68:
+					reboot_cpu = reboot_cpu*10 + (int)(*(str+2) - '0');
 					                                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#137: FILE: arch/x86/kernel/reboot.c:71:
+				/* we will leave sorting out the final value
+				   when we are ready to reboot, since we might not

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: arch/x86/kernel/reboot.c:72:
+				   have set up boot_cpu_id or smp_num_cpu */

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#165: FILE: arch/x86/kernel/reboot.c:99:
+__setup("reboot=", reboot_setup);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: arch/x86/kernel/reboot.c:101:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#182: FILE: arch/x86/kernel/reboot.c:116:
+		printk(KERN_INFO "%s series board detected. Selecting BIOS-method for reboots.\n", d->ident);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#182: FILE: arch/x86/kernel/reboot.c:116:
+		printk(KERN_INFO "%s series board detected. Selecting BIOS-method for reboots.\n", d->ident);

WARNING:MISPLACED_INIT: __initdata should be placed after reboot_dmi_table[]
#187: FILE: arch/x86/kernel/reboot.c:121:
+static struct dmi_system_id __initdata reboot_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#248: FILE: arch/x86/kernel/reboot.c:182:
+/* The following code and data reboots the machine by switching to real
+   mode and jumping to the BIOS reset entry point, as if the CPU has

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#252: FILE: arch/x86/kernel/reboot.c:186:
+   to stop this code working; hence the copious comments. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#255: FILE: arch/x86/kernel/reboot.c:189:
+real_mode_gdt_entries [3] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: arch/x86/kernel/reboot.c:196:
+real_mode_gdt = { sizeof (real_mode_gdt_entries) - 1, (long)real_mode_gdt_entries },

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#266: FILE: arch/x86/kernel/reboot.c:200:
+/* This is 16-bit protected mode code to disable paging and the cache,
+   switch to real mode and jump to the BIOS reset code.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#282: FILE: arch/x86/kernel/reboot.c:216:
+   occurred; hopefully real BIOSs don't assume much. */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#283: FILE: arch/x86/kernel/reboot.c:217:
+static unsigned char real_mode_switch [] =

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#284: FILE: arch/x86/kernel/reboot.c:218:
+static unsigned char real_mode_switch [] =
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#297: FILE: arch/x86/kernel/reboot.c:231:
+};
+static unsigned char jump_to_bios [] =

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#297: FILE: arch/x86/kernel/reboot.c:231:
+static unsigned char jump_to_bios [] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#298: FILE: arch/x86/kernel/reboot.c:232:
+static unsigned char jump_to_bios [] =
+{

WARNING:TYPO_SPELLING: 'aways' may be misspelled - perhaps 'always'?
#305: FILE: arch/x86/kernel/reboot.c:239:
+ * We assume that length will aways be less that 100!
                               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#312: FILE: arch/x86/kernel/reboot.c:246:
+	/* Write zero to CMOS register number 0x0f, which the BIOS POST
+	   routine will recognize as telling it to do a proper reboot.  (Well

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#325: FILE: arch/x86/kernel/reboot.c:259:
+	/* Remap the kernel at virtual address zero, as well as offset zero
+	   from the kernel segment.  This assumes the kernel segment starts at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#326: FILE: arch/x86/kernel/reboot.c:260:
+	   virtual address PAGE_OFFSET. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: arch/x86/kernel/reboot.c:262:
+	memcpy(swapper_pg_dir, swapper_pg_dir + USER_PGD_PTRS,
+		sizeof(swapper_pg_dir [0]) * KERNEL_PGD_PTRS);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#328: FILE: arch/x86/kernel/reboot.c:262:
+		sizeof(swapper_pg_dir [0]) * KERNEL_PGD_PTRS);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#336: FILE: arch/x86/kernel/reboot.c:270:
+	/* Write 0x1234 to absolute memory location 0x472.  The BIOS reads
+	   this on booting to tell it to "Bypass memory test (also warm

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#339: FILE: arch/x86/kernel/reboot.c:273:
+	   too. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#343: FILE: arch/x86/kernel/reboot.c:277:
+	/* For the switch to real mode, copy some code to low memory.  It has
+	   to be in the first 64k because it is running in 16-bit mode, and it

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#346: FILE: arch/x86/kernel/reboot.c:280:
+	   of BIOS variables. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: arch/x86/kernel/reboot.c:282:
+	memcpy((void *)(0x1000 - sizeof(real_mode_switch) - 100),
+		real_mode_switch, sizeof (real_mode_switch));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: arch/x86/kernel/reboot.c:282:
+		real_mode_switch, sizeof (real_mode_switch));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: arch/x86/kernel/reboot.c:289:
+	/* Set up a GDT from which we can load segment descriptors for real
+	   mode.  The GDT is not used in real mode; it is just needed here to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#356: FILE: arch/x86/kernel/reboot.c:290:
+	   prepare the descriptors. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#360: FILE: arch/x86/kernel/reboot.c:294:
+	/* Load the data segment registers, and thus the descriptors ready for
+	   real mode.  The base address of each segment is 0x100, 16 times the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: arch/x86/kernel/reboot.c:297:
+	   the values are consistent for real mode operation already. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#372: FILE: arch/x86/kernel/reboot.c:306:
+	/* Jump to the 16-bit code that we copied earlier.  It disables paging
+	   and the cache, switches to real mode, and jumps to the BIOS reset

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#373: FILE: arch/x86/kernel/reboot.c:307:
+	   entry point. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: arch/x86/kernel/reboot.c:310:
+				: "i" ((void *)(0x1000 - sizeof (real_mode_switch) - 100)));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#378: FILE: arch/x86/kernel/reboot.c:312:
+}
+#ifdef CONFIG_APM_MODULE

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#406: FILE: arch/x86/kernel/reboot.c:340:
+				udelay(50);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#408: FILE: arch/x86/kernel/reboot.c:342:
+				udelay(50);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: arch/x86/kernel/reboot.c:365:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reboot_cpu < NR_CPUS'
#454: FILE: arch/x86/kernel/reboot.c:388:
+	if ((reboot_cpu != -1) && (reboot_cpu < NR_CPUS) &&
+		cpu_isset(reboot_cpu, cpu_online_map))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#454: FILE: arch/x86/kernel/reboot.c:388:
+	if ((reboot_cpu != -1) && (reboot_cpu < NR_CPUS) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: arch/x86/kernel/reboot.c:389:
+	if ((reboot_cpu != -1) && (reboot_cpu < NR_CPUS) &&
+		cpu_isset(reboot_cpu, cpu_online_map))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#489: FILE: arch/x86/kernel/reboot.c:423:
+	printk("machine restart\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340984.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 32 warnings, 19 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340984.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
