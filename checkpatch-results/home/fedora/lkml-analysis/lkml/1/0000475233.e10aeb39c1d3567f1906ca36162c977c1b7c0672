WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: include/linux/clockchips.h:1:
+/*  linux/include/linux/clockchips.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#62: FILE: include/linux/clockchips.h:1:
+/*  linux/include/linux/clockchips.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clock_event_device *' should also have an identifier name
#144: FILE: include/linux/clockchips.h:83:
+	int			(*set_next_event)(unsigned long evt,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clock_event_device *' should also have an identifier name
#146: FILE: include/linux/clockchips.h:85:
+	void			(*set_mode)(enum clock_event_mode mode,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clock_event_device *' should also have an identifier name
#148: FILE: include/linux/clockchips.h:87:
+	void			(*event_handler)(struct clock_event_device *);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#169: FILE: include/linux/clockchips.h:108:
+	uint64_t tmp = ((uint64_t)ticks) << shift;

CHECK:SPACING: No space is necessary after a cast
#172: FILE: include/linux/clockchips.h:111:
+	return (unsigned long) tmp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: include/linux/clockchips.h:115:
+extern unsigned long clockevent_delta2ns(unsigned long latch,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/linux/clockchips.h:117:
+extern void clockevents_register_device(struct clock_event_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/linux/clockchips.h:119:
+extern void clockevents_exchange_device(struct clock_event_device *old,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/clockchips.h:124:
+extern void clockevents_release_device(struct clock_event_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/linux/clockchips.h:125:
+extern void clockevents_set_mode(struct clock_event_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: include/linux/clockchips.h:127:
+extern int clockevents_register_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: include/linux/clockchips.h:128:
+extern void clockevents_unregister_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: include/linux/clockchips.h:129:
+extern int clockevents_program_event(struct clock_event_device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/clockchips.h:132:
+extern void clockevents_resume_events(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/clockchips.h:133:
+extern void clockevents_notify(unsigned long reason, void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: include/linux/hrtimer.h:147:
+extern ktime_t ktime_get(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: include/linux/hrtimer.h:148:
+extern ktime_t ktime_get_real(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#277: FILE: kernel/time/clockevents.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#278: FILE: kernel/time/clockevents.c:2:
+ * linux/kernel/time/clockevents.c

CHECK:SPACING: No space is necessary after a cast
#318: FILE: kernel/time/clockevents.c:42:
+	u64 clc = ((u64) latch << evt->shift);

CHECK:SPACING: No space is necessary after a cast
#326: FILE: kernel/time/clockevents.c:50:
+	return (unsigned long) clc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: kernel/time/clockevents.c:61:
+void clockevents_set_mode(struct clock_event_device *dev,
+				 enum clock_event_mode mode)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#354: FILE: kernel/time/clockevents.c:78:
+	int64_t delta;

CHECK:SPACING: No space is necessary after a cast
#371: FILE: kernel/time/clockevents.c:95:
+	return dev->set_next_event((unsigned long) clc, dev);

WARNING:TYPO_SPELLING: 'availble' may be misspelled - perhaps 'available'?
#408: FILE: kernel/time/clockevents.c:132:
+ * Called after a notify add to make devices availble which were
                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#430: FILE: kernel/time/clockevents.c:154:
+	BUG_ON(dev->mode != CLOCK_EVT_MODE_UNUSED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#473: FILE: kernel/time/clockevents.c:197:
+		BUG_ON(new->mode != CLOCK_EVT_MODE_UNUSED);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#610: FILE: kernel/time/clockevents.c:334:
+		error = sysdev_create_file(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#634: FILE: kernel/timer.c:877:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000475233.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 21 checks, 557 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000475233.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
