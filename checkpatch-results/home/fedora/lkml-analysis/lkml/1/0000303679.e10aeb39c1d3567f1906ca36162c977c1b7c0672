WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#59: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:41:
+extern struct mutex buffer_mutex;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:47:
+extern struct workqueue_struct *oprofile_spu_wq;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#78: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:137:
+static void profile_spus_record_samples (struct work_struct *ws) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#78: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:137:
+static void profile_spus_record_samples (struct work_struct *ws) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#102: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:191:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#106: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:195:
+	/* schedule the funtion to record the data */
 	                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#137: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:35:
+extern struct mutex buffer_mutex;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#138: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:36:
+extern struct workqueue_struct *oprofile_spu_wq;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#139: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:37:
+extern int calls_to_record_switch;

CHECK:CAMELCASE: Avoid CamelCase: <objectId>
#158: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:56:
+	unsigned long objectId;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#162: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:60:
+int calls_to_record_switch = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#163: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:61:
+int record_spu_start_flag = 0;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#186: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:317:
+static void record_spu_process_switch(struct work_struct *ws) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#188: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:319:
+	int req_processed=0;
 	                 ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#190: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:321:
+	struct spus_cntxt_sw_data_s *data
+		= container_of(ws, struct spus_cntxt_sw_data_s,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#202: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:333:
+	for (spu = 0; spu < data->num_spu_nodes; spu ++) {
 	                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#246: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:374:
+		printk(KERN_ERR "SPU_PROF: "

WARNING:SPLIT_STRING: quoted string split across lines
#247: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:375:
+		printk(KERN_ERR "SPU_PROF: "
+		       "%s, line %d: prepare_cached_spu_info call "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#248: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:376:
+		       "%s, line %d: prepare_cached_spu_info call "
+		       "failed, returned %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#249: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:377:
+		       __FUNCTION__, __LINE__, retval);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#259: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:384:
+		printk(KERN_ERR "SPU_PROF: "

WARNING:SPLIT_STRING: quoted string split across lines
#260: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:385:
+		printk(KERN_ERR "SPU_PROF: "
+		       "%s, line %d: get_exec_dcookie_and_offset call "

WARNING:SPLIT_STRING: quoted string split across lines
#261: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:386:
+		       "%s, line %d: get_exec_dcookie_and_offset call "
+		       "failed, returned %lu\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#262: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:387:
+		       __FUNCTION__, __LINE__, app_dcookie);

WARNING:TYPO_SPELLING: 'contect' may be misspelled - perhaps 'contact'?
#280: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:392:
+	/* save the spu contect info */
 	                ^^^^^^^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#319: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:477:
+	for (k = 0; k<(MAX_NUMNODES * 8); k++) {
 	             ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#385: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:591:
+	for (k = 0; k<(MAX_NUMNODES * 8); k++)
 	             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:592:
+^I        if (spus_cntxt_sw_data.spu_data[k].valid_entry == 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:593:
+			pr_debug ("spu_sync_stop -- removed "\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#387: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:593:
+			pr_debug ("spu_sync_stop -- removed "\

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spu_sync_stop', this function's name, in a string
#387: FILE: arch/powerpc/oprofile/cell/spu_task_sync.c:593:
+			pr_debug ("spu_sync_stop -- removed "\

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 19 warnings, 3 checks, 335 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
