WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:REPEATED_WORD: Possible repeated word: 'debugfs'
#107: FILE: Documentation/fault-injection/provoke-crashes.txt:32:
+  mount -t debugfs debugfs /mnt

CHECK:LINE_SPACING: Please don't use multiple blank lines
#236: FILE: drivers/misc/lkdtm.c:222:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: drivers/misc/lkdtm.c:273:
+	case BUG:

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: drivers/misc/lkdtm.c:274:
+		BUG();

CHECK:SPACING: No space is necessary after a cast
#305: FILE: drivers/misc/lkdtm.c:277:
+		*((int *) 0) = 0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#312: FILE: drivers/misc/lkdtm.c:284:
+		(void) recursive_loop(0);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#315: FILE: drivers/misc/lkdtm.c:287:
+		volatile u32 data[8];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#316: FILE: drivers/misc/lkdtm.c:288:
+		volatile u32 *p = data;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#322: FILE: drivers/misc/lkdtm.c:294:
+		static u8 data[5] __attribute__((aligned(4))) = {1, 2,

WARNING:TABSTOP: Statements should start on a tabstop
#331: FILE: drivers/misc/lkdtm.c:303:
+		 break;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#355: FILE: drivers/misc/lkdtm.c:327:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#360: FILE: drivers/misc/lkdtm.c:332:
+	printk(KERN_INFO "lkdtm: Crash point %s of type %s hit, trigger in %d rounds\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/misc/lkdtm.c:333:
+	printk(KERN_INFO "lkdtm: Crash point %s of type %s hit, trigger in %d rounds\n",
+			cp_name_to_str(cpoint), cp_type_to_str(cptype), count);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lkdtm.entry"
#405: FILE: drivers/misc/lkdtm.c:346:
+	if (lkdtm.entry != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#421: FILE: drivers/misc/lkdtm.c:386:
+		printk(KERN_INFO "lkdtm: Crash point not available\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#428: FILE: drivers/misc/lkdtm.c:391:
+		printk(KERN_INFO "lkdtm: Invalid Crash Point\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#436: FILE: drivers/misc/lkdtm.c:397:
+		printk(KERN_INFO "lkdtm: Couldn't register jprobe\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/misc/lkdtm.c:405:
+static ssize_t do_register_entry(enum cname which, struct file *f,
+		const char __user *user_buf, size_t count, loff_t *off)

CHECK:SPACING: No space is necessary after a cast
#456: FILE: drivers/misc/lkdtm.c:417:
+		free_page((unsigned long) buf);

CHECK:SPACING: No space is necessary after a cast
#464: FILE: drivers/misc/lkdtm.c:425:
+	free_page((unsigned long) buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/misc/lkdtm.c:441:
+static ssize_t lkdtm_debugfs_read(struct file *f, char __user *user_buf,
+		size_t count, loff_t *off)

CHECK:SPACING: No space is necessary after a cast
#494: FILE: drivers/misc/lkdtm.c:455:
+	free_page((unsigned long) buf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: drivers/misc/lkdtm.c:465:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/misc/lkdtm.c:467:
+static ssize_t int_hardware_entry(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/misc/lkdtm.c:473:
+static ssize_t int_hw_irq_en(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/misc/lkdtm.c:479:
+static ssize_t int_tasklet_entry(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/misc/lkdtm.c:485:
+static ssize_t fs_devrw_entry(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/misc/lkdtm.c:491:
+static ssize_t mem_swapout_entry(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: drivers/misc/lkdtm.c:497:
+static ssize_t timeradd_entry(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/misc/lkdtm.c:503:
+static ssize_t scsi_dispatch_cmd_entry(struct file *f,
+		const char __user *buf, size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/misc/lkdtm.c:509:
+static ssize_t ide_core_cp_entry(struct file *f, const char __user *buf,
+		size_t count, loff_t *off)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: drivers/misc/lkdtm.c:516:
+static ssize_t direct_entry(struct file *f, const char __user *user_buf,
+		size_t count, loff_t *off)

CHECK:SPACING: No space is necessary after a cast
#569: FILE: drivers/misc/lkdtm.c:530:
+		free_page((unsigned long) buf);

CHECK:SPACING: No space is necessary after a cast
#577: FILE: drivers/misc/lkdtm.c:538:
+	free_page((unsigned long) buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#581: FILE: drivers/misc/lkdtm.c:542:
+	printk(KERN_INFO "lkdtm: Performing direct entry %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/misc/lkdtm.c:543:
+	printk(KERN_INFO "lkdtm: Performing direct entry %s\n",
+			cp_type_to_str(type));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#635: FILE: drivers/misc/lkdtm.c:596:
+		printk(KERN_ERR "lkdtm: creating root dir failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: drivers/misc/lkdtm.c:609:
+		de = debugfs_create_file(cur->name, 0644, lkdtm_debugfs_root,
+				NULL, &cur->fops);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de"
#649: FILE: drivers/misc/lkdtm.c:610:
+		if (de == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#650: FILE: drivers/misc/lkdtm.c:611:
+			printk(KERN_ERR "lkdtm: could not create %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: drivers/misc/lkdtm.c:612:
+			printk(KERN_ERR "lkdtm: could not create %s\n",
+					cur->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#657: FILE: drivers/misc/lkdtm.c:618:
+		printk(KERN_INFO "lkdtm: Invalid command\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#664: FILE: drivers/misc/lkdtm.c:625:
+			printk(KERN_INFO "lkdtm: Invalid crash point %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: drivers/misc/lkdtm.c:626:
+			printk(KERN_INFO "lkdtm: Invalid crash point %d\n",
+					cpoint);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#668: FILE: drivers/misc/lkdtm.c:629:
+		printk(KERN_INFO "lkdtm: Crash point %s of type %s registered\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#669: FILE: drivers/misc/lkdtm.c:630:
+		printk(KERN_INFO "lkdtm: Crash point %s of type %s registered\n",
+				cpoint_name, cpoint_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#671: FILE: drivers/misc/lkdtm.c:632:
+		printk(KERN_INFO "lkdtm: No crash points registered, enable through debugfs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#690: FILE: drivers/misc/lkdtm.c:647:
+	printk(KERN_INFO "lkdtm: Crash point unregistered\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015608.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 29 checks, 622 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015608.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
