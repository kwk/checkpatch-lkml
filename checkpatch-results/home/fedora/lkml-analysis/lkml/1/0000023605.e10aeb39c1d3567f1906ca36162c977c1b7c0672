WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#170: FILE: fs/exec.c:554:
+	BUG_ON(vma_adjust(vma, new_start, new_end, vma->vm_pgoff, NULL));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/mm.h:1115:
+extern int vma_adjust(struct vm_area_struct *vma, unsigned long start,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: include/linux/mm.h:1116:
+extern int vma_adjust(struct vm_area_struct *vma, unsigned long start,
 	unsigned long end, pgoff_t pgoff, struct vm_area_struct *insert);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#252: FILE: include/linux/rmap.h:112:
+void unlink_anon_vmas(struct vm_area_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#253: FILE: include/linux/rmap.h:113:
+int anon_vma_clone(struct vm_area_struct *, struct vm_area_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#253: FILE: include/linux/rmap.h:113:
+int anon_vma_clone(struct vm_area_struct *, struct vm_area_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#254: FILE: include/linux/rmap.h:114:
+int anon_vma_fork(struct vm_area_struct *, struct vm_area_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#254: FILE: include/linux/rmap.h:114:
+int anon_vma_fork(struct vm_area_struct *, struct vm_area_struct *);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#261: FILE: include/linux/rmap.h:121:
+	BUG_ON(vma->anon_vma != next->anon_vma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: mm/memory-failure.c:377:
+		list_for_each_entry (vmac, &av->head, same_anon_vma) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: mm/mmap.c:502:
+int vma_adjust(struct vm_area_struct *vma, unsigned long start,
 	unsigned long end, pgoff_t pgoff, struct vm_area_struct *insert)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: mm/mmap.c:813:
+			err = vma_adjust(prev, prev->vm_start,
 				next->vm_end, prev->vm_pgoff, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: mm/mmap.c:816:
+			err = vma_adjust(prev, prev->vm_start,
 				end, prev->vm_pgoff, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: mm/mmap.c:831:
+			err = vma_adjust(prev, prev->vm_start,
 				addr, prev->vm_pgoff, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: mm/mmap.c:834:
+			err = vma_adjust(area, addr, next->vm_end,
 				next->vm_pgoff - pglen, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: mm/rmap.c:292:
+	anon_vma_chain_cachep = kmem_cache_create("anon_vma_chain",
+			sizeof(struct anon_vma_chain), 0,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#967: FILE: mm/rmap.c:293:
+			SLAB_DESTROY_BY_RCU|SLAB_PANIC, anon_vma_chain_ctor);
 			                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000023605.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 9 checks, 840 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000023605.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
