ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#72: FILE: drivers/mtd/mtdchar.c:429:
file *file,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#78: FILE: drivers/mtd/mtdchar.c:435:
+		uint32_t ur_idx;

CHECK:SPACING: No space is necessary after a cast
#81: FILE: drivers/mtd/mtdchar.c:438:
+			(struct region_info_user64 *) argp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->regionindex
#83: FILE: drivers/mtd/mtdchar.c:440:
+		if (get_user(ur_idx, &(ur->regionindex)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtd->eraseregions[ur_idx]
#86: FILE: drivers/mtd/mtdchar.c:443:
+		kr = &(mtd->eraseregions[ur_idx]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->offset
#88: FILE: drivers/mtd/mtdchar.c:445:
+		if (put_user(kr->offset, &(ur->offset))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#89: FILE: drivers/mtd/mtdchar.c:446:
+		if (put_user(kr->offset, &(ur->offset))
+		    || put_user(kr->erasesize, &(ur->erasesize))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->erasesize
#89: FILE: drivers/mtd/mtdchar.c:446:
+		    || put_user(kr->erasesize, &(ur->erasesize))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#90: FILE: drivers/mtd/mtdchar.c:447:
+		    || put_user(kr->erasesize, &(ur->erasesize))
+		    || put_user(kr->numblocks, &(ur->numblocks)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->numblocks
#90: FILE: drivers/mtd/mtdchar.c:447:
+		    || put_user(kr->numblocks, &(ur->numblocks)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: drivers/mtd/mtdchar.c:499:
+				if (copy_from_user(&einfo64, argp,
+					    sizeof(struct erase_info_user64))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/mtd/mtdchar.c:509:
+				if (copy_from_user(&einfo32, argp,
+					    sizeof(struct erase_info_user))) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#174: FILE: drivers/mtd/mtdchar.c:552:
+		uint32_t __user *retp;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/mtd/mtdchar.c:561:
+			if (copy_from_user(&buf, argp,
+				    sizeof(struct mtd_oob_buf64)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/mtd/mtdchar.c:569:
+			if (copy_from_user(&buf32, argp,
+				    sizeof(struct mtd_oob_buf)))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#232: FILE: drivers/mtd/mtdchar.c:627:
+		uint32_t __user *retp;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/mtd/mtdchar.c:633:
+			if (copy_from_user(&buf, user_buf,
+				    sizeof(struct mtd_oob_buf64)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/mtd/mtdchar.c:642:
+			if (copy_from_user(&buf32, user_buf,
+				    sizeof(struct mtd_oob_buf)))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#330: FILE: fs/compat_ioctl.c:1416:
+	u_int64_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#331: FILE: fs/compat_ioctl.c:1417:
+	u_int32_t res0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#332: FILE: fs/compat_ioctl.c:1418:
+	u_int32_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#334: FILE: fs/compat_ioctl.c:1420:
+	u_int32_t res1[8];

CHECK:SPACING: No space is necessary after a cast
#369: FILE: fs/compat_ioctl.c:1479:
+	err = sys_ioctl(fd, real_cmd, (unsigned long) buf);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#413: FILE: include/mtd/mtd-abi.h:14:
+	uint64_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#414: FILE: include/mtd/mtd-abi.h:15:
+	uint64_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#415: FILE: include/mtd/mtd-abi.h:16:
+	uint32_t res0[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#425: FILE: include/mtd/mtd-abi.h:26:
+	uint64_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#426: FILE: include/mtd/mtd-abi.h:27:
+	uint32_t res0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#427: FILE: include/mtd/mtd-abi.h:28:
+	uint32_t length;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#429: FILE: include/mtd/mtd-abi.h:30:
+	uint32_t res1[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#440: FILE: include/mtd/mtd-abi.h:67:
+	uint32_t size;			/* Total size of the MTD */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#441: FILE: include/mtd/mtd-abi.h:68:
+	uint32_t erasesize;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#442: FILE: include/mtd/mtd-abi.h:69:
+	uint32_t writesize;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#443: FILE: include/mtd/mtd-abi.h:70:
+	uint32_t oobsize;		/* OOB bytes per page (e.g. 16) */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#444: FILE: include/mtd/mtd-abi.h:71:
+	uint32_t ecctype;		/* Obsolete, always reports -1 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#445: FILE: include/mtd/mtd-abi.h:72:
+	uint32_t eccsize;		/* Obsolete, always reports 0 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#449: FILE: include/mtd/mtd-abi.h:76:
+	uint32_t type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#450: FILE: include/mtd/mtd-abi.h:77:
+	uint32_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#451: FILE: include/mtd/mtd-abi.h:78:
+	uint64_t size;			/* Total size of the MTD */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#452: FILE: include/mtd/mtd-abi.h:79:
+	uint32_t res0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#454: FILE: include/mtd/mtd-abi.h:81:
+	uint32_t res1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#461: FILE: include/mtd/mtd-abi.h:83:
+	uint32_t res2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#462: FILE: include/mtd/mtd-abi.h:84:
+	uint32_t oobsize;		/* OOB bytes per page (e.g. 16) */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#463: FILE: include/mtd/mtd-abi.h:85:
+	uint32_t res3[32];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#472: FILE: include/mtd/mtd-abi.h:97:
+	uint64_t offset;		/* At which this region starts,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: include/mtd/mtd-abi.h:98:
+					 * from the beginning of the MTD */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#474: FILE: include/mtd/mtd-abi.h:99:
+	uint32_t res0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#475: FILE: include/mtd/mtd-abi.h:100:
+	uint32_t erasesize;		/* For this region */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#476: FILE: include/mtd/mtd-abi.h:101:
+	uint32_t res1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#477: FILE: include/mtd/mtd-abi.h:102:
+	uint32_t numblocks;		/* Number of blocks in this region */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#478: FILE: include/mtd/mtd-abi.h:103:
+	uint32_t res2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#479: FILE: include/mtd/mtd-abi.h:104:
+	uint32_t regionindex;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#480: FILE: include/mtd/mtd-abi.h:105:
+	uint32_t res3[16];

WARNING:NEW_TYPEDEFS: do not add new typedefs
#509: FILE: include/mtd/mtd-user.h:19:
+typedef struct mtd_info_user64 mtd_info64_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#510: FILE: include/mtd/mtd-user.h:20:
+typedef struct erase_info_user64 erase_info64_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#511: FILE: include/mtd/mtd-user.h:21:
+typedef struct region_info_user64 region_info64_t;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 4 warnings, 51 checks, 420 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
