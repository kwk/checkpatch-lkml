WARNING:TYPO_SPELLING: 'prerequiste' may be misspelled - perhaps 'prerequisite'?
#42: 
This optimization is a prerequiste to the introduction of per processor
                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
single instruction. All the locations touched by this patchset are potential

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#49: 
are referring the the currently executing processor. In many cases we must

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: include/linux/percpu.h:179:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/linux/percpu.h:190:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/linux/percpu.h:192:
+  })$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pcp' may be better as '(pcp)' to avoid precedence issues
#124: FILE: include/linux/percpu.h:195:
+#define _this_cpu_generic_to_op(pcp, val, op)				\
+do {									\
+	preempt_disable();						\
+	*__this_cpu_ptr(&pcp) op val;					\
+	preempt_enable_no_resched();					\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: include/linux/percpu.h:234:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: include/linux/percpu.h:242:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: include/linux/percpu.h:244:
+  })$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#176: FILE: include/linux/percpu.h:247:
+#define __this_cpu_generic_to_op(pcp, val, op)				\
+do {									\
+	*__this_cpu_ptr(&(pcp)) op val;					\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 3 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
