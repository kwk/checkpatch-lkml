WARNING:TYPO_SPELLING: 'atribute' may be misspelled - perhaps 'attribute'?
#20: 
Subject: [RFC][PATCH 7/6] memcg: add atribute (for change bahavior of rmdir)
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'bahavior' may be misspelled - perhaps 'behavior'?
#20: 
Subject: [RFC][PATCH 7/6] memcg: add atribute (for change bahavior of rmdir)
                                                          ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> I would like this to be selectable, please. We don't want to break behaviour and

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#118: FILE: mm/memcontrol.c:198:
+};
+/* we may have to check status under racy situation. use global mutex. */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: mm/memcontrol.c:205:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: mm/memcontrol.c:1510:
 
+

ERROR:SPACING: space required after that ';' (ctx:VxV)
#178: FILE: mm/memcontrol.c:1523:
+	for (; *c && isspace(*c);c++);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#178: FILE: mm/memcontrol.c:1523:
+	for (; *c && isspace(*c);c++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#184: FILE: mm/memcontrol.c:1529:
+	for (; *c && !isspace(*c);c++);
 	                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#184: FILE: mm/memcontrol.c:1529:
+	for (; *c && !isspace(*c);c++);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#186: FILE: mm/memcontrol.c:1531:
+	for (; *c && isspace(*c);c++);
 	                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#186: FILE: mm/memcontrol.c:1531:
+	for (; *c && isspace(*c);c++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#189: FILE: mm/memcontrol.c:1534:
+	for (; *c; c++);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#193: FILE: mm/memcontrol.c:1538:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: mm/memcontrol.c:1541:
+static int mem_cgroup_write_attr(struct cgroup *cont,
+				     struct cftype *cft,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#206: FILE: mm/memcontrol.c:1551:
+	ret = parse_attr_option((char*)buffer, &attr, &option, &end);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#210: FILE: mm/memcontrol.c:1555:
+	for (i = 0; i < MEMCG_LAST_ATTR; i++) {
+

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: mm/memcontrol.c:1565:
+	switch(i) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: mm/memcontrol.c:1584:
+static int mem_cgroup_read_attr(struct cgroup *cont, struct cftype *cft,
+				 struct seq_file *m)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: mm/memcontrol.c:1592:
+		seq_printf(m, "%s drop\n",s);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: mm/memcontrol.c:1594:
+		seq_printf(m, "%s keep\n",s);
 		                         ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207594.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 3 warnings, 7 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207594.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
