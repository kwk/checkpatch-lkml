WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
      ide: remove static prototypes from include/asm-mips/mach-au1x00/au1xxx_ide.h

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: drivers/ide/Kconfig:756:
+config BLK_DEV_CELLEB
+	tristate "Toshiba's Cell Reference Set IDE support"
+	depends on PPC_CELLEB
+	help
+	  This driver provides support for the built-in IDE controller on
+	  Toshiba Cell Reference Board.
+	  If unsure, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: drivers/ide/mips/au1xxx-ide.c:685:
+^Ihw ^I^I^I^I= &hwif->hw;$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#285: FILE: drivers/ide/pci/cmd64x.c:3:
+ * linux/drivers/ide/pci/cmd64x.c		Version 1.42	Feb 8, 2007

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SPACING: space prohibited after that open parenthesis '('
#335: FILE: drivers/ide/pci/cmd64x.c:288:
+	setup_count  = quantize_timing( setup_time, clock_time);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#336: FILE: drivers/ide/pci/cmd64x.c:289:
+	cycle_count  = quantize_timing( cycle_time, clock_time);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#377: FILE: drivers/ide/pci/jmicron.c:249:
+#if defined(CONFIG_ATA) || defined(CONFIG_ATA_MODULE)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#378: FILE: drivers/ide/pci/jmicron.c:250:
+#define JMB_CLASS	PCI_CLASS_STORAGE_IDE << 8

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#405: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#410: FILE: drivers/ide/pci/scc_pata.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#430: FILE: drivers/ide/pci/scc_pata.c:21:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#431: FILE: drivers/ide/pci/scc_pata.c:22:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:CAMELCASE: Avoid CamelCase: <JCHSTtbl>
#482: FILE: drivers/ide/pci/scc_pata.c:73:
+static unsigned long JCHSTtbl[2][7] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <JCHHTtbl>
#488: FILE: drivers/ide/pci/scc_pata.c:79:
+static unsigned long JCHHTtbl[2][7] = {

CHECK:CAMELCASE: Avoid CamelCase: <JCHCTtbl>
#494: FILE: drivers/ide/pci/scc_pata.c:85:
+static unsigned long JCHCTtbl[2][7] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#499: FILE: drivers/ide/pci/scc_pata.c:90:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <JCHDCTxtbl>
#502: FILE: drivers/ide/pci/scc_pata.c:93:
+static unsigned long JCHDCTxtbl[2][7] = {

CHECK:CAMELCASE: Avoid CamelCase: <JCSTWTxtbl>
#508: FILE: drivers/ide/pci/scc_pata.c:99:
+static unsigned long JCSTWTxtbl[2][7] = {

CHECK:CAMELCASE: Avoid CamelCase: <JCTSStbl>
#514: FILE: drivers/ide/pci/scc_pata.c:105:
+static unsigned long JCTSStbl[2][7] = {

CHECK:CAMELCASE: Avoid CamelCase: <JCENVTtbl>
#520: FILE: drivers/ide/pci/scc_pata.c:111:
+static unsigned long JCENVTtbl[2][7] = {

CHECK:CAMELCASE: Avoid CamelCase: <JCACTSELtbl>
#526: FILE: drivers/ide/pci/scc_pata.c:117:
+static unsigned long JCACTSELtbl[2][7] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#531: FILE: drivers/ide/pci/scc_pata.c:122:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#534: FILE: drivers/ide/pci/scc_pata.c:125:
+	u32 data = in_be32((void*)port);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: drivers/ide/pci/scc_pata.c:126:
+	u32 data = in_be32((void*)port);
+	return (u8)data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#540: FILE: drivers/ide/pci/scc_pata.c:131:
+	u32 data = in_be32((void*)port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: drivers/ide/pci/scc_pata.c:132:
+	u32 data = in_be32((void*)port);
+	return (u16)data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#547: FILE: drivers/ide/pci/scc_pata.c:138:
+	u16 *ptr = (u16 *)addr;
+	while (count--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#547: FILE: drivers/ide/pci/scc_pata.c:138:
+	while (count--) {
+		*ptr++ = le16_to_cpu(in_be32((void*)port));
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#548: FILE: drivers/ide/pci/scc_pata.c:139:
+		*ptr++ = le16_to_cpu(in_be32((void*)port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#555: FILE: drivers/ide/pci/scc_pata.c:146:
+	u16 *ptr = (u16 *)addr;
+	while (count--) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#556: FILE: drivers/ide/pci/scc_pata.c:147:
+		*ptr++ = le16_to_cpu(in_be32((void*)port));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#557: FILE: drivers/ide/pci/scc_pata.c:148:
+		*ptr++ = le16_to_cpu(in_be32((void*)port));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#563: FILE: drivers/ide/pci/scc_pata.c:154:
+	out_be32((void*)port, addr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#568: FILE: drivers/ide/pci/scc_pata.c:159:
+	out_be32((void*)port, addr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#572: FILE: drivers/ide/pci/scc_pata.c:163:
+scc_ide_outbsync(ide_drive_t * drive, u8 addr, unsigned long port)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#576: FILE: drivers/ide/pci/scc_pata.c:167:
+	out_be32((void*)port, addr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#578: FILE: drivers/ide/pci/scc_pata.c:169:
+	in_be32((void*)(hwif->dma_base + 0x01c));

WARNING:LINE_SPACING: Missing a blank line after declarations
#586: FILE: drivers/ide/pci/scc_pata.c:177:
+	u16 *ptr = (u16 *)addr;
+	while (count--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#586: FILE: drivers/ide/pci/scc_pata.c:177:
+	while (count--) {
+		out_be32((void*)port, cpu_to_le16(*ptr++));
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#587: FILE: drivers/ide/pci/scc_pata.c:178:
+		out_be32((void*)port, cpu_to_le16(*ptr++));

WARNING:LINE_SPACING: Missing a blank line after declarations
#595: FILE: drivers/ide/pci/scc_pata.c:186:
+	u16 *ptr = (u16 *)addr;
+	while (count--) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#596: FILE: drivers/ide/pci/scc_pata.c:187:
+		out_be32((void*)port, cpu_to_le16(*ptr++));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#597: FILE: drivers/ide/pci/scc_pata.c:188:
+		out_be32((void*)port, cpu_to_le16(*ptr++));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#660: FILE: drivers/ide/pci/scc_pata.c:251:
+	if (reg & CCKCTRL_ATACLKOEN) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#701: FILE: drivers/ide/pci/scc_pata.c:292:
+	if (reg & CCKCTRL_ATACLKOEN) {
[...]
+	} else {
[...]

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#738: FILE: drivers/ide/pci/scc_pata.c:329:
+		out_be32((void __iomem *)tdvhsel_port, (in_be32((void __iomem *)tdvhsel_port) & ~TDVHSEL_SLAVE) | jcactsel);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#742: FILE: drivers/ide/pci/scc_pata.c:333:
+		out_be32((void __iomem *)tdvhsel_port, (in_be32((void __iomem *)tdvhsel_port) & ~TDVHSEL_MASTER) | jcactsel);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#831: FILE: drivers/ide/pci/scc_pata.c:422:
+	out_be32((void __iomem *)hwif->dma_status, dma_stat|6);
 	                                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#836: FILE: drivers/ide/pci/scc_pata.c:427:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#845: FILE: drivers/ide/pci/scc_pata.c:436:
+static int scc_ide_dma_end(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#855: FILE: drivers/ide/pci/scc_pata.c:446:
+			printk(KERN_WARNING "%s: SERROR\n", SCC_PATA_NAME);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#856: FILE: drivers/ide/pci/scc_pata.c:447:
+			out_be32((void __iomem *)intsts_port, INTSTS_SERROR|INTSTS_BMSINT);
 			                                                   ^

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#858: FILE: drivers/ide/pci/scc_pata.c:449:
+			out_be32((void __iomem *)hwif->dma_command, in_be32((void __iomem *)hwif->dma_command) & ~QCHCD_IOS_SS);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#869: FILE: drivers/ide/pci/scc_pata.c:460:
+			printk(KERN_WARNING "%s: PRERR [addr:%x cmd:%x]\n", SCC_PATA_NAME, maea0, maec0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#869: FILE: drivers/ide/pci/scc_pata.c:460:
+			printk(KERN_WARNING "%s: PRERR [addr:%x cmd:%x]\n", SCC_PATA_NAME, maea0, maec0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#871: FILE: drivers/ide/pci/scc_pata.c:462:
+			out_be32((void __iomem *)intsts_port, INTSTS_PRERR|INTSTS_BMSINT);
 			                                                  ^

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#873: FILE: drivers/ide/pci/scc_pata.c:464:
+			out_be32((void __iomem *)hwif->dma_command, in_be32((void __iomem *)hwif->dma_command) & ~QCHCD_IOS_SS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#878: FILE: drivers/ide/pci/scc_pata.c:469:
+			printk(KERN_WARNING "%s: Response Error\n", SCC_PATA_NAME);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#879: FILE: drivers/ide/pci/scc_pata.c:470:
+			out_be32((void __iomem *)intsts_port, INTSTS_RERR|INTSTS_BMSINT);
 			                                                 ^

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#881: FILE: drivers/ide/pci/scc_pata.c:472:
+			out_be32((void __iomem *)hwif->dma_command, in_be32((void __iomem *)hwif->dma_command) & ~QCHCD_IOS_SS);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#886: FILE: drivers/ide/pci/scc_pata.c:477:
+			out_be32((void __iomem *)hwif->dma_command, in_be32((void __iomem *)hwif->dma_command) & ~QCHCD_IOS_SS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#888: FILE: drivers/ide/pci/scc_pata.c:479:
+			printk(KERN_WARNING "%s: Illegal Configuration\n", SCC_PATA_NAME);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#889: FILE: drivers/ide/pci/scc_pata.c:480:
+			out_be32((void __iomem *)intsts_port, INTSTS_ICERR|INTSTS_BMSINT);
 			                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#894: FILE: drivers/ide/pci/scc_pata.c:485:
+			printk(KERN_WARNING "%s: Internal Bus Error\n", SCC_PATA_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#942: FILE: drivers/ide/pci/scc_pata.c:533:
+		printk(KERN_WARNING "%s: (%s) called while not waiting\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: drivers/ide/pci/scc_pata.c:534:
+		printk(KERN_WARNING "%s: (%s) called while not waiting\n",
+			drive->name, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#943: FILE: drivers/ide/pci/scc_pata.c:534:
+			drive->name, __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#954: FILE: drivers/ide/pci/scc_pata.c:545:
+static int setup_mmio_scc (struct pci_dev *dev, const char *name)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#972: FILE: drivers/ide/pci/scc_pata.c:563:
+		printk(KERN_WARNING "%s: IDE controller MMIO ports not available.\n", SCC_PATA_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#972: FILE: drivers/ide/pci/scc_pata.c:563:
+		printk(KERN_WARNING "%s: IDE controller MMIO ports not available.\n", SCC_PATA_NAME);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#977: FILE: drivers/ide/pci/scc_pata.c:568:
+		printk(KERN_WARNING "%s: IDE controller MMIO ports not available.\n", SCC_PATA_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#977: FILE: drivers/ide/pci/scc_pata.c:568:
+		printk(KERN_WARNING "%s: IDE controller MMIO ports not available.\n", SCC_PATA_NAME);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#981: FILE: drivers/ide/pci/scc_pata.c:572:
+	if ((ctl_addr = ioremap(ctl_base, ctl_size)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#984: FILE: drivers/ide/pci/scc_pata.c:575:
+	if ((dma_addr = ioremap(dma_base, dma_size)) == NULL)

CHECK:SPACING: No space is necessary after a cast
#990: FILE: drivers/ide/pci/scc_pata.c:581:
+	pci_set_drvdata(dev, (void *) &scc_ports[i]);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1012: FILE: drivers/ide/pci/scc_pata.c:603:
+static int __devinit init_setup_scc(struct pci_dev *dev, ide_pci_device_t *d)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1026: FILE: drivers/ide/pci/scc_pata.c:617:
+	if (rc < 0) {
+		return rc;
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1041: FILE: drivers/ide/pci/scc_pata.c:632:
+	out_be32((void*)cckctrl_port, reg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1043: FILE: drivers/ide/pci/scc_pata.c:634:
+	out_be32((void*)cckctrl_port, reg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1045: FILE: drivers/ide/pci/scc_pata.c:636:
+	out_be32((void*)cckctrl_port, reg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1047: FILE: drivers/ide/pci/scc_pata.c:638:
+	out_be32((void*)cckctrl_port, reg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1050: FILE: drivers/ide/pci/scc_pata.c:641:
+		reg = in_be32((void*)cckctrl_port);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1053: FILE: drivers/ide/pci/scc_pata.c:644:
+		udelay(5000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#1053: FILE: drivers/ide/pci/scc_pata.c:644:
+		udelay(5000);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1057: FILE: drivers/ide/pci/scc_pata.c:648:
+	out_be32((void*)cckctrl_port, reg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1059: FILE: drivers/ide/pci/scc_pata.c:650:
+	out_be32((void*)ecmode_port, ECMODE_VALUE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1060: FILE: drivers/ide/pci/scc_pata.c:651:
+	out_be32((void*)mode_port, MODE_JCUSFEN);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1061: FILE: drivers/ide/pci/scc_pata.c:652:
+	out_be32((void*)intmask_port, INTMASK_MSK);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1072: FILE: drivers/ide/pci/scc_pata.c:663:
+static void __devinit init_mmio_iops_scc(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1114: FILE: drivers/ide/pci/scc_pata.c:705:
+static void __devinit init_iops_scc(ide_hwif_t *hwif)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1117: FILE: drivers/ide/pci/scc_pata.c:708:
+	struct pci_dev *dev =  hwif->pci_dev;
+	hwif->hwif_data = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_get_drvdata"
#1118: FILE: drivers/ide/pci/scc_pata.c:709:
+	if (pci_get_drvdata(dev) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1132: FILE: drivers/ide/pci/scc_pata.c:723:
+static void __devinit init_hwif_scc(ide_hwif_t *hwif)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1155: FILE: drivers/ide/pci/scc_pata.c:746:
+	if (in_be32((void __iomem *)(hwif->config_data + 0xff0)) & CCKCTRL_ATACLKOEN) {
[...]
+	} else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: drivers/ide/pci/scc_pata.c:766:
+  {^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: drivers/ide/pci/scc_pata.c:767:
+      .name^I^I= name_str,^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: drivers/ide/pci/scc_pata.c:768:
+      .init_setup^I= init_setup_scc,^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: drivers/ide/pci/scc_pata.c:769:
+      .init_iops^I= init_iops_scc,^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: drivers/ide/pci/scc_pata.c:770:
+      .init_hwif^I= init_hwif_scc,^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: drivers/ide/pci/scc_pata.c:771:
+      .channels^I= 1,^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: drivers/ide/pci/scc_pata.c:772:
+      .autodma^I= AUTODMA,^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: drivers/ide/pci/scc_pata.c:773:
+      .bootable^I= ON_BOARD,^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: drivers/ide/pci/scc_pata.c:774:
+  }$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1185: FILE: drivers/ide/pci/scc_pata.c:776:
+static ide_pci_device_t scc_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1198: FILE: drivers/ide/pci/scc_pata.c:789:
+static int __devinit scc_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1201: FILE: drivers/ide/pci/scc_pata.c:792:
+	ide_pci_device_t *d = &scc_chipsets[id->driver_data];
+	return d->init_setup(dev, d);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1211: FILE: drivers/ide/pci/scc_pata.c:802:
+static void __devexit scc_remove(struct pci_dev *dev)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1231: FILE: drivers/ide/pci/scc_pata.c:822:
+	iounmap((void*)ports->dma);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1232: FILE: drivers/ide/pci/scc_pata.c:823:
+	iounmap((void*)ports->ctl);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1258: FILE: drivers/ide/pci/scc_pata.c:849:
+/* -- No exit code?
+static void scc_ide_exit(void)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1265: FILE: drivers/ide/pci/scc_pata.c:856:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454940.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 58 warnings, 21 checks, 1183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454940.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
