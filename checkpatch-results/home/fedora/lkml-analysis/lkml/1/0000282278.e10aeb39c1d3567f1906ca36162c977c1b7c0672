WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
The alternate idea I suggested was to add a hook at a point where the first 

CHECK:BIT_MACRO: Prefer using the BIT macro
#108: FILE: kernel/sched.c:251:
+#define CPU_CGROUP_STAT_THRESHOLD (1 << 30)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: kernel/sched.c:264:
+static void __cpu_cgroup_stat_add(struct cpu_cgroup_stat *stat,
+		enum cpu_cgroup_stat_index idx, int val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: kernel/sched.c:3866:
+		struct task_group *tg;
+		tg = task_group(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: kernel/sched.c:3868:
+		__cpu_cgroup_stat_add(tg->stat, CPU_CGROUP_STAT_UTIME,
+				cputime_to_msecs(cputime));

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: kernel/sched.c:3931:
+			struct task_group *tg;
+			tg = task_group(p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: kernel/sched.c:3933:
+			__cpu_cgroup_stat_add(tg->stat, CPU_CGROUP_STAT_STIME,
+					cputime_to_msecs(cputime));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*stat)...) over kmalloc(sizeof(struct cpu_cgroup_stat)...)
#182: FILE: kernel/sched.c:8228:
+		stat = kmalloc(sizeof(struct cpu_cgroup_stat)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#185: FILE: kernel/sched.c:8231:
+			percpu_counter_init(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tg->stat)...) over kmalloc(sizeof(struct cpu_cgroup_stat)...)
#203: FILE: kernel/sched.c:8257:
+	tg->stat = kmalloc(sizeof(struct cpu_cgroup_stat), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: kernel/sched.c:8315:
+static s64 cpu_cgroup_read_stat(struct cpu_cgroup_stat *stat,
+		enum cpu_cgroup_stat_index idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: kernel/sched.c:8332:
+static int cpu_cgroup_stats_show(struct cgroup *cgrp, struct cftype *cft,
+		struct cgroup_map_cb *cb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: kernel/sched.c:8337:
+	int i;
+	for (i = 0; i < CPU_CGROUP_STAT_NSTATS; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: kernel/sched.c:8339:
+		s64 val;
+		val = cpu_cgroup_read_stat(stat, i);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 9 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
