WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: include/linux/respool.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: include/linux/respool.h:31:
+^Irpool_alloc_t ^Ialloc_mem;^I/* pool mem alloc function pointer */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: include/linux/respool.h:32:
+^Irpool_free_t ^Ifree_mem;^I/* pool mem free function pointer */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#85: FILE: include/linux/respool.h:36:
+void put_resource_pool_obj(void * vaddr, struct resource_pool *ppool);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: include/linux/respool.h:39:
+int init_resource_pool(struct resource_pool *res,
+	unsigned int min_count, unsigned int alloc_size,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: lib/respool.c:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: lib/respool.c:22:
+void * get_resource_pool_obj(struct resource_pool *ppool)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#145: FILE: lib/respool.c:36:
+		BUG_ON(ppool->curr_count != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: lib/respool.c:47:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: lib/respool.c:66:
+void put_resource_pool_obj(void * vaddr, struct resource_pool *ppool)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: lib/respool.c:71:
+	BUG_ON(!vaddr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#181: FILE: lib/respool.c:72:
+	BUG_ON(!ppool);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#196: FILE: lib/respool.c:87:
+grow_resource_pool(struct work_struct * work)

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: lib/respool.c:103:
+	while(grow_count) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#247: FILE: lib/respool.c:138:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: lib/respool.c:157:
+init_resource_pool(struct resource_pool *res,
+	unsigned int min_count, unsigned int alloc_size,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422652.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 7 warnings, 4 checks, 226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422652.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
