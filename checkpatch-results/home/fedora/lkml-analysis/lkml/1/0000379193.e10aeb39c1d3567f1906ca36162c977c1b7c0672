WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
>>> - The Vaio hangs when quitting X due to x86_64-mm-cpa-clflush.patch, but

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: arch/x86_64/mm/pageattr.c:115:
+       printk("ADD (%s): E=%p, H=%p, H->N=%p, N->P=%p, N->N=%p; PREV0=%p, "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#53: FILE: arch/x86_64/mm/pageattr.c:115:
+       printk("ADD (%s): E=%p, H=%p, H->N=%p, N->P=%p, N->N=%p; PREV0=%p, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: arch/x86_64/mm/pageattr.c:116:
+                       "NEXT0=%p, ",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: arch/x86_64/mm/pageattr.c:116:
+                       "NEXT0=%p, ",$

WARNING:SPLIT_STRING: quoted string split across lines
#54: FILE: arch/x86_64/mm/pageattr.c:116:
+       printk("ADD (%s): E=%p, H=%p, H->N=%p, N->P=%p, N->N=%p; PREV0=%p, "
+                       "NEXT0=%p, ",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: arch/x86_64/mm/pageattr.c:117:
+                       current->comm, &fpage->lru,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: arch/x86_64/mm/pageattr.c:117:
+                       current->comm, &fpage->lru,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: arch/x86_64/mm/pageattr.c:118:
+                       &deferred_pages, deferred_pages.next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: arch/x86_64/mm/pageattr.c:118:
+                       &deferred_pages, deferred_pages.next,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: arch/x86_64/mm/pageattr.c:119:
+                       deferred_pages.next->prev, deferred_pages.next->next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/x86_64/mm/pageattr.c:119:
+                       deferred_pages.next->prev, deferred_pages.next->next,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: arch/x86_64/mm/pageattr.c:120:
+                       fpage->lru.prev, fpage->lru.next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/x86_64/mm/pageattr.c:120:
+                       fpage->lru.prev, fpage->lru.next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: arch/x86_64/mm/pageattr.c:122:
+       printk("PREV1=%p, NEXT1=%p\n", fpage->lru.prev, fpage->lru.next);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#60: FILE: arch/x86_64/mm/pageattr.c:122:
+       printk("PREV1=%p, NEXT1=%p\n", fpage->lru.prev, fpage->lru.next);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: arch/x86_64/mm/pageattr.c:284:
+       printk("FLUSH\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#68: FILE: arch/x86_64/mm/pageattr.c:284:
+       printk("FLUSH\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: include/linux/list.h:268:
+       list->next = LIST_POISON1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: include/linux/list.h:269:
+       list->prev = LIST_POISON2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: include/linux/list.h:282:
+       list->next = LIST_POISON1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/list.h:283:
+       list->prev = LIST_POISON2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: lib/list_debug.c:23:
+       static unsigned int a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: lib/list_debug.c:24:
+       unsigned long off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: lib/list_debug.c:26:
+       if (unlikely(!a && current && current->comm[0] == 'X'))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#111: FILE: lib/list_debug.c:26:
+       if (unlikely(!a && current && current->comm[0] == 'X'))
+               a++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: lib/list_debug.c:27:
+               a++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: lib/list_debug.c:27:
+               a++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: lib/list_debug.c:29:
+       if (unlikely(a && !b && (void *)new >= (void *)mem_map &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#114: FILE: lib/list_debug.c:29:
+       if (unlikely(a && !b && (void *)new >= (void *)mem_map &&
[...]
+               off = ((void *)new - (void *)mem_map) % sizeof(struct page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: lib/list_debug.c:30:
+               (void *)new < (void *)(mem_map + 1048576) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: lib/list_debug.c:30:
+       if (unlikely(a && !b && (void *)new >= (void *)mem_map &&
+               (void *)new < (void *)(mem_map + 1048576) &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: lib/list_debug.c:30:
+               (void *)new < (void *)(mem_map + 1048576) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: lib/list_debug.c:31:
+               (new->prev != LIST_POISON2 || new->next != LIST_POISON1) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: lib/list_debug.c:31:
+               (new->prev != LIST_POISON2 || new->next != LIST_POISON1) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: lib/list_debug.c:32:
+               (new->prev != NULL || new->next != NULL) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: lib/list_debug.c:32:
+               (new->prev != NULL || new->next != NULL) &&$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new->prev"
#117: FILE: lib/list_debug.c:32:
+               (new->prev != NULL || new->next != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new->next"
#117: FILE: lib/list_debug.c:32:
+               (new->prev != NULL || new->next != NULL) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: lib/list_debug.c:33:
+               (new->prev != new || new->next != new))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: lib/list_debug.c:33:
+               (new->prev != new || new->next != new))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: lib/list_debug.c:34:
+               off = ((void *)new - (void *)mem_map) % sizeof(struct page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: lib/list_debug.c:34:
+               off = ((void *)new - (void *)mem_map) % sizeof(struct page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: lib/list_debug.c:35:
+               if (off == offsetof(struct page, lru)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: lib/list_debug.c:35:
+               if (off == offsetof(struct page, lru)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#120: FILE: lib/list_debug.c:35:
+               if (off == offsetof(struct page, lru)) {
+                       printk(KERN_DEBUG "POISONS (%p): "

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: lib/list_debug.c:36:
+                       printk(KERN_DEBUG "POISONS (%p): "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: lib/list_debug.c:36:
+                       printk(KERN_DEBUG "POISONS (%p): "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#121: FILE: lib/list_debug.c:36:
+                       printk(KERN_DEBUG "POISONS (%p): "

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: lib/list_debug.c:37:
+                                       "%p, %p\n", new, new->prev, new->next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: lib/list_debug.c:37:
+                                       "%p, %p\n", new, new->prev, new->next);$

WARNING:SPLIT_STRING: quoted string split across lines
#122: FILE: lib/list_debug.c:37:
+                       printk(KERN_DEBUG "POISONS (%p): "
+                                       "%p, %p\n", new, new->prev, new->next);

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: lib/list_debug.c:38:
+                       dump_stack();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: lib/list_debug.c:38:
+                       dump_stack();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: lib/list_debug.c:39:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: lib/list_debug.c:39:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: lib/list_debug.c:40:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: lib/list_debug.c:45:
+               b++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: lib/list_debug.c:45:
+               b++;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379193.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 39 warnings, 3 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379193.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
