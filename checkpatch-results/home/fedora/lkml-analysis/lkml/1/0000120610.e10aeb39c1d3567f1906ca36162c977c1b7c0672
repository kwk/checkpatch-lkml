ERROR:SPACING: space prohibited after that open parenthesis '('
#60: FILE: include/trace/events/irq.h:28:
+		__field(	int,	irq			)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#60: FILE: include/trace/events/irq.h:28:
+		__field(	int,	irq			)

ERROR:SPACING: space prohibited after that open parenthesis '('
#61: FILE: include/trace/events/irq.h:29:
+		__string(	name,	strlen(action->name)	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#61: FILE: include/trace/events/irq.h:29:
+		__string(	name,	strlen(action->name)	)

ERROR:SPACING: space prohibited after that open parenthesis '('
#71: FILE: include/trace/events/irq.h:89:
+		__field(	int,	vec				)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#71: FILE: include/trace/events/irq.h:89:
+		__field(	int,	vec				)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#72: FILE: include/trace/events/irq.h:90:
+		__string(	name,	strlen(softirq_to_name[h-vec])	)
 		         	     	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#72: FILE: include/trace/events/irq.h:90:
+		__string(	name,	strlen(softirq_to_name[h-vec])	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#72: FILE: include/trace/events/irq.h:90:
+		__string(	name,	strlen(softirq_to_name[h-vec])	)

ERROR:SPACING: space prohibited after that open parenthesis '('
#82: FILE: include/trace/events/irq.h:119:
+		__field(	int,	vec				)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#82: FILE: include/trace/events/irq.h:119:
+		__field(	int,	vec				)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#83: FILE: include/trace/events/irq.h:120:
+		__string(	name,	strlen(softirq_to_name[h-vec])	)
 		         	     	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#83: FILE: include/trace/events/irq.h:120:
+		__string(	name,	strlen(softirq_to_name[h-vec])	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#83: FILE: include/trace/events/irq.h:120:
+		__string(	name,	strlen(softirq_to_name[h-vec])	)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#136: FILE: include/trace/ftrace.h:28:
+#define __string(item, len)		unsigned short	__str_loc_##item;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#145: FILE: include/trace/ftrace.h:69:
+#define __string(item, len)	int item;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#154: FILE: include/trace/ftrace.h:189:
+#define __string(item, len)						       \
 	ret = trace_seq_printf(s, "\tfield: __str_loc " #item ";\t"	       \
 			       "offset:%u;tsize:%u;\n",			       \
 			       (unsigned int)offsetof(typeof(field),	       \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#163: FILE: include/trace/ftrace.h:242:
+#define __string(item, len)						       \
 	ret = trace_define_field(event_call, "__str_loc", #item,	       \
 				offsetof(typeof(field), __str_loc_##item),     \
 				 sizeof(field.__str_loc_##item), 0);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#163: FILE: include/trace/ftrace.h:242:
+#define __string(item, len)						       \
 	ret = trace_define_field(event_call, "__str_loc", #item,	       \
 				offsetof(typeof(field), __str_loc_##item),     \
 				 sizeof(field.__str_loc_##item), 0);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#175: FILE: include/trace/ftrace.h:414:
+#define __string(item, len)						 \
+	__str_offsets.item = __str_size +				 \
+			     offsetof(typeof(*entry), __str_data);	 \
+	__str_size += (len) + 1;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dst' - possible side-effects?
#181: FILE: include/trace/ftrace.h:420:
+#define __fetch_str(dst)						\
+	({__entry->__str_loc_##dst = __str_offsets.dst;			\
+	__get_str(dst);})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#183: FILE: include/trace/ftrace.h:422:
+	__get_str(dst);})
 	              ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 4 warnings, 3 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120610.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
