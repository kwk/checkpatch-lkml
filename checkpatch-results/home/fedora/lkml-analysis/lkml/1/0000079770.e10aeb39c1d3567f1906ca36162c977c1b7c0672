WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Subject: [PATCH 18/33] score: create head files futex.h ftrace.h mutex.h ptarce.h

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: arch/score/include/asm/ftrace.h:1:
+#ifndef _ASM_SCORE_FTRACE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: arch/score/include/asm/futex.h:1:
+#ifndef _ASM_SCORE_FUTEX_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: arch/score/include/asm/mutex.h:1:
+#ifndef _ASM_SCORE_MUTEX_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: arch/score/include/asm/ptrace.h:1:
+#ifndef _ASM_SCORE_PTRACE_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#133: FILE: arch/score/include/asm/ptrace.h:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: arch/score/include/asm/ptrace.h:82:
+#define user_mode(regs) ^I((regs->cp0_psr & 8) == 8)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#167: FILE: arch/score/include/asm/ptrace.h:82:
+#define user_mode(regs) 	((regs->cp0_psr & 8) == 8)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: arch/score/include/asm/ptrace.h:87:
+extern void do_syscall_trace(struct pt_regs *regs, int entryexit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: arch/score/include/asm/ptrace.h:88:
+extern int read_tsk_long(struct task_struct *, unsigned long, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#173: FILE: arch/score/include/asm/ptrace.h:88:
+extern int read_tsk_long(struct task_struct *, unsigned long, unsigned long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#173: FILE: arch/score/include/asm/ptrace.h:88:
+extern int read_tsk_long(struct task_struct *, unsigned long, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#173: FILE: arch/score/include/asm/ptrace.h:88:
+extern int read_tsk_long(struct task_struct *, unsigned long, unsigned long *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: arch/score/include/asm/ptrace.h:89:
+extern int read_tsk_short(struct task_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#174: FILE: arch/score/include/asm/ptrace.h:89:
+extern int read_tsk_short(struct task_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#174: FILE: arch/score/include/asm/ptrace.h:89:
+extern int read_tsk_short(struct task_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short *' should also have an identifier name
#174: FILE: arch/score/include/asm/ptrace.h:89:
+extern int read_tsk_short(struct task_struct *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: arch/score/include/asm/ptrace.h:90:
+extern int read_tsk_short(struct task_struct *, unsigned long,
+			 unsigned short *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: arch/score/include/asm/ptrace.h:93:
+extern void user_enable_single_step(struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: arch/score/include/asm/ptrace.h:94:
+extern void user_disable_single_step(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#179: FILE: arch/score/include/asm/ptrace.h:94:
+extern void user_disable_single_step(struct task_struct *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079770.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 8 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079770.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
