WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#75: FILE: drivers/char/tty_io.c:140:
+extern int pty_limit;			/* Config limit on Unix98 ptys */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: drivers/char/tty_io.c:150:
+ssize_t redirected_tty_write(struct file *, const char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#84: FILE: drivers/char/tty_io.c:150:
+ssize_t redirected_tty_write(struct file *, const char __user *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#84: FILE: drivers/char/tty_io.c:150:
+ssize_t redirected_tty_write(struct file *, const char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#84: FILE: drivers/char/tty_io.c:150:
+ssize_t redirected_tty_write(struct file *, const char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#84: FILE: drivers/char/tty_io.c:150:
+ssize_t redirected_tty_write(struct file *, const char __user *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: drivers/char/tty_io.c:151:
+ssize_t redirected_tty_write(struct file *, const char __user *,
+							size_t, loff_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#90: FILE: drivers/char/tty_io.c:155:
+int tty_ioctl(struct inode *inode, struct file *file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/char/tty_io.c:159:
+static long tty_compat_ioctl(struct file *file, unsigned int cmd,
 				unsigned long arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#100: FILE: drivers/char/tty_io.c:163:
+static int tty_fasync(int fd, struct file *filp, int on);
                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'thead' may be misspelled - perhaps 'thread'?
#118: FILE: drivers/char/tty_io.c:286:
+	while ((thead = tty->buf.head) != NULL) {
 	        ^^^^^

WARNING:TYPO_SPELLING: 'thead' may be misspelled - perhaps 'thread'?
#123: FILE: drivers/char/tty_io.c:290:
+	while ((thead = tty->buf.free) != NULL) {
 	        ^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#132: FILE: drivers/char/tty_io.c:336:
+	if (p == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'thead' may be misspelled - perhaps 'thread'?
#150: FILE: drivers/char/tty_io.c:389:
+	while ((thead = tty->buf.head) != NULL) {
 	        ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/char/tty_io.c:614:
+int tty_prepare_flip_string(struct tty_struct *tty, unsigned char **chars,
+								size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/char/tty_io.c:645:
+int tty_prepare_flip_string_flags(struct tty_struct *tty,
+			unsigned char **chars, char **flags, size_t size)

CHECK:BRACES: braces {} should be used on all arms of this statement
#275: FILE: drivers/char/tty_io.c:779:
+	if (ld->flags & LDISC_FLAG_DEFINED) {
[...]
 			ld->refcount++;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#284: FILE: drivers/char/tty_io.c:785:
+	} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#517: FILE: drivers/char/tty_io.c:1203:
+static unsigned int hung_up_tty_poll(struct file *filp, poll_table *wait)
                                                   ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#613: FILE: drivers/char/tty_io.c:1398:
+	if (ld != NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#720: FILE: drivers/char/tty_io.c:1530:
+int tty_hung_up_p(struct file *filp)
                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#730: FILE: drivers/char/tty_io.c:1539:
+ *	@filp:		file handle that may be a tty
   	 ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->read)
#774: FILE: drivers/char/tty_io.c:1762:
+		i = (ld->read)(tty, file, buf, count);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: drivers/char/tty_io.c:1899:
+static ssize_t tty_write(struct file *file, const char __user *buf,
+						size_t count, loff_t *ppos)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#808: FILE: drivers/char/tty_io.c:1909:
+	if (!tty || !tty->driver->write ||
[...]
+			return -EIO;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: drivers/char/tty_io.c:1910:
+	if (!tty || !tty->driver->write ||
+		(test_bit(TTY_IO_ERROR, &tty->flags)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: drivers/char/tty_io.c:1923:
+ssize_t redirected_tty_write(struct file *file, const char __user *buf,
+						size_t count, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#932: FILE: drivers/char/tty_io.c:2309:
+static void release_dev(struct file *filp)
                                      ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: drivers/char/tty_io.c:2320:
+	if (tty_paranoia_check(tty, filp->f_path.dentry->d_inode,
+							"release_dev"))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1062: FILE: drivers/char/tty_io.c:2605:
+static int tty_open(struct inode *inode, struct file *filp)
                                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1109: FILE: drivers/char/tty_io.c:2685:
+	if (!retval && test_bit(TTY_EXCLUSIVE, &tty->flags) &&
+						!capable(CAP_SYS_ADMIN))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1118: FILE: drivers/char/tty_io.c:2729:
+ * ^I^Iprotect the rest.$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1123: FILE: drivers/char/tty_io.c:2733:
+static int ptmx_open(struct inode *inode, struct file *filp)
                                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1141: FILE: drivers/char/tty_io.c:2806:
+static int tty_release(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1150: FILE: drivers/char/tty_io.c:2826:
+static unsigned int tty_poll(struct file *filp, poll_table *wait)
                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1170: FILE: drivers/char/tty_io.c:2843:
+static int tty_fasync(int fd, struct file *filp, int on)
                                            ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1390: FILE: drivers/char/tty_io.c:3430:
+		return send_break(tty, arg ? arg*100 : 250);
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1428: FILE: drivers/char/tty_io.c:3466:
+static long tty_compat_ioctl(struct file *file, unsigned int cmd,
 				unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: drivers/char/tty_io.c:3803:
+	device_destroy(tty_class,
+		MKDEV(driver->major, driver->minor_start) + index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1514: FILE: drivers/char/tty_io.c:3882:
+		error = alloc_chrdev_region(&dev, driver->minor_start,
+						driver->num, driver->name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1542: FILE: drivers/char/tty_io.c:3926:
+		for (i = 0; i < driver->num; i++)
 		    tty_register_device(driver, i, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356180.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 18 checks, 1413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356180.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
