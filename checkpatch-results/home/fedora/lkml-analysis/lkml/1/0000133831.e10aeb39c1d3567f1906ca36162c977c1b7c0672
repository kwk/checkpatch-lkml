Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/nls.h:53:
+extern int utf8_to_utf32(unicode_t *, const u8 *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unicode_t *' should also have an identifier name
#114: FILE: include/linux/nls.h:53:
+extern int utf8_to_utf32(unicode_t *, const u8 *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8 *' should also have an identifier name
#114: FILE: include/linux/nls.h:53:
+extern int utf8_to_utf32(unicode_t *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#114: FILE: include/linux/nls.h:53:
+extern int utf8_to_utf32(unicode_t *, const u8 *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/nls.h:54:
+extern int utf32_to_utf8(u8 *, unicode_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#115: FILE: include/linux/nls.h:54:
+extern int utf32_to_utf8(u8 *, unicode_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unicode_t' should also have an identifier name
#115: FILE: include/linux/nls.h:54:
+extern int utf32_to_utf8(u8 *, unicode_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#115: FILE: include/linux/nls.h:54:
+extern int utf32_to_utf8(u8 *, unicode_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/nls.h:55:
+extern int utf8s_to_utf16s(wchar_t *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wchar_t *' should also have an identifier name
#116: FILE: include/linux/nls.h:55:
+extern int utf8s_to_utf16s(wchar_t *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8 *' should also have an identifier name
#116: FILE: include/linux/nls.h:55:
+extern int utf8s_to_utf16s(wchar_t *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#116: FILE: include/linux/nls.h:55:
+extern int utf8s_to_utf16s(wchar_t *, const u8 *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/nls.h:56:
+extern int utf16s_to_utf8s(u8 *, const wchar_t *, int, int, enum utf16_endian);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#117: FILE: include/linux/nls.h:56:
+extern int utf16s_to_utf8s(u8 *, const wchar_t *, int, int, enum utf16_endian);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const wchar_t *' should also have an identifier name
#117: FILE: include/linux/nls.h:56:
+extern int utf16s_to_utf8s(u8 *, const wchar_t *, int, int, enum utf16_endian);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#117: FILE: include/linux/nls.h:56:
+extern int utf16s_to_utf8s(u8 *, const wchar_t *, int, int, enum utf16_endian);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#117: FILE: include/linux/nls.h:56:
+extern int utf16s_to_utf8s(u8 *, const wchar_t *, int, int, enum utf16_endian);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: fs/nls/nls_base.c:70:
+			if (l < t->lval || l > UNICODE_MAX ||
+					(l & SURROGATE_MASK) == SURROGATE_PAIR)

CHECK:SPACING: No space is necessary after a cast
#163: FILE: fs/nls/nls_base.c:72:
+			*p = (unicode_t) l;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#227: FILE: fs/nls/nls_base.c:106:
+			*s = (u8) (t->cval | (l >> c));

CHECK:SPACING: No space is necessary after a cast
#232: FILE: fs/nls/nls_base.c:110:
+				*s = (u8) (0x80 | ((l >> c) & 0x3F));

CHECK:SPACING: No space is necessary after a cast
#260: FILE: fs/nls/nls_base.c:135:
+				*op++ = (wchar_t) (SURROGATE_PAIR |

CHECK:SPACING: No space is necessary after a cast
#262: FILE: fs/nls/nls_base.c:137:
+				*op++ = (wchar_t) (SURROGATE_PAIR |

CHECK:SPACING: No space is necessary after a cast
#266: FILE: fs/nls/nls_base.c:141:
+				*op++ = (wchar_t) u;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#279: FILE: fs/nls/nls_base.c:154:
+static inline unsigned long get_utf16(unsigned c, enum utf16_endian endian)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/nls/nls_base.c:191:
+				if ((v & SURROGATE_MASK) != SURROGATE_PAIR ||
+						!(v & SURROGATE_LOW)) {

CHECK:SPACING: No space is necessary after a cast
#338: FILE: fs/nls/nls_base.c:208:
+			*op++ = (u8) u;

CHECK:SPACING: No space is necessary after a cast
#390: FILE: fs/nls/nls_utf8.c:39:
+	*uni = (wchar_t) u;

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#459: FILE: fs/fat/dir.c:28:
+ * For msdos style, ['.' (hidden) + MSDOS_NAME + '.' + nul]
        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#568: FILE: fs/isofs/joliet.c:51:
+		len = utf16s_to_utf8s(outname, (const wchar_t *) de->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: fs/isofs/joliet.c:52:
+		len = utf16s_to_utf8s(outname, (const wchar_t *) de->name,
+				PAGE_SIZE, de->name_len[0] >> 1,

CHECK:SPACING: No space is necessary after a cast
#633: FILE: drivers/usb/core/message.c:817:
+	err = utf16s_to_utf8s(buf, (wchar_t *) &tbuf[2], size, (err - 2) / 2,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/usb/core/message.c:818:
+	err = utf16s_to_utf8s(buf, (wchar_t *) &tbuf[2], size, (err - 2) / 2,
+			UTF16_LITTLE_ENDIAN);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 18 checks, 516 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
