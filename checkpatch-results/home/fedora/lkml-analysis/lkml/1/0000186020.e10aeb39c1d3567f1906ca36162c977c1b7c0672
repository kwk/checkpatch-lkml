WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#170: FILE: arch/ia64/hp/common/hwsw_iommu.c:20:
+extern struct dma_map_ops sba_dma_ops, swiotlb_dma_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#183: FILE: arch/ia64/hp/common/hwsw_iommu.c:36:
+struct dma_map_ops *hwsw_dma_get_ops(struct device *dev)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#272: FILE: arch/ia64/hp/common/sba_iommu.c:2083:
+extern struct dma_map_ops swiotlb_dma_ops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#272: FILE: arch/ia64/hp/common/sba_iommu.c:2083:
+extern struct dma_map_ops swiotlb_dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#281: FILE: arch/ia64/hp/common/sba_iommu.c:2197:
+struct dma_map_ops sba_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#362: FILE: arch/ia64/include/asm/dma-mapping.h:12:
+extern struct dma_map_ops *dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#370: FILE: arch/ia64/include/asm/dma-mapping.h:19:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#378: FILE: arch/ia64/include/asm/dma-mapping.h:26:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#388: FILE: arch/ia64/include/asm/dma-mapping.h:38:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: arch/ia64/include/asm/dma-mapping.h:39:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);
+	return ops->map_page(dev, virt_to_page(caddr),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#401: FILE: arch/ia64/include/asm/dma-mapping.h:49:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#402: FILE: arch/ia64/include/asm/dma-mapping.h:50:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);
+	ops->unmap_page(dev, daddr, size, dir, attrs);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#412: FILE: arch/ia64/include/asm/dma-mapping.h:60:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#413: FILE: arch/ia64/include/asm/dma-mapping.h:61:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);
+	return ops->map_sg(dev, sgl, nents, dir, attrs);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#423: FILE: arch/ia64/include/asm/dma-mapping.h:69:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: arch/ia64/include/asm/dma-mapping.h:70:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);
+	ops->unmap_sg(dev, sgl, nents, dir, attrs);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#433: FILE: arch/ia64/include/asm/dma-mapping.h:80:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#442: FILE: arch/ia64/include/asm/dma-mapping.h:88:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#451: FILE: arch/ia64/include/asm/dma-mapping.h:97:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#460: FILE: arch/ia64/include/asm/dma-mapping.h:106:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#467: FILE: arch/ia64/include/asm/dma-mapping.h:112:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#479: FILE: arch/ia64/include/asm/dma-mapping.h:120:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#480: FILE: arch/ia64/include/asm/dma-mapping.h:121:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);
+	return ops->map_page(dev, page, offset, size, dir, NULL);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#497: FILE: arch/ia64/include/asm/dma-mapping.h:142:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#498: FILE: arch/ia64/include/asm/dma-mapping.h:143:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);
+	return ops->dma_supported(dev, mask);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#527: FILE: arch/ia64/include/asm/machvec.h:48:
+typedef struct dma_map_ops *ia64_mv_dma_get_ops(struct device *);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#527: FILE: arch/ia64/include/asm/machvec.h:48:
+typedef struct dma_map_ops *ia64_mv_dma_get_ops(struct device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#537: FILE: arch/ia64/include/asm/machvec.h:100:
+extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#537: FILE: arch/ia64/include/asm/machvec.h:100:
+extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#537: FILE: arch/ia64/include/asm/machvec.h:100:
+extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#537: FILE: arch/ia64/include/asm/machvec.h:100:
+extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#539: FILE: arch/ia64/include/asm/machvec.h:102:
+extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#539: FILE: arch/ia64/include/asm/machvec.h:102:
+extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#539: FILE: arch/ia64/include/asm/machvec.h:102:
+extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#539: FILE: arch/ia64/include/asm/machvec.h:102:
+extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: arch/ia64/include/asm/machvec.h:255:
+extern struct dma_map_ops *dma_get_ops(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#549: FILE: arch/ia64/include/asm/machvec.h:255:
+extern struct dma_map_ops *dma_get_ops(struct device *);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#549: FILE: arch/ia64/include/asm/machvec.h:255:
+extern struct dma_map_ops *dma_get_ops(struct device *);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#561: FILE: arch/ia64/kernel/dma-mapping.c:3:
+struct dma_map_ops *dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#565: FILE: arch/ia64/kernel/dma-mapping.c:6:
+struct dma_map_ops *dma_get_ops(struct device *dev)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#622: FILE: arch/ia64/kernel/pci-dma.c:44:
+extern struct dma_map_ops intel_dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#622: FILE: arch/ia64/kernel/pci-dma.c:44:
+extern struct dma_map_ops intel_dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#631: FILE: arch/ia64/kernel/pci-dma.c:70:
+	struct dma_map_ops *ops = platform_dma_get_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#697: FILE: arch/ia64/kernel/pci-swiotlb.c:35:
+struct dma_map_ops swiotlb_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#865: FILE: arch/ia64/sn/pci/pci_dma.c:460:
+static struct dma_map_ops sn_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#895: FILE: arch/x86/include/asm/device.h:9:
+struct dma_map_ops *dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#951: FILE: arch/x86/include/asm/dma-mapping.h:21:
+extern struct dma_map_ops *dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#953: FILE: arch/x86/include/asm/dma-mapping.h:23:
+static inline struct dma_map_ops *get_dma_ops(struct device *dev)

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#962: FILE: arch/x86/include/asm/dma-mapping.h:38:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#974: FILE: arch/x86/include/asm/dma-mapping.h:59:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#977: FILE: arch/x86/include/asm/dma-mapping.h:61:
+	BUG_ON(!valid_dma_direction(dir));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#991: FILE: arch/x86/include/asm/dma-mapping.h:72:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#994: FILE: arch/x86/include/asm/dma-mapping.h:74:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1006: FILE: arch/x86/include/asm/dma-mapping.h:83:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1010: FILE: arch/x86/include/asm/dma-mapping.h:85:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1020: FILE: arch/x86/include/asm/dma-mapping.h:93:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1023: FILE: arch/x86/include/asm/dma-mapping.h:95:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1035: FILE: arch/x86/include/asm/dma-mapping.h:104:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1038: FILE: arch/x86/include/asm/dma-mapping.h:106:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1051: FILE: arch/x86/include/asm/dma-mapping.h:116:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1054: FILE: arch/x86/include/asm/dma-mapping.h:118:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1068: FILE: arch/x86/include/asm/dma-mapping.h:129:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1071: FILE: arch/x86/include/asm/dma-mapping.h:131:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1086: FILE: arch/x86/include/asm/dma-mapping.h:143:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1089: FILE: arch/x86/include/asm/dma-mapping.h:145:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1103: FILE: arch/x86/include/asm/dma-mapping.h:156:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1106: FILE: arch/x86/include/asm/dma-mapping.h:158:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1119: FILE: arch/x86/include/asm/dma-mapping.h:168:
+	struct dma_map_ops *ops = get_dma_ops(hwdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1122: FILE: arch/x86/include/asm/dma-mapping.h:170:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1136: FILE: arch/x86/include/asm/dma-mapping.h:181:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1140: FILE: arch/x86/include/asm/dma-mapping.h:183:
+	BUG_ON(!valid_dma_direction(dir));

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1158: FILE: arch/x86/include/asm/dma-mapping.h:236:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1167: FILE: arch/x86/include/asm/dma-mapping.h:262:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1180: FILE: arch/x86/include/asm/iommu.h:6:
+extern struct dma_map_ops nommu_dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1213: FILE: arch/x86/kernel/amd_iommu.c:1653:
+static struct dma_map_ops amd_iommu_dma_ops = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1228: FILE: arch/x86/kernel/pci-calgary_64.c:384:
+			     int nelems,enum dma_data_direction dir,
 			               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1266: FILE: arch/x86/kernel/pci-calgary_64.c:522:
+static struct dma_map_ops calgary_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1279: FILE: arch/x86/kernel/pci-dma.c:15:
+struct dma_map_ops *dma_ops;

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1288: FILE: arch/x86/kernel/pci-dma.c:227:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1341: FILE: arch/x86/kernel/pci-gart_64.c:714:
+static struct dma_map_ops gart_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1364: FILE: arch/x86/kernel/pci-nommu.c:82:
+struct dma_map_ops nommu_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1377: FILE: arch/x86/kernel/pci-swiotlb_64.c:70:
+struct dma_map_ops swiotlb_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1420: FILE: drivers/pci/intel-iommu.c:2583:
+struct dma_map_ops intel_dma_ops = {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1442: FILE: include/linux/intel-iommu.h:337:
+extern int intel_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1442: FILE: include/linux/intel-iommu.h:337:
+extern int intel_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#1442: FILE: include/linux/intel-iommu.h:337:
+extern int intel_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1442: FILE: include/linux/intel-iommu.h:337:
+extern int intel_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dma_attrs *' should also have an identifier name
#1442: FILE: include/linux/intel-iommu.h:337:
+extern int intel_map_sg(struct device *, struct scatterlist *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1444: FILE: include/linux/intel-iommu.h:339:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1444: FILE: include/linux/intel-iommu.h:339:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#1444: FILE: include/linux/intel-iommu.h:339:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1444: FILE: include/linux/intel-iommu.h:339:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dma_attrs *' should also have an identifier name
#1444: FILE: include/linux/intel-iommu.h:339:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000186020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 88 warnings, 5 checks, 1259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000186020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
