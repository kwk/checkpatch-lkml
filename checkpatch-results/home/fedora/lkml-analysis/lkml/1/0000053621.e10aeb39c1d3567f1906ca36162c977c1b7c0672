WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
   This is just a change for interface and doesn't add new logic, at this stage.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/oom.h:32:
+extern void out_of_memory(struct zonelist *zonelist,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/linux/oom.h:33:
+extern void out_of_memory(struct zonelist *zonelist,
+		gfp_t gfp_mask, int order, nodemask_t *mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: mm/oom_kill.c:77:
+static unsigned long __badness(struct task_struct *p,
+		      unsigned long uptime, enum oom_constraint constraint,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: mm/oom_kill.c:207:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: mm/oom_kill.c:214:
+static inline enum oom_constraint guess_oom_context(struct zonelist *zonelist,
+		gfp_t gfp_mask, nodemask_t *nodemask)

WARNING:TYPO_SPELLING: 'containes' may be misspelled - perhaps 'contains'?
#173: FILE: mm/oom_kill.c:235:
+ 	 * If not __GFP_THISNODE, zonelist containes all nodes. And if
  	                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: mm/oom_kill.c:235:
+ ^I * If not __GFP_THISNODE, zonelist containes all nodes. And if$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: mm/oom_kill.c:235:
+ ^I * If not __GFP_THISNODE, zonelist containes all nodes. And if$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: mm/oom_kill.c:236:
+ ^I * zonelist contains a zone which isn't allowed under cpuset, we assume$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: mm/oom_kill.c:236:
+ ^I * zonelist contains a zone which isn't allowed under cpuset, we assume$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: mm/oom_kill.c:237:
+ ^I * this allocation failure is caused by cpuset's constraint.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: mm/oom_kill.c:237:
+ ^I * this allocation failure is caused by cpuset's constraint.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: mm/oom_kill.c:238:
+ ^I * Note: all nodes are scanned if nodemask=NULL.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: mm/oom_kill.c:238:
+ ^I * Note: all nodes are scanned if nodemask=NULL.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: mm/oom_kill.c:239:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: mm/oom_kill.c:239:
+ ^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: mm/oom_kill.c:241:
+	for_each_zone_zonelist_nodemask(zone,
+			z, zonelist, high_zoneidx, nodemask) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: mm/oom_kill.c:258:
+static inline enum oom_constraint guess_oom_context(struct zonelist *zonelist,
+					    gfp_t gfp_mask, nodemask_t *mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: mm/oom_kill.c:573:
+static void __out_of_memory(gfp_t gfp_mask, enum oom_constraint constraint,
+		int order, nodemask_t *mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: mm/oom_kill.c:658:
+void out_of_memory(struct zonelist *zonelist, gfp_t gfp_mask,
+			int order, nodemask_t *nodemask)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: mm/oom_kill.c:696:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000053621.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 8 warnings, 9 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000053621.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
