CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: include/linux/netfilter/nf_conntrack_common.h:167:
+extern void need_conntrack_ipv4(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: include/linux/netfilter/xt_connlimit.h:1:
+#ifndef _XT_CONNLIMIT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#74: FILE: include/linux/netfilter/xt_connlimit.h:7:
+	uint32_t mask;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: net/netfilter/xt_connlimit.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#167: FILE: net/netfilter/xt_connlimit.c:38:
+	spinlock_t lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#176: FILE: net/netfilter/xt_connlimit.c:47:
+		      uint32_t mask, struct nf_conn *ct)

WARNING:CONST_CONST: 'const char const *' should probably be 'const char * const'
#179: FILE: net/netfilter/xt_connlimit.c:50:
+	static const char const *tcp_state[] = {

Using `const <type> const *` is generally meant to be
written `const <type> * const`.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: net/netfilter/xt_connlimit.c:72:
+		if (found != NULL &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "found"
#201: FILE: net/netfilter/xt_connlimit.c:72:
+		if (found != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#206: FILE: net/netfilter/xt_connlimit.c:77:
+			/*
+			 * Just to be sure we have it only once in the list.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#213: FILE: net/netfilter/xt_connlimit.c:84:
+		printk(KERN_WARNING "xt_connlimit [%u]: src=%u.%u.%u.%u:%u "

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: net/netfilter/xt_connlimit.c:85:
+		printk(KERN_WARNING "xt_connlimit [%u]: src=%u.%u.%u.%u:%u "
+		       "dst=%u.%u.%u.%u:%d %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!found"
#220: FILE: net/netfilter/xt_connlimit.c:91:
+		       (found == NULL) ? "gone" :

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!found"
#224: FILE: net/netfilter/xt_connlimit.c:95:
+		if (found == NULL) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#234: FILE: net/netfilter/xt_connlimit.c:105:
+			/*
+			 * we do not care about connections which are

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#254: FILE: net/netfilter/xt_connlimit.c:125:
+		printk(KERN_WARNING "xt_connlimit [%u]: src=%u.%u.%u.%u:%u "

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: net/netfilter/xt_connlimit.c:126:
+		printk(KERN_WARNING "xt_connlimit [%u]: src=%u.%u.%u.%u:%u "
+		       "dst=%u.%u.%u.%u:%u new\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conn"
#262: FILE: net/netfilter/xt_connlimit.c:133:
+		if (conn == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ct"
#289: FILE: net/netfilter/xt_connlimit.c:160:
+	if (ct == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#290: FILE: net/netfilter/xt_connlimit.c:161:
+		printk(KERN_INFO "xt_connlimit: INVALID connection or "

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: net/netfilter/xt_connlimit.c:162:
+		printk(KERN_INFO "xt_connlimit: INVALID connection or "
+		       "nf_conntrack_ipv4 not loaded\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: net/netfilter/xt_connlimit.c:171:
+		printk(KERN_DEBUG "xt_connlimit: kmalloc failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#307: FILE: net/netfilter/xt_connlimit.c:178:
+	printk(KERN_DEBUG "xt_connlimit: src=%u.%u.%u.%u mask=%u.%u.%u.%u "

WARNING:SPLIT_STRING: quoted string split across lines
#308: FILE: net/netfilter/xt_connlimit.c:179:
+	printk(KERN_DEBUG "xt_connlimit: src=%u.%u.%u.%u mask=%u.%u.%u.%u "
+	       "connections=%d limit=%u match=%s\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info->data)...) over kmalloc(sizeof(struct xt_connlimit_data)...)
#324: FILE: net/netfilter/xt_connlimit.c:195:
+	info->data = kmalloc(sizeof(struct xt_connlimit_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: net/netfilter/xt_connlimit.c:214:
+			conn = list_entry(hash->next,
+			       struct xt_connlimit_conn, list);

WARNING:RETURN_VOID: void function return statements are not generally useful
#351: FILE: net/netfilter/xt_connlimit.c:222:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#374: FILE: net/netfilter/xt_connlimit.c:245:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 11 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
