WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> > Al, I'm not too pleased with the resulting additional code complexity to

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#62: 
Signed-off-by:   Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LINE_SPACING: Missing a blank line after declarations
#99: FILE: fs/namei.c:2040:
+	int error = pre_vfs_mknod(dir, dentry, mode);
+	if (error)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#113: FILE: fs/namei.c:2111:
+			error = pre_vfs_mknod(nd.path.dentry->d_inode, dentry,
 			                      ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#122: FILE: fs/namei.c:2120:
+							       nd.path.mnt);
 							       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#129: FILE: fs/namei.c:2127:
+			error = pre_vfs_mknod(nd.path.dentry->d_inode, dentry,
 			                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#138: FILE: fs/namei.c:2136:
+							       nd.path.mnt);
 							       ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: fs/namei.c:2172:
+	int error = pre_vfs_mkdir(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#174: FILE: fs/namei.c:2212:
+	error = pre_vfs_mkdir(nd.path.dentry->d_inode, dentry);
 	                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#177: FILE: fs/namei.c:2215:
+						       nd.path.mnt);
 						       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#179: FILE: fs/namei.c:2217:
+		error = vfs_mkdir(nd.path.dentry->d_inode, dentry, mode);
 		                  ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: fs/namei.c:2275:
+	int error = pre_vfs_rmdir(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#213: FILE: fs/namei.c:2335:
+	error = pre_vfs_rmdir(nd.path.dentry->d_inode, dentry);
 	                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#216: FILE: fs/namei.c:2338:
+						       nd.path.mnt);
 						       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#218: FILE: fs/namei.c:2340:
+		error = vfs_rmdir(nd.path.dentry->d_inode, dentry);
 		                  ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: fs/namei.c:2371:
+	int error = pre_vfs_unlink(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#252: FILE: fs/namei.c:2432:
+		error = pre_vfs_unlink(nd.path.dentry->d_inode, dentry);
 		                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#256: FILE: fs/namei.c:2436:
+							       nd.path.mnt);
 							       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#258: FILE: fs/namei.c:2438:
+			error = vfs_unlink(nd.path.dentry->d_inode, dentry);
 			                   ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: fs/namei.c:2488:
+	int error = pre_vfs_symlink(dir, dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#293: FILE: fs/namei.c:2530:
+	error = pre_vfs_symlink(nd.path.dentry->d_inode, dentry);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#296: FILE: fs/namei.c:2533:
+						       dentry, nd.path.mnt);
 						               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#298: FILE: fs/namei.c:2535:
+		error = vfs_symlink(nd.path.dentry->d_inode, dentry, from,
 		                    ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: fs/namei.c:2583:
+	int error = pre_vfs_link(old_dentry, dir, new_dentry);
+	if (error)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#348: FILE: fs/namei.c:2642:
+	error = pre_vfs_link(old_nd.path.dentry, nd.path.dentry->d_inode,
 	                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#353: FILE: fs/namei.c:2647:
+						       nd.path.dentry,
 						       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#356: FILE: fs/namei.c:2650:
+		error = vfs_link(old_nd.path.dentry, nd.path.dentry->d_inode,
 		                                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: fs/namei.c:2805:
+	const char *old_name;
+	if (error)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#427: FILE: include/linux/security.h:113:
 
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#477: FILE: include/linux/security.h:1394:
+	int (*singlepath_permission) (int operation, struct dentry *dentry,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#479: FILE: include/linux/security.h:1396:
+	int (*doublepath_permission) (int operation, struct dentry *old_dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#585: FILE: net/unix/af_unix.c:825:
+		err = pre_vfs_mknod(nd.path.dentry->d_inode, dentry, mode);
 		                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#589: FILE: net/unix/af_unix.c:829:
+							     nd.path.mnt);
 							     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#591: FILE: net/unix/af_unix.c:831:
+			err = vfs_mknod(nd.path.dentry->d_inode, dentry,
 			                ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#602: FILE: include/linux/fs.h:1128:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#602: FILE: include/linux/fs.h:1128:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#602: FILE: include/linux/fs.h:1128:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#602: FILE: include/linux/fs.h:1128:
+extern int pre_vfs_mknod(struct inode *, struct dentry *, int);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#615: FILE: fs/open.c:271:
+					       nd.path.dentry, nd.path.mnt);
 					       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#615: FILE: fs/open.c:271:
+					       nd.path.dentry, nd.path.mnt);
 					                       ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297474.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 38 warnings, 2 checks, 518 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297474.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
