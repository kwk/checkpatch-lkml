WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
> > > > > > > On Mon, Jan 07, 2008 at 06:13:37PM +0100, Stefan Richter wrote:

WARNING:TYPO_SPELLING: 'iterater' may be misspelled - perhaps 'iterator'?
#80: 
> > > For now the mutex patch, I will only use the mutex to lock the devices list and write an iterater function.
                                                                                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#192: FILE: drivers/base/class.c:830:
+int class_for_each_device(struct class *class, void *data,
+			   int (*fn)(struct device *, void *))
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/base/class.c:831:
+int class_for_each_device(struct class *class, void *data,
+			   int (*fn)(struct device *, void *))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/base/class.c:851:
+struct device *class_find_device(struct class *class, void *data,
+				   int (*match)(struct device *, void *))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#230: FILE: drivers/base/class.c:868:
+int class_for_each_child(struct class *class, void *data,
+			   int (*fn)(struct class_device *, void *))
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/base/class.c:869:
+int class_for_each_child(struct class *class, void *data,
+			   int (*fn)(struct class_device *, void *))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/base/class.c:889:
+struct class_device *class_find_child(struct class *class, void *data,
+				   int (*match)(struct class_device *, void *))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#395: FILE: include/linux/device.h:201:
+extern int class_for_each_device(struct class *class, void *data,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: include/linux/device.h:202:
+extern int class_for_each_device(struct class *class, void *data,
+				int (*fn)(struct device *dev, void *data));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#397: FILE: include/linux/device.h:203:
+extern struct device *class_find_device(struct class *class, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: include/linux/device.h:204:
+extern struct device *class_find_device(struct class *class, void *data,
+				   int (*match)(struct device *, void *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: include/linux/device.h:205:
+extern int class_for_each_child(struct class *class, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: include/linux/device.h:206:
+extern int class_for_each_child(struct class *class, void *data,
+			   int (*fn)(struct class_device *, void *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#401: FILE: include/linux/device.h:207:
+extern struct class_device *class_find_child(struct class *class, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: include/linux/device.h:208:
+extern struct class_device *class_find_child(struct class *class, void *data,
+				   int (*match)(struct class_device *, void *));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338458.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 2 warnings, 12 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338458.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
