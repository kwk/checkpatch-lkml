WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#389: FILE: samples/firmware_class/firmware_sample_driver.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: samples/firmware_class/firmware_sample_driver.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#413: FILE: samples/firmware_class/firmware_sample_driver.c:25:
+	u8 buf[size+1];
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#414: FILE: samples/firmware_class/firmware_sample_driver.c:26:
+	u8 buf[size+1];
+	memcpy(buf, firmware, size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#416: FILE: samples/firmware_class/firmware_sample_driver.c:28:
+	printk(KERN_INFO "firmware_sample_driver: firmware: %s\n", buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: samples/firmware_class/firmware_sample_driver.c:34:
+        const struct firmware *fw_entry;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: samples/firmware_class/firmware_sample_driver.c:34:
+        const struct firmware *fw_entry;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#423: FILE: samples/firmware_class/firmware_sample_driver.c:35:
+	printk(KERN_INFO "firmware_sample_driver: a ghost device got inserted :)\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: samples/firmware_class/firmware_sample_driver.c:37:
+        if(request_firmware(&fw_entry, "sample_driver_fw", &ghost_device)!=0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: samples/firmware_class/firmware_sample_driver.c:37:
+        if(request_firmware(&fw_entry, "sample_driver_fw", &ghost_device)!=0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#425: FILE: samples/firmware_class/firmware_sample_driver.c:37:
+        if(request_firmware(&fw_entry, "sample_driver_fw", &ghost_device)!=0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#425: FILE: samples/firmware_class/firmware_sample_driver.c:37:
+        if(request_firmware(&fw_entry, "sample_driver_fw", &ghost_device)!=0)
                                                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#425: FILE: samples/firmware_class/firmware_sample_driver.c:37:
+        if(request_firmware(&fw_entry, "sample_driver_fw", &ghost_device)!=0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#427: FILE: samples/firmware_class/firmware_sample_driver.c:39:
+		printk(KERN_ERR

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#438: FILE: samples/firmware_class/firmware_sample_driver.c:50:
+}
+static void sample_probe_specific(void)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#441: FILE: samples/firmware_class/firmware_sample_driver.c:53:
+	 * userspace  directly into the hardware, or via some sysfs file */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#445: FILE: samples/firmware_class/firmware_sample_driver.c:57:
+	printk(KERN_INFO "firmware_sample_driver: a ghost device got inserted :)\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: samples/firmware_class/firmware_sample_driver.c:59:
+        if(request_firmware(NULL, "sample_driver_fw", &ghost_device)!=0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: samples/firmware_class/firmware_sample_driver.c:59:
+        if(request_firmware(NULL, "sample_driver_fw", &ghost_device)!=0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#447: FILE: samples/firmware_class/firmware_sample_driver.c:59:
+        if(request_firmware(NULL, "sample_driver_fw", &ghost_device)!=0)
+	{

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#447: FILE: samples/firmware_class/firmware_sample_driver.c:59:
+        if(request_firmware(NULL, "sample_driver_fw", &ghost_device)!=0)
                                                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: samples/firmware_class/firmware_sample_driver.c:59:
+        if(request_firmware(NULL, "sample_driver_fw", &ghost_device)!=0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#449: FILE: samples/firmware_class/firmware_sample_driver.c:61:
+		printk(KERN_ERR

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#455: FILE: samples/firmware_class/firmware_sample_driver.c:67:
+	 * this point the firmware should be already in the device */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#459: FILE: samples/firmware_class/firmware_sample_driver.c:71:
+}
+static void sample_probe_async_cont(const struct firmware *fw, void *context)

ERROR:SPACING: space required before the open brace '{'
#461: FILE: samples/firmware_class/firmware_sample_driver.c:73:
+	if(!fw){

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: samples/firmware_class/firmware_sample_driver.c:73:
+	if(!fw){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#462: FILE: samples/firmware_class/firmware_sample_driver.c:74:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#467: FILE: samples/firmware_class/firmware_sample_driver.c:79:
+	printk(KERN_INFO "firmware_sample_driver: device pointer \"%s\"\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#471: FILE: samples/firmware_class/firmware_sample_driver.c:83:
+}
+static void sample_probe_async(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: samples/firmware_class/firmware_sample_driver.c:87:
+	int error;
+	error = request_firmware_nowait (THIS_MODULE, FW_ACTION_NOHOTPLUG,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: samples/firmware_class/firmware_sample_driver.c:87:
+	error = request_firmware_nowait (THIS_MODULE, FW_ACTION_NOHOTPLUG,

ERROR:SPACING: space required before the open brace '{'
#479: FILE: samples/firmware_class/firmware_sample_driver.c:91:
+	if(error){

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: samples/firmware_class/firmware_sample_driver.c:91:
+	if(error){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#480: FILE: samples/firmware_class/firmware_sample_driver.c:92:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: samples/firmware_class/firmware_sample_driver.c:94:
+		       "firmware_sample_driver:"
+		       " request_firmware_nowait failed\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#490: FILE: samples/firmware_class/firmware_sample_driver.c:102:
+	 * sample probe functions here */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#496: FILE: samples/firmware_class/firmware_sample_driver.c:108:
+}
+static void __exit sample_exit(void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: samples/firmware_class/firmware_sample_driver.c:112:
+module_init (sample_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: samples/firmware_class/firmware_sample_driver.c:113:
+module_exit (sample_exit);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#507: FILE: samples/firmware_class/firmware_sample_firmware_class.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#527: FILE: samples/firmware_class/firmware_sample_firmware_class.c:21:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#534: FILE: samples/firmware_class/firmware_sample_firmware_class.c:28:
+	return container_of(obj,struct class_device,kobj);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#534: FILE: samples/firmware_class/firmware_sample_firmware_class.c:28:
+	return container_of(obj,struct class_device,kobj);
 	                                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#536: FILE: samples/firmware_class/firmware_sample_firmware_class.c:30:
+}
+static inline

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: samples/firmware_class/firmware_sample_firmware_class.c:33:
+	return container_of(_attr,struct class_device_attribute,attr);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: samples/firmware_class/firmware_sample_firmware_class.c:33:
+	return container_of(_attr,struct class_device_attribute,attr);
 	                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#542: FILE: samples/firmware_class/firmware_sample_firmware_class.c:36:
+int sysfs_create_bin_file(struct kobject * kobj, struct bin_attribute * attr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#542: FILE: samples/firmware_class/firmware_sample_firmware_class.c:36:
+int sysfs_create_bin_file(struct kobject * kobj, struct bin_attribute * attr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#543: FILE: samples/firmware_class/firmware_sample_firmware_class.c:37:
+int sysfs_remove_bin_file(struct kobject * kobj, struct bin_attribute * attr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#543: FILE: samples/firmware_class/firmware_sample_firmware_class.c:37:
+int sysfs_remove_bin_file(struct kobject * kobj, struct bin_attribute * attr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#543: FILE: samples/firmware_class/firmware_sample_firmware_class.c:37:
+int sysfs_remove_bin_file(struct kobject * kobj, struct bin_attribute * attr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#551: FILE: samples/firmware_class/firmware_sample_firmware_class.c:45:
+extern struct class firmware_class;

WARNING:LINE_SPACING: Missing a blank line after declarations
#556: FILE: samples/firmware_class/firmware_sample_firmware_class.c:50:
+	struct firmware_priv *fw_priv = class_get_devdata(class_dev);
+	return sprintf(buf, "%d\n", fw_priv->loading);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#558: FILE: samples/firmware_class/firmware_sample_firmware_class.c:52:
+}
+static ssize_t firmware_loading_store(struct class_device *class_dev,

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#564: FILE: samples/firmware_class/firmware_sample_firmware_class.c:58:
+	fw_priv->loading = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space required before the open brace '{'
#566: FILE: samples/firmware_class/firmware_sample_firmware_class.c:60:
+	switch(fw_priv->loading){

ERROR:SPACING: space required before the open parenthesis '('
#566: FILE: samples/firmware_class/firmware_sample_firmware_class.c:60:
+	switch(fw_priv->loading){

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#574: FILE: samples/firmware_class/firmware_sample_firmware_class.c:68:
+		if(prev_loading==1){
 		               ^

ERROR:SPACING: space required before the open brace '{'
#574: FILE: samples/firmware_class/firmware_sample_firmware_class.c:68:
+		if(prev_loading==1){

ERROR:SPACING: space required before the open parenthesis '('
#574: FILE: samples/firmware_class/firmware_sample_firmware_class.c:68:
+		if(prev_loading==1){

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#576: FILE: samples/firmware_class/firmware_sample_firmware_class.c:70:
+			 * state */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#597: FILE: samples/firmware_class/firmware_sample_firmware_class.c:91:
+}
+static ssize_t firmware_data_write(struct kobject *kobj,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#608: FILE: samples/firmware_class/firmware_sample_firmware_class.c:102:
+}
+static struct bin_attribute firmware_attr_data = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#614: FILE: samples/firmware_class/firmware_sample_firmware_class.c:108:
+};
+static int fw_setup_class_device(struct class_device *class_dev,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fw_priv)...) over kzalloc(sizeof(struct firmware_priv)...)
#621: FILE: samples/firmware_class/firmware_sample_firmware_class.c:115:
+	fw_priv = kzalloc(sizeof(struct firmware_priv),	GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#630: FILE: samples/firmware_class/firmware_sample_firmware_class.c:124:
+	fw_priv->fw_id[FIRMWARE_NAME_MAX-1] = '\0';
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#633: FILE: samples/firmware_class/firmware_sample_firmware_class.c:127:
+	class_dev->class_id[BUS_ID_SIZE-1] = '\0';
 	                               ^

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#636: FILE: samples/firmware_class/firmware_sample_firmware_class.c:130:
+	class_dev->class = &firmware_class,
+	class_set_devdata(class_dev, fw_priv);

ERROR:SPACING: space required before the open brace '{'
#639: FILE: samples/firmware_class/firmware_sample_firmware_class.c:133:
+	if (retval){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#640: FILE: samples/firmware_class/firmware_sample_firmware_class.c:134:
+		printk(KERN_ERR "%s: class_device_register failed\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#641: FILE: samples/firmware_class/firmware_sample_firmware_class.c:135:
+		       __FUNCTION__);

ERROR:SPACING: space required before the open brace '{'
#646: FILE: samples/firmware_class/firmware_sample_firmware_class.c:140:
+	if (retval){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#647: FILE: samples/firmware_class/firmware_sample_firmware_class.c:141:
+		printk(KERN_ERR "%s: sysfs_create_bin_file failed\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#648: FILE: samples/firmware_class/firmware_sample_firmware_class.c:142:
+		       __FUNCTION__);

ERROR:SPACING: space required before the open brace '{'
#654: FILE: samples/firmware_class/firmware_sample_firmware_class.c:148:
+	if (retval){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#655: FILE: samples/firmware_class/firmware_sample_firmware_class.c:149:
+		printk(KERN_ERR "%s: class_device_create_file failed\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#656: FILE: samples/firmware_class/firmware_sample_firmware_class.c:150:
+		       __FUNCTION__);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#671: FILE: samples/firmware_class/firmware_sample_firmware_class.c:165:
+}
+static void fw_remove_class_device(struct class_device *class_dev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*class_dev)...) over kmalloc(sizeof(struct class_device)...)
#691: FILE: samples/firmware_class/firmware_sample_firmware_class.c:185:
+	class_dev = kmalloc(sizeof(struct class_device), GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#692: FILE: samples/firmware_class/firmware_sample_firmware_class.c:186:
+	if(!class_dev)

ERROR:SPACING: space required before the open brace '{'
#697: FILE: samples/firmware_class/firmware_sample_firmware_class.c:191:
+	if(error){

ERROR:SPACING: space required before the open parenthesis '('
#697: FILE: samples/firmware_class/firmware_sample_firmware_class.c:191:
+	if(error){

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: samples/firmware_class/firmware_sample_firmware_class.c:195:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: samples/firmware_class/firmware_sample_firmware_class.c:195:
+        return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#703: FILE: samples/firmware_class/firmware_sample_firmware_class.c:197:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#704: FILE: samples/firmware_class/firmware_sample_firmware_class.c:198:
+}
+static void __exit firmware_sample_exit(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#707: FILE: samples/firmware_class/firmware_sample_firmware_class.c:201:
+	struct firmware_priv *fw_priv = class_get_devdata(class_dev);
+	fw_remove_class_device(class_dev);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#727: FILE: samples/Kconfig:25:
+config SAMPLE_FIRMWARE_CLASS
+	tristate "Build firmware_class examples -- loadable modules only"
+	depends on FW_LOADER && m
+	help
+	  This build firmware_class example modules.
+
+	  If in doubt, say "N" here.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 33 errors, 37 warnings, 19 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
