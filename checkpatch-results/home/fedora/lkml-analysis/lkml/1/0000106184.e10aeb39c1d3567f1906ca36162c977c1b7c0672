WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#67: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: arch/x86/kernel/sfi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: arch/x86/kernel/sfi.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: arch/x86/kernel/sfi.c:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#106: FILE: arch/x86/kernel/sfi.c:35:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: arch/x86/kernel/sfi.c:124:
+		pr_debug(PREFIX "start = 0x%08x end = 0x%08x type = %d\n",
+			(u32)start, (u32)end, mentry->type);

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/x86/kernel/sfi.c:150:
+	mp_lapic_addr = (unsigned long) address;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#238: FILE: arch/x86/kernel/sfi.c:167:
+		printk(KERN_WARNING "Processor #%d invalid (max %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: arch/x86/kernel/sfi.c:168:
+		printk(KERN_WARNING "Processor #%d invalid (max %d)\n",
+			id, MAX_APICS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: arch/x86/kernel/sfi.c:196:
+	BUG_ON(!table);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#271: FILE: arch/x86/kernel/sfi.c:200:
+	pentry = (struct sfi_cpu_table_entry *) sb->pentry;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_INTEL'
#295: FILE: arch/x86/kernel/sfi.c:224:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) &&
+	    !APIC_XAPIC(apic_version[boot_cpu_physical_apicid]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: arch/x86/kernel/sfi.c:232:
+	DECLARE_BITMAP(used, 256);
+	bitmap_zero(used, 256);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: arch/x86/kernel/sfi.c:235:
+		struct mpc_ioapic *ia = &mp_ioapics[i];
+		__set_bit(ia->apicid, used);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: arch/x86/kernel/sfi.c:243:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#322: FILE: arch/x86/kernel/sfi.c:251:
+		printk(KERN_ERR "ERROR: Max # of I/O APICs (%d) exceeded "

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: arch/x86/kernel/sfi.c:252:
+		printk(KERN_ERR "ERROR: Max # of I/O APICs (%d) exceeded "
+			"(found %d)\n", MAX_IO_APICS, nr_ioapics);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#327: FILE: arch/x86/kernel/sfi.c:256:
+		printk(KERN_ERR "WARNING: Bogus (zero) I/O APIC address"

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: arch/x86/kernel/sfi.c:257:
+		printk(KERN_ERR "WARNING: Bogus (zero) I/O APIC address"
+			" found in MADT table, skipping!\n");

WARNING:SPLIT_STRING: quoted string split across lines
#363: FILE: arch/x86/kernel/sfi.c:292:
+	pr_info(PREFIX "IOAPIC[%d]: apic_id %d, version %d, address 0x%x, "
+	       "GSI %d-%d\n", idx, mp_ioapics[idx].apicid,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#377: FILE: arch/x86/kernel/sfi.c:306:
+	BUG_ON(!table);

CHECK:SPACING: No space is necessary after a cast
#381: FILE: arch/x86/kernel/sfi.c:310:
+	pentry = (struct sfi_apic_table_entry *) sb->pentry;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#432: FILE: drivers/sfi/sfi_core.c:1:
+/* sfi_core.c Simple Firmware Interface - core internals */

WARNING:TYPO_SPELLING: 'MERCHANTIBILITY' may be misspelled - perhaps 'MERCHANTABILITY'?
#460: FILE: drivers/sfi/sfi_core.c:29:
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR
                                          ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#481: FILE: drivers/sfi/sfi_core.c:50:
+#include <asm/pgtable.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/sfi/sfi_core.c:94:
+static void sfi_print_table_header(u32 address,
+			struct sfi_table_header *header)

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: drivers/sfi/sfi_core.c:121:
+			"Incorrect checksum in table [%4.4s] -  %2.2X,"
+			" should be %2.2X\n", table->signature,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/sfi/sfi_core.c:130:
+int sfi_get_table(char *signature, char *oem_id, char *oem_table_id,
+	unsigned int flags, struct sfi_table_header **out_table)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: drivers/sfi/sfi_core.c:154:
+		if (oem_table_id && strncmp(th->oem_table_id, oem_table_id,
+			SFI_OEM_TABLE_ID_SIZE))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#612: FILE: drivers/sfi/sfi_core.c:181:
+int sfi_table_parse(char *signature, char *oem_id, char* oem_table_id,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/sfi/sfi_core.c:182:
+int sfi_table_parse(char *signature, char *oem_id, char* oem_table_id,
+	unsigned int flags, sfi_table_handler handler)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/sfi/sfi_core.c:225:
+	memcpy(&sfi_tblist.tables[sfi_tblist.count].header,
+		table, sizeof(struct sfi_table_header));

WARNING:RETURN_VOID: void function return statements are not generally useful
#664: FILE: drivers/sfi/sfi_core.c:233:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#704: FILE: drivers/sfi/sfi_core.c:273:
+	paddr = (u64 *) syst->pentry;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: drivers/sfi/sfi_core.c:279:
+	memcpy(&sfi_tblist.tables[0].header,
+		syst, sizeof(struct sfi_table_header));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#721: FILE: drivers/sfi/sfi_core.c:290:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#742: FILE: drivers/sfi/sfi_core.c:311:
+		if (strncmp(syst->signature, SFI_SIG_SYST, SFI_SIGNATURE_SIZE))
+				continue;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: drivers/sfi/sfi_core.c:362:
+	memcpy(table, sfi_tblist.tables,
+		sfi_tblist.count * sizeof(struct sfi_table_desc));

WARNING:RETURN_VOID: void function return statements are not generally useful
#796: FILE: drivers/sfi/sfi_core.c:365:
+	return;
+}

ERROR:SPACING: space required before the open brace '{'
#800: FILE: drivers/sfi/sfi_core.c:369:
+	if(!acpi_disabled){

ERROR:SPACING: space required before the open parenthesis '('
#800: FILE: drivers/sfi/sfi_core.c:369:
+	if(!acpi_disabled){

ERROR:SPACING: space required before the open parenthesis '('
#805: FILE: drivers/sfi/sfi_core.c:374:
+	if(sfi_disabled)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#815: FILE: drivers/sfi/sfi_core.c:384:
+}
+/* after most of the system is up, abandon the static array */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#834: FILE: drivers/sfi/sfi_core.c:403:
+}
+early_param("sfi", sfi_parse_cmdline);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#841: FILE: drivers/sfi/sfi_core.h:1:
+/* sfi_core.h Simple Firmware Interface, internal header */

WARNING:TYPO_SPELLING: 'MERCHANTIBILITY' may be misspelled - perhaps 'MERCHANTABILITY'?
#869: FILE: drivers/sfi/sfi_core.h:29:
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR
                                          ^^^^^^^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#894: FILE: drivers/sfi/sfi_core.h:54:
+extern int sfi_get_table(char *signature, char *oem_id, char *oem_table_id,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#895: FILE: drivers/sfi/sfi_core.h:55:
+extern int sfi_get_table(char *signature, char *oem_id, char *oem_table_id,
+	uint flags, struct sfi_table_header **out_table);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#896: FILE: drivers/sfi/sfi_core.h:56:
+extern void sfi_put_table(struct sfi_table_header *table);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#898: FILE: drivers/sfi/sfi_core.h:58:
+extern int sfi_acpi_init(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000106184.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 21 warnings, 23 checks, 816 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000106184.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
