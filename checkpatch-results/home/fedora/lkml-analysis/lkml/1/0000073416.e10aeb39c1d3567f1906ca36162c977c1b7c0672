WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#51: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: drivers/target/target_core_pscsi.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: drivers/target/target_core_pscsi.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#80: FILE: drivers/target/target_core_pscsi.c:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#84: FILE: drivers/target/target_core_pscsi.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#114: FILE: drivers/target/target_core_pscsi.c:59:
+#define ISPRINT(a)  ((a >= ' ') && (a <= '~'))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#114: FILE: drivers/target/target_core_pscsi.c:59:
+#define ISPRINT(a)  ((a >= ' ') && (a <= '~'))

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#120: FILE: drivers/target/target_core_pscsi.c:65:
+static struct Scsi_Host *pscsi_get_sh(u32 host_no)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: drivers/target/target_core_pscsi.c:71:
+		printk(KERN_ERR "Unable to locate SCSI HBA with Host ID:"

WARNING:SPLIT_STRING: quoted string split across lines
#127: FILE: drivers/target/target_core_pscsi.c:72:
+		printk(KERN_ERR "Unable to locate SCSI HBA with Host ID:"
+				" %u\n", host_no);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: drivers/target/target_core_pscsi.c:89:
+		printk(KERN_ERR "struct scsi_device is NULL!\n");

CHECK:SPACING: No space is necessary after a cast
#160: FILE: drivers/target/target_core_pscsi.c:105:
+	disk = (struct gendisk *) sdisk->disk;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#162: FILE: drivers/target/target_core_pscsi.c:107:
+		printk(KERN_ERR "dev_get_drvdata() failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#183: FILE: drivers/target/target_core_pscsi.c:128:
+		printk(KERN_ERR "struct scsi_device is NULL!\n");

CHECK:SPACING: No space is necessary after a cast
#199: FILE: drivers/target/target_core_pscsi.c:144:
+	disk = (struct gendisk *) sdisk->disk;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#201: FILE: drivers/target/target_core_pscsi.c:146:
+		printk(KERN_ERR "dev_get_drvdata() failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#205: FILE: drivers/target/target_core_pscsi.c:150:
+	printk(KERN_INFO "PSCSI: Claiming %p Major:Minor - %d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: drivers/target/target_core_pscsi.c:151:
+	printk(KERN_INFO "PSCSI: Claiming %p Major:Minor - %d:%d\n",
+		sd, disk->major, disk->first_minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/target/target_core_pscsi.c:154:
+	bdev = linux_blockdevice_claim(disk->major, disk->first_minor,
+				(void *)sd);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: drivers/target/target_core_pscsi.c:163:
+ * ^IShould be called with scsi_device_get(sd) held$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#226: FILE: drivers/target/target_core_pscsi.c:171:
+		printk(KERN_ERR "struct scsi_device is NULL!\n");

CHECK:SPACING: No space is necessary after a cast
#242: FILE: drivers/target/target_core_pscsi.c:187:
+	disk = (struct gendisk *) sdisk->disk;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#244: FILE: drivers/target/target_core_pscsi.c:189:
+		printk(KERN_ERR "dev_get_drvdata() failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#248: FILE: drivers/target/target_core_pscsi.c:193:
+	printk(KERN_INFO "PSCSI: Releasing Major:Minor - %d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/target/target_core_pscsi.c:194:
+	printk(KERN_INFO "PSCSI: Releasing Major:Minor - %d:%d\n",
+		disk->major, disk->first_minor);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: drivers/target/target_core_pscsi.c:201:
+ * ^Ipscsi_get_sh() used scsi_host_lookup() to locate struct Scsi_Host.$

CHECK:SPACING: No space is necessary after a cast
#280: FILE: drivers/target/target_core_pscsi.c:225:
+	hba->hba_ptr = (void *) sh;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#283: FILE: drivers/target/target_core_pscsi.c:228:
+	printk(KERN_INFO "CORE_HBA[%d] - %s SCSI HBA Driver %s on"

WARNING:SPLIT_STRING: quoted string split across lines
#284: FILE: drivers/target/target_core_pscsi.c:229:
+	printk(KERN_INFO "CORE_HBA[%d] - %s SCSI HBA Driver %s on"
+		" Generic Target Core Stack %s\n", hba->hba_id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#286: FILE: drivers/target/target_core_pscsi.c:231:
+	printk(KERN_INFO "CORE_HBA[%d] - %s\n", hba->hba_id, (sh->hostt->name) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#288: FILE: drivers/target/target_core_pscsi.c:233:
+	printk(KERN_INFO "CORE_HBA[%d] - Attached SCSI HBA to Generic"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#288: FILE: drivers/target/target_core_pscsi.c:233:
+	printk(KERN_INFO "CORE_HBA[%d] - Attached SCSI HBA to Generic"
+		" Target Core with TCQ Depth: %d MaxSectors: %hu\n",
+		hba->hba_id, atomic_read(&hba->max_queue_depth), max_sectors);

WARNING:SPLIT_STRING: quoted string split across lines
#289: FILE: drivers/target/target_core_pscsi.c:234:
+	printk(KERN_INFO "CORE_HBA[%d] - Attached SCSI HBA to Generic"
+		" Target Core with TCQ Depth: %d MaxSectors: %hu\n",

CHECK:SPACING: No space is necessary after a cast
#301: FILE: drivers/target/target_core_pscsi.c:246:
+	struct Scsi_Host *scsi_host = (struct Scsi_Host *) hba->hba_ptr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#305: FILE: drivers/target/target_core_pscsi.c:250:
+	printk(KERN_INFO "CORE_HBA[%d] - Detached SCSI HBA: %s from"

WARNING:SPLIT_STRING: quoted string split across lines
#306: FILE: drivers/target/target_core_pscsi.c:251:
+	printk(KERN_INFO "CORE_HBA[%d] - Detached SCSI HBA: %s from"
+		" Generic Target Core\n", hba->hba_id,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#319: FILE: drivers/target/target_core_pscsi.c:264:
+se_device_t *pscsi_add_device_to_list(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#346: FILE: drivers/target/target_core_pscsi.c:291:
+			printk(KERN_ERR "Unable to set sector_size for %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/target/target_core_pscsi.c:292:
+			printk(KERN_ERR "Unable to set sector_size for %d\n",
+					sd->type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#352: FILE: drivers/target/target_core_pscsi.c:297:
+			printk(KERN_ERR "Set broken SCSI Device"

WARNING:SPLIT_STRING: quoted string split across lines
#353: FILE: drivers/target/target_core_pscsi.c:298:
+			printk(KERN_ERR "Set broken SCSI Device"
+				" %d:%d:%d sector_size to %d\n", sd->channel,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: drivers/target/target_core_pscsi.c:306:
+		printk(KERN_ERR "Set broken SCSI Device %d:%d:%d"

WARNING:SPLIT_STRING: quoted string split across lines
#362: FILE: drivers/target/target_core_pscsi.c:307:
+		printk(KERN_ERR "Set broken SCSI Device %d:%d:%d"
+			" queue_depth to %d\n", sd->channel, sd->id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/target/target_core_pscsi.c:326:
+	dev = transport_add_device_to_core_hba(hba, &pscsi_template,
+				se_dev, dev_flags, (void *)pdv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/target/target_core_pscsi.c:345:
+		cmd = transport_allocate_passthrough(&cdb[0],
+				SE_DIRECTION_READ, 0, NULL, 0, 12,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#403: FILE: drivers/target/target_core_pscsi.c:348:
+			printk(KERN_ERR "Unable to determine blocksize for"

WARNING:SPLIT_STRING: quoted string split across lines
#404: FILE: drivers/target/target_core_pscsi.c:349:
+			printk(KERN_ERR "Unable to determine blocksize for"
+				" TYPE_TAPE\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#409: FILE: drivers/target/target_core_pscsi.c:354:
+			printk(KERN_ERR "Unable to determine blocksize for"

WARNING:SPLIT_STRING: quoted string split across lines
#410: FILE: drivers/target/target_core_pscsi.c:355:
+			printk(KERN_ERR "Unable to determine blocksize for"
+				" TYPE_TAPE\n");

CHECK:SPACING: No space is necessary after a cast
#433: FILE: drivers/target/target_core_pscsi.c:378:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#441: FILE: drivers/target/target_core_pscsi.c:386:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#453: FILE: drivers/target/target_core_pscsi.c:398:
+		printk(KERN_ERR "Unable to allocate memory for pscsi_dev_virt_t\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#458: FILE: drivers/target/target_core_pscsi.c:403:
+	printk(KERN_INFO "PSCSI: Allocated pdv: %p for %s\n", pdv, name);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#465: FILE: drivers/target/target_core_pscsi.c:410:
+se_device_t *pscsi_create_type_disk(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: drivers/target/target_core_pscsi.c:421:
+		printk(KERN_ERR "scsi_device_get() failed for %d:%d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/target/target_core_pscsi.c:422:
+		printk(KERN_ERR "scsi_device_get() failed for %d:%d:%d:%d\n",
+			sh->host_no, sd->channel, sd->id, sd->lun);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#485: FILE: drivers/target/target_core_pscsi.c:430:
+		printk(KERN_ERR "pscsi_check_sd() failed for %d:%d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/target/target_core_pscsi.c:431:
+		printk(KERN_ERR "pscsi_check_sd() failed for %d:%d:%d:%d\n",
+			sh->host_no, sd->channel, sd->id, sd->lun);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#498: FILE: drivers/target/target_core_pscsi.c:443:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Added TYPE_DISK for %d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: drivers/target/target_core_pscsi.c:444:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Added TYPE_DISK for %d:%d:%d\n",
+		sh->host_no, sd->channel, sd->id, sd->lun);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#507: FILE: drivers/target/target_core_pscsi.c:452:
+se_device_t *pscsi_create_type_rom(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#518: FILE: drivers/target/target_core_pscsi.c:463:
+		printk(KERN_ERR "scsi_device_get() failed for %d:%d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/target/target_core_pscsi.c:464:
+		printk(KERN_ERR "scsi_device_get() failed for %d:%d:%d:%d\n",
+			sh->host_no, sd->channel, sd->id, sd->lun);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#530: FILE: drivers/target/target_core_pscsi.c:475:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Added Type: %s for %d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/target/target_core_pscsi.c:476:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Added Type: %s for %d:%d:%d\n",
+		sh->host_no, scsi_device_type(sd->type), sd->channel,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#540: FILE: drivers/target/target_core_pscsi.c:485:
+se_device_t *pscsi_create_type_other(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#555: FILE: drivers/target/target_core_pscsi.c:500:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Added Type: %s for %d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/target/target_core_pscsi.c:501:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Added Type: %s for %d:%d:%d\n",
+		sh->host_no, scsi_device_type(sd->type), sd->channel,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#562: FILE: drivers/target/target_core_pscsi.c:507:
+se_device_t *pscsi_create_virtdevice(

CHECK:SPACING: No space is necessary after a cast
#570: FILE: drivers/target/target_core_pscsi.c:515:
+	struct Scsi_Host *sh = (struct Scsi_Host *) hba->hba_ptr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#573: FILE: drivers/target/target_core_pscsi.c:518:
+		printk(KERN_ERR "Unable to locate pscsi_dev_virt_t"

WARNING:SPLIT_STRING: quoted string split across lines
#574: FILE: drivers/target/target_core_pscsi.c:519:
+		printk(KERN_ERR "Unable to locate pscsi_dev_virt_t"
+				" parameter\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdv->pdv_channel_id != sd->channel'
#580: FILE: drivers/target/target_core_pscsi.c:525:
+		if ((pdv->pdv_channel_id != sd->channel) ||
+		    (pdv->pdv_target_id != sd->id) ||
+		    (pdv->pdv_lun_id != sd->lun))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdv->pdv_target_id != sd->id'
#580: FILE: drivers/target/target_core_pscsi.c:525:
+		if ((pdv->pdv_channel_id != sd->channel) ||
+		    (pdv->pdv_target_id != sd->id) ||
+		    (pdv->pdv_lun_id != sd->lun))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdv->pdv_lun_id != sd->lun'
#580: FILE: drivers/target/target_core_pscsi.c:525:
+		if ((pdv->pdv_channel_id != sd->channel) ||
+		    (pdv->pdv_target_id != sd->id) ||
+		    (pdv->pdv_lun_id != sd->lun))

WARNING:REPEATED_WORD: Possible repeated word: 'calling'
#586: FILE: drivers/target/target_core_pscsi.c:531:
+		 * before calling calling pscsi_check_sd() and

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#609: FILE: drivers/target/target_core_pscsi.c:554:
+	printk(KERN_ERR "Unable to locate %d:%d:%d:%d\n", sh->host_no,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/target/target_core_pscsi.c:555:
+	printk(KERN_ERR "Unable to locate %d:%d:%d:%d\n", sh->host_no,
+		pdv->pdv_channel_id,  pdv->pdv_target_id, pdv->pdv_lun_id);

CHECK:SPACING: No space is necessary after a cast
#621: FILE: drivers/target/target_core_pscsi.c:566:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#622: FILE: drivers/target/target_core_pscsi.c:567:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#625: FILE: drivers/target/target_core_pscsi.c:570:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Activating Device with TCQ: %d at"

WARNING:SPLIT_STRING: quoted string split across lines
#626: FILE: drivers/target/target_core_pscsi.c:571:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Activating Device with TCQ: %d at"
+		" SCSI Location (Channel/Target/LUN) %d/%d/%d\n", sh->host_no,

CHECK:SPACING: No space is necessary after a cast
#638: FILE: drivers/target/target_core_pscsi.c:583:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#639: FILE: drivers/target/target_core_pscsi.c:584:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#642: FILE: drivers/target/target_core_pscsi.c:587:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Deactivating Device with TCQ: %d at"

WARNING:SPLIT_STRING: quoted string split across lines
#643: FILE: drivers/target/target_core_pscsi.c:588:
+	printk(KERN_INFO "CORE_PSCSI[%d] - Deactivating Device with TCQ: %d at"
+		" SCSI Location (Channel/Target/LUN) %d/%d/%d\n", sh->host_no,

CHECK:SPACING: No space is necessary after a cast
#653: FILE: drivers/target/target_core_pscsi.c:598:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) p;

CHECK:SPACING: No space is necessary after a cast
#654: FILE: drivers/target/target_core_pscsi.c:599:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sd->type == TYPE_DISK'
#657: FILE: drivers/target/target_core_pscsi.c:602:
+		if ((sd->type == TYPE_DISK) || (sd->type == TYPE_ROM))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sd->type == TYPE_ROM'
#657: FILE: drivers/target/target_core_pscsi.c:602:
+		if ((sd->type == TYPE_DISK) || (sd->type == TYPE_ROM))

CHECK:SPACING: No space is necessary after a cast
#672: FILE: drivers/target/target_core_pscsi.c:617:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) task->se_dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#673: FILE: drivers/target/target_core_pscsi.c:618:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:SPACING: No space is necessary after a cast
#675: FILE: drivers/target/target_core_pscsi.c:620:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == INQUIRY'
#681: FILE: drivers/target/target_core_pscsi.c:626:
+	if ((cdb[0] == INQUIRY) && host_byte(result) == DID_OK) {

CHECK:BRACES: Unbalanced braces around else statement
#727: FILE: drivers/target/target_core_pscsi.c:672:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'Identifer' may be misspelled - perhaps 'Identifier'?
#755: FILE: drivers/target/target_core_pscsi.c:700:
+			buf[7] = len; /* Identifer Length */
 			                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#763: FILE: drivers/target/target_core_pscsi.c:708:
+		if ((len + 4) > task->task_size) {
[...]
+		} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#764: FILE: drivers/target/target_core_pscsi.c:709:
+			printk(KERN_ERR "Inquiry VPD Length: %u larger than"

WARNING:SPLIT_STRING: quoted string split across lines
#765: FILE: drivers/target/target_core_pscsi.c:710:
+			printk(KERN_ERR "Inquiry VPD Length: %u larger than"
+				" req->sr_bufflen: %u\n", (len + 4),

CHECK:BRACES: Unbalanced braces around else statement
#768: FILE: drivers/target/target_core_pscsi.c:713:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == MODE_SENSE'
#784: FILE: drivers/target/target_core_pscsi.c:729:
+	if (((cdb[0] == MODE_SENSE) || (cdb[0] == MODE_SENSE_10)) &&
+	     (status_byte(result) << 1) == SAM_STAT_GOOD) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == MODE_SENSE_10'
#784: FILE: drivers/target/target_core_pscsi.c:729:
+	if (((cdb[0] == MODE_SENSE) || (cdb[0] == MODE_SENSE_10)) &&
+	     (status_byte(result) << 1) == SAM_STAT_GOOD) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: drivers/target/target_core_pscsi.c:730:
+	if (((cdb[0] == MODE_SENSE) || (cdb[0] == MODE_SENSE_10)) &&
+	     (status_byte(result) << 1) == SAM_STAT_GOOD) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == MODE_SELECT'
#816: FILE: drivers/target/target_core_pscsi.c:761:
+	if (((cdb[0] == MODE_SELECT) || (cdb[0] == MODE_SELECT_10)) &&
+	      (status_byte(result) << 1) == SAM_STAT_GOOD) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == MODE_SELECT_10'
#816: FILE: drivers/target/target_core_pscsi.c:761:
+	if (((cdb[0] == MODE_SELECT) || (cdb[0] == MODE_SELECT_10)) &&
+	      (status_byte(result) << 1) == SAM_STAT_GOOD) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/target/target_core_pscsi.c:762:
+	if (((cdb[0] == MODE_SELECT) || (cdb[0] == MODE_SELECT_10)) &&
+	      (status_byte(result) << 1) == SAM_STAT_GOOD) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#825: FILE: drivers/target/target_core_pscsi.c:770:
+			printk(KERN_ERR "Unable to get buf for scatterlist\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#858: FILE: drivers/target/target_core_pscsi.c:803:
+void *pscsi_allocate_request(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#866: FILE: drivers/target/target_core_pscsi.c:811:
+		printk(KERN_ERR "Unable to allocate pscsi_plugin_task_t\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#873: FILE: drivers/target/target_core_pscsi.c:818:
+static inline void pscsi_blk_init_request(

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#902: FILE: drivers/target/target_core_pscsi.c:847:
+ * Used for pSCSI data payloads for all *NON* SCF_SCSI_DATA_SG_IO_CDB
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#905: FILE: drivers/target/target_core_pscsi.c:850:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#906: FILE: drivers/target/target_core_pscsi.c:851:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) task->se_dev->dev_ptr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/target/target_core_pscsi.c:854:
+	pt->pscsi_req = blk_get_request(pdv->pdv_sd->request_queue,
+			(pt->pscsi_direction == DMA_TO_DEVICE), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#911: FILE: drivers/target/target_core_pscsi.c:856:
+		printk(KERN_ERR "PSCSI: blk_get_request() failed: %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: drivers/target/target_core_pscsi.c:857:
+		printk(KERN_ERR "PSCSI: blk_get_request() failed: %ld\n",
+				IS_ERR(pt->pscsi_req));

CHECK:SPACING: No space is necessary after a cast
#929: FILE: drivers/target/target_core_pscsi.c:874:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#930: FILE: drivers/target/target_core_pscsi.c:875:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) task->se_dev->dev_ptr;

CHECK:BRACES: braces {} should be used on all arms of this statement
#938: FILE: drivers/target/target_core_pscsi.c:883:
+	if (pdv->pdv_sd->type == TYPE_DISK) {
[...]
+	} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#939: FILE: drivers/target/target_core_pscsi.c:884:
+		struct scsi_disk *sdisk = dev_get_drvdata(

CHECK:BRACES: Unbalanced braces around else statement
#943: FILE: drivers/target/target_core_pscsi.c:888:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#971: FILE: drivers/target/target_core_pscsi.c:916:
+ssize_t pscsi_set_configfs_dev_params(se_hba_t *hba,
+	se_subsystem_dev_t *se_dev,

CHECK:SPACING: No space is necessary after a cast
#975: FILE: drivers/target/target_core_pscsi.c:920:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) se_dev->se_dev_su_ptr;

CHECK:SPACING: No space is necessary after a cast
#976: FILE: drivers/target/target_core_pscsi.c:921:
+	struct Scsi_Host *sh = (struct Scsi_Host *) hba->hba_ptr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#983: FILE: drivers/target/target_core_pscsi.c:928:
+		printk(KERN_ERR "Unable to allocate memory for temporary"

WARNING:SPLIT_STRING: quoted string split across lines
#984: FILE: drivers/target/target_core_pscsi.c:929:
+		printk(KERN_ERR "Unable to allocate memory for temporary"
+				" buffer\n");

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1001: FILE: drivers/target/target_core_pscsi.c:946:
+			ret = strict_strtoul(ptr, 0, &scsi_channel_id);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1003: FILE: drivers/target/target_core_pscsi.c:948:
+				printk(KERN_ERR "strict_strtoul() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#1004: FILE: drivers/target/target_core_pscsi.c:949:
+				printk(KERN_ERR "strict_strtoul() failed for"
+					" scsi_channel_id=\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1008: FILE: drivers/target/target_core_pscsi.c:953:
+			printk(KERN_INFO "PSCSI[%d]: Referencing SCSI Channel"

WARNING:SPLIT_STRING: quoted string split across lines
#1009: FILE: drivers/target/target_core_pscsi.c:954:
+			printk(KERN_INFO "PSCSI[%d]: Referencing SCSI Channel"
+				" ID: %d\n",  sh->host_no, pdv->pdv_channel_id);

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1017: FILE: drivers/target/target_core_pscsi.c:962:
+			ret = strict_strtoul(ptr, 0, &scsi_target_id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1019: FILE: drivers/target/target_core_pscsi.c:964:
+				printk("strict_strtoul() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#1020: FILE: drivers/target/target_core_pscsi.c:965:
+				printk("strict_strtoul() failed for"
+					" strict_strtoul()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1024: FILE: drivers/target/target_core_pscsi.c:969:
+			printk(KERN_INFO "PSCSI[%d]: Referencing SCSI Target"

WARNING:SPLIT_STRING: quoted string split across lines
#1025: FILE: drivers/target/target_core_pscsi.c:970:
+			printk(KERN_INFO "PSCSI[%d]: Referencing SCSI Target"
+				" ID: %d\n", sh->host_no, pdv->pdv_target_id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1031: FILE: drivers/target/target_core_pscsi.c:976:
+		if ((ptr2)) {
[...]
+		} else
[...]

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1033: FILE: drivers/target/target_core_pscsi.c:978:
+			ret = strict_strtoul(ptr, 0, &scsi_lun_id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1035: FILE: drivers/target/target_core_pscsi.c:980:
+				printk("strict_strtoul() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#1036: FILE: drivers/target/target_core_pscsi.c:981:
+				printk("strict_strtoul() failed for"
+					" scsi_lun_id=\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1040: FILE: drivers/target/target_core_pscsi.c:985:
+			printk(KERN_INFO "PSCSI[%d]: Referencing SCSI LUN ID:"

WARNING:SPLIT_STRING: quoted string split across lines
#1041: FILE: drivers/target/target_core_pscsi.c:986:
+			printk(KERN_INFO "PSCSI[%d]: Referencing SCSI LUN ID:"
+				" %d\n", sh->host_no, pdv->pdv_lun_id);

CHECK:BRACES: Unbalanced braces around else statement
#1044: FILE: drivers/target/target_core_pscsi.c:989:
+		} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1053: FILE: drivers/target/target_core_pscsi.c:998:
+ssize_t pscsi_check_configfs_dev_params(

CHECK:SPACING: No space is necessary after a cast
#1057: FILE: drivers/target/target_core_pscsi.c:1002:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) se_dev->se_dev_su_ptr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1062: FILE: drivers/target/target_core_pscsi.c:1007:
+		printk(KERN_ERR "Missing scsi_channel_id=, scsi_target_id= and"

WARNING:SPLIT_STRING: quoted string split across lines
#1063: FILE: drivers/target/target_core_pscsi.c:1008:
+		printk(KERN_ERR "Missing scsi_channel_id=, scsi_target_id= and"
+			" scsi_lun_id= parameters\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1070: FILE: drivers/target/target_core_pscsi.c:1015:
+ssize_t pscsi_show_configfs_dev_params(

CHECK:SPACING: No space is necessary after a cast
#1075: FILE: drivers/target/target_core_pscsi.c:1020:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) se_dev->se_dev_su_ptr;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1082: FILE: drivers/target/target_core_pscsi.c:1027:
+se_device_t *pscsi_create_virtdevice_from_fd(

CHECK:SPACING: No space is necessary after a cast
#1086: FILE: drivers/target/target_core_pscsi.c:1031:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) se_dev->se_dev_su_ptr;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1090: FILE: drivers/target/target_core_pscsi.c:1035:
+	struct file *filp;
 	             ^^^^

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#1099: FILE: drivers/target/target_core_pscsi.c:1044:
+	ret = strict_strtoull(p, 0, (unsigned long long *)&fd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1101: FILE: drivers/target/target_core_pscsi.c:1046:
+		printk(KERN_ERR "strict_strtol() failed for fd\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1105: FILE: drivers/target/target_core_pscsi.c:1050:
+		printk(KERN_ERR "PSCSI: Illegal value of file descriptor:"

WARNING:SPLIT_STRING: quoted string split across lines
#1106: FILE: drivers/target/target_core_pscsi.c:1051:
+		printk(KERN_ERR "PSCSI: Illegal value of file descriptor:"
+			" %llu\n", fd);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1109: FILE: drivers/target/target_core_pscsi.c:1054:
+	filp = fget(fd);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1110: FILE: drivers/target/target_core_pscsi.c:1055:
+	if (!(filp)) {
 	      ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1111: FILE: drivers/target/target_core_pscsi.c:1056:
+		printk(KERN_ERR "PSCSI: Unable to fget() fd: %llu\n", fd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1116: FILE: drivers/target/target_core_pscsi.c:1061:
+		printk(KERN_ERR "PSCSI: Unable to locate struct inode for"

WARNING:SPLIT_STRING: quoted string split across lines
#1117: FILE: drivers/target/target_core_pscsi.c:1062:
+		printk(KERN_ERR "PSCSI: Unable to locate struct inode for"
+			" struct block_device fd\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1118: FILE: drivers/target/target_core_pscsi.c:1063:
+		fput(filp);
 		     ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1129: FILE: drivers/target/target_core_pscsi.c:1074:
+			printk(KERN_ERR "PSCSI: Unable to locate struct"

WARNING:SPLIT_STRING: quoted string split across lines
#1130: FILE: drivers/target/target_core_pscsi.c:1075:
+			printk(KERN_ERR "PSCSI: Unable to locate struct"
+				" block_device from I_BDEV()\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1131: FILE: drivers/target/target_core_pscsi.c:1076:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1132: FILE: drivers/target/target_core_pscsi.c:1077:
+			fput(filp);
 			     ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1137: FILE: drivers/target/target_core_pscsi.c:1082:
+			printk(KERN_ERR "PSCSI: Unable to locate struct gendisk"

WARNING:SPLIT_STRING: quoted string split across lines
#1138: FILE: drivers/target/target_core_pscsi.c:1083:
+			printk(KERN_ERR "PSCSI: Unable to locate struct gendisk"
+				" from struct block_device\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1139: FILE: drivers/target/target_core_pscsi.c:1084:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1140: FILE: drivers/target/target_core_pscsi.c:1085:
+			fput(filp);
 			     ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1154: FILE: drivers/target/target_core_pscsi.c:1099:
+			printk(KERN_ERR "PSCSI: struct gendisk->driverfs_dev"

WARNING:SPLIT_STRING: quoted string split across lines
#1155: FILE: drivers/target/target_core_pscsi.c:1100:
+			printk(KERN_ERR "PSCSI: struct gendisk->driverfs_dev"
+					" is NULL!\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1156: FILE: drivers/target/target_core_pscsi.c:1101:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1157: FILE: drivers/target/target_core_pscsi.c:1102:
+			fput(filp);
 			     ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1162: FILE: drivers/target/target_core_pscsi.c:1107:
+			printk(KERN_ERR "PSCSI: Unable to locate struct"

WARNING:SPLIT_STRING: quoted string split across lines
#1163: FILE: drivers/target/target_core_pscsi.c:1108:
+			printk(KERN_ERR "PSCSI: Unable to locate struct"
+				" scsi_device from struct gendisk->"

WARNING:SPLIT_STRING: quoted string split across lines
#1164: FILE: drivers/target/target_core_pscsi.c:1109:
+				" scsi_device from struct gendisk->"
+				"driverfs_dev\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1165: FILE: drivers/target/target_core_pscsi.c:1110:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1166: FILE: drivers/target/target_core_pscsi.c:1111:
+			fput(filp);
 			     ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1170: FILE: drivers/target/target_core_pscsi.c:1115:
+			printk(KERN_ERR "PSCSI: Trying to attach scsi_device"

WARNING:SPLIT_STRING: quoted string split across lines
#1171: FILE: drivers/target/target_core_pscsi.c:1116:
+			printk(KERN_ERR "PSCSI: Trying to attach scsi_device"
+				" Host ID: %d, but se_hba_t has SCSI Host ID:"

WARNING:SPLIT_STRING: quoted string split across lines
#1172: FILE: drivers/target/target_core_pscsi.c:1117:
+				" Host ID: %d, but se_hba_t has SCSI Host ID:"
+				" %d\n", sd->host->host_no, sh->host_no);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1173: FILE: drivers/target/target_core_pscsi.c:1118:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1174: FILE: drivers/target/target_core_pscsi.c:1119:
+			fput(filp);
 			     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: drivers/target/target_core_pscsi.c:1129:
+			dev = pscsi_create_type_disk(sd, pdv, se_dev,
+					se_dev->se_dev_hba);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1188: FILE: drivers/target/target_core_pscsi.c:1133:
+			dev = pscsi_create_type_rom(sd, pdv, se_dev,
+					se_dev->se_dev_hba);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1191: FILE: drivers/target/target_core_pscsi.c:1136:
+			printk(KERN_ERR "PSCSI: Unable to handle type S_ISBLK()"

WARNING:SPLIT_STRING: quoted string split across lines
#1192: FILE: drivers/target/target_core_pscsi.c:1137:
+			printk(KERN_ERR "PSCSI: Unable to handle type S_ISBLK()"
+				" == TRUE Type: %s\n",

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1195: FILE: drivers/target/target_core_pscsi.c:1140:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1196: FILE: drivers/target/target_core_pscsi.c:1141:
+			fput(filp);
 			     ^^^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1197: FILE: drivers/target/target_core_pscsi.c:1142:
+			return ERR_PTR(-ENOSYS);

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1204: FILE: drivers/target/target_core_pscsi.c:1149:
+		printk(KERN_ERR "SCSI Character Device unsupported via"

WARNING:SPLIT_STRING: quoted string split across lines
#1205: FILE: drivers/target/target_core_pscsi.c:1150:
+		printk(KERN_ERR "SCSI Character Device unsupported via"
+			" configfs/fd  method.  Use configfs/control"

WARNING:SPLIT_STRING: quoted string split across lines
#1206: FILE: drivers/target/target_core_pscsi.c:1151:
+			" configfs/fd  method.  Use configfs/control"
+				" instead\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1207: FILE: drivers/target/target_core_pscsi.c:1152:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1208: FILE: drivers/target/target_core_pscsi.c:1153:
+		fput(filp);
 		     ^^^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1209: FILE: drivers/target/target_core_pscsi.c:1154:
+		return ERR_PTR(-ENOSYS);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1210: FILE: drivers/target/target_core_pscsi.c:1155:
+		return ERR_PTR(-ENOSYS);
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1211: FILE: drivers/target/target_core_pscsi.c:1156:
+		printk(KERN_ERR "PSCSI: File destriptor is not SCSI block or"

WARNING:SPLIT_STRING: quoted string split across lines
#1212: FILE: drivers/target/target_core_pscsi.c:1157:
+		printk(KERN_ERR "PSCSI: File destriptor is not SCSI block or"
+			" character device, ignoring\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1213: FILE: drivers/target/target_core_pscsi.c:1158:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1214: FILE: drivers/target/target_core_pscsi.c:1159:
+		fput(filp);
 		     ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1218: FILE: drivers/target/target_core_pscsi.c:1163:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1219: FILE: drivers/target/target_core_pscsi.c:1164:
+	fput(filp);
 	     ^^^^

CHECK:SPACING: No space is necessary after a cast
#1231: FILE: drivers/target/target_core_pscsi.c:1176:
+	struct Scsi_Host *sh = (struct Scsi_Host *) hba->hba_ptr;

CHECK:SPACING: No space is necessary after a cast
#1241: FILE: drivers/target/target_core_pscsi.c:1186:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#1249: FILE: drivers/target/target_core_pscsi.c:1194:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

WARNING:SPLIT_STRING: quoted string split across lines
#1252: FILE: drivers/target/target_core_pscsi.c:1197:
+	*bl += sprintf(b + *bl, "SCSI Device Bus Location:"
+		" Channel ID: %d Target ID: %d LUN: %d\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#1279: FILE: drivers/target/target_core_pscsi.c:1224:
+		if (sd->type == TYPE_DISK) {
[...]
+		} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1282: FILE: drivers/target/target_core_pscsi.c:1227:
+			struct gendisk *disk = (struct gendisk *) sdisk->disk;

CHECK:BRACES: Unbalanced braces around else statement
#1291: FILE: drivers/target/target_core_pscsi.c:1236:
+		} else

WARNING:RETURN_VOID: void function return statements are not generally useful
#1296: FILE: drivers/target/target_core_pscsi.c:1241:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1312: FILE: drivers/target/target_core_pscsi.c:1257:
+		printk(KERN_ERR "PSCSI: bio_kmalloc() failed\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1320: FILE: drivers/target/target_core_pscsi.c:1265:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1321: FILE: drivers/target/target_core_pscsi.c:1266:
+#define DEBUG_PSCSI(x...) printk(x)

CHECK:SPACING: No space is necessary after a cast
#1332: FILE: drivers/target/target_core_pscsi.c:1277:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1333: FILE: drivers/target/target_core_pscsi.c:1278:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) task->se_dev->dev_ptr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1364: FILE: drivers/target/target_core_pscsi.c:1309:
+		DEBUG_PSCSI("PSCSI: i: %d page: %p len: %d off: %d\n", i,
+			page, len, off);

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#1380: FILE: drivers/target/target_core_pscsi.c:1325:
+				 * FIXME: Use bio_set_dir() when avaliable
 				                                 ^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1386: FILE: drivers/target/target_core_pscsi.c:1331:
+				DEBUG_PSCSI("PSCSI: Allocated bio: %p,"
+					" dir: %s nr_vecs: %d\n", bio,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1395: FILE: drivers/target/target_core_pscsi.c:1340:
+					hbio = tbio = bio;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1397: FILE: drivers/target/target_core_pscsi.c:1342:
+					tbio = tbio->bi_next = bio;

WARNING:SPLIT_STRING: quoted string split across lines
#1401: FILE: drivers/target/target_core_pscsi.c:1346:
+			DEBUG_PSCSI("PSCSI: Calling bio_add_pc_page() i: %d"
+				" bio: %p page: %p len: %d off: %d\n", i, bio,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1405: FILE: drivers/target/target_core_pscsi.c:1350:
+			ret = bio_add_pc_page(pdv->pdv_sd->request_queue,
+					bio, page, bytes, off);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1410: FILE: drivers/target/target_core_pscsi.c:1355:
+			DEBUG_PSCSI("PSCSI: bio->bi_vcnt: %d nr_vecs: %d\n",
+				bio->bi_vcnt, nr_vecs);

WARNING:SPLIT_STRING: quoted string split across lines
#1414: FILE: drivers/target/target_core_pscsi.c:1359:
+				DEBUG_PSCSI("PSCSI: Reached bio->bi_vcnt max:"
+					" %d i: %d bio: %p, allocating another"

WARNING:SPLIT_STRING: quoted string split across lines
#1415: FILE: drivers/target/target_core_pscsi.c:1360:
+					" %d i: %d bio: %p, allocating another"
+					" bio\n", bio->bi_vcnt, i, bio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1436: FILE: drivers/target/target_core_pscsi.c:1381:
+	pt->pscsi_req = blk_make_request(pdv->pdv_sd->request_queue,
+				hbio, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1438: FILE: drivers/target/target_core_pscsi.c:1383:
+		printk(KERN_ERR "pSCSI: blk_make_request() failed\n");

CHECK:SPACING: No space is necessary after a cast
#1465: FILE: drivers/target/target_core_pscsi.c:1410:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1466: FILE: drivers/target/target_core_pscsi.c:1411:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) task->se_dev->dev_ptr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: drivers/target/target_core_pscsi.c:1418:
+	ret = blk_rq_map_kern(pdv->pdv_sd->request_queue,
+			pt->pscsi_req, T_TASK(cmd)->t_task_buf,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1476: FILE: drivers/target/target_core_pscsi.c:1421:
+		printk(KERN_ERR "PSCSI: blk_rq_map_kern() failed: %d\n", ret);

CHECK:SPACING: No space is necessary after a cast
#1488: FILE: drivers/target/target_core_pscsi.c:1433:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1499: FILE: drivers/target/target_core_pscsi.c:1444:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1512: FILE: drivers/target/target_core_pscsi.c:1457:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1528: FILE: drivers/target/target_core_pscsi.c:1473:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1547: FILE: drivers/target/target_core_pscsi.c:1492:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1563: FILE: drivers/target/target_core_pscsi.c:1508:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1600: FILE: drivers/target/target_core_pscsi.c:1545:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1611: FILE: drivers/target/target_core_pscsi.c:1556:
+	pscsi_plugin_task_t *pt = (pscsi_plugin_task_t *) task->transport_req;

CHECK:SPACING: No space is necessary after a cast
#1622: FILE: drivers/target/target_core_pscsi.c:1567:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#1623: FILE: drivers/target/target_core_pscsi.c:1568:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:SPACING: No space is necessary after a cast
#1634: FILE: drivers/target/target_core_pscsi.c:1579:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#1635: FILE: drivers/target/target_core_pscsi.c:1580:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:SPACING: No space is necessary after a cast
#1646: FILE: drivers/target/target_core_pscsi.c:1591:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#1647: FILE: drivers/target/target_core_pscsi.c:1592:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:SPACING: No space is necessary after a cast
#1667: FILE: drivers/target/target_core_pscsi.c:1612:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#1668: FILE: drivers/target/target_core_pscsi.c:1613:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:SPACING: No space is necessary after a cast
#1680: FILE: drivers/target/target_core_pscsi.c:1625:
+	pscsi_dev_virt_t *pdv = (pscsi_dev_virt_t *) dev->dev_ptr;

CHECK:SPACING: No space is necessary after a cast
#1681: FILE: drivers/target/target_core_pscsi.c:1626:
+	struct scsi_device *sd = (struct scsi_device *) pdv->pdv_sd;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1690: FILE: drivers/target/target_core_pscsi.c:1635:
+static inline void pscsi_process_SAM_status(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task->task_scsi_status'
#1695: FILE: drivers/target/target_core_pscsi.c:1640:
+	if ((task->task_scsi_status)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1697: FILE: drivers/target/target_core_pscsi.c:1642:
+		printk(KERN_INFO "PSCSI Status Byte exception at task: %p CDB:"

WARNING:SPLIT_STRING: quoted string split across lines
#1698: FILE: drivers/target/target_core_pscsi.c:1643:
+		printk(KERN_INFO "PSCSI Status Byte exception at task: %p CDB:"
+			" 0x%02x Result: 0x%08x\n", task, pt->pscsi_cdb[0],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1707: FILE: drivers/target/target_core_pscsi.c:1652:
+		printk(KERN_INFO "PSCSI Host Byte exception at task: %p CDB:"

WARNING:SPLIT_STRING: quoted string split across lines
#1708: FILE: drivers/target/target_core_pscsi.c:1653:
+		printk(KERN_INFO "PSCSI Host Byte exception at task: %p CDB:"
+			" 0x%02x Result: 0x%08x\n", task, pt->pscsi_cdb[0],

WARNING:RETURN_VOID: void function return statements are not generally useful
#1719: FILE: drivers/target/target_core_pscsi.c:1664:
+	return;
+}

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1721: FILE: drivers/target/target_core_pscsi.c:1666:
+void pscsi_req_done(struct request *req, int uptodate)
                                              ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1739: FILE: include/target/target_core_pscsi.h:1:
+/*******************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1763: FILE: include/target/target_core_pscsi.h:25:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1764: FILE: include/target/target_core_pscsi.h:26:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1768: FILE: include/target/target_core_pscsi.h:30:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1783: FILE: include/target/target_core_pscsi.h:45:
+#define PS_TIMEOUT_DISK		(15*HZ)
                        		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1784: FILE: include/target/target_core_pscsi.h:46:
+#define PS_TIMEOUT_OTHER	(500*HZ)
                         	    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1787: FILE: include/target/target_core_pscsi.h:49:
+extern struct block_device *linux_blockdevice_claim(int, int, void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1787: FILE: include/target/target_core_pscsi.h:49:
+extern struct block_device *linux_blockdevice_claim(int, int, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1787: FILE: include/target/target_core_pscsi.h:49:
+extern struct block_device *linux_blockdevice_claim(int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1787: FILE: include/target/target_core_pscsi.h:49:
+extern struct block_device *linux_blockdevice_claim(int, int, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1788: FILE: include/target/target_core_pscsi.h:50:
+extern int linux_blockdevice_release(int, int, struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1788: FILE: include/target/target_core_pscsi.h:50:
+extern int linux_blockdevice_release(int, int, struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1788: FILE: include/target/target_core_pscsi.h:50:
+extern int linux_blockdevice_release(int, int, struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#1788: FILE: include/target/target_core_pscsi.h:50:
+extern int linux_blockdevice_release(int, int, struct block_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1789: FILE: include/target/target_core_pscsi.h:51:
+extern int linux_blockdevice_check(int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1789: FILE: include/target/target_core_pscsi.h:51:
+extern int linux_blockdevice_check(int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1789: FILE: include/target/target_core_pscsi.h:51:
+extern int linux_blockdevice_check(int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1791: FILE: include/target/target_core_pscsi.h:53:
+extern int pscsi_CDB_inquiry(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1791: FILE: include/target/target_core_pscsi.h:53:
+extern int pscsi_CDB_inquiry(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1791: FILE: include/target/target_core_pscsi.h:53:
+extern int pscsi_CDB_inquiry(se_task_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1792: FILE: include/target/target_core_pscsi.h:54:
+extern int pscsi_CDB_none(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1792: FILE: include/target/target_core_pscsi.h:54:
+extern int pscsi_CDB_none(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1792: FILE: include/target/target_core_pscsi.h:54:
+extern int pscsi_CDB_none(se_task_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1793: FILE: include/target/target_core_pscsi.h:55:
+extern int pscsi_CDB_read_non_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1793: FILE: include/target/target_core_pscsi.h:55:
+extern int pscsi_CDB_read_non_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1793: FILE: include/target/target_core_pscsi.h:55:
+extern int pscsi_CDB_read_non_SG(se_task_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1794: FILE: include/target/target_core_pscsi.h:56:
+extern int pscsi_CDB_read_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1794: FILE: include/target/target_core_pscsi.h:56:
+extern int pscsi_CDB_read_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1794: FILE: include/target/target_core_pscsi.h:56:
+extern int pscsi_CDB_read_SG(se_task_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1795: FILE: include/target/target_core_pscsi.h:57:
+extern int pscsi_CDB_write_non_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1795: FILE: include/target/target_core_pscsi.h:57:
+extern int pscsi_CDB_write_non_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1795: FILE: include/target/target_core_pscsi.h:57:
+extern int pscsi_CDB_write_non_SG(se_task_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1796: FILE: include/target/target_core_pscsi.h:58:
+extern int pscsi_CDB_write_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1796: FILE: include/target/target_core_pscsi.h:58:
+extern int pscsi_CDB_write_SG(se_task_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1796: FILE: include/target/target_core_pscsi.h:58:
+extern int pscsi_CDB_write_SG(se_task_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1799: FILE: include/target/target_core_pscsi.h:61:
+extern int pscsi_attach_hba(se_hba_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1800: FILE: include/target/target_core_pscsi.h:62:
+extern int pscsi_detach_hba(se_hba_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1800: FILE: include/target/target_core_pscsi.h:62:
+extern int pscsi_detach_hba(se_hba_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1801: FILE: include/target/target_core_pscsi.h:63:
+extern int pscsi_claim_phydevice(se_hba_t *, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1801: FILE: include/target/target_core_pscsi.h:63:
+extern int pscsi_claim_phydevice(se_hba_t *, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1801: FILE: include/target/target_core_pscsi.h:63:
+extern int pscsi_claim_phydevice(se_hba_t *, se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1802: FILE: include/target/target_core_pscsi.h:64:
+extern int pscsi_release_phydevice(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1802: FILE: include/target/target_core_pscsi.h:64:
+extern int pscsi_release_phydevice(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1803: FILE: include/target/target_core_pscsi.h:65:
+extern void *pscsi_allocate_virtdevice(se_hba_t *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1803: FILE: include/target/target_core_pscsi.h:65:
+extern void *pscsi_allocate_virtdevice(se_hba_t *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1803: FILE: include/target/target_core_pscsi.h:65:
+extern void *pscsi_allocate_virtdevice(se_hba_t *, const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1804: FILE: include/target/target_core_pscsi.h:66:
+extern se_device_t *pscsi_create_virtdevice(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1804: FILE: include/target/target_core_pscsi.h:66:
+extern se_device_t *pscsi_create_virtdevice(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#1804: FILE: include/target/target_core_pscsi.h:66:
+extern se_device_t *pscsi_create_virtdevice(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1804: FILE: include/target/target_core_pscsi.h:66:
+extern se_device_t *pscsi_create_virtdevice(se_hba_t *, se_subsystem_dev_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1805: FILE: include/target/target_core_pscsi.h:67:
+extern se_device_t *pscsi_create_virtdevice(se_hba_t *, se_subsystem_dev_t *,
+					void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1806: FILE: include/target/target_core_pscsi.h:68:
+extern int pscsi_activate_device(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1806: FILE: include/target/target_core_pscsi.h:68:
+extern int pscsi_activate_device(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1807: FILE: include/target/target_core_pscsi.h:69:
+extern void pscsi_deactivate_device(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1807: FILE: include/target/target_core_pscsi.h:69:
+extern void pscsi_deactivate_device(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1808: FILE: include/target/target_core_pscsi.h:70:
+extern void pscsi_free_device(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1808: FILE: include/target/target_core_pscsi.h:70:
+extern void pscsi_free_device(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1809: FILE: include/target/target_core_pscsi.h:71:
+extern int pscsi_transport_complete(se_task_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1809: FILE: include/target/target_core_pscsi.h:71:
+extern int pscsi_transport_complete(se_task_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1810: FILE: include/target/target_core_pscsi.h:72:
+extern void *pscsi_allocate_request(se_task_t *, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1810: FILE: include/target/target_core_pscsi.h:72:
+extern void *pscsi_allocate_request(se_task_t *, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1810: FILE: include/target/target_core_pscsi.h:72:
+extern void *pscsi_allocate_request(se_task_t *, se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1811: FILE: include/target/target_core_pscsi.h:73:
+extern int pscsi_do_task(se_task_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1811: FILE: include/target/target_core_pscsi.h:73:
+extern int pscsi_do_task(se_task_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1812: FILE: include/target/target_core_pscsi.h:74:
+extern void pscsi_free_task(se_task_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1812: FILE: include/target/target_core_pscsi.h:74:
+extern void pscsi_free_task(se_task_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1813: FILE: include/target/target_core_pscsi.h:75:
+extern ssize_t pscsi_set_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1813: FILE: include/target/target_core_pscsi.h:75:
+extern ssize_t pscsi_set_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#1813: FILE: include/target/target_core_pscsi.h:75:
+extern ssize_t pscsi_set_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1813: FILE: include/target/target_core_pscsi.h:75:
+extern ssize_t pscsi_set_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ssize_t' should also have an identifier name
#1813: FILE: include/target/target_core_pscsi.h:75:
+extern ssize_t pscsi_set_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1814: FILE: include/target/target_core_pscsi.h:76:
+extern ssize_t pscsi_set_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,
+						const char *, ssize_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1815: FILE: include/target/target_core_pscsi.h:77:
+extern ssize_t pscsi_check_configfs_dev_params(se_hba_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1815: FILE: include/target/target_core_pscsi.h:77:
+extern ssize_t pscsi_check_configfs_dev_params(se_hba_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#1815: FILE: include/target/target_core_pscsi.h:77:
+extern ssize_t pscsi_check_configfs_dev_params(se_hba_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: include/target/target_core_pscsi.h:78:
+extern ssize_t pscsi_check_configfs_dev_params(se_hba_t *,
+						se_subsystem_dev_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1817: FILE: include/target/target_core_pscsi.h:79:
+extern ssize_t pscsi_show_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1817: FILE: include/target/target_core_pscsi.h:79:
+extern ssize_t pscsi_show_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#1817: FILE: include/target/target_core_pscsi.h:79:
+extern ssize_t pscsi_show_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1817: FILE: include/target/target_core_pscsi.h:79:
+extern ssize_t pscsi_show_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1818: FILE: include/target/target_core_pscsi.h:80:
+extern ssize_t pscsi_show_configfs_dev_params(se_hba_t *, se_subsystem_dev_t *,
+						char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1819: FILE: include/target/target_core_pscsi.h:81:
+extern se_device_t *pscsi_create_virtdevice_from_fd(se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_subsystem_dev_t *' should also have an identifier name
#1819: FILE: include/target/target_core_pscsi.h:81:
+extern se_device_t *pscsi_create_virtdevice_from_fd(se_subsystem_dev_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1819: FILE: include/target/target_core_pscsi.h:81:
+extern se_device_t *pscsi_create_virtdevice_from_fd(se_subsystem_dev_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1820: FILE: include/target/target_core_pscsi.h:82:
+extern se_device_t *pscsi_create_virtdevice_from_fd(se_subsystem_dev_t *,
+						const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1821: FILE: include/target/target_core_pscsi.h:83:
+extern void pscsi_get_plugin_info(void *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1821: FILE: include/target/target_core_pscsi.h:83:
+extern void pscsi_get_plugin_info(void *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1821: FILE: include/target/target_core_pscsi.h:83:
+extern void pscsi_get_plugin_info(void *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1821: FILE: include/target/target_core_pscsi.h:83:
+extern void pscsi_get_plugin_info(void *, char *, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1822: FILE: include/target/target_core_pscsi.h:84:
+extern void pscsi_get_hba_info(se_hba_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_hba_t *' should also have an identifier name
#1822: FILE: include/target/target_core_pscsi.h:84:
+extern void pscsi_get_hba_info(se_hba_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1822: FILE: include/target/target_core_pscsi.h:84:
+extern void pscsi_get_hba_info(se_hba_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1822: FILE: include/target/target_core_pscsi.h:84:
+extern void pscsi_get_hba_info(se_hba_t *, char *, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1823: FILE: include/target/target_core_pscsi.h:85:
+extern void pscsi_get_dev_info(se_device_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1823: FILE: include/target/target_core_pscsi.h:85:
+extern void pscsi_get_dev_info(se_device_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1823: FILE: include/target/target_core_pscsi.h:85:
+extern void pscsi_get_dev_info(se_device_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1823: FILE: include/target/target_core_pscsi.h:85:
+extern void pscsi_get_dev_info(se_device_t *, char *, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1824: FILE: include/target/target_core_pscsi.h:86:
+extern int pscsi_check_lba(unsigned long long, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#1824: FILE: include/target/target_core_pscsi.h:86:
+extern int pscsi_check_lba(unsigned long long, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1824: FILE: include/target/target_core_pscsi.h:86:
+extern int pscsi_check_lba(unsigned long long, se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1825: FILE: include/target/target_core_pscsi.h:87:
+extern int pscsi_check_for_SG(se_task_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1825: FILE: include/target/target_core_pscsi.h:87:
+extern int pscsi_check_for_SG(se_task_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1826: FILE: include/target/target_core_pscsi.h:88:
+extern unsigned char *pscsi_get_cdb(se_task_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1826: FILE: include/target/target_core_pscsi.h:88:
+extern unsigned char *pscsi_get_cdb(se_task_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1827: FILE: include/target/target_core_pscsi.h:89:
+extern unsigned char *pscsi_get_sense_buffer(se_task_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_task_t *' should also have an identifier name
#1827: FILE: include/target/target_core_pscsi.h:89:
+extern unsigned char *pscsi_get_sense_buffer(se_task_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1828: FILE: include/target/target_core_pscsi.h:90:
+extern u32 pscsi_get_blocksize(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1828: FILE: include/target/target_core_pscsi.h:90:
+extern u32 pscsi_get_blocksize(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1829: FILE: include/target/target_core_pscsi.h:91:
+extern u32 pscsi_get_device_rev(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1829: FILE: include/target/target_core_pscsi.h:91:
+extern u32 pscsi_get_device_rev(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1830: FILE: include/target/target_core_pscsi.h:92:
+extern u32 pscsi_get_device_type(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1830: FILE: include/target/target_core_pscsi.h:92:
+extern u32 pscsi_get_device_type(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1831: FILE: include/target/target_core_pscsi.h:93:
+extern u32 pscsi_get_dma_length(u32, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1831: FILE: include/target/target_core_pscsi.h:93:
+extern u32 pscsi_get_dma_length(u32, se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1831: FILE: include/target/target_core_pscsi.h:93:
+extern u32 pscsi_get_dma_length(u32, se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1832: FILE: include/target/target_core_pscsi.h:94:
+extern u32 pscsi_get_max_sectors(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1832: FILE: include/target/target_core_pscsi.h:94:
+extern u32 pscsi_get_max_sectors(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1833: FILE: include/target/target_core_pscsi.h:95:
+extern u32 pscsi_get_queue_depth(se_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#1833: FILE: include/target/target_core_pscsi.h:95:
+extern u32 pscsi_get_queue_depth(se_device_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1834: FILE: include/target/target_core_pscsi.h:96:
+extern void pscsi_req_done(struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1834: FILE: include/target/target_core_pscsi.h:96:
+extern void pscsi_req_done(struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1834: FILE: include/target/target_core_pscsi.h:96:
+extern void pscsi_req_done(struct request *, int);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1843: FILE: include/target/target_core_pscsi.h:105:
+typedef struct pscsi_plugin_task_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1858: FILE: include/target/target_core_pscsi.h:120:
+typedef struct pscsi_dev_virt_s {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1867: FILE: include/target/target_core_pscsi.h:129:
+extern void __pscsi_get_dev_info(pscsi_dev_virt_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pscsi_dev_virt_t *' should also have an identifier name
#1867: FILE: include/target/target_core_pscsi.h:129:
+extern void __pscsi_get_dev_info(pscsi_dev_virt_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1867: FILE: include/target/target_core_pscsi.h:129:
+extern void __pscsi_get_dev_info(pscsi_dev_virt_t *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1867: FILE: include/target/target_core_pscsi.h:129:
+extern void __pscsi_get_dev_info(pscsi_dev_virt_t *, char *, int *);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1885: FILE: include/target/target_core_pscsi.h:147:
+	.name			= "pscsi",			\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073416.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 220 warnings, 164 checks, 1863 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073416.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
