WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
notifier_chain_cond_register() registers a notifier block only if not already

CHECK:BRACES: braces {} should be used on all arms of this statement
#75: FILE: ipc/ipc_sysctl.c:38:
+	if (val >= 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#77: FILE: ipc/ipc_sysctl.c:40:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#102: FILE: ipc/ipc_sysctl.c:71:
+	rc = proc_dointvec(&ipc_table, write, filp, buffer, lenp, ppos);
 	                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: kernel/notifier.c:35:
+static int notifier_chain_cond_register(struct notifier_block **nl,
+		struct notifier_block *n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: kernel/notifier.c:234:
+int blocking_notifier_chain_cond_register(struct blocking_notifier_head *nh,
+		struct notifier_block *n)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#197: FILE: include/linux/notifier.h:124:
+extern int blocking_notifier_chain_cond_register(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/notifier.h:124:
+extern int blocking_notifier_chain_cond_register(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: include/linux/ipc_namespace.h:55:
+extern int cond_register_ipcns_notifier(struct ipc_namespace *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipc_namespace *' should also have an identifier name
#212: FILE: include/linux/ipc_namespace.h:55:
+extern int cond_register_ipcns_notifier(struct ipc_namespace *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323417.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 7 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323417.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
