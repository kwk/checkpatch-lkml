CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: mm/bootmem.c:112:
+unsigned long __init init_bootmem_node(pg_data_t *pgdat, unsigned long freepfn,
+				unsigned long startpfn, unsigned long endpfn)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#107: FILE: mm/bootmem.c:133:
+	BUG_ON(!bdata->node_bootmem_map);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#118: FILE: mm/bootmem.c:144:
+	if (!(pfn & (BITS_PER_LONG-1)))
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<<=' (ctx:VxV)
#137: FILE: mm/bootmem.c:163:
+			for (m = 1; m && i < idx; m<<=1, page++, i++) {
 			                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#154: FILE: mm/bootmem.c:180:
+	idx = (get_mapsize(bdata) + PAGE_SIZE-1) >> PAGE_SHIFT;
 	                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: mm/bootmem.c:206:
+	BUG_ON(!size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: mm/bootmem.c:210:
+	if (addr + size < bdata->node_boot_start ||
+		PFN_DOWN(addr) > bdata->node_low_pfn)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: mm/bootmem.c:234:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: mm/bootmem.c:247:
+	bootmem_data_t *bdata;
+	list_for_each_entry(bdata, &bdata_list, list)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: mm/bootmem.c:339:
+int __init reserve_bootmem(unsigned long addr, unsigned long size,
+			    int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: mm/bootmem.c:547:
+		ptr = alloc_bootmem_core(bdata, size, align, goal,
+					ARCH_LOW_ADDRESS_LIMIT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#457: FILE: mm/bootmem.c:555:
+	printk(KERN_ALERT "low bootmem alloc of %lu bytes failed!\n", size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/linux/bootmem.h:45:
+extern unsigned long init_bootmem_node(pg_data_t *pgdat,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#527: FILE: include/linux/bootmem.h:51:
+extern unsigned long free_all_bootmem_node(pg_data_t *pgdat);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#528: FILE: include/linux/bootmem.h:52:
+extern unsigned long free_all_bootmem(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#530: FILE: include/linux/bootmem.h:54:
+extern void free_bootmem_node(pg_data_t *pgdat,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#545: FILE: include/linux/bootmem.h:68:
+#define BOOTMEM_EXCLUSIVE	(1<<0)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#545: FILE: include/linux/bootmem.h:68:
+#define BOOTMEM_EXCLUSIVE	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#547: FILE: include/linux/bootmem.h:70:
+extern void reserve_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#552: FILE: include/linux/bootmem.h:75:
+extern int reserve_bootmem(unsigned long addr, unsigned long size, int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#555: FILE: include/linux/bootmem.h:78:
+extern void *__alloc_bootmem_nopanic(unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: include/linux/bootmem.h:79:
+extern void *__alloc_bootmem_nopanic(unsigned long size,
 			     unsigned long align,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#559: FILE: include/linux/bootmem.h:81:
+extern void *__alloc_bootmem(unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: include/linux/bootmem.h:82:
+extern void *__alloc_bootmem(unsigned long size,
 				     unsigned long align,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/linux/bootmem.h:87:
+extern void *__alloc_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#625: FILE: include/linux/bootmem.h:111:
+extern void *alloc_bootmem_section(unsigned long size,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270858.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 20 checks, 544 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270858.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
