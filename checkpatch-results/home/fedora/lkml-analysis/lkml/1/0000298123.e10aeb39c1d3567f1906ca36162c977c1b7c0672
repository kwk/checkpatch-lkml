WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# HG changeset patch

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# User Andrea Arcangeli <andrea@qumranet.com>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# Date 1207666968 -7200

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# Node ID a0c52e4b9b71e2627238b69c0a58905097973279

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# Parent  b0cb674314534b9cc4759603f123474d38427b2d

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#245: FILE: mm/mmap.c:2258:
+	nr_i_mmap_sems = nr_anon_vma_sems = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#266: FILE: mm/mmap.c:2283:
+	if (nr_anon_vma_sems) {
[...]
 	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#288: FILE: mm/mmap.c:2324:
+		anon_vma_sem = (struct rw_semaphore *) -1UL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: mm/mmap.c:2324:
+		struct rw_semaphore *anon_vma_sem;
+		anon_vma_sem = (struct rw_semaphore *) -1UL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#301: FILE: mm/mmap.c:2332:
+			if ((unsigned long) anon_vma_sem >

CHECK:SPACING: No space is necessary after a cast
#302: FILE: mm/mmap.c:2333:
+			    (unsigned long) &vma->anon_vma->sem &&

CHECK:SPACING: No space is necessary after a cast
#303: FILE: mm/mmap.c:2334:
+			    (unsigned long) &vma->anon_vma->sem >

CHECK:SPACING: No space is necessary after a cast
#304: FILE: mm/mmap.c:2335:
+			    (unsigned long) anon_vma_sem_last)

CHECK:SPACING: No space is necessary after a cast
#308: FILE: mm/mmap.c:2338:
+		if (anon_vma_sem == (struct rw_semaphore *) -1UL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298123.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 8 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298123.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
