CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/net/s2io.c:7388:
+						queue_rx_frame(lro->parent,
+							lro->vlan_tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/net/s2io.c:7400:
+						queue_rx_frame(lro->parent,
+							lro->vlan_tag);

CHECK:BRACES: Unbalanced braces around else statement
#125: FILE: drivers/net/s2io.c:7426:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Control_2>
#151: FILE: drivers/net/s2io.c:7431:
+	queue_rx_frame(skb, RXD_GET_VLAN_TAG(rxdp->Control_2));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l2_type == 0'
#188: FILE: drivers/net/s2io.c:8074:
+	if ((l2_type == 0)
+		|| (l2_type == 4)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l2_type == 4'
#188: FILE: drivers/net/s2io.c:8074:
+	if ((l2_type == 0)
+		|| (l2_type == 4)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#189: FILE: drivers/net/s2io.c:8075:
+	if ((l2_type == 0)
+		|| (l2_type == 4)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#192: FILE: drivers/net/s2io.c:8078:
+		/*
+		 * If vlan stripping is disabled and the frame is VLAN tagged,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vlan_strip_flag'
#195: FILE: drivers/net/s2io.c:8081:
+		if ((!vlan_strip_flag) &&
+			(rxdp->Control_1 & RXD_FRAME_VLAN_TAG))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: drivers/net/s2io.c:8082:
+		if ((!vlan_strip_flag) &&
+			(rxdp->Control_1 & RXD_FRAME_VLAN_TAG))

CHECK:CAMELCASE: Avoid CamelCase: <Control_1>
#196: FILE: drivers/net/s2io.c:8082:
+			(rxdp->Control_1 & RXD_FRAME_VLAN_TAG))

CHECK:BRACES: Unbalanced braces around else statement
#235: FILE: drivers/net/s2io.c:8262:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/net/s2io.c:8326:
+			initiate_new_session(*lro, buffer, ip, tcph, *tcp_len,
+								vlan_tag);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#269: FILE: drivers/net/s2io.c:8361:
+	if (sp->vlgrp && vlan_tag
+		&& (vlan_strip_flag)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 13 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
