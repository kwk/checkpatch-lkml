WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
approach(which remains nearly intact), refined i2c-rpx.c. I2C functionality has been validated on

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl-i2c-cpm" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#64: FILE: arch/powerpc/boot/dts/mpc885ads.dts:193:
+				compatible = "fsl-i2c-cpm";

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void init_i2c_ioports() should probably be void init_i2c_ioports(void)
#99: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:369:
+static void init_i2c_ioports()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:373:
+        setbits32(&cp->cp_pbpar, 0x00000030);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:373:
+        setbits32(&cp->cp_pbpar, 0x00000030);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:374:
+        setbits32(&cp->cp_pbdir, 0x00000030);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:374:
+        setbits32(&cp->cp_pbdir, 0x00000030);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:375:
+        setbits16(&cp->cp_pbodr, 0x0030);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:375:
+        setbits16(&cp->cp_pbodr, 0x0030);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#158: FILE: arch/powerpc/sysdev/fsl_soc.c:1248:
+		r[2].start = r[2].end = irq_of_parse_and_map(np, 0);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#186: FILE: arch/powerpc/sysdev/fsl_soc.c:1276:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#214: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#219: FILE: drivers/i2c/algos/i2c-algo-8xx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#234: FILE: drivers/i2c/algos/i2c-algo-8xx.c:16:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#235: FILE: drivers/i2c/algos/i2c-algo-8xx.c:17:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: drivers/i2c/algos/i2c-algo-8xx.c:24:
+
+

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#243: FILE: drivers/i2c/algos/i2c-algo-8xx.c:25:
+/* $Id: i2c-algo-8xx.c,v 1.15 2004/11/20 08:02:24 khali Exp $ */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#255: FILE: drivers/i2c/algos/i2c-algo-8xx.c:37:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#256: FILE: drivers/i2c/algos/i2c-algo-8xx.c:38:
+#include <asm/cacheflush.h>

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#261: FILE: drivers/i2c/algos/i2c-algo-8xx.c:43:
+#undef	I2C_CHIP_ERRATA /* Try ot define this if you have an older CPU(earlier than rev D4) */
       	                       ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#266: FILE: drivers/i2c/algos/i2c-algo-8xx.c:48:
+int cpm_debug = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#267: FILE: drivers/i2c/algos/i2c-algo-8xx.c:49:
+int cpm_scan = 0;

CHECK:SPACING: No space is necessary after a cast
#271: FILE: drivers/i2c/algos/i2c-algo-8xx.c:53:
+	i2c8xx_t *i2c = (i2c8xx_t *) dev_id;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/i2c/algos/i2c-algo-8xx.c:54:
+	i2c8xx_t *i2c = (i2c8xx_t *) dev_id;
+	if (cpm_debug > 1)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#273: FILE: drivers/i2c/algos/i2c-algo-8xx.c:55:
+		printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_interrupt', this function's name, in a string
#273: FILE: drivers/i2c/algos/i2c-algo-8xx.c:55:
+		printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#274: FILE: drivers/i2c/algos/i2c-algo-8xx.c:56:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#298: FILE: drivers/i2c/algos/i2c-algo-8xx.c:80:
+		printk(KERN_DEBUG "cpm_iic_init()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_init', this function's name, in a string
#298: FILE: drivers/i2c/algos/i2c-algo-8xx.c:80:
+		printk(KERN_DEBUG "cpm_iic_init()\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#317: FILE: drivers/i2c/algos/i2c-algo-8xx.c:99:
+	iip->iic_tbase = r_tbase = cpm->dp_addr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#318: FILE: drivers/i2c/algos/i2c-algo-8xx.c:100:
+	iip->iic_rbase = r_rbase = cpm->dp_addr + sizeof(cbd_t) * 2;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#321: FILE: drivers/i2c/algos/i2c-algo-8xx.c:103:
+		printk("iip %p, dp_addr 0x%x\n", cpm->iip, cpm->dp_addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#322: FILE: drivers/i2c/algos/i2c-algo-8xx.c:104:
+		printk("iic_tbase %d, r_tbase %d\n", iip->iic_tbase, r_tbase);

WARNING:SPACING: space prohibited before semicolon
#339: FILE: drivers/i2c/algos/i2c-algo-8xx.c:121:
+		while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#339: FILE: drivers/i2c/algos/i2c-algo-8xx.c:121:
+		while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: drivers/i2c/algos/i2c-algo-8xx.c:151:
+		printk("%s[%d] Install ISR for IRQ %d\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#385: FILE: drivers/i2c/algos/i2c-algo-8xx.c:167:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/i2c/algos/i2c-algo-8xx.c:170:
+static void cpm_reset_iic_params(iic_t * iip)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/i2c/algos/i2c-algo-8xx.c:199:
+	i2c8xx_t *i2c = cpm->i2c;
+	if (cpm->reloc == 0) {	/* micro code disabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#422: FILE: drivers/i2c/algos/i2c-algo-8xx.c:204:
+			printk("force_close()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'force_close', this function's name, in a string
#422: FILE: drivers/i2c/algos/i2c-algo-8xx.c:204:
+			printk("force_close()\n");

WARNING:SPACING: space prohibited before semicolon
#425: FILE: drivers/i2c/algos/i2c-algo-8xx.c:207:
+		while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#425: FILE: drivers/i2c/algos/i2c-algo-8xx.c:207:
+		while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#448: FILE: drivers/i2c/algos/i2c-algo-8xx.c:230:
+	if (cpm->reloc) {
+		cpm_reset_iic_params(iip);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/i2c/algos/i2c-algo-8xx.c:234:
+	tbdf = (cbd_t *) cpm_dpram_addr(iip->iic_tbase);

CHECK:SPACING: No space is necessary after a cast
#453: FILE: drivers/i2c/algos/i2c-algo-8xx.c:235:
+	rbdf = (cbd_t *) cpm_dpram_addr(iip->iic_rbase);

CHECK:SPACING: No space is necessary after a cast
#460: FILE: drivers/i2c/algos/i2c-algo-8xx.c:242:
+	tb = (u_char *) (((uint) tb + 15) & ~15);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#466: FILE: drivers/i2c/algos/i2c-algo-8xx.c:248:
+		printk("cpm_iic_read(abyte=0x%x)\n", abyte);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_read', this function's name, in a string
#466: FILE: drivers/i2c/algos/i2c-algo-8xx.c:248:
+		printk("cpm_iic_read(abyte=0x%x)\n", abyte);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#473: FILE: drivers/i2c/algos/i2c-algo-8xx.c:255:
+	iip->iic_mrblr = count + 1;	/* prevent excessive read, +1
+					   is needed otherwise will the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#474: FILE: drivers/i2c/algos/i2c-algo-8xx.c:256:
+					   RXB interrupt come too early */

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#485: FILE: drivers/i2c/algos/i2c-algo-8xx.c:267:
+		out_8(&i2c->i2c_i2cmr, 0x13);	/* Enable some interupts */
 		                             	               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#493: FILE: drivers/i2c/algos/i2c-algo-8xx.c:275:
+		out_8(&i2c->i2c_i2cmr, 0x00);	/* Disable I2C interupts */
 		                             	               ^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#499: FILE: drivers/i2c/algos/i2c-algo-8xx.c:281:
+		while (!(in_8(&i2c->i2c_i2cer) & 0x11 || time_after(jiffies, tmo))) ;/* Busy wait, with a timeout */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#499: FILE: drivers/i2c/algos/i2c-algo-8xx.c:281:
+		while (!(in_8(&i2c->i2c_i2cer) & 0x11 || time_after(jiffies, tmo))) ;/* Busy wait, with a timeout */

ERROR:SPACING: space prohibited after that open parenthesis '('
#502: FILE: drivers/i2c/algos/i2c-algo-8xx.c:284:
+	if ( res < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#505: FILE: drivers/i2c/algos/i2c-algo-8xx.c:287:
+			printk("IIC read: timeout!\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#510: FILE: drivers/i2c/algos/i2c-algo-8xx.c:292:
+	/* Chip errata, clear enable. This is not needed on rev D4 CPUs.
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#510: FILE: drivers/i2c/algos/i2c-algo-8xx.c:292:
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#514: FILE: drivers/i2c/algos/i2c-algo-8xx.c:296:
+	if (cpm_debug) {
+		printk("tx sc %04x, rx sc %04x\n", tbdf->cbd_sc, rbdf->cbd_sc);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#515: FILE: drivers/i2c/algos/i2c-algo-8xx.c:297:
+		printk("tx sc %04x, rx sc %04x\n", tbdf->cbd_sc, rbdf->cbd_sc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#519: FILE: drivers/i2c/algos/i2c-algo-8xx.c:301:
+		printk("IIC read; complete but tbuf ready\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: drivers/i2c/algos/i2c-algo-8xx.c:303:
+		printk("tx sc %04x, rx sc %04x\n", tbdf->cbd_sc, rbdf->cbd_sc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#526: FILE: drivers/i2c/algos/i2c-algo-8xx.c:308:
+			printk("IIC read; no ack\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#533: FILE: drivers/i2c/algos/i2c-algo-8xx.c:315:
+			printk("IIC read; complete but rbuf empty\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#534: FILE: drivers/i2c/algos/i2c-algo-8xx.c:316:
+			printk("tx sc %04x, rx sc %04x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#542: FILE: drivers/i2c/algos/i2c-algo-8xx.c:324:
+			printk("IIC read; Overrun\n");

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#543: FILE: drivers/i2c/algos/i2c-algo-8xx.c:325:
+		return -EREMOTEIO;;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#547: FILE: drivers/i2c/algos/i2c-algo-8xx.c:329:
+		printk("read %d bytes\n", rbdf->cbd_datlen);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#551: FILE: drivers/i2c/algos/i2c-algo-8xx.c:333:
+			printk("IIC read; short, wanted %d got %d\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#573: FILE: drivers/i2c/algos/i2c-algo-8xx.c:355:
+	if (cpm->reloc) {
+		cpm_reset_iic_params(iip);
+	}

CHECK:SPACING: No space is necessary after a cast
#577: FILE: drivers/i2c/algos/i2c-algo-8xx.c:359:
+	tb = (u_char *) (((uint) tb + 15) & ~15);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#584: FILE: drivers/i2c/algos/i2c-algo-8xx.c:366:
+		printk("cpm_iic_write(abyte=0x%x)\n", abyte);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_write', this function's name, in a string
#584: FILE: drivers/i2c/algos/i2c-algo-8xx.c:366:
+		printk("cpm_iic_write(abyte=0x%x)\n", abyte);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#588: FILE: drivers/i2c/algos/i2c-algo-8xx.c:370:
+
+

CHECK:SPACING: No space is necessary after a cast
#589: FILE: drivers/i2c/algos/i2c-algo-8xx.c:371:
+	tbdf = (cbd_t *) cpm_dpram_addr(iip->iic_tbase);

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#601: FILE: drivers/i2c/algos/i2c-algo-8xx.c:383:
+		out_8(&i2c->i2c_i2cmr, 0x13);	/* Enable some interupts */
 		                             	               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#609: FILE: drivers/i2c/algos/i2c-algo-8xx.c:391:
+		out_8(&i2c->i2c_i2cmr, 0x00);	/* Disable I2C interupts */
 		                             	               ^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#614: FILE: drivers/i2c/algos/i2c-algo-8xx.c:396:
+		while (!(in_8(&i2c->i2c_i2cer) & 0x12 || time_after(jiffies, tmo))) ;/* Busy wait, with a timeout */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#614: FILE: drivers/i2c/algos/i2c-algo-8xx.c:396:
+		while (!(in_8(&i2c->i2c_i2cer) & 0x12 || time_after(jiffies, tmo))) ;/* Busy wait, with a timeout */

ERROR:SPACING: space prohibited after that open parenthesis '('
#617: FILE: drivers/i2c/algos/i2c-algo-8xx.c:399:
+	if ( res < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#620: FILE: drivers/i2c/algos/i2c-algo-8xx.c:402:
+			printk("IIC write: timeout!\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#625: FILE: drivers/i2c/algos/i2c-algo-8xx.c:407:
+	/* Chip errata, clear enable. This is not needed on rev D4 CPUs.
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#625: FILE: drivers/i2c/algos/i2c-algo-8xx.c:407:
+	   Disabling I2C too early may cause too short stop condition */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#630: FILE: drivers/i2c/algos/i2c-algo-8xx.c:412:
+		printk("tx0 sc %04x, tx1 sc %04x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#636: FILE: drivers/i2c/algos/i2c-algo-8xx.c:418:
+			printk("IIC write; no ack\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#642: FILE: drivers/i2c/algos/i2c-algo-8xx.c:424:
+			printk("IIC write; complete but tbuf ready\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#662: FILE: drivers/i2c/algos/i2c-algo-8xx.c:444:
+		printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_tryaddress', this function's name, in a string
#662: FILE: drivers/i2c/algos/i2c-algo-8xx.c:444:
+		printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#665: FILE: drivers/i2c/algos/i2c-algo-8xx.c:447:
+	if (cpm->reloc) {
+		cpm_reset_iic_params(iip);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#670: FILE: drivers/i2c/algos/i2c-algo-8xx.c:452:
+		printk("iip %p, dp_addr 0x%x\n", cpm->iip, cpm->dp_addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#671: FILE: drivers/i2c/algos/i2c-algo-8xx.c:453:
+		printk("iic_tbase %d, r_tbase %d\n", iip->iic_tbase, r_tbase);

CHECK:SPACING: No space is necessary after a cast
#674: FILE: drivers/i2c/algos/i2c-algo-8xx.c:456:
+	tbdf = (cbd_t *) cpm_dpram_addr(iip->iic_tbase);

CHECK:SPACING: No space is necessary after a cast
#675: FILE: drivers/i2c/algos/i2c-algo-8xx.c:457:
+	rbdf = (cbd_t *) cpm_dpram_addr(iip->iic_rbase);

CHECK:SPACING: No space is necessary after a cast
#678: FILE: drivers/i2c/algos/i2c-algo-8xx.c:460:
+	tb = (u_char *) (((uint) tb + 15) & ~15);

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#694: FILE: drivers/i2c/algos/i2c-algo-8xx.c:476:
+	out_8(&i2c->i2c_i2cmr, 0x13);	/* Enable some interupts */
 	                             	               ^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#700: FILE: drivers/i2c/algos/i2c-algo-8xx.c:482:
+		printk("about to sleep\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#707: FILE: drivers/i2c/algos/i2c-algo-8xx.c:489:
+	/* Chip errata, clear enable. This is not needed on rev D4 CPUs.
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#707: FILE: drivers/i2c/algos/i2c-algo-8xx.c:489:
+	   Disabling I2C too early may cause too short stop condition */

ERROR:SPACING: space prohibited after that open parenthesis '('
#712: FILE: drivers/i2c/algos/i2c-algo-8xx.c:494:
+	if ( res < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#715: FILE: drivers/i2c/algos/i2c-algo-8xx.c:497:
+			printk("IIC tryaddress: timeout!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#720: FILE: drivers/i2c/algos/i2c-algo-8xx.c:502:
+		printk("back from sleep\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#724: FILE: drivers/i2c/algos/i2c-algo-8xx.c:506:
+			printk("IIC try; no ack\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#728: FILE: drivers/i2c/algos/i2c-algo-8xx.c:510:
+	if (tbdf->cbd_sc & BD_SC_READY) {
+		printk("IIC try; complete but tbuf ready\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#729: FILE: drivers/i2c/algos/i2c-algo-8xx.c:511:
+		printk("IIC try; complete but tbuf ready\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#746: FILE: drivers/i2c/algos/i2c-algo-8xx.c:528:
+			printk("i2c-algo-8xx.o: "

WARNING:SPLIT_STRING: quoted string split across lines
#747: FILE: drivers/i2c/algos/i2c-algo-8xx.c:529:
+			printk("i2c-algo-8xx.o: "
+			       "#%d addr=0x%x flags=0x%x len=%d\n buf=%lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#757: FILE: drivers/i2c/algos/i2c-algo-8xx.c:539:
+		if (!(pmsg->flags & I2C_M_NOSTART)) {
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#763: FILE: drivers/i2c/algos/i2c-algo-8xx.c:545:
+				printk("i2c-algo-8xx.o: read %d bytes\n", ret);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#764: FILE: drivers/i2c/algos/i2c-algo-8xx.c:546:
+			if (ret < pmsg->len) {
+				return (ret < 0) ? ret : -EREMOTEIO;
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#771: FILE: drivers/i2c/algos/i2c-algo-8xx.c:553:
+				printk("i2c-algo-8xx.o: wrote %d\n", ret);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#772: FILE: drivers/i2c/algos/i2c-algo-8xx.c:554:
+			if (ret < pmsg->len) {
+				return (ret < 0) ? ret : -EREMOTEIO;
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#802: FILE: drivers/i2c/algos/i2c-algo-8xx.c:584:
+		printk("i2c-algo-8xx.o: hw routines for %s registered.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#814: FILE: drivers/i2c/algos/i2c-algo-8xx.c:596:
+		printk(KERN_INFO " i2c-algo-8xx.o: scanning bus %s...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: drivers/i2c/algos/i2c-algo-8xx.c:597:
+		printk(KERN_INFO " i2c-algo-8xx.o: scanning bus %s...\n",
+			adap->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#818: FILE: drivers/i2c/algos/i2c-algo-8xx.c:600:
+				printk("(%02x)",i<<1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: drivers/i2c/algos/i2c-algo-8xx.c:600:
+				printk("(%02x)",i<<1);
 				               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#818: FILE: drivers/i2c/algos/i2c-algo-8xx.c:600:
+				printk("(%02x)",i<<1);
 				                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#820: FILE: drivers/i2c/algos/i2c-algo-8xx.c:602:
+		printk("\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#835: FILE: drivers/i2c/algos/i2c-algo-8xx.c:617:
+EXPORT_SYMBOL(i2c_8xx_add_bus);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#836: FILE: drivers/i2c/algos/i2c-algo-8xx.c:618:
+EXPORT_SYMBOL(i2c_8xx_del_bus);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#900: FILE: drivers/i2c/busses/i2c-rpx.c:50:
+	cp = data->cp = (cpm8xx_t *)immr_map(im_cpm);	/* pointer to Communication Processor */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: drivers/i2c/busses/i2c-rpx.c:53:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/i2c/busses/i2c-rpx.c:53:
+  $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->iip"
#912: FILE: drivers/i2c/busses/i2c-rpx.c:59:
+	if (data->iip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->i2c"
#931: FILE: drivers/i2c/busses/i2c-rpx.c:69:
+	if (data->i2c == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#958: FILE: drivers/i2c/busses/i2c-rpx.c:84:
+	if (!(i2c = kmalloc(sizeof(*i2c), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#958: FILE: drivers/i2c/busses/i2c-rpx.c:84:
+	if (!(i2c = kmalloc(sizeof(*i2c), GFP_KERNEL))) {
+		return -ENOMEM;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#985: FILE: drivers/i2c/busses/i2c-rpx.c:99:
+	if ((result = i2c_8xx_add_bus(&rpx_ops) < 0)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#994: FILE: drivers/i2c/busses/i2c-rpx.c:107:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1007: FILE: drivers/i2c/busses/i2c-rpx.c:119:
 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1040: FILE: include/linux/i2c-algo-8xx.h:1:
+/* ------------------------------------------------------------------------- */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1044: FILE: include/linux/i2c-algo-8xx.h:5:
+/* $Id$ */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1064: FILE: include/linux/i2c-algo-8xx.h:25:
+extern int i2c_8xx_add_bus(struct i2c_adapter *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#1064: FILE: include/linux/i2c-algo-8xx.h:25:
+extern int i2c_8xx_add_bus(struct i2c_adapter *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1065: FILE: include/linux/i2c-algo-8xx.h:26:
+extern int i2c_8xx_del_bus(struct i2c_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#1065: FILE: include/linux/i2c-algo-8xx.h:26:
+extern int i2c_8xx_del_bus(struct i2c_adapter *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000443272.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 92 warnings, 24 checks, 965 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000443272.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
