WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#55: 
the global futex hash was put off pending glibc changes to accomodate
                                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#97: FILE: init/Kconfig:675:
+config PROCESS_PRIVATE_FUTEX
+	bool "Process private futexes" if FUTEX
+	default n
+	help
+	  This option enables ability to have per-process hashtables for private
+	  futexes.  This makes sense on large core-count systems (more than
+	  32 cores)
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:BRACES: braces {} should be used on all arms of this statement
#150: FILE: kernel/futex.c:165:
+	if (!htb)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#152: FILE: kernel/futex.c:167:
+	else {
+		 for (i = 0; i < ARRAY_SIZE(futex_queues); i++) {

CHECK:BRACES: Unbalanced braces around else statement
#152: FILE: kernel/futex.c:167:
+	else {

WARNING:TABSTOP: Statements should start on a tabstop
#153: FILE: kernel/futex.c:168:
+		 for (i = 0; i < ARRAY_SIZE(futex_queues); i++) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#169: FILE: kernel/futex.c:184:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: kernel/futex.c:189:
+	struct mm_struct *mm;
+	if (key->both.offset & FUT_OFF_INODE)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: kernel/futex.c:216:
+	u32 hash;
+	htb = get_futex_hashtable(key);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: kernel/futex.c:218:
+	hash = jhash2((u32 *)&key->both.word,
 			  (sizeof(key->both.word)+sizeof(key->both.ptr))/4,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#207: FILE: kernel/futex.c:220:
+	return &htb[hash & ((1 << FUTEX_HASHBITS)-1)];
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/linux/futex.h:181:
+extern void free_futex_htb(struct mm_struct *mm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:RETURN_VOID: void function return statements are not generally useful
#226: FILE: include/linux/futex.h:186:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151697.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151697.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
