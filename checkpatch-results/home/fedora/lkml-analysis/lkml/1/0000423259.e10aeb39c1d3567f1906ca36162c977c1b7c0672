WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#54: 
Signed-off-by:  Douglas Thompson <dougthompson@xmission.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: drivers/edac/edac_mc_sysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int edac_get_log_ue() should probably be int edac_get_log_ue(void)
#96: FILE: drivers/edac/edac_mc_sysfs.c:25:
+int edac_get_log_ue()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int edac_get_log_ce() should probably be int edac_get_log_ce(void)
#101: FILE: drivers/edac/edac_mc_sysfs.c:30:
+int edac_get_log_ce()

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int edac_get_panic_on_ue() should probably be int edac_get_panic_on_ue(void)
#106: FILE: drivers/edac/edac_mc_sysfs.c:35:
+int edac_get_panic_on_ue()

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int edac_get_poll_msec() should probably be int edac_get_poll_msec(void)
#111: FILE: drivers/edac/edac_mc_sysfs.c:40:
+int edac_get_poll_msec()

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#119: FILE: drivers/edac/edac_mc_sysfs.c:47:
1=on");

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#121: FILE: drivers/edac/edac_mc_sysfs.c:49:
+MODULE_PARM_DESC(log_ue, "Log uncorrectable error to console: 0=off
                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#121: FILE: drivers/edac/edac_mc_sysfs.c:49:
+MODULE_PARM_DESC(log_ue, "Log uncorrectable error to console: 0=off
                                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <Log>
#121: FILE: drivers/edac/edac_mc_sysfs.c:49:
+MODULE_PARM_DESC(log_ue, "Log uncorrectable error to console: 0=off

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Polling>
#127: FILE: drivers/edac/edac_mc_sysfs.c:53:
+MODULE_PARM_DESC(poll_msec, "Polling period in milliseconds");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#129: FILE: drivers/edac/edac_mc_sysfs.c:55:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/edac/edac_mc_sysfs.c:57:
+ * various constants for Memory Controllers$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/edac/edac_mc_sysfs.c:58:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Empty>
#134: FILE: drivers/edac/edac_mc_sysfs.c:60:
+	[MEM_EMPTY] = "Empty",

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#135: FILE: drivers/edac/edac_mc_sysfs.c:61:
+	[MEM_RESERVED] = "Reserved",

CHECK:CAMELCASE: Avoid CamelCase: <Unknown>
#136: FILE: drivers/edac/edac_mc_sysfs.c:62:
+	[MEM_UNKNOWN] = "Unknown",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#140: FILE: drivers/edac/edac_mc_sysfs.c:66:
+	[MEM_SDR] = "Unbuffered-SDR",
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Unbuffered>
#140: FILE: drivers/edac/edac_mc_sysfs.c:66:
+	[MEM_SDR] = "Unbuffered-SDR",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: drivers/edac/edac_mc_sysfs.c:67:
+	[MEM_RDR] = "Registered-SDR",
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Registered>
#141: FILE: drivers/edac/edac_mc_sysfs.c:67:
+	[MEM_RDR] = "Registered-SDR",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#142: FILE: drivers/edac/edac_mc_sysfs.c:68:
+	[MEM_DDR] = "Unbuffered-DDR",
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: drivers/edac/edac_mc_sysfs.c:69:
+	[MEM_RDDR] = "Registered-DDR",
 	                        ^

CHECK:CAMELCASE: Avoid CamelCase: <None>
#160: FILE: drivers/edac/edac_mc_sysfs.c:86:
+	[EDAC_NONE] = "None",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/edac/edac_mc_sysfs.c:98:
+ * sysfs object: /sys/devices/system/edac$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/edac/edac_mc_sysfs.c:99:
+ *^Ineed to export to other files in this modules$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/edac/edac_mc_sysfs.c:100:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/edac/edac_mc_sysfs.c:106:
+ *^I/sys/devices/system/edac/mc$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/edac/edac_mc_sysfs.c:107:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/edac/edac_mc_sysfs.c:111:
+ * edac_pci_kobj to reach 0.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/edac/edac_mc_sysfs.c:112:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/edac/edac_mc_sysfs.c:116:
+ * /sys/devices/system/edac/mc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/edac/edac_mc_sysfs.c:117:
+ *^Idata structures and methods$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/edac/edac_mc_sysfs.c:118:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#197: FILE: drivers/edac/edac_mc_sysfs.c:122:
+	return sprintf(buffer, "%u\n", *value);
 	                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#284: FILE: drivers/edac/edac_mc_sysfs.c:206:
+	debugf1("%s()\n", __func__);
 	         ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#284: FILE: drivers/edac/edac_mc_sysfs.c:206:
+	debugf1("%s()\n", __func__);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/edac/edac_mc_sysfs.c:217:
+ *   /sys/devices/system/edac$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/edac/edac_mc_sysfs.c:218:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/edac/edac_mc_sysfs.c:219:
+ * and children$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/edac/edac_mc_sysfs.c:220:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/edac/edac_mc_sysfs.c:221:
+ * Return:  0 SUCCESS$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/edac/edac_mc_sysfs.c:222:
+ *         !0 FAILURE$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/edac/edac_mc_sysfs.c:223:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#306: FILE: drivers/edac/edac_mc_sysfs.c:228:
+	debugf1("%s()\n", __func__);
 	         ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#306: FILE: drivers/edac/edac_mc_sysfs.c:228:
+	debugf1("%s()\n", __func__);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#312: FILE: drivers/edac/edac_mc_sysfs.c:234:
+		debugf1("%s() error=%d\n", __func__, err);
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#312: FILE: drivers/edac/edac_mc_sysfs.c:234:
+		debugf1("%s() error=%d\n", __func__, err);
 		                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#312: FILE: drivers/edac/edac_mc_sysfs.c:234:
+		debugf1("%s() error=%d\n", __func__, err);
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#321: FILE: drivers/edac/edac_mc_sysfs.c:243:
+	/* generate sysfs "..../edac/mc"   */
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#321: FILE: drivers/edac/edac_mc_sysfs.c:243:
+	/* generate sysfs "..../edac/mc"   */
 	                            ^

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#331: FILE: drivers/edac/edac_mc_sysfs.c:253:
+		debugf1("Failed to register '.../edac/mc'\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/edac/edac_mc_sysfs.c:267:
+ * MC teardown:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/edac/edac_mc_sysfs.c:268:
+ *^Ithe '..../edac/mc' kobject followed by '..../edac' itself$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/edac/edac_mc_sysfs.c:269:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#350: FILE: drivers/edac/edac_mc_sysfs.c:272:
+	debugf0("MC: " __FILE__ ": %s()\n", __func__);
 	           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#350: FILE: drivers/edac/edac_mc_sysfs.c:272:
+	debugf0("MC: " __FILE__ ": %s()\n", __func__);
 	                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#350: FILE: drivers/edac/edac_mc_sysfs.c:272:
+	debugf0("MC: " __FILE__ ": %s()\n", __func__);
 	                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#363: FILE: drivers/edac/edac_mc_sysfs.c:284:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/edac/edac_mc_sysfs.c:286:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#371: FILE: drivers/edac/edac_mc_sysfs.c:291:
+	return sprintf(data,"%u\n", csrow->ue_count);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#377: FILE: drivers/edac/edac_mc_sysfs.c:296:
+	return sprintf(data,"%u\n", csrow->ce_count);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#383: FILE: drivers/edac/edac_mc_sysfs.c:301:
+	return sprintf(data,"%u\n", PAGES_TO_MiB(csrow->nr_pages));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#389: FILE: drivers/edac/edac_mc_sysfs.c:306:
+	return sprintf(data,"%s\n", mem_types[csrow->mtype]);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#395: FILE: drivers/edac/edac_mc_sysfs.c:311:
+	return sprintf(data,"%s\n", dev_types[csrow->dtype]);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#401: FILE: drivers/edac/edac_mc_sysfs.c:316:
+	return sprintf(data,"%s\n", edac_caps[csrow->edac_mode]);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#408: FILE: drivers/edac/edac_mc_sysfs.c:323:
+	return snprintf(data, EDAC_MC_LABEL_LEN,"%s",
 	                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#431: FILE: drivers/edac/edac_mc_sysfs.c:346:
+	return sprintf(data, "%u\n", csrow->channels[channel].ce_count);
 	                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#509: FILE: drivers/edac/edac_mc_sysfs.c:421:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#582: FILE: drivers/edac/edac_mc_sysfs.c:494:
+
+

WARNING:TYPO_SPELLING: 'specifed' may be misspelled - perhaps 'specified'?
#585: FILE: drivers/edac/edac_mc_sysfs.c:497:
+/* Create dynamic CHANNEL files, indexed by 'chan',  under specifed
                                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#603: FILE: drivers/edac/edac_mc_sysfs.c:514:
+		debugf1("%s()  dimm labels and ce_count files created", __func__);
 		         ^

WARNING:TYPO_SPELLING: 'specifed' may be misspelled - perhaps 'specified'?
#625: FILE: drivers/edac/edac_mc_sysfs.c:536:
+/* Create a CSROW object under specifed edac_mc_device */
                                ^^^^^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#642: FILE: drivers/edac/edac_mc_sysfs.c:553:
+	err = kobject_set_name(&csrow->kobj,"csrow%d",index);
 	                                          ^

WARNING:TYPO_SPELLING: 'dyanmic' may be misspelled - perhaps 'dynamic'?
#649: FILE: drivers/edac/edac_mc_sysfs.c:560:
+		/* Create the dyanmic attribute files on this csrow,
 		              ^^^^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#702: FILE: drivers/edac/edac_mc_sysfs.c:612:
+				"Scrub rate set successfully, applied: %d\n",
 				                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#702: FILE: drivers/edac/edac_mc_sysfs.c:612:
+				"Scrub rate set successfully, applied: %d\n",
 				                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Scrub>
#702: FILE: drivers/edac/edac_mc_sysfs.c:612:
+				"Scrub rate set successfully, applied: %d\n",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#707: FILE: drivers/edac/edac_mc_sysfs.c:617:
+				"Scrub rate set FAILED, could not apply: %d\n",
 				                                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#707: FILE: drivers/edac/edac_mc_sysfs.c:617:
+				"Scrub rate set FAILED, could not apply: %d\n",
 				                                         ^

ERROR:SPACING: space required before that '!' (ctx:VxV)
#713: FILE: drivers/edac/edac_mc_sysfs.c:623:
+			"Memory scrubbing 'set'control is not implemented!\n");
 			                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Memory>
#713: FILE: drivers/edac/edac_mc_sysfs.c:623:
+			"Memory scrubbing 'set'control is not implemented!\n");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#726: FILE: drivers/edac/edac_mc_sysfs.c:635:
+				"Scrub rate successfully, fetched: %d\n",
 				                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#726: FILE: drivers/edac/edac_mc_sysfs.c:635:
+				"Scrub rate successfully, fetched: %d\n",
 				                                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#731: FILE: drivers/edac/edac_mc_sysfs.c:640:
+				"Scrub rate fetch FAILED, got: %d\n",
 				                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#731: FILE: drivers/edac/edac_mc_sysfs.c:640:
+				"Scrub rate fetch FAILED, got: %d\n",
 				                               ^

ERROR:SPACING: space required before that '!' (ctx:VxV)
#737: FILE: drivers/edac/edac_mc_sysfs.c:646:
+			"Memory scrubbing 'get' control is not implemented!\n");
 			                                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#739: FILE: drivers/edac/edac_mc_sysfs.c:648:
+	return sprintf(data, "%d\n", bandwidth);
 	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#745: FILE: drivers/edac/edac_mc_sysfs.c:654:
+	return sprintf(data,"%d\n", mci->ue_count);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#750: FILE: drivers/edac/edac_mc_sysfs.c:659:
+	return sprintf(data,"%d\n", mci->ce_count);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#756: FILE: drivers/edac/edac_mc_sysfs.c:664:
+	return sprintf(data,"%d\n", mci->ce_noinfo_count);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#762: FILE: drivers/edac/edac_mc_sysfs.c:669:
+	return sprintf(data,"%d\n", mci->ue_noinfo_count);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#767: FILE: drivers/edac/edac_mc_sysfs.c:674:
+	return sprintf(data,"%ld\n", (jiffies - mci->start_time) / HZ);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#772: FILE: drivers/edac/edac_mc_sysfs.c:679:
+	return sprintf(data,"%s\n", mci->ctl_name);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#789: FILE: drivers/edac/edac_mc_sysfs.c:696:
+	return sprintf(data,"%u\n", PAGES_TO_MiB(total_pages));
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: drivers/edac/edac_mc_sysfs.c:774:
+ * Release of a MC controlling instance$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: drivers/edac/edac_mc_sysfs.c:775:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#877: FILE: drivers/edac/edac_mc_sysfs.c:781:
+	debugf0("%s() idx=%d\n", __func__, mci->mc_idx);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#877: FILE: drivers/edac/edac_mc_sysfs.c:781:
+	debugf0("%s() idx=%d\n", __func__, mci->mc_idx);
 	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#877: FILE: drivers/edac/edac_mc_sysfs.c:781:
+	debugf0("%s() idx=%d\n", __func__, mci->mc_idx);
 	                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#887: FILE: drivers/edac/edac_mc_sysfs.c:791:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: drivers/edac/edac_mc_sysfs.c:795:
+ * Create a new Memory Controller kobject instance,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: drivers/edac/edac_mc_sysfs.c:796:
+ *^Imc<id> under the 'mc' directory$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: drivers/edac/edac_mc_sysfs.c:797:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/edac/edac_mc_sysfs.c:798:
+ * Return:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/edac/edac_mc_sysfs.c:799:
+ *^I0^ISuccess$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: drivers/edac/edac_mc_sysfs.c:800:
+ *^I!0^IFailure$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: drivers/edac/edac_mc_sysfs.c:801:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#905: FILE: drivers/edac/edac_mc_sysfs.c:809:
+	debugf0("%s() idx=%d\n", __func__, mci->mc_idx);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#905: FILE: drivers/edac/edac_mc_sysfs.c:809:
+	debugf0("%s() idx=%d\n", __func__, mci->mc_idx);
 	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#905: FILE: drivers/edac/edac_mc_sysfs.c:809:
+	debugf0("%s() idx=%d\n", __func__, mci->mc_idx);
 	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#909: FILE: drivers/edac/edac_mc_sysfs.c:813:
+	err = kobject_set_name(edac_mci_kobj,"mc%d",mci->mc_idx);
 	                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/edac/edac_mc_sysfs.c:866:
+ * remove a Memory Controller instance$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: drivers/edac/edac_mc_sysfs.c:867:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#968: FILE: drivers/edac/edac_mc_sysfs.c:872:
+	debugf0("%s()\n", __func__);
 	         ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#968: FILE: drivers/edac/edac_mc_sysfs.c:872:
+	debugf0("%s()\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#985: FILE: drivers/edac/edac_mc_sysfs.c:889:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1009: FILE: drivers/edac/edac_pci_sysfs.c:1:
+/* edac_mc kernel module

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1024: FILE: drivers/edac/edac_pci_sysfs.c:16:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1026: FILE: drivers/edac/edac_pci_sysfs.c:18:
+static int check_pci_parity = 0;	/* default YES check PCI parity */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1032: FILE: drivers/edac/edac_pci_sysfs.c:23:
+static struct kobject edac_pci_kobj; /* /sys/devices/system/edac/pci
+static struct completion edac_pci_kobj_complete;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1034: FILE: drivers/edac/edac_pci_sysfs.c:25:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1065: FILE: drivers/edac/edac_pci_sysfs.c:54:
+	struct edac_pci_dev_attribute *edac_pci_dev;
+	edac_pci_dev= (struct edac_pci_dev_attribute*)attr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1065: FILE: drivers/edac/edac_pci_sysfs.c:54:
+	edac_pci_dev= (struct edac_pci_dev_attribute*)attr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1065: FILE: drivers/edac/edac_pci_sysfs.c:54:
+	edac_pci_dev= (struct edac_pci_dev_attribute*)attr;
 	            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/edac/edac_pci_sysfs.c:62:
+static ssize_t edac_pci_dev_store(struct kobject *kobj,
+		struct attribute *attr, const char *buffer, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1076: FILE: drivers/edac/edac_pci_sysfs.c:65:
+	struct edac_pci_dev_attribute *edac_pci_dev;
+	edac_pci_dev= (struct edac_pci_dev_attribute*)attr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1076: FILE: drivers/edac/edac_pci_sysfs.c:65:
+	edac_pci_dev= (struct edac_pci_dev_attribute*)attr;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1076: FILE: drivers/edac/edac_pci_sysfs.c:65:
+	edac_pci_dev= (struct edac_pci_dev_attribute*)attr;
 	            ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1083: FILE: drivers/edac/edac_pci_sysfs.c:72:
+static struct sysfs_ops edac_pci_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1088: FILE: drivers/edac/edac_pci_sysfs.c:77:
+#define EDAC_PCI_ATTR(_name,_mode,_show,_store)			\
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1088: FILE: drivers/edac/edac_pci_sysfs.c:77:
+#define EDAC_PCI_ATTR(_name,_mode,_show,_store)			\
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1088: FILE: drivers/edac/edac_pci_sysfs.c:77:
+#define EDAC_PCI_ATTR(_name,_mode,_show,_store)			\
                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_name' may be better as '(_name)' to avoid precedence issues
#1088: FILE: drivers/edac/edac_pci_sysfs.c:77:
+#define EDAC_PCI_ATTR(_name,_mode,_show,_store)			\
+static struct edac_pci_dev_attribute edac_pci_attr_##_name = {		\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
+	.value  = &_name,					\
+	.show   = _show,					\
+	.store  = _store,					\
+};

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1088: FILE: drivers/edac/edac_pci_sysfs.c:77:
+#define EDAC_PCI_ATTR(_name,_mode,_show,_store)			\
+static struct edac_pci_dev_attribute edac_pci_attr_##_name = {		\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
+	.value  = &_name,					\
+	.show   = _show,					\
+	.store  = _store,					\
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/edac/edac_pci_sysfs.c:85:
+#define EDAC_PCI_STRING_ATTR(_name,_data,_mode,_show,_store)	\
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/edac/edac_pci_sysfs.c:85:
+#define EDAC_PCI_STRING_ATTR(_name,_data,_mode,_show,_store)	\
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/edac/edac_pci_sysfs.c:85:
+#define EDAC_PCI_STRING_ATTR(_name,_data,_mode,_show,_store)	\
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/edac/edac_pci_sysfs.c:85:
+#define EDAC_PCI_STRING_ATTR(_name,_data,_mode,_show,_store)	\
                                                     ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1096: FILE: drivers/edac/edac_pci_sysfs.c:85:
+#define EDAC_PCI_STRING_ATTR(_name,_data,_mode,_show,_store)	\
+static struct edac_pci_dev_attribute edac_pci_attr_##_name = {		\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
+	.value  = _data,					\
+	.show   = _show,					\
+	.store  = _store,					\
+};

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1105: FILE: drivers/edac/edac_pci_sysfs.c:94:
+EDAC_PCI_ATTR(check_pci_parity, S_IRUGO|S_IWUSR, edac_pci_int_show,
                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1105: FILE: drivers/edac/edac_pci_sysfs.c:94:
+EDAC_PCI_ATTR(check_pci_parity, S_IRUGO|S_IWUSR, edac_pci_int_show,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: drivers/edac/edac_pci_sysfs.c:95:
+EDAC_PCI_ATTR(check_pci_parity, S_IRUGO|S_IWUSR, edac_pci_int_show,
+	edac_pci_int_store);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1107: FILE: drivers/edac/edac_pci_sysfs.c:96:
+EDAC_PCI_ATTR(panic_on_pci_parity, S_IRUGO|S_IWUSR, edac_pci_int_show,
                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1107: FILE: drivers/edac/edac_pci_sysfs.c:96:
+EDAC_PCI_ATTR(panic_on_pci_parity, S_IRUGO|S_IWUSR, edac_pci_int_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1108: FILE: drivers/edac/edac_pci_sysfs.c:97:
+EDAC_PCI_ATTR(panic_on_pci_parity, S_IRUGO|S_IWUSR, edac_pci_int_show,
+	edac_pci_int_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1109: FILE: drivers/edac/edac_pci_sysfs.c:98:
+EDAC_PCI_ATTR(pci_parity_count, S_IRUGO, edac_pci_int_show, NULL);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1122: FILE: drivers/edac/edac_pci_sysfs.c:111:
+	debugf1("%s()\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#1129: FILE: drivers/edac/edac_pci_sysfs.c:118:
+	.default_attrs = (struct attribute **) edac_pci_attr,

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1143: FILE: drivers/edac/edac_pci_sysfs.c:132:
+	debugf1("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1173: FILE: drivers/edac/edac_pci_sysfs.c:162:
+	debugf0("%s()\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1179: FILE: drivers/edac/edac_pci_sysfs.c:168:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1241: FILE: drivers/edac/edac_pci_sysfs.c:230:
+	debugf2("PCI STATUS= 0x%04x %s\n", status, dev->dev.bus_id );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: drivers/edac/edac_pci_sysfs.c:236:
+			edac_printk(KERN_CRIT, EDAC_PCI,
+				"Signaled System Error on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: drivers/edac/edac_pci_sysfs.c:241:
+			edac_printk(KERN_CRIT, EDAC_PCI,
+				"Master Data Parity Error on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1260: FILE: drivers/edac/edac_pci_sysfs.c:249:
+			edac_printk(KERN_CRIT, EDAC_PCI,
+				"Detected Parity Error on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1278: FILE: drivers/edac/edac_pci_sysfs.c:266:
+		debugf2("PCI SEC_STATUS= 0x%04x %s\n",
+				status, dev->dev.bus_id );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1278: FILE: drivers/edac/edac_pci_sysfs.c:266:
+				status, dev->dev.bus_id );

WARNING:SPLIT_STRING: quoted string split across lines
#1284: FILE: drivers/edac/edac_pci_sysfs.c:272:
+				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					"Signaled System Error on %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1289: FILE: drivers/edac/edac_pci_sysfs.c:277:
+				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					"Master Data Parity Error on "

WARNING:SPLIT_STRING: quoted string split across lines
#1290: FILE: drivers/edac/edac_pci_sysfs.c:278:
+					"Master Data Parity Error on "
+					"%s\n", pci_name(dev));

WARNING:SPLIT_STRING: quoted string split across lines
#1297: FILE: drivers/edac/edac_pci_sysfs.c:285:
+				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					"Detected Parity Error on %s\n",

ERROR:SPACING: space required before the open parenthesis '('
#1321: FILE: drivers/edac/edac_pci_sysfs.c:307:
+	while((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1321: FILE: drivers/edac/edac_pci_sysfs.c:307:
+	while((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {
+		fn(dev);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1336: FILE: drivers/edac/edac_pci_sysfs.c:322:
+	debugf3("%s()\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1366: FILE: drivers/edac/edac_pci_sysfs.c:352:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1374: FILE: drivers/edac/edac_pci_sysfs.c:359:
+MODULE_PARM_DESC(panic_on_pci_parity, "Panic on PCI Bus Parity error:
                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <Panic>
#1374: FILE: drivers/edac/edac_pci_sysfs.c:359:
+MODULE_PARM_DESC(panic_on_pci_parity, "Panic on PCI Bus Parity error:

CHECK:CAMELCASE: Avoid CamelCase: <Bus>
#1374: FILE: drivers/edac/edac_pci_sysfs.c:359:
+MODULE_PARM_DESC(panic_on_pci_parity, "Panic on PCI Bus Parity error:

CHECK:CAMELCASE: Avoid CamelCase: <Parity>
#1374: FILE: drivers/edac/edac_pci_sysfs.c:359:
+MODULE_PARM_DESC(panic_on_pci_parity, "Panic on PCI Bus Parity error:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1383: FILE: drivers/edac/edac_core.h:1:
+/*

ERROR:SPACING: space prohibited after that open parenthesis '('
#1422: FILE: drivers/edac/edac_core.h:40:
+#define PAGES_TO_MiB( pages )	( ( pages ) >> ( 20 - PAGE_SHIFT ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1422: FILE: drivers/edac/edac_core.h:40:
+#define PAGES_TO_MiB( pages )	( ( pages ) >> ( 20 - PAGE_SHIFT ) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1424: FILE: drivers/edac/edac_core.h:42:
+#define PAGES_TO_MiB( pages )	( ( pages ) << ( PAGE_SHIFT - 20 ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1424: FILE: drivers/edac/edac_core.h:42:
+#define PAGES_TO_MiB( pages )	( ( pages ) << ( PAGE_SHIFT - 20 ) )

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1428: FILE: drivers/edac/edac_core.h:46:
+	printk(level "EDAC " prefix ": " fmt, ##arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mci' may be better as '(mci)' to avoid precedence issues
#1430: FILE: drivers/edac/edac_core.h:48:
+#define edac_mc_printk(mci, level, fmt, arg...) \
+	printk(level "EDAC MC%d: " fmt, mci->mc_idx, ##arg)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1431: FILE: drivers/edac/edac_core.h:49:
+	printk(level "EDAC MC%d: " fmt, mci->mc_idx, ##arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mci' may be better as '(mci)' to avoid precedence issues
#1433: FILE: drivers/edac/edac_core.h:51:
+#define edac_mc_chipset_printk(mci, level, prefix, fmt, arg...) \
+	printk(level "EDAC " prefix " MC%d: " fmt, mci->mc_idx, ##arg)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1434: FILE: drivers/edac/edac_core.h:52:
+	printk(level "EDAC " prefix " MC%d: " fmt, mci->mc_idx, ##arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: drivers/edac/edac_core.h:62:
+#define edac_debug_printk(level, fmt, arg...)                         $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#1449: FILE: drivers/edac/edac_core.h:67:
+	} while(0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1451: FILE: drivers/edac/edac_core.h:69:
+#define debugf0( ... ) edac_debug_printk(0, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1451: FILE: drivers/edac/edac_core.h:69:
+#define debugf0( ... ) edac_debug_printk(0, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1452: FILE: drivers/edac/edac_core.h:70:
+#define debugf1( ... ) edac_debug_printk(1, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1452: FILE: drivers/edac/edac_core.h:70:
+#define debugf1( ... ) edac_debug_printk(1, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1453: FILE: drivers/edac/edac_core.h:71:
+#define debugf2( ... ) edac_debug_printk(2, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1453: FILE: drivers/edac/edac_core.h:71:
+#define debugf2( ... ) edac_debug_printk(2, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1454: FILE: drivers/edac/edac_core.h:72:
+#define debugf3( ... ) edac_debug_printk(3, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1454: FILE: drivers/edac/edac_core.h:72:
+#define debugf3( ... ) edac_debug_printk(3, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1455: FILE: drivers/edac/edac_core.h:73:
+#define debugf4( ... ) edac_debug_printk(4, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1455: FILE: drivers/edac/edac_core.h:73:
+#define debugf4( ... ) edac_debug_printk(4, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1459: FILE: drivers/edac/edac_core.h:77:
+#define debugf0( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1459: FILE: drivers/edac/edac_core.h:77:
+#define debugf0( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1460: FILE: drivers/edac/edac_core.h:78:
+#define debugf1( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1460: FILE: drivers/edac/edac_core.h:78:
+#define debugf1( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1461: FILE: drivers/edac/edac_core.h:79:
+#define debugf2( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1461: FILE: drivers/edac/edac_core.h:79:
+#define debugf2( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1462: FILE: drivers/edac/edac_core.h:80:
+#define debugf3( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1462: FILE: drivers/edac/edac_core.h:80:
+#define debugf3( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1463: FILE: drivers/edac/edac_core.h:81:
+#define debugf4( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1463: FILE: drivers/edac/edac_core.h:81:
+#define debugf4( ... )

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1469: FILE: drivers/edac/edac_core.h:87:
+#define PCI_VEND_DEV(vend, dev) PCI_VENDOR_ID_ ## vend, \
+	PCI_DEVICE_ID_ ## vend ## _ ## dev

WARNING:TYPO_SPELLING: 'Doesnt' may be misspelled - perhaps 'Doesn't'?
#1535: FILE: drivers/edac/edac_core.h:153:
+	EDAC_NONE,		/* Doesnt support ECC */
 	          		   ^^^^^^

WARNING:TYPO_SPELLING: 'agregates' may be misspelled - perhaps 'aggregates'?
#1602: FILE: drivers/edac/edac_core.h:215:
+ * Memory Stick:	A printed circuit board that agregates multiple
                 	                             ^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'for'
#1647: FILE: drivers/edac/edac_core.h:257:
+ * Socket set:		All of the memory sticks that are required for for

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1719: FILE: drivers/edac/edac_core.h:328:
+	/* Translates sdram memory scrub rate given in bytes/sec to the
+	   internal representation and configures whatever else needs

WARNING:SPACING: Unnecessary space before function pointer arguments
#1722: FILE: drivers/edac/edac_core.h:331:
+	int (*set_sdram_scrub_rate) (struct mem_ctl_info *mci, u32 *bw);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1725: FILE: drivers/edac/edac_core.h:334:
+	/* Get the current sdram memory scrub rate from the internal
+	   representation and converts it to the closest matching

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#1726: FILE: drivers/edac/edac_core.h:335:
+	   bandwith in bytes/sec.
 	   ^^^^^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#1728: FILE: drivers/edac/edac_core.h:337:
+	int (*get_sdram_scrub_rate) (struct mem_ctl_info *mci, u32 *bw);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1731: FILE: drivers/edac/edac_core.h:340:
+	void (*edac_check) (struct mem_ctl_info * mci);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1731: FILE: drivers/edac/edac_core.h:340:
+	void (*edac_check) (struct mem_ctl_info * mci);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1738: FILE: drivers/edac/edac_core.h:347:
+	unsigned long (*ctl_page_to_phys) (struct mem_ctl_info * mci,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1738: FILE: drivers/edac/edac_core.h:347:
+	unsigned long (*ctl_page_to_phys) (struct mem_ctl_info * mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1739: FILE: drivers/edac/edac_core.h:348:
+	unsigned long (*ctl_page_to_phys) (struct mem_ctl_info * mci,
+					unsigned long page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1777: FILE: drivers/edac/edac_core.h:384:
+static inline void pci_write_bits8(struct pci_dev *pdev, int offset,
+		u8 mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1793: FILE: drivers/edac/edac_core.h:400:
+static inline void pci_write_bits16(struct pci_dev *pdev, int offset,
+		u16 value, u16 mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1809: FILE: drivers/edac/edac_core.h:416:
+static inline void pci_write_bits32(struct pci_dev *pdev, int offset,
+		u32 value, u32 mask)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1825: FILE: drivers/edac/edac_core.h:432:
+extern struct mem_ctl_info * edac_mc_find(int idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1825: FILE: drivers/edac/edac_core.h:432:
+extern struct mem_ctl_info * edac_mc_find(int idx);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1826: FILE: drivers/edac/edac_core.h:433:
+extern int edac_mc_add_mc(struct mem_ctl_info *mci,int mc_idx);
                                                   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1826: FILE: drivers/edac/edac_core.h:433:
+extern int edac_mc_add_mc(struct mem_ctl_info *mci,int mc_idx);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1827: FILE: drivers/edac/edac_core.h:434:
+extern struct mem_ctl_info * edac_mc_del_mc(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1827: FILE: drivers/edac/edac_core.h:434:
+extern struct mem_ctl_info * edac_mc_del_mc(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1828: FILE: drivers/edac/edac_core.h:435:
+extern int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1829: FILE: drivers/edac/edac_core.h:436:
+extern int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci,
+					unsigned long page);

WARNING:TYPO_SPELLING: 'exausted' may be misspelled - perhaps 'exhausted'?
#1834: FILE: drivers/edac/edac_core.h:441:
+ * be exausted.  When all registers are exhausted and an additional
       ^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1836: FILE: drivers/edac/edac_core.h:443:
+ * error occured and the type of error, but doesn't have any
          ^^^^^^^

WARNING:TYPO_SPELLING: 'ue' may be misspelled - perhaps 'use'?
#1837: FILE: drivers/edac/edac_core.h:444:
+ * further information.  The ce/ue versions make for cleaner
                                 ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1841: FILE: drivers/edac/edac_core.h:448:
+extern void edac_mc_handle_ce(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1842: FILE: drivers/edac/edac_core.h:449:
+extern void edac_mc_handle_ce(struct mem_ctl_info *mci,
+		unsigned long page_frame_number, unsigned long offset_in_page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1845: FILE: drivers/edac/edac_core.h:452:
+extern void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1846: FILE: drivers/edac/edac_core.h:453:
+extern void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci,
+		const char *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1847: FILE: drivers/edac/edac_core.h:454:
+extern void edac_mc_handle_ue(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1848: FILE: drivers/edac/edac_core.h:455:
+extern void edac_mc_handle_ue(struct mem_ctl_info *mci,
+		unsigned long page_frame_number, unsigned long offset_in_page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1850: FILE: drivers/edac/edac_core.h:457:
+extern void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1851: FILE: drivers/edac/edac_core.h:458:
+extern void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci,
+		const char *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1852: FILE: drivers/edac/edac_core.h:459:
+extern void edac_mc_handle_fbd_ue(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1853: FILE: drivers/edac/edac_core.h:460:
+extern void edac_mc_handle_fbd_ue(struct mem_ctl_info *mci,
+		unsigned int csrow,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1857: FILE: drivers/edac/edac_core.h:464:
+extern void edac_mc_handle_fbd_ce(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1858: FILE: drivers/edac/edac_core.h:465:
+extern void edac_mc_handle_fbd_ce(struct mem_ctl_info *mci,
+		unsigned int csrow,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1866: FILE: drivers/edac/edac_core.h:473:
+extern struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt, unsigned

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1866: FILE: drivers/edac/edac_core.h:473:
+extern struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt, unsigned

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1868: FILE: drivers/edac/edac_core.h:474:
+		unsigned nr_chans);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1871: FILE: drivers/edac/edac_core.h:477:
+extern void edac_mc_free(struct mem_ctl_info *mci);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3319: FILE: drivers/edac/edac_module.c:1:
+

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#3326: FILE: drivers/edac/edac_module.c:8:
+#define EDAC_MC_VERSION "Ver: 2.0.3" __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3346: FILE: drivers/edac/edac_module.c:28:
+	debugf3("%s()\n", __func__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3361: FILE: drivers/edac/edac_module.c:43:
+	while (!kthread_should_stop()) {
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3386: FILE: drivers/edac/edac_module.c:67:
+^I * ^Imodule initialization.  We should also do an initial clear$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3394: FILE: drivers/edac/edac_module.c:75:
+		edac_printk(KERN_ERR, EDAC_MC,
+			"Error initializing sysfs code\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3402: FILE: drivers/edac/edac_module.c:83:
+		edac_printk(KERN_ERR, EDAC_MC,
+			"PCI: Error initializing sysfs code\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#3425: FILE: drivers/edac/edac_module.c:106:
+	debugf0("%s()\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3445: FILE: drivers/edac/edac_module.c:125:
+/* refer to *_sysfs.c files for parameters that are exported via sysfs
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3456: FILE: drivers/edac/edac_module.h:1:
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3477: FILE: drivers/edac/edac_module.h:22:
+extern int edac_create_sysfs_mci_device(struct mem_ctl_info *mci);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3478: FILE: drivers/edac/edac_module.h:23:
+extern void edac_remove_sysfs_mci_device(struct mem_ctl_info *mci);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3479: FILE: drivers/edac/edac_module.h:24:
+extern int edac_sysfs_memctrl_setup(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3480: FILE: drivers/edac/edac_module.h:25:
+extern void edac_sysfs_memctrl_teardown(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3481: FILE: drivers/edac/edac_module.h:26:
+extern void edac_check_mc_devices(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3482: FILE: drivers/edac/edac_module.h:27:
+extern int edac_get_log_ue(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3483: FILE: drivers/edac/edac_module.h:28:
+extern int edac_get_log_ce(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3484: FILE: drivers/edac/edac_module.h:29:
+extern int edac_get_panic_on_ue(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3485: FILE: drivers/edac/edac_module.h:30:
+extern int edac_get_poll_msec(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3487: FILE: drivers/edac/edac_module.h:32:
+extern int edac_device_create_sysfs(struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3489: FILE: drivers/edac/edac_module.h:33:
+extern void edac_device_remove_sysfs(struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3491: FILE: drivers/edac/edac_module.h:34:
+extern struct sysdev_class *edac_get_edac_class(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3493: FILE: drivers/edac/edac_module.h:36:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3498: FILE: drivers/edac/edac_module.h:41:
+extern void edac_pci_do_parity_check(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3499: FILE: drivers/edac/edac_module.h:42:
+extern void edac_pci_clear_parity_errors(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3500: FILE: drivers/edac/edac_module.h:43:
+extern int edac_sysfs_pci_setup(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3501: FILE: drivers/edac/edac_module.h:44:
+extern void edac_sysfs_pci_teardown(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3510: FILE: drivers/edac/edac_module.h:53:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 67 errors, 86 warnings, 121 checks, 3769 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
