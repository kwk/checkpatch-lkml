WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
>> It's possible but the window is small. When a threshold is reached on the

WARNING:TYPO_SPELLING: 'theres' may be misspelled - perhaps 'there's'?
#97: 
Ok remember my scenario - several parallel iozone sequential read processes - theres not much allocation going on except for the page cache read ahead related to that read workload.
                                                                              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#111: FILE: mm/page_alloc.c:1955:
        if (should_alloc_retry(gfp_mask, order, pages_reclaimed)) {
[...]
+               if (!(alloc_flags & ALLOC_NO_WATERMARKS))

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: mm/page_alloc.c:1957:
+               /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: mm/page_alloc.c:1958:
+                * If it gets here try it without watermarks before going$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: mm/page_alloc.c:1959:
+                * to sleep.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: mm/page_alloc.c:1960:
+                *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: mm/page_alloc.c:1961:
+                * This will end up in alloc_high_priority and if that fails$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: mm/page_alloc.c:1962:
+                * once more direct_reclaim but this time without watermark$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: mm/page_alloc.c:1963:
+                * checks.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: mm/page_alloc.c:1964:
+                *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: mm/page_alloc.c:1965:
+                * FIXME: that is just for verification - a real fix needs to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: mm/page_alloc.c:1966:
+                * ensure e.g. page cache allocations don't drain all pages$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: mm/page_alloc.c:1967:
+                * under watermark$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: mm/page_alloc.c:1968:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: mm/page_alloc.c:1969:
+               if (!(alloc_flags & ALLOC_NO_WATERMARKS))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: mm/page_alloc.c:1969:
+               if (!(alloc_flags & ALLOC_NO_WATERMARKS))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#126: FILE: mm/page_alloc.c:1969:
+               if (!(alloc_flags & ALLOC_NO_WATERMARKS))
+                       alloc_flags &= ALLOC_NO_WATERMARKS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: mm/page_alloc.c:1970:
+                       alloc_flags &= ALLOC_NO_WATERMARKS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: mm/page_alloc.c:1970:
+                       alloc_flags &= ALLOC_NO_WATERMARKS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: mm/page_alloc.c:1971:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: mm/page_alloc.c:1971:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#128: FILE: mm/page_alloc.c:1971:
+               else
+                       congestion_wait(BLK_RW_ASYNC, HZ/50);

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: mm/page_alloc.c:1972:
+                       congestion_wait(BLK_RW_ASYNC, HZ/50);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: mm/page_alloc.c:1972:
+                       congestion_wait(BLK_RW_ASYNC, HZ/50);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#129: FILE: mm/page_alloc.c:1972:
+                       congestion_wait(BLK_RW_ASYNC, HZ/50);
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#172: FILE: mm/page_alloc.c:1198:
+		if (debugme) printk(KERN_INFO"%s - got list %p for migratetype %d\n", __func__, list, migratetype);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#172: FILE: mm/page_alloc.c:1198:
+		if (debugme) printk(KERN_INFO"%s - got list %p for migratetype %d\n", __func__, list, migratetype);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#172: FILE: mm/page_alloc.c:1198:
+		if (debugme) printk(KERN_INFO"%s - got list %p for migratetype %d\n", __func__, list, migratetype);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#172: FILE: mm/page_alloc.c:1198:
+		if (debugme) printk(KERN_INFO"%s - got list %p for migratetype %d\n", __func__, list, migratetype);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#174: FILE: mm/page_alloc.c:1200:
+			if (debugme) printk(KERN_INFO"%s - list was empty - go for rmqueue_bulk\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#174: FILE: mm/page_alloc.c:1200:
+			if (debugme) printk(KERN_INFO"%s - list was empty - go for rmqueue_bulk\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#174: FILE: mm/page_alloc.c:1200:
+			if (debugme) printk(KERN_INFO"%s - list was empty - go for rmqueue_bulk\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#174: FILE: mm/page_alloc.c:1200:
+			if (debugme) printk(KERN_INFO"%s - list was empty - go for rmqueue_bulk\n", __func__);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#180: FILE: mm/page_alloc.c:1205:
+				if (debugme) printk(KERN_INFO"%s - list still empty after rmqueue_bulk\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#180: FILE: mm/page_alloc.c:1205:
+				if (debugme) printk(KERN_INFO"%s - list still empty after rmqueue_bulk\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#180: FILE: mm/page_alloc.c:1205:
+				if (debugme) printk(KERN_INFO"%s - list still empty after rmqueue_bulk\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#180: FILE: mm/page_alloc.c:1205:
+				if (debugme) printk(KERN_INFO"%s - list still empty after rmqueue_bulk\n", __func__);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#185: FILE: mm/page_alloc.c:1210:
+		if (debugme) printk(KERN_INFO"%s - list has pages - I'm irq save on one cpu and take one\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#185: FILE: mm/page_alloc.c:1210:
+		if (debugme) printk(KERN_INFO"%s - list has pages - I'm irq save on one cpu and take one\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#185: FILE: mm/page_alloc.c:1210:
+		if (debugme) printk(KERN_INFO"%s - list has pages - I'm irq save on one cpu and take one\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#185: FILE: mm/page_alloc.c:1210:
+		if (debugme) printk(KERN_INFO"%s - list has pages - I'm irq save on one cpu and take one\n", __func__);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#195: FILE: mm/page_alloc.c:1247:
+		if (debugme) printk(KERN_INFO"%s - prep_new_page triggered - goto again\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#195: FILE: mm/page_alloc.c:1247:
+		if (debugme) printk(KERN_INFO"%s - prep_new_page triggered - goto again\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: mm/page_alloc.c:1247:
+		if (debugme) printk(KERN_INFO"%s - prep_new_page triggered - goto again\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#195: FILE: mm/page_alloc.c:1247:
+		if (debugme) printk(KERN_INFO"%s - prep_new_page triggered - goto again\n", __func__);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#214: FILE: mm/page_alloc.c:1543:
+		if (debugme) printk(KERN_INFO"%s - zone loop - current zone '%s'\n", __func__, zone->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#214: FILE: mm/page_alloc.c:1543:
+		if (debugme) printk(KERN_INFO"%s - zone loop - current zone '%s'\n", __func__, zone->name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#214: FILE: mm/page_alloc.c:1543:
+		if (debugme) printk(KERN_INFO"%s - zone loop - current zone '%s'\n", __func__, zone->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#214: FILE: mm/page_alloc.c:1543:
+		if (debugme) printk(KERN_INFO"%s - zone loop - current zone '%s'\n", __func__, zone->name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#215: FILE: mm/page_alloc.c:1544:
 		if (NUMA_BUILD && zlc_active &&
[...]
+				if (debugme) printk(KERN_INFO"%s - skip due to NUMA_BUILD && zlc_active\n", __func__);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#218: FILE: mm/page_alloc.c:1546:
+				if (debugme) printk(KERN_INFO"%s - skip due to NUMA_BUILD && zlc_active\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#218: FILE: mm/page_alloc.c:1546:
+				if (debugme) printk(KERN_INFO"%s - skip due to NUMA_BUILD && zlc_active\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#218: FILE: mm/page_alloc.c:1546:
+				if (debugme) printk(KERN_INFO"%s - skip due to NUMA_BUILD && zlc_active\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#218: FILE: mm/page_alloc.c:1546:
+				if (debugme) printk(KERN_INFO"%s - skip due to NUMA_BUILD && zlc_active\n", __func__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#221: FILE: mm/page_alloc.c:1549:
 		if ((alloc_flags & ALLOC_CPUSET) &&
[...]
+				if (debugme) printk(KERN_INFO"%s - skip due to ALLOC_CPUSET && !allowed_softwall\n", __func__);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#224: FILE: mm/page_alloc.c:1551:
+				if (debugme) printk(KERN_INFO"%s - skip due to ALLOC_CPUSET && !allowed_softwall\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#224: FILE: mm/page_alloc.c:1551:
+				if (debugme) printk(KERN_INFO"%s - skip due to ALLOC_CPUSET && !allowed_softwall\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#224: FILE: mm/page_alloc.c:1551:
+				if (debugme) printk(KERN_INFO"%s - skip due to ALLOC_CPUSET && !allowed_softwall\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#224: FILE: mm/page_alloc.c:1551:
+				if (debugme) printk(KERN_INFO"%s - skip due to ALLOC_CPUSET && !allowed_softwall\n", __func__);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#233: FILE: mm/page_alloc.c:1560:
+			if (debugme) printk(KERN_INFO"%s - watermark check due to !(alloc_flags & ALLOC_NO_WATERMARKS)\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#233: FILE: mm/page_alloc.c:1560:
+			if (debugme) printk(KERN_INFO"%s - watermark check due to !(alloc_flags & ALLOC_NO_WATERMARKS)\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: mm/page_alloc.c:1560:
+			if (debugme) printk(KERN_INFO"%s - watermark check due to !(alloc_flags & ALLOC_NO_WATERMARKS)\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#233: FILE: mm/page_alloc.c:1560:
+			if (debugme) printk(KERN_INFO"%s - watermark check due to !(alloc_flags & ALLOC_NO_WATERMARKS)\n", __func__);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#239: FILE: mm/page_alloc.c:1565:
+				if (debugme) printk(KERN_INFO"%s - goto this_zone due to zone_watermark_ok\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#239: FILE: mm/page_alloc.c:1565:
+				if (debugme) printk(KERN_INFO"%s - goto this_zone due to zone_watermark_ok\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#239: FILE: mm/page_alloc.c:1565:
+				if (debugme) printk(KERN_INFO"%s - goto this_zone due to zone_watermark_ok\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#239: FILE: mm/page_alloc.c:1565:
+				if (debugme) printk(KERN_INFO"%s - goto this_zone due to zone_watermark_ok\n", __func__);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#245: FILE: mm/page_alloc.c:1570:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to zone_reclaim_mode==0\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#245: FILE: mm/page_alloc.c:1570:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to zone_reclaim_mode==0\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#245: FILE: mm/page_alloc.c:1570:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to zone_reclaim_mode==0\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#245: FILE: mm/page_alloc.c:1570:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to zone_reclaim_mode==0\n", __func__);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#253: FILE: mm/page_alloc.c:1578:
+				if (debugme) printk(KERN_INFO"%s - goto next_zone due to ZONE_RECLAIM_NOSCAN\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#253: FILE: mm/page_alloc.c:1578:
+				if (debugme) printk(KERN_INFO"%s - goto next_zone due to ZONE_RECLAIM_NOSCAN\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#253: FILE: mm/page_alloc.c:1578:
+				if (debugme) printk(KERN_INFO"%s - goto next_zone due to ZONE_RECLAIM_NOSCAN\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#253: FILE: mm/page_alloc.c:1578:
+				if (debugme) printk(KERN_INFO"%s - goto next_zone due to ZONE_RECLAIM_NOSCAN\n", __func__);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#257: FILE: mm/page_alloc.c:1582:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to ZONE_RECLAIM_FULL\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#257: FILE: mm/page_alloc.c:1582:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to ZONE_RECLAIM_FULL\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#257: FILE: mm/page_alloc.c:1582:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to ZONE_RECLAIM_FULL\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#257: FILE: mm/page_alloc.c:1582:
+				if (debugme) printk(KERN_INFO"%s - goto zone_full due to ZONE_RECLAIM_FULL\n", __func__);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#264: FILE: mm/page_alloc.c:1588:
+					if (debugme) printk(KERN_INFO"%s - goto zone_full due to !zone_watermark_ok\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#264: FILE: mm/page_alloc.c:1588:
+					if (debugme) printk(KERN_INFO"%s - goto zone_full due to !zone_watermark_ok\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#264: FILE: mm/page_alloc.c:1588:
+					if (debugme) printk(KERN_INFO"%s - goto zone_full due to !zone_watermark_ok\n", __func__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#264: FILE: mm/page_alloc.c:1588:
+					if (debugme) printk(KERN_INFO"%s - goto zone_full due to !zone_watermark_ok\n", __func__);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#271: FILE: mm/page_alloc.c:1595:
+		if (debugme) printk(KERN_INFO"%s - reach buffered_rmqueue for zone '%s'\n", __func__, zone->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#271: FILE: mm/page_alloc.c:1595:
+		if (debugme) printk(KERN_INFO"%s - reach buffered_rmqueue for zone '%s'\n", __func__, zone->name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: mm/page_alloc.c:1595:
+		if (debugme) printk(KERN_INFO"%s - reach buffered_rmqueue for zone '%s'\n", __func__, zone->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#271: FILE: mm/page_alloc.c:1595:
+		if (debugme) printk(KERN_INFO"%s - reach buffered_rmqueue for zone '%s'\n", __func__, zone->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#283: FILE: mm/page_alloc.c:1621:
+	if (debugme) printk(KERN_INFO"%s - return page '%p'\n", __func__, page);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#283: FILE: mm/page_alloc.c:1621:
+	if (debugme) printk(KERN_INFO"%s - return page '%p'\n", __func__, page);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#283: FILE: mm/page_alloc.c:1621:
+	if (debugme) printk(KERN_INFO"%s - return page '%p'\n", __func__, page);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#292: FILE: mm/page_alloc.c:1683:
+		preferred_zone, migratetype,0);
 		                           ^

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#310: FILE: mm/page_alloc.c:2022:
+		// perf_count_page_stats(nodemask, zonelist, high_zoneidx, preferred_zone, migratetype, *did_some_progress, gfp_mask, order);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 134 exceeds 100 columns
#311: FILE: mm/page_alloc.c:2023:
+		// We know stats look good but even second alloc fail (might be racy) - call get_page_from_freelist with debug instead

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: mm/page_alloc.c:2061:
+			preferred_zone, migratetype,0);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: mm/page_alloc.c:2171:
+			preferred_zone, migratetype,0);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#343: FILE: mm/page_alloc.c:2297:
+			preferred_zone, migratetype,0);
 			                           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009902.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 36 errors, 44 warnings, 17 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009902.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
