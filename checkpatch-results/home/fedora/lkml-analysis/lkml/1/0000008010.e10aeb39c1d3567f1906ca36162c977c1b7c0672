WARNING:TYPO_SPELLING: 'Extentions' may be misspelled - perhaps 'Extensions'?
#34: 
Extentions to RapidIO switch support:
^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#38: 
2. add standard route table operations for switches that that support

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur >= end'
#82: FILE: drivers/rapidio/rio-scan.c:256:
+	if ((cur >= end) && (rdev->pef & RIO_PEF_STD_RT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: drivers/rapidio/rio-scan.c:258:
+		pr_debug("RIO: adding STD routing ops for %s\n",
+			rio_name(rdev));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rswitch)...) over kzalloc(sizeof(struct rio_switch)...)
#98: FILE: drivers/rapidio/rio-scan.c:363:
+		rswitch = kzalloc(sizeof(struct rio_switch), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/rapidio/rio.c:465:
+int rio_std_route_add_entry(struct rio_mport *mport, u16 destid, u8 hopcount,
+		       u16 table, u16 route_destid, u8 route_port)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/rapidio/rio.c:469:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_DESTID_SEL_CSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/rapidio/rio.c:472:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_PORT_SEL_CSR,

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#141: FILE: drivers/rapidio/rio.c:475:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:TYPO_SPELLING: 'assosiated' may be misspelled - perhaps 'associated'?
#147: FILE: drivers/rapidio/rio.c:481:
+ *   assosiated with specified destID using standard registers defined in RIO
      ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/rapidio/rio.c:491:
+int rio_std_route_get_entry(struct rio_mport *mport, u16 destid, u8 hopcount,
+		       u16 table, u16 route_destid, u8 *route_port)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/rapidio/rio.c:497:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_DESTID_SEL_CSR, route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/rapidio/rio.c:499:
+		rio_mport_read_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_PORT_SEL_CSR, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/rapidio/rio.c:517:
+int rio_std_route_clr_table(struct rio_mport *mport, u16 destid, u8 hopcount,
+		       u16 table)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/rapidio/rio.c:545:
+			rio_mport_write_config_32(mport, destid, hopcount,
+					RIO_STD_RTE_CONF_DESTID_SEL_CSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/rapidio/rio.c:548:
+			rio_mport_write_config_32(mport, destid, hopcount,
+					RIO_STD_RTE_CONF_PORT_SEL_CSR,

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#220: FILE: drivers/rapidio/rio.c:554:
+	udelay(10);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: drivers/rapidio/rio.h:24:
+extern int rio_std_route_add_entry(struct rio_mport *mport, u16 destid,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: drivers/rapidio/rio.h:27:
+extern int rio_std_route_get_entry(struct rio_mport *mport, u16 destid,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: drivers/rapidio/rio.h:30:
+extern int rio_std_route_clr_table(struct rio_mport *mport, u16 destid,

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#252: FILE: drivers/rapidio/rio.h:41:
+#define DECLARE_RIO_ROUTE_SECTION(section, name, vid, did, add_hook, get_hook, clr_hook) \
+	static const struct rio_route_ops __rio_route_##name __used \
+	__section(section) = { vid, did, add_hook, get_hook, clr_hook };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#284: FILE: drivers/rapidio/switches/idtcps.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/rapidio/switches/idtcps.c:25:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_DESTID_SEL_CSR, route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/rapidio/switches/idtcps.c:28:
+		rio_mport_read_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_PORT_SEL_CSR, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: drivers/rapidio/switches/idtcps.c:32:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_PORT_SEL_CSR, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/rapidio/switches/idtcps.c:46:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_DESTID_SEL_CSR, route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/rapidio/switches/idtcps.c:49:
+		rio_mport_read_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_PORT_SEL_CSR, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/rapidio/switches/idtcps.c:66:
+			rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_DESTID_SEL_CSR, i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/rapidio/switches/idtcps.c:68:
+			rio_mport_write_config_32(mport, destid, hopcount,
+				RIO_STD_RTE_CONF_PORT_SEL_CSR,

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#362: FILE: drivers/rapidio/switches/idtcps.c:79:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_IDT, RIO_DID_IDTCPS6Q, idtcps_route_add_entry, idtcps_route_get_entry, idtcps_route_clr_table);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#363: FILE: drivers/rapidio/switches/idtcps.c:80:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_IDT, RIO_DID_IDTCPS8, idtcps_route_add_entry, idtcps_route_get_entry, idtcps_route_clr_table);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#364: FILE: drivers/rapidio/switches/idtcps.c:81:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_IDT, RIO_DID_IDTCPS10Q, idtcps_route_add_entry, idtcps_route_get_entry, idtcps_route_clr_table);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#365: FILE: drivers/rapidio/switches/idtcps.c:82:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_IDT, RIO_DID_IDTCPS12, idtcps_route_add_entry, idtcps_route_get_entry, idtcps_route_clr_table);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#366: FILE: drivers/rapidio/switches/idtcps.c:83:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_IDT, RIO_DID_IDTCPS16, idtcps_route_add_entry, idtcps_route_get_entry, idtcps_route_clr_table);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#367: FILE: drivers/rapidio/switches/idtcps.c:84:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_IDT, RIO_DID_IDT70K200, idtcps_route_add_entry, idtcps_route_get_entry, idtcps_route_clr_table);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#376: FILE: drivers/rapidio/switches/tsi500.c:60:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_TUNDRA, RIO_DID_TSI500, tsi500_route_add_entry, tsi500_route_get_entry, NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#381: FILE: drivers/rapidio/switches/tsi568.c:1:
+/*

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#405: FILE: drivers/rapidio/switches/tsi568.c:25:
+#define SPP_ROUTE_CFG_DESTID(n)	(0x11070 + 0x100*n)
                                	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#405: FILE: drivers/rapidio/switches/tsi568.c:25:
+#define SPP_ROUTE_CFG_DESTID(n)	(0x11070 + 0x100*n)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#406: FILE: drivers/rapidio/switches/tsi568.c:26:
+#define SPP_ROUTE_CFG_PORT(n)	(0x11074 + 0x100*n)
                              	                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#406: FILE: drivers/rapidio/switches/tsi568.c:26:
+#define SPP_ROUTE_CFG_PORT(n)	(0x11074 + 0x100*n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/rapidio/switches/tsi568.c:34:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPBC_ROUTE_CFG_DESTID, route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/rapidio/switches/tsi568.c:36:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPBC_ROUTE_CFG_PORT, route_port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: drivers/rapidio/switches/tsi568.c:39:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPP_ROUTE_CFG_DESTID(table),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/rapidio/switches/tsi568.c:42:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPP_ROUTE_CFG_PORT(table), route_port);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#425: FILE: drivers/rapidio/switches/tsi568.c:45:
+	udelay(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/rapidio/switches/tsi568.c:59:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPBC_ROUTE_CFG_DESTID, route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/rapidio/switches/tsi568.c:61:
+		rio_mport_read_config_32(mport, destid, hopcount,
+					SPBC_ROUTE_CFG_PORT, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/rapidio/switches/tsi568.c:64:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPP_ROUTE_CFG_DESTID(table),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: drivers/rapidio/switches/tsi568.c:67:
+		rio_mport_read_config_32(mport, destid, hopcount,
+					SPP_ROUTE_CFG_PORT(table), &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/rapidio/switches/tsi568.c:88:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPBC_ROUTE_CFG_DESTID, 0x80000000);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/rapidio/switches/tsi568.c:91:
+			rio_mport_write_config_32(mport, destid, hopcount,
+						SPBC_ROUTE_CFG_PORT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/rapidio/switches/tsi568.c:95:
+		rio_mport_write_config_32(mport, destid, hopcount,
+					SPP_ROUTE_CFG_DESTID(table),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/rapidio/switches/tsi568.c:99:
+			rio_mport_write_config_32(mport, destid, hopcount,
+						SPP_ROUTE_CFG_PORT(table),

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#486: FILE: drivers/rapidio/switches/tsi568.c:106:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_TUNDRA, RIO_DID_TSI568, tsi568_route_add_entry, tsi568_route_get_entry, tsi568_route_clr_table);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#491: FILE: drivers/rapidio/switches/tsi57x.c:1:
+/*

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: drivers/rapidio/switches/tsi57x.c:25:
+#define SPP_ROUTE_CFG_DESTID(n)	(0x11070 + 0x100*n)
                                	                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#515: FILE: drivers/rapidio/switches/tsi57x.c:25:
+#define SPP_ROUTE_CFG_DESTID(n)	(0x11070 + 0x100*n)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#516: FILE: drivers/rapidio/switches/tsi57x.c:26:
+#define SPP_ROUTE_CFG_PORT(n)	(0x11074 + 0x100*n)
                              	                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#516: FILE: drivers/rapidio/switches/tsi57x.c:26:
+#define SPP_ROUTE_CFG_PORT(n)	(0x11074 + 0x100*n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/rapidio/switches/tsi57x.c:39:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				SPP_ROUTE_CFG_DESTID(table), route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/rapidio/switches/tsi57x.c:41:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				SPP_ROUTE_CFG_PORT(table), route_port);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#534: FILE: drivers/rapidio/switches/tsi57x.c:44:
+	udelay(10);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#548: FILE: drivers/rapidio/switches/tsi57x.c:58:
+		/* Use local RT of the ingress port to avoid possible
+		   race condition */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#548: FILE: drivers/rapidio/switches/tsi57x.c:58:
+		   race condition */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/rapidio/switches/tsi57x.c:60:
+		rio_mport_read_config_32(mport, destid, hopcount,
+			RIO_SWP_INFO_CAR, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: drivers/rapidio/switches/tsi57x.c:65:
+	rio_mport_write_config_32(mport, destid, hopcount,
+				SPP_ROUTE_CFG_DESTID(table), route_destid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: drivers/rapidio/switches/tsi57x.c:67:
+	rio_mport_read_config_32(mport, destid, hopcount,
+				SPP_ROUTE_CFG_PORT(table), &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/rapidio/switches/tsi57x.c:94:
+		rio_mport_write_config_32(mport, destid, hopcount,
+				SPP_ROUTE_CFG_DESTID(table), 0x80000000);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: drivers/rapidio/switches/tsi57x.c:97:
+			rio_mport_write_config_32(mport, destid, hopcount,
+				SPP_ROUTE_CFG_PORT(table) , RIO_INVALID_ROUTE);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#587: FILE: drivers/rapidio/switches/tsi57x.c:97:
+				SPP_ROUTE_CFG_PORT(table) , RIO_INVALID_ROUTE);
 				                          ^

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#593: FILE: drivers/rapidio/switches/tsi57x.c:103:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_TUNDRA, RIO_DID_TSI572, tsi57x_route_add_entry, tsi57x_route_get_entry, tsi57x_route_clr_table);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#594: FILE: drivers/rapidio/switches/tsi57x.c:104:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_TUNDRA, RIO_DID_TSI574, tsi57x_route_add_entry, tsi57x_route_get_entry, tsi57x_route_clr_table);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#595: FILE: drivers/rapidio/switches/tsi57x.c:105:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_TUNDRA, RIO_DID_TSI577, tsi57x_route_add_entry, tsi57x_route_get_entry, tsi57x_route_clr_table);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#596: FILE: drivers/rapidio/switches/tsi57x.c:106:
+DECLARE_RIO_ROUTE_OPS(RIO_VID_TUNDRA, RIO_DID_TSI578, tsi57x_route_add_entry, tsi57x_route_get_entry, tsi57x_route_clr_table);

WARNING:SPACING: Unnecessary space before function pointer arguments
#612: FILE: include/linux/rio.h:228:
+	int (*clr_table) (struct rio_mport *mport, u16 destid, u8 hopcount,

WARNING:SPACING: Unnecessary space before function pointer arguments
#629: FILE: include/linux/rio.h:324:
+	int (*clr_hook) (struct rio_mport *mport, u16 destid, u8 hopcount,

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#664: FILE: include/linux/rio_regs.h:42:
+#define  RIO_PEF_EXT_RT			0x00000200	/* [III, 1.3] Extended route table support */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#665: FILE: include/linux/rio_regs.h:43:
+#define  RIO_PEF_STD_RT			0x00000100	/* [III, 1.3] Standard route table support */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 25 warnings, 53 checks, 586 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
