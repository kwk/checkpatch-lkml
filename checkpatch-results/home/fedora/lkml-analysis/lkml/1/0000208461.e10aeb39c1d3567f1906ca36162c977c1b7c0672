WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#54: FILE: drivers/scsi/osd/osd_initiator.c:68:
+static unsigned _osd_req_alist_elem_size(struct osd_request *or, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#54: FILE: drivers/scsi/osd/osd_initiator.c:68:
+static unsigned _osd_req_alist_elem_size(struct osd_request *or, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#59: FILE: drivers/scsi/osd/osd_initiator.c:73:
+static unsigned _osd_req_alist_size(struct osd_request *or, void *list_head)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#64: FILE: drivers/scsi/osd/osd_initiator.c:78:
+static unsigned _osd_req_sizeof_alist_header(struct osd_request *or)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: drivers/scsi/osd/osd_initiator.c:84:
+static void _osd_req_set_alist_type(struct osd_request *or,
+	void *list, int list_type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: drivers/scsi/osd/osd_initiator.c:93:
+static bool _osd_req_is_alist_type(struct osd_request *or,
+	void *list, int list_type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/scsi/osd/osd_initiator.c:106:
+static osd_cdb_offset osd_req_encode_offset(struct osd_request *or,
+	u64 offset, unsigned *padding)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#92: FILE: drivers/scsi/osd/osd_initiator.c:106:
+	u64 offset, unsigned *padding)

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_OFFSET_MIN_SHIFT>
#95: FILE: drivers/scsi/osd/osd_initiator.c:109:
+				  OSDv1_OFFSET_MIN_SHIFT, OSD_OFFSET_MAX_SHIFT);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/scsi/osd/osd_initiator.c:175:
+static void _osd_free_seg(struct osd_request *or,
+	struct _osd_req_data_segment *seg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/scsi/osd/osd_initiator.c:244:
+static int _osd_realloc_seg(struct osd_request *or,
+	struct _osd_req_data_segment *seg, unsigned max_bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: drivers/scsi/osd/osd_initiator.c:244:
+	struct _osd_req_data_segment *seg, unsigned max_bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/scsi/osd/osd_initiator.c:265:
+static int _alloc_set_attr_list(struct osd_request *or,
+	const struct osd_attr *oa, unsigned nelem, unsigned add_bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#156: FILE: drivers/scsi/osd/osd_initiator.c:265:
+	const struct osd_attr *oa, unsigned nelem, unsigned add_bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#156: FILE: drivers/scsi/osd/osd_initiator.c:265:
+	const struct osd_attr *oa, unsigned nelem, unsigned add_bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#158: FILE: drivers/scsi/osd/osd_initiator.c:267:
+	unsigned total_bytes = add_bytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: drivers/scsi/osd/osd_initiator.c:276:
+static int _alloc_get_attr_desc(struct osd_request *or, unsigned max_bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/scsi/osd/osd_initiator.c:397:
+void osd_req_get_attributes(struct osd_request *or,
+	const struct osd_obj_id *obj)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: drivers/scsi/osd/osd_initiator.c:404:
+void osd_req_set_attributes(struct osd_request *or,
+	const struct osd_obj_id *obj)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/scsi/osd/osd_initiator.c:415:
+int osd_req_add_set_attr_list(struct osd_request *or,
+	const struct osd_attr *oa, unsigned nelem)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#205: FILE: drivers/scsi/osd/osd_initiator.c:415:
+	const struct osd_attr *oa, unsigned nelem)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#207: FILE: drivers/scsi/osd/osd_initiator.c:417:
+	unsigned total_bytes = or->set_attr.total_bytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: drivers/scsi/osd/osd_initiator.c:440:
+		unsigned elem_size = _osd_req_alist_elem_size(or, oa->len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/scsi/osd/osd_initiator.c:468:
+static int _append_map_kern(struct request *req,
+	void *buff, unsigned len, gfp_t flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#258: FILE: drivers/scsi/osd/osd_initiator.c:468:
+	void *buff, unsigned len, gfp_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/scsi/osd/osd_initiator.c:488:
+static int _req_append_segment(struct osd_request *or,
+	int padding, struct _osd_req_data_segment *seg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/scsi/osd/osd_initiator.c:545:
+int osd_req_add_get_attr_list(struct osd_request *or,
+	const struct osd_attr *oa, unsigned nelem)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: drivers/scsi/osd/osd_initiator.c:545:
+	const struct osd_attr *oa, unsigned nelem)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#337: FILE: drivers/scsi/osd/osd_initiator.c:547:
+	unsigned total_bytes = or->enc_get_attr.total_bytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#354: FILE: drivers/scsi/osd/osd_initiator.c:564:
+		unsigned max_bytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#370: FILE: drivers/scsi/osd/osd_initiator.c:580:
+		const unsigned cur_size = sizeof(*attrid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/scsi/osd/osd_initiator.c:586:
+			ret = _alloc_get_attr_desc(or,
+					total_bytes + nelem * sizeof(*attrid));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#397: FILE: drivers/scsi/osd/osd_initiator.c:607:
+	OSD_DEBUG(

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#398: FILE: drivers/scsi/osd/osd_initiator.c:608:
+	       "get_attr.total_bytes=%u(%u) enc_get_attr.total_bytes=%u(%Zu)\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#412: FILE: drivers/scsi/osd/osd_initiator.c:622:
+	unsigned out_padding;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#413: FILE: drivers/scsi/osd/osd_initiator.c:623:
+	unsigned in_padding;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/scsi/osd/osd_initiator.c:668:
+int osd_req_decode_get_attr_list(struct osd_request *or,
+	struct osd_attr *oa, int *nelem, void **iterator)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#460: FILE: drivers/scsi/osd/osd_initiator.c:670:
+	unsigned cur_bytes, returned_bytes, n;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: drivers/scsi/osd/osd_initiator.c:671:
+	const unsigned sizeof_attr_list = _osd_req_sizeof_alist_header(or);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#475: FILE: drivers/scsi/osd/osd_initiator.c:685:
+		BUG_ON((*iterator < or->get_attr.buff) ||

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/scsi/osd/osd_initiator.c:686:
+		BUG_ON((*iterator < or->get_attr.buff) ||
+		     (or->get_attr.buff + or->get_attr.alloc_size < *iterator));

WARNING:SPLIT_STRING: quoted string split across lines
#489: FILE: drivers/scsi/osd/osd_initiator.c:699:
+			OSD_DEBUG("target report: space was not big enough! "
+				  "Allocate=%u Needed=%u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#501: FILE: drivers/scsi/osd/osd_initiator.c:711:
+		unsigned inc;

WARNING:SPLIT_STRING: quoted string split across lines
#510: FILE: drivers/scsi/osd/osd_initiator.c:720:
+			OSD_ERR("BAD FOOD from target. list not valid!"
+				"c=%d r=%d n=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/scsi/osd/osd_initiator.c:745:
+int osd_req_add_get_attr_page(struct osd_request *or,
+	u32 page_id, void *attar_page, unsigned max_page_len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#535: FILE: drivers/scsi/osd/osd_initiator.c:745:
+	u32 page_id, void *attar_page, unsigned max_page_len,

WARNING:TYPO_SPELLING: 'embeded' may be misspelled - perhaps 'embedded'?
#606: FILE: drivers/scsi/osd/osd_initiator.c:903:
+		 * be reversed to keep them in execution order (for embeded
 		                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#636: FILE: drivers/scsi/osd/osd_initiator.c:991:
+osd_cdb_offset __osd_encode_offset(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#637: FILE: drivers/scsi/osd/osd_initiator.c:992:
+	u64 offset, unsigned *padding, int min_shift, int max_shift)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#653: FILE: drivers/scsi/osd/osd_initiator.c:1008:
+	BUG_ON(shift == max_shift);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/scsi/osd/osd_initiator.c:1021:
+	OSD_DEBUG("offset=%lld mantissa=%lld exp=%d encoded=%x pad=%d\n",
+		 offset, try_offset & 0x0FFFFFFF, shift, be32_offset, *padding);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#670: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#675: FILE: include/scsi/osd_attributes.h:1:
+#ifndef __OSD_ATTRIBUTES_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#788: FILE: include/scsi/osd_attributes.h:114:
+};
+/* Root_Information_attributes_page does not have a get_page structure */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#799: FILE: include/scsi/osd_attributes.h:125:
+};
+/* Partition Information attributes page does not have a get_page structure */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#810: FILE: include/scsi/osd_attributes.h:136:
+};
+/* Collection Information attributes page does not have a get_page structure */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#822: FILE: include/scsi/osd_attributes.h:148:
+};
+/* Object Information attributes page does not have a get_page structure */

CHECK:CAMELCASE: Avoid CamelCase: <Root_Quotas_attributes_page>
#833: FILE: include/scsi/osd_attributes.h:159:
+struct Root_Quotas_attributes_page {

CHECK:CAMELCASE: Avoid CamelCase: <Partition_Quotas_attributes_page>
#850: FILE: include/scsi/osd_attributes.h:176:
+struct Partition_Quotas_attributes_page {

CHECK:CAMELCASE: Avoid CamelCase: <Object_Quotas_attributes_page>
#863: FILE: include/scsi/osd_attributes.h:189:
+struct Object_Quotas_attributes_page {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#951: FILE: include/scsi/osd_attributes.h:277:
+	u8 master_key_identifier[32-25];
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#952: FILE: include/scsi/osd_attributes.h:278:
+	u8 root_key_identifier[39-32];
 	                         ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208461.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 33 warnings, 29 checks, 940 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208461.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
