WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#111: FILE: drivers/serial/Kconfig:1421:
+config SERIAL_BFIN_SPORT_CONSOLE
+	bool "Console on Blackfin sport emulated uart"
+	depends on SERIAL_BFIN_SPORT=y
+	select SERIAL_CORE_CONSOLE
 

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/serial/bfin_sport_uart.c:68:
+	pr_debug("%s value:%x, mask1=0x%x, mask2=0x%x\n", __func__, value,
+		up->txmask1, up->txmask2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/serial/bfin_sport_uart.c:96:
+	pr_debug("%s value:%x, cs=%d, mask=0x%x\n", __func__, value,
+		up->csize, up->rxmask);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#318: FILE: drivers/serial/bfin_sport_uart.c:138:
+	rclkdiv = sclk/(2 * baud_rate * 2) - 1;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: drivers/serial/bfin_sport_uart.c:143:
+	pr_debug("%s sclk:%d, baud_rate:%d, tclkdiv:%d, rclkdiv:%d\n",
+			__func__, sclk, baud_rate, tclkdiv, rclkdiv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: drivers/serial/bfin_sport_uart.c:218:
+	ret = request_irq(up->port.irq, sport_uart_rx_irq, 0,
+		"SPORT_UART_RX", up);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#421: FILE: drivers/serial/bfin_sport_uart.c:224:
+	ret = request_irq(up->port.irq+1, sport_uart_tx_irq, 0,
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/serial/bfin_sport_uart.c:225:
+	ret = request_irq(up->port.irq+1, sport_uart_tx_irq, 0,
+		"SPORT_UART_TX", up);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/serial/bfin_sport_uart.c:232:
+	ret = request_irq(up->err_irq, sport_uart_err_irq, 0,
+		"SPORT_UART_STATUS", up);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: drivers/serial/bfin_sport_uart.c:240:
+	free_irq(up->port.irq+1, up);
 	                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/serial/bfin_sport_uart.c:406:
+static void sport_set_termios(struct uart_port *port,
+		struct ktermios *termios, struct ktermios *old)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#567: FILE: drivers/serial/bfin_sport_uart.c:431:
+	if (termios->c_cflag & CSTOPB) {
+		up->stopb = 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#604: FILE: drivers/serial/bfin_sport_uart.c:468:
+		up->txmask1 |= (1<<i);
 		                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#605: FILE: drivers/serial/bfin_sport_uart.c:469:
+	up->txmask2 = (1<<i);
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#608: FILE: drivers/serial/bfin_sport_uart.c:472:
+		up->txmask2 |= (1<<i);
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#613: FILE: drivers/serial/bfin_sport_uart.c:477:
+	port->uartclk = uart_get_baud_rate(port, termios, old, 0, get_sclk()/16);
 	                                                                    ^

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#707: FILE: drivers/serial/bfin_sport_uart.c:578:
+		sport_uart_ports[i].port.fifosize  = SPORT_TX_FIFO_SIZE,
+		sport_uart_ports[i].port.ops       = &sport_uart_ops;

CHECK:BRACES: braces {} should be used on all arms of this statement
#763: FILE: drivers/serial/bfin_sport_uart.c:634:
+	if (SPORT_GET_TCR1(up) & TSPEN)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#765: FILE: drivers/serial/bfin_sport_uart.c:636:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#810: FILE: drivers/serial/bfin_sport_uart.c:681:
+	int ret = sport_uart_init_ports();
+	if (ret)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#824: FILE: drivers/serial/bfin_sport_uart.c:695:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#852: FILE: drivers/serial/bfin_sport_uart.c:733:
+static int __devinit sport_uart_probe(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#861: FILE: drivers/serial/bfin_sport_uart.c:743:
+static int __devexit sport_uart_remove(struct platform_device *dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/serial/bfin_sport_uart.c:779:
+		pr_err("failed to register %s:%d\n",
 				sport_uart_reg.driver_name, ret);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071782.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 18 checks, 856 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071782.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
