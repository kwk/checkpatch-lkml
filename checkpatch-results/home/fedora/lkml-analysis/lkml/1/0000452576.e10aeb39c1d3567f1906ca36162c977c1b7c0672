WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: drivers/block/loop.c:1401:
+	struct loop_device *lo;
+	list_for_each_entry(lo, &loop_devices, lo_list)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lo)...) over kzalloc(sizeof(struct loop_device)...)
#134: FILE: drivers/block/loop.c:1412:
+	lo = kzalloc(sizeof(struct loop_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lo"
#135: FILE: drivers/block/loop.c:1413:
+	if (lo == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lo->lo_queue"
#139: FILE: drivers/block/loop.c:1417:
+	if (lo->lo_queue == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#142: FILE: drivers/block/loop.c:1420:
+	disk = lo->lo_disk = alloc_disk(1);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disk"
#143: FILE: drivers/block/loop.c:1421:
+	if (disk == NULL)

WARNING:RETURN_VOID: void function return statements are not generally useful
#180: FILE: drivers/block/loop.c:1458:
+	return;
+}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#191: FILE: drivers/block/loop.c:1465:
+	if ((lo = loop_find_dev(number)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/block/loop.c:1479:
+^I                    THIS_MODULE, loop_probe, NULL, NULL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452576.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 2 warnings, 5 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452576.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
