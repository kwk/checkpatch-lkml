WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: arch/microblaze/lib/fastcopy.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#730: FILE: arch/microblaze/lib/memcpy.c:1:
+/*

WARNING:TYPO_SPELLING: 'unsuccesfully' may be misspelled - perhaps 'unsuccessfully'?
#740: FILE: arch/microblaze/lib/memcpy.c:11:
+ * Attempts were made, unsuccesfully, to contact the original
                        ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#781: FILE: arch/microblaze/lib/memcpy.c:52:
+	const uint32_t *i_src;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#782: FILE: arch/microblaze/lib/memcpy.c:53:
+	uint32_t *i_dst;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#785: FILE: arch/microblaze/lib/memcpy.c:56:
+		unsigned  value, buf_hold;

WARNING:TYPO_SPELLING: 'dstination' may be misspelled - perhaps 'destination'?
#787: FILE: arch/microblaze/lib/memcpy.c:58:
+		/* Align the dstination to a word boundry. */
 		             ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#787: FILE: arch/microblaze/lib/memcpy.c:58:
+		/* Align the dstination to a word boundry. */
 		                                  ^^^^^^^

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#788: FILE: arch/microblaze/lib/memcpy.c:59:
+		/* This is done in an endian independant manner. */
 		                             ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dstination' may be misspelled - perhaps 'destination'?
#804: FILE: arch/microblaze/lib/memcpy.c:75:
+		/* alignment relative to dstination. */
 		                         ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#816: FILE: arch/microblaze/lib/memcpy.c:87:
+			i_src = (const void *) ((unsigned)src & ~3);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#816: FILE: arch/microblaze/lib/memcpy.c:87:
+			i_src = (const void *) ((unsigned)src & ~3);

CHECK:SPACING: No space is necessary after a cast
#833: FILE: arch/microblaze/lib/memcpy.c:104:
+			i_src = (const void *) ((unsigned)src & ~3);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#833: FILE: arch/microblaze/lib/memcpy.c:104:
+			i_src = (const void *) ((unsigned)src & ~3);

CHECK:SPACING: No space is necessary after a cast
#850: FILE: arch/microblaze/lib/memcpy.c:121:
+			i_src = (const void *) ((unsigned)src & ~3);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#850: FILE: arch/microblaze/lib/memcpy.c:121:
+			i_src = (const void *) ((unsigned)src & ~3);

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#870: FILE: arch/microblaze/lib/memcpy.c:141:
+	/* simple fast copy, ... unless a cache boundry is crossed */
 	                                        ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#896: FILE: arch/microblaze/lib/memmove.c:1:
+/*

WARNING:TYPO_SPELLING: 'unsuccesfully' may be misspelled - perhaps 'unsuccessfully'?
#906: FILE: arch/microblaze/lib/memmove.c:11:
+ * Attempts were made, unsuccesfully, to contact the original
                        ^^^^^^^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#934: FILE: arch/microblaze/lib/memmove.c:39:
+	const uint32_t *i_src;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#935: FILE: arch/microblaze/lib/memmove.c:40:
+	uint32_t *i_dst;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#968: FILE: arch/microblaze/lib/memmove.c:73:
+		unsigned  value, buf_hold;

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#970: FILE: arch/microblaze/lib/memmove.c:75:
+		/* Align the destination to a word boundry. */
 		                                   ^^^^^^^

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#971: FILE: arch/microblaze/lib/memmove.c:76:
+		/* This is done in an endian independant manner. */
 		                             ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dstination' may be misspelled - perhaps 'destination'?
#987: FILE: arch/microblaze/lib/memmove.c:92:
+		/* alignment relative to dstination. */
 		                         ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1000: FILE: arch/microblaze/lib/memmove.c:105:
+			i_src = (const void *) (((unsigned)src + 4) & ~3);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1000: FILE: arch/microblaze/lib/memmove.c:105:
+			i_src = (const void *) (((unsigned)src + 4) & ~3);

CHECK:SPACING: No space is necessary after a cast
#1017: FILE: arch/microblaze/lib/memmove.c:122:
+			i_src = (const void *) (((unsigned)src + 4) & ~3);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1017: FILE: arch/microblaze/lib/memmove.c:122:
+			i_src = (const void *) (((unsigned)src + 4) & ~3);

CHECK:SPACING: No space is necessary after a cast
#1034: FILE: arch/microblaze/lib/memmove.c:139:
+			i_src = (const void *) (((unsigned)src + 4) & ~3);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1034: FILE: arch/microblaze/lib/memmove.c:139:
+			i_src = (const void *) (((unsigned)src + 4) & ~3);

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#1053: FILE: arch/microblaze/lib/memmove.c:158:
+	/* simple fast copy, ... unless a cache boundry is crossed */
 	                                        ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1076: FILE: arch/microblaze/lib/memset.c:1:
+/*

WARNING:TYPO_SPELLING: 'unsuccesfully' may be misspelled - perhaps 'unsuccessfully'?
#1086: FILE: arch/microblaze/lib/memset.c:11:
+ * Attempts were made, unsuccesfully, to contact the original
                        ^^^^^^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1110: FILE: arch/microblaze/lib/memset.c:35:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1113: FILE: arch/microblaze/lib/memset.c:38:
+	uint32_t *i_src;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1114: FILE: arch/microblaze/lib/memset.c:39:
+	uint32_t w32;

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#1127: FILE: arch/microblaze/lib/memset.c:52:
+		/* This is done in an endian independant manner */
 		                             ^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1128: FILE: arch/microblaze/lib/memset.c:53:
+		switch ((unsigned) src & 3) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1128: FILE: arch/microblaze/lib/memset.c:53:
+		switch ((unsigned) src & 3) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152803.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 14 checks, 1075 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152803.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
