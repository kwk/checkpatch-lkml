WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/x86/xen/enlighten.c:1330:
+       struct xen_hvm_param a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/x86/xen/enlighten.c:1332:
+       a.domid = DOMID_SELF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/x86/xen/enlighten.c:1333:
+       a.index = HVM_PARAM_CALLBACK_IRQ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/x86/xen/enlighten.c:1334:
+       a.value = via;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/x86/xen/enlighten.c:1335:
+       return HYPERVISOR_hvm_op(HVMOP_set_param, &a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/x86/xen/enlighten.c:1340:
+       xen_evtchn_do_upcall(get_irq_regs());$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#99: FILE: arch/x86/xen/enlighten.c:1346:
+	uint64_t callback_via;

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/x86/xen/enlighten.c:1360:
+ ^Ipv_time_ops = xen_time_ops;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: arch/x86/xen/enlighten.c:1360:
+ ^Ipv_time_ops = xen_time_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/x86/xen/enlighten.c:1360:
+ ^Ipv_time_ops = xen_time_ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: arch/x86/xen/enlighten.c:1361:
+ ^Ipv_apic_ops = xen_apic_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: arch/x86/xen/enlighten.c:1361:
+ ^Ipv_apic_ops = xen_apic_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/x86/xen/enlighten.c:1361:
+ ^Ipv_apic_ops = xen_apic_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/x86/xen/smp.c:291:
+       struct vcpu_guest_context *ctxt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/x86/xen/smp.c:292:
+       unsigned long start_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/x86/xen/smp.c:294:
+       if (cpumask_test_and_set_cpu(cpu, xen_cpu_initialized_map))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#160: FILE: arch/x86/xen/smp.c:294:
+       if (cpumask_test_and_set_cpu(cpu, xen_cpu_initialized_map))
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/x86/xen/smp.c:295:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/x86/xen/smp.c:295:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/x86/xen/smp.c:297:
+       ctxt = kzalloc(sizeof(*ctxt), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/x86/xen/smp.c:298:
+       if (ctxt == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#164: FILE: arch/x86/xen/smp.c:298:
+       if (ctxt == NULL)
+               return -ENOMEM;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctxt"
#164: FILE: arch/x86/xen/smp.c:298:
+       if (ctxt == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/x86/xen/smp.c:299:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/x86/xen/smp.c:299:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/x86/xen/smp.c:301:
+       early_gdt_descr.address = (unsigned long)get_cpu_gdt_table(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/x86/xen/smp.c:302:
+       initial_code = (unsigned long)cpu_bringup_and_idle;$

CHECK:SPACING: No space is necessary after a cast
#169: FILE: arch/x86/xen/smp.c:303:
+       stack_start.sp = (void *) idle->thread.sp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/x86/xen/smp.c:303:
+       stack_start.sp = (void *) idle->thread.sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/x86/xen/smp.c:306:
+       start_ip = setup_trampoline();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/x86/xen/smp.c:309:
+       ctxt->flags = VGCF_HVM_GUEST;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/x86/xen/smp.c:310:
+       ctxt->user_regs.eip = start_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/x86/xen/smp.c:312:
+       printk(KERN_INFO "Booting processor %d ip 0x%lx\n", cpu, start_ip);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#178: FILE: arch/x86/xen/smp.c:312:
+       printk(KERN_INFO "Booting processor %d ip 0x%lx\n", cpu, start_ip);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/x86/xen/smp.c:314:
+       if (HYPERVISOR_vcpu_op(VCPUOP_initialise, cpu, ctxt))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#180: FILE: arch/x86/xen/smp.c:314:
+       if (HYPERVISOR_vcpu_op(VCPUOP_initialise, cpu, ctxt))
+               BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/x86/xen/smp.c:315:
+               BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/x86/xen/smp.c:315:
+               BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#181: FILE: arch/x86/xen/smp.c:315:
+               BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/x86/xen/smp.c:317:
+       kfree(ctxt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: arch/x86/xen/smp.c:318:
+       return 0;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: arch/x86/xen/smp.c:352:
+		BUG();

CHECK:SPACING: No space is necessary after a cast
#225: FILE: arch/x86/xen/smp.c:538:
+	struct flush_tlb_args *args = (struct flush_tlb_args *) data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!args->mm"
#227: FILE: arch/x86/xen/smp.c:540:
+	if (args->mm == NULL ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/x86/xen/smp.c:541:
+	if (args->mm == NULL ||
+			args->mm == percpu_read(cpu_tlbstate.active_mm)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#236: FILE: arch/x86/xen/smp.c:549:
+		if (args->mm == NULL)
[...]
+		else if (tlbstate == TLBSTATE_OK) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!args->mm"
#236: FILE: arch/x86/xen/smp.c:549:
+		if (args->mm == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: arch/x86/xen/smp.c:564:
+                                     struct mm_struct *mm, unsigned long va)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/x86/xen/smp.c:564:
+                                     struct mm_struct *mm, unsigned long va)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: arch/x86/xen/smp.c:567:
+	struct flush_tlb_args data;
+	data.mm = mm;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/xen/events.c:1407:
+ ^Ixen_setup_pirqs();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: drivers/xen/events.c:1407:
+ ^Ixen_setup_pirqs();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/xen/events.c:1407:
+ ^Ixen_setup_pirqs();$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxE)
#370: FILE: include/xen/hvm.h:26:
+#define HVM_CALLBACK_VECTOR(x) (((uint64_t)HVM_CALLBACK_VIA_TYPE_VECTOR)<<\
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: include/xen/hvm.h:27:
+                               HVM_CALLBACK_VIA_TYPE_SHIFT | (x))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: include/xen/hvm.h:27:
+                               HVM_CALLBACK_VIA_TYPE_SHIFT | (x))$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 39 warnings, 9 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
