CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: arch/x86/kvm/x86.c:741:
+static inline unsigned long div_precise(unsigned long hi, unsigned long lo,
+	unsigned long divisor, unsigned long *rptr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#58: FILE: arch/x86/kvm/x86.c:744:
+	unsigned long quotient, remainder;
+	__asm__ ( "div %4"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#58: FILE: arch/x86/kvm/x86.c:744:
+	__asm__ ( "div %4"

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'multipler' may be misspelled - perhaps 'multiplier'?
#66: FILE: arch/x86/kvm/x86.c:752:
+ * compute the best multipler and shift pair m,s, such that for n,
                     ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: arch/x86/kvm/x86.c:756:
+static void compute_best_multiplier(unsigned long a, unsigned long b,
+	unsigned long *m, int *s)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: arch/x86/kvm/x86.c:785:
+static inline unsigned long mult_precise(unsigned long val, unsigned long mult,
+	int shift)

ERROR:SPACING: space prohibited after that open parenthesis '('
#103: FILE: arch/x86/kvm/x86.c:789:
+	__asm__ ( "mul %3; shrd %1, %0" :

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: arch/x86/kvm/x86.c:798:
+	u64 tsc = native_read_tsc() - per_cpu(cpu_tsc_measure_base, cpu);
+	tsc = mult_precise(tsc, per_cpu(cpu_tsc_multiplier, cpu),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: arch/x86/kvm/x86.c:799:
+	tsc = mult_precise(tsc, per_cpu(cpu_tsc_multiplier, cpu),
+				per_cpu(cpu_tsc_shift, cpu));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 34)
#155: FILE: arch/x86/kvm/x86.c:841:
+		while (!atomic_read(ready))
+			/* wait */;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 34)
#158: FILE: arch/x86/kvm/x86.c:844:
+		while (atomic_read(ready))
+			/* wait */;

WARNING:MEMORY_BARRIER: memory barrier without comment
#163: FILE: arch/x86/kvm/x86.c:849:
+		mb();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 42)
#167: FILE: arch/x86/kvm/x86.c:853:
+			while (atomic_read(ready))
+				/* wait */;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 42)
#174: FILE: arch/x86/kvm/x86.c:860:
+			while (!atomic_read(ready))
+				/* wait */;

WARNING:MEMORY_BARRIER: memory barrier without comment
#180: FILE: arch/x86/kvm/x86.c:866:
+			wmb();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 26)
#188: FILE: arch/x86/kvm/x86.c:874:
+	while (atomic_read(ready) != 1)
+		/* wait */;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#197: FILE: arch/x86/kvm/x86.c:883:
+	static s64 delta[SYNC_TRIES*2];
 	                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#200: FILE: arch/x86/kvm/x86.c:886:
+	BUG_ON(tsc_base_cpu == -1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE: line length of 168 exceeds 100 columns
#201: FILE: arch/x86/kvm/x86.c:887:
+	pr_debug("%s: IN, cpu = %d, freq = %ldkHz, tsc_base_cpu = %d\n", __func__, raw_smp_processor_id(), per_cpu(cpu_tsc_khz, raw_smp_processor_id()) , tsc_base_cpu);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#201: FILE: arch/x86/kvm/x86.c:887:
+	pr_debug("%s: IN, cpu = %d, freq = %ldkHz, tsc_base_cpu = %d\n", __func__, raw_smp_processor_id(), per_cpu(cpu_tsc_khz, raw_smp_processor_id()) , tsc_base_cpu);
 	                                                                                                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/x86/kvm/x86.c:893:
+		compute_best_multiplier(ref_tsc_khz,
+			per_cpu(cpu_tsc_khz, new_cpu),

WARNING:TYPO_SPELLING: 'arithmatic' may be misspelled - perhaps 'arithmetic'?
#224: FILE: arch/x86/kvm/x86.c:910:
+		 * Note the arithmatic must be signed because of the divide
 		            ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#230: FILE: arch/x86/kvm/x86.c:916:
+			accumulator -= delta[i+SYNC_TRIES];
 			                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#231: FILE: arch/x86/kvm/x86.c:917:
+		accumulator = accumulator / (SYNC_TRIES*2-12);
 		                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#231: FILE: arch/x86/kvm/x86.c:917:
+		accumulator = accumulator / (SYNC_TRIES*2-12);
 		                                         ^

WARNING:LONG_LINE: line length of 252 exceeds 100 columns
#233: FILE: arch/x86/kvm/x86.c:919:
+		pr_debug("%s: OUT, cpu = %d, cpu_tsc_offset = %lld, cpu_tsc_multiplier=%ld, cpu_tsc_shift=%d\n", __func__, raw_smp_processor_id(), per_cpu(cpu_tsc_offset, new_cpu), per_cpu(cpu_tsc_multiplier, new_cpu), per_cpu(cpu_tsc_shift, new_cpu));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 14 warnings, 9 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
