WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
The following changes since commit 94ad374a0751f40d25e22e036c37f7263569d24c:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '94ad374a0751f40d25e22e036c37f7263569d24c', maybe rebased or not pulled?
#33: 
The following changes since commit 94ad374a0751f40d25e22e036c37f7263569d24c:

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'expr' - possible side-effects?
#80: FILE: include/linux/compiler-gcc.h:79:
+#define cast_if_type(expr, oktype, desttype)	__builtin_choose_expr(	\
+	__builtin_types_compatible_p(typeof(1?(expr):(expr)), oktype),	\
+	(desttype)(expr), (expr))

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#81: FILE: include/linux/compiler-gcc.h:80:
+	__builtin_types_compatible_p(typeof(1?(expr):(expr)), oktype),	\
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#81: FILE: include/linux/compiler-gcc.h:80:
+	__builtin_types_compatible_p(typeof(1?(expr):(expr)), oktype),	\
 	                                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desttype' - possible side-effects?
#102: FILE: include/linux/kernel.h:490:
+#define __typesafe_cb(desttype, fn, ok1, ok2) \
+	cast_if_type(cast_if_type((fn), ok1, desttype), ok2, desttype)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rettype' - possible side-effects?
#118: FILE: include/linux/kernel.h:506:
+#define typesafe_cb(rettype, fn, arg)					\
+	__typesafe_cb(rettype (*)(void *), (fn),			\
+		      rettype (*)(const typeof(arg)),			\
+		      rettype (*)(typeof(arg)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: include/linux/kernel.h:507:
+	__typesafe_cb(rettype (*)(void *), (fn),			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: include/linux/kernel.h:508:
+		      rettype (*)(const typeof(arg)),			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: include/linux/kernel.h:509:
+		      rettype (*)(typeof(arg)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rettype' - possible side-effects?
#132: FILE: include/linux/kernel.h:520:
+#define typesafe_cb_preargs(rettype, fn, arg, ...)			\
+	__typesafe_cb(rettype (*)(__VA_ARGS__, void *), (fn),		\
+		      rettype (*)(__VA_ARGS__, const typeof(arg)),	\
+		      rettype (*)(__VA_ARGS__, typeof(arg)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: include/linux/kernel.h:521:
+	__typesafe_cb(rettype (*)(__VA_ARGS__, void *), (fn),		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: include/linux/kernel.h:522:
+		      rettype (*)(__VA_ARGS__, const typeof(arg)),	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: include/linux/kernel.h:523:
+		      rettype (*)(__VA_ARGS__, typeof(arg)))

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#160: FILE: include/linux/kthread.h:19:
+ * standalone thread for which noone will call kthread_stop(), or
                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#167: FILE: include/linux/kthread.h:26:
+#define kthread_create(threadfn, data, namefmt...)			\
+	__kthread_create(typesafe_cb(int,(threadfn),(data)), (data), namefmt)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: include/linux/kthread.h:27:
+	__kthread_create(typesafe_cb(int,(threadfn),(data)), (data), namefmt)
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: include/linux/kthread.h:27:
+	__kthread_create(typesafe_cb(int,(threadfn),(data)), (data), namefmt)
 	                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#197: FILE: include/linux/stop_machine.h:28:
+#define stop_machine(fn, data, cpus)					\
+	stop_machine_notype(typesafe_cb(int, (fn), (data)), (data), (cpus))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246924.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 8 checks, 189 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246924.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
