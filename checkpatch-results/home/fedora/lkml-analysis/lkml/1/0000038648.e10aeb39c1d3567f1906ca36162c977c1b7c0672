WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: drivers/gpu/drm/ttm/ttm_execbuf_util.c:1:
+/**************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: drivers/gpu/drm/ttm/ttm_execbuf_util.c:41:
+		struct ttm_buffer_object *bo = entry->bo;
+		if (!entry->reserved)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#134: FILE: drivers/gpu/drm/ttm/ttm_execbuf_util.c:75:
+			if (ret == -EAGAIN) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#139: FILE: drivers/gpu/drm/ttm/ttm_execbuf_util.c:80:
+			} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#183: FILE: include/drm/ttm/ttm_execbuf_util.h:1:
+/**************************************************************************

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/drm/ttm/ttm_execbuf_util.h:63:
+extern void ttm_eu_backoff_reservation(struct list_head *list);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: include/drm/ttm/ttm_execbuf_util.h:91:
+extern int ttm_eu_reserve_buffers(struct list_head *list, uint32_t val_seq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#287: FILE: include/drm/ttm/ttm_execbuf_util.h:105:
+extern void ttm_eu_fence_buffer_objects(struct list_head *list, void *sync_obj);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038648.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 5 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038648.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
