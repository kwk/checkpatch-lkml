ERROR:SPACING: exactly one space required after that #ifdef
#42: FILE: include/linux/memcontrol.h:57:
+#ifdef  CONFIG_CGROUP_BIO

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: include/linux/biocontrol.h:1:
+#include <linux/cgroup.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/biocontrol.h:26:
+extern void mm_init_bio_cgroup(struct mm_struct *, struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: include/linux/biocontrol.h:31:
+	struct bio_cgroup *biog = pc->bio_cgroup;
+	list_add(&pc->blist, &biog->page_list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#89: FILE: include/linux/biocontrol.h:38:
+	unsigned long flags;
+	spin_lock_irqsave(&biog->page_list_lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#103: FILE: include/linux/biocontrol.h:52:
+	unsigned long flags;
+	spin_lock_irqsave(&biog->page_list_lock, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: include/linux/biocontrol.h:68:
+static inline void set_bio_cgroup(struct page_cgroup *pc,
+					struct bio_cgroup *biog)

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: include/linux/biocontrol.h:76:
+	struct bio_cgroup *biog = pc->bio_cgroup;
+	pc->bio_cgroup = NULL;

WARNING:TYPO_SPELLING: 'sould' may be misspelled - perhaps 'could'?
#131: FILE: include/linux/biocontrol.h:80:
+/* This sould be called in an RCU-protected section. */
         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: include/linux/biocontrol.h:84:
+	struct bio_cgroup *biog = rcu_dereference(mm->bio_cgroup);
+	get_bio_cgroup(biog);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/linux/biocontrol.h:93:
+extern int get_bio_cgroup_id(struct page *page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: include/linux/biocontrol.h:101:
+        return 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: include/linux/biocontrol.h:101:
+        return 1;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: include/linux/biocontrol.h:125:
+static inline void set_bio_cgroup(struct page_cgroup *pc,
+					struct bio_cgroup *biog)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#254: FILE: mm/biocontrol.c:1:
+/* biocontrol.c - Block I/O Controller

WARNING:RETURN_VOID: void function return statements are not generally useful
#369: FILE: mm/biocontrol.c:116:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: mm/biocontrol.c:121:
+	struct bio_cgroup *biog = cgroup_bio(cgrp);
+	bio_cgroup_force_empty(biog);

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: mm/biocontrol.c:128:
+        spin_lock_irq(&bio_cgroup_idr_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: mm/biocontrol.c:128:
+        spin_lock_irq(&bio_cgroup_idr_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: mm/biocontrol.c:129:
+        idr_remove(&bio_cgroup_id, biog->id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: mm/biocontrol.c:129:
+        idr_remove(&bio_cgroup_id, biog->id);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: mm/biocontrol.c:130:
+        spin_unlock_irq(&bio_cgroup_idr_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: mm/biocontrol.c:130:
+        spin_unlock_irq(&bio_cgroup_idr_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: mm/biocontrol.c:138:
+        spin_lock_irq(&bio_cgroup_idr_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: mm/biocontrol.c:138:
+        spin_lock_irq(&bio_cgroup_idr_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: mm/biocontrol.c:140:
+        idr_find(&bio_cgroup_id, id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: mm/biocontrol.c:140:
+        idr_find(&bio_cgroup_id, id);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: mm/biocontrol.c:141:
+        spin_unlock_irq(&bio_cgroup_idr_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: mm/biocontrol.c:141:
+        spin_unlock_irq(&bio_cgroup_idr_lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: mm/biocontrol.c:150:
+	int	id = 0;
+	lock_page_cgroup(page);

CHECK:SPACING: No space is necessary after a cast
#416: FILE: mm/biocontrol.c:163:
+	return (u64) biog->id;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#419: FILE: mm/biocontrol.c:166:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: mm/biocontrol.c:182:
+static void bio_cgroup_move_task(struct cgroup_subsys *ss,
+				struct cgroup *cont,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#446: FILE: mm/biocontrol.c:193:
+	if (mm == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#469: FILE: mm/biocontrol.c:216:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: mm/biocontrol.c:218:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: mm/memcontrol.c:837:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: mm/memcontrol.c:837:
+  $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306319.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 20 warnings, 9 checks, 537 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306319.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
