ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#106: FILE: include/linux/init.h:80:
+#define __exitused  __used  notrace

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#113: FILE: include/linux/init.h:86:
+#define __devinit        __section(.devinit.text) __cold notrace

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#113: FILE: include/linux/init.h:86:
+#define __devinit        __section(.devinit.text) __cold notrace

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#114: FILE: include/linux/init.h:87:
 #define __devinitdata    __section(.devinit.data)

WARNING:HOTPLUG_SECTION: Using __devinitconst is unnecessary
#115: FILE: include/linux/init.h:88:
 #define __devinitconst   __section(.devinit.rodata)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#116: FILE: include/linux/init.h:89:
 #define __devexit        __section(.devexit.text) __exitused __cold

WARNING:HOTPLUG_SECTION: Using __devexitconst is unnecessary
#118: FILE: include/linux/init.h:91:
 #define __devexitconst   __section(.devexit.rodata)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#122: FILE: include/linux/init.h:94:
+#define __cpuinit        __section(.cpuinit.text) __cold notrace

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#131: FILE: include/linux/init.h:102:
+#define __meminit        __section(.meminit.text) __cold notrace

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#201: FILE: kernel/trace/ftrace.c:635:
+			pr_info("ftrace unkown error ");
 			                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#213: FILE: kernel/trace/ftrace.c:813:
 	for (i = 0; i < FTRACE_HASHSIZE; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 1 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
