WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/char/simple-gpio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#113: FILE: drivers/char/simple-gpio.c:32:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#114: FILE: drivers/char/simple-gpio.c:33:
+#include <asm/gpio.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#115: FILE: drivers/char/simple-gpio.c:34:
+#include <asm/uaccess.h>

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#119: FILE: drivers/char/simple-gpio.c:38:
+#define pr_devinit(fmt, args...) ({ static const __devinitdata char __fmt[] = fmt; printk(__fmt, ## args); })

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#119: FILE: drivers/char/simple-gpio.c:38:
+#define pr_devinit(fmt, args...) ({ static const __devinitdata char __fmt[] = fmt; printk(__fmt, ## args); })

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: drivers/char/simple-gpio.c:38:
+#define pr_devinit(fmt, args...) ({ static const __devinitdata char __fmt[] = fmt; printk(__fmt, ## args); })

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#119: FILE: drivers/char/simple-gpio.c:38:
+#define pr_devinit(fmt, args...) ({ static const __devinitdata char __fmt[] = fmt; printk(__fmt, ## args); })

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#120: FILE: drivers/char/simple-gpio.c:39:
+#define pr_init(fmt, args...) ({ static const __initdata char __fmt[] = fmt; printk(__fmt, ## args); })

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#120: FILE: drivers/char/simple-gpio.c:39:
+#define pr_init(fmt, args...) ({ static const __initdata char __fmt[] = fmt; printk(__fmt, ## args); })

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#120: FILE: drivers/char/simple-gpio.c:39:
+#define pr_init(fmt, args...) ({ static const __initdata char __fmt[] = fmt; printk(__fmt, ## args); })

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#128: FILE: drivers/char/simple-gpio.c:47:
+};
+struct group_data {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/char/simple-gpio.c:66:
+		char byte = '0' + gpio_get_value(gpio);
+		if (put_user(byte, buf + ret))

WARNING:TYPO_SPELLING: 'ouput' may be misspelled - perhaps 'output'?
#162: FILE: drivers/char/simple-gpio.c:81:
+ *	This will set GPIO8 to ouput mode and set the value to 1.
   	                       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#164: FILE: drivers/char/simple-gpio.c:83:
+static ssize_t simple_gpio_write(struct file *file, const char __user *buf, size_t count, loff_t *pos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: drivers/char/simple-gpio.c:96:
+		int user_ret = get_user(byte, buf + ret++);
+		if (user_ret)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#182: FILE: drivers/char/simple-gpio.c:101:
+		case '\n': continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#184: FILE: drivers/char/simple-gpio.c:103:
+		case 'O': dir = byte; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#187: FILE: drivers/char/simple-gpio.c:106:
+		case '1': uvalue = byte; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: drivers/char/simple-gpio.c:113:
+	case '?': value = gpio_get_value(gpio); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: drivers/char/simple-gpio.c:114:
+	case 'T': value = !gpio_get_value(gpio); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: drivers/char/simple-gpio.c:115:
+	default:  value = uvalue - '0'; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: drivers/char/simple-gpio.c:119:
+	case 'I': gpio_direction_input(gpio); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#201: FILE: drivers/char/simple-gpio.c:120:
+	case 'O': gpio_direction_output(gpio, value); break;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#268: FILE: drivers/char/simple-gpio.c:187:
+static struct file_operations simple_gpio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#282: FILE: drivers/char/simple-gpio.c:201:
+static int __devinit simple_gpio_probe(struct platform_device *pdev)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#317: FILE: drivers/char/simple-gpio.c:236:
+		device_create(simple_gpio_class, &pdev->dev, group_data->dev_node + gpio, "gpio%i", gpio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/char/simple-gpio.c:241:
+	pr_devinit(KERN_INFO PFX "now handling %i GPIOs: %i - %i\n",
+		gpio_max, gpio_range->start, gpio_range->end);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#332: FILE: drivers/char/simple-gpio.c:251:
+static int __devexit simple_gpio_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303254.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 18 warnings, 2 checks, 335 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303254.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
