WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#66: FILE: drivers/char/agp/agp.h:119:
+	void (*agp_destroy_page)(void *, int flags);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: drivers/char/agp/ali-agp.c:159:
+static void ali_destroy_page(void * addr, int flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#88: FILE: drivers/char/agp/ali-agp.c:159:
+static void ali_destroy_page(void * addr, int flags)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#94: FILE: drivers/char/agp/ali-agp.c:162:
+		if (flags & AGP_PAGE_DESTROY_UNMAP) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#98: FILE: drivers/char/agp/ali-agp.c:166:
+		} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: drivers/char/agp/ali-agp.c:171:
+static void m1541_destroy_page(void * addr, int flags)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#104: FILE: drivers/char/agp/ali-agp.c:171:
+static void m1541_destroy_page(void * addr, int flags)
  {

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#198: FILE: drivers/char/agp/generic.c:198:
+			curr->bridge->driver->agp_destroy_page(gart_to_virt(curr->memory[i]), AGP_PAGE_DESTROY_UNMAP);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#201: FILE: drivers/char/agp/generic.c:201:
+		for (i = 0; i < curr->page_count; i++) {
+			curr->bridge->driver->agp_destroy_page(gart_to_virt(curr->memory[i]), AGP_PAGE_DESTROY_FREE);
+		}

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#202: FILE: drivers/char/agp/generic.c:202:
+			curr->bridge->driver->agp_destroy_page(gart_to_virt(curr->memory[i]), AGP_PAGE_DESTROY_FREE);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#212: FILE: drivers/char/agp/generic.c:1182:
+void agp_generic_destroy_page(void *addr, int flags)
  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: drivers/char/agp/i460-agp.c:539:
+static void i460_destroy_page (void *page, int flags)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#244: FILE: drivers/char/agp/i460-agp.c:539:
+static void i460_destroy_page (void *page, int flags)
  {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370295.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 5 warnings, 2 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370295.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
