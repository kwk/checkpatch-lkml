WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#75: FILE: arch/x86/include/asm/atomic_32.h:271:
+long long cx8_atomic64_read_cx8call(long long, const atomic64_t *v);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#76: FILE: arch/x86/include/asm/atomic_32.h:272:
+long long cx8_atomic64_set_cx8call(long long, const atomic64_t *v);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#77: FILE: arch/x86/include/asm/atomic_32.h:273:
+long long cx8_atomic64_xchg_cx8call(long long, unsigned high);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#77: FILE: arch/x86/include/asm/atomic_32.h:273:
+long long cx8_atomic64_xchg_cx8call(long long, unsigned high);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#99: FILE: arch/x86/include/asm/atomic_32.h:295:
+				: "m" (v->counter), "b" ((unsigned)n), "c" ((unsigned)(n >> 32))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#99: FILE: arch/x86/include/asm/atomic_32.h:295:
+				: "m" (v->counter), "b" ((unsigned)n), "c" ((unsigned)(n >> 32))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: arch/x86/include/asm/atomic_32.h:311:
+	unsigned high = (unsigned)(n >> 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: arch/x86/include/asm/atomic_32.h:311:
+	unsigned high = (unsigned)(n >> 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: arch/x86/include/asm/atomic_32.h:312:
+	unsigned low = (unsigned)n;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: arch/x86/include/asm/atomic_32.h:312:
+	unsigned low = (unsigned)n;

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: arch/x86/include/asm/atomic_32.h:313:
+	unsigned low = (unsigned)n;
+	asm volatile("call cx8_atomic64_xchg_cx8call"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: arch/x86/include/asm/atomic_32.h:330:
+	unsigned high = (unsigned)(i >> 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: arch/x86/include/asm/atomic_32.h:330:
+	unsigned high = (unsigned)(i >> 32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: arch/x86/include/asm/atomic_32.h:331:
+	unsigned low = (unsigned)i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: arch/x86/include/asm/atomic_32.h:331:
+	unsigned low = (unsigned)i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: arch/x86/include/asm/atomic_32.h:332:
+	unsigned low = (unsigned)i;
+	asm volatile("call cx8_atomic64_set_cx8call"

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: arch/x86/include/asm/atomic_32.h:348:
+	long long r;
+	asm volatile("call cx8_atomic64_read_cx8call"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/x86/include/asm/atomic_32.h:353:
+ }$

WARNING:LINE_SPACING: Missing a blank line after declarations
#245: FILE: arch/x86/include/asm/atomic_32.h:378:
+	long long a;
+	asm volatile("call cx8_atomic64_inc_return_cx8call"

WARNING:LINE_SPACING: Missing a blank line after declarations
#263: FILE: arch/x86/include/asm/atomic_32.h:389:
+	long long a;
+	asm volatile("call cx8_atomic64_dec_return_cx8call"

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: arch/x86/include/asm/atomic_32.h:400:
+	unsigned low = (unsigned)a;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: arch/x86/include/asm/atomic_32.h:400:
+	unsigned low = (unsigned)a;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: arch/x86/include/asm/atomic_32.h:401:
+	unsigned high = (unsigned)(a >> 2);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: arch/x86/include/asm/atomic_32.h:401:
+	unsigned high = (unsigned)(a >> 2);

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: arch/x86/include/asm/atomic_32.h:402:
+	unsigned high = (unsigned)(a >> 2);
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#283: FILE: arch/x86/include/asm/atomic_32.h:402:
+	asm volatile(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#289: FILE: arch/x86/include/asm/atomic_32.h:408:
+			: "g" ((unsigned)u), "g" ((unsigned)(u >> 32))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#289: FILE: arch/x86/include/asm/atomic_32.h:408:
+			: "g" ((unsigned)u), "g" ((unsigned)(u >> 32))

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: arch/x86/include/asm/atomic_32.h:416:
+	long long r;
+	asm volatile("call cx8_atomic64_dec_if_positive_cx8call"

WARNING:LINE_SPACING: Missing a blank line after declarations
#326: FILE: arch/x86/include/asm/atomic_32.h:427:
+	int r;
+	asm volatile("call cx8_atomic64_inc_not_zero_cx8call"

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: arch/x86/include/asm/atomic_32.h:439:
+#define atomic64_inc_and_test(v) ^I(atomic64_inc_return(v) == 0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#373: FILE: arch/x86/lib/atomic64_32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#613: FILE: arch/x86/lib/atomic64_32.c:20:
+EXPORT_SYMBOL(cx8_atomic64_read_cx8call);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#615: FILE: arch/x86/lib/atomic64_32.c:22:
+EXPORT_SYMBOL(cx8_atomic64_xchg_cx8call);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#616: FILE: arch/x86/lib/atomic64_32.c:23:
+EXPORT_SYMBOL(cx8_atomic64_add_return);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#617: FILE: arch/x86/lib/atomic64_32.c:24:
+EXPORT_SYMBOL(cx8_atomic64_sub_return);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#618: FILE: arch/x86/lib/atomic64_32.c:25:
+EXPORT_SYMBOL(cx8_atomic64_add_unless);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#619: FILE: arch/x86/lib/atomic64_32.c:26:
+EXPORT_SYMBOL(cx8_atomic64_inc_return_cx8call);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#620: FILE: arch/x86/lib/atomic64_32.c:27:
+EXPORT_SYMBOL(cx8_atomic64_dec_return_cx8call);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#621: FILE: arch/x86/lib/atomic64_32.c:28:
+EXPORT_SYMBOL(cx8_atomic64_dec_if_positive_cx8call);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#622: FILE: arch/x86/lib/atomic64_32.c:29:
+EXPORT_SYMBOL(cx8_atomic64_inc_not_zero_cx8call);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#624: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#629: FILE: arch/x86/lib/atomic64_asm_32.S:1:
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'add'
#739: FILE: arch/x86/lib/atomic64_asm_32.S:111:
+addsub_return add add adc

WARNING:REPEATED_WORD: Possible repeated word: 'sub'
#740: FILE: arch/x86/lib/atomic64_asm_32.S:112:
+addsub_return sub sub sbb

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010837.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 44 warnings, 1 checks, 771 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010837.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
