CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: fs/mach-o/binfmt.c:190:
+	retval = kernel_read(bprm->file, arch_offset,
 			(void *)&data->header, sizeof(data->header));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: fs/mach-o/binfmt.c:265:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#219: FILE: fs/mach-o/binfmt.c:277:
+		macho_dbg("Mach-O file has more than 1MB worth of "
+				"load-commands (%lu bytes)\n", hdr_cmd_size);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#234: FILE: fs/mach-o/binfmt.c:288:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: fs/mach-o/binfmt.c:300:
+^I$

WARNING:SPLIT_STRING: quoted string split across lines
#276: FILE: fs/mach-o/binfmt.c:330:
+			macho_dbg("Mach-O header doesn't allocate enough "
+					"space for load-commands %lu-%lu!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#277: FILE: fs/mach-o/binfmt.c:331:
+					i, hdr_cmd_count-1);
 					                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: fs/mach-o/binfmt.c:338:
+		retval = kernel_read(bprm->file, cur_offset,
+				(void *)&data->loadcmd.hdr,

WARNING:SPLIT_STRING: quoted string split across lines
#290: FILE: fs/mach-o/binfmt.c:344:
+				macho_dbg("Error while reading Mach-O load"
+					" command %lu: %li\n", i, retval);

WARNING:SPLIT_STRING: quoted string split across lines
#294: FILE: fs/mach-o/binfmt.c:348:
+				macho_dbg("Truncated Mach-O load command "
+					"%lu: (got %lib, wanted %lub)\n", i,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: fs/mach-o/binfmt.c:359:
+^I^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: fs/mach-o/binfmt.c:365:
+			macho_dbg("Invalid size for load command %lu: %lu\n",
+				i, (unsigned long)data->loadcmd.hdr.size);

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: fs/mach-o/binfmt.c:373:
+			macho_dbg("Mach-O header doesn't allocate enough "
+					"space for load-commands %lu-%lu!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#320: FILE: fs/mach-o/binfmt.c:374:
+					i, hdr_cmd_count-1);
 					                ^

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: fs/mach-o/binfmt.c:382:
+			macho_dbg("Load command %lu is too big (%lu > %lu): "
+				"skipped!\n", i, size, sizeof(data->loadcmd));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: fs/mach-o/binfmt.c:390:
+		retval = kernel_read(bprm->file, cur_offset,
+				(void *)&data->loadcmd, size);

WARNING:SPLIT_STRING: quoted string split across lines
#341: FILE: fs/mach-o/binfmt.c:395:
+				macho_dbg("Error while reading Mach-O load"
+					" command %lu: %li\n", i, retval);

WARNING:SPLIT_STRING: quoted string split across lines
#345: FILE: fs/mach-o/binfmt.c:399:
+				macho_dbg("Truncated Mach-O load command "
+					"%lu: (got %lib, wanted %lub)\n", i,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#354: FILE: fs/mach-o/binfmt.c:408:
+		switch (data->loadcmd.hdr.cmd) {
+			case MACHO_LOADCMD_NUM_SEGMENT64:
+			case MACHO_LOADCMD_NUM_SEGMENT32:
+			case MACHO_LOADCMD_NUM_THREAD_NOSTACK:
+			case MACHO_LOADCMD_NUM_THREAD:
+			case MACHO_LOADCMD_NUM_REF_DYLD:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#468: FILE: fs/mach-o/cpus.h:211:
 };
+static const struct macho_cpu_subentry macho_cpu_x86_64_subtypes[] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#489: FILE: fs/mach-o/cpus.h:290:
+	_ENTRY(I386,	macho_cpu_i386_subtypes,	"Intel/AMD x86"	),

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#565: FILE: fs/mach-o/files.h:60:
+#define _ENTRY(type, num) MACHO_FILE_FLAG_##type = num

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#599: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#604: FILE: fs/mach-o/loadcmds.h:1:
+#ifndef  _MACHO_LOADCMDS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: exactly one space required after that #ifndef
#604: FILE: fs/mach-o/loadcmds.h:1:
+#ifndef  _MACHO_LOADCMDS_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#614: FILE: fs/mach-o/loadcmds.h:11:
+# define _ENTRY(type, num) \
+	MACHO_LOADCMD_NUM_##type = ((__force macho_loadcmd_num_t)num)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#650: FILE: fs/mach-o/loadcmds.h:47:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#655: FILE: fs/mach-o/loadcmds.h:52:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#661: FILE: fs/mach-o/loadcmds.h:58:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#675: FILE: fs/mach-o/loadcmds.h:72:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#684: FILE: fs/mach-o/loadcmds.h:81:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#691: FILE: fs/mach-o/loadcmds.h:88:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#699: FILE: fs/mach-o/loadcmds.h:96:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#708: FILE: fs/mach-o/loadcmds.h:105:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#714: FILE: fs/mach-o/loadcmds.h:111:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#722: FILE: fs/mach-o/loadcmds.h:119:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#728: FILE: fs/mach-o/loadcmds.h:125:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#751: FILE: fs/mach-o/loadcmds.h:148:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#761: FILE: fs/mach-o/loadcmds.h:158:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#768: FILE: fs/mach-o/loadcmds.h:165:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#777: FILE: fs/mach-o/loadcmds.h:174:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#785: FILE: fs/mach-o/loadcmds.h:182:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#792: FILE: fs/mach-o/loadcmds.h:189:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#799: FILE: fs/mach-o/loadcmds.h:196:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#806: FILE: fs/mach-o/loadcmds.h:203:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#813: FILE: fs/mach-o/loadcmds.h:210:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#820: FILE: fs/mach-o/loadcmds.h:217:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#826: FILE: fs/mach-o/loadcmds.h:223:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#840: FILE: fs/mach-o/loadcmds.h:237:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#848: FILE: fs/mach-o/loadcmds.h:245:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#854: FILE: fs/mach-o/loadcmds.h:251:
+} __attribute__((__packed__));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#882: FILE: fs/mach-o/loadcmds.h:279:
+} __attribute__((__packed__));

WARNING:TYPO_SPELLING: 'Inernal' may be misspelled - perhaps 'Internal'?
#884: FILE: fs/mach-o/loadcmds.h:281:
+/* Inernal function to check and return a load-command string */
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#885: FILE: fs/mach-o/loadcmds.h:282:
+static inline const __u8 *macho_loadcmd_varstr_get__(

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'LOADCMD' - possible side-effects?
#925: FILE: fs/mach-o/loadcmds.h:322:
+#define macho_loadcmd_varstr_get(LOADCMD, VARSTR) \
+	(macho_loadcmd_varstr_get__(&((LOADCMD)->hdr), \
+			&((LOADCMD)->VARSTR), (LOADCMD)->data))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'VARSTR' may be better as '(VARSTR)' to avoid precedence issues
#925: FILE: fs/mach-o/loadcmds.h:322:
+#define macho_loadcmd_varstr_get(LOADCMD, VARSTR) \
+	(macho_loadcmd_varstr_get__(&((LOADCMD)->hdr), \
+			&((LOADCMD)->VARSTR), (LOADCMD)->data))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000450709.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 38 warnings, 10 checks, 869 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000450709.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
