WARNING:TYPO_SPELLING: 'alltogether' may be misspelled - perhaps 'altogether'?
#30: 
Eventually mlocked pages will be taken off the LRUs alltogether.
                                                    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: mm/memory.c:2294:
+                        lru_cache_add_active_anon(page);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: mm/memory.c:2294:
+                        lru_cache_add_active_anon(page);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: mm/page_alloc.c:1907:
+	printk("Active_anon:%lu active_file:%lu inactive_anon%lu\n"

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: mm/page_alloc.c:1936:
 			" high:%lukB"
+			" active_anon:%lukB"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: mm/page_alloc.c:1937:
+			" active_anon:%lukB"
+			" inactive_anon:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: mm/page_alloc.c:1938:
+			" inactive_anon:%lukB"
+			" active_file:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: mm/page_alloc.c:1939:
+			" active_file:%lukB"
+			" inactive_file:%lukB"

WARNING:LINE_SPACING: Missing a blank line after declarations
#394: FILE: mm/swap.c:139:
+			int lru = page_file_cache(page);
+			list_move_tail(&page->lru, &zone->list[lru]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: mm/swap.c:194:
+		int lru = LRU_BASE;
+		lru += page_file_cache(page);

WARNING:SPLIT_STRING: quoted string split across lines
#476: FILE: mm/vmstat.c:755:
 		   "\n        high     %lu"
+		   "\n        scanned  %lu (aa: %lu ia: %lu af: %lu if: %lu)"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: mm/vmscan.c:905:
+		__mod_zone_page_state(zone, NR_ACTIVE_FILE,
+						-count[LRU_ACTIVE_FILE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: mm/vmscan.c:907:
+		__mod_zone_page_state(zone, NR_INACTIVE_FILE,
+						-count[LRU_INACTIVE_FILE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: mm/vmscan.c:909:
+		__mod_zone_page_state(zone, NR_ACTIVE_ANON,
+						-count[LRU_ACTIVE_ANON]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: mm/vmscan.c:911:
+		__mod_zone_page_state(zone, NR_INACTIVE_ANON,
+						-count[LRU_INACTIVE_ANON]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: mm/vmscan.c:1087:
+			__mod_zone_page_state(zone, NR_INACTIVE_ANON + lru,
+								pgmoved);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#994: FILE: mm/vmscan.c:1119:
+			__mod_zone_page_state(zone, NR_INACTIVE_ANON + lru,
+								pgmoved);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1004: FILE: mm/vmscan.c:1129:
+	if (file) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1018: FILE: mm/vmscan.c:1145:
+static unsigned long shrink_list(enum lru_list lru, unsigned long nr_to_scan,
 	struct zone *zone, struct scan_control *sc, int priority)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1042: FILE: mm/vmscan.c:1166:
+static void get_scan_ratio(struct zone *zone, struct scan_control * sc,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: mm/vmscan.c:1167:
+static void get_scan_ratio(struct zone *zone, struct scan_control * sc,
+					unsigned long *percent)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1095: FILE: mm/vmscan.c:1219:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: mm/vmscan.c:1255:
+			nr[l] = mem_cgroup_calc_reclaim(sc->mem_cgroup, zone,
+								priority, l);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: mm/vmscan.c:1260:
+	while (nr[LRU_ACTIVE_ANON] || nr[LRU_INACTIVE_ANON] ||
+				nr[LRU_ACTIVE_FILE] || nr[LRU_INACTIVE_FILE]) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1227: FILE: mm/vmscan.c:1804:
+			if (pass == 0 &&
+				(l == LRU_ACTIVE_ANON || l == LRU_ACTIVE_FILE))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1518: FILE: include/linux/pagevec.h:104:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1541: FILE: include/linux/vmstat.h:152:
+extern unsigned long global_lru_pages(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1618: FILE: include/linux/swap.h:212:
+extern int __isolate_lru_page(struct page *page, int mode, int file);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1778: FILE: mm/memcontrol.c:865:
+		inactive_anon = mem_cgroup_get_all_zonestat(mem_cont,
+						LRU_INACTIVE_ANON);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1780: FILE: mm/memcontrol.c:867:
+		active_anon = mem_cgroup_get_all_zonestat(mem_cont,
+						LRU_ACTIVE_ANON);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1782: FILE: mm/memcontrol.c:869:
+		inactive_file = mem_cgroup_get_all_zonestat(mem_cont,
+						LRU_INACTIVE_FILE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1784: FILE: mm/memcontrol.c:871:
+		active_file = mem_cgroup_get_all_zonestat(mem_cont,
+						LRU_ACTIVE_FILE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000311455.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 11 warnings, 19 checks, 1574 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000311455.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
