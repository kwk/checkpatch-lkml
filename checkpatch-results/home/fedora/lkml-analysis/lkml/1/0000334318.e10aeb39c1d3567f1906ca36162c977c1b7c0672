CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: drivers/usb/core/hub.c:1277:
+					otg_set_error(xceiv,
+						OTG_ERR_DEVICE_NOT_RESPONDING);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#101: FILE: drivers/usb/core/hub.c:1326:
+	unsigned tpl_enabled = 0;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#162: FILE: drivers/usb/core/otg.c:61:
+static struct usb_device_id whitelist_table [] __initdata = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#205: FILE: drivers/usb/core/otg.c:125:
+				le16_to_cpu(otg->id.idVendor),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#206: FILE: drivers/usb/core/otg.c:126:
+				le16_to_cpu(otg->id.idProduct),

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#207: FILE: drivers/usb/core/otg.c:127:
+				otg->id.bDeviceClass,

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceSubClass>
#208: FILE: drivers/usb/core/otg.c:128:
+				otg->id.bDeviceSubClass,

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceProtocol>
#209: FILE: drivers/usb/core/otg.c:129:
+				otg->id.bDeviceProtocol);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#302: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#373: FILE: drivers/usb/core/sysfs.c:125:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s)
#382: FILE: drivers/usb/core/sysfs.c:134:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/usb/core/sysfs.c:139:
+otg_whitelist_status_store(struct device *dev, struct device_attribute *attr,
+				const char *buf, size_t n)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#392: FILE: drivers/usb/core/sysfs.c:144:
+	sscanf(buf, "%d", &enable);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#392: FILE: drivers/usb/core/sysfs.c:144:
+	sscanf(buf, "%d", &enable);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/usb/core/sysfs.c:158:
+otg_whitelist_status_show(struct device *dev, struct device_attribute *attr,
+				char *buf)

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#421: FILE: drivers/usb/core/sysfs.c:173:
+}

The DEVICE_ATTR_RW(name) helper macro can be used instead of
DEVICE_ATTR(name, 0644, name_show, name_store);

Note that the macro automatically appends _show and _store to the
named attribute variable of the device for the show and store methods.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#523: FILE: include/linux/usb/otg.h:102:
+extern void otg_set_error(struct otg_transceiver *otg, enum usb_otg_error);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: include/linux/usb/otg.h:146:
+extern int otg_targeted(struct usb_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#535: FILE: include/linux/usb/otg.h:147:
+extern ssize_t otg_print_whitelist(char *buf);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334318.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 11 checks, 431 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334318.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
