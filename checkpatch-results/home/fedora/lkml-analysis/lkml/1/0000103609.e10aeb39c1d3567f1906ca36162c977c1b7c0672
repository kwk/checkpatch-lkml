WARNING:TYPO_SPELLING: 'writen' may be misspelled - perhaps 'written'?
#40: 
was originally writen by DFS.
               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: kernel/lockdep.c:967:
+static inline int __bfs_forwards(struct lock_list *src_entry,
 			void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: kernel/lockdep.c:976:
+static inline int __bfs_backwards(struct lock_list *src_entry,
 			void *data,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: kernel/lockdep.c:1174:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ret' - possible side-effects?
#105: FILE: kernel/lockdep.c:1175:
+#define   BFS_PROCESS_RET(ret)	do { \
+					if (ret < 0) \
+						return print_bfs_bug(ret); \
+					if (ret == 1) \
+						return 1; \
+				} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ret' may be better as '(ret)' to avoid precedence issues
#105: FILE: kernel/lockdep.c:1175:
+#define   BFS_PROCESS_RET(ret)	do { \
+					if (ret < 0) \
+						return print_bfs_bug(ret); \
+					if (ret == 1) \
+						return 1; \
+				} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#105: FILE: kernel/lockdep.c:1175:
+#define   BFS_PROCESS_RET(ret)	do { \
+					if (ret < 0) \
+						return print_bfs_bug(ret); \
+					if (ret == 1) \
+						return 1; \
+				} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#117: FILE: kernel/lockdep.c:1187:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: kernel/lockdep.c:1201:
+find_usage_forwards(struct lock_list *root, enum lock_usage_bit bit,
+			struct lock_list **target_entry)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: kernel/lockdep.c:1224:
+find_usage_backwards(struct lock_list *root, enum lock_usage_bit bit,
+			struct lock_list **target_entry)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: kernel/lockdep.c:1235:
 
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'target_entry' should also have an identifier name
#243: FILE: kernel/lockdep.c:1304:
+	struct lock_list *uninitialized_var(target_entry);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'target_entry' should also have an identifier name
#276: FILE: kernel/lockdep.c:1993:
+	struct lock_list *uninitialized_var(target_entry);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'target_entry' should also have an identifier name
#299: FILE: kernel/lockdep.c:2014:
+	struct lock_list *uninitialized_var(target_entry);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000103609.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 9 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000103609.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
