WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#38: 
the hardware. This is realized by switching between events at an user
                                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
The following changes since commit 8045a4c293d36c61656a20d581b11f7f0cd7acd5:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '8045a4c293d36c61656a20d581b11f7f0cd7acd5', maybe rebased or not pulled?
#62: 
The following changes since commit 8045a4c293d36c61656a20d581b11f7f0cd7acd5:

WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#131: FILE: arch/Kconfig:41:
+	  between events at an user specified time interval.
 	                    ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: arch/x86/oprofile/nmi_int.c:98:
+	struct op_msrs const *msrs = &__get_cpu_var(cpu_msrs);
+	model->start(msrs);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: arch/x86/oprofile/nmi_int.c:110:
+	struct op_msrs const *msrs = &__get_cpu_var(cpu_msrs);
+	model->stop(msrs);

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: arch/x86/oprofile/nmi_int.c:197:
+		int virt = op_x86_phys_to_virt(i);
+		if (multiplex[virt].addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: arch/x86/oprofile/nmi_int.c:209:
+		int virt = op_x86_phys_to_virt(i);
+		if (multiplex[virt].addr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'si > model->num_virt_counters'
#311: FILE: arch/x86/oprofile/nmi_int.c:225:
+	if ((si > model->num_virt_counters) || (counter_config[si].count == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[si].count == 0'
#311: FILE: arch/x86/oprofile/nmi_int.c:225:
+	if ((si > model->num_virt_counters) || (counter_config[si].count == 0))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: arch/x86/oprofile/nmi_int.c:236:
 
+

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#336: FILE: arch/x86/oprofile/nmi_int.c:250:
+		return -ENOSYS;		/* not implemented */

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: arch/x86/oprofile/op_model_amd.c:85:
+		int hw_counter = op_x86_virt_to_phys(i);
+		if (reserve_perfctr_nmi(MSR_K7_PERFCTR0 + i))

WARNING:LINE_SPACING: Missing a blank line after declarations
#675: FILE: arch/x86/oprofile/op_model_amd.c:101:
+		int virt = op_x86_phys_to_virt(i);
+		if (!counter_config[virt].enabled)

WARNING:LINE_SPACING: Missing a blank line after declarations
#736: FILE: arch/x86/oprofile/op_model_amd.c:172:
+		int virt = op_x86_phys_to_virt(i);
+		if (!counter_config[virt].enabled)

WARNING:LINE_SPACING: Missing a blank line after declarations
#760: FILE: arch/x86/oprofile/op_model_amd.c:297:
+		int virt = op_x86_phys_to_virt(i);
+		if (!reset_value[virt])

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#975: FILE: arch/x86/oprofile/op_x86_model.h:62:
+extern int op_x86_phys_to_virt(int phys);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#976: FILE: arch/x86/oprofile/op_x86_model.h:63:
+extern int op_x86_virt_to_phys(int virt);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1061: FILE: drivers/oprofile/oprof.c:147:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: drivers/oprofile/oprofile_files.c:31:
+static ssize_t timeout_read(struct file *file, char __user *buf,
+		size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1151: FILE: drivers/oprofile/oprofile_files.c:37:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1153: FILE: drivers/oprofile/oprofile_files.c:39:
+static ssize_t timeout_write(struct file *file, char const __user *buf,
+		size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1172: FILE: drivers/oprofile/oprofile_files.c:58:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1219: FILE: drivers/oprofile/oprofile_stats.c:82:
+	oprofilefs_create_ro_atomic(sb, dir, "multiplex_counter",
+		&oprofile_stats.multiplex_counter);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091532.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 11 checks, 1027 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091532.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
