CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#56: FILE: arch/x86/kernel/i8259_64.c:485:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+0, invalidate_interrupt0);
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#57: FILE: arch/x86/kernel/i8259_64.c:486:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+1, invalidate_interrupt1);
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#58: FILE: arch/x86/kernel/i8259_64.c:487:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+2, invalidate_interrupt2);
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#59: FILE: arch/x86/kernel/i8259_64.c:488:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+3, invalidate_interrupt3);
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#60: FILE: arch/x86/kernel/i8259_64.c:489:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+4, invalidate_interrupt4);
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#61: FILE: arch/x86/kernel/i8259_64.c:490:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+5, invalidate_interrupt5);
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: arch/x86/kernel/i8259_64.c:491:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+6, invalidate_interrupt6);
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#63: FILE: arch/x86/kernel/i8259_64.c:492:
+	alloc_intr_gate(INVALIDATE_TLB_VECTOR_START+7, invalidate_interrupt7);
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#99: FILE: arch/x86/kernel/io_apic_64.c:87:
+char system_vectors[NR_VECTORS] = { [0 ... NR_VECTORS-1] = SYS_VECTOR_FREE};
                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: arch/x86/kernel/io_apic_32.c:78:
+char system_vectors[NR_VECTORS] = { [0 ... NR_VECTORS-1] = SYS_VECTOR_FREE};
                                                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#261: FILE: include/asm-x86/desc.h:322:
+	if (system_vectors[vector] == SYS_VECTOR_FREE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#265: FILE: include/asm-x86/desc.h:326:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: include/asm-x86/desc.h:327:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000295170.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 12 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000295170.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
