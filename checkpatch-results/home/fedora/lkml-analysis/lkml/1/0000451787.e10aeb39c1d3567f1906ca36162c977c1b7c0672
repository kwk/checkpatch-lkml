CHECK:SPACING: No space is necessary after a cast
#70: FILE: fs/proc/base.c:1303:
+					 (long long) file->f_pos,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#121: FILE: fs/proc/base.c:1436:
+static int proc_readfd_common(struct file * filp, void * dirent,
                                             ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: fs/proc/base.c:1436:
+static int proc_readfd_common(struct file * filp, void * dirent,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: fs/proc/base.c:1436:
+static int proc_readfd_common(struct file * filp, void * dirent,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#139: FILE: fs/proc/base.c:1481:
+				if (proc_fill_cache(filp, dirent, filldir,
 				                    ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#150: FILE: fs/proc/base.c:1499:
+				    struct nameidata *nd)
 				                      ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#155: FILE: fs/proc/base.c:1504:
+static int proc_readfd(struct file *filp, void *dirent, filldir_t filldir)
                                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#157: FILE: fs/proc/base.c:1506:
+	return proc_readfd_common(filp, dirent, filldir, proc_fd_instantiate);
 	                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: fs/proc/base.c:1510:
+static ssize_t proc_fdinfo_read(struct file *file, char __user *buf,
+				      size_t len, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: fs/proc/base.c:1514:
+	int err = proc_fd_info(file->f_path.dentry->d_inode, NULL, NULL, tmp);
+	if (!err)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: fs/proc/base.c:1556:
+static struct dentry *proc_fdinfo_instantiate(struct inode *dir,
+	struct dentry *dentry, struct task_struct *task, const void *ptr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#185: FILE: fs/proc/base.c:1558:
+	unsigned fd = *(unsigned *)ptr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#185: FILE: fs/proc/base.c:1558:
+	unsigned fd = *(unsigned *)ptr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/proc/base.c:1559:
+ ^Istruct inode *inode;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: fs/proc/base.c:1559:
+ ^Istruct inode *inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/proc/base.c:1559:
+ ^Istruct inode *inode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: fs/proc/base.c:1560:
+ ^Istruct proc_inode *ei;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: fs/proc/base.c:1560:
+ ^Istruct proc_inode *ei;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: fs/proc/base.c:1560:
+ ^Istruct proc_inode *ei;$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#195: FILE: fs/proc/base.c:1568:
+	inode->i_mode = S_IFREG | S_IRUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#209: FILE: fs/proc/base.c:1582:
+					struct nameidata *nd)
 					                  ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#214: FILE: fs/proc/base.c:1587:
+static int proc_readfdinfo(struct file *filp, void *dirent, filldir_t filldir)
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#216: FILE: fs/proc/base.c:1589:
+	return proc_readfd_common(filp, dirent, filldir,
 	                          ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: fs/proc/base.c:1606:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#241: FILE: fs/proc/base.c:2017:
+	DIR("fdinfo",     S_IRUSR|S_IXUSR, fdinfo),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IXUSR' are not preferred. Consider using octal permissions '0500'.
#241: FILE: fs/proc/base.c:2017:
+	DIR("fdinfo",     S_IRUSR|S_IXUSR, fdinfo),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#258: FILE: fs/proc/base.c:2301:
+	DIR("fdinfo",    S_IRUSR|S_IXUSR, fdinfo),
 	                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IXUSR' are not preferred. Consider using octal permissions '0500'.
#258: FILE: fs/proc/base.c:2301:
+	DIR("fdinfo",    S_IRUSR|S_IXUSR, fdinfo),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000451787.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 18 warnings, 6 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000451787.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
