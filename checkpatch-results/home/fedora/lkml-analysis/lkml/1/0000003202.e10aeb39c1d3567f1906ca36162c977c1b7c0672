CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!domain"
#71: FILE: kernel/async.c:93:
+	if (domain == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: kernel/async.c:129:
+		printk("calling  %lli_%pF @ %i\n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#113: FILE: kernel/async.c:129:
+		printk("calling  %lli_%pF @ %i\n",
+		       (long long)cookie,
+		       func,
+		       task_pid_nr(current));

WARNING:LINE_SPACING: Missing a blank line after declarations
#125: FILE: kernel/async.c:141:
+		ktime_t delta = ktime_sub(rettime, calltime);
+		printk("initcall %lli_%pF returned 0 after %lld usecs\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: kernel/async.c:141:
+		printk("initcall %lli_%pF returned 0 after %lld usecs\n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#125: FILE: kernel/async.c:141:
+		printk("initcall %lli_%pF returned 0 after %lld usecs\n",
+			(long long)cookie,
+			func,
+			(long long)ktime_to_ns(delta) >> 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: kernel/async.c:142:
+		printk("initcall %lli_%pF returned 0 after %lld usecs\n",
+			(long long)cookie,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*entry)...) over kmalloc(sizeof(struct async_entry)...)
#203: FILE: kernel/async.c:196:
+		entry = kmalloc(sizeof(struct async_entry), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: kernel/async.c:224:
+		printk("async_queuing %lli_%pF \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#236: FILE: kernel/async.c:224:
+		printk("async_queuing %lli_%pF \n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#236: FILE: kernel/async.c:224:
+		printk("async_queuing %lli_%pF \n",
+		       (long long)newcookie,
+		       ptr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#326: FILE: kernel/async.c:307:
+		printk("async_waiting @ %i for %lli\n", task_pid_nr(current), cookie);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003202.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 3 checks, 302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003202.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
