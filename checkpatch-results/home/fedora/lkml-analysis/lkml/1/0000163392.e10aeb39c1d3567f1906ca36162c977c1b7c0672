CHECK:CAMELCASE: Avoid CamelCase: <min_uV>
#78: FILE: drivers/regulator/core.c:731:
+		int	cmin = constraints->min_uV ? : INT_MIN;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <max_uV>
#79: FILE: drivers/regulator/core.c:732:
+		int	cmax = constraints->max_uV ? : INT_MAX;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: drivers/regulator/core.c:752:
+			pr_err("%s: bad '%s' voltage constraints\n",
+				       __func__, name);

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#122: FILE: drivers/regulator/core.c:1294:
+	struct regulator_ops	*ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: drivers/regulator/core.c:1320:
+int regulator_list_voltage(struct regulator *regulator, unsigned index)

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#151: FILE: drivers/regulator/core.c:1323:
+	struct regulator_ops	*ops;

CHECK:BRACES: braces {} should be used on all arms of this statement
#160: FILE: drivers/regulator/core.c:1332:
+	if (ret == 0)
[...]
+	else if (ret > 0) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: include/linux/regulator/consumer.h:144:
+int regulator_list_voltage(struct regulator *regulator, unsigned index);

WARNING:SPACING: Unnecessary space before function pointer arguments
#217: FILE: include/linux/regulator/driver.h:72:
+	int (*count_voltages) (struct regulator_dev *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#217: FILE: include/linux/regulator/driver.h:72:
+	int (*count_voltages) (struct regulator_dev *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#218: FILE: include/linux/regulator/driver.h:73:
+	int (*list_voltage) (struct regulator_dev *, unsigned index);

WARNING:SPACING: Unnecessary space before function pointer arguments
#218: FILE: include/linux/regulator/driver.h:73:
+	int (*list_voltage) (struct regulator_dev *, unsigned index);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#218: FILE: include/linux/regulator/driver.h:73:
+	int (*list_voltage) (struct regulator_dev *, unsigned index);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163392.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 4 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163392.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
