WARNING:TYPO_SPELLING: 'occurance' may be misspelled - perhaps 'occurrence'?
#38: 
does not display the rescheduling interrupt, the occurance
                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#167: FILE: arch/i386/kernel/irq.c:310:
+			seq_printf(p, "  Non-maskable interrupts");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#176: FILE: arch/i386/kernel/irq.c:319:
+			seq_printf(p, "  Local interrupts");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#185: FILE: arch/i386/kernel/irq.c:325:
+			seq_printf(p, "RES: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: arch/i386/kernel/irq.c:328:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_resched_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#189: FILE: arch/i386/kernel/irq.c:329:
+			seq_printf(p, "  Rescheduling interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#196: FILE: arch/i386/kernel/irq.c:336:
+			seq_printf(p, "CAL: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: arch/i386/kernel/irq.c:339:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_call_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#200: FILE: arch/i386/kernel/irq.c:340:
+			seq_printf(p, "  function call interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#207: FILE: arch/i386/kernel/irq.c:347:
+			seq_printf(p, "TLB: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: arch/i386/kernel/irq.c:350:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_tlb_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#211: FILE: arch/i386/kernel/irq.c:351:
+			seq_printf(p, "  TLB shootdowns\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#217: FILE: arch/i386/kernel/irq.c:357:
+			seq_printf(p, "TRM: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: arch/i386/kernel/irq.c:360:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_thermal_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#221: FILE: arch/i386/kernel/irq.c:361:
+			seq_printf(p, "  Thermal event interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#226: FILE: arch/i386/kernel/irq.c:366:
+			seq_printf(p, "SPU: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: arch/i386/kernel/irq.c:369:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_spur_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#230: FILE: arch/i386/kernel/irq.c:370:
+			seq_printf(p, "  Spurious interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#234: FILE: arch/i386/kernel/irq.c:374:
+		seq_printf(p, "ERR: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: arch/i386/kernel/irq.c:378:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_err_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#239: FILE: arch/i386/kernel/irq.c:379:
+			seq_printf(p, "  Error interrupts\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: arch/i386/kernel/irq.c:381:
+			unsigned count = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: arch/i386/kernel/irq.c:382:
+			unsigned count = 0;
+			for_each_online_cpu(j)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#248: FILE: arch/i386/kernel/irq.c:388:
+		seq_printf(p, "MIS: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: arch/i386/kernel/irq.c:392:
+				seq_printf(p, "%10u ",
+					atomic_read(&per_cpu(irq_mis_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#253: FILE: arch/i386/kernel/irq.c:393:
+			seq_printf(p, "  APIC mismatch fixups\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#255: FILE: arch/i386/kernel/irq.c:395:
+			unsigned count = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: arch/i386/kernel/irq.c:396:
+			unsigned count = 0;
+			for_each_online_cpu(j)

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: arch/i386/kernel/irq.c:408:
+	int i  = *(loff_t *)v;
+	return show_selected_interrupts(p, i, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: arch/i386/kernel/irq.c:414:
+	int i  = *(loff_t *)v;
+	return show_selected_interrupts(p, i, 1);

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#295: FILE: arch/i386/kernel/irq.c:435:
+static struct seq_operations show_all_interrupts_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#302: FILE: arch/i386/kernel/irq.c:442:
+static int show_all_interrupts_open(struct inode *inode, struct file *filp)
                                                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#304: FILE: arch/i386/kernel/irq.c:444:
+	return seq_open(filp, &show_all_interrupts_ops);
 	                ^^^^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#447: FILE: arch/x86_64/kernel/irq.c:106:
+			seq_printf(p, "  Non-maskable interrupts");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#454: FILE: arch/x86_64/kernel/irq.c:113:
+			seq_printf(p, "  Local interrupts");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#461: FILE: arch/x86_64/kernel/irq.c:119:
+			seq_printf(p, "RES: ");

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#463: FILE: arch/x86_64/kernel/irq.c:121:
+				seq_printf(p, "%10u ", atomic_read(&per_cpu(irq_resched_counts, j)));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#464: FILE: arch/x86_64/kernel/irq.c:122:
+			seq_printf(p, "  Rescheduling interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#471: FILE: arch/x86_64/kernel/irq.c:129:
+			seq_printf(p, "CAL: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#474: FILE: arch/x86_64/kernel/irq.c:132:
+			seq_printf(p, "  function call interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#481: FILE: arch/x86_64/kernel/irq.c:139:
+			seq_printf(p, "TLB: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#484: FILE: arch/x86_64/kernel/irq.c:142:
+			seq_printf(p, "  TLB shootdowns\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#490: FILE: arch/x86_64/kernel/irq.c:148:
+			seq_printf(p, "TRM: ");

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#492: FILE: arch/x86_64/kernel/irq.c:150:
+				seq_printf(p, "%10u ", atomic_read(&per_cpu(irq_thermal_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#493: FILE: arch/x86_64/kernel/irq.c:151:
+			seq_printf(p, "  Thermal event interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#498: FILE: arch/x86_64/kernel/irq.c:156:
+			seq_printf(p, "THR: ");

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#500: FILE: arch/x86_64/kernel/irq.c:158:
+				seq_printf(p, "%10u ", atomic_read(&per_cpu(irq_threshold_counts, j)));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#501: FILE: arch/x86_64/kernel/irq.c:159:
+			seq_printf(p, "  Threshold APIC interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#506: FILE: arch/x86_64/kernel/irq.c:164:
+			seq_printf(p, "SPU: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#509: FILE: arch/x86_64/kernel/irq.c:167:
+			seq_printf(p, "  Spurious interrupts\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#513: FILE: arch/x86_64/kernel/irq.c:171:
+		seq_printf(p, "ERR: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#517: FILE: arch/x86_64/kernel/irq.c:175:
+			seq_printf(p, "  Error interrupts\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#519: FILE: arch/x86_64/kernel/irq.c:177:
+			unsigned count = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#520: FILE: arch/x86_64/kernel/irq.c:178:
+			unsigned count = 0;
+			for_each_online_cpu(j)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#527: FILE: arch/x86_64/kernel/irq.c:185:
+		seq_printf(p, "MIS: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#531: FILE: arch/x86_64/kernel/irq.c:189:
+			seq_printf(p, "  APIC mismatch fixups\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#533: FILE: arch/x86_64/kernel/irq.c:191:
+			unsigned count = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#534: FILE: arch/x86_64/kernel/irq.c:192:
+			unsigned count = 0;
+			for_each_online_cpu(j)

WARNING:LINE_SPACING: Missing a blank line after declarations
#547: FILE: arch/x86_64/kernel/irq.c:205:
+	int i  = *(loff_t *)v;
+	return show_selected_interrupts(p, i, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#553: FILE: arch/x86_64/kernel/irq.c:211:
+	int i  = *(loff_t *)v;
+	return show_selected_interrupts(p, i, 1);

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#574: FILE: arch/x86_64/kernel/irq.c:232:
+static struct seq_operations show_all_interrupts_ops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#581: FILE: arch/x86_64/kernel/irq.c:239:
+static int show_all_interrupts_open(struct inode *inode, struct file *filp)
                                                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#583: FILE: arch/x86_64/kernel/irq.c:241:
+	return seq_open(filp, &show_all_interrupts_ops);
 	                ^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#640: FILE: include/asm-i386/apic.h:10:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#688: FILE: include/asm-x86_64/apic.h:9:
+#include <asm/atomic.h>

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#760: FILE: Documentation/filesystems/proc.txt:301:
+system vector that lacked it.  This added functionality was made a seperate
                                                                    ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000400088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 59 warnings, 7 checks, 615 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000400088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
