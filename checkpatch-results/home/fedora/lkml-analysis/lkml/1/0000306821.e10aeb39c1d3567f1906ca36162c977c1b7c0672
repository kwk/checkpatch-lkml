WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
street (> MAX_ORDER pages cannot be allocated later) I decided not to currently.

WARNING:TYPO_SPELLING: 'uglyness' may be misspelled - perhaps 'ugliness'?
#38: 
and the ifdef uglyness seemed not be worth it.
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: mm/hugetlb.c:523:
+	struct huge_bm_page *m;
+	m = __alloc_bootmem_node_nopanic(NODE_DATA(h->hugetlb_next_nid),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: mm/hugetlb.c:524:
+	m = __alloc_bootmem_node_nopanic(NODE_DATA(h->hugetlb_next_nid),
+					huge_page_size(h), huge_page_size(h),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#121: FILE: mm/hugetlb.c:528:
+	BUG_ON((unsigned long)virt_to_phys(m) & (huge_page_size(h) - 1));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#133: FILE: mm/hugetlb.c:540:
+	struct huge_bm_page *m;
+	list_for_each_entry (m, &huge_boot_pages, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: mm/hugetlb.c:540:
+	list_for_each_entry (m, &huge_boot_pages, list) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: mm/hugetlb.c:543:
+		struct hstate *h = m->hstate;
+		__ClearPageReserved(page);

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageReserved>
#136: FILE: mm/hugetlb.c:543:
+		__ClearPageReserved(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#142: FILE: mm/hugetlb.c:549:
+__initcall(huge_init_bm);

CHECK:BRACES: braces {} should be used on all arms of this statement
#152: FILE: mm/hugetlb.c:561:
+		if (h->order > MAX_ORDER) {
[...]
+		} else if (!alloc_fresh_huge_page(h))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306821.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 3 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306821.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
