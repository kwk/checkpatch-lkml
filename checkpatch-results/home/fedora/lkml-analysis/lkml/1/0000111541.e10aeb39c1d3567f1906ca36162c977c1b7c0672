WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#230: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#286: FILE: arch/s390/include/asm/cputime.h:181:
+	spinlock_t lock;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#373: FILE: arch/s390/include/asm/lowcore.h:287:
+	__u8	pad_0x02f0[0x0300-0x02f0];	/* 0x02f0 */
 	    	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#383: FILE: arch/s390/include/asm/lowcore.h:393:
+	__u8	pad_0x0368[0x0380-0x0368];	/* 0x0368 */
 	    	                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#405: FILE: arch/s390/include/asm/pgtable.h:123:
+#define VMALLOC_SIZE	(1UL << 30)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#415: FILE: arch/s390/include/asm/seccomp.h:1:
+#ifndef _ASM_S390_SECCOMP_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#439: FILE: arch/s390/include/asm/spinlock.h:125:
+extern void _raw_read_lock_wait_flags(raw_rwlock_t *lp, unsigned long flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: arch/s390/include/asm/spinlock.h:128:
+extern void _raw_write_lock_wait_flags(raw_rwlock_t *lp, unsigned long flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#453: FILE: arch/s390/include/asm/spinlock.h:142:
+	unsigned int old;
+	old = rw->lock & 0x7fffffffU;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#532: FILE: arch/s390/include/asm/thread_info.h:111:
+#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#532: FILE: arch/s390/include/asm/thread_info.h:111:
+#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#533: FILE: arch/s390/include/asm/thread_info.h:112:
+#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#533: FILE: arch/s390/include/asm/thread_info.h:112:
+#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#534: FILE: arch/s390/include/asm/thread_info.h:113:
+#define _TIF_SECCOMP		(1<<TIF_SECCOMP)
                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#534: FILE: arch/s390/include/asm/thread_info.h:113:
+#define _TIF_SECCOMP		(1<<TIF_SECCOMP)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#535: FILE: arch/s390/include/asm/thread_info.h:114:
+#define _TIF_SYSCALL_FTRACE	(1<<TIF_SYSCALL_FTRACE)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#535: FILE: arch/s390/include/asm/thread_info.h:114:
+#define _TIF_SYSCALL_FTRACE	(1<<TIF_SYSCALL_FTRACE)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#793: FILE: arch/s390/kernel/ftrace.c:1:
+/*

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#813: FILE: arch/s390/kernel/ftrace.c:21:
+void ftrace_disable_return(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#814: FILE: arch/s390/kernel/ftrace.c:22:
+void ftrace_call_code(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#815: FILE: arch/s390/kernel/ftrace.c:23:
+void ftrace_nop_code(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#821: FILE: arch/s390/kernel/ftrace.c:29:
+asm(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#826: FILE: arch/s390/kernel/ftrace.c:34:
+	"	lg	%r1,"__stringify(__LC_FTRACE_FUNC)"\n"

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#833: FILE: arch/s390/kernel/ftrace.c:41:
+asm(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#836: FILE: arch/s390/kernel/ftrace.c:44:
+	"	j	.+"__stringify(MCOUNT_INSN_SIZE)"\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#838: FILE: arch/s390/kernel/ftrace.c:46:
+asm(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#845: FILE: arch/s390/kernel/ftrace.c:53:
+asm(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#849: FILE: arch/s390/kernel/ftrace.c:57:
+	"	l	%r1,"__stringify(__LC_FTRACE_FUNC)"\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#862: FILE: arch/s390/kernel/ftrace.c:70:
+asm(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#865: FILE: arch/s390/kernel/ftrace.c:73:
+	"	j	.+"__stringify(MCOUNT_INSN_SIZE)"\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#867: FILE: arch/s390/kernel/ftrace.c:75:
+asm(

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1002: FILE: arch/s390/kernel/ftrace.c:210:
+extern unsigned long __stop_syscalls_metadata[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1003: FILE: arch/s390/kernel/ftrace.c:211:
+extern unsigned int sys_call_table[];

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1040: FILE: arch/s390/kernel/ftrace.c:248:
+	syscalls_metadata = kzalloc(sizeof(*syscalls_metadata) * NR_syscalls,
+				    GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/compat.h> instead of <asm/compat.h>
#1459: FILE: arch/s390/kernel/process.c:35:
+#include <asm/compat.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/compat.h> instead of <asm/compat.h>
#1483: FILE: arch/s390/kernel/ptrace.c:41:
+#include <asm/compat.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1581: FILE: arch/s390/kernel/sclp.S:1:
+/*

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#1806: FILE: arch/s390/kernel/sclp.S:226:
+	ar	%r7,%r6				# update current mto adress
 	  	       				                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1945: FILE: arch/s390/kernel/signal.c:486:
+		if (is_compat_task()) {
 			ret = handle_signal32(signr, &ka, &info, oldset, regs);
 	        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#2037: FILE: arch/s390/kernel/vdso.c:60:
+	if (strncmp(s, "on", 3) == 0)
[...]
+	else if (strncmp(s, "off", 4) == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2041: FILE: arch/s390/kernel/vdso.c:64:
+	else {

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#2042: FILE: arch/s390/kernel/vdso.c:65:
+		rc = strict_strtoul(s, 0, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2194: FILE: arch/s390/mm/maccess.c:1:
+/*

CHECK:SPACING: No space is necessary after a cast
#2221: FILE: arch/s390/mm/maccess.c:28:
+	aligned = (unsigned long) dst & ~3UL;

CHECK:SPACING: No space is necessary after a cast
#2222: FILE: arch/s390/mm/maccess.c:29:
+	offset = (unsigned long) dst & 3;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2226: FILE: arch/s390/mm/maccess.c:33:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: arch/s390/mm/maccess.c:42:
+		EX_TABLE(0b,3b) EX_TABLE(1b,3b) EX_TABLE(2b,3b)
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: arch/s390/mm/maccess.c:42:
+		EX_TABLE(0b,3b) EX_TABLE(1b,3b) EX_TABLE(2b,3b)
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: arch/s390/mm/maccess.c:42:
+		EX_TABLE(0b,3b) EX_TABLE(1b,3b) EX_TABLE(2b,3b)
 		                                           ^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/compat.h> instead of <asm/compat.h>
#2263: FILE: arch/s390/mm/mmap.c:31:
+#include <asm/compat.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2332: FILE: arch/s390/mm/pgtable.c:64:
+}
+early_param("vmalloc", parse_vmalloc);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2630: FILE: drivers/s390/block/dasd_int.h:582:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2630: FILE: drivers/s390/block/dasd_int.h:582:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2630: FILE: drivers/s390/block/dasd_int.h:582:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2630: FILE: drivers/s390/block/dasd_int.h:582:
+int dasd_generic_read_dev_chars(struct dasd_device *, char *, void *, int);

CHECK:SPACING: No space is necessary after a cast
#2758: FILE: drivers/s390/char/con3270.c:617:
+		    (unsigned long) condev);

CHECK:SPACING: No space is necessary after a cast
#2858: FILE: drivers/s390/char/tty3270.c:650:
+	tp = (struct tty3270 *) view;

CHECK:SPACING: No space is necessary after a cast
#2877: FILE: drivers/s390/char/tty3270.c:886:
+		    (unsigned long) tp);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 19 warnings, 36 checks, 2652 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
