WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
will be either grabbed by special drivers or by nobody if they are broken at

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#62: FILE: drivers/hid/hid-core.c:540:
+	unsigned i, j;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/hid/hid-core.c:637:
+int hid_parse_report(struct hid_device *device, __u8 *start,
+		unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#93: FILE: drivers/hid/hid-core.c:637:
+		unsigned size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device->rdesc"
#127: FILE: drivers/hid/hid-core.c:652:
+	if (device->rdesc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*parser)...) over vmalloc(sizeof(struct hid_parser)...)
#137: FILE: drivers/hid/hid-core.c:657:
+	parser = vmalloc(sizeof(struct hid_parser));

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/hid/hid-core.c:819:
+		if (id->report_type == HID_ANY_ID ||
+				id->report_type == report->type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/hid/hid-core.c:842:
+		if ((id->usage_type == HID_ANY_ID ||
+				id->usage_type == usage->type) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/hid/hid-core.c:850:
+static void hid_process_event(struct hid_device *hid, struct hid_field *field,
+		struct hid_usage *usage, __s32 value, int interrupt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/hid/hid-core.c:994:
+static struct hid_report *hid_get_report(struct hid_report_enum *report_enum,
+		const u8 *data)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!report"
#292: FILE: drivers/hid/hid-core.c:1004:
+	if (report == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: drivers/hid/hid-core.c:1011:
+void hid_report_raw_event(struct hid_device *hid, int type, u8 *data, int size,
+		int interrupt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/hid/hid-core.c:1032:
+		dbg_hid("report %d is too short, (%d < %d)\n", report->id,
+				csize, rsize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/hid/hid-core.c:1106:
+static bool hid_match_one_id(struct hid_device *hdev,
+		const struct hid_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/hid/hid-core.c:1114:
+static const struct hid_device_id *hid_match_id(struct hid_device *hdev,
+		const struct hid_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/hid/hid-core.c:1189:
+	if (add_uevent_var(env, "HID_ID=%04X:%08X:%08X",
+			hdev->bus, hdev->vendor, hdev->product))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/hid/hid-core.c:1202:
+	if (add_uevent_var(env, "MODALIAS=hid:b%04Xv%08Xp%08X",
+			hdev->bus, hdev->vendor, hdev->product))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/hid/hid-core.c:1226:
+	sprintf(hdev->dev.bus_id, "%04X:%04X:%04X.%04X", hdev->bus,
+			hdev->vendor, hdev->product, atomic_inc_return(&id));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#554: FILE: drivers/hid/hid-core.c:1252:
+	if (hdev == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/hid/hid-core.c:1260:
+	hdev->collection = kcalloc(HID_DEFAULT_NUM_COLLECTIONS,
+			sizeof(struct hid_collection), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev->collection"
#563: FILE: drivers/hid/hid-core.c:1261:
+	if (hdev->collection == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: drivers/hid/hid-core.c:1299:
+int __hid_register_driver(struct hid_driver *hdrv, struct module *owner,
+		const char *mod_name)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#625: FILE: drivers/hid/hid-core.c:1322:
+		printk(KERN_ERR "HID: can't register hid bus\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#879: FILE: include/linux/hid.h:549:
+};
+struct hid_usage_id {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#888: FILE: include/linux/hid.h:558:
+ * ^I      to be called)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: include/linux/hid.h:575:
+	int (*raw_event)(struct hid_device *hdev, struct hid_report *report,
+			u8 *data, int size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: include/linux/hid.h:578:
+	int (*event)(struct hid_device *hdev, struct hid_field *field,
+			struct hid_usage *usage, __s32 value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#920: FILE: include/linux/hid.h:593:
+extern int hid_add_device(struct hid_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#921: FILE: include/linux/hid.h:594:
+extern void hid_destroy_device(struct hid_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#921: FILE: include/linux/hid.h:594:
+extern void hid_destroy_device(struct hid_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#923: FILE: include/linux/hid.h:596:
+extern int __must_check __hid_register_driver(struct hid_driver *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_driver *' should also have an identifier name
#923: FILE: include/linux/hid.h:596:
+extern int __must_check __hid_register_driver(struct hid_driver *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#923: FILE: include/linux/hid.h:596:
+extern int __must_check __hid_register_driver(struct hid_driver *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: include/linux/hid.h:597:
+extern int __must_check __hid_register_driver(struct hid_driver *,
+		struct module *, const char *mod_name);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#929: FILE: include/linux/hid.h:602:
+}
+extern void hid_unregister_driver(struct hid_driver *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#929: FILE: include/linux/hid.h:602:
+extern void hid_unregister_driver(struct hid_driver *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#941: FILE: include/linux/hid.h:617:
+int hid_parse_report(struct hid_device *hid, __u8 *start, unsigned size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: include/linux/hid.h:620:
+void hid_report_raw_event(struct hid_device *hid, int type, u8 *data, int size,
+		int interrupt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#946: FILE: include/linux/hid.h:622:
+extern int hid_generic_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#947: FILE: include/linux/hid.h:623:
+extern void hid_generic_exit(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: net/bluetooth/hidp/core.c:696:
+static int hidp_setup_hid(struct hidp_session *session,
 				struct hidp_connadd_req *req)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 32 checks, 989 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
