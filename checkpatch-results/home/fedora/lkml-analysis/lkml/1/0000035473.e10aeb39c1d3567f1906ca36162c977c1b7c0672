WARNING:TYPO_SPELLING: 'als' may be misspelled - perhaps 'also'?
#24: 
Subject: [PATCH] tsl2550: Move form i2c/chips to als and update interfaces
                                                 ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'als' may be misspelled - perhaps 'also'?
#79: FILE: Documentation/ABI/testing/sysfs-class-als:10:
+What:		/sys/class/als/.../exposure_time[n]
      		           ^^^

WARNING:TYPO_SPELLING: 'ALS' may be misspelled - perhaps 'ALSO'?
#97: FILE: drivers/als/Kconfig:12:
+if ALS
    ^^^

WARNING:TYPO_SPELLING: 'ALS' may be misspelled - perhaps 'ALSO'?
#109: FILE: drivers/als/Kconfig:24:
+endif #ALS
        ^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#122: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#127: FILE: drivers/als/tsl2550.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#145: FILE: drivers/als/tsl2550.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: drivers/als/tsl2550.c:20:
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#178: FILE: drivers/als/tsl2550.c:52:
+	struct mutex update_lock;

CHECK:BRACES: braces {} should be used on all arms of this statement
#211: FILE: drivers/als/tsl2550.c:85:
+	if (state == 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: drivers/als/tsl2550.c:87:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#305: FILE: drivers/als/tsl2550.c:179:
+		if (c0) {
[...]
+		} else
[...]
+	else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: drivers/als/tsl2550.c:184:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/als/tsl2550.c:198:
+static ssize_t tsl2550_show_power_state(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/als/tsl2550.c:207:
+static ssize_t tsl2550_store_power_state(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#338: FILE: drivers/als/tsl2550.c:212:
+	int ret = strict_strtoul(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tsl2550_show_power_state' to 'power_state_show' 'tsl2550_store_power_state' to 'power_state_store'
#351: FILE: drivers/als/tsl2550.c:225:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#353: FILE: drivers/als/tsl2550.c:227:
+static DEVICE_ATTR(power_state, S_IWUSR | S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#362: FILE: drivers/als/tsl2550.c:236:
+	struct tsl2550_data *data = i2c_get_clientdata(client);
+	if (data->operating_mode)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#377: FILE: drivers/als/tsl2550.c:251:
+	int ret = strict_strtoul(buf, 10, &val);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tsl2550_show_exposure' to 'exposure_time0_show' 'tsl2550_store_exposure' to 'exposure_time0_store'
#391: FILE: drivers/als/tsl2550.c:265:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#393: FILE: drivers/als/tsl2550.c:267:
+static DEVICE_ATTR(exposure_time0, S_IWUSR | S_IRUGO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: drivers/als/tsl2550.c:297:
+static ssize_t tsl2550_show_lux1_input(struct device *dev,
+			struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tsl2550_show_lux1_input' to 'illuminance0_show'
#438: FILE: drivers/als/tsl2550.c:312:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#440: FILE: drivers/als/tsl2550.c:314:
+static DEVICE_ATTR(illuminance0, S_IRUGO,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#488: FILE: drivers/als/tsl2550.c:362:
+static int __devinit tsl2550_probe(struct i2c_client *client,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct tsl2550_data)...)
#501: FILE: drivers/als/tsl2550.c:375:
+	data = kzalloc(sizeof(struct tsl2550_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#511: FILE: drivers/als/tsl2550.c:385:
+	if (opmode) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/als/tsl2550.c:388:
+			dev_err(&client->dev, "invalid operating_mode (%d)\n",
+					*opmode);

CHECK:BRACES: Unbalanced braces around else statement
#519: FILE: drivers/als/tsl2550.c:393:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/als/tsl2550.c:396:
+	dev_info(&client->dev, "%s operating mode\n",
+			data->operating_mode ? "extended" : "standard");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#554: FILE: drivers/als/tsl2550.c:428:
+static int __devexit tsl2550_remove(struct i2c_client *client)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035473.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 18 warnings, 13 checks, 545 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035473.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
