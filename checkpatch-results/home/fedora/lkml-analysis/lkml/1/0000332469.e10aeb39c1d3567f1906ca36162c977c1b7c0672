WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#59: FILE: arch/avr32/mach-at32ap/at32ap700x.c:1189:
+ * -------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#64: FILE: arch/avr32/mach-at32ap/at32ap700x.c:1194:
+};
+static struct clk atmel_pwm0_mck = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: arch/avr32/mach-at32ap/at32ap700x.c:1214:
+	if (platform_device_add_resources(pdev, atmel_pwm0_resource,
+				ARRAY_SIZE(atmel_pwm0_resource)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: drivers/misc/atmel_pwm.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/misc/atmel_pwm.c:9:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#180: FILE: drivers/misc/atmel_pwm.c:22:
+	spinlock_t		lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: drivers/misc/atmel_pwm.c:29:
+	struct pwm_channel	*channel[PWM_NCHAN];
+	void			(*handler[PWM_NCHAN])(struct pwm_channel *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/misc/atmel_pwm.c:32:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#201: FILE: drivers/misc/atmel_pwm.c:43:
+static inline void pwm_writel(const struct pwm *p, unsigned offset, u32 val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#206: FILE: drivers/misc/atmel_pwm.c:48:
+static inline u32 pwm_readl(const struct pwm *p, unsigned offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#236: FILE: drivers/misc/atmel_pwm.c:78:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof *ch should be sizeof(*ch)
#256: FILE: drivers/misc/atmel_pwm.c:98:
+	memset(ch, 0, sizeof *ch);

CHECK:BRACES: braces {} should be used on all arms of this statement
#259: FILE: drivers/misc/atmel_pwm.c:101:
+	if (pwm->channel[index])
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#261: FILE: drivers/misc/atmel_pwm.c:103:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#357: FILE: drivers/misc/atmel_pwm.c:199:
+int pwm_clk_alloc(unsigned prescale, unsigned div)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#357: FILE: drivers/misc/atmel_pwm.c:199:
+int pwm_clk_alloc(unsigned prescale, unsigned div)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#389: FILE: drivers/misc/atmel_pwm.c:231:
+void pwm_clk_free(unsigned clk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/misc/atmel_pwm.c:256:
+int pwm_channel_handler(struct pwm_channel *ch,
+		void (*handler)(struct pwm_channel *ch))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#476: FILE: drivers/misc/atmel_pwm.c:318:
+	if (*mp & ~((1<<PWM_NCHAN)-1)) {
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#476: FILE: drivers/misc/atmel_pwm.c:318:
+	if (*mp & ~((1<<PWM_NCHAN)-1)) {
 	                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/misc/atmel_pwm.c:320:
+		dev_warn(&pdev->dev, "mask 0x%x ... more than %d channels\n",
+			*mp, PWM_NCHAN);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#587: FILE: include/linux/atmel_pwm.h:1:
+#ifndef __LINUX_ATMEL_PWM_H

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#613: FILE: include/linux/atmel_pwm.h:27:
+	unsigned	index;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#617: FILE: include/linux/atmel_pwm.h:31:
+extern int pwm_channel_alloc(int index, struct pwm_channel *ch);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#618: FILE: include/linux/atmel_pwm.h:32:
+extern int pwm_channel_free(struct pwm_channel *ch);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#620: FILE: include/linux/atmel_pwm.h:34:
+extern int pwm_clk_alloc(unsigned prescale, unsigned div);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#620: FILE: include/linux/atmel_pwm.h:34:
+extern int pwm_clk_alloc(unsigned prescale, unsigned div);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#620: FILE: include/linux/atmel_pwm.h:34:
+extern int pwm_clk_alloc(unsigned prescale, unsigned div);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#621: FILE: include/linux/atmel_pwm.h:35:
+extern void pwm_clk_free(unsigned clk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#621: FILE: include/linux/atmel_pwm.h:35:
+extern void pwm_clk_free(unsigned clk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#623: FILE: include/linux/atmel_pwm.h:37:
+extern int __pwm_channel_onoff(struct pwm_channel *ch, int enabled);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#629: FILE: include/linux/atmel_pwm.h:43:
+extern int pwm_channel_handler(struct pwm_channel *ch,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: include/linux/atmel_pwm.h:44:
+extern int pwm_channel_handler(struct pwm_channel *ch,
+		void (*handler)(struct pwm_channel *ch));

CHECK:BIT_MACRO: Prefer using the BIT macro
#634: FILE: include/linux/atmel_pwm.h:48:
+#define		PWM_CPR_CPD	(1 << 10)	/* set: CUPD modifies period */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#635: FILE: include/linux/atmel_pwm.h:49:
+#define		PWM_CPR_CPOL	(1 << 9)	/* set: idle high */

CHECK:BIT_MACRO: Prefer using the BIT macro
#636: FILE: include/linux/atmel_pwm.h:50:
+#define		PWM_CPR_CALG	(1 << 8)	/* set: center align */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#646: FILE: include/linux/atmel_pwm.h:60:
+pwm_channel_writel(struct pwm_channel *pwmc, unsigned offset, u32 val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#651: FILE: include/linux/atmel_pwm.h:65:
+static inline u32 pwm_channel_readl(struct pwm_channel *pwmc, unsigned offset)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332469.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 22 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332469.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
