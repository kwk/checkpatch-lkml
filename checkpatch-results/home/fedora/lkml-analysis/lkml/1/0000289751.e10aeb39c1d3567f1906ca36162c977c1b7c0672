WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
- If peer2peer is set, driver posts 0B read request on offload tx queue just

WARNING:TYPO_SPELLING: 'unsolicitied' may be misspelled - perhaps 'unsolicited'?
#68: 
- Add cq poll logic to ignore unsolicitied read responses.
                              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#102: FILE: drivers/infiniband/hw/cxgb3/cxio_hal.c:834:
+	wqe->flags_rtr_type = cpu_to_be16(attr->flags|V_RTR_TYPE(attr->rtr_type));
 	                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#174: FILE: drivers/infiniband/hw/cxgb3/cxio_wr.h:340:
+	MPA_INITIATOR = (1<<0),
 	                  ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#186: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:66:
+int peer2peer = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#198: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:521:
+	req->wr_hi = htonl(V_WR_OP(FW_WROPCODE_OFLD_TX_DATA)|F_WR_COMPL);
 	                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#207: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:572:
+	req->wr_hi = htonl(V_WR_OP(FW_WROPCODE_OFLD_TX_DATA)|F_WR_COMPL);
 	                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#216: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:624:
+	req->wr_hi = htonl(V_WR_OP(FW_WROPCODE_OFLD_TX_DATA)|F_WR_COMPL);
 	                                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#237: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:918:
+	if (peer2peer && iwch_rqes_posted(ep->com.qp) == 0) {
+		iwch_post_zb_read(ep->com.qp);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1088:
+		PDBG(KERN_ERR "%s 0 credit ack  ep %p state %u\n",
+			__FUNCTION__, ep, state_read(&ep->com));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#260: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1088:
+			__FUNCTION__, ep, state_read(&ep->com));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1096:
+		PDBG("%s rdma_init wr_ack ep %p state %u\n",
+			__FUNCTION__, ep, state_read(&ep->com));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#275: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1096:
+			__FUNCTION__, ep, state_read(&ep->com));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1099:
+			PDBG("%s initiator ep %p state %u\n",
+				__FUNCTION__, ep, state_read(&ep->com));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#278: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1099:
+				__FUNCTION__, ep, state_read(&ep->com));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1104:
+			PDBG("%s responder ep %p state %u\n",
+				__FUNCTION__, ep, state_read(&ep->com));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#283: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1104:
+				__FUNCTION__, ep, state_read(&ep->com));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1110:
+		PDBG("%s lsm ack ep %p state %u freeing skb\n",
+			__FUNCTION__, ep, state_read(&ep->com));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#289: FILE: drivers/infiniband/hw/cxgb3/iwch_cm.c:1110:
+			__FUNCTION__, ep, state_read(&ep->com));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#381: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:595:
+	PDBG("%s enter\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#384: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:598:
+		printk(KERN_ERR "%s cannot send zb_read!!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#384: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:598:
+		printk(KERN_ERR "%s cannot send zb_read!!\n", __FUNCTION__);

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#399: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:613:
+	wqe->send.wrh.gen_tid_len = cpu_to_be32(V_FW_RIWR_TID(qhp->ep->hwtid)|
 	                                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:710:
+	u16 count = 0;
+	while ((count+1) != 0 && fw_riwrh_opcode((struct fw_riwrh *)wqe) == T3_WR_RCV) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#421: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:710:
+	while ((count+1) != 0 && fw_riwrh_opcode((struct fw_riwrh *)wqe) == T3_WR_RCV) {
 	             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#425: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:714:
+	PDBG("%s qhp %p count %u\n", __FUNCTION__, qhp, count);

CHECK:BRACES: braces {} should be used on all arms of this statement
#438: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:759:
+	if (peer2peer) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#444: FILE: drivers/infiniband/hw/cxgb3/iwch_qp.c:765:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 14 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
