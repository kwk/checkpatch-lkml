ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/mfd/Kconfig:111:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/mfd/Kconfig:122:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/mfd/Kconfig:133:
+^I  $

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#128: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: drivers/mfd/wm8350-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#169: FILE: drivers/mfd/wm8350-core.c:37:
+#define dump(regs, src) do { \
+	int i_; \
+	u16 *src_ = src; \
+	printk(KERN_DEBUG); \
+	for (i_ = 0; i_ < regs; i_++) \
+		printk(" 0x%4.4x", *src_++); \
+	printk("\n"); \
+} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#169: FILE: drivers/mfd/wm8350-core.c:37:
+#define dump(regs, src) do { \
+	int i_; \
+	u16 *src_ = src; \
+	printk(KERN_DEBUG); \
+	for (i_ = 0; i_ < regs; i_++) \
+		printk(" 0x%4.4x", *src_++); \
+	printk("\n"); \
+} while (0);

do {} while(0) macros should not have a trailing semicolon.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#172: FILE: drivers/mfd/wm8350-core.c:40:
+	printk(KERN_DEBUG); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: drivers/mfd/wm8350-core.c:42:
+		printk(" 0x%4.4x", *src_++); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: drivers/mfd/wm8350-core.c:43:
+	printk("\n"); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: drivers/mfd/wm8350-core.c:51:
+#define ldbg(format, arg...) printk(format, ## arg)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wm8350->read_dev"
#230: FILE: drivers/mfd/wm8350-core.c:98:
+	if (wm8350->read_dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/mfd/wm8350-core.c:115:
+			dev_warn(wm8350->dev,
+				"reg R%d is not readable\n", i);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg == WM8350_GPIO_CONFIGURATION_I_O'
#269: FILE: drivers/mfd/wm8350-core.c:137:
+	if ((reg == WM8350_GPIO_CONFIGURATION_I_O) ||
+	    (reg >= WM8350_GPIO_FUNCTION_SELECT_1 &&
+	     reg <= WM8350_GPIO_FUNCTION_SELECT_4) ||
+	    (reg >= WM8350_BATTERY_CHARGER_CONTROL_1 &&
+	     reg <= WM8350_BATTERY_CHARGER_CONTROL_3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wm8350->write_dev"
#284: FILE: drivers/mfd/wm8350-core.c:152:
+	if (wm8350->write_dev == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/mfd/wm8350-core.c:171:
+			dev_err(wm8350->dev,
+			       "attempted write to locked reg R%d\n", i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wm8350->reg_cache"
#494: FILE: drivers/mfd/wm8350-core.c:362:
+	if (wm8350->reg_cache == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#503: FILE: drivers/mfd/wm8350-core.c:371:
+		if (wm8350_reg_io_map[i].readable &&
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/mfd/wm8350-core.c:376:
+				dev_err(wm8350->dev,
+				       "failed to read initial cache value\n");

CHECK:BRACES: Unbalanced braces around else statement
#514: FILE: drivers/mfd/wm8350-core.c:382:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#535: FILE: drivers/mfd/wm8350-core.c:403:
+	if (id1 == 0x0)
[...]
+	else if (id1 == 0x6143) {
[...]
+	} else {
[...]

WARNING:MASK_THEN_SHIFT: Possible precedence defect with mask then right shift - may need parentheses
#564: FILE: drivers/mfd/wm8350-core.c:432:
+	mode = id2 & WM8350_CONF_STS_MASK >> 10;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#570: FILE: drivers/mfd/wm8350-core.c:438:
+		printk(KERN_ERR "wm8350: failed to create register cache\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#595: FILE: drivers/mfd/wm8350-regmap.c:1:
+/*

WARNING:TYPO_SPELLING: 'Formating' may be misspelled - perhaps 'Formatting'?
#725: FILE: drivers/mfd/wm8350-regmap.c:131:
+	0x0A00,     /* R112 - AI Formating */
 	                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Formating' may be misspelled - perhaps 'Formatting'?
#986: FILE: drivers/mfd/wm8350-regmap.c:392:
+	0x0A00,     /* R112 - AI Formating */
 	                         ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Formating' may be misspelled - perhaps 'Formatting'?
#1247: FILE: drivers/mfd/wm8350-regmap.c:653:
+	0x0A00,     /* R112 - AI Formating */
 	                         ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Formating' may be misspelled - perhaps 'Formatting'?
#1508: FILE: drivers/mfd/wm8350-regmap.c:914:
+	0x0A00,     /* R112 - AI Formating */
 	                         ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Formating' may be misspelled - perhaps 'Formatting'?
#1773: FILE: drivers/mfd/wm8350-regmap.c:1179:
+	{ 0xBF00, 0xBF00, 0x0000 }, /* R112 - AI Formating */
 	                                         ^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1924: FILE: include/linux/mfd/wm8350/core.h:1:
+/*

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2461: FILE: include/linux/mfd/wm8350/core.h:538:
+};
+extern const struct wm8350_reg_access wm8350_reg_io_map[];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#2470: FILE: include/linux/mfd/wm8350/core.h:547:
+	void (*handler) (struct wm8350 *, int, void *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm8350 *' should also have an identifier name
#2470: FILE: include/linux/mfd/wm8350/core.h:547:
+	void (*handler) (struct wm8350 *, int, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2470: FILE: include/linux/mfd/wm8350/core.h:547:
+	void (*handler) (struct wm8350 *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2470: FILE: include/linux/mfd/wm8350/core.h:547:
+	void (*handler) (struct wm8350 *, int, void *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 20 warnings, 12 checks, 2425 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
