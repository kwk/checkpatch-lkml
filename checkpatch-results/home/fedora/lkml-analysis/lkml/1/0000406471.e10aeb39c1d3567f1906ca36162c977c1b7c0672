WARNING:REPEATED_WORD: Possible repeated word: 'the'
#38: 
push requests to be processed by the the cache (raid5d).  raid5d also pulls

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
   priority order (full-stripe-writes, reads, sub-width-writes).  If the raid

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#155: FILE: drivers/md/raid5.c:141:
+		BUG_ON(!list_empty(&sq->list_node));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#156: FILE: drivers/md/raid5.c:142:
+		BUG_ON(atomic_read(&conf->active_queues) == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#158: FILE: drivers/md/raid5.c:144:
+			BUG_ON(sq->sh);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/md/raid5.c:147:
+				list_add_tail(&sq->list_node,
+						&conf->io_hi_queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/md/raid5.c:152:
+				list_add_tail(&sq->list_node,
+					       &conf->io_lo_queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: drivers/md/raid5.c:157:
+				list_add_tail(&sq->list_node,
+					       &conf->delayed_q_list);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#177: FILE: drivers/md/raid5.c:163:
+				goto nothing_to_handle; /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#181: FILE: drivers/md/raid5.c:167:
+			BUG_ON(sq->sh == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq->sh"
#181: FILE: drivers/md/raid5.c:167:
+			BUG_ON(sq->sh == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: drivers/md/raid5.c:172:
+			if (test_and_clear_bit(STRIPE_QUEUE_PREREAD_ACTIVE,
+						&sq->state)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/md/raid5.c:199:
+			if (test_bit(STRIPE_QUEUE_BIT_DELAY, &sq->state) &&
+				   sq->bm_seq - conf->seq_write > 0) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_stripe', this function's name, in a string
#330: FILE: drivers/md/raid5.c:350:
+	pr_debug("init_stripe called, stripe %llu\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/md/raid5.c:351:
+	pr_debug("init_stripe called, stripe %llu\n",
+		(unsigned long long)sector);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#362: FILE: drivers/md/raid5.c:372:
+			printk(KERN_ERR "sector=%llx i=%d %p %p %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#377: FILE: drivers/md/raid5.c:402:
+	pr_debug("%s, sector %llu\n", __FUNCTION__, (unsigned long long)sector);

CHECK:BRACES: braces {} should be used on all arms of this statement
#436: FILE: drivers/md/raid5.c:461:
+	if (atomic_read(&sh->count))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#437: FILE: drivers/md/raid5.c:462:
+		BUG_ON(!list_empty(&sh->lru));

CHECK:BRACES: Unbalanced braces around else statement
#438: FILE: drivers/md/raid5.c:463:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#446: FILE: drivers/md/raid5.c:471:
+			BUG();

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#464: FILE: drivers/md/raid5.c:486:
+			      < (conf->max_nr_stripes * 3/4) ||
 			                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#525: FILE: drivers/md/raid5.c:516:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#530: FILE: drivers/md/raid5.c:520:
+	BUG_ON(sq->sector != sector);

CHECK:BRACES: braces {} should be used on all arms of this statement
#537: FILE: drivers/md/raid5.c:527:
+		if (sq->sh)
[...]
+		else {
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#538: FILE: drivers/md/raid5.c:528:
+			BUG_ON(sq->sector != sh->sector);

CHECK:BRACES: Unbalanced braces around else statement
#539: FILE: drivers/md/raid5.c:529:
+		else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#545: FILE: drivers/md/raid5.c:535:
+		BUG_ON(!list_empty(&sq->list_node));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#546: FILE: drivers/md/raid5.c:536:
+		BUG_ON(test_bit(STRIPE_QUEUE_HANDLE, &sq->state));

WARNING:LINE_SPACING: Missing a blank line after declarations
#557: FILE: drivers/md/raid5.c:547:
+	struct stripe_head *sh;
+	spin_lock_irq(&conf->device_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/md/raid5.c:555:
+static void init_queue(struct stripe_queue *sq, sector_t sector,
+		int disks, int pd_idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: drivers/md/raid5.c:561:
+	pr_debug("%s: %llu -> %llu [%p]\n",
+		__FUNCTION__, (unsigned long long) sq->sector,

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/md/raid5.c:561:
+		__FUNCTION__, (unsigned long long) sq->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#571: FILE: drivers/md/raid5.c:561:
+		__FUNCTION__, (unsigned long long) sq->sector,

CHECK:SPACING: No space is necessary after a cast
#572: FILE: drivers/md/raid5.c:562:
+		(unsigned long long) sector, sq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#574: FILE: drivers/md/raid5.c:564:
+	BUG_ON(atomic_read(&sq->count) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#575: FILE: drivers/md/raid5.c:565:
+	BUG_ON(io_weight(sq->to_read, disks));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#576: FILE: drivers/md/raid5.c:566:
+	BUG_ON(io_weight(sq->to_write, disks));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#577: FILE: drivers/md/raid5.c:567:
+	BUG_ON(io_weight(sq->overwrite, disks));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#578: FILE: drivers/md/raid5.c:568:
+	BUG_ON(test_bit(STRIPE_QUEUE_HANDLE, &sq->state));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#579: FILE: drivers/md/raid5.c:569:
+	BUG_ON(sq->sh);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#589: FILE: drivers/md/raid5.c:579:
+			printk(KERN_ERR "sector=%llx i=%d %p %p\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#592: FILE: drivers/md/raid5.c:582:
+			BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#599: FILE: drivers/md/raid5.c:589:
+		printk(KERN_ERR "%s: sq: %p sector: %llu bounced off the "

WARNING:SPLIT_STRING: quoted string split across lines
#600: FILE: drivers/md/raid5.c:590:
+		printk(KERN_ERR "%s: sq: %p sector: %llu bounced off the "
+			"stripe_queue rb_tree\n", __FUNCTION__, sq,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#600: FILE: drivers/md/raid5.c:590:
+			"stripe_queue rb_tree\n", __FUNCTION__, sq,

CHECK:SPACING: No space is necessary after a cast
#601: FILE: drivers/md/raid5.c:591:
+			(unsigned long long) sq->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#602: FILE: drivers/md/raid5.c:592:
+		BUG();

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#613: FILE: drivers/md/raid5.c:603:
+			     STRIPE_QUEUE_SIZE * 7/8 ||
 			                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#621: FILE: drivers/md/raid5.c:611:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: drivers/md/raid5.c:614:
+get_active_queue(raid5_conf_t *conf, sector_t sector, int disks, int pd_idx,
+		  int noblock)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#628: FILE: drivers/md/raid5.c:618:
+	pr_debug("%s, sector %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/md/raid5.c:619:
+	pr_debug("%s, sector %llu\n", __FUNCTION__,
+		(unsigned long long)sector);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq"
#641: FILE: drivers/md/raid5.c:631:
+			if (noblock && sq == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#648: FILE: drivers/md/raid5.c:638:
+			if (atomic_read(&sq->count)) {
[...]
+			} else if (!test_and_set_bit(STRIPE_QUEUE_HANDLE,
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#649: FILE: drivers/md/raid5.c:639:
+				BUG_ON(!list_empty(&sq->list_node));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sq"
#655: FILE: drivers/md/raid5.c:645:
+	} while (sq == NULL);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#661: FILE: drivers/md/raid5.c:651:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#666: FILE: drivers/md/raid5.c:656:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#748: FILE: drivers/md/raid5.c:1280:
+	void *weight_map;
+	sq = kmem_cache_alloc(conf->sq_slab_cache, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#751: FILE: drivers/md/raid5.c:1283:
+	memset(sq, 0, (sizeof(*sq)+(disks-1) * sizeof(struct r5_queue_dev)) +
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#751: FILE: drivers/md/raid5.c:1283:
+	memset(sq, 0, (sizeof(*sq)+(disks-1) * sizeof(struct r5_queue_dev)) +
 	                                 ^

CHECK:SPACING: No space is necessary after a cast
#756: FILE: drivers/md/raid5.c:1288:
+	weight_map = ((void *) sq) + offsetof(typeof(*sq), dev) +

CHECK:CAMELCASE: Avoid CamelCase: <MaxSector>
#765: FILE: drivers/md/raid5.c:1297:
+	sq->sector = MaxSector;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#798: FILE: drivers/md/raid5.c:1334:
+			       (sizeof(struct stripe_queue)+(devs-1) *
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#798: FILE: drivers/md/raid5.c:1334:
+			       (sizeof(struct stripe_queue)+(devs-1) *
 			                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: drivers/md/raid5.c:1398:
+	sc_q = kmem_cache_create(conf->sq_cache_name[conf->active_name],
+			       (sizeof(struct stripe_queue)+(newsize-1) *

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#840: FILE: drivers/md/raid5.c:1398:
+			       (sizeof(struct stripe_queue)+(newsize-1) *
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#840: FILE: drivers/md/raid5.c:1398:
+			       (sizeof(struct stripe_queue)+(newsize-1) *
 			                                            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#872: FILE: drivers/md/raid5.c:1427:
+			do
[...]
+					kmem_cache_free(sc_q, nsq_per_sh[j]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#891: FILE: drivers/md/raid5.c:1439:
+			void *weight_map;
+			nsq = nsq_per_sh[j];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#892: FILE: drivers/md/raid5.c:1440:
+			memset(nsq, 0, (sizeof(*nsq)+(newsize-1) *
 			                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#892: FILE: drivers/md/raid5.c:1440:
+			memset(nsq, 0, (sizeof(*nsq)+(newsize-1) *
 			                                     ^

CHECK:SPACING: No space is necessary after a cast
#900: FILE: drivers/md/raid5.c:1448:
+			weight_map = ((void *) nsq) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#974: FILE: drivers/md/raid5.c:1532:
+		nsq = list_entry(newqueues.next, struct stripe_queue,
+					list_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: drivers/md/raid5.c:1551:
+		nsq = list_entry(newqueues.next, struct stripe_queue,
+					list_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1077: FILE: drivers/md/raid5.c:2281:
+static int add_queue_bio(struct stripe_queue *sq, struct bio *bi, int dd_idx,
+			  int forwrite)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: drivers/md/raid5.c:2289:
+	pr_debug("adding bio (%llu) to queue (%llu)\n",
 		(unsigned long long)bi->bi_sector,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bip"
#1098: FILE: drivers/md/raid5.c:2297:
+		if (*bip == NULL && (!sh || (sh && !sh->dev[dd_idx].written)))

CHECK:BRACES: Unbalanced braces around else statement
#1133: FILE: drivers/md/raid5.c:2342:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#1175: FILE: drivers/md/raid5.c:2725:
+				set_bit(R5_Wantread, &dev->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: drivers/md/raid5.c:2727:
+				if (!test_and_set_bit(STRIPE_OP_IO,
+				    &sh->ops.pending))

WARNING:SPLIT_STRING: quoted string split across lines
#1202: FILE: drivers/md/raid5.c:2744:
+				pr_debug("Read_old block "
+					 "%d for Reconstruct\n", i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: drivers/md/raid5.c:2748:
+				if (!test_and_set_bit(STRIPE_OP_IO,
+				    &sh->ops.pending))

WARNING:SPLIT_STRING: quoted string split across lines
#1241: FILE: drivers/md/raid5.c:2807:
+				pr_debug("Read_old stripe %llu "
+					"block %d for Reconstruct\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: drivers/md/raid5.c:3057:
+			sq2 = get_active_queue(conf, s, conf->raid_disks,
 						pd_idx, 1);

CHECK:CAMELCASE: Avoid CamelCase: <R5_Expanded>
#1301: FILE: drivers/md/raid5.c:3070:
+			    test_bit(R5_Expanded, &sh2->dev[dd_idx].flags)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: drivers/md/raid5.c:3360:
+	if (s.expanded && test_bit(STRIPE_QUEUE_EXPANDING, &sq->state) &&
 		!test_bit(STRIPE_OP_POSTXOR, &sh->ops.pending)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1423: FILE: drivers/md/raid5.c:3671:
+			if (test_bit(STRIPE_QUEUE_PREREAD_ACTIVE, &sq->state)) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1426: FILE: drivers/md/raid5.c:3674:
+			} else

WARNING:SPLIT_STRING: quoted string split across lines
#1438: FILE: drivers/md/raid5.c:3686:
+	pr_debug("%s: sector %llu "
+		 "state: %#lx r: %lu w: %lu o: %lu handled: %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1438: FILE: drivers/md/raid5.c:3686:
+		 "state: %#lx r: %lu w: %lu o: %lu handled: %s\n", __FUNCTION__,

CHECK:SPACING: No space is necessary after a cast
#1439: FILE: drivers/md/raid5.c:3687:
+		 (unsigned long long) sq->sector, sq->state,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1459: FILE: drivers/md/raid5.c:3697:
+		struct stripe_queue *sq, *_sq;
+		pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1459: FILE: drivers/md/raid5.c:3697:
+		pr_debug("%s\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1465: FILE: drivers/md/raid5.c:3703:
+			if (!test_and_set_bit(STRIPE_QUEUE_PREREAD_ACTIVE,
+						&sq->state))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: drivers/md/raid5.c:3706:
+			list_move_tail(&sq->list_node,
+					&conf->io_lo_queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1522: FILE: drivers/md/raid5.c:4089:
+		sq = get_active_queue(conf, new_sector, disks, pd_idx,
+					(bi->bi_rw & RWA_MASK));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1604: FILE: drivers/md/raid5.c:4177:
+		wait_queue_t wait;
+		init_waitqueue_entry(&wait, current);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1607: FILE: drivers/md/raid5.c:4180:
+^I^I        set_current_state(TASK_UNINTERRUPTIBLE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#1608: FILE: drivers/md/raid5.c:4181:
+^I^I        if (sq->sh)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1609: FILE: drivers/md/raid5.c:4182:
+^I^I                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: drivers/md/raid5.c:4185:
+^I^I        schedule();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1621: FILE: drivers/md/raid5.c:4194:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1640: FILE: drivers/md/raid5.c:4262:
+		sq = wait_for_cache_attached_queue(conf, sector_nr+i,
 		                                                  ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1777: FILE: drivers/md/raid5.c:4500:
+	pr_debug("+++ %s active\n", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1801: FILE: drivers/md/raid5.c:4524:
+			struct stripe_head *sh;
+			sq = list_entry(sq_entry, struct stripe_queue,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1806: FILE: drivers/md/raid5.c:4529:
+			BUG_ON(atomic_read(&sq->count) != 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1807: FILE: drivers/md/raid5.c:4530:
+			BUG_ON(sq->sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1821: FILE: drivers/md/raid5.c:4544:
+	pr_debug("--- %s inactive\n", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1887: FILE: drivers/md/raid5.c:4694:
+	raid5_conf_t *conf = mddev_to_conf(mddev);
+	if (conf)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1982: FILE: drivers/md/raid5.c:5044:
+	seq_printf(seq, "\n");

CHECK:SPACING: No space is necessary after a cast
#1984: FILE: drivers/md/raid5.c:5046:
+		   (unsigned long long) sq->sector, sq->sh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1989: FILE: drivers/md/raid5.c:5051:
+static void printall (struct seq_file *seq, raid5_conf_t *conf)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2130: FILE: include/linux/raid/raid5.h:361:
+^Ichar ^I^I^Iworkqueue_name[20];$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 51 warnings, 60 checks, 1964 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
