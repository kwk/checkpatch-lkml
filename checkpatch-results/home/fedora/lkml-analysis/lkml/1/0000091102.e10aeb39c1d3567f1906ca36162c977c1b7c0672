WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
Unlike other ASoC machine drivers, this one makes use of a codec provided line

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '2512fd29db4eb09e82d182596304c7aaf76d2c5c', maybe rebased or not pulled?
#69: 
linux-omap-2.6 tree up to commit 2512fd29db4eb09e82d182596304c7aaf76d2c5c.

WARNING:TYPO_SPELLING: 'subsytem' may be misspelled - perhaps 'subsystem'?
#92: 
Mark Brown - for his help, patience and excellent subsytem maintainer support.
                                                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#103: FILE: sound/soc/omap/Kconfig:18:
+config SND_OMAP_SOC_AMS_DELTA
+	tristate "SoC Audio support for Amstrad E3 (Delta) videophone"
+	depends on SND_OMAP_SOC && MACH_AMS_DELTA
+	select SND_OMAP_SOC_MCBSP
+	select SND_SOC_CX20442
+	help
+	  Say Y if you want to add support for SoC audio on Amstrad Delta.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#135: FILE: sound/soc/omap/ams-delta.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#153: FILE: sound/soc/omap/ams-delta.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#154: FILE: sound/soc/omap/ams-delta.c:20:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: sound/soc/omap/ams-delta.c:41:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: sound/soc/omap/ams-delta.c:43:
+ const struct snd_soc_dapm_widget ams_delta_dapm_widgets[] = {$

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#200: FILE: sound/soc/omap/ams-delta.c:66:
+static const char *ams_delta_audio_mode[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: sound/soc/omap/ams-delta.c:67:
+static const char *ams_delta_audio_mode[] =
+	{"Mixed", "Handset", "Handsfree", "Speakerphone"};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: sound/soc/omap/ams-delta.c:94:
+static int ams_delta_set_audio_mode(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: sound/soc/omap/ams-delta.c:164:
+static int ams_delta_get_audio_mode(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: sound/soc/omap/ams-delta.c:197:
+	SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(ams_delta_audio_mode),
+						ams_delta_audio_mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: sound/soc/omap/ams-delta.c:202:
+	SOC_ENUM_EXT("Audio Mode", ams_delta_audio_enum[0],
+			ams_delta_get_audio_mode, ams_delta_set_audio_mode),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#352: FILE: sound/soc/omap/ams-delta.c:218:
+ * the hook switch can be used for dynamic DAPM reconfiguration. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#376: FILE: sound/soc/omap/ams-delta.c:242:
+
+

WARNING:TYPO_SPELLING: 'carefull' may be misspelled - perhaps 'careful'?
#383: FILE: sound/soc/omap/ams-delta.c:249:
+ * we must connect codec DAI pins to the modem for a moment.  Be carefull not
                                                                  ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#384: FILE: sound/soc/omap/ams-delta.c:250:
+ * to interfere with our digital mute function that shares the same hardware. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#400: FILE: sound/soc/omap/ams-delta.c:266:
+	 * only if digital mute still off */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: sound/soc/omap/ams-delta.c:307:
+static void cx81801_receive(struct tty_struct *tty,
+				const unsigned char *cp, char *fp, int count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: sound/soc/omap/ams-delta.c:323:
+		ret = snd_soc_jack_add_pins(&ams_delta_hook_switch,
+					ARRAY_SIZE(ams_delta_hook_switch_pins),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: sound/soc/omap/ams-delta.c:327:
+			dev_warn(codec->socdev->card->dev,
+				"Failed to link hook switch to DAPM pins, "

WARNING:SPLIT_STRING: quoted string split across lines
#462: FILE: sound/soc/omap/ams-delta.c:328:
+				"Failed to link hook switch to DAPM pins, "
+				"will continue with hook switch unlinked.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#481: FILE: sound/soc/omap/ams-delta.c:347:
+		 * if not already done */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: sound/soc/omap/ams-delta.c:350:
+			ams_delta_latch2_write(AMS_DELTA_LATCH2_MODEM_CODEC,
+						AMS_DELTA_LATCH2_MODEM_CODEC);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#506: FILE: sound/soc/omap/ams-delta.c:372:
+
+

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#508: FILE: sound/soc/omap/ams-delta.c:374:
+ * Even if not very usefull, the sound card can still work without any of the
                     ^^^^^^^

WARNING:TYPO_SPELLING: 'functonality' may be misspelled - perhaps 'functionality'?
#509: FILE: sound/soc/omap/ams-delta.c:375:
+ * above functonality activated.  You can still control its audio input/output
          ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'issueing' may be misspelled - perhaps 'issuing'?
#510: FILE: sound/soc/omap/ams-delta.c:376:
+ * constellation and speakerphone gain from userspace by issueing AT commands
                                                          ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: sound/soc/omap/ams-delta.c:381:
+static int ams_delta_hw_params(struct snd_pcm_substream *substream,
+			 struct snd_pcm_hw_params *params)

WARNING:CONST_STRUCT: struct snd_soc_ops should normally be const
#526: FILE: sound/soc/omap/ams-delta.c:392:
+static struct snd_soc_ops ams_delta_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#530: FILE: sound/soc/omap/ams-delta.c:396:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: sound/soc/omap/ams-delta.c:399:
+static int ams_delta_set_bias_level(struct snd_soc_card *card,
+					enum snd_soc_bias_level level)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: sound/soc/omap/ams-delta.c:409:
+			ams_delta_latch2_write(AMS_DELTA_LATCH2_MODEM_NRESET,
+						AMS_DELTA_LATCH2_MODEM_NRESET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: sound/soc/omap/ams-delta.c:414:
+			ams_delta_latch2_write(AMS_DELTA_LATCH2_MODEM_NRESET,
+						0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#556: FILE: sound/soc/omap/ams-delta.c:422:
+ * Shares hardware with codec config pulse generation */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: sound/soc/omap/ams-delta.c:439:
+		ams_delta_latch2_write(AMS_DELTA_LATCH2_MODEM_CODEC,
+				mute ? AMS_DELTA_LATCH2_MODEM_CODEC : 0);

WARNING:CONST_STRUCT: struct snd_soc_dai_ops should normally be const
#578: FILE: sound/soc/omap/ams-delta.c:444:
+static struct snd_soc_dai_ops ams_delta_dai_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#593: FILE: sound/soc/omap/ams-delta.c:459:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#619: FILE: sound/soc/omap/ams-delta.c:485:
+	 * even if line discipline fails */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: sound/soc/omap/ams-delta.c:487:
+	ret = snd_soc_jack_new(card, "hook_switch",
+				SND_JACK_HEADSET, &ams_delta_hook_switch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: sound/soc/omap/ams-delta.c:490:
+		dev_warn(card->dev,
+				"Failed to allocate resources for hook switch, "

WARNING:SPLIT_STRING: quoted string split across lines
#625: FILE: sound/soc/omap/ams-delta.c:491:
+				"Failed to allocate resources for hook switch, "
+				"will continue without one.\n");

CHECK:BRACES: Unbalanced braces around else statement
#626: FILE: sound/soc/omap/ams-delta.c:492:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: sound/soc/omap/ams-delta.c:494:
+		ret = snd_soc_jack_add_gpios(&ams_delta_hook_switch,
+					ARRAY_SIZE(ams_delta_hook_switch_gpios),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: sound/soc/omap/ams-delta.c:498:
+			dev_warn(card->dev,
+				"Failed to set up hook switch GPIO line, "

WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: sound/soc/omap/ams-delta.c:499:
+				"Failed to set up hook switch GPIO line, "
+				"will continue with hook switch inactive.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: sound/soc/omap/ams-delta.c:506:
+		dev_warn(card->dev,
+				"Failed to register line discipline, "

WARNING:SPLIT_STRING: quoted string split across lines
#641: FILE: sound/soc/omap/ams-delta.c:507:
+				"Failed to register line discipline, "
+				"will continue without any controls.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: sound/soc/omap/ams-delta.c:516:
+		dev_warn(card->dev,
+				"Failed to register DAPM controls, "

WARNING:SPLIT_STRING: quoted string split across lines
#651: FILE: sound/soc/omap/ams-delta.c:517:
+				"Failed to register DAPM controls, "
+				"will continue without any.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: sound/soc/omap/ams-delta.c:522:
+	ret = snd_soc_dapm_add_routes(codec, ams_delta_audio_map,
+					ARRAY_SIZE(ams_delta_audio_map));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: sound/soc/omap/ams-delta.c:525:
+		dev_warn(card->dev,
+				"Failed to set up DAPM routes, "

WARNING:SPLIT_STRING: quoted string split across lines
#660: FILE: sound/soc/omap/ams-delta.c:526:
+				"Failed to set up DAPM routes, "
+				"will continue with codec default map.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: sound/soc/omap/ams-delta.c:541:
+	ret = snd_soc_add_controls(codec, ams_delta_audio_controls,
+					ARRAY_SIZE(ams_delta_audio_controls));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: sound/soc/omap/ams-delta.c:544:
+		dev_warn(card->dev,
+				"Failed to register audio mode control, "

WARNING:SPLIT_STRING: quoted string split across lines
#679: FILE: sound/soc/omap/ams-delta.c:545:
+				"Failed to register audio mode control, "
+				"will continue without it.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: sound/soc/omap/ams-delta.c:592:
+	platform_set_drvdata(ams_delta_audio_platform_device,
+				&ams_delta_snd_soc_device);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: sound/soc/omap/ams-delta.c:605:
+	cx20442_platform_device = platform_device_register_simple("cx20442",
+								-1, NULL, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: sound/soc/omap/ams-delta.c:630:
+		dev_warn(&ams_delta_audio_platform_device->dev,
+			"failed to unregister AMSDELTA line discipline\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#767: FILE: sound/soc/omap/ams-delta.c:633:
+	snd_soc_jack_free_gpios(&ams_delta_hook_switch,
+			ARRAY_SIZE(ams_delta_hook_switch_gpios),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091102.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 26 warnings, 33 checks, 674 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091102.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
