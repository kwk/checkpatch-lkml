WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
3fc0:                                                       00000000 00000001

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#116: 
#0  0xc0008470 in kernel_init (unused=<value optimized out>)

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#117: 
    at /home/teawater/kernel/arm_versatile_926ejs.glibc_std.standard/build/linux/init/main.c:916

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#120: 
#0  0xc0008470 in kernel_init (unused=<value optimized out>)

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#121: 
    at /home/teawater/kernel/arm_versatile_926ejs.glibc_std.standard/build/linux/init/main.c:916

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#122: 
#1  0xc0042660 in sys_waitid (which=<value optimized out>, upid=<value

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#124: 
    at /home/teawater/kernel/arm_versatile_926ejs.glibc_std.standard/build/linux/kernel/exit.c:1798

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#127: 
#1  0xc0042660 in sys_waitid (which=<value optimized out>, upid=<value

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#129: 
    at /home/teawater/kernel/arm_versatile_926ejs.glibc_std.standard/build/linux/kernel/exit.c:1798

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: arch/arm/kernel/traps.c:251:
+		printk(S2CMARK"r0=0x%08x;\n", (unsigned int)regs->ARM_r0);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#178: FILE: arch/arm/kernel/traps.c:251:
+		printk(S2CMARK"r0=0x%08x;\n", (unsigned int)regs->ARM_r0);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#179: FILE: arch/arm/kernel/traps.c:252:
+		printk(S2CMARK"r1=0x%08x;\n", (unsigned int)regs->ARM_r1);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#179: FILE: arch/arm/kernel/traps.c:252:
+		printk(S2CMARK"r1=0x%08x;\n", (unsigned int)regs->ARM_r1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: arch/arm/kernel/traps.c:253:
+		printk(S2CMARK"r2=0x%08x;\n", (unsigned int)regs->ARM_r2);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#180: FILE: arch/arm/kernel/traps.c:253:
+		printk(S2CMARK"r2=0x%08x;\n", (unsigned int)regs->ARM_r2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#181: FILE: arch/arm/kernel/traps.c:254:
+		printk(S2CMARK"r3=0x%08x;\n", (unsigned int)regs->ARM_r3);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#181: FILE: arch/arm/kernel/traps.c:254:
+		printk(S2CMARK"r3=0x%08x;\n", (unsigned int)regs->ARM_r3);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: arch/arm/kernel/traps.c:255:
+		printk(S2CMARK"r4=0x%08x;\n", (unsigned int)regs->ARM_r4);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#182: FILE: arch/arm/kernel/traps.c:255:
+		printk(S2CMARK"r4=0x%08x;\n", (unsigned int)regs->ARM_r4);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: arch/arm/kernel/traps.c:256:
+		printk(S2CMARK"r5=0x%08x;\n", (unsigned int)regs->ARM_r5);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#183: FILE: arch/arm/kernel/traps.c:256:
+		printk(S2CMARK"r5=0x%08x;\n", (unsigned int)regs->ARM_r5);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#184: FILE: arch/arm/kernel/traps.c:257:
+		printk(S2CMARK"r6=0x%08x;\n", (unsigned int)regs->ARM_r6);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#184: FILE: arch/arm/kernel/traps.c:257:
+		printk(S2CMARK"r6=0x%08x;\n", (unsigned int)regs->ARM_r6);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: arch/arm/kernel/traps.c:258:
+		printk(S2CMARK"r7=0x%08x;\n", (unsigned int)regs->ARM_r7);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#185: FILE: arch/arm/kernel/traps.c:258:
+		printk(S2CMARK"r7=0x%08x;\n", (unsigned int)regs->ARM_r7);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#186: FILE: arch/arm/kernel/traps.c:259:
+		printk(S2CMARK"r8=0x%08x;\n", (unsigned int)regs->ARM_r8);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#186: FILE: arch/arm/kernel/traps.c:259:
+		printk(S2CMARK"r8=0x%08x;\n", (unsigned int)regs->ARM_r8);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: arch/arm/kernel/traps.c:260:
+		printk(S2CMARK"r9=0x%08x;\n", (unsigned int)regs->ARM_r9);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#187: FILE: arch/arm/kernel/traps.c:260:
+		printk(S2CMARK"r9=0x%08x;\n", (unsigned int)regs->ARM_r9);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#188: FILE: arch/arm/kernel/traps.c:261:
+		printk(S2CMARK"r10=0x%08x;\n", (unsigned int)regs->ARM_r10);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#188: FILE: arch/arm/kernel/traps.c:261:
+		printk(S2CMARK"r10=0x%08x;\n", (unsigned int)regs->ARM_r10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: arch/arm/kernel/traps.c:262:
+		printk(S2CMARK"fp=0x%08x;\n", (unsigned int)regs->ARM_fp);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#189: FILE: arch/arm/kernel/traps.c:262:
+		printk(S2CMARK"fp=0x%08x;\n", (unsigned int)regs->ARM_fp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: arch/arm/kernel/traps.c:263:
+		printk(S2CMARK"ip=0x%08x;\n", (unsigned int)regs->ARM_ip);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#190: FILE: arch/arm/kernel/traps.c:263:
+		printk(S2CMARK"ip=0x%08x;\n", (unsigned int)regs->ARM_ip);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: arch/arm/kernel/traps.c:264:
+		printk(S2CMARK"sp=0x%08x;\n", (unsigned int)regs->ARM_sp);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#191: FILE: arch/arm/kernel/traps.c:264:
+		printk(S2CMARK"sp=0x%08x;\n", (unsigned int)regs->ARM_sp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: arch/arm/kernel/traps.c:265:
+		printk(S2CMARK"lr=0x%08x;\n", (unsigned int)regs->ARM_lr);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#192: FILE: arch/arm/kernel/traps.c:265:
+		printk(S2CMARK"lr=0x%08x;\n", (unsigned int)regs->ARM_lr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: arch/arm/kernel/traps.c:266:
+		printk(S2CMARK"pc=0x%08x;\n", (unsigned int)regs->ARM_pc);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#193: FILE: arch/arm/kernel/traps.c:266:
+		printk(S2CMARK"pc=0x%08x;\n", (unsigned int)regs->ARM_pc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: arch/arm/kernel/traps.c:267:
+		printk(S2CMARK"cpsr=0x%08x;\n", (unsigned int)regs->ARM_cpsr);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#194: FILE: arch/arm/kernel/traps.c:267:
+		printk(S2CMARK"cpsr=0x%08x;\n", (unsigned int)regs->ARM_cpsr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: arch/arm/kernel/traps.c:268:
+		printk(S2CMARK"ORIG_r0=0x%08x;\n", (unsigned int)regs->ARM_ORIG_r0);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#195: FILE: arch/arm/kernel/traps.c:268:
+		printk(S2CMARK"ORIG_r0=0x%08x;\n", (unsigned int)regs->ARM_ORIG_r0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#216: FILE: arch/mips/kernel/traps.c:358:
+			printk(S2CMARK"r%d=0x%lx;\n", i, regs->regs[i]);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#216: FILE: arch/mips/kernel/traps.c:358:
+			printk(S2CMARK"r%d=0x%lx;\n", i, regs->regs[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#218: FILE: arch/mips/kernel/traps.c:360:
+		printk(S2CMARK"cp0_status=0x%lx;\n", regs->cp0_status);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#218: FILE: arch/mips/kernel/traps.c:360:
+		printk(S2CMARK"cp0_status=0x%lx;\n", regs->cp0_status);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: arch/mips/kernel/traps.c:361:
+		printk(S2CMARK"hi=0x%lx;\n", regs->hi);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#219: FILE: arch/mips/kernel/traps.c:361:
+		printk(S2CMARK"hi=0x%lx;\n", regs->hi);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/mips/kernel/traps.c:362:
+		printk(S2CMARK"lo=0x%lx;\n", regs->lo);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#220: FILE: arch/mips/kernel/traps.c:362:
+		printk(S2CMARK"lo=0x%lx;\n", regs->lo);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: arch/mips/kernel/traps.c:363:
+		printk(S2CMARK"cp0_badvaddr=0x%lx;\n", regs->cp0_badvaddr);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#221: FILE: arch/mips/kernel/traps.c:363:
+		printk(S2CMARK"cp0_badvaddr=0x%lx;\n", regs->cp0_badvaddr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: arch/mips/kernel/traps.c:364:
+		printk(S2CMARK"cp0_cause=0x%lx;\n", regs->cp0_cause);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#222: FILE: arch/mips/kernel/traps.c:364:
+		printk(S2CMARK"cp0_cause=0x%lx;\n", regs->cp0_cause);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#223: FILE: arch/mips/kernel/traps.c:365:
+		printk(S2CMARK"cp0_epc=0x%lx;\n", regs->cp0_epc);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#223: FILE: arch/mips/kernel/traps.c:365:
+		printk(S2CMARK"cp0_epc=0x%lx;\n", regs->cp0_epc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: arch/x86/kernel/dumpstack_32.c:147:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#251: FILE: arch/x86/kernel/dumpstack_32.c:151:
+		printk(S2CMARK"bx=0x%08x;\n", (unsigned int)regs->bx);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#251: FILE: arch/x86/kernel/dumpstack_32.c:151:
+		printk(S2CMARK"bx=0x%08x;\n", (unsigned int)regs->bx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#252: FILE: arch/x86/kernel/dumpstack_32.c:152:
+		printk(S2CMARK"cx=0x%08x;\n", (unsigned int)regs->cx);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#252: FILE: arch/x86/kernel/dumpstack_32.c:152:
+		printk(S2CMARK"cx=0x%08x;\n", (unsigned int)regs->cx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: arch/x86/kernel/dumpstack_32.c:153:
+		printk(S2CMARK"dx=0x%08x;\n", (unsigned int)regs->dx);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#253: FILE: arch/x86/kernel/dumpstack_32.c:153:
+		printk(S2CMARK"dx=0x%08x;\n", (unsigned int)regs->dx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: arch/x86/kernel/dumpstack_32.c:154:
+		printk(S2CMARK"si=0x%08x;\n", (unsigned int)regs->si);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#254: FILE: arch/x86/kernel/dumpstack_32.c:154:
+		printk(S2CMARK"si=0x%08x;\n", (unsigned int)regs->si);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#255: FILE: arch/x86/kernel/dumpstack_32.c:155:
+		printk(S2CMARK"di=0x%08x;\n", (unsigned int)regs->di);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#255: FILE: arch/x86/kernel/dumpstack_32.c:155:
+		printk(S2CMARK"di=0x%08x;\n", (unsigned int)regs->di);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#256: FILE: arch/x86/kernel/dumpstack_32.c:156:
+		printk(S2CMARK"bp=0x%08x;\n", (unsigned int)regs->bp);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#256: FILE: arch/x86/kernel/dumpstack_32.c:156:
+		printk(S2CMARK"bp=0x%08x;\n", (unsigned int)regs->bp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: arch/x86/kernel/dumpstack_32.c:157:
+		printk(S2CMARK"ax=0x%08x;\n", (unsigned int)regs->ax);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#257: FILE: arch/x86/kernel/dumpstack_32.c:157:
+		printk(S2CMARK"ax=0x%08x;\n", (unsigned int)regs->ax);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: arch/x86/kernel/dumpstack_32.c:158:
+		printk(S2CMARK"ds=0x%08x;\n", (unsigned int)regs->ds);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#258: FILE: arch/x86/kernel/dumpstack_32.c:158:
+		printk(S2CMARK"ds=0x%08x;\n", (unsigned int)regs->ds);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#259: FILE: arch/x86/kernel/dumpstack_32.c:159:
+		printk(S2CMARK"es=0x%08x;\n", (unsigned int)regs->es);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#259: FILE: arch/x86/kernel/dumpstack_32.c:159:
+		printk(S2CMARK"es=0x%08x;\n", (unsigned int)regs->es);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: arch/x86/kernel/dumpstack_32.c:160:
+		printk(S2CMARK"fs=0x%08x;\n", (unsigned int)regs->fs);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#260: FILE: arch/x86/kernel/dumpstack_32.c:160:
+		printk(S2CMARK"fs=0x%08x;\n", (unsigned int)regs->fs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#261: FILE: arch/x86/kernel/dumpstack_32.c:161:
+		printk(S2CMARK"gs=0x%08x;\n", (unsigned int)regs->gs);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#261: FILE: arch/x86/kernel/dumpstack_32.c:161:
+		printk(S2CMARK"gs=0x%08x;\n", (unsigned int)regs->gs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: arch/x86/kernel/dumpstack_32.c:162:
+		printk(S2CMARK"orig_ax=0x%08x;\n", (unsigned int)regs->orig_ax);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#262: FILE: arch/x86/kernel/dumpstack_32.c:162:
+		printk(S2CMARK"orig_ax=0x%08x;\n", (unsigned int)regs->orig_ax);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#263: FILE: arch/x86/kernel/dumpstack_32.c:163:
+		printk(S2CMARK"ip=0x%08x;\n", (unsigned int)regs->ip);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#263: FILE: arch/x86/kernel/dumpstack_32.c:163:
+		printk(S2CMARK"ip=0x%08x;\n", (unsigned int)regs->ip);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: arch/x86/kernel/dumpstack_32.c:164:
+		printk(S2CMARK"cs=0x%08x;\n", (unsigned int)regs->cs);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#264: FILE: arch/x86/kernel/dumpstack_32.c:164:
+		printk(S2CMARK"cs=0x%08x;\n", (unsigned int)regs->cs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#265: FILE: arch/x86/kernel/dumpstack_32.c:165:
+		printk(S2CMARK"flags=0x%08x;\n", (unsigned int)regs->flags);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#265: FILE: arch/x86/kernel/dumpstack_32.c:165:
+		printk(S2CMARK"flags=0x%08x;\n", (unsigned int)regs->flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: arch/x86/kernel/dumpstack_32.c:166:
+		printk(S2CMARK"sp=0x%08x;\n", (unsigned int)&regs->sp);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#266: FILE: arch/x86/kernel/dumpstack_32.c:166:
+		printk(S2CMARK"sp=0x%08x;\n", (unsigned int)&regs->sp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: arch/x86/kernel/dumpstack_32.c:167:
+		printk(S2CMARK"ss=0x%08x;\n", (unsigned int)regs->ss);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#267: FILE: arch/x86/kernel/dumpstack_32.c:167:
+		printk(S2CMARK"ss=0x%08x;\n", (unsigned int)regs->ss);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#290: FILE: arch/x86/kernel/dumpstack_64.c:334:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#294: FILE: arch/x86/kernel/dumpstack_64.c:338:
+		printk(S2CMARK"r15=0x%016x;\n", (unsigned long)regs->r15);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#294: FILE: arch/x86/kernel/dumpstack_64.c:338:
+		printk(S2CMARK"r15=0x%016x;\n", (unsigned long)regs->r15);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#295: FILE: arch/x86/kernel/dumpstack_64.c:339:
+		printk(S2CMARK"r14=0x%016x;\n", (unsigned long)regs->r14);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#295: FILE: arch/x86/kernel/dumpstack_64.c:339:
+		printk(S2CMARK"r14=0x%016x;\n", (unsigned long)regs->r14);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#296: FILE: arch/x86/kernel/dumpstack_64.c:340:
+		printk(S2CMARK"r13=0x%016x;\n", (unsigned long)regs->r13);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#296: FILE: arch/x86/kernel/dumpstack_64.c:340:
+		printk(S2CMARK"r13=0x%016x;\n", (unsigned long)regs->r13);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: arch/x86/kernel/dumpstack_64.c:341:
+		printk(S2CMARK"r12=0x%016x;\n", (unsigned long)regs->r12);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#297: FILE: arch/x86/kernel/dumpstack_64.c:341:
+		printk(S2CMARK"r12=0x%016x;\n", (unsigned long)regs->r12);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#298: FILE: arch/x86/kernel/dumpstack_64.c:342:
+		printk(S2CMARK"bp=0x%016x;\n", (unsigned long)regs->bp);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#298: FILE: arch/x86/kernel/dumpstack_64.c:342:
+		printk(S2CMARK"bp=0x%016x;\n", (unsigned long)regs->bp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#299: FILE: arch/x86/kernel/dumpstack_64.c:343:
+		printk(S2CMARK"bx=0x%016x;\n", (unsigned long)regs->bx);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#299: FILE: arch/x86/kernel/dumpstack_64.c:343:
+		printk(S2CMARK"bx=0x%016x;\n", (unsigned long)regs->bx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: arch/x86/kernel/dumpstack_64.c:344:
+		printk(S2CMARK"r11=0x%016x;\n", (unsigned long)regs->r11);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#300: FILE: arch/x86/kernel/dumpstack_64.c:344:
+		printk(S2CMARK"r11=0x%016x;\n", (unsigned long)regs->r11);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#301: FILE: arch/x86/kernel/dumpstack_64.c:345:
+		printk(S2CMARK"r10=0x%016x;\n", (unsigned long)regs->r10);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#301: FILE: arch/x86/kernel/dumpstack_64.c:345:
+		printk(S2CMARK"r10=0x%016x;\n", (unsigned long)regs->r10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#302: FILE: arch/x86/kernel/dumpstack_64.c:346:
+		printk(S2CMARK"r9=0x%016x;\n", (unsigned long)regs->r9);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#302: FILE: arch/x86/kernel/dumpstack_64.c:346:
+		printk(S2CMARK"r9=0x%016x;\n", (unsigned long)regs->r9);

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/x86/kernel/dumpstack_64.c:347:
+ ^I^Iprintk(S2CMARK"r8=0x%016x;\n", (unsigned long)regs->r8);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: arch/x86/kernel/dumpstack_64.c:347:
+ ^I^Iprintk(S2CMARK"r8=0x%016x;\n", (unsigned long)regs->r8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/x86/kernel/dumpstack_64.c:347:
+ ^I^Iprintk(S2CMARK"r8=0x%016x;\n", (unsigned long)regs->r8);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#303: FILE: arch/x86/kernel/dumpstack_64.c:347:
+ 		printk(S2CMARK"r8=0x%016x;\n", (unsigned long)regs->r8);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#303: FILE: arch/x86/kernel/dumpstack_64.c:347:
+ 		printk(S2CMARK"r8=0x%016x;\n", (unsigned long)regs->r8);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#304: FILE: arch/x86/kernel/dumpstack_64.c:348:
+		printk(S2CMARK"ax=0x%016x;\n", (unsigned long)regs->ax);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#304: FILE: arch/x86/kernel/dumpstack_64.c:348:
+		printk(S2CMARK"ax=0x%016x;\n", (unsigned long)regs->ax);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#305: FILE: arch/x86/kernel/dumpstack_64.c:349:
+		printk(S2CMARK"cx=0x%016x;\n", (unsigned long)regs->cx);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#305: FILE: arch/x86/kernel/dumpstack_64.c:349:
+		printk(S2CMARK"cx=0x%016x;\n", (unsigned long)regs->cx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: arch/x86/kernel/dumpstack_64.c:350:
+		printk(S2CMARK"dx=0x%016x;\n", (unsigned long)regs->dx);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#306: FILE: arch/x86/kernel/dumpstack_64.c:350:
+		printk(S2CMARK"dx=0x%016x;\n", (unsigned long)regs->dx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#307: FILE: arch/x86/kernel/dumpstack_64.c:351:
+		printk(S2CMARK"si=0x%016x;\n", (unsigned long)regs->si);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#307: FILE: arch/x86/kernel/dumpstack_64.c:351:
+		printk(S2CMARK"si=0x%016x;\n", (unsigned long)regs->si);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: arch/x86/kernel/dumpstack_64.c:352:
+		printk(S2CMARK"di=0x%016x;\n", (unsigned long)regs->di);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#308: FILE: arch/x86/kernel/dumpstack_64.c:352:
+		printk(S2CMARK"di=0x%016x;\n", (unsigned long)regs->di);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: arch/x86/kernel/dumpstack_64.c:353:
+		printk(S2CMARK"orig_ax=0x%016x;\n", (unsigned long)regs->orig_ax);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#309: FILE: arch/x86/kernel/dumpstack_64.c:353:
+		printk(S2CMARK"orig_ax=0x%016x;\n", (unsigned long)regs->orig_ax);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#310: FILE: arch/x86/kernel/dumpstack_64.c:354:
+		printk(S2CMARK"ip=0x%016x;\n", (unsigned long)regs->ip);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#310: FILE: arch/x86/kernel/dumpstack_64.c:354:
+		printk(S2CMARK"ip=0x%016x;\n", (unsigned long)regs->ip);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#311: FILE: arch/x86/kernel/dumpstack_64.c:355:
+		printk(S2CMARK"cs=0x%016x;\n", (unsigned long)regs->cs);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#311: FILE: arch/x86/kernel/dumpstack_64.c:355:
+		printk(S2CMARK"cs=0x%016x;\n", (unsigned long)regs->cs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#312: FILE: arch/x86/kernel/dumpstack_64.c:356:
+		printk(S2CMARK"flags=0x%016x;\n", (unsigned long)regs->flags);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#312: FILE: arch/x86/kernel/dumpstack_64.c:356:
+		printk(S2CMARK"flags=0x%016x;\n", (unsigned long)regs->flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#313: FILE: arch/x86/kernel/dumpstack_64.c:357:
+		printk(S2CMARK"sp=0x%016x;\n", (unsigned long)regs->sp);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#313: FILE: arch/x86/kernel/dumpstack_64.c:357:
+		printk(S2CMARK"sp=0x%016x;\n", (unsigned long)regs->sp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#314: FILE: arch/x86/kernel/dumpstack_64.c:358:
+		printk(S2CMARK"ss=0x%016x;\n", (unsigned long)regs->ss);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#314: FILE: arch/x86/kernel/dumpstack_64.c:358:
+		printk(S2CMARK"ss=0x%016x;\n", (unsigned long)regs->ss);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: include/linux/module.h:730:
+extern void module_print_address_for_s2c (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: include/linux/module.h:730:
+extern void module_print_address_for_s2c (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#335: FILE: include/linux/stack2core.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#348: FILE: include/linux/stack2core.h:14:
+	printk(S2CMARK"elf_class=%d\n", ELF_CLASS);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#348: FILE: include/linux/stack2core.h:14:
+	printk(S2CMARK"elf_class=%d\n", ELF_CLASS);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#349: FILE: include/linux/stack2core.h:15:
+	printk(S2CMARK"elf_data=%d\n", ELF_DATA);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#349: FILE: include/linux/stack2core.h:15:
+	printk(S2CMARK"elf_data=%d\n", ELF_DATA);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: include/linux/stack2core.h:16:
+	printk(S2CMARK"elf_arch=%d\n", ELF_ARCH);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#350: FILE: include/linux/stack2core.h:16:
+	printk(S2CMARK"elf_arch=%d\n", ELF_ARCH);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: include/linux/stack2core.h:17:
+	printk(S2CMARK"elf_osabi=%d\n", ELF_OSABI);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#351: FILE: include/linux/stack2core.h:17:
+	printk(S2CMARK"elf_osabi=%d\n", ELF_OSABI);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#358: FILE: include/linux/stack2core.h:24:
+	uint8_t	*stack_end = (uint8_t *)(((unsigned long)stack &

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#359: FILE: include/linux/stack2core.h:24:
(~(THREAD_SIZE - 1))) + THREAD_SIZE);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#364: FILE: include/linux/stack2core.h:29:
+			printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#365: FILE: include/linux/stack2core.h:30:
+			printk(S2CMARK"stack=0x%02x,", stack[0]);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#365: FILE: include/linux/stack2core.h:30:
+			printk(S2CMARK"stack=0x%02x,", stack[0]);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#368: FILE: include/linux/stack2core.h:33:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#368: FILE: include/linux/stack2core.h:33:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: include/linux/stack2core.h:34:
+			printk(" 0x%02x,", stack[0]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#370: FILE: include/linux/stack2core.h:35:
+			i ++;
 			  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#373: FILE: include/linux/stack2core.h:38:
+	printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: include/linux/stack2core.h:41:
+	module_print_address_for_s2c ();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#379: FILE: include/linux/stack2core.h:44:
+	printk(S2CMARK"commandline=%s\n", saved_command_line);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#379: FILE: include/linux/stack2core.h:44:
+	printk(S2CMARK"commandline=%s\n", saved_command_line);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: kernel/module.c:3021:
+module_print_address_for_s2c (void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#407: FILE: kernel/module.c:3026:
+		printk(S2CMARK"add-symbol-file %s.ko 0x%p\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#407: FILE: kernel/module.c:3026:
+		printk(S2CMARK"add-symbol-file %s.ko 0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: kernel/module.c:3027:
+		printk(S2CMARK"add-symbol-file %s.ko 0x%p\n",
+			mod->name, mod->module_core);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#417: FILE: lib/Kconfig.debug:325:
+config STACK2CORE
+	bool "Output stack data when kernel die."
+	depends on DEBUG_KERNEL && (X86 || MIPS || ARM)
+	default y
+	help
+	  If say Y here, kernel will output stack data when it die.  This data
+	  can be convert to core file through program stack2core.  Then GDB can
+	  do clear backtrace with this core file.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#450: FILE: tools/s2c/s2c.c:1:
+/*

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#475: FILE: tools/s2c/s2c.c:26:
+#define NEEDSWAP	((BYTE_ORDER == LITTLE_ENDIAN \

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: tools/s2c/s2c.c:27:
+                          && elf_data == S2C_ELFDATA2MSB) \$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#476: FILE: tools/s2c/s2c.c:27:
+#define NEEDSWAP	((BYTE_ORDER == LITTLE_ENDIAN \
+                          && elf_data == S2C_ELFDATA2MSB) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: tools/s2c/s2c.c:27:
+                          && elf_data == S2C_ELFDATA2MSB) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: tools/s2c/s2c.c:28:
+^I^I         || (BYTE_ORDER == BIG_ENDIAN \$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#477: FILE: tools/s2c/s2c.c:28:
+                          && elf_data == S2C_ELFDATA2MSB) \
+		         || (BYTE_ORDER == BIG_ENDIAN \

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#477: FILE: tools/s2c/s2c.c:28:
+		         || (BYTE_ORDER == BIG_ENDIAN \

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: tools/s2c/s2c.c:29:
+                             && elf_data == S2C_ELFDATA2LSB))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#478: FILE: tools/s2c/s2c.c:29:
+		         || (BYTE_ORDER == BIG_ENDIAN \
+                             && elf_data == S2C_ELFDATA2LSB))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: tools/s2c/s2c.c:29:
+                             && elf_data == S2C_ELFDATA2LSB))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#479: FILE: tools/s2c/s2c.c:30:
+#define SWAP16(a)	(NEEDSWAP ? bswap_16 (a) : a)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#479: FILE: tools/s2c/s2c.c:30:
+#define SWAP16(a)	(NEEDSWAP ? bswap_16 (a) : a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#480: FILE: tools/s2c/s2c.c:31:
+#define SWAP32(a)	(NEEDSWAP ? bswap_32 (a) : a)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#480: FILE: tools/s2c/s2c.c:31:
+#define SWAP32(a)	(NEEDSWAP ? bswap_32 (a) : a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: tools/s2c/s2c.c:32:
+#define SWAP64(a)	(NEEDSWAP ? bswap_64 (a) : a)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#481: FILE: tools/s2c/s2c.c:32:
+#define SWAP64(a)	(NEEDSWAP ? bswap_64 (a) : a)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#483: FILE: tools/s2c/s2c.c:34:
+#define GETU32(ul, str) \
+	if (strncmp (line, str, strlen (str)) == 0) { \
+		ul = strtoul (line + strlen (str), NULL, 0); \
+		return 0; \
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'str' - possible side-effects?
#483: FILE: tools/s2c/s2c.c:34:
+#define GETU32(ul, str) \
+	if (strncmp (line, str, strlen (str)) == 0) { \
+		ul = strtoul (line + strlen (str), NULL, 0); \
+		return 0; \
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#483: FILE: tools/s2c/s2c.c:34:
+#define GETU32(ul, str) \
+	if (strncmp (line, str, strlen (str)) == 0) { \
+		ul = strtoul (line + strlen (str), NULL, 0); \
+		return 0; \
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: tools/s2c/s2c.c:35:
+	if (strncmp (line, str, strlen (str)) == 0) { \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: tools/s2c/s2c.c:35:
+	if (strncmp (line, str, strlen (str)) == 0) { \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: tools/s2c/s2c.c:36:
+		ul = strtoul (line + strlen (str), NULL, 0); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: tools/s2c/s2c.c:36:
+		ul = strtoul (line + strlen (str), NULL, 0); \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#489: FILE: tools/s2c/s2c.c:40:
+#define GETU64(ul, str) \
+	if (strncmp (line, str, strlen (str)) == 0) { \
+		ul = strtoull (line + strlen (str), NULL, 0); \
+		return 0; \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'str' - possible side-effects?
#489: FILE: tools/s2c/s2c.c:40:
+#define GETU64(ul, str) \
+	if (strncmp (line, str, strlen (str)) == 0) { \
+		ul = strtoull (line + strlen (str), NULL, 0); \
+		return 0; \
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#489: FILE: tools/s2c/s2c.c:40:
+#define GETU64(ul, str) \
+	if (strncmp (line, str, strlen (str)) == 0) { \
+		ul = strtoull (line + strlen (str), NULL, 0); \
+		return 0; \
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#490: FILE: tools/s2c/s2c.c:41:
+	if (strncmp (line, str, strlen (str)) == 0) { \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#490: FILE: tools/s2c/s2c.c:41:
+	if (strncmp (line, str, strlen (str)) == 0) { \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: tools/s2c/s2c.c:42:
+		ul = strtoull (line + strlen (str), NULL, 0); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: tools/s2c/s2c.c:42:
+		ul = strtoull (line + strlen (str), NULL, 0); \

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#497: FILE: tools/s2c/s2c.c:48:
+uint8_t	elf_class = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#498: FILE: tools/s2c/s2c.c:49:
+uint8_t	elf_data = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#499: FILE: tools/s2c/s2c.c:50:
+uint8_t	elf_arch = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#500: FILE: tools/s2c/s2c.c:51:
+uint8_t	elf_osabi = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#507: FILE: tools/s2c/s2c.c:58:
+int stack_len = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#509: FILE: tools/s2c/s2c.c:60:
+uint32_t	sp_32 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#510: FILE: tools/s2c/s2c.c:61:
+uint64_t	sp_64 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#514: FILE: tools/s2c/s2c.c:65:
+uint32_t	i386_bx = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#515: FILE: tools/s2c/s2c.c:66:
+uint32_t	i386_cx = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#516: FILE: tools/s2c/s2c.c:67:
+uint32_t	i386_dx = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#517: FILE: tools/s2c/s2c.c:68:
+uint32_t	i386_si = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#518: FILE: tools/s2c/s2c.c:69:
+uint32_t	i386_di = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#519: FILE: tools/s2c/s2c.c:70:
+uint32_t	i386_bp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#520: FILE: tools/s2c/s2c.c:71:
+uint32_t	i386_ax = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#521: FILE: tools/s2c/s2c.c:72:
+uint32_t	i386_ds = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#522: FILE: tools/s2c/s2c.c:73:
+uint32_t	i386_es = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#523: FILE: tools/s2c/s2c.c:74:
+uint32_t	i386_fs = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#524: FILE: tools/s2c/s2c.c:75:
+uint32_t	i386_gs = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#525: FILE: tools/s2c/s2c.c:76:
+uint32_t	i386_orig_ax = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#526: FILE: tools/s2c/s2c.c:77:
+uint32_t	i386_ip = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#527: FILE: tools/s2c/s2c.c:78:
+uint32_t	i386_cs = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#528: FILE: tools/s2c/s2c.c:79:
+uint32_t	i386_flags = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#529: FILE: tools/s2c/s2c.c:80:
+uint32_t	i386_sp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#530: FILE: tools/s2c/s2c.c:81:
+uint32_t	i386_ss = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: tools/s2c/s2c.c:84:
+parse_line_i386 (char *line)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#535: FILE: tools/s2c/s2c.c:86:
+	GETU32 (i386_bx, "bx=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#536: FILE: tools/s2c/s2c.c:87:
+	GETU32 (i386_cx, "cx=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#537: FILE: tools/s2c/s2c.c:88:
+	GETU32 (i386_dx, "dx=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#538: FILE: tools/s2c/s2c.c:89:
+	GETU32 (i386_si, "si=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#539: FILE: tools/s2c/s2c.c:90:
+	GETU32 (i386_di, "di=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#540: FILE: tools/s2c/s2c.c:91:
+	GETU32 (i386_bp, "bp=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: tools/s2c/s2c.c:92:
+	GETU32 (i386_ax, "ax=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#542: FILE: tools/s2c/s2c.c:93:
+	GETU32 (i386_ds, "ds=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: tools/s2c/s2c.c:94:
+	GETU32 (i386_es, "es=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: tools/s2c/s2c.c:95:
+	GETU32 (i386_fs, "fs=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: tools/s2c/s2c.c:96:
+	GETU32 (i386_gs, "gs=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#546: FILE: tools/s2c/s2c.c:97:
+	GETU32 (i386_orig_ax, "orig_ax=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#547: FILE: tools/s2c/s2c.c:98:
+	GETU32 (i386_ip, "ip=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#548: FILE: tools/s2c/s2c.c:99:
+	GETU32 (i386_cs, "cs=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: tools/s2c/s2c.c:100:
+	GETU32 (i386_flags, "flags=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#550: FILE: tools/s2c/s2c.c:101:
+	GETU32 (i386_sp, "sp=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#551: FILE: tools/s2c/s2c.c:102:
+	GETU32 (i386_ss, "ss=");

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#558: FILE: tools/s2c/s2c.c:109:
+uint64_t	x86_64_r15 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#559: FILE: tools/s2c/s2c.c:110:
+uint64_t	x86_64_r14 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#560: FILE: tools/s2c/s2c.c:111:
+uint64_t	x86_64_r13 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#561: FILE: tools/s2c/s2c.c:112:
+uint64_t	x86_64_r12 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#562: FILE: tools/s2c/s2c.c:113:
+uint64_t	x86_64_bp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#563: FILE: tools/s2c/s2c.c:114:
+uint64_t	x86_64_bx = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#564: FILE: tools/s2c/s2c.c:115:
+uint64_t	x86_64_r11 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#565: FILE: tools/s2c/s2c.c:116:
+uint64_t	x86_64_r10 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#566: FILE: tools/s2c/s2c.c:117:
+uint64_t	x86_64_r9 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#567: FILE: tools/s2c/s2c.c:118:
+uint64_t	x86_64_r8 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#568: FILE: tools/s2c/s2c.c:119:
+uint64_t	x86_64_ax = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#569: FILE: tools/s2c/s2c.c:120:
+uint64_t	x86_64_cx = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#570: FILE: tools/s2c/s2c.c:121:
+uint64_t	x86_64_dx = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#571: FILE: tools/s2c/s2c.c:122:
+uint64_t	x86_64_si = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#572: FILE: tools/s2c/s2c.c:123:
+uint64_t	x86_64_di = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#573: FILE: tools/s2c/s2c.c:124:
+uint64_t	x86_64_orig_ax = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#574: FILE: tools/s2c/s2c.c:125:
+uint64_t	x86_64_ip = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#575: FILE: tools/s2c/s2c.c:126:
+uint64_t	x86_64_cs = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#576: FILE: tools/s2c/s2c.c:127:
+uint64_t	x86_64_flags = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#577: FILE: tools/s2c/s2c.c:128:
+uint64_t	x86_64_sp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#578: FILE: tools/s2c/s2c.c:129:
+uint64_t	x86_64_ss = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#581: FILE: tools/s2c/s2c.c:132:
+parse_line_x86_64 (char *line)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: tools/s2c/s2c.c:134:
+	GETU64 (x86_64_r15, "r15=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: tools/s2c/s2c.c:135:
+	GETU64 (x86_64_r14, "r14=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#585: FILE: tools/s2c/s2c.c:136:
+	GETU64 (x86_64_r13, "r13=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#586: FILE: tools/s2c/s2c.c:137:
+	GETU64 (x86_64_r12, "r12=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#587: FILE: tools/s2c/s2c.c:138:
+	GETU64 (x86_64_bp, "bp=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#588: FILE: tools/s2c/s2c.c:139:
+	GETU64 (x86_64_bx, "bx=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#589: FILE: tools/s2c/s2c.c:140:
+	GETU64 (x86_64_r11, "r11=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: tools/s2c/s2c.c:141:
+	GETU64 (x86_64_r10, "r10=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: tools/s2c/s2c.c:142:
+	GETU64 (x86_64_r9, "r9=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#592: FILE: tools/s2c/s2c.c:143:
+	GETU64 (x86_64_r8, "r8=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: tools/s2c/s2c.c:144:
+	GETU64 (x86_64_ax, "ax=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: tools/s2c/s2c.c:145:
+	GETU64 (x86_64_cx, "cx=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#595: FILE: tools/s2c/s2c.c:146:
+	GETU64 (x86_64_dx, "dx=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#596: FILE: tools/s2c/s2c.c:147:
+	GETU64 (x86_64_si, "si=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#597: FILE: tools/s2c/s2c.c:148:
+	GETU64 (x86_64_di, "di=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: tools/s2c/s2c.c:149:
+	GETU64 (x86_64_orig_ax, "orig_ax=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: tools/s2c/s2c.c:150:
+	GETU64 (x86_64_ip, "ip=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#600: FILE: tools/s2c/s2c.c:151:
+	GETU64 (x86_64_cs, "cs=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#601: FILE: tools/s2c/s2c.c:152:
+	GETU64 (x86_64_flags, "flags=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: tools/s2c/s2c.c:153:
+	GETU64 (x86_64_sp, "sp=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: tools/s2c/s2c.c:154:
+	GETU64 (x86_64_ss, "ss=");

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#610: FILE: tools/s2c/s2c.c:161:
+uint32_t	arm_r0 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#611: FILE: tools/s2c/s2c.c:162:
+uint32_t	arm_r1 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#612: FILE: tools/s2c/s2c.c:163:
+uint32_t	arm_r2 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#613: FILE: tools/s2c/s2c.c:164:
+uint32_t	arm_r3 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#614: FILE: tools/s2c/s2c.c:165:
+uint32_t	arm_r4 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#615: FILE: tools/s2c/s2c.c:166:
+uint32_t	arm_r5 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#616: FILE: tools/s2c/s2c.c:167:
+uint32_t	arm_r6 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#617: FILE: tools/s2c/s2c.c:168:
+uint32_t	arm_r7 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#618: FILE: tools/s2c/s2c.c:169:
+uint32_t	arm_r8 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#619: FILE: tools/s2c/s2c.c:170:
+uint32_t	arm_r9 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#620: FILE: tools/s2c/s2c.c:171:
+uint32_t	arm_r10 = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#621: FILE: tools/s2c/s2c.c:172:
+uint32_t	arm_fp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#622: FILE: tools/s2c/s2c.c:173:
+uint32_t	arm_ip = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#623: FILE: tools/s2c/s2c.c:174:
+uint32_t	arm_sp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#624: FILE: tools/s2c/s2c.c:175:
+uint32_t	arm_lr = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#625: FILE: tools/s2c/s2c.c:176:
+uint32_t	arm_pc = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#626: FILE: tools/s2c/s2c.c:177:
+uint32_t	arm_cpsr = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#627: FILE: tools/s2c/s2c.c:178:
+uint32_t	arm_ORIG_r0 = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: tools/s2c/s2c.c:181:
+parse_line_arm (char *line)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#632: FILE: tools/s2c/s2c.c:183:
+	GETU32 (arm_r0, "r0=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#633: FILE: tools/s2c/s2c.c:184:
+	GETU32 (arm_r1, "r1=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#634: FILE: tools/s2c/s2c.c:185:
+	GETU32 (arm_r2, "r2=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#635: FILE: tools/s2c/s2c.c:186:
+	GETU32 (arm_r3, "r3=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: tools/s2c/s2c.c:187:
+	GETU32 (arm_r4, "r4=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#637: FILE: tools/s2c/s2c.c:188:
+	GETU32 (arm_r5, "r5=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#638: FILE: tools/s2c/s2c.c:189:
+	GETU32 (arm_r6, "r6=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#639: FILE: tools/s2c/s2c.c:190:
+	GETU32 (arm_r7, "r7=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#640: FILE: tools/s2c/s2c.c:191:
+	GETU32 (arm_r8, "r8=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#641: FILE: tools/s2c/s2c.c:192:
+	GETU32 (arm_r9, "r9=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: tools/s2c/s2c.c:193:
+	GETU32 (arm_r10, "r10=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#643: FILE: tools/s2c/s2c.c:194:
+	GETU32 (arm_fp, "fp=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#644: FILE: tools/s2c/s2c.c:195:
+	GETU32 (arm_ip, "ip=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#645: FILE: tools/s2c/s2c.c:196:
+	GETU32 (arm_sp, "sp=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: tools/s2c/s2c.c:197:
+	GETU32 (arm_lr, "lr=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: tools/s2c/s2c.c:198:
+	GETU32 (arm_pc, "pc=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#648: FILE: tools/s2c/s2c.c:199:
+	GETU32 (arm_cpsr, "cpsr=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: tools/s2c/s2c.c:200:
+	GETU32 (arm_ORIG_r0, "ORIG_r0=");

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#659: FILE: tools/s2c/s2c.c:210:
+uint32_t	mips32_hi = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#660: FILE: tools/s2c/s2c.c:211:
+uint32_t	mips32_lo = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#661: FILE: tools/s2c/s2c.c:212:
+uint32_t	mips32_cp0_epc = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#662: FILE: tools/s2c/s2c.c:213:
+uint32_t	mips32_cp0_badvaddr = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#663: FILE: tools/s2c/s2c.c:214:
+uint32_t	mips32_cp0_status = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#664: FILE: tools/s2c/s2c.c:215:
+uint32_t	mips32_cp0_cause = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#666: FILE: tools/s2c/s2c.c:217:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#670: FILE: tools/s2c/s2c.c:221:
+uint64_t	mips64_hi = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#671: FILE: tools/s2c/s2c.c:222:
+uint64_t	mips64_lo = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#672: FILE: tools/s2c/s2c.c:223:
+uint64_t	mips64_cp0_epc = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#673: FILE: tools/s2c/s2c.c:224:
+uint64_t	mips64_cp0_badvaddr = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#674: FILE: tools/s2c/s2c.c:225:
+uint64_t	mips64_cp0_status = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#675: FILE: tools/s2c/s2c.c:226:
+uint64_t	mips64_cp0_cause = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#678: FILE: tools/s2c/s2c.c:229:
+parse_line_mips (char *line)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#685: FILE: tools/s2c/s2c.c:236:
+			snprintf (str, 10, "r%d=", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#686: FILE: tools/s2c/s2c.c:237:
+			GETU32 (mips32_r[i], str);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#688: FILE: tools/s2c/s2c.c:239:
+		GETU32 (mips32_cp0_status, "cp0_status=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#689: FILE: tools/s2c/s2c.c:240:
+		GETU32 (mips32_hi, "hi=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#690: FILE: tools/s2c/s2c.c:241:
+		GETU32 (mips32_lo, "lo=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#691: FILE: tools/s2c/s2c.c:242:
+		GETU32 (mips32_cp0_badvaddr, "cp0_badvaddr=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#692: FILE: tools/s2c/s2c.c:243:
+		GETU32 (mips32_cp0_cause, "cp0_cause=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#693: FILE: tools/s2c/s2c.c:244:
+		GETU32 (mips32_cp0_epc, "cp0_epc=");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#695: FILE: tools/s2c/s2c.c:246:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: tools/s2c/s2c.c:246:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: tools/s2c/s2c.c:248:
+			snprintf (str, 10, "r%d=", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: tools/s2c/s2c.c:249:
+			GETU64 (mips64_r[i], str);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#700: FILE: tools/s2c/s2c.c:251:
+		GETU64 (mips64_cp0_status, "cp0_status=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: tools/s2c/s2c.c:252:
+		GETU64 (mips64_hi, "hi=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#702: FILE: tools/s2c/s2c.c:253:
+		GETU64 (mips64_lo, "lo=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#703: FILE: tools/s2c/s2c.c:254:
+		GETU64 (mips64_cp0_badvaddr, "cp0_badvaddr=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#704: FILE: tools/s2c/s2c.c:255:
+		GETU64 (mips64_cp0_cause, "cp0_cause=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: tools/s2c/s2c.c:256:
+		GETU64 (mips64_cp0_epc, "cp0_epc=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#712: FILE: tools/s2c/s2c.c:263:
+parse_line (char *line)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: tools/s2c/s2c.c:265:
+	GETU32 (elf_class, "elf_class=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: tools/s2c/s2c.c:266:
+	GETU32 (elf_data, "elf_data=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#716: FILE: tools/s2c/s2c.c:267:
+	GETU32 (elf_arch, "elf_arch=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#717: FILE: tools/s2c/s2c.c:268:
+	GETU32 (elf_osabi, "elf_osabi=");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#719: FILE: tools/s2c/s2c.c:270:
+	if (strncmp (line, "stack=", sizeof ("stack=") - 1) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#719: FILE: tools/s2c/s2c.c:270:
+	if (strncmp (line, "stack=", sizeof ("stack=") - 1) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: tools/s2c/s2c.c:271:
+		line += sizeof ("stack=") - 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: tools/s2c/s2c.c:274:
+			if (isdigit (line[0]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'line[0]'
#723: FILE: tools/s2c/s2c.c:274:
+			if (isdigit (line[0]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: tools/s2c/s2c.c:275:
+				stack[stack_len++] = strtoul (line, &line, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#731: FILE: tools/s2c/s2c.c:282:
+	if (strncmp (line, "commandline=", sizeof ("commandline=") - 1) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#731: FILE: tools/s2c/s2c.c:282:
+	if (strncmp (line, "commandline=", sizeof ("commandline=") - 1) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#732: FILE: tools/s2c/s2c.c:283:
+		snprintf ((char *)commandline, S2C_ELF_PRARGSZ, "%s",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#733: FILE: tools/s2c/s2c.c:284:
+			  line + sizeof ("commandline=") - 1);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#737: FILE: tools/s2c/s2c.c:288:
+	switch (elf_arch) {
+		case S2C_EM_386:
[...]
+		case S2C_EM_X86_64:
[...]
+		case S2C_EM_ARM:
[...]
+		case S2C_EM_MIPS:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#739: FILE: tools/s2c/s2c.c:290:
+			return parse_line_i386 (line);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#740: FILE: tools/s2c/s2c.c:291:
+			return parse_line_i386 (line);
+			break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#742: FILE: tools/s2c/s2c.c:293:
+			return parse_line_x86_64 (line);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#743: FILE: tools/s2c/s2c.c:294:
+			return parse_line_x86_64 (line);
+			break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: tools/s2c/s2c.c:296:
+			return parse_line_arm (line);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#746: FILE: tools/s2c/s2c.c:297:
+			return parse_line_arm (line);
+			break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: tools/s2c/s2c.c:299:
+			return parse_line_mips (line);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#749: FILE: tools/s2c/s2c.c:300:
+			return parse_line_mips (line);
+			break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#756: FILE: tools/s2c/s2c.c:307:
+iterate_over_lines (FILE *fp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#762: FILE: tools/s2c/s2c.c:313:
+		exit (-1);

ERROR:SPACING: space required before the open parenthesis '('
#765: FILE: tools/s2c/s2c.c:316:
+	while(fgets(line, 256, fp) != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fgets"
#765: FILE: tools/s2c/s2c.c:316:
+	while(fgets(line, 256, fp) != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: tools/s2c/s2c.c:318:
+                linep = strstr (linep, S2CMARK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: tools/s2c/s2c.c:318:
+                linep = strstr (linep, S2CMARK);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: tools/s2c/s2c.c:318:
+                linep = strstr (linep, S2CMARK);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#769: FILE: tools/s2c/s2c.c:320:
+			linep += sizeof (S2CMARK) - 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#770: FILE: tools/s2c/s2c.c:321:
+			if (parse_line (linep)) {

WARNING:TYPO_SPELLING: 'Failied' may be misspelled - perhaps 'Failed'?
#771: FILE: tools/s2c/s2c.c:322:
+				fprintf(stderr, "Failied with parse line %s\n", line);
 				                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#772: FILE: tools/s2c/s2c.c:323:
+				exit (-1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: tools/s2c/s2c.c:327:
+	if (ferror (fp)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#778: FILE: tools/s2c/s2c.c:329:
+		exit (-1);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#785: FILE: tools/s2c/s2c.c:336:
+int	core_buf_size = 0;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#789: FILE: tools/s2c/s2c.c:340:
+typedef struct s2c_elf32_hdr_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#806: FILE: tools/s2c/s2c.c:357:
+typedef struct s2c_elf64_hdr_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#832: FILE: tools/s2c/s2c.c:383:
+typedef struct s2c_elf32_phdr_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#843: FILE: tools/s2c/s2c.c:394:
+typedef struct s2c_elf64_phdr_s {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#862: FILE: tools/s2c/s2c.c:413:
+elfhdr_32 (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#869: FILE: tools/s2c/s2c.c:420:
+	core_buf_size += sizeof (s2c_elf32_hdr_t);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#876: FILE: tools/s2c/s2c.c:427:
+	elf->e_type = SWAP16 (S2C_ET_CORE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#877: FILE: tools/s2c/s2c.c:428:
+	elf->e_machine = SWAP16 (elf_arch);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: tools/s2c/s2c.c:429:
+	elf->e_version = SWAP32 (S2C_EV_CURRENT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: tools/s2c/s2c.c:430:
+	elf->e_phoff = SWAP32 (sizeof (s2c_elf32_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: tools/s2c/s2c.c:430:
+	elf->e_phoff = SWAP32 (sizeof (s2c_elf32_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#881: FILE: tools/s2c/s2c.c:432:
+	elf->e_ehsize = SWAP16 (sizeof (s2c_elf32_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#881: FILE: tools/s2c/s2c.c:432:
+	elf->e_ehsize = SWAP16 (sizeof (s2c_elf32_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#882: FILE: tools/s2c/s2c.c:433:
+	elf->e_phentsize = SWAP16 (sizeof (s2c_elf32_phdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#882: FILE: tools/s2c/s2c.c:433:
+	elf->e_phentsize = SWAP16 (sizeof (s2c_elf32_phdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#884: FILE: tools/s2c/s2c.c:435:
+	elf->e_phnum = SWAP16 (1 + 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#887: FILE: tools/s2c/s2c.c:438:
+	core_buf_size += sizeof (s2c_elf32_phdr_t);

CHECK:SPACING: No space is necessary after a cast
#888: FILE: tools/s2c/s2c.c:439:
+	nhdrp = (s2c_elf32_phdr_t *) nhdr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#889: FILE: tools/s2c/s2c.c:440:
+	nhdrp->p_type = SWAP32 (S2C_PT_NOTE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#899: FILE: tools/s2c/s2c.c:450:
+	core_buf_size += sizeof (s2c_elf32_phdr_t);

CHECK:SPACING: No space is necessary after a cast
#900: FILE: tools/s2c/s2c.c:451:
+	phdrp = (s2c_elf32_phdr_t *) phdr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#901: FILE: tools/s2c/s2c.c:452:
+	phdrp->p_type = SWAP32 (S2C_PT_LOAD);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#902: FILE: tools/s2c/s2c.c:453:
+	phdrp->p_flags = SWAP32 (S2C_PF_R);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#906: FILE: tools/s2c/s2c.c:457:
+	phdrp->p_filesz = phdrp->p_memsz = stack_len + (sp_32 - phdrp->p_vaddr);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#907: FILE: tools/s2c/s2c.c:458:
+	phdrp->p_align = SWAP32 (1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#911: FILE: tools/s2c/s2c.c:462:
+elfhdr_64 (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#918: FILE: tools/s2c/s2c.c:469:
+	core_buf_size += sizeof (s2c_elf64_hdr_t);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#925: FILE: tools/s2c/s2c.c:476:
+	elf->e_type = SWAP16 (S2C_ET_CORE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#926: FILE: tools/s2c/s2c.c:477:
+	elf->e_machine = SWAP16 (elf_arch);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#927: FILE: tools/s2c/s2c.c:478:
+	elf->e_version = SWAP32 (S2C_EV_CURRENT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: tools/s2c/s2c.c:479:
+	elf->e_phoff = SWAP64 (sizeof (s2c_elf64_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: tools/s2c/s2c.c:479:
+	elf->e_phoff = SWAP64 (sizeof (s2c_elf64_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: tools/s2c/s2c.c:481:
+	elf->e_ehsize = SWAP16 (sizeof (s2c_elf64_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: tools/s2c/s2c.c:481:
+	elf->e_ehsize = SWAP16 (sizeof (s2c_elf64_hdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: tools/s2c/s2c.c:482:
+	elf->e_phentsize = SWAP16 (sizeof (s2c_elf64_phdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: tools/s2c/s2c.c:482:
+	elf->e_phentsize = SWAP16 (sizeof (s2c_elf64_phdr_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#933: FILE: tools/s2c/s2c.c:484:
+	elf->e_phnum = SWAP16 (1 + 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#936: FILE: tools/s2c/s2c.c:487:
+	core_buf_size += sizeof (s2c_elf64_phdr_t);

CHECK:SPACING: No space is necessary after a cast
#937: FILE: tools/s2c/s2c.c:488:
+	nhdrp = (s2c_elf64_phdr_t *) nhdr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#938: FILE: tools/s2c/s2c.c:489:
+	nhdrp->p_type = SWAP32 (S2C_PT_NOTE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#948: FILE: tools/s2c/s2c.c:499:
+	core_buf_size += sizeof (s2c_elf64_phdr_t);

CHECK:SPACING: No space is necessary after a cast
#949: FILE: tools/s2c/s2c.c:500:
+	phdrp = (s2c_elf64_phdr_t *) phdr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#950: FILE: tools/s2c/s2c.c:501:
+	phdrp->p_type = SWAP32 (S2C_PT_LOAD);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#951: FILE: tools/s2c/s2c.c:502:
+	phdrp->p_flags = SWAP32 (S2C_PF_R);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#955: FILE: tools/s2c/s2c.c:506:
+	phdrp->p_filesz = phdrp->p_memsz = stack_len + (sp_64 - phdrp->p_vaddr);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#959: FILE: tools/s2c/s2c.c:510:
+typedef struct elf_note_s {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#965: FILE: tools/s2c/s2c.c:516:
+#define roundup(x, y) ((((x) + ((y) - 1)) / (y)) * (y))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#968: FILE: tools/s2c/s2c.c:519:
+fill_elf_note (uint8_t *p, const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#969: FILE: tools/s2c/s2c.c:520:
+fill_elf_note (uint8_t *p, const char *name,
+		int type, void **data, int data_len)

CHECK:SPACING: No space is necessary after a cast
#972: FILE: tools/s2c/s2c.c:523:
+	elf_note_t	*en = (elf_note_t *) p;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#977: FILE: tools/s2c/s2c.c:528:
+	en->n_type = SWAP32 (type);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#978: FILE: tools/s2c/s2c.c:529:
+	en->n_descsz = SWAP32 (data_len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#980: FILE: tools/s2c/s2c.c:531:
+	memcpy (p, name, en->n_namesz);

CHECK:SPACING: No space is necessary after a cast
#982: FILE: tools/s2c/s2c.c:533:
+	p = (uint8_t *) roundup((unsigned long) p, 4);

CHECK:SPACING: No space is necessary after a cast
#987: FILE: tools/s2c/s2c.c:538:
+	p = (uint8_t *) roundup((unsigned long) p, 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#990: FILE: tools/s2c/s2c.c:541:
+	en->n_namesz = SWAP32 (en->n_namesz);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#998: FILE: tools/s2c/s2c.c:549:
+struct s2c_elf_siginfo
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1017: FILE: tools/s2c/s2c.c:568:
+struct i386_elf_prstatus
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1034: FILE: tools/s2c/s2c.c:585:
+} __attribute__ ((aligned(4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1037: FILE: tools/s2c/s2c.c:588:
+i386_elf_prstatus (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1042: FILE: tools/s2c/s2c.c:593:
+	offset = fill_elf_note (core_buf + core_buf_size, "CORE",

CHECK:SPACING: No space is necessary after a cast
#1047: FILE: tools/s2c/s2c.c:598:
+	((s2c_elf32_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1048: FILE: tools/s2c/s2c.c:599:
+	memset (pstat, 0, sizeof(struct i386_elf_prstatus));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1049: FILE: tools/s2c/s2c.c:600:
+	pstat->pr_reg[0] = SWAP32 (i386_bx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1050: FILE: tools/s2c/s2c.c:601:
+	pstat->pr_reg[1] = SWAP32 (i386_cx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1051: FILE: tools/s2c/s2c.c:602:
+	pstat->pr_reg[2] = SWAP32 (i386_dx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1052: FILE: tools/s2c/s2c.c:603:
+	pstat->pr_reg[3] = SWAP32 (i386_si);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1053: FILE: tools/s2c/s2c.c:604:
+	pstat->pr_reg[4] = SWAP32 (i386_di);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1054: FILE: tools/s2c/s2c.c:605:
+	pstat->pr_reg[5] = SWAP32 (i386_bp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1055: FILE: tools/s2c/s2c.c:606:
+	pstat->pr_reg[6] = SWAP32 (i386_ax);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1056: FILE: tools/s2c/s2c.c:607:
+	pstat->pr_reg[7] = SWAP32 (i386_ds);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1057: FILE: tools/s2c/s2c.c:608:
+	pstat->pr_reg[8] = SWAP32 (i386_es);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1058: FILE: tools/s2c/s2c.c:609:
+	pstat->pr_reg[9] = SWAP32 (i386_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1059: FILE: tools/s2c/s2c.c:610:
+	pstat->pr_reg[10] = SWAP32 (i386_gs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1060: FILE: tools/s2c/s2c.c:611:
+	pstat->pr_reg[11] = SWAP32 (i386_orig_ax);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1061: FILE: tools/s2c/s2c.c:612:
+	pstat->pr_reg[12] = SWAP32 (i386_ip);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: tools/s2c/s2c.c:613:
+	pstat->pr_reg[13] = SWAP32 (i386_cs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1063: FILE: tools/s2c/s2c.c:614:
+	pstat->pr_reg[14] = SWAP32 (i386_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: tools/s2c/s2c.c:615:
+	pstat->pr_reg[15] = SWAP32 (i386_sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1065: FILE: tools/s2c/s2c.c:616:
+	pstat->pr_reg[16] = SWAP32 (i386_ss);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1071: FILE: tools/s2c/s2c.c:622:
+struct x86_64_elf_prstatus
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#1088: FILE: tools/s2c/s2c.c:639:
+} __attribute__ ((aligned(8)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1091: FILE: tools/s2c/s2c.c:642:
+x86_64_elf_prstatus (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1096: FILE: tools/s2c/s2c.c:647:
+	offset = fill_elf_note (core_buf + core_buf_size, "CORE",

CHECK:SPACING: No space is necessary after a cast
#1101: FILE: tools/s2c/s2c.c:652:
+	((s2c_elf64_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1102: FILE: tools/s2c/s2c.c:653:
+	memset (pstat, 0, sizeof(struct x86_64_elf_prstatus));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1103: FILE: tools/s2c/s2c.c:654:
+	pstat->pr_reg[0] = SWAP64 (x86_64_r15);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1104: FILE: tools/s2c/s2c.c:655:
+	pstat->pr_reg[1] = SWAP64 (x86_64_r14);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1105: FILE: tools/s2c/s2c.c:656:
+	pstat->pr_reg[2] = SWAP64 (x86_64_r13);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1106: FILE: tools/s2c/s2c.c:657:
+	pstat->pr_reg[3] = SWAP64 (x86_64_r12);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1107: FILE: tools/s2c/s2c.c:658:
+	pstat->pr_reg[4] = SWAP64 (x86_64_bp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1108: FILE: tools/s2c/s2c.c:659:
+	pstat->pr_reg[5] = SWAP64 (x86_64_bx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1109: FILE: tools/s2c/s2c.c:660:
+	pstat->pr_reg[6] = SWAP64 (x86_64_r11);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1110: FILE: tools/s2c/s2c.c:661:
+	pstat->pr_reg[7] = SWAP64 (x86_64_r10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1111: FILE: tools/s2c/s2c.c:662:
+	pstat->pr_reg[8] = SWAP64 (x86_64_r9);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1112: FILE: tools/s2c/s2c.c:663:
+	pstat->pr_reg[9] = SWAP64 (x86_64_r8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1113: FILE: tools/s2c/s2c.c:664:
+	pstat->pr_reg[10] = SWAP64 (x86_64_ax);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: tools/s2c/s2c.c:665:
+	pstat->pr_reg[11] = SWAP64 (x86_64_cx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1115: FILE: tools/s2c/s2c.c:666:
+	pstat->pr_reg[12] = SWAP64 (x86_64_dx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1116: FILE: tools/s2c/s2c.c:667:
+	pstat->pr_reg[13] = SWAP64 (x86_64_si);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1117: FILE: tools/s2c/s2c.c:668:
+	pstat->pr_reg[14] = SWAP64 (x86_64_di);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1118: FILE: tools/s2c/s2c.c:669:
+	pstat->pr_reg[15] = SWAP64 (x86_64_orig_ax);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1119: FILE: tools/s2c/s2c.c:670:
+	pstat->pr_reg[16] = SWAP64 (x86_64_ip);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1120: FILE: tools/s2c/s2c.c:671:
+	pstat->pr_reg[17] = SWAP64 (x86_64_cs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1121: FILE: tools/s2c/s2c.c:672:
+	pstat->pr_reg[18] = SWAP64 (x86_64_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1122: FILE: tools/s2c/s2c.c:673:
+	pstat->pr_reg[19] = SWAP64 (x86_64_sp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: tools/s2c/s2c.c:674:
+ ^Ipstat->pr_reg[20] = SWAP64 (x86_64_ss);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1123: FILE: tools/s2c/s2c.c:674:
+ ^Ipstat->pr_reg[20] = SWAP64 (x86_64_ss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: tools/s2c/s2c.c:674:
+ ^Ipstat->pr_reg[20] = SWAP64 (x86_64_ss);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1123: FILE: tools/s2c/s2c.c:674:
+ 	pstat->pr_reg[20] = SWAP64 (x86_64_ss);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1129: FILE: tools/s2c/s2c.c:680:
+struct arm_elf_prstatus
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1146: FILE: tools/s2c/s2c.c:697:
+} __attribute__ ((aligned(4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1149: FILE: tools/s2c/s2c.c:700:
+arm_elf_prstatus (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1154: FILE: tools/s2c/s2c.c:705:
+	offset = fill_elf_note (core_buf + core_buf_size, "CORE",

CHECK:SPACING: No space is necessary after a cast
#1159: FILE: tools/s2c/s2c.c:710:
+	((s2c_elf32_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1160: FILE: tools/s2c/s2c.c:711:
+	memset (pstat, 0, sizeof(struct arm_elf_prstatus));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1161: FILE: tools/s2c/s2c.c:712:
+	pstat->pr_reg[0] = SWAP32 (arm_r0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1162: FILE: tools/s2c/s2c.c:713:
+	pstat->pr_reg[1] = SWAP32 (arm_r1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1163: FILE: tools/s2c/s2c.c:714:
+	pstat->pr_reg[2] = SWAP32 (arm_r2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1164: FILE: tools/s2c/s2c.c:715:
+	pstat->pr_reg[3] = SWAP32 (arm_r3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1165: FILE: tools/s2c/s2c.c:716:
+	pstat->pr_reg[4] = SWAP32 (arm_r4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1166: FILE: tools/s2c/s2c.c:717:
+	pstat->pr_reg[5] = SWAP32 (arm_r5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1167: FILE: tools/s2c/s2c.c:718:
+	pstat->pr_reg[6] = SWAP32 (arm_r6);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1168: FILE: tools/s2c/s2c.c:719:
+	pstat->pr_reg[7] = SWAP32 (arm_r7);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1169: FILE: tools/s2c/s2c.c:720:
+	pstat->pr_reg[8] = SWAP32 (arm_r8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1170: FILE: tools/s2c/s2c.c:721:
+	pstat->pr_reg[9] = SWAP32 (arm_r9);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: tools/s2c/s2c.c:722:
+	pstat->pr_reg[10] = SWAP32 (arm_r10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1172: FILE: tools/s2c/s2c.c:723:
+	pstat->pr_reg[11] = SWAP32 (arm_fp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1173: FILE: tools/s2c/s2c.c:724:
+	pstat->pr_reg[12] = SWAP32 (arm_ip);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1174: FILE: tools/s2c/s2c.c:725:
+	pstat->pr_reg[13] = SWAP32 (arm_sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1175: FILE: tools/s2c/s2c.c:726:
+	pstat->pr_reg[14] = SWAP32 (arm_lr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1176: FILE: tools/s2c/s2c.c:727:
+	pstat->pr_reg[15] = SWAP32 (arm_pc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1177: FILE: tools/s2c/s2c.c:728:
+	pstat->pr_reg[16] = SWAP32 (arm_cpsr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1178: FILE: tools/s2c/s2c.c:729:
+	pstat->pr_reg[17] = SWAP32 (arm_ORIG_r0);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1184: FILE: tools/s2c/s2c.c:735:
+struct mips32_elf_prstatus
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1201: FILE: tools/s2c/s2c.c:752:
+} __attribute__ ((aligned(4)));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1204: FILE: tools/s2c/s2c.c:755:
+struct mips64_elf_prstatus
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#1221: FILE: tools/s2c/s2c.c:772:
+} __attribute__ ((aligned(8)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1240: FILE: tools/s2c/s2c.c:791:
+mips_elf_prstatus (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1247: FILE: tools/s2c/s2c.c:798:
+		offset = fill_elf_note (core_buf + core_buf_size, "CORE",

CHECK:SPACING: No space is necessary after a cast
#1252: FILE: tools/s2c/s2c.c:803:
+		((s2c_elf32_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1253: FILE: tools/s2c/s2c.c:804:
+		memset (pstat, 0, sizeof(struct mips32_elf_prstatus));

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1255: FILE: tools/s2c/s2c.c:806:
+		for (offset = 0; offset < 32; offset ++)
 		                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1256: FILE: tools/s2c/s2c.c:807:
+			pstat->pr_reg[MIPS32_EF_R0 + offset] = SWAP32 (mips32_r[offset]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1257: FILE: tools/s2c/s2c.c:808:
+		pstat->pr_reg[MIPS32_EF_LO] = SWAP32 (mips32_lo);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1258: FILE: tools/s2c/s2c.c:809:
+		pstat->pr_reg[MIPS32_EF_HI] = SWAP32 (mips32_hi);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1259: FILE: tools/s2c/s2c.c:810:
+		pstat->pr_reg[MIPS32_EF_CP0_EPC] = SWAP32 (mips32_cp0_epc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1260: FILE: tools/s2c/s2c.c:811:
+		pstat->pr_reg[MIPS32_EF_CP0_BADVADDR] = SWAP32 (mips32_cp0_badvaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1261: FILE: tools/s2c/s2c.c:812:
+		pstat->pr_reg[MIPS32_EF_CP0_STATUS] = SWAP32 (mips32_cp0_status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1262: FILE: tools/s2c/s2c.c:813:
+		pstat->pr_reg[MIPS32_EF_CP0_CAUSE] = SWAP32 (mips32_cp0_cause);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1264: FILE: tools/s2c/s2c.c:815:
+
+	}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1265: FILE: tools/s2c/s2c.c:816:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1265: FILE: tools/s2c/s2c.c:816:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1268: FILE: tools/s2c/s2c.c:819:
+		offset = fill_elf_note (core_buf + core_buf_size, "CORE",

CHECK:SPACING: No space is necessary after a cast
#1273: FILE: tools/s2c/s2c.c:824:
+		((s2c_elf64_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1274: FILE: tools/s2c/s2c.c:825:
+		memset (pstat, 0, sizeof(struct mips64_elf_prstatus));

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1276: FILE: tools/s2c/s2c.c:827:
+		for (offset = 0; offset < 32; offset ++)
 		                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1277: FILE: tools/s2c/s2c.c:828:
+			pstat->pr_reg[MIPS64_EF_R0 + offset] = SWAP64 (mips64_r[offset]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1278: FILE: tools/s2c/s2c.c:829:
+		pstat->pr_reg[MIPS64_EF_LO] = SWAP64 (mips64_lo);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1279: FILE: tools/s2c/s2c.c:830:
+		pstat->pr_reg[MIPS64_EF_HI] = SWAP64 (mips64_hi);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1280: FILE: tools/s2c/s2c.c:831:
+		pstat->pr_reg[MIPS64_EF_CP0_EPC] = SWAP64 (mips64_cp0_epc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1281: FILE: tools/s2c/s2c.c:832:
+		pstat->pr_reg[MIPS64_EF_CP0_BADVADDR] = SWAP64 (mips64_cp0_badvaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1282: FILE: tools/s2c/s2c.c:833:
+		pstat->pr_reg[MIPS64_EF_CP0_STATUS] = SWAP64 (mips64_cp0_status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1283: FILE: tools/s2c/s2c.c:834:
+		pstat->pr_reg[MIPS64_EF_CP0_CAUSE] = SWAP64 (mips64_cp0_cause);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1288: FILE: tools/s2c/s2c.c:839:
+struct s2c_elf_prpsinfo_32
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1302: FILE: tools/s2c/s2c.c:853:
+struct s2c_elf_prpsinfo_64
+{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1318: FILE: tools/s2c/s2c.c:869:
+save_pinfo_32 (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1323: FILE: tools/s2c/s2c.c:874:
+	offset = fill_elf_note (core_buf + core_buf_size, "CORE",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1328: FILE: tools/s2c/s2c.c:879:
+	memset (pinfo, 0, sizeof(struct s2c_elf_prpsinfo_32));

CHECK:SPACING: No space is necessary after a cast
#1334: FILE: tools/s2c/s2c.c:885:
+	((s2c_elf32_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1338: FILE: tools/s2c/s2c.c:889:
+save_pinfo_64 (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1343: FILE: tools/s2c/s2c.c:894:
+	offset = fill_elf_note (core_buf + core_buf_size, "CORE",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1348: FILE: tools/s2c/s2c.c:899:
+	memset (pinfo, 0, sizeof(struct s2c_elf_prpsinfo_64));

CHECK:SPACING: No space is necessary after a cast
#1354: FILE: tools/s2c/s2c.c:905:
+	((s2c_elf64_phdr_t *) nhdr)->p_filesz += offset;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1358: FILE: tools/s2c/s2c.c:909:
+stack_32 (void)

CHECK:SPACING: No space is necessary after a cast
#1360: FILE: tools/s2c/s2c.c:911:
+	((s2c_elf32_phdr_t *) phdr)->p_offset += ((s2c_elf32_phdr_t *)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1362: FILE: tools/s2c/s2c.c:912:
+	memset (core_buf + core_buf_size, 0, (sp_32 - ((s2c_elf32_phdr_t *)

CHECK:SPACING: No space is necessary after a cast
#1364: FILE: tools/s2c/s2c.c:913:
+	core_buf_size += sp_32 - ((s2c_elf32_phdr_t *) phdr)->p_vaddr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1365: FILE: tools/s2c/s2c.c:914:
+	memcpy (core_buf + core_buf_size, stack, stack_len);

CHECK:SPACING: No space is necessary after a cast
#1369: FILE: tools/s2c/s2c.c:918:
+		((s2c_elf32_phdr_t *) nhdr)->p_offset = bswap_32(((s2c_elf32_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1371: FILE: tools/s2c/s2c.c:919:
+		((s2c_elf32_phdr_t *) nhdr)->p_filesz = bswap_32(((s2c_elf32_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1373: FILE: tools/s2c/s2c.c:920:
+		((s2c_elf32_phdr_t *) phdr)->p_offset = bswap_32(((s2c_elf32_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1375: FILE: tools/s2c/s2c.c:921:
+		((s2c_elf32_phdr_t *) phdr)->p_vaddr = bswap_32(((s2c_elf32_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1377: FILE: tools/s2c/s2c.c:922:
+		((s2c_elf32_phdr_t *) phdr)->p_filesz = bswap_32(((s2c_elf32_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1379: FILE: tools/s2c/s2c.c:923:
+		((s2c_elf32_phdr_t *) phdr)->p_memsz = bswap_32(((s2c_elf32_phdr_t

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1385: FILE: tools/s2c/s2c.c:928:
+stack_64 (void)

CHECK:SPACING: No space is necessary after a cast
#1387: FILE: tools/s2c/s2c.c:930:
+	((s2c_elf64_phdr_t *) phdr)->p_offset += ((s2c_elf64_phdr_t *)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1389: FILE: tools/s2c/s2c.c:931:
+	memset (core_buf + core_buf_size, 0, (sp_64 - ((s2c_elf64_phdr_t *)

CHECK:SPACING: No space is necessary after a cast
#1391: FILE: tools/s2c/s2c.c:932:
+	core_buf_size += sp_64 - ((s2c_elf64_phdr_t *) phdr)->p_vaddr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1392: FILE: tools/s2c/s2c.c:933:
+	memcpy (core_buf + core_buf_size, stack, stack_len);

CHECK:SPACING: No space is necessary after a cast
#1396: FILE: tools/s2c/s2c.c:937:
+		((s2c_elf64_phdr_t *) nhdr)->p_offset = bswap_64(((s2c_elf64_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1398: FILE: tools/s2c/s2c.c:938:
+		((s2c_elf64_phdr_t *) nhdr)->p_filesz = bswap_64(((s2c_elf64_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1400: FILE: tools/s2c/s2c.c:939:
+		((s2c_elf64_phdr_t *) phdr)->p_offset = bswap_64(((s2c_elf64_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: tools/s2c/s2c.c:940:
+		((s2c_elf64_phdr_t *) phdr)->p_vaddr = bswap_64(((s2c_elf64_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1404: FILE: tools/s2c/s2c.c:941:
+		((s2c_elf64_phdr_t *) phdr)->p_filesz = bswap_64(((s2c_elf64_phdr_t

CHECK:SPACING: No space is necessary after a cast
#1406: FILE: tools/s2c/s2c.c:942:
+		((s2c_elf64_phdr_t *) phdr)->p_memsz = bswap_64(((s2c_elf64_phdr_t

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: tools/s2c/s2c.c:947:
+main(int argc,char *argv[],char *envp[])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: tools/s2c/s2c.c:947:
+main(int argc,char *argv[],char *envp[])
                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1415: FILE: tools/s2c/s2c.c:950:
+	iterate_over_lines (stdin);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1417: FILE: tools/s2c/s2c.c:952:
+	switch (elf_arch) {
+		case S2C_EM_386:
[...]
+		case S2C_EM_X86_64:
[...]
+		case S2C_EM_ARM:
[...]
+		case S2C_EM_MIPS:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1438: FILE: tools/s2c/s2c.c:973:
+		elfhdr_32 ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1440: FILE: tools/s2c/s2c.c:975:
+		elfhdr_64 ();

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1442: FILE: tools/s2c/s2c.c:977:
+	switch (elf_arch) {
+		case S2C_EM_386:
[...]
+		case S2C_EM_X86_64:
[...]
+		case S2C_EM_ARM:
[...]
+		case S2C_EM_MIPS:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1444: FILE: tools/s2c/s2c.c:979:
+			i386_elf_prstatus ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1447: FILE: tools/s2c/s2c.c:982:
+			x86_64_elf_prstatus ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1450: FILE: tools/s2c/s2c.c:985:
+			arm_elf_prstatus ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1453: FILE: tools/s2c/s2c.c:988:
+			mips_elf_prstatus ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1458: FILE: tools/s2c/s2c.c:993:
+		save_pinfo_32 ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1460: FILE: tools/s2c/s2c.c:995:
+		save_pinfo_64 ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1464: FILE: tools/s2c/s2c.c:999:
+		stack_32 ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1466: FILE: tools/s2c/s2c.c:1001:
+		stack_64 ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: tools/s2c/s2c.c:1003:
+	if (write (STDOUT_FILENO, core_buf, core_buf_size) != core_buf_size) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1470: FILE: tools/s2c/s2c.c:1005:
+		exit (-1);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 105 errors, 378 warnings, 122 checks, 1282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
