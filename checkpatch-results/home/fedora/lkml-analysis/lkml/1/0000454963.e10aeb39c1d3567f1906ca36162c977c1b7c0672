WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Begorrah - patches from Irish people on Paddy's day, who would have though it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: mm/page_alloc.c:690:
+static struct page *__rmqueue_smallest(struct zone *zone, unsigned int order,
+						int migratetype)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: mm/page_alloc.c:693:
+	struct free_area * area;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area[current_order]
#158: FILE: mm/page_alloc.c:698:
+		area = &(zone->free_area[current_order]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: mm/page_alloc.c:703:
+		page = list_entry(area->free_list[migratetype].next,
+							struct page, lru);

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#167: FILE: mm/page_alloc.c:707:
+		__mod_zone_page_state(zone, NR_FREE_PAGES, - (1UL << order));
 		                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: mm/page_alloc.c:715:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#186: FILE: mm/page_alloc.c:722:
+	[MIGRATE_UNMOVABLE]   = { MIGRATE_RECLAIMABLE, MIGRATE_MOVABLE,   MIGRATE_HIGHATOMIC, MIGRATE_RESERVE },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#187: FILE: mm/page_alloc.c:723:
+	[MIGRATE_RECLAIMABLE] = { MIGRATE_UNMOVABLE,   MIGRATE_MOVABLE,   MIGRATE_HIGHATOMIC, MIGRATE_RESERVE },

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#188: FILE: mm/page_alloc.c:724:
+	[MIGRATE_MOVABLE]     = { MIGRATE_RECLAIMABLE, MIGRATE_UNMOVABLE, MIGRATE_HIGHATOMIC, MIGRATE_RESERVE },

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#189: FILE: mm/page_alloc.c:725:
+	[MIGRATE_HIGHATOMIC]  = { MIGRATE_RECLAIMABLE, MIGRATE_UNMOVABLE, MIGRATE_MOVABLE,    MIGRATE_RESERVE },

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#190: FILE: mm/page_alloc.c:726:
+	[MIGRATE_RESERVE]     = { MIGRATE_RESERVE,     MIGRATE_RESERVE,   MIGRATE_RESERVE,    MIGRATE_RESERVE }, /* Never used */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#276: FILE: mm/page_alloc.c:2375:
+	reserve = roundup(zone->pages_min, MAX_ORDER_NR_PAGES) >> (MAX_ORDER-1);
 	                                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#329: FILE: mm/page_alloc.c:2456:
+		if ((pfn & (MAX_ORDER_NR_PAGES-1)) == 0 &&
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: mm/page_alloc.c:2457:
+		if ((pfn & (MAX_ORDER_NR_PAGES-1)) == 0 &&
+				get_pageblock_migratetype(page) != MIGRATE_RESERVE)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454963.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 7 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454963.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
