CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: include/linux/seq_file.h:136:
+extern struct list_head *seq_list_start_rcu(struct list_head *head,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/seq_file.h:138:
+extern struct list_head *seq_list_start_head_rcu(struct list_head *head,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: include/linux/seq_file.h:140:
+extern struct list_head *seq_list_next_rcu(void *v, struct list_head *head,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: include/linux/seq_file.h:152:
+extern struct hlist_node *seq_hlist_start_rcu(struct hlist_head *head,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/linux/seq_file.h:154:
+extern struct hlist_node *seq_hlist_start_head_rcu(struct hlist_head *head,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/seq_file.h:156:
+extern struct hlist_node *seq_hlist_next_rcu(void *v, struct hlist_head *head,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#188: FILE: include/linux/rculist.h:409:
+#define __hlist_for_each_rcu(pos, head)			\
+	for (pos = rcu_dereference((head)->first);	\
+	     pos && ({ prefetch(pos->next); 1; });	\
+	     pos = rcu_dereference(pos->next))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009961.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 7 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009961.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
