WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#57: FILE: drivers/input/lirc/Kconfig:99:
+config LIRC_SIR
+	tristate "Built-in SIR IrDA port"
+	default n
+	depends on LIRC_DEV
+	help
+	  Driver for the SIR IrDA port
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: drivers/input/lirc/lirc_sir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#101: FILE: drivers/input/lirc/lirc_sir.c:18:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/input/lirc/lirc_sir.c:19:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: drivers/input/lirc/lirc_sir.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'miliseconds' may be misspelled - perhaps 'milliseconds'?
#175: FILE: drivers/input/lirc/lirc_sir.c:92:
+/* 10bit * 1s/115200bit in miliseconds = 87ms*/
                            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#176: FILE: drivers/input/lirc/lirc_sir.c:93:
+#define TIME_CONST (10000000ul/115200ul)
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#207: FILE: drivers/input/lirc/lirc_sir.c:124:
+static unsigned long pulse_width = (13-LIRC_ON_SA1100_TRANSMITTER_LATENCY);
                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#209: FILE: drivers/input/lirc/lirc_sir.c:126:
+static unsigned long space_width = (13-LIRC_ON_SA1100_TRANSMITTER_LATENCY);
                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#224: FILE: drivers/input/lirc/lirc_sir.c:141:
+#define TIME_CONST (9000000ul/115200ul)
                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/input/lirc/lirc_sir.c:144:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#230: FILE: drivers/input/lirc/lirc_sir.c:147:
+#define SIR_TIMEOUT	(HZ*5/100)
                    	   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#230: FILE: drivers/input/lirc/lirc_sir.c:147:
+#define SIR_TIMEOUT	(HZ*5/100)
                    	     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#266: FILE: drivers/input/lirc/lirc_sir.c:183:
+			printk(KERN_DEBUG LIRC_DRIVER_NAME ": "		\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: drivers/input/lirc/lirc_sir.c:194:
+static ssize_t lirc_read(struct file *file, char *buf, size_t count,
+		loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/input/lirc/lirc_sir.c:196:
+static ssize_t lirc_write(struct file *file, const char *buf, size_t n,
+		loff_t *pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/input/lirc/lirc_sir.c:198:
+static int lirc_ioctl(struct inode *node, struct file *filep, unsigned int cmd,
+		unsigned long arg);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#322: FILE: drivers/input/lirc/lirc_sir.c:239:
+#define MAX_UDELAY_US (MAX_UDELAY_MS*1000)
                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/input/lirc/lirc_sir.c:278:
+static ssize_t lirc_read(struct file *file, char *buf, size_t count,
+		loff_t *ppos)

CHECK:SPACING: No space is necessary after a cast
#374: FILE: drivers/input/lirc/lirc_sir.c:291:
+			if (copy_to_user((void *) buf + n,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/input/lirc/lirc_sir.c:292:
+			if (copy_to_user((void *) buf + n,
+					(void *) (rx_buf + rx_head),

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/input/lirc/lirc_sir.c:292:
+					(void *) (rx_buf + rx_head),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#399: FILE: drivers/input/lirc/lirc_sir.c:316:
+}
+static ssize_t lirc_write(struct file *file, const char *buf, size_t n,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/input/lirc/lirc_sir.c:317:
+static ssize_t lirc_write(struct file *file, const char *buf, size_t n,
+				loff_t *pos)

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR3>
#413: FILE: drivers/input/lirc/lirc_sir.c:330:
+	Ser2UTCR3 = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#431: FILE: drivers/input/lirc/lirc_sir.c:348:
+	udelay(1000); /* wait 1ms for IR diode to recover */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTSR0>
#434: FILE: drivers/input/lirc/lirc_sir.c:351:
+	Ser2UTSR0 &= (UTSR0_RID | UTSR0_RBB | UTSR0_REB);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#436: FILE: drivers/input/lirc/lirc_sir.c:353:
+	Ser2UTCR3 = UTCR3_RXE|UTCR3_RIE;
 	                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/input/lirc/lirc_sir.c:359:
+static int lirc_ioctl(struct inode *node, struct file *filep, unsigned int cmd,
+		unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#471: FILE: drivers/input/lirc/lirc_sir.c:388:
+		retval = put_user(value, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#476: FILE: drivers/input/lirc/lirc_sir.c:393:
+		retval = get_user(value, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/input/lirc/lirc_sir.c:397:
+		retval = get_user(ivalue, (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#487: FILE: drivers/input/lirc/lirc_sir.c:404:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#487: FILE: drivers/input/lirc/lirc_sir.c:404:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#487: FILE: drivers/input/lirc/lirc_sir.c:404:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                              ^

CHECK:SPACING: No space is necessary after a cast
#488: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#488: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#488: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                           ^

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long) 1000000L' could be '1000000LUL'
#488: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:SPACING: No space is necessary after a cast
#495: FILE: drivers/input/lirc/lirc_sir.c:412:
+		retval = get_user(ivalue, (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#501: FILE: drivers/input/lirc/lirc_sir.c:418:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#501: FILE: drivers/input/lirc/lirc_sir.c:418:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#501: FILE: drivers/input/lirc/lirc_sir.c:418:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                              ^

CHECK:SPACING: No space is necessary after a cast
#502: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#502: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#502: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                           ^

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long) 1000000L' could be '1000000LUL'
#502: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#512: FILE: drivers/input/lirc/lirc_sir.c:429:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#518: FILE: drivers/input/lirc/lirc_sir.c:435:
+			retval = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#521: FILE: drivers/input/lirc/lirc_sir.c:438:
+			retval = -ENOSYS;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#537: FILE: drivers/input/lirc/lirc_sir.c:454:
+	/* statistically pulses are ~TIME_CONST/2 too long: we could
+	   maybe make this more exactly but this is good enough */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#537: FILE: drivers/input/lirc/lirc_sir.c:454:
+	   maybe make this more exactly but this is good enough */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#540: FILE: drivers/input/lirc/lirc_sir.c:457:
+		if (newval > TIME_CONST/2)
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#541: FILE: drivers/input/lirc/lirc_sir.c:458:
+			newval -= TIME_CONST/2;
 			                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#546: FILE: drivers/input/lirc/lirc_sir.c:463:
+		newval += TIME_CONST/2;
 		                    ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#558: FILE: drivers/input/lirc/lirc_sir.c:475:
+static struct file_operations lirc_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/input/lirc/lirc_sir.c:486:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/input/lirc/lirc_sir.c:494:
+       .name^I^I= LIRC_DRIVER_NAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/input/lirc/lirc_sir.c:495:
+       .minor^I^I= -1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/input/lirc/lirc_sir.c:496:
+       .code_length^I= 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/input/lirc/lirc_sir.c:497:
+       .sample_rate^I= 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/input/lirc/lirc_sir.c:498:
+       .data^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/input/lirc/lirc_sir.c:499:
+       .add_to_buf^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/input/lirc/lirc_sir.c:500:
+       .get_queue^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/input/lirc/lirc_sir.c:501:
+       .set_use_inc^I= set_use_inc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/input/lirc/lirc_sir.c:502:
+       .set_use_dec^I= set_use_dec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/input/lirc/lirc_sir.c:503:
+       .fops^I^I= &lirc_fops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/input/lirc/lirc_sir.c:504:
+       .dev^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/input/lirc/lirc_sir.c:505:
+       .owner^I^I= THIS_MODULE,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#591: FILE: drivers/input/lirc/lirc_sir.c:508:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#597: FILE: drivers/input/lirc/lirc_sir.c:514:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_chrdev', this function's name, in a string
#597: FILE: drivers/input/lirc/lirc_sir.c:514:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#618: FILE: drivers/input/lirc/lirc_sir.c:535:
+		deltv = deltv*1000000 +
 		             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#627: FILE: drivers/input/lirc/lirc_sir.c:544:
+	/* if last received signal was a pulse, but receiving stopped
+	   within the 9 bit frame, we need to finish this pulse and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#629: FILE: drivers/input/lirc/lirc_sir.c:546:
+	   upper layers will receive two sequences next time. */

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTSR1>
#670: FILE: drivers/input/lirc/lirc_sir.c:587:
+			bstat = Ser2UTSR1;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTDR>
#680: FILE: drivers/input/lirc/lirc_sir.c:597:
+		bstat = Ser2UTDR;

CHECK:SPACING: No space is necessary after a cast
#690: FILE: drivers/input/lirc/lirc_sir.c:607:
+			dprintk("%d data: %u\n", n, (unsigned int) data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#693: FILE: drivers/input/lirc/lirc_sir.c:610:
+		} while (status & UTSR0_RID && /* do not empty fifo in
+						order to get UTSR0_RID in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#694: FILE: drivers/input/lirc/lirc_sir.c:611:
+						any case */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#697: FILE: drivers/input/lirc/lirc_sir.c:614:
+		if (status&UTSR0_RID) {
 		          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#698: FILE: drivers/input/lirc/lirc_sir.c:615:
+			add_read_queue(0 , deltv - n * TIME_CONST); /*space*/
 			                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#706: FILE: drivers/input/lirc/lirc_sir.c:623:
+		printk(KERN_ERR "transmit fifo not full, shouldn't happen\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#720: FILE: drivers/input/lirc/lirc_sir.c:637:
+		switch (iir&UART_IIR_ID) { /* FIXME toto treba preriedit */
 		           ^

CHECK:SPACING: No space is necessary after a cast
#722: FILE: drivers/input/lirc/lirc_sir.c:639:
+			(void) inb(io + UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#725: FILE: drivers/input/lirc/lirc_sir.c:642:
+			(void) inb(io + UART_LSR);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#728: FILE: drivers/input/lirc/lirc_sir.c:645:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#744: FILE: drivers/input/lirc/lirc_sir.c:661:
+				/* if nothing came in last X cycles,
+				   it was gap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#744: FILE: drivers/input/lirc/lirc_sir.c:661:
+				   it was gap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#763: FILE: drivers/input/lirc/lirc_sir.c:680:
+					/* deltintrtv > 2*TIME_CONST,
+						remember ? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#763: FILE: drivers/input/lirc/lirc_sir.c:680:
+						remember ? */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#766: FILE: drivers/input/lirc/lirc_sir.c:683:
+						       deltv-TIME_CONST);
 						            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#780: FILE: drivers/input/lirc/lirc_sir.c:697:
+					 * sequence detection */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#807: FILE: drivers/input/lirc/lirc_sir.c:724:
+	/* this won't give us the carrier frequency we really want
+	   due to integer arithmetic, but we can accept this inaccuracy */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: drivers/input/lirc/lirc_sir.c:724:
+	   due to integer arithmetic, but we can accept this inaccuracy */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#851: FILE: drivers/input/lirc/lirc_sir.c:768:
+#if 0

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#871: FILE: drivers/input/lirc/lirc_sir.c:788:
+		udelay(100);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#891: FILE: drivers/input/lirc/lirc_sir.c:808:
+		printk(KERN_INFO "Power on IR module\n");

CHECK:CAMELCASE: Avoid CamelCase: <Ser2HSCR0>
#898: FILE: drivers/input/lirc/lirc_sir.c:815:
+	sr.hscr0 = Ser2HSCR0;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR0>
#900: FILE: drivers/input/lirc/lirc_sir.c:817:
+	sr.utcr0 = Ser2UTCR0;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR1>
#901: FILE: drivers/input/lirc/lirc_sir.c:818:
+	sr.utcr1 = Ser2UTCR1;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR2>
#902: FILE: drivers/input/lirc/lirc_sir.c:819:
+	sr.utcr2 = Ser2UTCR2;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR4>
#904: FILE: drivers/input/lirc/lirc_sir.c:821:
+	sr.utcr4 = Ser2UTCR4;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#927: FILE: drivers/input/lirc/lirc_sir.c:844:
+	Ser2UTCR0 = UTCR0_1StpBit|UTCR0_7BitData;
 	                         ^

CHECK:CAMELCASE: Avoid CamelCase: <UTCR0_1StpBit>
#927: FILE: drivers/input/lirc/lirc_sir.c:844:
+	Ser2UTCR0 = UTCR0_1StpBit|UTCR0_7BitData;

CHECK:CAMELCASE: Avoid CamelCase: <UTCR0_7BitData>
#927: FILE: drivers/input/lirc/lirc_sir.c:844:
+	Ser2UTCR0 = UTCR0_1StpBit|UTCR0_7BitData;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#932: FILE: drivers/input/lirc/lirc_sir.c:849:
+	Ser2UTCR4 = UTCR4_HPSIR|UTCR4_Z1_6us;
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#935: FILE: drivers/input/lirc/lirc_sir.c:852:
+	Ser2UTCR3 = UTCR3_RXE|UTCR3_RIE;
 	                     ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#943: FILE: drivers/input/lirc/lirc_sir.c:860:
+	      UART_FCR_CLEAR_RCVR|
 	                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#944: FILE: drivers/input/lirc/lirc_sir.c:861:
+	      UART_FCR_CLEAR_XMIT|
 	                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#952: FILE: drivers/input/lirc/lirc_sir.c:869:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#952: FILE: drivers/input/lirc/lirc_sir.c:869:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#952: FILE: drivers/input/lirc/lirc_sir.c:869:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#965: FILE: drivers/input/lirc/lirc_sir.c:882:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#965: FILE: drivers/input/lirc/lirc_sir.c:882:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#966: FILE: drivers/input/lirc/lirc_sir.c:883:
+	safe_udelay(50*1000);
 	              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#969: FILE: drivers/input/lirc/lirc_sir.c:886:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#970: FILE: drivers/input/lirc/lirc_sir.c:887:
+	udelay(1*1000);
 	        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#972: FILE: drivers/input/lirc/lirc_sir.c:889:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#972: FILE: drivers/input/lirc/lirc_sir.c:889:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#973: FILE: drivers/input/lirc/lirc_sir.c:890:
+	udelay(100);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#975: FILE: drivers/input/lirc/lirc_sir.c:892:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#977: FILE: drivers/input/lirc/lirc_sir.c:894:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#979: FILE: drivers/input/lirc/lirc_sir.c:896:
+	soutp(UART_TX, TEKRAM_115200|TEKRAM_PW);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#982: FILE: drivers/input/lirc/lirc_sir.c:899:
+	udelay(1500);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#985: FILE: drivers/input/lirc/lirc_sir.c:902:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#985: FILE: drivers/input/lirc/lirc_sir.c:902:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#986: FILE: drivers/input/lirc/lirc_sir.c:903:
+	udelay(50);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#988: FILE: drivers/input/lirc/lirc_sir.c:905:
+	udelay(1500);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#991: FILE: drivers/input/lirc/lirc_sir.c:908:
+	printk(KERN_INFO LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1004: FILE: drivers/input/lirc/lirc_sir.c:921:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_RDI);
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1020: FILE: drivers/input/lirc/lirc_sir.c:937:
+	outb(UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2, io + UART_MCR);
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1020: FILE: drivers/input/lirc/lirc_sir.c:937:
+	outb(UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2, io + UART_MCR);
 	                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#1069: FILE: drivers/input/lirc/lirc_sir.c:986:
+	if (request_region(io, 8, LIRC_DRIVER_NAME) == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1070: FILE: drivers/input/lirc/lirc_sir.c:987:
+		printk(KERN_ERR LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1081: FILE: drivers/input/lirc/lirc_sir.c:998:
+		printk(KERN_ERR LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1087: FILE: drivers/input/lirc/lirc_sir.c:1004:
+	printk(KERN_INFO LIRC_DRIVER_NAME

WARNING:TYPO_SPELLING: 'Regsiter' may be misspelled - perhaps 'Register'?
#1113: FILE: drivers/input/lirc/lirc_sir.c:1030:
+/* Regsiter 0: Control register #1 */
    ^^^^^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1204: FILE: drivers/input/lirc/lirc_sir.c:1121:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1204: FILE: drivers/input/lirc/lirc_sir.c:1121:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1209: FILE: drivers/input/lirc/lirc_sir.c:1126:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1211: FILE: drivers/input/lirc/lirc_sir.c:1128:
+		udelay(1000);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1213: FILE: drivers/input/lirc/lirc_sir.c:1130:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1213: FILE: drivers/input/lirc/lirc_sir.c:1130:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1214: FILE: drivers/input/lirc/lirc_sir.c:1131:
+	udelay(100);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1217: FILE: drivers/input/lirc/lirc_sir.c:1134:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1224: FILE: drivers/input/lirc/lirc_sir.c:1141:
+		udelay(1500);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1228: FILE: drivers/input/lirc/lirc_sir.c:1145:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1228: FILE: drivers/input/lirc/lirc_sir.c:1145:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1229: FILE: drivers/input/lirc/lirc_sir.c:1146:
+	udelay(50);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1231: FILE: drivers/input/lirc/lirc_sir.c:1148:
+	udelay(1500);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1248: FILE: drivers/input/lirc/lirc_sir.c:1165:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_RDI);
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1254: FILE: drivers/input/lirc/lirc_sir.c:1171:
+ * Drop me a mail for any kind of comment: maxx@spaceboyz.net */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1261: FILE: drivers/input/lirc/lirc_sir.c:1178:
+	soutp(UART_LCR, UART_LCR_DLAB|UART_LCR_WLEN7);
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1271: FILE: drivers/input/lirc/lirc_sir.c:1188:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1272: FILE: drivers/input/lirc/lirc_sir.c:1189:
+	udelay(10);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1275: FILE: drivers/input/lirc/lirc_sir.c:1192:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1275: FILE: drivers/input/lirc/lirc_sir.c:1192:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2);
 	                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1278: FILE: drivers/input/lirc/lirc_sir.c:1195:
+	 * i hope this is really the same for act220l/act220l+ */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1280: FILE: drivers/input/lirc/lirc_sir.c:1197:
+		udelay(10);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1282: FILE: drivers/input/lirc/lirc_sir.c:1199:
+		soutp(UART_MCR, UART_MCR_DTR|UART_MCR_OUT2);
 		                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1283: FILE: drivers/input/lirc/lirc_sir.c:1200:
+		udelay(10);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1285: FILE: drivers/input/lirc/lirc_sir.c:1202:
+		soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1285: FILE: drivers/input/lirc/lirc_sir.c:1202:
+		soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 		                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1289: FILE: drivers/input/lirc/lirc_sir.c:1206:
+	udelay(1500); /* better safe than sorry ;) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1300: FILE: drivers/input/lirc/lirc_sir.c:1217:
+	/* The dongle doesn't seem to have any problems with operation
+	   at 7N1 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1300: FILE: drivers/input/lirc/lirc_sir.c:1217:
+	   at 7N1 */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1317: FILE: drivers/input/lirc/lirc_sir.c:1234:
+	printk(KERN_INFO LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1344: FILE: drivers/input/lirc/lirc_sir.c:1261:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": Uninstalled.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230085.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 54 warnings, 114 checks, 1321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230085.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
