WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
1) Change how we detect recursive dumps.  Currently we have a mechanism by which

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#43: 
crashing process via its /proc/pid directory.  To ensure that that directory is

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#98: FILE: fs/exec.c:1792:
  	if (ispipe) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'speacial' may be misspelled - perhaps 'special'?
#103: FILE: fs/exec.c:1797:
+			 * core_limit of 0 here as a speacial value. Any
 			                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#110: FILE: fs/exec.c:1804:
+			printk(KERN_WARNING "Process %d(%s) has RLIMIT_CORE set to 0\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: fs/exec.c:1805:
+			printk(KERN_WARNING "Process %d(%s) has RLIMIT_CORE set to 0\n",
+				task_tgid_vnr(current), current->comm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#112: FILE: fs/exec.c:1806:
+			printk(KERN_WARNING "Aborting core\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'core_pipe_limit < dump_count'
#137: FILE: fs/exec.c:1818:
+		if (core_pipe_limit && (core_pipe_limit < dump_count)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#138: FILE: fs/exec.c:1819:
+			printk(KERN_WARNING "Capturing too many dumps at once\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: fs/exec.c:1827:
+		if (call_usermodehelper_pipe(helper_argv[0],  helper_argv, NULL,
+				&file, &pid)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#150: FILE: fs/exec.c:1828:
+			printk(KERN_CRIT "Core dump to %s pipe failed\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#219: FILE: include/linux/kmod.h:106:
+				    struct file **filp, pid_t *pid);
 				                  ^^^^

CHECK:BRACES: Unbalanced braces around else statement
#256: FILE: kernel/kmod.c:265:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#296: FILE: kernel/kmod.c:518:
+			     struct file **filp, pid_t *pid)
 			                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: kernel/kmod.c:522:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#336: FILE: kernel/sysctl.c:78:
+extern unsigned int core_pipe_limit;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000106529.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 5 checks, 254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000106529.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
