WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#16: 
Subject: [PATCH 091/148] include/asm-x86/percpu.h: checkpatch cleanups - formatting only

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'op' - possible side-effects?
#86: FILE: include/asm-x86/percpu.h:88:
+#define percpu_to_op(op, var, val)			\
+do {							\
+	typedef typeof(var) T__;			\
+	if (0) {					\
+		T__ tmp__;				\
+		tmp__ = (val);				\
+	}						\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	case 2:						\
+		asm(op "w %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	case 4:						\
+		asm(op "l %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	default: __bad_percpu_size();			\
+	}						\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#86: FILE: include/asm-x86/percpu.h:88:
+#define percpu_to_op(op, var, val)			\
+do {							\
+	typedef typeof(var) T__;			\
+	if (0) {					\
+		T__ tmp__;				\
+		tmp__ = (val);				\
+	}						\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	case 2:						\
+		asm(op "w %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	case 4:						\
+		asm(op "l %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	default: __bad_percpu_size();			\
+	}						\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#86: FILE: include/asm-x86/percpu.h:88:
+#define percpu_to_op(op, var, val)			\
+do {							\
+	typedef typeof(var) T__;			\
+	if (0) {					\
+		T__ tmp__;				\
+		tmp__ = (val);				\
+	}						\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	case 2:						\
+		asm(op "w %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	case 4:						\
+		asm(op "l %1,"__percpu_seg"%0"		\
+		    : "+m" (var)			\
+		    : "ri" ((T__)val));			\
+		break;					\
+	default: __bad_percpu_size();			\
+	}						\
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#88: FILE: include/asm-x86/percpu.h:90:
+	typedef typeof(var) T__;			\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#95: FILE: include/asm-x86/percpu.h:97:
+		asm(op "b %1,"__percpu_seg"%0"		\

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#100: FILE: include/asm-x86/percpu.h:102:
+		asm(op "w %1,"__percpu_seg"%0"		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#105: FILE: include/asm-x86/percpu.h:107:
+		asm(op "l %1,"__percpu_seg"%0"		\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#109: FILE: include/asm-x86/percpu.h:111:
+	default: __bad_percpu_size();			\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'op' - possible side-effects?
#113: FILE: include/asm-x86/percpu.h:115:
+#define percpu_from_op(op, var)				\
+({							\
+	typeof(var) ret__;				\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b "__percpu_seg"%1,%0"		\
+		    : "=r" (ret__)			\
+		    : "m" (var));			\
+		break;					\
+	case 2:						\
+		asm(op "w "__percpu_seg"%1,%0"		\
+		    : "=r" (ret__)			\
+		    : "m" (var));			\
+		break;					\
+	case 4:						\
+		asm(op "l "__percpu_seg"%1,%0"		\
+		    : "=r" (ret__)			\
+		    : "m" (var));			\
+		break;					\
+	default: __bad_percpu_size();			\
+	}						\
+	ret__;						\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#113: FILE: include/asm-x86/percpu.h:115:
+#define percpu_from_op(op, var)				\
+({							\
+	typeof(var) ret__;				\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b "__percpu_seg"%1,%0"		\
+		    : "=r" (ret__)			\
+		    : "m" (var));			\
+		break;					\
+	case 2:						\
+		asm(op "w "__percpu_seg"%1,%0"		\
+		    : "=r" (ret__)			\
+		    : "m" (var));			\
+		break;					\
+	case 4:						\
+		asm(op "l "__percpu_seg"%1,%0"		\
+		    : "=r" (ret__)			\
+		    : "m" (var));			\
+		break;					\
+	default: __bad_percpu_size();			\
+	}						\
+	ret__;						\
+})

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#118: FILE: include/asm-x86/percpu.h:120:
+		asm(op "b "__percpu_seg"%1,%0"		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#123: FILE: include/asm-x86/percpu.h:125:
+		asm(op "w "__percpu_seg"%1,%0"		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#128: FILE: include/asm-x86/percpu.h:130:
+		asm(op "l "__percpu_seg"%1,%0"		\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#132: FILE: include/asm-x86/percpu.h:134:
+	default: __bad_percpu_size();			\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304376.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 3 warnings, 11 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304376.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
