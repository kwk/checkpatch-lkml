WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Subject: [PATCH try#2] Input/Touchscreen Driver: add support AD7877 touchscreen driver

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#92: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: drivers/input/touchscreen/ad7877.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#98: FILE: drivers/input/touchscreen/ad7877.c:2:
+ * File:        drivers/input/touchscreen/ad7877.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: drivers/input/touchscreen/ad7877.c:4:
+ * Based on: ^Iads7846.c$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#109: FILE: drivers/input/touchscreen/ad7877.c:13:
+ * Rev:         $Id: ad7877.c 3731 2007-10-16 09:20:34Z hennerich $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#129: FILE: drivers/input/touchscreen/ad7877.c:33:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#145: FILE: drivers/input/touchscreen/ad7877.c:49:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: drivers/input/touchscreen/ad7877.c:71:
+#define	MAX_12BIT			((1<<12)-1)
        	         			   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#167: FILE: drivers/input/touchscreen/ad7877.c:71:
+#define	MAX_12BIT			((1<<12)-1)
        	         			        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: drivers/input/touchscreen/ad7877.c:107:
+#define AD7877_SEQ_YPLUS_BIT			(1<<11)
                             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#203: FILE: drivers/input/touchscreen/ad7877.c:107:
+#define AD7877_SEQ_YPLUS_BIT			(1<<11)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#204: FILE: drivers/input/touchscreen/ad7877.c:108:
+#define AD7877_SEQ_XPLUS_BIT			(1<<10)
                             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#204: FILE: drivers/input/touchscreen/ad7877.c:108:
+#define AD7877_SEQ_XPLUS_BIT			(1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#205: FILE: drivers/input/touchscreen/ad7877.c:109:
+#define AD7877_SEQ_Z2_BIT			(1<<9)
                          			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#205: FILE: drivers/input/touchscreen/ad7877.c:109:
+#define AD7877_SEQ_Z2_BIT			(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#206: FILE: drivers/input/touchscreen/ad7877.c:110:
+#define AD7877_SEQ_AUX1_BIT			(1<<8)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#206: FILE: drivers/input/touchscreen/ad7877.c:110:
+#define AD7877_SEQ_AUX1_BIT			(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#207: FILE: drivers/input/touchscreen/ad7877.c:111:
+#define AD7877_SEQ_AUX2_BIT			(1<<7)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#207: FILE: drivers/input/touchscreen/ad7877.c:111:
+#define AD7877_SEQ_AUX2_BIT			(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#208: FILE: drivers/input/touchscreen/ad7877.c:112:
+#define AD7877_SEQ_AUX3_BIT			(1<<6)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#208: FILE: drivers/input/touchscreen/ad7877.c:112:
+#define AD7877_SEQ_AUX3_BIT			(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#209: FILE: drivers/input/touchscreen/ad7877.c:113:
+#define AD7877_SEQ_BAT1_BIT			(1<<5)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#209: FILE: drivers/input/touchscreen/ad7877.c:113:
+#define AD7877_SEQ_BAT1_BIT			(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#210: FILE: drivers/input/touchscreen/ad7877.c:114:
+#define AD7877_SEQ_BAT2_BIT			(1<<4)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#210: FILE: drivers/input/touchscreen/ad7877.c:114:
+#define AD7877_SEQ_BAT2_BIT			(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#211: FILE: drivers/input/touchscreen/ad7877.c:115:
+#define AD7877_SEQ_TEMP1_BIT			(1<<3)
                             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#211: FILE: drivers/input/touchscreen/ad7877.c:115:
+#define AD7877_SEQ_TEMP1_BIT			(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#212: FILE: drivers/input/touchscreen/ad7877.c:116:
+#define AD7877_SEQ_TEMP2_BIT			(1<<2)
                             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#212: FILE: drivers/input/touchscreen/ad7877.c:116:
+#define AD7877_SEQ_TEMP2_BIT			(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#213: FILE: drivers/input/touchscreen/ad7877.c:117:
+#define AD7877_SEQ_Z1_BIT			(1<<1)
                          			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#213: FILE: drivers/input/touchscreen/ad7877.c:117:
+#define AD7877_SEQ_Z1_BIT			(1<<1)

WARNING:TYPO_SPELLING: 'Volatge' may be misspelled - perhaps 'Voltage'?
#231: FILE: drivers/input/touchscreen/ad7877.c:135:
+/* DAC Register Default RANGE 0 to Vcc, Volatge Mode, DAC On */
                                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#239: FILE: drivers/input/touchscreen/ad7877.c:143:
+#define AD7877_TMR(x)			((x & 0x3) << 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#240: FILE: drivers/input/touchscreen/ad7877.c:144:
+#define AD7877_REF(x)			((x & 0x1) << 2)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#241: FILE: drivers/input/touchscreen/ad7877.c:145:
+#define AD7877_POL(x)			((x & 0x1) << 3)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#242: FILE: drivers/input/touchscreen/ad7877.c:146:
+#define AD7877_FCD(x)			((x & 0x3) << 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#243: FILE: drivers/input/touchscreen/ad7877.c:147:
+#define AD7877_PM(x)			((x & 0x3) << 6)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#244: FILE: drivers/input/touchscreen/ad7877.c:148:
+#define AD7877_ACQ(x)			((x & 0x3) << 8)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#245: FILE: drivers/input/touchscreen/ad7877.c:149:
+#define AD7877_AVG(x)			((x & 0x3) << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#248: FILE: drivers/input/touchscreen/ad7877.c:152:
+#define	AD7877_SER			(1 << 11)	/* non-differential */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#256: FILE: drivers/input/touchscreen/ad7877.c:160:
+#define AD7877_CHANADD(x)		((x&0xF)<<7)
                          		   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#256: FILE: drivers/input/touchscreen/ad7877.c:160:
+#define AD7877_CHANADD(x)		((x&0xF)<<7)
                          		        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#256: FILE: drivers/input/touchscreen/ad7877.c:160:
+#define AD7877_CHANADD(x)		((x&0xF)<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#257: FILE: drivers/input/touchscreen/ad7877.c:161:
+#define AD7877_READADD(x)		((x)<<2)
                          		    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#258: FILE: drivers/input/touchscreen/ad7877.c:162:
+#define AD7877_WRITEADD(x)		((x)<<12)
                           		    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: drivers/input/touchscreen/ad7877.c:168:
+
+

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#265: FILE: drivers/input/touchscreen/ad7877.c:169:
+#define AD7877_MM_SEQUENCE (AD7877_SEQ_YPLUS_BIT | AD7877_SEQ_XPLUS_BIT | AD7877_SEQ_Z2_BIT | AD7877_SEQ_Z1_BIT)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#308: FILE: drivers/input/touchscreen/ad7877.c:212:
+	spinlock_t		lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: drivers/input/touchscreen/ad7877.c:235:
+	struct ad7877 *ts = dev_get_drvdata(dev);
+	return dev->power.power_state.event != PM_EVENT_ON || ts->disabled;

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#337: FILE: drivers/input/touchscreen/ad7877.c:241:
+	struct ser_req		*req = kzalloc(sizeof *req, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#345: FILE: drivers/input/touchscreen/ad7877.c:249:
+	req->command = (u16) (AD7877_WRITEADD(AD7877_REG_CTRL1) | AD7877_READADD(reg));

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#367: FILE: drivers/input/touchscreen/ad7877.c:271:
+	struct ser_req		*req = kzalloc(sizeof *req, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/input/touchscreen/ad7877.c:279:
+	req->command = (u16) (AD7877_WRITEADD(reg) | (val & MAX_12BIT));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#391: FILE: drivers/input/touchscreen/ad7877.c:295:
+static int ad7877_read_adc(struct device *dev, unsigned command)

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#395: FILE: drivers/input/touchscreen/ad7877.c:299:
+	struct ser_req		*req = kzalloc(sizeof *req, GFP_KERNEL);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#406: FILE: drivers/input/touchscreen/ad7877.c:310:
+	req->ref_on = AD7877_WRITEADD(AD7877_REG_CTRL2) | AD7877_POL(ts->stopacq_polarity) |\

CHECK:SPACING: No space is necessary after a cast
#410: FILE: drivers/input/touchscreen/ad7877.c:314:
+	req->command = (u16) command;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#450: FILE: drivers/input/touchscreen/ad7877.c:354:
+#define SHOW(name) static ssize_t \
+name ## _show(struct device *dev, struct device_attribute *attr, char *buf) \
+{ \
+	ssize_t v = ad7877_read_adc(dev, \
+			AD7877_READ_CHAN(name)); \
+	if (v < 0) \
+		return v; \
+	return sprintf(buf, "%u\n", (unsigned) v); \
+} \
+static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#450: FILE: drivers/input/touchscreen/ad7877.c:354:
+#define SHOW(name) static ssize_t \
+name ## _show(struct device *dev, struct device_attribute *attr, char *buf) \
+{ \
+	ssize_t v = ad7877_read_adc(dev, \
+			AD7877_READ_CHAN(name)); \
+	if (v < 0) \
+		return v; \
+	return sprintf(buf, "%u\n", (unsigned) v); \
+} \
+static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: No space is necessary after a cast
#457: FILE: drivers/input/touchscreen/ad7877.c:361:
+	return sprintf(buf, "%u\n", (unsigned) v); \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#457: FILE: drivers/input/touchscreen/ad7877.c:361:
+	return sprintf(buf, "%u\n", (unsigned) v); \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#459: FILE: drivers/input/touchscreen/ad7877.c:363:
+static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: drivers/input/touchscreen/ad7877.c:374:
+static ssize_t ad7877_disable_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/input/touchscreen/ad7877.c:382:
+static ssize_t ad7877_disable_store(struct device *dev,
+				     struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#485: FILE: drivers/input/touchscreen/ad7877.c:389:
+	i = simple_strtoul(buf, &endp, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0664' used
#493: FILE: drivers/input/touchscreen/ad7877.c:397:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: drivers/input/touchscreen/ad7877.c:402:
+static ssize_t ad7877_dac_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/input/touchscreen/ad7877.c:410:
+static ssize_t ad7877_dac_store(struct device *dev,
+				     struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#513: FILE: drivers/input/touchscreen/ad7877.c:417:
+	i = simple_strtoul(buf, &endp, 10);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0664' used
#520: FILE: drivers/input/touchscreen/ad7877.c:424:
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/input/touchscreen/ad7877.c:429:
+static ssize_t ad7877_gpio3_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: drivers/input/touchscreen/ad7877.c:437:
+static ssize_t ad7877_gpio3_store(struct device *dev,
+				     struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#540: FILE: drivers/input/touchscreen/ad7877.c:444:
+	i = simple_strtoul(buf, &endp, 10);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#542: FILE: drivers/input/touchscreen/ad7877.c:446:
+	if (i) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#543: FILE: drivers/input/touchscreen/ad7877.c:447:
+		ts->gpio3=1;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#545: FILE: drivers/input/touchscreen/ad7877.c:449:
+		ts->gpio3=0;
 		         ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#548: FILE: drivers/input/touchscreen/ad7877.c:452:
+	ad7877_write(dev, AD7877_REG_EXTWRITE, AD7877_EXTW_GPIO_DATA | (ts->gpio4 << 4) | (ts->gpio3 << 5));

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0664' used
#551: FILE: drivers/input/touchscreen/ad7877.c:455:
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/input/touchscreen/ad7877.c:460:
+static ssize_t ad7877_gpio4_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: drivers/input/touchscreen/ad7877.c:468:
+static ssize_t ad7877_gpio4_store(struct device *dev,
+				     struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#571: FILE: drivers/input/touchscreen/ad7877.c:475:
+	i = simple_strtoul(buf, &endp, 10);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#573: FILE: drivers/input/touchscreen/ad7877.c:477:
+	if (i) {
[...]
+	} else {
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#574: FILE: drivers/input/touchscreen/ad7877.c:478:
+		ts->gpio4=1;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#576: FILE: drivers/input/touchscreen/ad7877.c:480:
+		ts->gpio4=0;
 		         ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#579: FILE: drivers/input/touchscreen/ad7877.c:483:
+	ad7877_write(dev, AD7877_REG_EXTWRITE, AD7877_EXTW_GPIO_DATA | (ts->gpio4 << 4) | (ts->gpio3 << 5));

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0664' used
#582: FILE: drivers/input/touchscreen/ad7877.c:486:
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#616: FILE: drivers/input/touchscreen/ad7877.c:520:
+	unsigned		Rt;

CHECK:CAMELCASE: Avoid CamelCase: <Rt>
#616: FILE: drivers/input/touchscreen/ad7877.c:520:
+	unsigned		Rt;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#620: FILE: drivers/input/touchscreen/ad7877.c:524:
+	y = ts->conversion_data[AD7877_SEQ_YPOS]& MAX_12BIT;
 	                                        ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: drivers/input/touchscreen/ad7877.c:532:
+	if (likely(x && z1 && !device_suspended(&ts->spi->dev))) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#636: FILE: drivers/input/touchscreen/ad7877.c:540:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/input/touchscreen/ad7877.c:553:
+		pr_debug("%s: %d/%d/%d%s\n", ts->spi->dev.bus_id,
+			x, y, Rt, Rt ? "" : " UP");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#652: FILE: drivers/input/touchscreen/ad7877.c:556:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#669: FILE: drivers/input/touchscreen/ad7877.c:573:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#692: FILE: drivers/input/touchscreen/ad7877.c:596:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: drivers/input/touchscreen/ad7877.c:603:
+        do {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/input/touchscreen/ad7877.c:603:
+        do {$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#700: FILE: drivers/input/touchscreen/ad7877.c:604:
+		wait_event_interruptible(ad7877_wait, kthread_should_stop() || (ts->intr_flag!=0));
 		                                                                             ^

ERROR:SPACING: space required before the open parenthesis '('
#702: FILE: drivers/input/touchscreen/ad7877.c:606:
+		if(ts->intr_flag) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: drivers/input/touchscreen/ad7877.c:615:
+^I                ts->intr_flag = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: drivers/input/touchscreen/ad7877.c:626:
+        ^Itry_to_freeze();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#722: FILE: drivers/input/touchscreen/ad7877.c:626:
+        ^Itry_to_freeze();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: drivers/input/touchscreen/ad7877.c:626:
+        ^Itry_to_freeze();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: drivers/input/touchscreen/ad7877.c:627:
+        } while (!kthread_should_stop());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: drivers/input/touchscreen/ad7877.c:627:
+        } while (!kthread_should_stop());$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: drivers/input/touchscreen/ad7877.c:628:
+        printk(KERN_DEBUG "ad7877: ktsd kthread exiting\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: drivers/input/touchscreen/ad7877.c:628:
+        printk(KERN_DEBUG "ad7877: ktsd kthread exiting\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#724: FILE: drivers/input/touchscreen/ad7877.c:628:
+        printk(KERN_DEBUG "ad7877: ktsd kthread exiting\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: drivers/input/touchscreen/ad7877.c:629:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/input/touchscreen/ad7877.c:629:
+        return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#728: FILE: drivers/input/touchscreen/ad7877.c:632:
+
+

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#751: FILE: drivers/input/touchscreen/ad7877.c:655:
+			msleep(1);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#753: FILE: drivers/input/touchscreen/ad7877.c:657:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#759: FILE: drivers/input/touchscreen/ad7877.c:663:
+
+}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#785: FILE: drivers/input/touchscreen/ad7877.c:689:
+
+}

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#801: FILE: drivers/input/touchscreen/ad7877.c:705:
+	ts->cmd_crtl2 = AD7877_WRITEADD(AD7877_REG_CTRL2) | AD7877_POL(ts->stopacq_polarity) |\

CHECK:SPACING: No space is necessary after a cast
#806: FILE: drivers/input/touchscreen/ad7877.c:710:
+	ad7877_write((struct device *) spi, AD7877_REG_CTRL2, ts->cmd_crtl2);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#808: FILE: drivers/input/touchscreen/ad7877.c:712:
+	ts->cmd_crtl1 = AD7877_WRITEADD(AD7877_REG_CTRL1) | AD7877_READADD(AD7877_REG_XPLUS-1) |\
 	                                                                                   ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#808: FILE: drivers/input/touchscreen/ad7877.c:712:
+	ts->cmd_crtl1 = AD7877_WRITEADD(AD7877_REG_CTRL1) | AD7877_READADD(AD7877_REG_XPLUS-1) |\

CHECK:SPACING: No space is necessary after a cast
#811: FILE: drivers/input/touchscreen/ad7877.c:715:
+	ad7877_write((struct device *) spi, AD7877_REG_CTRL1, ts->cmd_crtl1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#835: FILE: drivers/input/touchscreen/ad7877.c:739:
+static int __devinit ad7877_probe(struct spi_device *spi)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#855: FILE: drivers/input/touchscreen/ad7877.c:759:
+		dev_dbg(&spi->dev, "SPI CLK %d Hz?\n",spi->max_speed_hz);
 		                                     ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ts)...) over kzalloc(sizeof(struct ad7877)...)
#859: FILE: drivers/input/touchscreen/ad7877.c:763:
+	ts = kzalloc(sizeof(struct ad7877), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#873: FILE: drivers/input/touchscreen/ad7877.c:777:
+	setup_timer(&ts->timer, ad7877_timer, (unsigned long) ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/input/touchscreen/ad7877.c:804:
+	input_set_abs_params(input_dev, ABS_X,
+			pdata->x_min ? : 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/input/touchscreen/ad7877.c:808:
+	input_set_abs_params(input_dev, ABS_Y,
+			pdata->y_min ? : 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: drivers/input/touchscreen/ad7877.c:812:
+	input_set_abs_params(input_dev, ABS_PRESSURE,
+			pdata->pressure_min, pdata->pressure_max, 0, 0);

CHECK:SPACING: No space is necessary after a cast
#910: FILE: drivers/input/touchscreen/ad7877.c:814:
+	ad7877_write((struct device *) spi, AD7877_REG_SEQ1, AD7877_MM_SEQUENCE);

CHECK:SPACING: No space is necessary after a cast
#912: FILE: drivers/input/touchscreen/ad7877.c:816:
+	verify = ad7877_read((struct device *) spi, AD7877_REG_SEQ1);

ERROR:SPACING: space required before the open brace '{'
#914: FILE: drivers/input/touchscreen/ad7877.c:818:
+	if (verify != AD7877_MM_SEQUENCE){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#915: FILE: drivers/input/touchscreen/ad7877.c:819:
+		printk(KERN_ERR "%s: Failed to probe %s\n", spi->dev.bus_id, input_dev->name);

ERROR:SPACING: space required before the open parenthesis '('
#920: FILE: drivers/input/touchscreen/ad7877.c:824:
+	if(gpio3)

CHECK:SPACING: No space is necessary after a cast
#921: FILE: drivers/input/touchscreen/ad7877.c:825:
+		ad7877_write((struct device *) spi, AD7877_REG_EXTWRITE, AD7877_EXTW_GPIO_3_CONF);

ERROR:SPACING: space required before the open parenthesis '('
#940: FILE: drivers/input/touchscreen/ad7877.c:844:
+	if(gpio3)

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: drivers/input/touchscreen/ad7877.c:860:
+        if (IS_ERR(ad7877_task)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: drivers/input/touchscreen/ad7877.c:860:
+        if (IS_ERR(ad7877_task)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#957: FILE: drivers/input/touchscreen/ad7877.c:861:
+		printk(KERN_ERR "ts: Failed to start ad7877_task\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: drivers/input/touchscreen/ad7877.c:863:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/input/touchscreen/ad7877.c:863:
+        }$

ERROR:SPACING: space required before the open parenthesis '('
#971: FILE: drivers/input/touchscreen/ad7877.c:875:
+	if(gpio3)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#985: FILE: drivers/input/touchscreen/ad7877.c:889:
+static int __devexit ad7877_remove(struct spi_device *spi)

ERROR:SPACING: space required before the open parenthesis '('
#995: FILE: drivers/input/touchscreen/ad7877.c:899:
+	if(gpio3)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/input/touchscreen/ad7877.c:942:
+MODULE_PARM_DESC(gpio3,
+	"If gpio3 is set to 1 AUX3 acts as GPIO3");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 46 warnings, 77 checks, 971 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
