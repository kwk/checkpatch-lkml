WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: include/linux/signal.h:258:
+ * ^I^I  similar to exit_group.  The group leader (only) reports$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#60: FILE: include/linux/signal.h:262:
+ *   stop ^I- stop all the threads in the group, i.e. TASK_STOPPED state$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: include/linux/signal.h:273:
+ *^I|  SIGQUIT           |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#72: FILE: include/linux/signal.h:274:
+ *^I|  SIGILL            |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: include/linux/signal.h:275:
+ *^I|  SIGTRAP           |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: include/linux/signal.h:276:
+ *^I|  SIGABRT/SIGIOT    |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: include/linux/signal.h:277:
+ *^I|  SIGBUS            |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: include/linux/signal.h:278:
+ *^I|  SIGFPE            |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: include/linux/signal.h:281:
+ *^I|  SIGSEGV           |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: include/linux/signal.h:286:
+ *^I|  SIGCHLD           |^Iignore   ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: include/linux/signal.h:288:
+ *^I|  SIGSTOP           |^Istop(*)(+)  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: include/linux/signal.h:289:
+ *^I|  SIGTSTP           |^Istop(*)  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: include/linux/signal.h:290:
+ *^I|  SIGTTIN           |^Istop(*)  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: include/linux/signal.h:291:
+ *^I|  SIGTTOU           |^Istop(*)  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: include/linux/signal.h:292:
+ *^I|  SIGURG            |^Iignore   ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: include/linux/signal.h:293:
+ *^I|  SIGXCPU           |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: include/linux/signal.h:294:
+ *^I|  SIGXFSZ           |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: include/linux/signal.h:298:
+ *^I|  SIGSYS/SIGUNUSED  |^Icoredump ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: include/linux/signal.h:300:
+ *^I|  SIGWINCH          |^Iignore   ^I|$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#125: FILE: include/linux/signal.h:327:
+#define rt_sigmask(sig)	(1ULL << ((sig)-1))
                        	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#136: FILE: include/linux/signal.h:338:
+	rt_sigmask(SIGTTIN)   |  rt_sigmask(SIGTTOU)   )

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: include/linux/signal.h:341:
+        rt_sigmask(SIGQUIT)   |  rt_sigmask(SIGILL)    | \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: include/linux/signal.h:341:
+        rt_sigmask(SIGQUIT)   |  rt_sigmask(SIGILL)    | \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: include/linux/signal.h:343:
+        rt_sigmask(SIGFPE)    |  rt_sigmask(SIGSEGV)   | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: include/linux/signal.h:343:
+        rt_sigmask(SIGFPE)    |  rt_sigmask(SIGSEGV)   | \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: include/linux/signal.h:345:
+        rt_sigmask(SIGXCPU)   |  rt_sigmask(SIGXFSZ)   | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: include/linux/signal.h:345:
+        rt_sigmask(SIGXCPU)   |  rt_sigmask(SIGXFSZ)   | \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#144: FILE: include/linux/signal.h:346:
+	SIGEMT_MASK				       )

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: include/linux/signal.h:349:
+        rt_sigmask(SIGCONT)   |  rt_sigmask(SIGCHLD)   | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: include/linux/signal.h:349:
+        rt_sigmask(SIGCONT)   |  rt_sigmask(SIGCHLD)   | \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#148: FILE: include/linux/signal.h:350:
+	rt_sigmask(SIGWINCH)  |  rt_sigmask(SIGURG)    )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sig' - possible side-effects?
#150: FILE: include/linux/signal.h:352:
+#define sig_kernel_only(sig) \
+	(((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_ONLY_MASK))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sig' - possible side-effects?
#152: FILE: include/linux/signal.h:354:
+#define sig_kernel_coredump(sig) \
+	(((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_COREDUMP_MASK))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sig' - possible side-effects?
#154: FILE: include/linux/signal.h:356:
+#define sig_kernel_ignore(sig) \
+	(((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_IGNORE_MASK))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sig' - possible side-effects?
#156: FILE: include/linux/signal.h:358:
+#define sig_kernel_stop(sig) \
+	(((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_STOP_MASK))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#161: FILE: include/linux/signal.h:363:
+#define sig_user_defined(t, signr) \
+	(((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_DFL) &&	\
+	 ((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_IGN))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'signr' - possible side-effects?
#161: FILE: include/linux/signal.h:363:
+#define sig_user_defined(t, signr) \
+	(((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_DFL) &&	\
+	 ((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_IGN))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#162: FILE: include/linux/signal.h:364:
+	(((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_DFL) &&	\
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#163: FILE: include/linux/signal.h:365:
+	 ((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_IGN))
 	                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'signr' - possible side-effects?
#165: FILE: include/linux/signal.h:367:
+#define sig_fatal(t, signr) \
+	(!siginmask(signr, SIG_KERNEL_IGNORE_MASK|SIG_KERNEL_STOP_MASK) && \
+	 (t)->sighand->action[(signr)-1].sa.sa_handler == SIG_DFL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#166: FILE: include/linux/signal.h:368:
+	(!siginmask(signr, SIG_KERNEL_IGNORE_MASK|SIG_KERNEL_STOP_MASK) && \
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#167: FILE: include/linux/signal.h:369:
+	 (t)->sighand->action[(signr)-1].sa.sa_handler == SIG_DFL)
 	                             ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000438578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 23 warnings, 12 checks, 256 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000438578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
