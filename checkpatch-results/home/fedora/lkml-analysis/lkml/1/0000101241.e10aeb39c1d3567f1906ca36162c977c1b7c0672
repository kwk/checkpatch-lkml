WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#97: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: drivers/iio/ring_sw.c:1:
+/* The industrial I/O simple minimally locked ring buffer.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'length == 0'
#121: FILE: drivers/iio/ring_sw.c:20:
+	if ((length == 0) || (bytes_per_datum == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bytes_per_datum == 0'
#121: FILE: drivers/iio/ring_sw.c:20:
+	if ((length == 0) || (bytes_per_datum == 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: drivers/iio/ring_sw.c:25:
+	ring->data = kmalloc(length*ring->buf.bpd, GFP_KERNEL);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: drivers/iio/ring_sw.c:41:
+	struct iio_sw_ring_buffer *ring = iio_to_sw_ring(r);
+	spin_lock(&ring->use_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: drivers/iio/ring_sw.c:50:
+	struct iio_sw_ring_buffer *ring = iio_to_sw_ring(r);
+	spin_lock(&ring->use_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/iio/ring_sw.c:56:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: drivers/iio/ring_sw.c:59:
+ * in the device driver */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: drivers/iio/ring_sw.c:77:
+		ring->half_p = ring->data - ring->buf.length*ring->buf.bpd/2;
 		                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#178: FILE: drivers/iio/ring_sw.c:77:
+		ring->half_p = ring->data - ring->buf.length*ring->buf.bpd/2;
 		                                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#194: FILE: drivers/iio/ring_sw.c:93:
+	if (temp_ptr == ring->data + ring->buf.length*ring->buf.bpd)
 	                                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#206: FILE: drivers/iio/ring_sw.c:105:
+	 * ring event */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#215: FILE: drivers/iio/ring_sw.c:114:
+		    == ring->data + ring->buf.length*ring->buf.bpd) {
 		                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: drivers/iio/ring_sw.c:134:
+	 * simultaneous read */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#238: FILE: drivers/iio/ring_sw.c:137:
+	if (ring->half_p == ring->data + ring->buf.length*ring->buf.bpd)
 	                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#268: FILE: drivers/iio/ring_sw.c:167:
+		printk(KERN_INFO "Ring buffer read request not whole number of"

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: drivers/iio/ring_sw.c:168:
+		printk(KERN_INFO "Ring buffer read request not whole number of"
+		       "samples: Request bytes %d, Current bpd %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#269: FILE: drivers/iio/ring_sw.c:168:
+		printk(KERN_INFO "Ring buffer read request not whole number of"
+		       "samples: Request bytes %d, Current bpd %d\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#274: FILE: drivers/iio/ring_sw.c:173:
+	bytes_to_rip = min((size_t)(ring->buf.bpd*ring->buf.length), count);
 	                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#277: FILE: drivers/iio/ring_sw.c:176:
+	if (*data == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#293: FILE: drivers/iio/ring_sw.c:192:
+	while ((initial_read_p != ring->read_p)
+	       || (initial_write_p != ring->write_p)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#316: FILE: drivers/iio/ring_sw.c:215:
+			+ ring->buf.length*ring->buf.bpd - initial_read_p;
 			                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#319: FILE: drivers/iio/ring_sw.c:218:
+		if (max_copied == bytes_to_rip)
[...]
+		else if (initial_write_p
[...]
+		} else {  /* not enough data */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#336: FILE: drivers/iio/ring_sw.c:235:
+	 * read pointer has been pushed */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#342: FILE: drivers/iio/ring_sw.c:241:
+		*dead_offset = ring->buf.length*ring->buf.bpd
 		                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#346: FILE: drivers/iio/ring_sw.c:245:
+	 * the point we were reading to has been passed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#349: FILE: drivers/iio/ring_sw.c:248:
+	 * pushed further than we would look. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#378: FILE: drivers/iio/ring_sw.c:277:
+	struct iio_sw_ring_buffer *ring = iio_to_sw_ring(r);
+	return iio_store_to_sw_ring(ring, data, timestamp);

WARNING:TYPO_SPELLING: 'unnessecary' may be misspelled - perhaps 'unnecessary'?
#391: FILE: drivers/iio/ring_sw.c:290:
+	barrier(); /*unnessecary? */
 	             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#432: FILE: drivers/iio/ring_sw.c:331:
+	struct iio_sw_ring_buffer *ring = iio_to_sw_ring(r);
+	return ring->buf.bpd;

WARNING:LINE_SPACING: Missing a blank line after declarations
#467: FILE: drivers/iio/ring_sw.c:366:
+	struct iio_sw_ring_buffer *ring = iio_to_sw_ring(r);
+	ring->update_needed = true;

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: drivers/iio/ring_sw.c:374:
+	struct iio_ring_buffer *r = to_iio_ring_buffer(dev);
+	kfree(iio_to_sw_ring(r));

WARNING:SIZEOF_PARENTHESIS: sizeof *ring should be sizeof(*ring)
#509: FILE: drivers/iio/ring_sw.c:408:
+	ring = kzalloc(sizeof *ring, GFP_KERNEL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#539: FILE: include/linux/iio/ring_sw.h:1:
+/* The industrial I/O simple minimally locked ring buffer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#567: FILE: include/linux/iio/ring_sw.h:29:
+ * driver requests - some may support multiple options */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: include/linux/iio/ring_sw.h:31:
+
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#574: FILE: include/linux/iio/ring_sw.h:36:
+#if defined CONFIG_IIO_SW_RING || defined CONFIG_IIO_SW_RING_MODULE

CHECK:LINE_SPACING: Please don't use multiple blank lines
#644: FILE: include/linux/iio/ring_sw.h:106:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#701: FILE: include/linux/iio/ring_sw.h:163:
+ * struct iio_ring_buffer.
+**/

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#713: FILE: include/linux/iio/ring_sw.h:175:
+	spinlock_t		use_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#721: FILE: include/linux/iio/ring_sw.h:183:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101241.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 19 checks, 643 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101241.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
