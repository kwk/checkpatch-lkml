WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/iio/accel/Kconfig:7:
+config LIS3L02DQ
+	tristate "ST Microelectronics LIS3L02DQ Accelerometer Driver"
+	depends on IIO && SPI
+	help
+	  Say yes here to build SPI support for the ST microelectronics
+	  accelerometer. The driver supplies direct access via sysfs files
+	  and an event interface via a character device.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: drivers/iio/accel/lis3l02dq.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#174: FILE: drivers/iio/accel/lis3l02dq.h:60:
+/* Interupt Enable - applies data ready to the RDY pad */
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: drivers/iio/accel/lis3l02dq.h:70:
+ * - option for 16 bit left justified */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#187: FILE: drivers/iio/accel/lis3l02dq.h:73:
+/* Interupt related stuff */
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#190: FILE: drivers/iio/accel/lis3l02dq.h:76:
+/* Switch from or combination fo conditions to and */
                               ^^

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#193: FILE: drivers/iio/accel/lis3l02dq.h:79:
+/* Latch interupt request,
          ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#194: FILE: drivers/iio/accel/lis3l02dq.h:80:
+ * if on ack must be given by reading the ack register */

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#197: FILE: drivers/iio/accel/lis3l02dq.h:83:
+/* Z Interupt on High (above threshold)*/
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#199: FILE: drivers/iio/accel/lis3l02dq.h:85:
+/* Z Interupt on Low */
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#201: FILE: drivers/iio/accel/lis3l02dq.h:87:
+/* Y Interupt on High */
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#203: FILE: drivers/iio/accel/lis3l02dq.h:89:
+/* Y Interupt on Low */
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#205: FILE: drivers/iio/accel/lis3l02dq.h:91:
+/* X Interupt on High */
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#207: FILE: drivers/iio/accel/lis3l02dq.h:93:
+/* X Interupt on Low */
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#210: FILE: drivers/iio/accel/lis3l02dq.h:96:
+/* Register that gives description of what caused interupt
                                                   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: drivers/iio/accel/lis3l02dq.h:97:
+ * - latched if set in CFG_ADDRES */

WARNING:TYPO_SPELLING: 'Interupt' may be misspelled - perhaps 'Interrupt'?
#214: FILE: drivers/iio/accel/lis3l02dq.h:100:
+/* Interupt Active */
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'Interupts' may be misspelled - perhaps 'Interrupts'?
#216: FILE: drivers/iio/accel/lis3l02dq.h:102:
+/* Interupts that have been triggered */
    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#240: FILE: drivers/iio/accel/lis3l02dq.h:126:
+Form of high byte dependant on justification set in ctrl reg */
                   ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#240: FILE: drivers/iio/accel/lis3l02dq.h:126:
+/* The accelerometer readings - low and high bytes.
+Form of high byte dependant on justification set in ctrl reg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#240: FILE: drivers/iio/accel/lis3l02dq.h:126:
+Form of high byte dependant on justification set in ctrl reg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#249: FILE: drivers/iio/accel/lis3l02dq.h:135:
+ * - i.e. there is only one value */

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#273: FILE: drivers/iio/accel/lis3l02dq.h:159:
+ * @rx:			recieve buffer
        			^^^^^^^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#286: FILE: drivers/iio/accel/lis3l02dq.h:172:
+	struct mutex			buf_lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#318: FILE: drivers/iio/accel/lis3l02dq.h:204:
+};
+static inline void lis3l02dq_unconfigure_ring(struct iio_dev *indio_dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#324: FILE: drivers/iio/accel/lis3l02dq.h:210:
+};
+static inline void lis3l02dq_uninitialize_ring(struct iio_ring_buffer *ring) {};

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#333: FILE: drivers/iio/accel/lis3l02dq_core.c:1:
+/*

WARNING:TYPO_SPELLING: 'writen' may be misspelled - perhaps 'written'?
#406: FILE: drivers/iio/accel/lis3l02dq_core.c:74:
+ * @reg_address: the address of the register to be writen
                                                    ^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#513: FILE: drivers/iio/accel/lis3l02dq_core.c:181:
+	st->tx[2] = LIS3L02DQ_READ_REG(lower_reg_address+1);
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#573: FILE: drivers/iio/accel/lis3l02dq_core.c:241:
+	ret = strict_strtol(buf, 10, &valin);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#593: FILE: drivers/iio/accel/lis3l02dq_core.c:261:
+	ret = strict_strtoul(buf, 10, &valin);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#646: FILE: drivers/iio/accel/lis3l02dq_core.c:314:
+	ret = strict_strtol(buf, 10, &val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#661: FILE: drivers/iio/accel/lis3l02dq_core.c:329:
+	s8 t;
+	ret = lis3l02dq_spi_read_reg_8(dev,

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#694: FILE: drivers/iio/accel/lis3l02dq_core.c:362:
+	ret = strict_strtol(buf, 10, &val);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#762: FILE: drivers/iio/accel/lis3l02dq_core.c:430:
+	 * chip */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'valtest != val'
#766: FILE: drivers/iio/accel/lis3l02dq_core.c:434:
+	if (ret || (valtest != val)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#792: FILE: drivers/iio/accel/lis3l02dq_core.c:460:
+static IIO_DEV_ATTR_ACCEL_X_OFFSET(S_IWUSR | S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#797: FILE: drivers/iio/accel/lis3l02dq_core.c:465:
+static IIO_DEV_ATTR_ACCEL_Y_OFFSET(S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#802: FILE: drivers/iio/accel/lis3l02dq_core.c:470:
+static IIO_DEV_ATTR_ACCEL_Z_OFFSET(S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#807: FILE: drivers/iio/accel/lis3l02dq_core.c:475:
+static IIO_DEV_ATTR_ACCEL_X_GAIN(S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#812: FILE: drivers/iio/accel/lis3l02dq_core.c:480:
+static IIO_DEV_ATTR_ACCEL_Y_GAIN(S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#817: FILE: drivers/iio/accel/lis3l02dq_core.c:485:
+static IIO_DEV_ATTR_ACCEL_Z_GAIN(S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#822: FILE: drivers/iio/accel/lis3l02dq_core.c:490:
+static IIO_DEV_ATTR_ACCEL_THRESH(S_IWUSR | S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#842: FILE: drivers/iio/accel/lis3l02dq_core.c:510:
+static IIO_DEV_ATTR_SAMP_FREQ(S_IWUSR | S_IRUGO,

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#861: FILE: drivers/iio/accel/lis3l02dq_core.c:529:
+				   (val & this_attr->mask) ? 1 : 0);;

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#892: FILE: drivers/iio/accel/lis3l02dq_core.c:560:
+	if (val == false && currentlyset) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: drivers/iio/accel/lis3l02dq_core.c:564:
+		iio_remove_event_from_list(this_attr->listel,
+						 &indio_dev->interrupts[0]

CHECK:BOOL_COMPARISON: Using comparison to true is error prone
#898: FILE: drivers/iio/accel/lis3l02dq_core.c:566:
+	} else if (val == true && !currentlyset) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/iio/accel/lis3l02dq_core.c:570:
+		iio_add_event_to_list(this_attr->listel,
+					    &indio_dev->interrupts[0]->ev_list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#930: FILE: drivers/iio/accel/lis3l02dq_core.c:598:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#945: FILE: drivers/iio/accel/lis3l02dq_core.c:613:
+
+

WARNING:TYPO_SPELLING: 'Unforunately' may be misspelled - perhaps 'Unfortunately'?
#946: FILE: drivers/iio/accel/lis3l02dq_core.c:614:
+/* Unforunately it appears the interrupt won't clear unless you read from the
    ^^^^^^^^^^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#952: FILE: drivers/iio/accel/lis3l02dq_core.c:620:
+	struct iio_work_cont *wc
+		= container_of(work_s, struct iio_work_cont, ws_nocheck);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#989: FILE: drivers/iio/accel/lis3l02dq_core.c:657:
+	/* reenable the irq */
 	   ^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#997: FILE: drivers/iio/accel/lis3l02dq_core.c:665:
+	return;
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1069: FILE: drivers/iio/accel/lis3l02dq_core.c:737:
+static int __devinit lis3l02dq_probe(struct spi_device *spi)

WARNING:SIZEOF_PARENTHESIS: sizeof *st should be sizeof(*st)
#1072: FILE: drivers/iio/accel/lis3l02dq_core.c:740:
+	struct lis3l02dq_state *st = kzalloc(sizeof *st, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1073: FILE: drivers/iio/accel/lis3l02dq_core.c:741:
+	struct lis3l02dq_state *st = kzalloc(sizeof *st, GFP_KERNEL);
+	if (!st) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1081: FILE: drivers/iio/accel/lis3l02dq_core.c:749:
+	st->rx = kzalloc(sizeof(*st->rx)*LIS3L02DQ_MAX_RX, GFP_KERNEL);
 	                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->rx"
#1082: FILE: drivers/iio/accel/lis3l02dq_core.c:750:
+	if (st->rx == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1086: FILE: drivers/iio/accel/lis3l02dq_core.c:754:
+	st->tx = kzalloc(sizeof(*st->tx)*LIS3L02DQ_MAX_TX, GFP_KERNEL);
 	                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->tx"
#1087: FILE: drivers/iio/accel/lis3l02dq_core.c:755:
+	if (st->tx == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->indio_dev"
#1095: FILE: drivers/iio/accel/lis3l02dq_core.c:763:
+	if (st->indio_dev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1118: FILE: drivers/iio/accel/lis3l02dq_core.c:786:
+		printk(KERN_ERR "failed to initialize the ring\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1124: FILE: drivers/iio/accel/lis3l02dq_core.c:792:
+		/* This is a little unusual, in that the device seems
+		   to need a full read of the interrupt source reg before

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1126: FILE: drivers/iio/accel/lis3l02dq_core.c:794:
+		   Hence the two handlers are the same */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1142: FILE: drivers/iio/accel/lis3l02dq_core.c:810:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1264: FILE: include/linux/iio/accel.h:1:
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1288: FILE: include/linux/iio/accel.h:25:
+	IIO_DEVICE_ATTR(accel_x, S_IRUGO, _show, NULL, _addr)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1291: FILE: include/linux/iio/accel.h:28:
+	IIO_DEVICE_ATTR(accel_y, S_IRUGO, _show, NULL, _addr)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1294: FILE: include/linux/iio/accel.h:31:
+	IIO_DEVICE_ATTR(accel_z, S_IRUGO, _show, NULL, _addr)

WARNING:TYPO_SPELLING: 'thesholds' may be misspelled - perhaps 'thresholds'?
#1297: FILE: include/linux/iio/accel.h:34:
+/* For unified thesholds (shared across all directions */
                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'theshold' may be misspelled - perhaps 'threshold'?
#1303: FILE: include/linux/iio/accel.h:40:
+ * @_store: write detector theshold value
                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#1312: FILE: include/linux/iio/accel.h:49:
+ * IIO_DEV_ATTR_ACCEL_THRESH_X: independant direction threshold, x axis
                                 ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'theshold' may be misspelled - perhaps 'threshold'?
#1314: FILE: include/linux/iio/accel.h:51:
+ * @_show: read x axis detector theshold value
                                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1316: FILE: include/linux/iio/accel.h:53:
+ * @_addr: device driver dependant, typically a register address
                          ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1327: FILE: include/linux/iio/accel.h:64:
+
+

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1332: FILE: include/linux/iio/accel.h:69:
+ * @_mask: device dependant, typically a bit mask
                   ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1401: FILE: include/linux/iio/accel.h:138:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101240.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 61 warnings, 20 checks, 1334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101240.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
