CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#61: FILE: arch/x86/kernel/cpu/mtrr/generic.c:143:
+		if (start >= (1ULL<<32) && (end < tom2))
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end < tom2'
#61: FILE: arch/x86/kernel/cpu/mtrr/generic.c:143:
+		if (start >= (1ULL<<32) && (end < tom2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#73: FILE: arch/x86/kernel/cpu/mtrr/generic.c:216:
+		unsigned lo, hi;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#89: FILE: arch/x86/kernel/cpu/mtrr/generic.c:255:
+			printk(KERN_INFO "TOM2: %016lx aka %ldM\n", tom2, tom2>>20);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#89: FILE: arch/x86/kernel/cpu/mtrr/generic.c:255:
+			printk(KERN_INFO "TOM2: %016lx aka %ldM\n", tom2, tom2>>20);
 			                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: arch/x86/mm/pat.c:53:
+	if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD &&
+	     boot_cpu_data.x86 >= 0xf && boot_cpu_data.x86 <= 0x11) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#116: FILE: arch/x86/mm/pat.c:54:
+		if (cpu_has_pat) {
+			return 1;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/asm-x86/mtrr.h:102:
+extern int amd_special_default_mtrr(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303962.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 5 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303962.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
