WARNING:TYPO_SPELLING: 'shoud' may be misspelled - perhaps 'should'?
#49: 
To obtain this goal the userland programs shoud use the PPS API
                                          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'intialization' may be misspelled - perhaps 'initialization'?
#264: FILE: Documentation/pps/pps.txt:86:
+intialization routine as follows:
 ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Documentaion' may be misspelled - perhaps 'Documentation'?
#332: FILE: Documentation/pps/pps.txt:154:
+and the userland tools provided into Documentaion/pps/ directory.
                                      ^^^^^^^^^^^^

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#361: FILE: MAINTAINERS:3469:
+P:	Rodolfo Giometti
+M:	giometti@enneenne.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'W:'
#363: FILE: MAINTAINERS:3471:
+W:	http://wiki.enneenne.com/index.php/LinuxPPS_support
+L:	linuxpps@ml.enneenne.com (subscribers-only)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#406: FILE: drivers/pps/Kconfig:7:
+config PPS
+	tristate "PPS support"
+	depends on EXPERIMENTAL
+	---help---
+	  PPS (Pulse Per Second) is a special pulse provided by some GPS
+	  antennae. Userland can use it to get a high-precision time
+	  reference.
+
+	  Some antennae's PPS signals are connected with the CD (Carrier
+	  Detect) pin of the serial line they use to communicate with the
+	  host. In this case use the SERIAL_LINE client support.
+
+	  Some antennae's PPS signals are connected with some special host
+	  inputs so you have to enable the corresponding client support.
+
+	  To compile this driver as a module, choose M here: the module
+	  will be called pps_core.ko.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#424: FILE: drivers/pps/Kconfig:25:
+config PPS_DEBUG
+	bool "PPS debugging messages"
+	depends on PPS
+	help
+	  Say Y here if you want the PPS support to produce a bunch of debug
+	  messages to the system log.  Select this if you are having a
+	  problem with PPS support and want to see more of what is going on.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#453: FILE: drivers/pps/kapi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#470: FILE: drivers/pps/kapi.c:18:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#471: FILE: drivers/pps/kapi.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: drivers/pps/kapi.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pps"
#532: FILE: drivers/pps/kapi.c:80:
+	if (pps != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#551: FILE: drivers/pps/kapi.c:99:
+	BUG_ON(atomic_read(&pps->usage) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#587: FILE: drivers/pps/kapi.c:135:
+		printk(KERN_ERR "pps: %s: unsupported default parameters\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/pps/kapi.c:136:
+		printk(KERN_ERR "pps: %s: unsupported default parameters\n",
+					info->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/pps/kapi.c:141:
+	if ((info->mode & (PPS_ECHOASSERT | PPS_ECHOCLEAR)) != 0 &&
+			info->echo == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->echo"
#593: FILE: drivers/pps/kapi.c:141:
+			info->echo == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#594: FILE: drivers/pps/kapi.c:142:
+		printk(KERN_ERR "pps: %s: echo function is not defined\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/pps/kapi.c:143:
+		printk(KERN_ERR "pps: %s: echo function is not defined\n",
+					info->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#600: FILE: drivers/pps/kapi.c:148:
+		printk(KERN_ERR "pps: %s: unspecified time format\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: drivers/pps/kapi.c:149:
+		printk(KERN_ERR "pps: %s: unspecified time format\n",
+					info->name);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pps)...) over kzalloc(sizeof(struct pps_device)...)
#607: FILE: drivers/pps/kapi.c:155:
+	pps = kzalloc(sizeof(struct pps_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pps"
#608: FILE: drivers/pps/kapi.c:156:
+	if (pps == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#646: FILE: drivers/pps/kapi.c:194:
+		printk(KERN_ERR "pps: %s: too many PPS sources in the system\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/pps/kapi.c:195:
+		printk(KERN_ERR "pps: %s: too many PPS sources in the system\n",
+					info->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#658: FILE: drivers/pps/kapi.c:206:
+		printk(KERN_ERR "pps: %s: unable to create char device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/pps/kapi.c:207:
+		printk(KERN_ERR "pps: %s: unable to create char device\n",
+					info->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#676: FILE: drivers/pps/kapi.c:224:
+	printk(KERN_ERR "pps: %s: unable to register source\n", info->name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#697: FILE: drivers/pps/kapi.c:245:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#728: FILE: drivers/pps/kapi.c:276:
+		printk(KERN_ERR "pps: unknown event (%x) for source %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/pps/kapi.c:277:
+		printk(KERN_ERR "pps: unknown event (%x) for source %d\n",
+			event, source);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#738: FILE: drivers/pps/kapi.c:286:
+	pr_debug("PPS event on source %d at %llu.%06u\n",
+			pps->id, (unsigned long long) ts->sec, ts->nsec);

CHECK:SPACING: No space is necessary after a cast
#738: FILE: drivers/pps/kapi.c:286:
+			pps->id, (unsigned long long) ts->sec, ts->nsec);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: drivers/pps/kapi.c:305:
+		pr_debug("capture assert seq #%u for source %d\n",
+			pps->assert_sequence, source);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: drivers/pps/kapi.c:316:
+		pr_debug("capture clear seq #%u for source %d\n",
+			pps->clear_sequence, source);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#788: FILE: drivers/pps/pps.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#805: FILE: drivers/pps/pps.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#806: FILE: drivers/pps/pps.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#809: FILE: drivers/pps/pps.c:22:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#843: FILE: drivers/pps/pps.c:56:
+	struct pps_device *pps = file->private_data;
+	return fasync_helper(fd, file, on, &pps->async_queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: drivers/pps/pps.c:60:
+static long pps_cdev_ioctl(struct file *file,
+		unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#853: FILE: drivers/pps/pps.c:66:
+	void __user *uarg = (void __user *) arg;

CHECK:SPACING: No space is necessary after a cast
#854: FILE: drivers/pps/pps.c:67:
+	int __user *iuarg = (int __user *) arg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#863: FILE: drivers/pps/pps.c:76:
+		err = copy_to_user(uarg, &pps->params,
+						sizeof(struct pps_kparams));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: drivers/pps/pps.c:94:
+			pr_debug("capture mode unspecified (%x)\n",
+								params.mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/pps/pps.c:101:
+			pr_debug("unsupported capabilities (%x)\n",
+								params.mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#901: FILE: drivers/pps/pps.c:114:
+			pr_debug("time format unspecified (%x)\n",
+								params.mode);

CHECK:BRACES: braces {} should be used on all arms of this statement
#931: FILE: drivers/pps/pps.c:144:
+		if (fdata.timeout.flags & PPS_TIME_INVALID)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#933: FILE: drivers/pps/pps.c:146:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#935: FILE: drivers/pps/pps.c:148:
+			pr_debug("timeout %lld.%09d\n",
+					(long long) fdata.timeout.sec,

CHECK:SPACING: No space is necessary after a cast
#935: FILE: drivers/pps/pps.c:148:
+					(long long) fdata.timeout.sec,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#941: FILE: drivers/pps/pps.c:154:
+				err = wait_event_interruptible_timeout(

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#973: FILE: drivers/pps/pps.c:186:
+		return -ENOTTY;
+		break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1028: FILE: drivers/pps/pps.c:241:
+		printk(KERN_ERR "pps: %s: failed to add char device %d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: drivers/pps/pps.c:242:
+		printk(KERN_ERR "pps: %s: failed to add char device %d:%d\n",
+				pps->info.name, MAJOR(pps_devt), pps->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1033: FILE: drivers/pps/pps.c:246:
+	pps->dev = device_create(pps_class, pps->info.dev, pps->devno, NULL,
+							"pps%d", pps->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: drivers/pps/pps.c:252:
+	pr_debug("source %s got cdev (%d:%d)\n", pps->info.name,
+			MAJOR(pps_devt), pps->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1071: FILE: drivers/pps/pps.c:284:
+		printk(KERN_ERR "pps: failed to allocate class\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1078: FILE: drivers/pps/pps.c:291:
+		printk(KERN_ERR "pps: failed to allocate char device region\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1084: FILE: drivers/pps/pps.c:297:
+	pr_info("Software ver. %s - Copyright 2005-2007 Rodolfo Giometti "
+		"<giometti@linux.it>\n", PPS_VERSION);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1106: FILE: drivers/pps/sysfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1123: FILE: drivers/pps/sysfs.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1124: FILE: drivers/pps/sysfs.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1127: FILE: drivers/pps/sysfs.c:22:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/pps/sysfs.c:33:
+static ssize_t pps_show_assert(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:SPACING: No space is necessary after a cast
#1146: FILE: drivers/pps/sysfs.c:41:
+			(long long) pps->assert_tu.sec, pps->assert_tu.nsec,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pps_show_assert' to 'assert_show'
#1148: FILE: drivers/pps/sysfs.c:43:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1149: FILE: drivers/pps/sysfs.c:44:
+DEVICE_ATTR(assert, S_IRUGO, pps_show_assert, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1152: FILE: drivers/pps/sysfs.c:47:
+static ssize_t pps_show_clear(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:SPACING: No space is necessary after a cast
#1160: FILE: drivers/pps/sysfs.c:55:
+			(long long) pps->clear_tu.sec, pps->clear_tu.nsec,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pps_show_clear' to 'clear_show'
#1162: FILE: drivers/pps/sysfs.c:57:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1163: FILE: drivers/pps/sysfs.c:58:
+DEVICE_ATTR(clear, S_IRUGO, pps_show_clear, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1166: FILE: drivers/pps/sysfs.c:61:
+static ssize_t pps_show_mode(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pps_show_mode' to 'mode_show'
#1171: FILE: drivers/pps/sysfs.c:66:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1172: FILE: drivers/pps/sysfs.c:67:
+DEVICE_ATTR(mode, S_IRUGO, pps_show_mode, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1175: FILE: drivers/pps/sysfs.c:70:
+static ssize_t pps_show_echo(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pps_show_echo' to 'echo_show'
#1180: FILE: drivers/pps/sysfs.c:75:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1181: FILE: drivers/pps/sysfs.c:76:
+DEVICE_ATTR(echo, S_IRUGO, pps_show_echo, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: drivers/pps/sysfs.c:79:
+static ssize_t pps_show_name(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pps_show_name' to 'name_show'
#1189: FILE: drivers/pps/sysfs.c:84:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1190: FILE: drivers/pps/sysfs.c:85:
+DEVICE_ATTR(name, S_IRUGO, pps_show_name, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: drivers/pps/sysfs.c:88:
+static ssize_t pps_show_path(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pps_show_path' to 'path_show'
#1198: FILE: drivers/pps/sysfs.c:93:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1199: FILE: drivers/pps/sysfs.c:94:
+DEVICE_ATTR(path, S_IRUGO, pps_show_path, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1202: FILE: drivers/pps/sysfs.c:97:
+	__ATTR(assert, S_IRUGO, pps_show_assert, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1203: FILE: drivers/pps/sysfs.c:98:
+	__ATTR(clear, S_IRUGO, pps_show_clear, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1204: FILE: drivers/pps/sysfs.c:99:
+	__ATTR(mode, S_IRUGO, pps_show_mode, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1205: FILE: drivers/pps/sysfs.c:100:
+	__ATTR(echo, S_IRUGO, pps_show_echo, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1206: FILE: drivers/pps/sysfs.c:101:
+	__ATTR(name, S_IRUGO, pps_show_name, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1207: FILE: drivers/pps/sysfs.c:102:
+	__ATTR(path, S_IRUGO, pps_show_path, NULL),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1228: FILE: include/linux/pps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1245: FILE: include/linux/pps.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1246: FILE: include/linux/pps.h:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1249: FILE: include/linux/pps.h:22:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1258: FILE: include/linux/pps.h:31:
+ * means the bit is set.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1277: FILE: include/linux/pps.h:50:
+ *^I^I^I^I^I ^I^I[David Woodhouse]$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1284: FILE: include/linux/pps.h:57:
+};
+#define PPS_TIME_INVALID	(1<<0)	/* used to specify timeout==NULL */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1284: FILE: include/linux/pps.h:57:
+#define PPS_TIME_INVALID	(1<<0)	/* used to specify timeout==NULL */
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1284: FILE: include/linux/pps.h:57:
+#define PPS_TIME_INVALID	(1<<0)	/* used to specify timeout==NULL */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1288: FILE: include/linux/pps.h:61:
+^I__u32 clear_sequence; ^I^I/* seq. num. of clear event */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1331: FILE: include/linux/pps.h:104:
+#define PPS_KC_HARDPPS_PLL	1	/* hardpps() constrained to
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1331: FILE: include/linux/pps.h:104:
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1333: FILE: include/linux/pps.h:106:
+#define PPS_KC_HARDPPS_FLL	2	/* hardpps() constrained to
+					   use a frequency-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1333: FILE: include/linux/pps.h:106:
+					   use a frequency-locked loop */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1411: FILE: include/linux/pps.h:184:
+extern void pps_put_source(struct pps_device *pps);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1412: FILE: include/linux/pps.h:185:
+extern int pps_register_source(struct pps_source_info *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1413: FILE: include/linux/pps.h:186:
+extern int pps_register_source(struct pps_source_info *info,
+				int default_params);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1414: FILE: include/linux/pps.h:187:
+extern void pps_unregister_source(int source);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1415: FILE: include/linux/pps.h:188:
+extern int pps_register_cdev(struct pps_device *pps);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1416: FILE: include/linux/pps.h:189:
+extern void pps_unregister_cdev(struct pps_device *pps);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1417: FILE: include/linux/pps.h:190:
+extern void pps_event(int source, struct pps_ktime *ts, int event, void *data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 51 warnings, 52 checks, 1268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
