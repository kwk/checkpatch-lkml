WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> Patch to obscure state information on free in prng code.  Keeps prying eyes from

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: crypto/Kconfig:690:
+config CRYPTO_ANSI_CPRNG
+	tristate "Pseudo Random Number Generation for Cryptographic modules"
+	select CRYPTO_AES
+	select CRYPTO_CTR
+	select CRYPTO_RNG
+	help
+	  This option enables the generic pseudo random number generator
+	  for cryptographic modules.  Uses the Algorithm specified in
+	  ANSI X9.31 A.2.4
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#106: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#111: FILE: crypto/ansi_cprng.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: crypto/ansi_cprng.c:39:
+ * ^I I is our intermediate value$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: crypto/ansi_cprng.c:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#157: FILE: crypto/ansi_cprng.c:47:
+	spinlock_t prng_lock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#173: FILE: crypto/ansi_cprng.c:63:
+		printk(KERN_CRIT "%s", note);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: crypto/ansi_cprng.c:65:
+		print_hex_dump(KERN_CONT, "", DUMP_PREFIX_OFFSET,
+				16, 1,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: crypto/ansi_cprng.c:72:
+	printk(format, ##args);\

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#193: FILE: crypto/ansi_cprng.c:83:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#194: FILE: crypto/ansi_cprng.c:84:
+}
+/*

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#196: FILE: crypto/ansi_cprng.c:86:
+ * returns 0 if generation succeded, <0 if something went wrong
                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: crypto/ansi_cprng.c:94:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_get_more_prng_bytes', this function's name, in a string
#205: FILE: crypto/ansi_cprng.c:95:
+	dbgprint(KERN_CRIT "Calling _get_more_prng_bytes for context %p\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: crypto/ansi_cprng.c:96:
+	dbgprint(KERN_CRIT "Calling _get_more_prng_bytes for context %p\n",
+		ctx);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#216: FILE: crypto/ansi_cprng.c:106:
+	for (i = 0; i < 3; i++) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: crypto/ansi_cprng.c:134:
+			if (!memcmp(ctx->rand_data, ctx->last_rand_data,
+					DEFAULT_BLK_SZ)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#245: FILE: crypto/ansi_cprng.c:135:
+				printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: crypto/ansi_cprng.c:142:
+			memcpy(ctx->last_rand_data, ctx->rand_data,
+				DEFAULT_BLK_SZ);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: crypto/ansi_cprng.c:149:
+			xor_vectors(ctx->rand_data, ctx->I, tmp,
+				DEFAULT_BLK_SZ);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: crypto/ansi_cprng.c:155:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#269: FILE: crypto/ansi_cprng.c:159:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#299: FILE: crypto/ansi_cprng.c:189:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: crypto/ansi_cprng.c:213:
+	dbgprint(KERN_CRIT "getting %d random bytes for context %p\n",
+		byte_count, ctx);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: crypto/ansi_cprng.c:215:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_prng_bytes', this function's name, in a string
#371: FILE: crypto/ansi_cprng.c:261:
+	dbgprint(KERN_CRIT "returning %d from get_prng_bytes in context %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: crypto/ansi_cprng.c:262:
+	dbgprint(KERN_CRIT "returning %d from get_prng_bytes in context %p\n",
+		err, ctx);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "key"
#392: FILE: crypto/ansi_cprng.c:282:
+	prng_key = (key != NULL) ? key : (unsigned char *)DEFAULT_PRNG_KEY;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: crypto/ansi_cprng.c:306:
+		dbgprint(KERN_CRIT "Failed to alloc tfm for context %p\n",
+			ctx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: crypto/ansi_cprng.c:316:
+		dbgprint(KERN_CRIT "PRNG: setkey() failed flags=%x\n",
+			crypto_cipher_get_flags(ctx->tfm));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#438: FILE: crypto/ansi_cprng.c:328:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: crypto/ansi_cprng.c:387:
+
+

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#498: FILE: crypto/ansi_cprng.c:388:
+/* Module initalization */
           ^^^^^^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#518: FILE: crypto/ansi_cprng.c:408:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#534: FILE: crypto/krng.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#581: FILE: crypto/krng.c:48:
+
+

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#582: FILE: crypto/krng.c:49:
+/* Module initalization */
           ^^^^^^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#592: FILE: crypto/krng.c:59:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#606: FILE: crypto/rngapi.c:1:
+/*

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#659: FILE: crypto/rngapi.c:54:
+	__attribute__ ((unused));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#662: FILE: crypto/rngapi.c:57:
+	seq_printf(m, "type         : rng\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#686: FILE: include/crypto/internal/rng.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#718: FILE: include/crypto/rng.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#820: FILE: include/linux/crypto.h:311:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000240307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 24 checks, 777 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000240307.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
