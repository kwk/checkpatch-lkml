WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
 git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-stackprotector.git for-linus

WARNING:TYPO_SPELLING: 'thn' may be misspelled - perhaps 'then'?
#67: 
      x86: if stackprotector is enabled, thn use stack-protector-all by default
                                         ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#192: FILE: arch/x86/kernel/process_64.c:168:
+	 * it, as we wont ever return from this function (so the
 	             ^^^^

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#193: FILE: arch/x86/kernel/process_64.c:169:
+	 * invalid canaries already on the stack wont ever
 	                                         ^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#226: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#231: FILE: include/asm-x86/stackprotector.h:1:
+#ifndef _ASM_STACKPROTECTOR_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#251: FILE: include/asm-x86/stackprotector.h:21:
+	 * it, as we wont ever return from this function (so the
 	             ^^^^

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#252: FILE: include/asm-x86/stackprotector.h:22:
+	 * invalid canaries already on the stack wont ever
 	                                         ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#315: FILE: include/linux/stackprotector.h:1:
+#ifndef _LINUX_STACKPROTECTOR_H

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#349: FILE: init/main.c:544:
+	 * Set up the the initial canary ASAP:

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#376: FILE: kernel/panic.c:325:
+#warning You have selected the CONFIG_CC_STACKPROTECTOR option, but the gcc used does not support this.

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: kernel/panic.c:336:
+	unsigned long foo;
+	barrier();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: kernel/panic.c:344:
+					*(((unsigned long *)&foo)+1)) {
 					                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#396: FILE: kernel/panic.c:345:
+		printk(KERN_ERR "No -fstack-protector-stack-frame!\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#402: FILE: kernel/panic.c:351:
+					*(((unsigned long *)&foo)+2)) {
 					                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#403: FILE: kernel/panic.c:352:
+		printk(KERN_ERR "No -fstack-protector-stack-frame!\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#408: FILE: kernel/panic.c:357:
+	if (current->stack_canary == *(((unsigned long *)&foo)+1))
 	                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#409: FILE: kernel/panic.c:358:
+		*(((unsigned long *)&foo)+1) = 0;
 		                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#411: FILE: kernel/panic.c:360:
+		printk(KERN_ERR "No -fstack-protector canary found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#417: FILE: kernel/panic.c:366:
+	printk(KERN_INFO "Testing -fstack-protector-all feature\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#421: FILE: kernel/panic.c:370:
+		printk(KERN_ERR "-fstack-protector-all test failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: kernel/panic.c:399:
+	panic("stack-protector: Kernel stack is corrupted in: %p\n",
+		__builtin_return_address(0));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290864.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 5 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290864.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
