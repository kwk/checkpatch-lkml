CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: include/net/sock.h:1358:
+	if ((sock_flag(sk, SOCK_RCVTSTAMP) ||
+		sock_flag(sk, SOCK_TIMESTAMPING_RX_SOFTWARE)) ||

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/net/sock.h:1377:
+extern int sock_tx_timestamp(struct msghdr *msg,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: include/net/sock.h:1378:
+extern int sock_tx_timestamp(struct msghdr *msg,
+			struct sock *sk,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: include/net/sock.h:1381:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/net/sock.h:1450:
+extern void sock_enable_timestamp(struct sock *sk, int flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: net/compat.c:237:
+	if (level == SOL_SOCKET &&
+		(type == SCM_TIMESTAMPNS || type == SCM_TIMESTAMPING)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: net/core/sock.c:266:
+		if (!sock_flag(sk, SOCK_TIMESTAMP) &&
+			!sock_flag(sk, SOCK_TIMESTAMPING_RX_SOFTWARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: net/core/sock.c:636:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE,
+				val & SOF_TIMESTAMPING_TX_HARDWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: net/core/sock.c:638:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_SOFTWARE,
+				val & SOF_TIMESTAMPING_TX_SOFTWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: net/core/sock.c:640:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_RX_HARDWARE,
+				val & SOF_TIMESTAMPING_RX_HARDWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: net/core/sock.c:646:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_SOFTWARE,
+				val & SOF_TIMESTAMPING_SOFTWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: net/core/sock.c:648:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE,
+				val & SOF_TIMESTAMPING_SYS_HARDWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: net/core/sock.c:650:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,
+				val & SOF_TIMESTAMPING_RAW_HARDWARE);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#306: FILE: net/core/sock.c:1865:
+		/*
+		 * we just set one of the two flags which require net

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: net/core/sock.c:1870:
+		if (!sock_flag(sk,
+				flag == SOCK_TIMESTAMP ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: net/socket.c:549:
+int sock_tx_timestamp(struct msghdr *msg, struct sock *sk,
+		union sk_buff_hwtstamp *tstamp_tx)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#368: FILE: net/socket.c:619:
+	/* Race occurred between timestamp enabling and packet
+	   receiving.  Fill in the current time for now. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: net/socket.c:619:
+	   receiving.  Fill in the current time for now. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#375: FILE: net/socket.c:626:
+			struct timeval tv;
+			skb_get_timestamp(skb, &tv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: net/socket.c:628:
+			put_cmsg(msg, SOL_SOCKET, SCM_TIMESTAMP,
+				sizeof(tv), &tv);

WARNING:LINE_SPACING: Missing a blank line after declarations
#380: FILE: net/socket.c:631:
+			struct timespec ts;
+			skb_get_timestampns(skb, &ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: net/socket.c:633:
+			put_cmsg(msg, SOL_SOCKET, SCM_TIMESTAMPNS,
+				sizeof(ts), &ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: net/socket.c:638:
+	if (sock_flag(sk, SOCK_TIMESTAMPING_SOFTWARE) ||
+		sock_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: net/socket.c:642:
+		int empty = 1;
+		memset(ts, 0, sizeof(ts));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: net/socket.c:644:
+		if (skb->tstamp.tv64 &&
+			sock_flag(sk, SOCK_TIMESTAMPING_SOFTWARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: net/socket.c:650:
+			if (sock_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE) &&
+				skb_hwtstamp_transformed(skb, ts + 1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: net/socket.c:653:
+			if (sock_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE) &&
+				skb_hwtstamp_raw(skb, ts + 2))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: net/socket.c:658:
+			put_cmsg(msg, SOL_SOCKET,
+				SCM_TIMESTAMPING, sizeof(ts), &ts);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 22 checks, 334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
