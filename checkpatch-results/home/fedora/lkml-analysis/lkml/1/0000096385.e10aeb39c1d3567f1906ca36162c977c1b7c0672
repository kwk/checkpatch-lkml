WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: include/linux/async_dev.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/async_dev.h:33:
+extern int dev_async_schedule(struct device *, void *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#91: FILE: include/linux/async_dev.h:33:
+extern int dev_async_schedule(struct device *, void *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#91: FILE: include/linux/async_dev.h:33:
+extern int dev_async_schedule(struct device *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#91: FILE: include/linux/async_dev.h:33:
+extern int dev_async_schedule(struct device *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#91: FILE: include/linux/async_dev.h:33:
+extern int dev_async_schedule(struct device *, void *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: include/linux/async_dev.h:34:
+extern int dev_async_schedule(struct device *, void *,
+			void *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/async_dev.h:35:
+extern void dev_async_synchronization(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: include/linux/async_dev.h:37:
+extern int dev_async_register(struct device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#95: FILE: include/linux/async_dev.h:37:
+extern int dev_async_register(struct device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#95: FILE: include/linux/async_dev.h:37:
+extern int dev_async_register(struct device *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: include/linux/async_dev.h:38:
+extern void dev_async_unregister(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#96: FILE: include/linux/async_dev.h:38:
+extern void dev_async_unregister(struct device *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: drivers/base/async_dev.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/base/async_dev.c:28:
+static int dev_action(struct device *dev, void *func,
+			void *data, int type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/base/async_dev.c:43:
+	async_synchronize_cookie_domain(cookie,
+					 &context->dev->dev_async->domain);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/base/async_dev.c:46:
+	error =	dev_action(context->dev, context->func, context->data,
+							context->type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#151: FILE: drivers/base/async_dev.c:48:
+		printk(KERN_ERR "PM: Device %s async action failed: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/base/async_dev.c:49:
+		printk(KERN_ERR "PM: Device %s async action failed: error %d\n",
+			dev_name(context->dev), error);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/base/async_dev.c:62:
+int dev_async_schedule(struct device *dev, void *func,
+			void *data, int type)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*context)...) over kzalloc(sizeof(struct dev_async_context)...)
#182: FILE: drivers/base/async_dev.c:79:
+	context = kzalloc(sizeof(struct dev_async_context), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/base/async_dev.c:88:
+	async_schedule_domain(dev_async_action, context,
+			       &dev->dev_async->domain);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#205: FILE: drivers/base/async_dev.c:102:
+	list_for_each_entry(pos, &dev_async_list, node)
+	    async_synchronize_full_domain(&pos->domain);

WARNING:RETURN_VOID: void function return statements are not generally useful
#209: FILE: drivers/base/async_dev.c:106:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#230: FILE: drivers/base/async_dev.c:127:
+			printk(KERN_ERR "device already registered\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev->dev_async)...) over kzalloc(sizeof(struct dev_async_struct)...)
#239: FILE: drivers/base/async_dev.c:136:
+	dev->dev_async = kzalloc(sizeof(struct dev_async_struct), GFP_KERNEL);

WARNING:SPACING: space prohibited before semicolon
#261: FILE: drivers/base/async_dev.c:158:
+		return ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#273: FILE: drivers/base/async_dev.c:170:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096385.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 13 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000096385.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
