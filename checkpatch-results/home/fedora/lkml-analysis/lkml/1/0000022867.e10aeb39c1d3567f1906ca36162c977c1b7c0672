WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#48: FILE: include/linux/list.h:428:
+ * @posmember: the name ot the loop cursor within the struct.
                         ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#51: FILE: include/linux/list.h:431:
+#define list_for_each_struct_entry(pos, head, type, posmember, member)		\
+	for (pos = list_entry((head)->next, type, member)->posmember;		\
+	     prefetch(container_of(pos, type, posmember)->member.next),		\
+	     &container_of(pos, type, posmember)->member != (head);		\
+	     pos = list_entry(container_of(pos, type, posmember)->member.next,	\
+	     type, member)->posmember)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#51: FILE: include/linux/list.h:431:
+#define list_for_each_struct_entry(pos, head, type, posmember, member)		\
+	for (pos = list_entry((head)->next, type, member)->posmember;		\
+	     prefetch(container_of(pos, type, posmember)->member.next),		\
+	     &container_of(pos, type, posmember)->member != (head);		\
+	     pos = list_entry(container_of(pos, type, posmember)->member.next,	\
+	     type, member)->posmember)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'posmember' - possible side-effects?
#51: FILE: include/linux/list.h:431:
+#define list_for_each_struct_entry(pos, head, type, posmember, member)		\
+	for (pos = list_entry((head)->next, type, member)->posmember;		\
+	     prefetch(container_of(pos, type, posmember)->member.next),		\
+	     &container_of(pos, type, posmember)->member != (head);		\
+	     pos = list_entry(container_of(pos, type, posmember)->member.next,	\
+	     type, member)->posmember)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'posmember' may be better as '(posmember)' to avoid precedence issues
#51: FILE: include/linux/list.h:431:
+#define list_for_each_struct_entry(pos, head, type, posmember, member)		\
+	for (pos = list_entry((head)->next, type, member)->posmember;		\
+	     prefetch(container_of(pos, type, posmember)->member.next),		\
+	     &container_of(pos, type, posmember)->member != (head);		\
+	     pos = list_entry(container_of(pos, type, posmember)->member.next,	\
+	     type, member)->posmember)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#51: FILE: include/linux/list.h:431:
+#define list_for_each_struct_entry(pos, head, type, posmember, member)		\
+	for (pos = list_entry((head)->next, type, member)->posmember;		\
+	     prefetch(container_of(pos, type, posmember)->member.next),		\
+	     &container_of(pos, type, posmember)->member != (head);		\
+	     pos = list_entry(container_of(pos, type, posmember)->member.next,	\
+	     type, member)->posmember)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000022867.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 5 checks, 22 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000022867.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
