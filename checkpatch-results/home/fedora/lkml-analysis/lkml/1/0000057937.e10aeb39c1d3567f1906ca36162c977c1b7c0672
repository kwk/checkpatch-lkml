CHECK:SPACING: No space is necessary after a cast
#64: FILE: include/acpi/actypes.h:246:
+#define acpi_os_delete_mutex(handle)    (void) acpi_os_delete_semaphore(handle)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#64: FILE: include/acpi/actypes.h:246:
+#define acpi_os_delete_mutex(handle)    (void) acpi_os_delete_semaphore(handle)

CHECK:SPACING: No space is necessary after a cast
#66: FILE: include/acpi/actypes.h:248:
+#define acpi_os_release_mutex(handle)   (void) acpi_os_signal_semaphore(handle, 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#66: FILE: include/acpi/actypes.h:248:
+#define acpi_os_release_mutex(handle)   (void) acpi_os_signal_semaphore(handle, 1)

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#85: FILE: include/acpi/actypes.h:441:
+#define ACPI_MIN(a, b)                  (((a)<(b))?(a):(b))
                                              ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#85: FILE: include/acpi/actypes.h:441:
+#define ACPI_MIN(a, b)                  (((a)<(b))?(a):(b))
                                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#85: FILE: include/acpi/actypes.h:441:
+#define ACPI_MIN(a, b)                  (((a)<(b))?(a):(b))
                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#85: FILE: include/acpi/actypes.h:441:
+#define ACPI_MIN(a, b)                  (((a)<(b))?(a):(b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#85: FILE: include/acpi/actypes.h:441:
+#define ACPI_MIN(a, b)                  (((a)<(b))?(a):(b))

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#86: FILE: include/acpi/actypes.h:442:
+#define ACPI_MAX(a, b)                  (((a)>(b))?(a):(b))
                                              ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#86: FILE: include/acpi/actypes.h:442:
+#define ACPI_MAX(a, b)                  (((a)>(b))?(a):(b))
                                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#86: FILE: include/acpi/actypes.h:442:
+#define ACPI_MAX(a, b)                  (((a)>(b))?(a):(b))
                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#86: FILE: include/acpi/actypes.h:442:
+#define ACPI_MAX(a, b)                  (((a)>(b))?(a):(b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#86: FILE: include/acpi/actypes.h:442:
+#define ACPI_MAX(a, b)                  (((a)>(b))?(a):(b))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#97: FILE: include/acpi/actypes.h:453:
+#define ACPI_PTR_DIFF(a, b)             (acpi_size) (ACPI_CAST_PTR(u8, (a)) - ACPI_CAST_PTR(u8, (b)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#97: FILE: include/acpi/actypes.h:453:
+#define ACPI_PTR_DIFF(a, b)             (acpi_size) (ACPI_CAST_PTR(u8, (a)) - ACPI_CAST_PTR(u8, (b)))

CHECK:SPACING: No space is necessary after a cast
#104: FILE: include/acpi/actypes.h:457:
+#define ACPI_TO_POINTER(i)              ACPI_ADD_PTR(void, (void *) NULL, (acpi_size) i)

CHECK:SPACING: No space is necessary after a cast
#105: FILE: include/acpi/actypes.h:458:
+#define ACPI_TO_INTEGER(p)              ACPI_PTR_DIFF(p, (void *) NULL)

CHECK:SPACING: No space is necessary after a cast
#106: FILE: include/acpi/actypes.h:459:
+#define ACPI_OFFSET(d, f)               (acpi_size) ACPI_PTR_DIFF(&(((d *)0)->f), (void *) NULL)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#106: FILE: include/acpi/actypes.h:459:
+#define ACPI_OFFSET(d, f)               (acpi_size) ACPI_PTR_DIFF(&(((d *)0)->f), (void *) NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#106: FILE: include/acpi/actypes.h:459:
+#define ACPI_OFFSET(d, f)               (acpi_size) ACPI_PTR_DIFF(&(((d *)0)->f), (void *) NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'f' may be better as '(f)' to avoid precedence issues
#106: FILE: include/acpi/actypes.h:459:
+#define ACPI_OFFSET(d, f)               (acpi_size) ACPI_PTR_DIFF(&(((d *)0)->f), (void *) NULL)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#115: FILE: include/acpi/actypes.h:466:
+#define ACPI_COMPARE_NAME(a, b)         (!ACPI_STRNCMP(ACPI_CAST_PTR(char, (a)), ACPI_CAST_PTR(char, (b)), ACPI_NAME_SIZE))

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#142: FILE: include/acpi/actypes.h:948:
+				      acpi_integer *value,
 				                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057937.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 2 warnings, 16 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057937.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
