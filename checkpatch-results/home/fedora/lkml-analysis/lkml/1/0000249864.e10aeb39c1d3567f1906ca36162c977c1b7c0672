WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
v4: address comments from Ingo, seperate ehci reg def moving to another patch

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#51: 
v4: address comments from Ingo, seperate ehci reg def moving to another patch
                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#98: FILE: arch/x86/kernel/early_printk.c:16:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#221: FILE: arch/x86/kernel/early_printk.c:268:
+static int dbgp_wait_until_done(unsigned ctrl)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lpid == USB_PID_NAK'
#240: FILE: arch/x86/kernel/early_printk.c:287:
+	if ((lpid == USB_PID_NAK) || (lpid == USB_PID_NYET))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lpid == USB_PID_NYET'
#240: FILE: arch/x86/kernel/early_printk.c:287:
+	if ((lpid == USB_PID_NAK) || (lpid == USB_PID_NYET))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#258: FILE: arch/x86/kernel/early_printk.c:305:
+	lo = hi = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#260: FILE: arch/x86/kernel/early_printk.c:307:
+		lo |= bytes[i] << (8*i);
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#262: FILE: arch/x86/kernel/early_printk.c:309:
+		hi |= bytes[i] << (8*(i - 4));
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#276: FILE: arch/x86/kernel/early_printk.c:323:
+		bytes[i] = (lo >> (8*i)) & 0xff;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#278: FILE: arch/x86/kernel/early_printk.c:325:
+		bytes[i] = (hi >> (8*(i - 4))) & 0xff;
 		                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: arch/x86/kernel/early_printk.c:328:
+static int dbgp_bulk_write(unsigned devnum, unsigned endpoint,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: arch/x86/kernel/early_printk.c:328:
+static int dbgp_bulk_write(unsigned devnum, unsigned endpoint,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/x86/kernel/early_printk.c:329:
+static int dbgp_bulk_write(unsigned devnum, unsigned endpoint,
+			 const char *bytes, int size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: arch/x86/kernel/early_printk.c:358:
+static int dbgp_bulk_read(unsigned devnum, unsigned endpoint, void *data,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: arch/x86/kernel/early_printk.c:358:
+static int dbgp_bulk_read(unsigned devnum, unsigned endpoint, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: arch/x86/kernel/early_printk.c:359:
+static int dbgp_bulk_read(unsigned devnum, unsigned endpoint, void *data,
+				 int size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#342: FILE: arch/x86/kernel/early_printk.c:389:
+static int dbgp_control_msg(unsigned devnum, int requesttype, int request,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: arch/x86/kernel/early_printk.c:390:
+static int dbgp_control_msg(unsigned devnum, int requesttype, int request,
+	int value, int index, void *data, int size)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#351: FILE: arch/x86/kernel/early_printk.c:398:
+	if (size > (read ? DBGP_MAX_PACKET:0))
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#355: FILE: arch/x86/kernel/early_printk.c:402:
+	req.bRequestType = requesttype;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#356: FILE: arch/x86/kernel/early_printk.c:403:
+	req.bRequest = request;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#357: FILE: arch/x86/kernel/early_printk.c:404:
+	req.wValue = value;

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#358: FILE: arch/x86/kernel/early_printk.c:405:
+	req.wIndex = index;

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#359: FILE: arch/x86/kernel/early_printk.c:406:
+	req.wLength = size;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#381: FILE: arch/x86/kernel/early_printk.c:428:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: arch/x86/kernel/early_printk.c:444:
+		id = read_pci_config_byte(num, slot, func, pos+PCI_CAP_LIST_ID);
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: arch/x86/kernel/early_printk.c:451:
+		pos = read_pci_config_byte(num, slot, func,
+						 pos+PCI_CAP_LIST_NEXT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#404: FILE: arch/x86/kernel/early_printk.c:451:
+						 pos+PCI_CAP_LIST_NEXT);
 						    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#427: FILE: arch/x86/kernel/early_printk.c:474:
+				unsigned cap;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: arch/x86/kernel/early_printk.c:514:
+			writel(portsc & ~(PORT_RWC_BITS | PORT_RESET),
+				&ehci_regs->port_status[port - 1]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#469: FILE: arch/x86/kernel/early_printk.c:516:
+				portsc = readl(&ehci_regs->port_status[port-1]);
 				                                           ^

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#477: FILE: arch/x86/kernel/early_printk.c:524:
+		/* bomb out completely if something weird happend */
 		                                          ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#522: FILE: arch/x86/kernel/early_printk.c:569:
+	u32 dword;
+	dword = read_pci_config(ehci_dev.bus, ehci_dev.slot, ehci_dev.func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: arch/x86/kernel/early_printk.c:570:
+	dword = read_pci_config(ehci_dev.bus, ehci_dev.slot, ehci_dev.func,
+				 0x74);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#524: FILE: arch/x86/kernel/early_printk.c:571:
+	dword &= ~(0x0f<<12);
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#525: FILE: arch/x86/kernel/early_printk.c:572:
+	dword |= ((port & 0x0f)<<12);
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: arch/x86/kernel/early_printk.c:574:
+	write_pci_config(ehci_dev.bus, ehci_dev.slot, ehci_dev.func, 0x74,
+				 dword);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: arch/x86/kernel/early_printk.c:583:
+	vendorid = read_pci_config(ehci_dev.bus, ehci_dev.slot, ehci_dev.func,
+		 0x00);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#568: FILE: arch/x86/kernel/early_printk.c:615:
+		portsc = readl(&ehci_regs->port_status[i-1]);
 		                                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_debug_port != debug_port'
#572: FILE: arch/x86/kernel/early_printk.c:619:
+	if (port_map_tried && (new_debug_port != debug_port)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: arch/x86/kernel/early_printk.c:699:
+		ret = dbgp_control_msg(devnum,
+			USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_DEVICE,

CHECK:CAMELCASE: Avoid CamelCase: <bDebugOutEndpoint>
#666: FILE: arch/x86/kernel/early_printk.c:713:
+	dbgp_endpoint_out = dbgp_desc.bDebugOutEndpoint;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: arch/x86/kernel/early_printk.c:718:
+		ret = dbgp_control_msg(devnum,
+			USB_DIR_OUT | USB_TYPE_STANDARD | USB_RECIP_DEVICE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: arch/x86/kernel/early_printk.c:722:
+			dbgp_printk("Could not move attached device to %d\n",
+				USB_DEBUG_DEVNUM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: arch/x86/kernel/early_printk.c:731:
+	ret = dbgp_control_msg(USB_DEBUG_DEVNUM,
+		USB_DIR_OUT | USB_TYPE_STANDARD | USB_RECIP_DEVICE,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#710: FILE: arch/x86/kernel/early_printk.c:757:
+	port_map_tried |= (1<<(debug_port - 1));
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#711: FILE: arch/x86/kernel/early_printk.c:758:
+	new_debug_port = ((debug_port-1+1)%n_ports) + 1;
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#711: FILE: arch/x86/kernel/early_printk.c:758:
+	new_debug_port = ((debug_port-1+1)%n_ports) + 1;
 	                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#711: FILE: arch/x86/kernel/early_printk.c:758:
+	new_debug_port = ((debug_port-1+1)%n_ports) + 1;
 	                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#712: FILE: arch/x86/kernel/early_printk.c:759:
+	if (port_map_tried != ((1<<n_ports) - 1)) {
 	                         ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#740: FILE: arch/x86/kernel/early_printk.c:787:
+		dbgp_num = simple_strtoul(s, &e, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: arch/x86/kernel/early_printk.c:795:
+	dbgp_printk("Found EHCI debug port on %02x:%02x.%1x\n", bus, slot,
+			 func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: arch/x86/kernel/early_printk.c:864:
+		ret = dbgp_bulk_write(USB_DEBUG_DEVNUM,
+			dbgp_endpoint_out, str, chunk);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strstr"
#869: FILE: arch/x86/kernel/early_printk.c:949:
+	keep_early = (strstr(buf, "keep") != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#879: FILE: arch/x86/kernel/early_printk.c:969:
+		if (early_dbgp_init(buf+4) < 0)
 		                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249864.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 44 checks, 854 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249864.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
