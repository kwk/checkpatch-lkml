WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#65: FILE: MAINTAINERS:3081:
+P:	Jiri Slaby
+M:	jirislaby@gmail.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: drivers/input/misc/Kconfig:101:
+config PHANTOM
+	tristate "Sensable PHANToM"
+	depends on PCI
+	help
+	  Say Y here if you want to build a driver for Sensable PHANToM device.
+
+	  If you choose to build module, its name will be phantom. If unsure,
+	  say N here.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: drivers/input/misc/phantom.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'an userspace' may be misspelled - perhaps 'a userspace'?
#112: FILE: drivers/input/misc/phantom.c:9:
+ *  You need an userspace library to cooperate with this library. It may be
              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#127: FILE: drivers/input/misc/phantom.c:24:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#135: FILE: drivers/input/misc/phantom.c:32:
+#define phantom_write_cfgl(p, val, off) do {	\
+	writel(val, (p)->caddr + (off));	\
+	readl((p)->caddr + PHN_IRQCTL);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#140: FILE: drivers/input/misc/phantom.c:37:
+#define phantom_write_inl(p, val, off) do {	\
+	outl(val, (p)->ibase + (off));		\
+	inl((p)->ibase);			\
+} while (0)

CHECK:CAMELCASE: Avoid CamelCase: <tCu>
#155: FILE: drivers/input/misc/phantom.c:52:
+	unsigned int tCu[3];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tFe>
#156: FILE: drivers/input/misc/phantom.c:53:
+	unsigned int tFe[3];

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#161: FILE: drivers/input/misc/phantom.c:58:
+	struct mutex open_lock;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'phantom_status', this function's name, in a string
#173: FILE: drivers/input/misc/phantom.c:70:
+	pr_debug("phantom_status %lx %lx\n", dev->status, newstat);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/input/misc/phantom.c:87:
+static int phantom_ioctl(struct inode *inode, struct file *file, u_int cmd,
+	u_long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/input/misc/phantom.c:92:
+	if (_IOC_TYPE(cmd) != PH_IOC_MAGIC ||
+			_IOC_NR(cmd) > PH_IOC_MAXNR)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'phantom_poll', this function's name, in a string
#264: FILE: drivers/input/misc/phantom.c:161:
+	pr_debug("phantom_poll: %u\n", dev->stat->counter);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'phantom_poll', this function's name, in a string
#270: FILE: drivers/input/misc/phantom.c:167:
+	pr_debug("phantom_poll end: %x/%u\n", mask, dev->stat->counter);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vma' - possible side-effects?
#275: FILE: drivers/input/misc/phantom.c:172:
+#define phantom_remap(io, vma, addr)	({				\
+	vma->vm_pgoff = (addr) >> PAGE_SHIFT;				\
+	io ## remap_pfn_range(vma, (vma)->vm_start, (vma)->vm_pgoff,	\
+		(vma)->vm_end - (vma)->vm_start, (vma)->vm_page_prot);	\
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'vma' may be better as '(vma)' to avoid precedence issues
#275: FILE: drivers/input/misc/phantom.c:172:
+#define phantom_remap(io, vma, addr)	({				\
+	vma->vm_pgoff = (addr) >> PAGE_SHIFT;				\
+	io ## remap_pfn_range(vma, (vma)->vm_start, (vma)->vm_pgoff,	\
+		(vma)->vm_end - (vma)->vm_start, (vma)->vm_page_prot);	\
+})

WARNING:CONST_STRUCT: struct file_operations should normally be const
#300: FILE: drivers/input/misc/phantom.c:197:
+static struct file_operations phantom_file_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#331: FILE: drivers/input/misc/phantom.c:228:
+static unsigned int __devinit phantom_get_free(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#342: FILE: drivers/input/misc/phantom.c:239:
+static int __devinit phantom_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/input/misc/phantom.c:240:
+static int __devinit phantom_probe(struct pci_dev *pdev,
+	const struct pci_device_id *pci_id)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht"
#368: FILE: drivers/input/misc/phantom.c:265:
+	if (pht == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht->stat"
#374: FILE: drivers/input/misc/phantom.c:271:
+	if (pht->stat == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht->caddr"
#378: FILE: drivers/input/misc/phantom.c:275:
+	if (pht->caddr == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/input/misc/phantom.c:287:
+	retval = request_irq(pdev->irq, phantom_isr,
+			IRQF_SHARED | IRQF_DISABLED, "phantom", pht);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/input/misc/phantom.c:302:
+	device_create(phantom_class, &pdev->dev, MKDEV(phantom_major, minor),
+			"phantom%u", minor);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#426: FILE: drivers/input/misc/phantom.c:323:
+static void __devexit phantom_remove(struct pci_dev *pdev)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#466: FILE: drivers/input/misc/phantom.c:363:
+static struct pci_device_id phantom_pci_tbl[] __devinitdata = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#497: FILE: drivers/input/misc/phantom.c:394:
+		printk(KERN_ERR "phantom: can't register phantom class\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#502: FILE: drivers/input/misc/phantom.c:399:
+		printk(KERN_ERR "phantom: can't create sysfs version file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#508: FILE: drivers/input/misc/phantom.c:405:
+		printk(KERN_ERR "phantom: can't register character device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#515: FILE: drivers/input/misc/phantom.c:412:
+		printk(KERN_ERR "phantom: can't register pci driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#519: FILE: drivers/input/misc/phantom.c:416:
+	printk(KERN_INFO "Phantom Linux Driver, version " PHANTOM_VERSION ", "

WARNING:SPLIT_STRING: quoted string split across lines
#520: FILE: drivers/input/misc/phantom.c:417:
+	printk(KERN_INFO "Phantom Linux Driver, version " PHANTOM_VERSION ", "
+			"init OK\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_INFO
#542: FILE: drivers/input/misc/phantom.c:439:
+	pr_debug(KERN_INFO "phantom: module successfully removed\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#557: FILE: include/linux/phantom.h:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: include/linux/phantom.h:15:
+#define PH_IOCSTOP		_IO (PH_IOC_MAGIC, 1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#571: FILE: include/linux/phantom.h:15:
+#define PH_IOCSTOP		_IO (PH_IOC_MAGIC, 1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#572: FILE: include/linux/phantom.h:16:
+#define PH_IOCSTART		_IO (PH_IOC_MAGIC, 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#572: FILE: include/linux/phantom.h:16:
+#define PH_IOCSTART		_IO (PH_IOC_MAGIC, 2)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000459435.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 23 warnings, 15 checks, 530 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000459435.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
