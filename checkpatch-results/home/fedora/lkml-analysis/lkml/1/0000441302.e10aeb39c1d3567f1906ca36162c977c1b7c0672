WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
It is more flexible and reliable, while maintaining almost the same behavior

WARNING:TYPO_SPELLING: 'parameterizes' may be misspelled - perhaps 'parametrizes'?
#45: 
data structure introduced by adaptive readahead, parameterizes readahead
                                                 ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: mm/readahead.c:1621:
+static inline unsigned long get_next_ra_size2(struct file_ra_state *ra,
+						unsigned long max)

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: mm/readahead.c:1626:
+        if (cur < max / 16) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: mm/readahead.c:1626:
+        if (cur < max / 16) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#312: FILE: mm/readahead.c:1626:
+        if (cur < max / 16) {
[...]
+        } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: mm/readahead.c:1627:
+                newsize = 4 * cur;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: mm/readahead.c:1627:
+                newsize = 4 * cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: mm/readahead.c:1628:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: mm/readahead.c:1628:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: mm/readahead.c:1629:
+                newsize = 2 * cur;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: mm/readahead.c:1629:
+                newsize = 2 * cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: mm/readahead.c:1630:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: mm/readahead.c:1630:
+        }$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#327: FILE: mm/readahead.c:1641:
+		   struct file_ra_state *ra, struct file *filp,
 		                                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: mm/readahead.c:1657:
+	if (offset && (offset == ra->lookahead_index ||
+			offset == ra->readahead_index)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#355: FILE: mm/readahead.c:1669:
+		return __do_page_cache_readahead(mapping, filp,
 		                                          ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#361: FILE: mm/readahead.c:1675:
+^I * ^I- first read on start of file$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#362: FILE: mm/readahead.c:1676:
+^I * ^I- sequential cache miss$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: mm/readahead.c:1677:
+^I * ^I- oversize random read$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#385: FILE: mm/readahead.c:1699:
+	return ra_submit(ra, mapping, filp);
 	                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#397: FILE: mm/readahead.c:1771:
+		return ondemand_readahead(mapping, ra, filp, page,
 		                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: mm/readahead.c:1790:
+	if (offset == ra->lookahead_index &&
 					!debug_option(disable_clock_readahead))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#430: FILE: mm/filemap.c:951:
+						&ra, filp, page,
 						     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: mm/filemap.c:951:
+				page_cache_readahead_adaptive(mapping,
+						&ra, filp, page,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441302.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 16 warnings, 4 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441302.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
