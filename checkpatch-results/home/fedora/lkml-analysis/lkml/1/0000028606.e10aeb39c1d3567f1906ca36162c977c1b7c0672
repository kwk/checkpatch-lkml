ERROR:OPEN_BRACE: that open brace { should be on the previous line
#128: FILE: kernel/rcutorture.c:1134:
 	static struct rcu_torture_ops *torture_ops[] =
+		{ &rcu_ops, &rcu_sync_ops, &rcu_expedited_ops,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rsp' - possible side-effects?
#214: FILE: kernel/rcutree.h:140:
+#define rcu_for_each_nonleaf_node_breadth_first(rsp, rnp) \
+	for ((rnp) = &(rsp)->node[0]; \
+	     (rnp) < (rsp)->level[NUM_RCU_LVLS - 1]; (rnp)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rnp' - possible side-effects?
#214: FILE: kernel/rcutree.h:140:
+#define rcu_for_each_nonleaf_node_breadth_first(rsp, rnp) \
+	for ((rnp) = &(rsp)->node[0]; \
+	     (rnp) < (rsp)->level[NUM_RCU_LVLS - 1]; (rnp)++)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rnp->parent"
#411: FILE: kernel/rcutree_plugin.h:523:
+		if (rnp->parent == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#474: FILE: kernel/rcutree_plugin.h:582:
+		if (trycount++ < 10)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#476: FILE: kernel/rcutree_plugin.h:584:
+		else {

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#487: FILE: kernel/rcutree_plugin.h:595:
+	synchronize_sched_expedited();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#528: FILE: kernel/rcutree_plugin.h:827:
+ * Because preemptable RCU does not exist, there is never any need to
            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:RETURN_VOID: void function return statements are not generally useful
#535: FILE: kernel/rcutree_plugin.h:834:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 5 checks, 476 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
