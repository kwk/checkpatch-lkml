CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#91: FILE: arch/x86/kernel/io_apic_64.c:253:
+		pin[i-1].next = &pin[i];
 		     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#95: FILE: arch/x86/kernel/io_apic_64.c:257:
+DEFINE_DYN_ARRAY(irq_2_pin_head, sizeof(struct irq_pin_list), nr_irq_2_pin, sizeof(struct irq_pin_list), irq_2_pin_init_work);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#95: FILE: arch/x86/kernel/io_apic_64.c:257:
+}
+DEFINE_DYN_ARRAY(irq_2_pin_head, sizeof(struct irq_pin_list), nr_irq_2_pin, sizeof(struct irq_pin_list), irq_2_pin_init_work);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#113: FILE: arch/x86/kernel/io_apic_64.c:275:
+	printk(KERN_DEBUG "try to get more irq_2_pin %d\n", nr_irq_2_pin);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#116: FILE: arch/x86/kernel/io_apic_64.c:278:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,
 		                                         ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pin)...) over kzalloc(sizeof(struct irq_pin_list)...)
#116: FILE: arch/x86/kernel/io_apic_64.c:278:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: arch/x86/kernel/io_apic_64.c:279:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,
+				 GFP_ATOMIC);

ERROR:SPACING: space prohibited after that open parenthesis '('
#119: FILE: arch/x86/kernel/io_apic_64.c:281:
+		pin = __alloc_bootmem_nopanic( sizeof(struct irq_pin_list) *

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#123: FILE: arch/x86/kernel/io_apic_64.c:285:
+		pin[i-1].next = &pin[i];
 		     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: arch/x86/kernel/io_apic_64.c:1366:
+		struct irq_pin_list *entry = cfg->irq_2_pin;
+		if (!entry)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 6 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
