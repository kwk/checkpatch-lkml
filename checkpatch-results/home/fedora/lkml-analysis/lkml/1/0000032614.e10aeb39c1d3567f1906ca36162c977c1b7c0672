WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#58: FILE: kernel/sched.c:1821:
+	BUG_ON(!irqs_disabled());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2064: FILE: kernel/sched_fair.c:2002:
+	if (!tsk_cache_hot ||
+		sd->nr_balance_failed > sd->cache_nice_tries) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2229: FILE: kernel/sched_fair.c:2167:
+}
+/********** Helpers for find_busiest_group ************************/

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2232: FILE: kernel/sched_fair.c:2170:
+ * ^I^Iduring load balancing.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2289: FILE: kernel/sched_fair.c:2227:
+static inline int get_sd_load_idx(struct sched_domain *sd,
+					enum cpu_idle_type idle)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2309: FILE: kernel/sched_fair.c:2247:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2320: FILE: kernel/sched_fair.c:2258:
+static inline void init_sd_power_savings_stats(struct sched_domain *sd,
+	struct sd_lb_stats *sds, enum cpu_idle_type idle)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2326: FILE: kernel/sched_fair.c:2264:
+	if (idle == CPU_NOT_IDLE || !(sd->flags & SD_POWERSAVINGS_BALANCE))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#2328: FILE: kernel/sched_fair.c:2266:
+	else {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2342: FILE: kernel/sched_fair.c:2280:
+ * ^I^Iload balancing ?$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2346: FILE: kernel/sched_fair.c:2284:
+static inline void update_sd_power_savings_stats(struct sched_group *group,
+	struct sd_lb_stats *sds, int local_group, struct sg_lb_stats *sgs)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2348: FILE: kernel/sched_fair.c:2286:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2357: FILE: kernel/sched_fair.c:2295:
+	if (local_group && (sds->this_nr_running >= sgs->group_capacity ||
+				!sds->this_nr_running))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2365: FILE: kernel/sched_fair.c:2303:
+	if (!sds->power_savings_balance ||
+		sgs->sum_nr_running >= sgs->group_capacity ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sgs->sum_nr_running < sds->min_nr_running'
#2374: FILE: kernel/sched_fair.c:2312:
+	if ((sgs->sum_nr_running < sds->min_nr_running) ||
+	    (sgs->sum_nr_running == sds->min_nr_running &&
+	     group_first_cpu(group) > group_first_cpu(sds->group_min))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2415: FILE: kernel/sched_fair.c:2353:
+static inline int check_power_save_busiest_group(struct sd_lb_stats *sds,
+					int this_cpu, unsigned long *imbalance)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2421: FILE: kernel/sched_fair.c:2359:
+	if (sds->this != sds->group_leader ||
+			sds->group_leader == sds->group_min)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2429: FILE: kernel/sched_fair.c:2367:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2432: FILE: kernel/sched_fair.c:2370:
+static inline void init_sd_power_savings_stats(struct sched_domain *sd,
+	struct sd_lb_stats *sds, enum cpu_idle_type idle)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2435: FILE: kernel/sched_fair.c:2373:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2438: FILE: kernel/sched_fair.c:2376:
+static inline void update_sd_power_savings_stats(struct sched_group *group,
+	struct sd_lb_stats *sds, int local_group, struct sg_lb_stats *sgs)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2441: FILE: kernel/sched_fair.c:2379:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2444: FILE: kernel/sched_fair.c:2382:
+static inline int check_power_save_busiest_group(struct sd_lb_stats *sds,
+					int this_cpu, unsigned long *imbalance)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2450: FILE: kernel/sched_fair.c:2388:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2561: FILE: kernel/sched_fair.c:2499:
+static inline void update_sg_lb_stats(struct sched_domain *sd,
+			struct sched_group *group, int this_cpu,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2579: FILE: kernel/sched_fair.c:2517:
+	sum_avg_load_per_task = avg_load_per_task = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2627: FILE: kernel/sched_fair.c:2565:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2640: FILE: kernel/sched_fair.c:2578:
+	if ((max_cpu_load - min_cpu_load) > 2*avg_load_per_task)
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2658: FILE: kernel/sched_fair.c:2596:
+static inline void update_sd_lb_stats(struct sched_domain *sd, int this_cpu,
+			enum cpu_idle_type idle, int *sd_idle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2680: FILE: kernel/sched_fair.c:2618:
+		update_sg_lb_stats(sd, group, this_cpu, idle, load_idx, sd_idle,
+				local_group, cpus, balance, &sgs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2725: FILE: kernel/sched_fair.c:2663:
+static inline void fix_small_imbalance(struct sd_lb_stats *sds,
+				int this_cpu, unsigned long *imbalance)

CHECK:BRACES: Unbalanced braces around else statement
#2735: FILE: kernel/sched_fair.c:2673:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2789: FILE: kernel/sched_fair.c:2727:
+static inline void calculate_imbalance(struct sd_lb_stats *sds, int this_cpu,
+		unsigned long *imbalance)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2804: FILE: kernel/sched_fair.c:2742:
+	max_pull = min(sds->max_load - sds->avg_load,
+			sds->max_load - sds->busiest_load_per_task);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2808: FILE: kernel/sched_fair.c:2746:
+	*imbalance = min(max_pull * sds->busiest->cpu_power,
+		(sds->avg_load - sds->this_load) * sds->this->cpu_power)

WARNING:TYPO_SPELLING: 'gaurantee' may be misspelled - perhaps 'guarantee'?
#2813: FILE: kernel/sched_fair.c:2751:
+	 * there is no gaurantee that any tasks will be moved so we'll have
 	               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2820: FILE: kernel/sched_fair.c:2758:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2821: FILE: kernel/sched_fair.c:2759:
+}
+/******* find_busiest_group() helpers end here *********************/

WARNING:TYPO_SPELLING: 'relavent' may be misspelled - perhaps 'relevant'?
#2858: FILE: kernel/sched_fair.c:2796:
+	 * Compute the various statistics relavent for load balancing at
 	                                  ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2862: FILE: kernel/sched_fair.c:2800:
+	update_sd_lb_stats(sd, this_cpu, idle, sd_idle, cpus,
+					balance, &sds);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3018: FILE: kernel/sched_fair.c:2956:
+	BUG_ON(busiest == this_rq);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3052: FILE: kernel/sched_fair.c:2990:
+	if (!ld_moved) {
[...]
+	} else
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3056: FILE: kernel/sched_fair.c:2994:
+		if (unlikely(sd->nr_balance_failed > sd->cache_nice_tries+2)) {
 		                                                         ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3057: FILE: kernel/sched_fair.c:2995:
+		if (unlikely(sd->nr_balance_failed > sd->cache_nice_tries+2)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3066: FILE: kernel/sched_fair.c:3004:
+				raw_spin_unlock_irqrestore(&busiest->lock,
+							    flags);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3084: FILE: kernel/sched_fair.c:3022:
+			sd->nr_balance_failed = sd->cache_nice_tries+1;
 			                                            ^

CHECK:BRACES: Unbalanced braces around else statement
#3086: FILE: kernel/sched_fair.c:3024:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sd->balance_interval < sd->max_interval'
#3116: FILE: kernel/sched_fair.c:3054:
+	if ((all_pinned && sd->balance_interval < MAX_PINNED_INTERVAL) ||
+			(sd->balance_interval < sd->max_interval))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3117: FILE: kernel/sched_fair.c:3055:
+	if ((all_pinned && sd->balance_interval < MAX_PINNED_INTERVAL) ||
+			(sd->balance_interval < sd->max_interval))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3177: FILE: kernel/sched_fair.c:3115:
+	BUG_ON(busiest == this_rq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3188: FILE: kernel/sched_fair.c:3126:
+		ld_moved = move_tasks(this_rq, this_cpu, busiest,
+					imbalance, sd, CPU_NEWLY_IDLE,

CHECK:BRACES: braces {} should be used on all arms of this statement
#3199: FILE: kernel/sched_fair.c:3137:
+	if (!ld_moved) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3263: FILE: kernel/sched_fair.c:3201:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3347: FILE: kernel/sched_fair.c:3285:
+	BUG_ON(busiest_rq == target_rq);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#3356: FILE: kernel/sched_fair.c:3294:
+		if ((sd->flags & SD_LOAD_BALANCE) &&
[...]
+				break;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sd' - possible side-effects?
#3418: FILE: kernel/sched_fair.c:3356:
+#define for_each_flag_domain(cpu, sd, flag) \
+	for (sd = lowest_flag_domain(cpu, flag); \
+		(sd && (sd->flags & flag)); sd = sd->parent)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'flag' - possible side-effects?
#3418: FILE: kernel/sched_fair.c:3356:
+#define for_each_flag_domain(cpu, sd, flag) \
+	for (sd = lowest_flag_domain(cpu, flag); \
+		(sd && (sd->flags & flag)); sd = sd->parent)

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#3428: FILE: kernel/sched_fair.c:3366:
+ * We define a sched_group to be semi idle if it has atleast one idle-CPU
                                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#3429: FILE: kernel/sched_fair.c:3367:
+ * and atleast one non-idle CPU. This helper function checks if the given
        ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3435: FILE: kernel/sched_fair.c:3373:
+	cpumask_and(nohz.ilb_grp_nohz_mask, nohz.cpu_mask,
+					sched_group_cpus(ilb_group));

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#3438: FILE: kernel/sched_fair.c:3376:
+	 * A sched_group is semi-idle when it has atleast one busy cpu
 	                                          ^^^^^^^

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#3439: FILE: kernel/sched_fair.c:3377:
+	 * and atleast one idle cpu.
 	       ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3449: FILE: kernel/sched_fair.c:3387:
+}
+/**

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3538: FILE: kernel/sched_fair.c:3476:
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3560: FILE: kernel/sched_fair.c:3498:
+			if (!(sched_smt_power_savings ||
+						sched_mc_power_savings))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3582: FILE: kernel/sched_fair.c:3520:
+				BUG();

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3603: FILE: kernel/sched_fair.c:3541:
+	unsigned long next_balance = jiffies + 60*HZ;
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3619: FILE: kernel/sched_fair.c:3557:
+		if (interval > HZ*NR_CPUS/10)
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3619: FILE: kernel/sched_fair.c:3557:
+		if (interval > HZ*NR_CPUS/10)
 		                         ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#3619: FILE: kernel/sched_fair.c:3557:
+		if (interval > HZ*NR_CPUS/10)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3620: FILE: kernel/sched_fair.c:3558:
+			interval = HZ*NR_CPUS/10;
 			             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3620: FILE: kernel/sched_fair.c:3558:
+			interval = HZ*NR_CPUS/10;
 			                     ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#3620: FILE: kernel/sched_fair.c:3558:
+			interval = HZ*NR_CPUS/10;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 54 checks, 3737 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
