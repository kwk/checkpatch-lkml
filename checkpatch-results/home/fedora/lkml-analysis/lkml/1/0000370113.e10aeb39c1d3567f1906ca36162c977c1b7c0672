WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
 - Add repeat start feature to avoid break of a bundle of i2c master xfer operation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: drivers/i2c/busses/i2c-bfin-twi.c:66:
+^Istruct i2c_msg ^I^I*pmsg;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#83: FILE: drivers/i2c/busses/i2c-bfin-twi.c:72:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#84: FILE: drivers/i2c/busses/i2c-bfin-twi.c:73:
+#define DEFINE_TWI_REG(reg, off) \
+static inline u16 read_##reg(struct bfin_twi_iface *iface) \
+	{ return bfin_read16(iface->regs_base + off); } \
+static inline void write_##reg(struct bfin_twi_iface *iface, u16 v) \
+	{bfin_write16(iface->regs_base + off, v); }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'off' may be better as '(off)' to avoid precedence issues
#84: FILE: drivers/i2c/busses/i2c-bfin-twi.c:73:
+#define DEFINE_TWI_REG(reg, off) \
+static inline u16 read_##reg(struct bfin_twi_iface *iface) \
+	{ return bfin_read16(iface->regs_base + off); } \
+static inline void write_##reg(struct bfin_twi_iface *iface, u16 v) \
+	{bfin_write16(iface->regs_base + off, v); }

CHECK:CAMELCASE: Avoid CamelCase: <transPtr>
#118: FILE: drivers/i2c/busses/i2c-bfin-twi.c:104:
+			write_XMT_DATA8(iface, *(iface->transPtr++));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/i2c/busses/i2c-bfin-twi.c:112:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) | MDIR | RSTART);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/i2c/busses/i2c-bfin-twi.c:115:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) | STOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/i2c/busses/i2c-bfin-twi.c:117:
+		else if (iface->cur_mode == TWI_I2C_MODE_REPEAT &&
+				iface->cur_msg+1 < iface->msg_num)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#137: FILE: drivers/i2c/busses/i2c-bfin-twi.c:117:
+				iface->cur_msg+1 < iface->msg_num)
 				              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/i2c/busses/i2c-bfin-twi.c:119:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) | RSTART);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iface->transPtr
#150: FILE: drivers/i2c/busses/i2c-bfin-twi.c:128:
+			*(iface->transPtr) = read_RCV_DATA8(iface);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/i2c/busses/i2c-bfin-twi.c:144:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) | STOP);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#164: FILE: drivers/i2c/busses/i2c-bfin-twi.c:147:
+				iface->cur_msg+1 < iface->msg_num) {
 				              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/i2c/busses/i2c-bfin-twi.c:149:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) | RSTART);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/i2c/busses/i2c-bfin-twi.c:196:
+				write_MASTER_CTL(iface,
+					read_MASTER_CTL(iface) | (0xff << 6));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/i2c/busses/i2c-bfin-twi.c:202:
+				write_MASTER_CTL(iface,
+					(read_MASTER_CTL(iface) &

CHECK:CAMELCASE: Avoid CamelCase: <readNum>
#227: FILE: drivers/i2c/busses/i2c-bfin-twi.c:204:
+					(iface->readNum << 6));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/i2c/busses/i2c-bfin-twi.c:208:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) & ~RSTART);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/i2c/busses/i2c-bfin-twi.c:210:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) | MEN | MDIR);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: drivers/i2c/busses/i2c-bfin-twi.c:213:
+				iface->cur_msg+1 < iface->msg_num) {
 				              ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#239: FILE: drivers/i2c/busses/i2c-bfin-twi.c:216:
+			iface->writeNum = iface->readNum =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <writeNum>
#239: FILE: drivers/i2c/busses/i2c-bfin-twi.c:216:
+			iface->writeNum = iface->readNum =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/i2c/busses/i2c-bfin-twi.c:220:
+			write_MASTER_ADDR(iface,
+				iface->pmsg[iface->cur_msg].addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#244: FILE: drivers/i2c/busses/i2c-bfin-twi.c:221:
+			if (iface->pmsg[iface->cur_msg].flags & I2C_M_RD)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#246: FILE: drivers/i2c/busses/i2c-bfin-twi.c:223:
+			else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/i2c/busses/i2c-bfin-twi.c:228:
+					write_XMT_DATA8(iface,
+						*(iface->transPtr++));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/i2c/busses/i2c-bfin-twi.c:236:
+				write_MASTER_CTL(iface,
+				iface->pmsg[iface->cur_msg].len << 6);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/i2c/busses/i2c-bfin-twi.c:243:
+			write_MASTER_CTL(iface,
+				read_MASTER_CTL(iface) & ~RSTART);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around adap->dev
#305: FILE: drivers/i2c/busses/i2c-bfin-twi.c:313:
+		dev_err(&(adap->dev), "i2c-bfin-twi: 10 bits addr "

WARNING:SPLIT_STRING: quoted string split across lines
#306: FILE: drivers/i2c/busses/i2c-bfin-twi.c:314:
+		dev_err(&(adap->dev), "i2c-bfin-twi: 10 bits addr "
+			"not supported !\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#322: FILE: drivers/i2c/busses/i2c-bfin-twi.c:321:
+	iface->writeNum = iface->readNum = pmsg->len;

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: drivers/i2c/busses/i2c-bfin-twi.c:335:
+	if (pmsg->flags & I2C_M_RD)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#364: FILE: drivers/i2c/busses/i2c-bfin-twi.c:337:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#395: FILE: drivers/i2c/busses/i2c-bfin-twi.c:354:
+	if (pmsg->len <= 255)
[...]
+	else if (pmsg->len > 255) {
[...]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#464: FILE: drivers/i2c/busses/i2c-bfin-twi.c:472:
+	write_INT_STAT(iface, MERR|MCOMP|XMTSERV|RCVSERV);
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#464: FILE: drivers/i2c/busses/i2c-bfin-twi.c:472:
+	write_INT_STAT(iface, MERR|MCOMP|XMTSERV|RCVSERV);
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#464: FILE: drivers/i2c/busses/i2c-bfin-twi.c:472:
+	write_INT_STAT(iface, MERR|MCOMP|XMTSERV|RCVSERV);
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/i2c/busses/i2c-bfin-twi.c:521:
+					write_XMT_DATA8(iface,
+						*(iface->transPtr++));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/i2c/busses/i2c-bfin-twi.c:524:
+						write_MASTER_CTL(iface,
+							iface->writeNum << 6);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/i2c/busses/i2c-bfin-twi.c:527:
+						write_MASTER_CTL(iface,
+							0xff << 6);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/i2c/busses/i2c-bfin-twi.c:538:
+					write_MASTER_CTL(iface,
+						iface->readNum << 6);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*iface)...) over kzalloc(sizeof(struct bfin_twi_iface)...)
#608: FILE: drivers/i2c/busses/i2c-bfin-twi.c:616:
+	iface = kzalloc(sizeof(struct bfin_twi_iface), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#610: FILE: drivers/i2c/busses/i2c-bfin-twi.c:618:
+		dev_err(&(pdev->dev), "Cannot allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#610: FILE: drivers/i2c/busses/i2c-bfin-twi.c:618:
+	if (!iface) {
+		dev_err(&(pdev->dev), "Cannot allocate memory\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#621: FILE: drivers/i2c/busses/i2c-bfin-twi.c:628:
+	if (res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#622: FILE: drivers/i2c/busses/i2c-bfin-twi.c:629:
+		dev_err(&(pdev->dev), "Cannot get IORESOURCE_MEM\n");

CHECK:SPACING: No space is necessary after a cast
#627: FILE: drivers/i2c/busses/i2c-bfin-twi.c:634:
+	iface->regs_base = (u32) ioremap(res->start, (res->end - res->start)+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#627: FILE: drivers/i2c/busses/i2c-bfin-twi.c:634:
+	iface->regs_base = (u32) ioremap(res->start, (res->end - res->start)+1);
 	                                                                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#629: FILE: drivers/i2c/busses/i2c-bfin-twi.c:636:
+		dev_err(&(pdev->dev), "Cannot map IO\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#636: FILE: drivers/i2c/busses/i2c-bfin-twi.c:643:
+		dev_err(&(pdev->dev), "No DMA channel specified\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iface->adap
#648: FILE: drivers/i2c/busses/i2c-bfin-twi.c:652:
+	p_adap = &(iface->adap);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#650: FILE: drivers/i2c/busses/i2c-bfin-twi.c:654:
+	strlcpy(p_adap->name, pdev->name, sizeof(p_adap->name));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#662: FILE: drivers/i2c/busses/i2c-bfin-twi.c:663:
+		dev_err(&(pdev->dev), "i2c-bfin-twi: can't get IRQ %d !\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#676: FILE: drivers/i2c/busses/i2c-bfin-twi.c:673:
+	write_CLKDIV(iface, ((5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ)
 	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#677: FILE: drivers/i2c/busses/i2c-bfin-twi.c:674:
+			<< 8) | ((5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ)
 			           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#692: FILE: drivers/i2c/busses/i2c-bfin-twi.c:687:
+	dev_info(&(pdev->dev), "Blackfin I2C TWI driver, regs_base @ 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: drivers/i2c/busses/i2c-bfin-twi.c:688:
+	dev_info(&(pdev->dev), "Blackfin I2C TWI driver, regs_base @ 0x%08x\n",
+		iface->regs_base);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370113.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 53 checks, 650 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370113.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
