WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
>    git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git core-fixes-for-linus

WARNING:TYPO_SPELLING: 'embedds' may be misspelled - perhaps 'embeds'?
#53: 
  branch embedds the first branch and adds Nick's fix. The second branch 
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: include/linux/lockdep.h:312:
+extern void lock_set_subclass(struct lockdep_map *lock, unsigned int subclass,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nest_lock' - possible side-effects?
#339: FILE: include/linux/spinlock.h:186:
+# define spin_lock_nest_lock(lock, nest_lock)				\
+	 do {								\
+		 typecheck(struct lockdep_map *, &(nest_lock)->dep_map);\
+		 _spin_lock_nest_lock(lock, &(nest_lock)->dep_map);	\
+	 } while (0)

WARNING:TABSTOP: Statements should start on a tabstop
#340: FILE: include/linux/spinlock.h:187:
+	 do {								\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 17)
#340: FILE: include/linux/spinlock.h:187:
+	 do {								\
+		 typecheck(struct lockdep_map *, &(nest_lock)->dep_map);\

WARNING:TABSTOP: Statements should start on a tabstop
#343: FILE: include/linux/spinlock.h:190:
+	 } while (0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#890: FILE: kernel/lockdep.c:2710:
+	for (i = depth-1; i >= 0; i--) {
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: kernel/lockdep.c:2733:
+		if (!__lock_acquire(hlock->instance,
+			hlock_class(hlock)->subclass, hlock->trylock,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#970: FILE: kernel/lockdep.c:2926:
+EXPORT_SYMBOL_GPL(lock_set_subclass);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1055: FILE: kernel/lockdep_internals.h:53:
+extern unsigned long lockdep_count_forward_deps(struct lock_class *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct lock_class *' should also have an identifier name
#1055: FILE: kernel/lockdep_internals.h:53:
+extern unsigned long lockdep_count_forward_deps(struct lock_class *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1056: FILE: kernel/lockdep_internals.h:54:
+extern unsigned long lockdep_count_backward_deps(struct lock_class *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct lock_class *' should also have an identifier name
#1056: FILE: kernel/lockdep_internals.h:54:
+extern unsigned long lockdep_count_backward_deps(struct lock_class *);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1372: FILE: kernel/spinlock.c:326:
+EXPORT_SYMBOL(_spin_lock_nest_lock);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241226.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 6 checks, 1248 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241226.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
