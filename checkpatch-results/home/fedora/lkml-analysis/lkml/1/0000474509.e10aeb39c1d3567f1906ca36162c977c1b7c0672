WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
GFP_HIGH_MOVABLE. Allocations using the __GFP_MOVABLE can be either migrated

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#116: FILE: include/asm-alpha/page.h:20:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vmaddr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#129: FILE: include/asm-cris/page.h:23:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#142: FILE: include/asm-h8300/page.h:25:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#155: FILE: include/asm-i386/page.h:38:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#171: FILE: include/asm-ia64/page.h:92:
+	struct page *page = alloc_page_vma(

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#172: FILE: include/asm-ia64/page.h:93:
+		GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr); \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#184: FILE: include/asm-m32r/page.h:18:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#197: FILE: include/asm-s390/page.h:67:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#210: FILE: include/asm-x86_64/page.h:54:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#241: FILE: include/linux/gfp.h:61:
+			__GFP_NOMEMALLOC|__GFP_HARDWALL|__GFP_THISNODE|\
 			                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#241: FILE: include/linux/gfp.h:61:
+			__GFP_NOMEMALLOC|__GFP_HARDWALL|__GFP_THISNODE|\
 			                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#241: FILE: include/linux/gfp.h:61:
+			__GFP_NOMEMALLOC|__GFP_HARDWALL|__GFP_THISNODE|\
 			                                              ^

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#264: FILE: include/linux/highmem.h:66:
+ * __alloc_zeroed_user_highpage - Allocate a zeroed HIGHMEM page for a VMA with caller-specified movable GFP flags

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: include/linux/highmem.h:81:
+__alloc_zeroed_user_highpage(gfp_t movableflags,
+			struct vm_area_struct *vma,

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#309: FILE: include/linux/highmem.h:110:
+ * alloc_zeroed_user_highpage_movable - Allocate a zeroed HIGHMEM page for a VMA that the caller knows can move

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: include/linux/highmem.h:119:
+alloc_zeroed_user_highpage_movable(struct vm_area_struct *vma,
+					unsigned long vaddr)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#406: FILE: mm/shmem.c:100:
+				PAGE_CACHE_SHIFT-PAGE_SHIFT);
 				                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474509.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 14 checks, 292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474509.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
