ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#56: FILE: fs/debugfs/inode.c:471:
  int error;

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: fs/debugfs/inode.c:472:
+ int old_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/debugfs/inode.c:489:
+ old_len = old_dentry->d_name.len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/debugfs/inode.c:497:
+ fsnotify_move(old_dir->d_inode, new_dir->d_inode, old_name, old_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: fs/debugfs/inode.c:498:
+ fsnotify_move(old_dir->d_inode, new_dir->d_inode, old_name, old_len,
+ old_dentry->d_name.name, old_dentry->d_name.len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/debugfs/inode.c:498:
+ old_dentry->d_name.name, old_dentry->d_name.len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/debugfs/inode.c:499:
+ S_ISDIR(old_dentry->d_inode->i_mode), NULL, old_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: fs/namei.c:2636:
+ int old_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/namei.c:2660:
+ old_len = old_dentry->d_name.len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/namei.c:2667:
+ int new_len = old_dentry->d_name.len;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#109: FILE: fs/namei.c:2668:
+ int new_len = old_dentry->d_name.len;
+ fsnotify_move(old_dir, new_dir, old_name, old_len, new_name, new_len, is_dir,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/namei.c:2668:
+ fsnotify_move(old_dir, new_dir, old_name, old_len, new_name, new_len, is_dir,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: fs/notify/dnotify/dnotify.c:70:
+ fsnotify_move(old_dir, new_dir, old_name, old_len, new_name, new_len, is_dir,
  return;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 1)
#120: FILE: fs/notify/dnotify/dnotify.c:71:
  if (entry->inode)
+ fsnotify_recalc_inode_mask(entry->inode, false);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/notify/dnotify/dnotify.c:72:
+ fsnotify_recalc_inode_mask(entry->inode, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/notify/dnotify/dnotify.c:91:
+ __u32 test_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/notify/dnotify/dnotify.c:93:
+ if (event->mask & FS_EVENT_ON_DESCENT)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#133: FILE: fs/notify/dnotify/dnotify.c:93:
+ if (event->mask & FS_EVENT_ON_DESCENT)
+ return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/notify/dnotify/dnotify.c:94:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/notify/dnotify/dnotify.c:96:
+ test_mask = event->mask & ~FS_EVENT_ON_CHILD;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#152: FILE: fs/notify/fsnotify.c:80:
+static void fsnotify_update_descents(struct dentry *dentry, bool watched)
 {
+ struct dentry *child;
+
+ list_for_each_entry(child, &dentry->d_subdirs, d_u.d_child) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/notify/fsnotify.c:81:
+ struct dentry *child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/notify/fsnotify.c:83:
+ list_for_each_entry(child, &dentry->d_subdirs, d_u.d_child) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#160: FILE: fs/notify/fsnotify.c:83:
+ list_for_each_entry(child, &dentry->d_subdirs, d_u.d_child) {
+ if (!child->d_inode)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/notify/fsnotify.c:84:
+ if (!child->d_inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#161: FILE: fs/notify/fsnotify.c:84:
+ if (!child->d_inode)
+ continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/notify/fsnotify.c:85:
+ continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: fs/notify/fsnotify.c:87:
+ spin_lock(&child->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/notify/fsnotify.c:89:
+ if (watched)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#166: FILE: fs/notify/fsnotify.c:89:
+ if (watched)
+ child->d_flags |= DCACHE_FSNOTIFY_ANCESTOR_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/notify/fsnotify.c:90:
+ child->d_flags |= DCACHE_FSNOTIFY_ANCESTOR_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/notify/fsnotify.c:91:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#168: FILE: fs/notify/fsnotify.c:91:
+ else
+ child->d_flags &= ~DCACHE_FSNOTIFY_ANCESTOR_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/notify/fsnotify.c:92:
+ child->d_flags &= ~DCACHE_FSNOTIFY_ANCESTOR_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/notify/fsnotify.c:94:
+ if (!fsnotify_inode_watches_descents(child->d_inode)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#171: FILE: fs/notify/fsnotify.c:94:
+ if (!fsnotify_inode_watches_descents(child->d_inode)) {
+ fsnotify_update_descents(child, watched);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: fs/notify/fsnotify.c:94:
+ if (!fsnotify_inode_watches_descents(child->d_inode)) {
+ fsnotify_update_descents(child, watched);
+ }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/notify/fsnotify.c:95:
+ fsnotify_update_descents(child, watched);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/notify/fsnotify.c:96:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/notify/fsnotify.c:98:
+ spin_unlock(&child->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: fs/notify/fsnotify.c:99:
+ }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#182: FILE: fs/notify/fsnotify.c:103:
+/* do something equivalent to __fsnotify_update_child_dentry_flags,
+void __fsnotify_update_descents(struct dentry *dentry, bool lock)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#185: FILE: fs/notify/fsnotify.c:106:
+ bool should_be = fsnotify_inode_watches_descents(dentry->d_inode)
+ || (dentry->d_flags & DCACHE_FSNOTIFY_ANCESTOR_WATCHED);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: fs/notify/fsnotify.c:110:
+ struct dentry *onechild = list_entry(dentry->d_subdirs.next, struct$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: fs/notify/fsnotify.c:112:
+ if (onechild != dentry)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#192: FILE: fs/notify/fsnotify.c:112:
+ if (onechild != dentry)
+ is = onechild->d_flags & DCACHE_FSNOTIFY_ANCESTOR_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: fs/notify/fsnotify.c:113:
+ is = onechild->d_flags & DCACHE_FSNOTIFY_ANCESTOR_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/notify/fsnotify.c:114:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#194: FILE: fs/notify/fsnotify.c:114:
+ else
+ return; /* no child dentries here */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: fs/notify/fsnotify.c:115:
+ return; /* no child dentries here */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: fs/notify/fsnotify.c:117:
+ if (should_be == is)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#197: FILE: fs/notify/fsnotify.c:117:
+ if (should_be == is)
  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: fs/notify/fsnotify.c:119:
+ if (lock)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#200: FILE: fs/notify/fsnotify.c:119:
+ if (lock)
+ spin_lock(&dentry->d_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: fs/notify/fsnotify.c:120:
+ spin_lock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/notify/fsnotify.c:122:
+ fsnotify_update_descents(dentry, should_be);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: fs/notify/fsnotify.c:124:
+ if (lock)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#208: FILE: fs/notify/fsnotify.c:124:
+ if (lock)
+ spin_unlock(&dentry->d_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/notify/fsnotify.c:125:
+ spin_unlock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/notify/fsnotify.c:131:
+ if (dentry->d_flags & DCACHE_FSNOTIFY_PARENT_WATCHED) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#217: FILE: fs/notify/fsnotify.c:131:
+ if (dentry->d_flags & DCACHE_FSNOTIFY_PARENT_WATCHED) {
+ struct dentry *parent;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/notify/fsnotify.c:132:
+ struct dentry *parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/notify/fsnotify.c:133:
+ struct inode *p_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/notify/fsnotify.c:134:
+ bool should_update_children = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/notify/fsnotify.c:135:
+ bool send = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/notify/fsnotify.c:137:
+ spin_lock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: fs/notify/fsnotify.c:139:
+ parent = dentry->d_parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/notify/fsnotify.c:140:
+ p_inode = parent->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: fs/notify/fsnotify.c:142:
+ if (fsnotify_inode_watches_children(p_inode)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#228: FILE: fs/notify/fsnotify.c:142:
+ if (fsnotify_inode_watches_children(p_inode)) {
+ if (p_inode->i_fsnotify_mask & mask) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/notify/fsnotify.c:143:
+ if (p_inode->i_fsnotify_mask & mask) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#229: FILE: fs/notify/fsnotify.c:143:
+ if (p_inode->i_fsnotify_mask & mask) {
+ dget(parent);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: fs/notify/fsnotify.c:144:
+ dget(parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/notify/fsnotify.c:145:
+ send = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/notify/fsnotify.c:146:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/notify/fsnotify.c:147:
+ } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#233: FILE: fs/notify/fsnotify.c:147:
+ } else {
[...]
  dget(parent);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#235: FILE: fs/notify/fsnotify.c:149:
+ /*
+ * The parent doesn't care about events on it's children but

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#236: FILE: fs/notify/fsnotify.c:150:
+ * at least one child thought it did.  We need to run all the
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: fs/notify/fsnotify.c:154:
+ should_update_children = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: fs/notify/fsnotify.c:156:
+ spin_unlock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/notify/fsnotify.c:158:
+ if (send) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#258: FILE: fs/notify/fsnotify.c:158:
+ if (send) {
[...]
+ fsnotify(p_inode, mask | FS_EVENT_ON_TREE, dentry->d_inode,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#260: FILE: fs/notify/fsnotify.c:160:
+ * specifies these are events which came from a child. */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#260: FILE: fs/notify/fsnotify.c:160:
+ /* we are notifying a parent so come up with the new mask which
+ * specifies these are events which came from a child. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: fs/notify/fsnotify.c:161:
+ fsnotify(p_inode, mask | FS_EVENT_ON_TREE, dentry->d_inode,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: fs/notify/fsnotify.c:162:
+ fsnotify(p_inode, mask | FS_EVENT_ON_TREE, dentry->d_inode,
+ FSNOTIFY_EVENT_INODE, dentry->d_name.name, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: fs/notify/fsnotify.c:162:
+ FSNOTIFY_EVENT_INODE, dentry->d_name.name, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/notify/fsnotify.c:163:
+ dput(parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/notify/fsnotify.c:164:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/notify/fsnotify.c:166:
+ if (unlikely(should_update_children)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#274: FILE: fs/notify/fsnotify.c:166:
+ if (unlikely(should_update_children)) {
+ __fsnotify_update_child_dentry_flags(p_inode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/notify/fsnotify.c:167:
+ __fsnotify_update_child_dentry_flags(p_inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: fs/notify/fsnotify.c:168:
+ dput(parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: fs/notify/fsnotify.c:169:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/notify/fsnotify.c:171:
+ fsnotify_far_ancestors(dentry->d_parent, dentry->d_name.name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: fs/notify/fsnotify.c:172:
+ fsnotify_far_ancestors(dentry->d_parent, dentry->d_name.name,
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: fs/notify/fsnotify.c:183:
+ if (dentry->d_flags & DCACHE_FSNOTIFY_ANCESTOR_WATCHED) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#297: FILE: fs/notify/fsnotify.c:183:
+ if (dentry->d_flags & DCACHE_FSNOTIFY_ANCESTOR_WATCHED) {
+ char path[PATH_MAX];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/notify/fsnotify.c:184:
+ char path[PATH_MAX];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: fs/notify/fsnotify.c:185:
+ char *pathptr = path + PATH_MAX - 1 - file_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/notify/fsnotify.c:186:
+ struct dentry *test_dentry, *next_update = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/notify/fsnotify.c:187:
+ struct inode *d_inode, *test_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/notify/fsnotify.c:189:
+ strcpy(pathptr, file_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: fs/notify/fsnotify.c:191:
+ spin_lock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: fs/notify/fsnotify.c:192:
+ d_inode = dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: fs/notify/fsnotify.c:194:
+ test_dentry = dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: fs/notify/fsnotify.c:195:
+ test_inode = d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: fs/notify/fsnotify.c:196:
+ do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#310: FILE: fs/notify/fsnotify.c:196:
+ do {
+ dget(test_dentry);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: fs/notify/fsnotify.c:197:
+ dget(test_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: fs/notify/fsnotify.c:198:
+ if (fsnotify_inode_watches_descents(test_inode)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#312: FILE: fs/notify/fsnotify.c:198:
+ if (fsnotify_inode_watches_descents(test_inode)) {
+ if (test_inode->i_fsnotify_mask & mask) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: fs/notify/fsnotify.c:199:
+ if (test_inode->i_fsnotify_mask & mask) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#313: FILE: fs/notify/fsnotify.c:199:
+ if (test_inode->i_fsnotify_mask & mask) {
+ dget(dentry);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: fs/notify/fsnotify.c:200:
+ dget(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: fs/notify/fsnotify.c:201:
+ spin_unlock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: fs/notify/fsnotify.c:202:
+ inotify_inode_queue_event(test_inode, mask, 0, pathptr,$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#317: FILE: fs/notify/fsnotify.c:203:
+  d_inode);
  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: fs/notify/fsnotify.c:203:
+ inotify_inode_queue_event(test_inode, mask, 0, pathptr,
+  d_inode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: fs/notify/fsnotify.c:203:
+  d_inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: fs/notify/fsnotify.c:204:
+ fsnotify(test_inode, mask | FS_EVENT_ON_DESCENT, d_inode,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: fs/notify/fsnotify.c:205:
+ fsnotify(test_inode, mask | FS_EVENT_ON_DESCENT, d_inode,
+ FSNOTIFY_EVENT_INODE, pathptr, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: fs/notify/fsnotify.c:205:
+ FSNOTIFY_EVENT_INODE, pathptr, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/notify/fsnotify.c:206:
+ spin_lock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/notify/fsnotify.c:207:
+ dput(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/notify/fsnotify.c:208:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/notify/fsnotify.c:209:
+ } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#323: FILE: fs/notify/fsnotify.c:209:
+ } else {
+ next_update = test_dentry;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/notify/fsnotify.c:210:
+ next_update = test_dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: fs/notify/fsnotify.c:211:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: fs/notify/fsnotify.c:213:
+ pathptr -= test_dentry->d_name.len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: fs/notify/fsnotify.c:214:
+ strcpy(pathptr, test_dentry->d_name.name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: fs/notify/fsnotify.c:215:
+ pathptr[test_dentry->d_name.len] = '/';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: fs/notify/fsnotify.c:216:
+ dput(test_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: fs/notify/fsnotify.c:218:
+ test_dentry = test_dentry->d_parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: fs/notify/fsnotify.c:219:
+ test_inode = test_dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: fs/notify/fsnotify.c:220:
+ } while (test_dentry->d_flags & DCACHE_FSNOTIFY_ANCESTOR_WATCHED ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: fs/notify/fsnotify.c:221:
+ fsnotify_inode_watches_descents(test_inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: fs/notify/fsnotify.c:223:
+ spin_unlock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: fs/notify/fsnotify.c:225:
+ if (next_update)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#339: FILE: fs/notify/fsnotify.c:225:
+ if (next_update)
+ __fsnotify_update_descents(next_update, true);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: fs/notify/fsnotify.c:226:
+ __fsnotify_update_descents(next_update, true);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#358: FILE: fs/notify/fsnotify.c:247:
+ /* global tests shouldn't care about events on child/descent only
+ __u32 test_mask = mask & ~FS_EVENT_ON_TREE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: fs/notify/inode_mark.c:125:
+ * updates the descents as needed$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#395: FILE: fs/notify/inode_mark.c:125:
+ * updates the descents as needed
  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/notify/inode_mark.c:126:
+ */$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExO)
#396: FILE: fs/notify/inode_mark.c:126:
+ */
  ^

CHECK:SPACING: space preferred before that '/' (ctx:OxE)
#396: FILE: fs/notify/inode_mark.c:126:
+ */
   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: fs/notify/inode_mark.c:128:
+static void fsnotify_update_descents_as_needed(struct inode *inode,
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: fs/notify/inode_mark.c:129:
+ if (recursive) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#400: FILE: fs/notify/inode_mark.c:129:
+ if (recursive) {
+ struct dentry *dentry;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: fs/notify/inode_mark.c:130:
+ struct dentry *dentry;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#402: FILE: fs/notify/inode_mark.c:131:
+ struct dentry *dentry;
+ list_for_each_entry(dentry, &inode->i_dentry, d_alias) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/notify/inode_mark.c:131:
+ list_for_each_entry(dentry, &inode->i_dentry, d_alias) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#402: FILE: fs/notify/inode_mark.c:131:
+ list_for_each_entry(dentry, &inode->i_dentry, d_alias) {
+ __fsnotify_update_descents(dentry, true);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: fs/notify/inode_mark.c:132:
+ __fsnotify_update_descents(dentry, true);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: fs/notify/inode_mark.c:133:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: fs/notify/inode_mark.c:134:
+ } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#405: FILE: fs/notify/inode_mark.c:134:
+ } else {
+ __fsnotify_update_child_dentry_flags(inode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: fs/notify/inode_mark.c:135:
+ __fsnotify_update_child_dentry_flags(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: fs/notify/inode_mark.c:136:
+ }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#415: FILE: fs/notify/inode_mark.c:140:
+/*
+void fsnotify_recalc_inode_mask(struct inode *inode, bool recursive)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: fs/notify/inode_mark.c:217:
+ * or __fsnotify_update_descents;$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#443: FILE: fs/notify/inode_mark.c:217:
+ * or __fsnotify_update_descents;
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: fs/notify/inode_mark.c:218:
+ * __fsnotify_ancestors resp. fsnotify_far_ancestors will see that the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: fs/notify/inode_mark.c:219:
+ * inode doesn't care about it's children and will update all of these$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#454: FILE: fs/notify/inode_mark.c:220:
+ * flags then.  So really this is just a lazy update (and could be a
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: fs/notify/inode_mark.c:220:
+ * flags then.  So really this is just a lazy update (and could be a$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#454: FILE: fs/notify/inode_mark.c:220:
+ * flags then.  So really this is just a lazy update (and could be a

CHECK:CAMELCASE: Avoid CamelCase: <So>
#454: FILE: fs/notify/inode_mark.c:220:
+ * flags then.  So really this is just a lazy update (and could be a

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: fs/notify/inode_mark.c:221:
+ * perf win...)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: fs/notify/inode_mark.c:361:
+ if (entry->mask & FS_EVENT_ON_DESCENT) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#463: FILE: fs/notify/inode_mark.c:361:
+ if (entry->mask & FS_EVENT_ON_DESCENT) {
+ struct dentry *dentry;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: fs/notify/inode_mark.c:362:
+ struct dentry *dentry;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#467: FILE: fs/notify/inode_mark.c:365:
+ /*
+ * as this is supposed to be a directory, this should only loop once

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: fs/notify/inode_mark.c:368:
+ list_for_each_entry(dentry, &inode->i_dentry, d_alias) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#470: FILE: fs/notify/inode_mark.c:368:
+ list_for_each_entry(dentry, &inode->i_dentry, d_alias) {
+ __fsnotify_update_dcache_flags(dentry);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: fs/notify/inode_mark.c:369:
+ __fsnotify_update_dcache_flags(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: fs/notify/inode_mark.c:370:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: fs/notify/inode_mark.c:371:
+ }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 1)
#480: FILE: fs/notify/inode_mark.c:381:
  } else {
+ fsnotify_update_descents_as_needed(inode, entry->mask & FS_EVENT_ON_DESCENT);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: fs/notify/inode_mark.c:382:
+ fsnotify_update_descents_as_needed(inode, entry->mask & FS_EVENT_ON_DESCENT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: fs/notify/inotify/inotify_fsnotify.c:89:
+ __u32 test_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: fs/notify/inotify/inotify_fsnotify.c:98:
+ test_mask = mask & ~FS_EVENT_ON_TREE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: fs/notify/inotify/inotify_fsnotify.c:99:
+ send = entry->mask & test_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/notify/inotify/inotify_fsnotify.c:100:
+ send = send && ((mask & FS_EVENT_ON_TREE) ? ((entry->mask & mask) &$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>
  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>
        ^

CHECK:CAMELCASE: Avoid CamelCase: <Tree>
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>

CHECK:CAMELCASE: Avoid CamelCase: <Joris>
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>

CHECK:CAMELCASE: Avoid CamelCase: <Dolderer>
#522: FILE: fs/notify/inotify/inotify_user.c:11:
+ * Tree-watching support (C) 2010 Joris Dolderer <vorstadtkind@googlemail.com>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: fs/notify/inotify/inotify_user.c:12:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: fs/notify/inotify/inotify_user.c:104:
+ mask = FS_IN_IGNORED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: fs/notify/inotify/inotify_user.c:108:
+ mask |= (arg & IN_TREE) ? FS_EVENT_ON_DESCENT : FS_EVENT_ON_CHILD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: fs/notify/inotify/inotify_user.c:510:
+ if (dropped || do_inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#551: FILE: fs/notify/inotify/inotify_user.c:510:
+ if (dropped || do_inode)
+ fsnotify_recalc_inode_mask(inode, (old_mask ^ new_mask) & IN_TREE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: fs/notify/inotify/inotify_user.c:511:
+ fsnotify_recalc_inode_mask(inode, (old_mask ^ new_mask) & IN_TREE);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#567: FILE: include/linux/dcache.h:187:
+#define DCACHE_FSNOTIFY_PARENT_WATCHED 0x0080 /* Parent inode is
+#define DCACHE_FSNOTIFY_ANCESTOR_WATCHED 0x0100 /* Ancestor inode is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#582: FILE: include/linux/dcache.h:49:
+ * dnotify. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: include/linux/dcache.h:49:
+ * dnotify. */$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#582: FILE: include/linux/dcache.h:49:
+ * dnotify. */
  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#582: FILE: include/linux/dcache.h:49:
+ * dnotify. */
             ^

CHECK:SPACING: space preferred before that '/' (ctx:OxE)
#582: FILE: include/linux/dcache.h:49:
+ * dnotify. */
              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#587: FILE: include/linux/dcache.h:53:
+#define FS_EVENT_ON_TREE (FS_EVENT_ON_CHILD|FS_EVENT_ON_DESCENT)
                                            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#598: FILE: include/linux/dcache.h:258:
+extern void __fsnotify_ancestors(struct dentry *dentry, __u32 mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#599: FILE: include/linux/dcache.h:259:
+extern void fsnotify_far_ancestors(struct dentry *dentry, const

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#602: FILE: include/linux/dcache.h:260:
+extern void __fsnotify_update_descents(struct dentry *dentry, bool lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: include/linux/dcache.h:264:
+ if (!(inode->i_fsnotify_mask & what))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#612: FILE: include/linux/dcache.h:264:
+ if (!(inode->i_fsnotify_mask & what))
  return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: include/linux/dcache.h:268:
+ return fsnotify_inode_watches_something(inode, FS_EVENT_ON_CHILD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: include/linux/dcache.h:273:
+ return fsnotify_inode_watches_something(inode, FS_EVENT_ON_DESCENT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: include/linux/dcache.h:291:
+ struct inode *p_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: include/linux/dcache.h:293:
+ p_inode = parent->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: include/linux/dcache.h:295:
+ if (p_inode) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#649: FILE: include/linux/dcache.h:295:
+ if (p_inode) {
+ if (fsnotify_inode_watches_descents(p_inode) || (parent->d_flags &

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: include/linux/dcache.h:296:
+ if (fsnotify_inode_watches_descents(p_inode) || (parent->d_flags &$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#650: FILE: include/linux/dcache.h:296:
+ if (fsnotify_inode_watches_descents(p_inode) || (parent->d_flags &
[...]
+ dentry->d_flags |= DCACHE_FSNOTIFY_ANCESTOR_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: include/linux/dcache.h:297:
+ dentry->d_flags |= DCACHE_FSNOTIFY_ANCESTOR_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: include/linux/dcache.h:298:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#653: FILE: include/linux/dcache.h:298:
+ else
+ dentry->d_flags &= ~DCACHE_FSNOTIFY_ANCESTOR_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: include/linux/dcache.h:299:
+ dentry->d_flags &= ~DCACHE_FSNOTIFY_ANCESTOR_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: include/linux/dcache.h:301:
+ if (fsnotify_inode_watches_children(p_inode))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#656: FILE: include/linux/dcache.h:301:
+ if (fsnotify_inode_watches_children(p_inode))
+ dentry->d_flags |= DCACHE_FSNOTIFY_PARENT_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: include/linux/dcache.h:302:
+ dentry->d_flags |= DCACHE_FSNOTIFY_PARENT_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: include/linux/dcache.h:303:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#658: FILE: include/linux/dcache.h:303:
+ else
+ dentry->d_flags &= ~DCACHE_FSNOTIFY_PARENT_WATCHED;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: include/linux/dcache.h:304:
+ dentry->d_flags &= ~DCACHE_FSNOTIFY_PARENT_WATCHED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: include/linux/dcache.h:305:
+ }$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#669: FILE: include/linux/dcache.h:359:
+extern void fsnotify_recalc_inode_mask(struct inode *inode, bool recursive);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: include/linux/fsnotify.h:20:
+ const char *name = dentry->d_name.name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: include/linux/fsnotify.h:21:
+ const int len = dentry->d_name.len;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#697: FILE: include/linux/fsnotify.h:22:
+ const int len = dentry->d_name.len;
+ fsnotify_far_ancestors(dentry->d_parent, name, len, mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: include/linux/fsnotify.h:22:
+ fsnotify_far_ancestors(dentry->d_parent, name, len, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: include/linux/fsnotify.h:39:
+ __fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: include/linux/fsnotify.h:100:
+ list_for_each_entry(alias, &new_dir->i_dentry, d_alias) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#751: FILE: include/linux/fsnotify.h:100:
+ list_for_each_entry(alias, &new_dir->i_dentry, d_alias) {
+ fsnotify_far_ancestors(alias, new_name, new_len, new_dir_mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: include/linux/fsnotify.h:101:
+ fsnotify_far_ancestors(alias, new_name, new_len, new_dir_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: include/linux/fsnotify.h:102:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: include/linux/fsnotify.h:104:
+ list_for_each_entry(alias, &old_dir->i_dentry, d_alias) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#755: FILE: include/linux/fsnotify.h:104:
+ list_for_each_entry(alias, &old_dir->i_dentry, d_alias) {
+ fsnotify_far_ancestors(alias, old_name, old_len, old_dir_mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: include/linux/fsnotify.h:105:
+ fsnotify_far_ancestors(alias, old_name, old_len, old_dir_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: include/linux/fsnotify.h:106:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: include/linux/fsnotify.h:144:
+ fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: include/linux/fsnotify.h:168:
+ fsnotify_far_ancestors_getinfo(dentry, FS_CREATE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: include/linux/fsnotify.h:199:
+ fsnotify_far_ancestors_getinfo(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: include/linux/fsnotify.h:217:
+ fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: include/linux/fsnotify.h:234:
+ fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: include/linux/fsnotify.h:251:
+ fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: include/linux/fsnotify.h:270:
+ fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: include/linux/fsnotify.h:287:
+ fsnotify_ancestors(dentry, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: include/linux/fsnotify.h:322:
+ fsnotify_ancestors(dentry, mask);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000014954.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 223 warnings, 25 checks, 775 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000014954.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
