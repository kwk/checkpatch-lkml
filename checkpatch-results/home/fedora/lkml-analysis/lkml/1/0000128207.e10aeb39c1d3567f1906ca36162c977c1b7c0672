WARNING:TYPO_SPELLING: 'subsytem' may be misspelled - perhaps 'subsystem'?
#21: 
Subject: [PATCH 07/11] Xen/x86/PCI: Add support for the Xen PCI subsytem
                                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: arch/x86/include/asm/pci_x86.h:110:
+extern int pci_xen_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#92: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: arch/x86/include/asm/xen/iommu.h:1:
+#ifndef ASM_X86__XEN_IOMMU_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: arch/x86/include/asm/xen/iommu.h:4:
+extern void xen_iommu_init(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: arch/x86/kernel/pci-dma.c:280:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: arch/x86/pci/xen.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: arch/x86/pci/xen.c:3:
+ * ^I^I^I   x86 PCI core to support the Xen PCI Frontend$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#196: FILE: arch/x86/pci/xen.c:28:
+	printk(KERN_INFO "PCI: setting up Xen PCI frontend stub\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: drivers/pci/xen-iommu.c:1:
+#include <linux/types.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#262: FILE: drivers/pci/xen-iommu.c:23:
+		printk(KERN_ALERT "Fatal DMA error! "	\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: drivers/pci/xen-iommu.c:25:
+		BUG();					\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#269: FILE: drivers/pci/xen-iommu.c:30:
+#define PAR(msg, addr, size)					\
+do {							\
+	printk(msg "[%#llx - %#llx]\n",			\
+	(unsigned long long)addr,			\
+	(unsigned long long)addr + size);		\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'size' may be better as '(size)' to avoid precedence issues
#269: FILE: drivers/pci/xen-iommu.c:30:
+#define PAR(msg, addr, size)					\
+do {							\
+	printk(msg "[%#llx - %#llx]\n",			\
+	(unsigned long long)addr,			\
+	(unsigned long long)addr + size);		\
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#269: FILE: drivers/pci/xen-iommu.c:30:
+#define PAR(msg, addr, size)					\
+do {							\
+	printk(msg "[%#llx - %#llx]\n",			\
+	(unsigned long long)addr,			\
+	(unsigned long long)addr + size);		\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#271: FILE: drivers/pci/xen-iommu.c:32:
+	printk(msg "[%#llx - %#llx]\n",			\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/pci/xen-iommu.c:46:
+static inline int address_needs_mapping(struct device *hwdev,
+						dma_addr_t addr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: drivers/pci/xen-iommu.c:58:
+		printk(KERN_ERR "dma address needs mapping\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#298: FILE: drivers/pci/xen-iommu.c:59:
+		printk(KERN_ERR "mask: %#llx\n address: [%#llx]\n", mask, addr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#312: FILE: drivers/pci/xen-iommu.c:73:
+	nr_pages = (offset + length + PAGE_SIZE-1) >> PAGE_SHIFT;
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/pci/xen-iommu.c:113:
+static int xen_map_sg(struct device *hwdev, struct scatterlist *sg,
+			int nents, int direction)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#358: FILE: drivers/pci/xen-iommu.c:119:
+	BUG_ON(direction == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: drivers/pci/xen-iommu.c:123:
+		BUG_ON(!sg_page(s));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#366: FILE: drivers/pci/xen-iommu.c:127:
+		IOMMU_BUG_ON(range_straddles_page_boundary(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->coherent_dma_mask < 0xffffffff'
#414: FILE: drivers/pci/xen-iommu.c:175:
+	if (dev == NULL || (dev->coherent_dma_mask < 0xffffffff))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#414: FILE: drivers/pci/xen-iommu.c:175:
+	if (dev == NULL || (dev->coherent_dma_mask < 0xffffffff))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#420: FILE: drivers/pci/xen-iommu.c:181:
+	if (dev != NULL && dev->coherent_dma_mask)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ret"
#425: FILE: drivers/pci/xen-iommu.c:186:
+	if (ret != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: drivers/pci/xen-iommu.c:199:
+static void xen_free_coherent(struct device *dev, size_t size,
+			 void *vaddr, dma_addr_t dma_addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#446: FILE: drivers/pci/xen-iommu.c:207:
+		int page = (vaddr - mem->virt_base) >> PAGE_SHIFT;
+		bitmap_release_region(mem->bitmap, page, order);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: drivers/pci/xen-iommu.c:218:
+	dma_addr_t dma;
+	BUG_ON(direction == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#457: FILE: drivers/pci/xen-iommu.c:218:
+	BUG_ON(direction == DMA_NONE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/pci/xen-iommu.c:228:
+static dma_addr_t xen_map_single(struct device *dev, phys_addr_t paddr,
+					size_t size, int direction)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#472: FILE: drivers/pci/xen-iommu.c:233:
+	BUG_ON(direction == DMA_NONE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/pci/xen-iommu.c:247:
+static void xen_unmap_single(struct device *dev, dma_addr_t dma_addr,
+				size_t size, int direction)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#488: FILE: drivers/pci/xen-iommu.c:249:
+	BUG_ON(direction == DMA_NONE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#531: FILE: drivers/pci/xen-iommu.c:292:
+	printk(KERN_INFO "Xen: Initializing Xen DMA ops\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#537: FILE: drivers/pci/xen-iommu.c:298:
+		printk(KERN_INFO "Xen: Enabling DMA fallback to swiotlb\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 22 warnings, 15 checks, 429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
