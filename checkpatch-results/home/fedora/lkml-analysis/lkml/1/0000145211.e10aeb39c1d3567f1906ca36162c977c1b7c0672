WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
We have been increasingly concerned about the amount of time certain systems

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#85: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'Continously' may be misspelled - perhaps 'Continuously'?
#137: FILE: Documentation/smi_detector.txt:48:
+sample_us		- last sample (usecs). Continously updated, may be used
          		                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#180: FILE: Documentation/smi_detector.txt:91:
+to not create a continous sampling situation, that might be perceived by the
                 ^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#192: FILE: drivers/misc/Kconfig:79:
+config SMI_DETECTOR
+	tristate "Test module for detecting time gaps caused by SMIs"
+	default m
+	---help---
+	  A simple SMI detector. Use this module to detect large system
+	  latencies introduced by the presence of vendor BIOS SMI
+	  (System Management Interrupts) somehow gone awry. We do this
+	  by hogging all of the CPU(s) for configurable time intervals,
+	  looking to see if something stole time from us. Therefore,
+	  obviously, you should NEVER use this module in a production
+	  environment.
+
+	  If unsure, say N
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#224: FILE: drivers/misc/smi_detector.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#256: FILE: drivers/misc/smi_detector.c:33:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 28)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#256: FILE: drivers/misc/smi_detector.c:33:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 28)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#278: FILE: drivers/misc/smi_detector.c:55:
+DEFINE_MUTEX(enable_mutex);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#283: FILE: drivers/misc/smi_detector.c:60:
+struct smdata_struct {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: drivers/misc/smi_detector.c:82:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#333: FILE: drivers/misc/smi_detector.c:110:
+	do {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#341: FILE: drivers/misc/smi_detector.c:118:
+			printk(KERN_ERR SMI_BANNER "time running backwards\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#350: FILE: drivers/misc/smi_detector.c:127:
+	} while (total <= USEC_PER_MSEC*smi_sample_ms);
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#412: FILE: drivers/misc/smi_detector.c:189:
+static int smi_debug_sample_fopen(struct inode *inode, struct file *filp)
                                                                     ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#414: FILE: drivers/misc/smi_detector.c:191:
+{
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#419: FILE: drivers/misc/smi_detector.c:196:
+static ssize_t smi_debug_sample_fread(struct file *filp, char __user *ubuf,
                                                    ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#419: FILE: drivers/misc/smi_detector.c:196:
+}
+static ssize_t smi_debug_sample_fread(struct file *filp, char __user *ubuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: drivers/misc/smi_detector.c:197:
+static ssize_t smi_debug_sample_fread(struct file *filp, char __user *ubuf,
+					size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#444: FILE: drivers/misc/smi_detector.c:221:
+static int smi_debug_enable_fopen(struct inode *inode, struct file *filp)
                                                                     ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#449: FILE: drivers/misc/smi_detector.c:226:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#450: FILE: drivers/misc/smi_detector.c:227:
+static ssize_t smi_debug_enable_fread(struct file *filp, char __user *ubuf,
                                                    ^^^^

WARNING:IF_1: Consider removing the #if 1 and its #endif
#477: FILE: drivers/misc/smi_detector.c:254:
+#if 1

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#478: FILE: drivers/misc/smi_detector.c:255:
+	val = simple_strtol(buffer, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#480: FILE: drivers/misc/smi_detector.c:257:
+	if (strict_strtol(buffer, 10, &val))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#498: FILE: drivers/misc/smi_detector.c:275:
+	printk(SMI_BANNER "smi_detector thread %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: drivers/misc/smi_detector.c:276:
+	printk(SMI_BANNER "smi_detector thread %s\n",
+		enabled ? "started" : "stopped");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#513: FILE: drivers/misc/smi_detector.c:290:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#514: FILE: drivers/misc/smi_detector.c:291:
+	printk(KERN_INFO SMI_BANNER "version %s\n", smi_version);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smi_debug_dir"
#523: FILE: drivers/misc/smi_detector.c:300:
+	if (smi_debug_dir == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#524: FILE: drivers/misc/smi_detector.c:301:
+		printk(KERN_INFO SMI_BANNER "debugfs not mounted!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/misc/smi_detector.c:306:
+	smi_debug_sample_ms = debugfs_create_u32("ms_per_sample",
+				0644, smi_debug_dir, &smi_sample_ms);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/misc/smi_detector.c:308:
+	smi_debug_interval_ms = debugfs_create_u32("ms_between_samples",
+				0644, smi_debug_dir, &smi_interval_ms);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: drivers/misc/smi_detector.c:310:
+	smi_debug_max = debugfs_create_u64("max_sample_us",
+				0644, smi_debug_dir, &smdata.max_sample);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/misc/smi_detector.c:312:
+	smi_debug_smi = debugfs_create_u64("smi_count",
+				0644, smi_debug_dir, &smdata.smi_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: drivers/misc/smi_detector.c:314:
+	smi_debug_sample = debugfs_create_file("sample_us",
+				0444, smi_debug_dir, &smdata, &smi_sample_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/misc/smi_detector.c:316:
+	smi_debug_frequency_us = debugfs_create_u64("avg_smi_interval_us",
+				0444, smi_debug_dir, &smdata.frequency);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: drivers/misc/smi_detector.c:318:
+	smi_debug_threshold = debugfs_create_u64("latency_threshold_us",
+				0444, smi_debug_dir, &smdata.threshold);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: drivers/misc/smi_detector.c:321:
+	smi_debug_enable = debugfs_create_file("enable",
+				0644, smi_debug_dir,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#547: FILE: drivers/misc/smi_detector.c:324:
+
+

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#563: FILE: drivers/misc/smi_detector.c:340:
+	if (smi_debug_sample_ms)
+		debugfs_remove(smi_debug_sample_ms);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#565: FILE: drivers/misc/smi_detector.c:342:
+	if (smi_debug_interval_ms)
+		debugfs_remove(smi_debug_interval_ms);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#567: FILE: drivers/misc/smi_detector.c:344:
+	if (smi_debug_max)
+		debugfs_remove(smi_debug_max);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#569: FILE: drivers/misc/smi_detector.c:346:
+	if (smi_debug_smi)
+		debugfs_remove(smi_debug_smi);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#571: FILE: drivers/misc/smi_detector.c:348:
+	if (smi_debug_frequency_us)
+		debugfs_remove(smi_debug_frequency_us);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#573: FILE: drivers/misc/smi_detector.c:350:
+	if (smi_debug_threshold)
+		debugfs_remove(smi_debug_threshold);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#575: FILE: drivers/misc/smi_detector.c:352:
+	if (smi_debug_sample)
+		debugfs_remove(smi_debug_sample);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#577: FILE: drivers/misc/smi_detector.c:354:
+	if (smi_debug_enable)
+		debugfs_remove(smi_debug_enable);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#579: FILE: drivers/misc/smi_detector.c:356:
+	if (smi_debug_dir)
+		debugfs_remove(smi_debug_dir);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#591: FILE: scripts/smidetect:2:
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 21 checks, 760 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
