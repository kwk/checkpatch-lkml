WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > > 0xc0000000000fe018 is in setup_cpu_cache (/home/olaf/kernel/git/linux-2.6-numa/mm/slab.c:2111).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#64: FILE: mm/slab.c:351:
+	printk(" o kmem_list3_init\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: mm/slab.c:1240:
+	printk("cpuup_prepare %ld\n", cpu);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpuup_prepare', this function's name, in a string
#72: FILE: mm/slab.c:1240:
+	printk("cpuup_prepare %ld\n", cpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#80: FILE: mm/slab.c:1248:
+			printk(" o allocing %s %d\n", cachep->name, node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#88: FILE: mm/slab.c:1262:
+			printk(" o l3 setup\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#96: FILE: mm/slab.c:1327:
+	printk(" o bad\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#104: FILE: mm/slab.c:1413:
+	printk("init_list RESETTING %s node %d\n", cachep->name, nodeid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_list', this function's name, in a string
#104: FILE: mm/slab.c:1413:
+	printk("init_list RESETTING %s node %d\n", cachep->name, nodeid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: mm/slab.c:1436:
+	printk("Online nodes\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#114: FILE: mm/slab.c:1438:
+		printk("o %d\n", node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: mm/slab.c:1439:
+	printk("Nodes with regular memory\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: mm/slab.c:1441:
+		printk("o %d\n", node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: mm/slab.c:1442:
+	printk("Current running CPU %d is associated with node %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: mm/slab.c:1443:
+	printk("Current running CPU %d is associated with node %d\n",
+		smp_processor_id(),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#121: FILE: mm/slab.c:1445:
+	printk("Current node is %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: mm/slab.c:1446:
+	printk("Current node is %d\n",
+		numa_node_id());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: mm/slab.c:1452:
+		printk("kmem_cache_init Setting %s NULL %d\n", cache_cache.name, i);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kmem_cache_init', this function's name, in a string
#128: FILE: mm/slab.c:1452:
+		printk("kmem_cache_init Setting %s NULL %d\n", cache_cache.name, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: mm/slab.c:1490:
+	printk("kmem_cache_init Setting %s NULL %d\n", cache_cache.name, node);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kmem_cache_init', this function's name, in a string
#136: FILE: mm/slab.c:1490:
+	printk("kmem_cache_init Setting %s NULL %d\n", cache_cache.name, node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: mm/slab.c:1491:
+	printk("kmem_cache_init Setting %s initkmem_list3 %d\n", cache_cache.name, node);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kmem_cache_init', this function's name, in a string
#137: FILE: mm/slab.c:1491:
+	printk("kmem_cache_init Setting %s initkmem_list3 %d\n", cache_cache.name, node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: mm/slab.c:1992:
+	printk("set_up_list3s %s index %d\n", cachep->name, index);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_up_list3s', this function's name, in a string
#155: FILE: mm/slab.c:1992:
+	printk("set_up_list3s %s index %d\n", cachep->name, index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#161: FILE: mm/slab.c:1998:
+		printk("set_up_list3s %s index %d\n", cachep->name, index);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_up_list3s', this function's name, in a string
#161: FILE: mm/slab.c:1998:
+		printk("set_up_list3s %s index %d\n", cachep->name, index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: mm/slab.c:2125:
+			printk("setup_cpu_cache %s\n", cachep->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup_cpu_cache', this function's name, in a string
#170: FILE: mm/slab.c:2125:
+			printk("setup_cpu_cache %s\n", cachep->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#176: FILE: mm/slab.c:2131:
+				printk(" o allocated node %d\n", node);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: mm/slab.c:2807:
+	BUG_ON(!l3);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: mm/slab.c:3852:
+	printk("alloc_kmemlist %s\n", cachep->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_kmemlist', this function's name, in a string
#208: FILE: mm/slab.c:3852:
+	printk("alloc_kmemlist %s\n", cachep->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#211: FILE: mm/slab.c:3855:
+		printk(" o node %d\n", node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: mm/slab.c:3876:
+			printk(" o l3 exists\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: mm/slab.c:3896:
+		printk(" o allocing l3\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: mm/slab.c:3901:
+			printk(" o allocing l3 failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: mm/slab.c:3913:
+		printk(" o setting node %d 0x%lX\n", node, (unsigned long)l3);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: mm/slab.c:3929:
+				printk(" o setting node %d FAIL NULL\n", node);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 37 warnings, 2 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
