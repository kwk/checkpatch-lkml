WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
the branch tracer implements two "stat tracing" that were split in two files.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: kernel/trace/trace_branch.c:184:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#155: FILE: kernel/trace/trace_branch.c:219:
+extern unsigned long __start_annotated_branch_profile[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#156: FILE: kernel/trace/trace_branch.c:220:
+extern unsigned long __stop_annotated_branch_profile[];

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#176: FILE: kernel/trace/trace_branch.c:224:
+	seq_printf(m, " correct incorrect  %% ");

WARNING:SPLIT_STRING: quoted string split across lines
#178: FILE: kernel/trace/trace_branch.c:226:
+	seq_printf(m, "       Function                "
+			      "  File              Line\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: kernel/trace/trace_branch.c:228:
+			      " ------- ---------  - "
+			      "       --------                "

WARNING:SPLIT_STRING: quoted string split across lines
#181: FILE: kernel/trace/trace_branch.c:229:
+			      "       --------                "
+			      "  ----              ----\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#197: FILE: kernel/trace/trace_branch.c:237:
+	if (p->correct) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#200: FILE: kernel/trace/trace_branch.c:240:
+	} else

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#328: FILE: kernel/trace/trace_branch.c:323:
+extern unsigned long __start_branch_profile[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#329: FILE: kernel/trace/trace_branch.c:324:
+extern unsigned long __stop_branch_profile[];

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#337: FILE: kernel/trace/trace_branch.c:328:
+	seq_printf(m, "   miss      hit    %% ");

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: kernel/trace/trace_branch.c:330:
+	seq_printf(m, "       Function                "
+			      "  File              Line\n"

WARNING:SPLIT_STRING: quoted string split across lines
#341: FILE: kernel/trace/trace_branch.c:332:
+			      " ------- ---------  - "
+			      "       --------                "

WARNING:SPLIT_STRING: quoted string split across lines
#342: FILE: kernel/trace/trace_branch.c:333:
+			      "       --------                "
+			      "  ----              ----\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#406: FILE: kernel/trace/trace_branch.c:378:
+static struct tracer branch_trace __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#430: FILE: kernel/trace/trace_branch.c:402:
+	int ret;
+	ret = register_ftrace_event(&trace_branch_event);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#432: FILE: kernel/trace/trace_branch.c:404:
+		printk(KERN_WARNING "Warning: could not register branch events\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189565.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 15 warnings, 3 checks, 341 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189565.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
