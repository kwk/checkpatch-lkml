WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
Modify the set_blocksize() function so that an arbitrary blocksize can be set.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: include/linux/pagemap.h:43:
+static inline void mapping_setup(struct address_space *m,
+					gfp_t mask, int order)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: include/linux/pagemap.h:57:
+		BUG_ON(m->flags & (__GFP_DMA|__GFP_DMA32));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#104: FILE: include/linux/pagemap.h:57:
+		BUG_ON(m->flags & (__GFP_DMA|__GFP_DMA32));
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: include/linux/pagemap.h:94:
+	BUG_ON(shift < 9);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: include/linux/pagemap.h:131:
+static inline unsigned int page_cache_offset(struct address_space *a,
+		loff_t pos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#213: FILE: include/linux/pagemap.h:214:
+		printk(KERN_ERR "mapping_setup(%p, %x, %d)\n", m, mask, mapping_order(m));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/pagemap.h:223:
+extern struct page *__page_cache_alloc(gfp_t gfp, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#242: FILE: include/linux/pagemap.h:238:
+	return __page_cache_alloc(mapping_gfp_mask(x)|__GFP_COLD,
 	                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: mm/filemap.c:819:
+	page = __page_cache_alloc(mapping_gfp_mask(mapping) & ~__GFP_FS,
+				mapping_order(mapping));

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#311: FILE: mm/filemap.c:1544:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: fs/block_dev.c:75:
+	if (size > (PAGE_SIZE << MAX_ORDER) || size < 512 ||
+						!is_power_of_2(size))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: fs/block_dev.c:602:
+		mapping_setup(&inode->i_data, GFP_USER,
+			page_cache_blkbits_to_order(inode->i_blkbits));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: fs/inode.c:149:
+		mapping_setup(mapping, GFP_HIGHUSER_PAGECACHE,
+				page_cache_blkbits_to_order(inode->i_blkbits));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/block/rd.c:125:
+		memset(page_address(page), 0,
+			page_cache_size(page_mapping(page)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/block/rd.c:385:
+		mapping_setup(mapping, gfp_mask,
+			page_cache_blkbits_to_order(inode->i_blkbits));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: fs/xfs/linux-2.6/xfs_buf.c:1562:
+	mapping_setup(mapping, GFP_NOFS,
+		page_cache_blkbits_to_order(inode->i_blkbits));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415462.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 12 checks, 379 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415462.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
