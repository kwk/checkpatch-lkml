WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#48: FILE: include/asm-x86/bitops.h:46:
+static inline void set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#57: FILE: include/asm-x86/bitops.h:62:
+static inline void __set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#66: FILE: include/asm-x86/bitops.h:80:
+static inline void clear_bit(int nr, volatile void *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#75: FILE: include/asm-x86/bitops.h:95:
+static inline void clear_bit_unlock(unsigned nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#75: FILE: include/asm-x86/bitops.h:95:
+static inline void clear_bit_unlock(unsigned nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#82: FILE: include/asm-x86/bitops.h:101:
+static inline void __clear_bit(int nr, volatile void *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#91: FILE: include/asm-x86/bitops.h:118:
+static inline void __clear_bit_unlock(unsigned nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#91: FILE: include/asm-x86/bitops.h:118:
+static inline void __clear_bit_unlock(unsigned nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#100: FILE: include/asm-x86/bitops.h:136:
+static inline void __change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#109: FILE: include/asm-x86/bitops.h:150:
+static inline void change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#118: FILE: include/asm-x86/bitops.h:164:
+static inline int test_and_set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#127: FILE: include/asm-x86/bitops.h:183:
+static inline int test_and_set_bit_lock(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#136: FILE: include/asm-x86/bitops.h:197:
+static inline int __test_and_set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#145: FILE: include/asm-x86/bitops.h:216:
+static inline int test_and_clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#154: FILE: include/asm-x86/bitops.h:237:
+static inline int __test_and_clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#163: FILE: include/asm-x86/bitops.h:249:
+static inline int __test_and_change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#172: FILE: include/asm-x86/bitops.h:269:
+static inline int test_and_change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#181: FILE: include/asm-x86/bitops.h:281:
+static inline int constant_test_bit(int nr, const volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#189: FILE: include/asm-x86/bitops.h:287:
+static inline int variable_test_bit(int nr, volatile const void *addr)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345846.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 0 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345846.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
