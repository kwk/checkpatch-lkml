WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#109: FILE: block/ll_rw_blk.c:2943:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#121: FILE: block/ll_rw_blk.c:2955:
+	new->hard_sector = new->sector = orig->hard_sector;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#136: FILE: block/ll_rw_blk.c:2970:
+		new->nr_sectors = new->hard_nr_sectors
+			= orig->hard_nr_sectors;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#144: FILE: block/ll_rw_blk.c:2978:
+		orig->nr_sectors = orig->hard_nr_sectors  = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#150: FILE: block/ll_rw_blk.c:2984:
+		int offset;
+		new->nr_sectors = new->hard_nr_sectors

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#151: FILE: block/ll_rw_blk.c:2985:
+		new->nr_sectors = new->hard_nr_sectors
+			= (orig->max_allowed_size >> 9);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '-=' should be on the previous line
#157: FILE: block/ll_rw_blk.c:2991:
+		orig->nr_sectors = orig->hard_nr_sectors
+			-= orig->max_allowed_size >> 9;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#166: FILE: block/ll_rw_blk.c:3000:
+		BUG_ON(new->hard_nr_sectors != (new->max_allowed_size >> 9));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000398379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 6 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000398379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
