WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#75: FILE: fs/block_dev.c:97:
+	 * and it's value is >= 512 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/block_dev.c:117:
+                struct buffer_head *bh, int create)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/block_dev.c:117:
+                struct buffer_head *bh, int create)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: fs/block_dev.c:122:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: fs/block_dev.c:122:
+                return 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: fs/block_dev.c:131:
+static int blkdev_insert_mapping(struct address_space *mapping, loff_t off,
+					size_t len, int create)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: fs/block_dev.c:144:
+	while (next <= end && pagevec_lookup(&pvec, mapping, next,
+				min(end - next, (pgoff_t)PAGEVEC_SIZE))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#126: FILE: fs/block_dev.c:151:
+			BUG_ON(page->index != next);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: fs/block_dev.c:152:
+			BUG_ON(blocknr != pgoff_sector(next, inode->i_blkbits));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: fs/block_dev.c:153:
+			BUG_ON(!PageLocked(page));

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: fs/block_dev.c:171:
+				struct fsblock *b;
+				for_each_block(block, b) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#164: FILE: fs/block_dev.c:189:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: fs/block_dev.c:449:
+	struct super_block *sb = get_super(bdev);
+	if (sb) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: fs/block_dev.c:451:
+		int res = fsync_super(sb);
+		drop_super(sb);

WARNING:MEMORY_BARRIER: memory barrier without comment
#227: FILE: fs/block_dev.c:474:
+		smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#232: FILE: fs/block_dev.c:479:
+		smp_wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: fs/block_dev.c:502:
+		BUG_ON(sb->s_bdev != bdev);

WARNING:MEMORY_BARRIER: memory barrier without comment
#260: FILE: fs/block_dev.c:507:
+		smp_wmb();

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#590: FILE: include/linux/fs.h:440:
+	int (*release)(struct address_space *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#590: FILE: include/linux/fs.h:440:
+	int (*release)(struct address_space *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#596: FILE: include/linux/fs.h:446:
+	int (*sync)(struct address_space *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#619: FILE: include/linux/fs.h:1528:
+void invalidate_bdev(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#621: FILE: include/linux/fs.h:1530:
+struct super_block *freeze_bdev(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#622: FILE: include/linux/fs.h:1531:
+void thaw_bdev(struct block_device *, struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#622: FILE: include/linux/fs.h:1531:
+void thaw_bdev(struct block_device *, struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#623: FILE: include/linux/fs.h:1532:
+int fsync_bdev(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#624: FILE: include/linux/fs.h:1533:
+int fsync_super(struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#625: FILE: include/linux/fs.h:1534:
+int fsync_no_super(struct block_device *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000414037.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 24 warnings, 2 checks, 545 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000414037.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
