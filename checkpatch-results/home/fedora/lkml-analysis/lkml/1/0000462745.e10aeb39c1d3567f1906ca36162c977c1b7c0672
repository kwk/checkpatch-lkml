CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#71: FILE: net/bluetooth/hidp/core.c:686:
+	for (n = 0; hid_blacklist[n].idVendor; n++)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hid_blacklist[n].idVendor == le16_to_cpu(hid->vendor)'
#72: FILE: net/bluetooth/hidp/core.c:687:
+		if ((hid_blacklist[n].idVendor == le16_to_cpu(hid->vendor)) &&
+				(hid_blacklist[n].idProduct == le16_to_cpu(hid->product)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hid_blacklist[n].idProduct == le16_to_cpu(hid->product)'
#72: FILE: net/bluetooth/hidp/core.c:687:
+		if ((hid_blacklist[n].idVendor == le16_to_cpu(hid->vendor)) &&
+				(hid_blacklist[n].idProduct == le16_to_cpu(hid->product)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: net/bluetooth/hidp/core.c:688:
+		if ((hid_blacklist[n].idVendor == le16_to_cpu(hid->vendor)) &&
+				(hid_blacklist[n].idProduct == le16_to_cpu(hid->product)))

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#73: FILE: net/bluetooth/hidp/core.c:688:
+				(hid_blacklist[n].idProduct == le16_to_cpu(hid->product)))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#76: FILE: net/bluetooth/hidp/core.c:691:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#114: FILE: net/bluetooth/hidp/hidp.h:178:
+	unsigned quirks;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#116: FILE: net/bluetooth/hidp/hidp.h:180:
+} hid_blacklist[] = {
+

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#117: FILE: net/bluetooth/hidp/hidp.h:181:
+	{ BT_VENDOR_ID_APPLE, BT_DEVICE_ID_APPLE_MIGHTYMOUSE, HID_QUIRK_MIGHTYMOUSE | HID_QUIRK_INVERT_HWHEEL },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462745.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 7 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462745.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
