WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
>> looks good to me. Could you please also provide three more controls that i 

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#141: FILE: arch/x86/Kconfig.debug:135:
+choice
+	prompt "IO delay type"
+	default IO_DELAY_0X80
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#145: FILE: arch/x86/Kconfig.debug:139:
+config IO_DELAY_0X80
+	bool "port 0x80 based port-IO delay [recommended]"
+	help
+	  This is the traditional Linux IO delay used for in/out_p.
+	  It is the most tested hence safest selection here.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#151: FILE: arch/x86/Kconfig.debug:145:
+config IO_DELAY_0XED
+	bool "port 0xed based port-IO delay"
 	help
+	  Use port 0xed as the IO delay. This frees up port 0x80 which is
+	  Use port 0xed as the IO delay. This frees up port 0x80 which is
+	  Use port 0xed as the IO delay. This frees up port 0x80 which is
+	  Use port 0xed as the IO delay. This frees up port 0x80 which is
+	  Use port 0xed as the IO delay. This frees up port 0x80 which is
+	  often used as a hardware-debug port.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#161: FILE: arch/x86/Kconfig.debug:151:
+config IO_DELAY_UDELAY
+	bool "udelay based port-IO delay"
+	help
+	  Use udelay(2) as the IO delay method. This provides the delay
+	  while not having any side-effect on the IO port space.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#167: FILE: arch/x86/Kconfig.debug:157:
+config IO_DELAY_NONE
+	bool "no port-IO delay"
+	help
+	  No port-IO delay. Will break on old boxes that require port-IO
+	  delay for certain operations. Should work on most new machines.
+

WARNING:MISPLACED_INIT: __initdata should be placed after io_delay_override
#255: FILE: arch/x86/kernel/io_delay.c:18:
+static int __initdata io_delay_override;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#292: FILE: arch/x86/kernel/io_delay.c:50:
+	printk(KERN_NOTICE "%s: using 0xed I/O delay port\n", id->ident);

WARNING:MISPLACED_INIT: __initdata should be placed after io_delay_0xed_port_dmi_table[]
#303: FILE: arch/x86/kernel/io_delay.c:60:
+static struct dmi_system_id __initdata io_delay_0xed_port_dmi_table[] = {

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#389: FILE: kernel/sysctl.c:56:
+#include <asm/io.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346331.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 0 checks, 290 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346331.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
