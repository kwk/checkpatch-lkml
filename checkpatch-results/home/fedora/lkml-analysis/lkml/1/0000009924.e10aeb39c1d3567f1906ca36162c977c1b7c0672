WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
as part of the file match is implicitly allowed.  In the case of nonexistant

WARNING:TYPO_SPELLING: 'nonexistant' may be misspelled - perhaps 'nonexistent'?
#29: 
as part of the file match is implicitly allowed.  In the case of nonexistant
                                                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: security/apparmor/file.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: security/apparmor/file.c:172:
+	 * AA_MAY_CREATE | AA_MAY_CHMOD | AA_MAY_CHOWN */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'overlayed' may be misspelled - perhaps 'overlaid'?
#234: FILE: security/apparmor/file.c:183:
+	/* in the old mapping AA_MAY_LOCK and link subset are overlayed
 	                                                      ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: security/apparmor/file.c:201:
+	unsigned int state;
+	if (!dfa)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#465: FILE: security/apparmor/file.c:414:
+		if (sa.base.error == -ENOENT &&
[...]
+		} else if (sa.base.error == -ENOENT)
[...]
+		else if (sa.base.error == -ESTALE)
[...]
+		else if (sa.base.error == -ENAMETOOLONG)
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#511: FILE: security/apparmor/include/file.h:1:
+/*

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#587: FILE: security/apparmor/include/file.h:77:
+/* struct file_perms - file permission fo
                                        ^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'X' - possible side-effects?
#610: FILE: security/apparmor/include/file.h:100:
+#define COMBINED_PERM_MASK(X) ((X).allowed | (X).audit | (X).quiet | (X).kill)

WARNING:REPEATED_WORD: Possible repeated word: 'then'
#677: FILE: security/apparmor/include/file.h:167:
+ * File permission are determined by matching a path against @dfa and then
+ * then using the value of the accept entry for the matching state as

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#711: FILE: security/apparmor/include/file.h:201:
+#define ACC_FMODE(x) (("\000\004\002\006"[(x)&O_ACCMODE]) | (((x) << 1) & 0x40))
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#711: FILE: security/apparmor/include/file.h:201:
+#define ACC_FMODE(x) (("\000\004\002\006"[(x)&O_ACCMODE]) | (((x) << 1) & 0x40))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#714: FILE: security/apparmor/include/file.h:204:
+#define MAP_OPEN_FLAGS(x) ((((x) + 1) & O_ACCMODE) ? (x) + 1 : (x))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009924.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 5 checks, 677 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009924.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
