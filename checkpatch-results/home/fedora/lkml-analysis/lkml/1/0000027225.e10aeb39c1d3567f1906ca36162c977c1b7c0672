WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: arch/x86/include/asm/add-local.h:1:
+#ifndef __ASM_X86_ADD_LOCAL_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#47: FILE: arch/x86/include/asm/add-local.h:7:
+static inline unsigned long __add_return_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#48: FILE: arch/x86/include/asm/add-local.h:8:
+static inline unsigned long __add_return_local(volatile void *ptr,
+		unsigned long value, int size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: arch/x86/include/asm/add-local.h:14:
+                return __add_return_local_generic(ptr, value, size);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: arch/x86/include/asm/add-local.h:14:
+                return __add_return_local_generic(ptr, value, size);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#66: FILE: arch/x86/include/asm/add-local.h:26:
+		asm volatile("xaddb %0, %1;": "+r" (r), "+m" (*((u8 *)ptr)):
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#66: FILE: arch/x86/include/asm/add-local.h:26:
+		asm volatile("xaddb %0, %1;": "+r" (r), "+m" (*((u8 *)ptr)):
 		                                                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#70: FILE: arch/x86/include/asm/add-local.h:30:
+		asm volatile("xaddw %0, %1;": "+r" (r), "+m" (*((u16 *)ptr)):
 		                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#70: FILE: arch/x86/include/asm/add-local.h:30:
+		asm volatile("xaddw %0, %1;": "+r" (r), "+m" (*((u16 *)ptr)):
 		                                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#74: FILE: arch/x86/include/asm/add-local.h:34:
+		asm volatile("xaddl %0, %1;": "+r" (r), "+m" (*((u32 *)ptr)):
 		                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#74: FILE: arch/x86/include/asm/add-local.h:34:
+		asm volatile("xaddl %0, %1;": "+r" (r), "+m" (*((u32 *)ptr)):
 		                                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#78: FILE: arch/x86/include/asm/add-local.h:38:
+		asm volatile("xaddq %0, %1;": "+r" (r), "+m" (*((u64 *)ptr)):
 		                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#78: FILE: arch/x86/include/asm/add-local.h:38:
+		asm volatile("xaddq %0, %1;": "+r" (r), "+m" (*((u64 *)ptr)):
 		                                                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: arch/x86/include/asm/add-local.h:47:
+#define add_return_local(ptr, v)^I^I^I^I  ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#87: FILE: arch/x86/include/asm/add-local.h:47:
+#define add_return_local(ptr, v)				  	\
+	((__typeof__(*(ptr)))__add_return_local((ptr), (unsigned long)(v), \
+			sizeof(*(ptr))))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#91: FILE: arch/x86/include/asm/add-local.h:51:
+#define add_local(ptr, v) (void)__add_return_local((ptr), (unsigned long)(v), \
+			sizeof(*(ptr)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#91: FILE: arch/x86/include/asm/add-local.h:51:
+#define add_local(ptr, v) (void)__add_return_local((ptr), (unsigned long)(v), \
+			sizeof(*(ptr)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: arch/x86/include/asm/add-local.h:54:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000027225.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 4 warnings, 4 checks, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000027225.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
