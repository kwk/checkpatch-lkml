WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: arch/arm/mach-u300/core.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#83: FILE: arch/arm/mach-u300/core.h:2:
+ * arch/arm/mach-u300/core.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: No space is necessary after a cast
#135: FILE: arch/arm/mach-u300/i2c.c:45:
+			(void) local_ldo_d->desc->ops->disable(local_ldo_d);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#138: FILE: arch/arm/mach-u300/i2c.c:48:
+		(void) sigprocmask(SIG_SETMASK, &old, NULL);

WARNING:RETURN_VOID: void function return statements are not generally useful
#141: FILE: arch/arm/mach-u300/i2c.c:51:
+	return;
+}

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#346: FILE: drivers/regulator/Kconfig:120:
+config REGULATOR_AB3100
+	tristate "ST-Ericsson AB3100 Regulator functions"
+	depends on AB3100_CORE
+	default y if AB3100_CORE
+	help
+	 These regulators correspond to functionality in the
+	 AB3100 analog baseband dealing with power regulators
+	 for the system.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#373: FILE: drivers/regulator/ab3100.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#374: FILE: drivers/regulator/ab3100.c:2:
+ * drivers/regulator/ab3100.c

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#469: FILE: drivers/regulator/ab3100.c:97:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#485: FILE: drivers/regulator/ab3100.c:113:
+		dev_warn(&reg->dev, "failed to get regid %d "
+			 "value\n", regid);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#498: FILE: drivers/regulator/ab3100.c:126:
+		dev_warn(&reg->dev, "failed to set regid %d "
+			 "value\n", regid);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#504: FILE: drivers/regulator/ab3100.c:132:
+	case AB3100_LDO_A: /* Fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#505: FILE: drivers/regulator/ab3100.c:133:
+	case AB3100_LDO_C: /* Fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#506: FILE: drivers/regulator/ab3100.c:134:
+	case AB3100_LDO_D: /* Fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#507: FILE: drivers/regulator/ab3100.c:135:
+	case AB3100_LDO_E: /* Fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#508: FILE: drivers/regulator/ab3100.c:136:
+	case AB3100_LDO_H: /* Fallthrough */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#510: FILE: drivers/regulator/ab3100.c:138:
+		udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#513: FILE: drivers/regulator/ab3100.c:141:
+		udelay(600);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#516: FILE: drivers/regulator/ab3100.c:144:
+		udelay(400);

WARNING:SPLIT_STRING: quoted string split across lines
#545: FILE: drivers/regulator/ab3100.c:173:
+			dev_info(&reg->dev, "iterrupted "
+				 "while getting register 0x%x\n", regid);

WARNING:SPLIT_STRING: quoted string split across lines
#568: FILE: drivers/regulator/ab3100.c:196:
+			dev_info(&reg->dev, "interrupted "
+				 "while getting register 0x%x\n", regid);

CHECK:SPACING: No space is necessary after a cast
#633: FILE: drivers/regulator/ab3100.c:261:
+		(void) ab3100_set_register_interruptible(ab3100,

WARNING:LINE_SPACING: Missing a blank line after declarations
#645: FILE: drivers/regulator/ab3100.c:273:
+	u8 regid;
+	if (ab3100_get_regid(reg, &regid))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#656: FILE: drivers/regulator/ab3100.c:284:
+		printk(KERN_ERR "AB3100: get voltage for " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#656: FILE: drivers/regulator/ab3100.c:284:
+		printk(KERN_ERR "AB3100: get voltage for " \

WARNING:SPLIT_STRING: quoted string split across lines
#672: FILE: drivers/regulator/ab3100.c:300:
+		dev_warn(&reg->dev, "failed to get LDO_EB regulator "
+			 "value\n");

WARNING:SPLIT_STRING: quoted string split across lines
#696: FILE: drivers/regulator/ab3100.c:324:
+		dev_warn(&reg->dev, "erroneous voltage in "
+			 "register LDO_EB %u\n", regval);

WARNING:SPLIT_STRING: quoted string split across lines
#714: FILE: drivers/regulator/ab3100.c:342:
+		dev_warn(&reg->dev, "failed to get LDO_EB "
+			 "regulator value\n");

WARNING:SPLIT_STRING: quoted string split across lines
#741: FILE: drivers/regulator/ab3100.c:369:
+		dev_warn(&reg->dev, "failed to set LDO_EB regulator "
+			 "value\n");

WARNING:SPLIT_STRING: quoted string split across lines
#778: FILE: drivers/regulator/ab3100.c:406:
+		dev_warn(&reg->dev, "erroneous voltage in regulator "
+			 "LDO F %u\n", regval);

WARNING:SPLIT_STRING: quoted string split across lines
#796: FILE: drivers/regulator/ab3100.c:424:
+		dev_warn(&reg->dev, "failed to get LDO_F regulator "
+		       "value\n");

WARNING:SPLIT_STRING: quoted string split across lines
#823: FILE: drivers/regulator/ab3100.c:451:
+		dev_warn(&reg->dev, "failed to set LDO_F regulator "
+			 "value\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#854: FILE: drivers/regulator/ab3100.c:482:
+		dev_warn(&reg->dev, "errnoeous voltage register in LDO_G %u\n",
+		       regval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: drivers/regulator/ab3100.c:550:
+		dev_warn(&reg->dev, "erroneous voltage register LDO_H %u\n",
+		       regval);

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1030: FILE: drivers/regulator/ab3100.c:658:
+static struct regulator_ops regulator_ops_LDO_AC = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1037: FILE: drivers/regulator/ab3100.c:665:
+static struct regulator_ops regulator_ops_LDO_D = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1044: FILE: drivers/regulator/ab3100.c:672:
+static struct regulator_ops regulator_ops_LDO_E = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1052: FILE: drivers/regulator/ab3100.c:680:
+static struct regulator_ops regulator_ops_LDO_F = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1060: FILE: drivers/regulator/ab3100.c:688:
+static struct regulator_ops regulator_ops_LDO_G = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1068: FILE: drivers/regulator/ab3100.c:696:
+static struct regulator_ops regulator_ops_LDO_H = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1076: FILE: drivers/regulator/ab3100.c:704:
+static struct regulator_ops regulator_ops_LDO_K = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1089: FILE: drivers/regulator/ab3100.c:717:
+static struct regulator_ops regulator_ops_LDO_EXT = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#1096: FILE: drivers/regulator/ab3100.c:724:
+static struct regulator_ops regulator_ops_LDO_BUCK = {

WARNING:SPLIT_STRING: quoted string split across lines
#1186: FILE: drivers/regulator/ab3100.c:814:
+		dev_err(&pdev->dev, "%s: failed to register regulator"
+		       " %s err %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1217: FILE: drivers/regulator/ab3100.c:845:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/regulator/ab3100.c:851:
+static int __init ab3100_add_regulator_pdev(struct device *parent,
+				    struct ab3100_regulator *rdev,

WARNING:SPLIT_STRING: quoted string split across lines
#1283: FILE: drivers/regulator/ab3100.c:911:
+		dev_err(&pdev->dev, "AB3100 regulator: "
+			"Could not read initial status "

WARNING:SPLIT_STRING: quoted string split across lines
#1284: FILE: drivers/regulator/ab3100.c:912:
+			"Could not read initial status "
+			"of LDO_D\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1286: FILE: drivers/regulator/ab3100.c:914:
+		return err;
+	} else {

WARNING:SPLIT_STRING: quoted string split across lines
#1289: FILE: drivers/regulator/ab3100.c:917:
+			dev_notice(&pdev->dev, "AB3100 regulator LDO D: "
+				   "chip is already in active "

WARNING:SPLIT_STRING: quoted string split across lines
#1290: FILE: drivers/regulator/ab3100.c:918:
+				   "chip is already in active "
+				   "mode (Warm start)\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1293: FILE: drivers/regulator/ab3100.c:921:
+			dev_notice(&pdev->dev, "AB3100 regulator LDO D: "
+				   "chip is in inactive mode "

WARNING:SPLIT_STRING: quoted string split across lines
#1294: FILE: drivers/regulator/ab3100.c:922:
+				   "chip is in inactive mode "
+				   "(Cold start)\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1301: FILE: drivers/regulator/ab3100.c:929:
+		err = ab3100_set_register_interruptible(ab3100,
+					  ldo_init_settings[i].abreg,

WARNING:SPLIT_STRING: quoted string split across lines
#1305: FILE: drivers/regulator/ab3100.c:933:
+			dev_err(&pdev->dev, "regulator initialization "
+			       "interrupted by system restart");

WARNING:SPLIT_STRING: quoted string split across lines
#1309: FILE: drivers/regulator/ab3100.c:937:
+			dev_err(&pdev->dev, "regulator initialization "
+			       "failed with error %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1330: FILE: drivers/regulator/ab3100.c:958:
+			dev_err(&pdev->dev, "register regulator %d failed "
+				"err %d\n", i, err);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000081765.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 46 warnings, 12 checks, 1321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000081765.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
