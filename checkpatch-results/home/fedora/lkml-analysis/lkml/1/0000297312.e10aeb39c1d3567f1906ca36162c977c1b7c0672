WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -uprwNBb -X 2.6.25-rc8/Documentation/dontdiff /home/rossb/local/linux-2.6.25-rc8/arch/powerpc/mm/fault.c 2.6.25-rc8/arch/powerpc/mm/fault.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#30: 
diff -uprwNBb -X 2.6.25-rc8/Documentation/dontdiff /home/rossb/local/linux-2.6.25-rc8/arch/powerpc/mm/fault.c 2.6.25-rc8/arch/powerpc/mm/fault.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#31: 
--- /home/rossb/local/linux-2.6.25-rc8/arch/powerpc/mm/fault.c	2008-04-01 12:44:26.000000000 -0700

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: arch/x86/Kconfig:111:
+config RELOCATE_PAGE_TABLES $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#116: FILE: arch/x86/kernel/smp_64.c:255:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#142: FILE: include/asm-generic/pgalloc.h:1:
+#ifndef _ASM_GENERIC_PGALLOC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#145: FILE: include/asm-generic/pgalloc.h:4:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#172: FILE: include/asm-generic/pgalloc.h:31:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: include/asm-generic/pgalloc.h:36:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#196: FILE: include/asm-generic/pgtable.h:201:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#198: FILE: include/asm-generic/pgtable.h:203:
+/* Used to rewalk the page tables if after we grab the appropriate lock,
+   we end up with a page that's just waiting to go away. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#198: FILE: include/asm-generic/pgtable.h:203:
+   we end up with a page that's just waiting to go away. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: include/asm-generic/pgtable.h:205:
+static inline pgd_t *walk_page_table_pgd(struct mm_struct *mm,
+					  unsigned long addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: include/asm-generic/pgtable.h:213:
+	pgd_t *pgd;
+	pgd = walk_page_table_pgd(mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: include/asm-generic/pgtable.h:214:
+	BUG_ON(!pgd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: include/asm-generic/pgtable.h:222:
+	pud_t *pud;
+	pud = walk_page_table_pud(mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: include/asm-generic/pgtable.h:223:
+	BUG_ON(!pud);

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: include/asm-generic/pgtable.h:231:
+	pmd_t *pmd;
+	pmd = walk_page_table_pmd(mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: include/asm-generic/pgtable.h:232:
+	BUG_ON(!pmd);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: include/asm-x86/pgalloc_64.h:56:
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: include/asm-x86/pgalloc_64.h:56:
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: include/asm-x86/pgalloc_64.h:61:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#274: FILE: include/asm-x86/pgalloc_64.h:63:
+/* Should really implement gc for free page table pages. This could be
+   done with a reference count in struct page. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: include/asm-x86/pgalloc_64.h:63:
+   done with a reference count in struct page. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: include/asm-x86/pgalloc_64.h:67:
+	BUG_ON((unsigned long)pte & (PAGE_SIZE-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#278: FILE: include/asm-x86/pgalloc_64.h:67:
+	BUG_ON((unsigned long)pte & (PAGE_SIZE-1));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: include/asm-x86/pgalloc_64.h:77:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#288: FILE: include/asm-x86/pgalloc_64.h:77:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor((pte));				\
+	tlb_remove_page((tlb), (pte));			\
+} while (0)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: include/asm-x86/pgalloc_64.h:93:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: include/asm-x86/pgalloc_64.h:93:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#316: FILE: include/asm-x86/pgalloc_64.h:105:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#316: FILE: include/asm-x86/pgalloc_64.h:105:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#330: FILE: include/asm-x86/pgalloc_64.h:117:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT, 0);
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#353: FILE: include/asm-x86/pgalloc_64.h:143:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#353: FILE: include/asm-x86/pgalloc_64.h:143:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: include/asm-x86/pgalloc_64.h:154:
+	struct page *page;
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#364: FILE: include/asm-x86/pgalloc_64.h:154:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#364: FILE: include/asm-x86/pgalloc_64.h:154:
+	page = alloc_pages_node(node, GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#376: FILE: include/asm-x86/pgalloc_64.h:166:
+	return (pte_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
 	                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: include/asm-x86/pgalloc_64.h:174:
+static inline pmd_t *pmd_alloc_one (struct mm_struct *mm, unsigned long addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#397: FILE: include/asm-x86/pgalloc_64.h:187:
+	unsigned boundary;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#398: FILE: include/asm-x86/pgalloc_64.h:188:
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT);
 	                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: include/asm-x86/pgalloc_64.h:189:
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT);
+	if (!pgd)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#428: FILE: include/asm-x86/pgalloc_64.h:225:
+	return (pmd_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#436: FILE: include/asm-x86/pgalloc_64.h:230:
+	return (pud_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
 	                                          ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#459: FILE: include/linux/migrate.h:9:
+typedef struct page *new_page_table_t(struct mm_struct *,

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#473: FILE: include/linux/mm.h:15:
+#include <asm/pgtable.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: include/linux/mm.h:957:
+static inline void delimbo_pte(pte_t **pte, spinlock_t **ptl,  pmd_t **pmd,
+			  struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: include/linux/mm.h:978:
+static inline void delimbo_pte_nested(pte_t **pte, spinlock_t **ptl,
+				pmd_t **pmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: include/linux/mm.h:1000:
+static inline void delimbo_pud(pud_t **pud,  struct mm_struct *mm,
+			  unsigned long addr)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#538: FILE: include/linux/mm.h:1002:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#548: FILE: include/linux/mm.h:1012:
+{
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#748: FILE: mm/memory.c:2188:
+	/* Unless of course the cpu might be looking at an old
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#748: FILE: mm/memory.c:2188:
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#759: FILE: mm/memory.c:2243:
+	/* Unless of course the cpu might be looking at an old
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#759: FILE: mm/memory.c:2243:
+	   copy of the pte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#770: FILE: mm/memory.c:2397:
+		/* Unless of course the cpu could be looking at an old page
+		   table entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#770: FILE: mm/memory.c:2397:
+		   table entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#799: FILE: mm/memory.c:2592:
+	/* if the cpu could be looking at an old page table, we need to
+	   flush out everything. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#799: FILE: mm/memory.c:2592:
+	   flush out everything. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#802: FILE: mm/memory.c:2595:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#850: FILE: mm/mempolicy.c:747:
+	struct page *p;
+	p = alloc_page_table_node(mm, addr, node, level);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#890: FILE: mm/migrate.c:44:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#927: FILE: mm/migrate.c:1098:
+	struct page *page = container_of(head, struct page, rcu);
+	INIT_LIST_HEAD(&page->lru);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#956: FILE: mm/migrate.c:1127:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#983: FILE: mm/migrate.c:1154:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#989: FILE: mm/migrate.c:1160:
+	spinlock_t *ptl;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#997: FILE: mm/migrate.c:1168:
+	/* this could happen if the page table has been swapped out and we
+	   were looking at the old one. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#997: FILE: mm/migrate.c:1168:
+	   were looking at the old one. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1060: FILE: mm/migrate.c:1231:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1102: FILE: mm/migrate.c:1273:
+		int ret;
+		ret = migrate_page_tables_pmd(pmd_offset(pud, *address), mm,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1147: FILE: mm/migrate.c:1318:
+
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1151: FILE: mm/migrate.c:1322:
+		int ret;
+		ret = migrate_page_tables_pud(pud_offset(pgd, *address), mm,

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#1178: FILE: mm/migrate.c:1349:
+/* similiar to migrate pages, but migrates the page tables. */
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm->pgd"
#1193: FILE: mm/migrate.c:1364:
+	if (mm->pgd == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: mm/migrate.c:1391:
+		not_migrated = migrate_top_level_page_table(mm, new_page,
+							&old_pages);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 38 warnings, 36 checks, 1145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
