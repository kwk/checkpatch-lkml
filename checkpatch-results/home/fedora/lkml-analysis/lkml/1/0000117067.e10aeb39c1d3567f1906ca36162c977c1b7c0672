WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
--- linux-work.orig/arch/powerpc/include/asm/pgalloc-32.h	2009-04-01 16:32:01.000000000 +1100

ERROR:SPACING: space required after that ',' (ctx:VxV)
#58: FILE: arch/powerpc/include/asm/pgalloc-32.h:19:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#58: FILE: arch/powerpc/include/asm/pgalloc-32.h:19:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: arch/powerpc/include/asm/pgalloc-64.h:121:
+#define __pmd_free_tlb(tlb, pmd,addr)		      \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: arch/powerpc/include/asm/pgalloc.h:41:
+#define __pte_free_tlb(tlb,ptepage,address)		\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: arch/powerpc/include/asm/pgalloc.h:41:
+#define __pte_free_tlb(tlb,ptepage,address)		\
                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptepage' - possible side-effects?
#89: FILE: arch/powerpc/include/asm/pgalloc.h:41:
+#define __pte_free_tlb(tlb,ptepage,address)		\
 do { \
 	pgtable_page_dtor(ptepage); \
 	pgtable_free_tlb(tlb, pgtable_free_cache(page_address(ptepage), \
 		PTE_NONCACHE_NUM, PTE_TABLE_SIZE-1)); \
 } while (0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#110: FILE: include/asm-generic/pgtable-nopmd.h:62:
 }
+#define __pmd_free_tlb(tlb, x, a)		do { } while (0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#136: FILE: include/asm-generic/tlb.h:126:
+#define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#136: FILE: include/asm-generic/tlb.h:126:
+#define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#145: FILE: include/asm-generic/tlb.h:133:
+#define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#145: FILE: include/asm-generic/tlb.h:133:
+#define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#154: FILE: include/asm-generic/tlb.h:140:
+#define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#154: FILE: include/asm-generic/tlb.h:140:
+#define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 1 warnings, 8 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117067.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
