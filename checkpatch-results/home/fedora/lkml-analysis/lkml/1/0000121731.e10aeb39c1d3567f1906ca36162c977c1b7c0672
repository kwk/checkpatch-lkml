CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#43: 
Signed-off-by: Micha³ Miros³aw <mirq-linux@rere.qmqm.pl>
                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: drivers/misc/cb710/core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#52: FILE: drivers/misc/cb710/core.c:4:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: drivers/misc/cb710/core.c:22:
+void cb710_pci_update_config_reg(struct pci_dev *pdev,
+	int reg, uint32_t mask, uint32_t xor)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#81: FILE: drivers/misc/cb710/core.c:33:
+static int __devinit cb710_pci_configure(struct pci_dev *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/misc/cb710/core.c:40:
+	cb710_pci_update_config_reg(pdev, 0x48,
+		~0x000000FF, 0x0000003F);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#98: FILE: drivers/misc/cb710/core.c:50:
+	if (pdev0->vendor == PCI_VENDOR_ID_ENE
+	    && pdev0->device == PCI_DEVICE_ID_ENE_720) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: drivers/misc/cb710/core.c:52:
+		cb710_pci_update_config_reg(pdev0, 0x8C,
+			~0x00F00000, 0x00100000);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/misc/cb710/core.c:54:
+		cb710_pci_update_config_reg(pdev0, 0xB0,
+			~0x08000000, 0x08000000);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/misc/cb710/core.c:58:
+	cb710_pci_update_config_reg(pdev0, 0x8C,
+		~0x00000F00, 0x00000200);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: drivers/misc/cb710/core.c:60:
+	cb710_pci_update_config_reg(pdev0, 0x90,
+		~0x00060000, 0x00040000);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: drivers/misc/cb710/core.c:72:
+	unsigned nr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: drivers/misc/cb710/core.c:78:
+		cb710_irq_handler_t handler_func = slot->irq_handler;
+		if (handler_func && handler_func(slot))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#146: FILE: drivers/misc/cb710/core.c:98:
+static int __devinit cb710_register_slot(struct cb710_chip *chip,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: drivers/misc/cb710/core.c:99:
+static int __devinit cb710_register_slot(struct cb710_chip *chip,
+	unsigned slot_mask, unsigned io_offset, const char *name)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: drivers/misc/cb710/core.c:99:
+	unsigned slot_mask, unsigned io_offset, const char *name)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: drivers/misc/cb710/core.c:99:
+	unsigned slot_mask, unsigned io_offset, const char *name)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: drivers/misc/cb710/core.c:110:
+	 * seen before platform_device_register() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:MEMORY_BARRIER: memory barrier without comment
#160: FILE: drivers/misc/cb710/core.c:112:
+	smp_wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#176: FILE: drivers/misc/cb710/core.c:128:
+		 * wants this on error path */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/misc/cb710/core.c:142:
+static void cb710_unregister_slot(struct cb710_chip *chip,
+	unsigned slot_mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#190: FILE: drivers/misc/cb710/core.c:142:
+	unsigned slot_mask)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: drivers/misc/cb710/core.c:153:
+	BUG_ON(chip->slot[nr].irq_handler != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "chip->slot[nr].irq_handler"
#201: FILE: drivers/misc/cb710/core.c:153:
+	BUG_ON(chip->slot[nr].irq_handler != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/misc/cb710/core.c:161:
+void cb710_set_irq_handler(struct cb710_slot *slot,
+	cb710_irq_handler_t handler)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#251: FILE: drivers/misc/cb710/core.c:203:
+static int __devinit cb710_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/misc/cb710/core.c:204:
+static int __devinit cb710_probe(struct pci_dev *pdev,
+	const struct pci_device_id *ent)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#267: FILE: drivers/misc/cb710/core.c:219:
+		pci_write_config_dword(pdev, 0x48, val|0x71000000);
 		                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/misc/cb710/core.c:235:
+	chip = devm_kzalloc(&pdev->dev,
+		sizeof(*chip) + n * sizeof(*chip->slot), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/misc/cb710/core.c:253:
+	err = devm_request_irq(&pdev->dev, pdev->irq,
+		cb710_irq_handler, IRQF_SHARED, KBUILD_MODNAME, chip);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: drivers/misc/cb710/core.c:269:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/misc/cb710/core.c:271:
+	dev_info(&pdev->dev, "id %d, IO 0x%p, IRQ %d\n",
+		chip->platform_id, chip->iobase, pdev->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/misc/cb710/core.c:275:
+		err = cb710_register_slot(chip,
+			CB710_SLOT_MMC, 0x00, "cb710-mmc");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/misc/cb710/core.c:282:
+		err = cb710_register_slot(chip,
+			CB710_SLOT_MS, 0x40, "cb710-ms");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/misc/cb710/core.c:289:
+		err = cb710_register_slot(chip,
+			CB710_SLOT_SM, 0x60, "cb710-sm");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#349: FILE: drivers/misc/cb710/core.c:301:
+	BUG_ON(atomic_read(&chip->slot_refs_count) != 0);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#354: FILE: drivers/misc/cb710/core.c:306:
+static void __devexit cb710_remove_one(struct pci_dev *pdev)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#363: FILE: drivers/misc/cb710/core.c:315:
+	BUG_ON(atomic_read(&chip->slot_refs_count) != 0);

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#402: FILE: drivers/misc/cb710/core.c:354:
+MODULE_AUTHOR("Micha³ Miros³aw <mirq-linux@rere.qmqm.pl>");
                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#410: FILE: drivers/misc/cb710/debug.c:1:
+/*

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#413: FILE: drivers/misc/cb710/debug.c:4:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#426: FILE: drivers/misc/cb710/debug.c:17:
+static const u16 allow[CB710_REG_COUNT/16] = {
                                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#430: FILE: drivers/misc/cb710/debug.c:21:
+};
+static const char *const prefix[ARRAY_SIZE(allow)] = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#435: FILE: drivers/misc/cb710/debug.c:26:
+static inline int allow_reg_read(unsigned block, unsigned offset, unsigned bits)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#435: FILE: drivers/misc/cb710/debug.c:26:
+static inline int allow_reg_read(unsigned block, unsigned offset, unsigned bits)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#435: FILE: drivers/misc/cb710/debug.c:26:
+static inline int allow_reg_read(unsigned block, unsigned offset, unsigned bits)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#437: FILE: drivers/misc/cb710/debug.c:28:
+	unsigned mask = (1 << bits/8) - 1;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#437: FILE: drivers/misc/cb710/debug.c:28:
+	unsigned mask = (1 << bits/8) - 1;
 	                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: drivers/misc/cb710/debug.c:29:
+	unsigned mask = (1 << bits/8) - 1;
+	offset *= bits/8;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#438: FILE: drivers/misc/cb710/debug.c:29:
+	offset *= bits/8;
 	              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#442: FILE: drivers/misc/cb710/debug.c:33:
+#define CB710_READ_REGS_TEMPLATE(t)					\
+static void cb710_read_regs_##t(void __iomem *iobase,			\
+	u##t *reg, unsigned select)					\
+{									\
+	unsigned i, j;							\
+									\
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
+		if (!select & (1 << i))					\
+			continue;					\
+									\
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
+			if (!allow_reg_read(i, j, t))			\
+				continue;				\
+			reg[j] = ioread##t(iobase			\
+				+ (i << 4) + (j * (t/8)));		\
+		}							\
+	}								\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#442: FILE: drivers/misc/cb710/debug.c:33:
+#define CB710_READ_REGS_TEMPLATE(t)					\
+static void cb710_read_regs_##t(void __iomem *iobase,			\
+	u##t *reg, unsigned select)					\
+{									\
+	unsigned i, j;							\
+									\
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
+		if (!select & (1 << i))					\
+			continue;					\
+									\
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
+			if (!allow_reg_read(i, j, t))			\
+				continue;				\
+			reg[j] = ioread##t(iobase			\
+				+ (i << 4) + (j * (t/8)));		\
+		}							\
+	}								\
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#444: FILE: drivers/misc/cb710/debug.c:35:
+	u##t *reg, unsigned select)					\

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#444: FILE: drivers/misc/cb710/debug.c:35:
+	u##t *reg, unsigned select)					\
 	     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#446: FILE: drivers/misc/cb710/debug.c:37:
+	unsigned i, j;							\

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#448: FILE: drivers/misc/cb710/debug.c:39:
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
 	                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#448: FILE: drivers/misc/cb710/debug.c:39:
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
 	                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#452: FILE: drivers/misc/cb710/debug.c:43:
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#452: FILE: drivers/misc/cb710/debug.c:43:
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#456: FILE: drivers/misc/cb710/debug.c:47:
+				+ (i << 4) + (j * (t/8)));		\
 				                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#466: FILE: drivers/misc/cb710/debug.c:57:
+#define CB710_DUMP_REGS_TEMPLATE(t)					\
+static void cb710_dump_regs_##t(struct device *dev,			\
+	const u##t *reg, unsigned select)				\
+{									\
+	const char *const xp = &cb710_xes[8 - t/4];			\
+	const char *const format = cb710_regf_##t;			\
+									\
+	char msg[100], *p;						\
+	unsigned i, j;							\
+									\
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
+		if (!(select & (1 << i)))				\
+			continue;					\
+		p = msg;						\
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
+			*p++ = ' ';					\
+			if (j == 8/(t/8))				\
+				*p++ = ' ';				\
+			if (allow_reg_read(i, j, t))			\
+				p += sprintf(p, format, reg[j]);	\
+			else						\
+				p += sprintf(p, "%s", xp);		\
+		}							\
+		dev_dbg(dev, "%s 0x%02X %s\n", prefix[i], i << 4, msg);	\
+	}								\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#466: FILE: drivers/misc/cb710/debug.c:57:
+#define CB710_DUMP_REGS_TEMPLATE(t)					\
+static void cb710_dump_regs_##t(struct device *dev,			\
+	const u##t *reg, unsigned select)				\
+{									\
+	const char *const xp = &cb710_xes[8 - t/4];			\
+	const char *const format = cb710_regf_##t;			\
+									\
+	char msg[100], *p;						\
+	unsigned i, j;							\
+									\
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
+		if (!(select & (1 << i)))				\
+			continue;					\
+		p = msg;						\
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
+			*p++ = ' ';					\
+			if (j == 8/(t/8))				\
+				*p++ = ' ';				\
+			if (allow_reg_read(i, j, t))			\
+				p += sprintf(p, format, reg[j]);	\
+			else						\
+				p += sprintf(p, "%s", xp);		\
+		}							\
+		dev_dbg(dev, "%s 0x%02X %s\n", prefix[i], i << 4, msg);	\
+	}								\
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#468: FILE: drivers/misc/cb710/debug.c:59:
+	const u##t *reg, unsigned select)				\

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#468: FILE: drivers/misc/cb710/debug.c:59:
+	const u##t *reg, unsigned select)				\
 	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#470: FILE: drivers/misc/cb710/debug.c:61:
+	const char *const xp = &cb710_xes[8 - t/4];			\
 	                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#474: FILE: drivers/misc/cb710/debug.c:65:
+	unsigned i, j;							\

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#476: FILE: drivers/misc/cb710/debug.c:67:
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
 	                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#476: FILE: drivers/misc/cb710/debug.c:67:
+	for (i = 0; i < ARRAY_SIZE(allow); ++i, reg += 16/(t/8)) {	\
 	                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#480: FILE: drivers/misc/cb710/debug.c:71:
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#480: FILE: drivers/misc/cb710/debug.c:71:
+		for (j = 0; j < 0x10/(t/8); ++j) {			\
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#482: FILE: drivers/misc/cb710/debug.c:73:
+			if (j == 8/(t/8))				\
 			          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#482: FILE: drivers/misc/cb710/debug.c:73:
+			if (j == 8/(t/8))				\
 			             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#495: FILE: drivers/misc/cb710/debug.c:86:
+	unsigned select)						\

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#497: FILE: drivers/misc/cb710/debug.c:88:
+	u##t regs[CB710_REG_COUNT/sizeof(u##t)];			\
 	                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#504: FILE: drivers/misc/cb710/debug.c:95:
+#define CB710_REG_ACCESS_TEMPLATES(t)		\
+  CB710_READ_REGS_TEMPLATE(t)			\
+  CB710_DUMP_REGS_TEMPLATE(t)			\
+  CB710_READ_AND_DUMP_REGS_TEMPLATE(t)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#504: FILE: drivers/misc/cb710/debug.c:95:
+#define CB710_REG_ACCESS_TEMPLATES(t)		\
+  CB710_READ_REGS_TEMPLATE(t)			\
+  CB710_DUMP_REGS_TEMPLATE(t)			\
+  CB710_READ_AND_DUMP_REGS_TEMPLATE(t)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/misc/cb710/debug.c:96:
+  CB710_READ_REGS_TEMPLATE(t)^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/misc/cb710/debug.c:97:
+  CB710_DUMP_REGS_TEMPLATE(t)^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/misc/cb710/debug.c:98:
+  CB710_READ_AND_DUMP_REGS_TEMPLATE(t)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#513: FILE: drivers/misc/cb710/debug.c:104:
+void cb710_dump_regs(struct cb710_chip *chip, unsigned select)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#546: FILE: drivers/misc/cb710/Kconfig:14:
+config CB710_DEBUG
+	bool "Enable driver debugging"
+	depends on CB710_CORE != n
+	default n
+	help
+	  This is an option for use by developers; most people should
+	  say N here.  This adds a lot of debugging output to dmesg.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#566: FILE: drivers/misc/cb710/sgbuf2.c:1:
+/*

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#569: FILE: drivers/misc/cb710/sgbuf2.c:4:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#581: FILE: drivers/misc/cb710/sgbuf2.c:16:
+	if (sg_miter_next(miter)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#584: FILE: drivers/misc/cb710/sgbuf2.c:19:
+	} else

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#596: FILE: drivers/misc/cb710/sgbuf2.c:31:
+	uint32_t data;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#631: FILE: drivers/misc/cb710/sgbuf2.c:66:
+	if (likely(len >= 4 && !needs_unaligned_copy(

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#660: FILE: drivers/misc/cb710/sgbuf2.c:95:
+	uint32_t *ptr = NULL;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#701: FILE: drivers/misc/cb710/sgbuf2.c:136:
+	uint32_t *ptr = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#703: FILE: drivers/misc/cb710/sgbuf2.c:138:
+	if (likely(sg_dwiter_get_next_block(miter, &ptr))) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#708: FILE: drivers/misc/cb710/sgbuf2.c:143:
+	} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#738: FILE: drivers/mmc/host/cb710-mmc.c:1:
+/*

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#741: FILE: drivers/mmc/host/cb710-mmc.c:4:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#758: FILE: drivers/mmc/host/cb710-mmc.c:21:
+};
+#define CB710_MAX_DIVIDER_IDX	\

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#775: FILE: drivers/mmc/host/cb710-mmc.c:38:
+	 * MMC card with cables connected to bus signals */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: drivers/mmc/host/cb710-mmc.c:60:
+static void __cb710_mmc_enable_irq(struct cb710_slot *slot,
+	unsigned short enable, unsigned short mask)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#800: FILE: drivers/mmc/host/cb710-mmc.c:63:
+	 * - it gets set later if any interrupt sources are enabled */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: drivers/mmc/host/cb710-mmc.c:81:
+static void cb710_mmc_enable_irq(struct cb710_slot *slot,
+	unsigned short enable, unsigned short mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/mmc/host/cb710-mmc.c:111:
+		cb710_modify_port_8(slot, CB710_MMC_CONFIG1_PORT,
+			CB710_MMC_C1_4BIT_DATA_BUS, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: drivers/mmc/host/cb710-mmc.c:114:
+		cb710_modify_port_8(slot, CB710_MMC_CONFIG1_PORT,
+			0, CB710_MMC_C1_4BIT_DATA_BUS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/mmc/host/cb710-mmc.c:128:
+		cb710_write_port_8(slot, CB710_MMC_STATUS0_PORT,
+			CB710_MMC_S0_FIFO_UNDERFLOW);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: drivers/mmc/host/cb710-mmc.c:137:
+		cb710_write_port_8(slot, CB710_MMC_STATUS1_PORT,
+			CB710_MMC_S1_RESET);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#890: FILE: drivers/mmc/host/cb710-mmc.c:153:
+	unsigned limit = 2000000;	/* FIXME: real timeout */

WARNING:LINE_SPACING: Missing a blank line after declarations
#894: FILE: drivers/mmc/host/cb710-mmc.c:157:
+	u32 e, x;
+	e = cb710_read_port_32(slot, CB710_MMC_STATUS_PORT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/mmc/host/cb710-mmc.c:163:
+			cb710_dump_regs(cb710_slot_to_chip(slot),
+				CB710_DUMP_REGS_MMC);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#919: FILE: drivers/mmc/host/cb710-mmc.c:182:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#922: FILE: drivers/mmc/host/cb710-mmc.c:185:
+	unsigned limit = 500000;	/* FIXME: real timeout */

WARNING:LINE_SPACING: Missing a blank line after declarations
#927: FILE: drivers/mmc/host/cb710-mmc.c:190:
+	u32 e, x;
+	e = cb710_read_port_32(slot, CB710_MMC_STATUS_PORT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: drivers/mmc/host/cb710-mmc.c:196:
+			cb710_dump_regs(cb710_slot_to_chip(slot),
+				CB710_DUMP_REGS_MMC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: drivers/mmc/host/cb710-mmc.c:216:
+static void cb710_mmc_set_transfer_size(struct cb710_slot *slot,
+	size_t count, size_t blocksize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: drivers/mmc/host/cb710-mmc.c:220:
+	cb710_write_port_32(slot, CB710_MMC_TRANSFER_SIZE_PORT,
+		((count - 1) << 16)|(blocksize - 1));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#957: FILE: drivers/mmc/host/cb710-mmc.c:220:
+		((count - 1) << 16)|(blocksize - 1));
 		                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#960: FILE: drivers/mmc/host/cb710-mmc.c:223:
+	dev_vdbg(cb710_slot_dev(slot), "set up for %d block%s of %d bytes\n",
+		count, count == 1 ? "" : "s", blocksize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#974: FILE: drivers/mmc/host/cb710-mmc.c:237:
+		cb710_write_port_8(slot, CB710_MMC_STATUS0_PORT,
+			CB710_MMC_S0_FIFO_UNDERFLOW);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#983: FILE: drivers/mmc/host/cb710-mmc.c:246:
+		r1, r2, (r1|r2) ? "BAD (NOT ZERO)!" : "ok");
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: drivers/mmc/host/cb710-mmc.c:250:
+static int cb710_mmc_receive_pio(struct cb710_slot *slot,
+	struct sg_mapping_iter *miter, size_t dw_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: drivers/mmc/host/cb710-mmc.c:260:
+	cb710_sg_dwiter_write_from_io(miter,
+		slot->iobase + CB710_MMC_DATA_PORT, dw_count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1014: FILE: drivers/mmc/host/cb710-mmc.c:277:
+	 * except single 8B block */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: drivers/mmc/host/cb710-mmc.c:284:
+	cb710_modify_port_8(slot, CB710_MMC_CONFIG2_PORT,
+		15, CB710_MMC_C2_READ_PIO_SIZE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: drivers/mmc/host/cb710-mmc.c:302:
+		cb710_modify_port_8(slot, CB710_MMC_CONFIG2_PORT,
+			len - 1, CB710_MMC_C2_READ_PIO_SIZE_MASK);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1058: FILE: drivers/mmc/host/cb710-mmc.c:321:
+	 * non-16B-boundary blocks */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: drivers/mmc/host/cb710-mmc.c:328:
+	cb710_modify_port_8(slot, CB710_MMC_CONFIG2_PORT,
+		0, CB710_MMC_C2_READ_PIO_SIZE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/mmc/host/cb710-mmc.c:336:
+				err = cb710_wait_for_event(slot,
+					CB710_MMC_S1_PIO_TRANSFER_DONE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1078: FILE: drivers/mmc/host/cb710-mmc.c:341:
+			cb710_sg_dwiter_read_to_io(&miter,
+				slot->iobase + CB710_MMC_DATA_PORT, 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: drivers/mmc/host/cb710-mmc.c:350:
+static u16 cb710_encode_cmd_flags(struct cb710_mmc_reader *reader,
+	struct mmc_command *cmd)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1103: FILE: drivers/mmc/host/cb710-mmc.c:366:
+	case MMC_CMD_AC:	cb_flags = CB710_MMC_CMD_AC;	break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1104: FILE: drivers/mmc/host/cb710-mmc.c:367:
+	case MMC_CMD_ADTC:	cb_flags = CB710_MMC_CMD_ADTC;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1105: FILE: drivers/mmc/host/cb710-mmc.c:368:
+	case MMC_CMD_BC:	cb_flags = CB710_MMC_CMD_BC;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1106: FILE: drivers/mmc/host/cb710-mmc.c:369:
+	case MMC_CMD_BCR:	cb_flags = CB710_MMC_CMD_BCR;	break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/mmc/host/cb710-mmc.c:401:
+static void cb710_receive_response(struct cb710_slot *slot,
+	struct mmc_command *cmd)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1140: FILE: drivers/mmc/host/cb710-mmc.c:403:
+	unsigned rsp_opcode, wanted_opcode;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1152: FILE: drivers/mmc/host/cb710-mmc.c:415:
+		cmd->resp[0] = (resp[0] << 8)|(resp[1] >> 24);
 		                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1153: FILE: drivers/mmc/host/cb710-mmc.c:416:
+		cmd->resp[1] = (resp[1] << 8)|(resp[2] >> 24);
 		                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1154: FILE: drivers/mmc/host/cb710-mmc.c:417:
+		cmd->resp[2] = (resp[2] << 8)|(resp[3] >> 24);
 		                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: drivers/mmc/host/cb710-mmc.c:430:
+static int cb710_mmc_transfer_data(struct cb710_slot *slot,
+	struct mmc_data *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1192: FILE: drivers/mmc/host/cb710-mmc.c:455:
+	u16 cb_cmd = cb710_encode_cmd_flags(reader, cmd);
+	dev_dbg(cb710_slot_dev(slot), "cmd request: 0x%04X\n", cb_cmd);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1202: FILE: drivers/mmc/host/cb710-mmc.c:465:
+	cb710_wait_while_busy(slot, CB710_MMC_S2_BUSY_20|CB710_MMC_S2_BUSY_10);
 	                                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "reader->mrq"
#1230: FILE: drivers/mmc/host/cb710-mmc.c:493:
+	WARN_ON(reader->mrq != NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1292: FILE: drivers/mmc/host/cb710-mmc.c:555:
+	 * (it doesn't depend on write-to-read delay) */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1321: FILE: drivers/mmc/host/cb710-mmc.c:584:
+	if (ios->power_mode != reader->last_power_mode)
+	switch (ios->power_mode) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/mmc/host/cb710-mmc.c:590:
+			dev_warn(cb710_slot_dev(slot),
+				"powerup failed (%d)- retrying\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: drivers/mmc/host/cb710-mmc.c:596:
+				dev_warn(cb710_slot_dev(slot),
+					"powerup retry failed (%d) - expect errors\n",

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#1342: FILE: drivers/mmc/host/cb710-mmc.c:605:
+	case MMC_POWER_UP:
+	default:
+		/* ignore */;

switch default case is sometimes written as "default:;".  This can
cause new cases added below default to be defective.

A "break;" should be added after empty default statement to avoid
unwanted fallthrough.

WARNING:SPLIT_STRING: quoted string split across lines
#1372: FILE: drivers/mmc/host/cb710-mmc.c:635:
+	dev_dbg(cb710_slot_dev(slot), "interrupt; status: %08X, "
+		"ie: %08X, c2: %08X, c1: %08X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1378: FILE: drivers/mmc/host/cb710-mmc.c:641:
+		cb710_write_port_8(slot, CB710_MMC_STATUS1_PORT,
+			CB710_MMC_S1_CARD_CHANGED);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1381: FILE: drivers/mmc/host/cb710-mmc.c:644:
+			mmc_detect_change(mmc, HZ/5);
 			                         ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1436: FILE: drivers/mmc/host/cb710-mmc.c:699:
+static int __devinit cb710_mmc_init(struct platform_device *pdev)

CHECK:CAMELCASE: Avoid CamelCase: <xF>
#1453: FILE: drivers/mmc/host/cb710-mmc.c:716:
+	val = cb710_src_freq_mhz[(val >> 16) & 0xF];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1460: FILE: drivers/mmc/host/cb710-mmc.c:723:
+	mmc->ocr_avail = MMC_VDD_32_33|MMC_VDD_33_34;
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/mmc/host/cb710-mmc.c:729:
+	tasklet_init(&reader->finish_req_tasklet,
+		cb710_mmc_finish_request_tasklet, (unsigned long)mmc);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1491: FILE: drivers/mmc/host/cb710-mmc.c:754:
+static int __devexit cb710_mmc_exit(struct platform_device *pdev)

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1538: FILE: drivers/mmc/host/cb710-mmc.c:801:
+MODULE_AUTHOR("Micha³ Miros³aw <mirq-linux@rere.qmqm.pl>");
                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1546: FILE: drivers/mmc/host/cb710-mmc.h:1:
+/*

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1549: FILE: drivers/mmc/host/cb710-mmc.h:4:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1564: FILE: drivers/mmc/host/cb710-mmc.h:19:
+	spinlock_t irq_lock;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1601: FILE: drivers/mmc/host/cb710-mmc.h:56:
+		(CB710_MMC_IE_CARD_INSERTION_STATUS|CB710_MMC_IE_IRQ_ENABLE)
 		                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1629: FILE: drivers/mmc/host/cb710-mmc.h:84:
+#define     CB710_MMC_RSP_PRESENT		(1 << 3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1633: FILE: drivers/mmc/host/cb710-mmc.h:88:
+#define     CB710_MMC_CMD_BCR			(1 << 5)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1683: FILE: include/linux/cb710.h:1:
+/*

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1686: FILE: include/linux/cb710.h:4:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1724: FILE: include/linux/cb710.h:42:
+	unsigned		platform_id;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1728: FILE: include/linux/cb710.h:46:
+	unsigned		slot_mask;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1729: FILE: include/linux/cb710.h:47:
+	unsigned		slots;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1730: FILE: include/linux/cb710.h:48:
+	spinlock_t		irq_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1735: FILE: include/linux/cb710.h:53:
+ * they are all serialized wrt themselves */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1745: FILE: include/linux/cb710.h:63:
+	unsigned port, u##t value)					\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1751: FILE: include/linux/cb710.h:69:
+	unsigned port)							\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1757: FILE: include/linux/cb710.h:75:
+	unsigned port, u##t set, u##t clear)				\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1760: FILE: include/linux/cb710.h:78:
+		(ioread##t(slot->iobase + port) & ~clear)|set,		\
 		                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1769: FILE: include/linux/cb710.h:87:
+void cb710_pci_update_config_reg(struct pci_dev *pdev,
+	int reg, uint32_t and, uint32_t xor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1771: FILE: include/linux/cb710.h:89:
+void cb710_set_irq_handler(struct cb710_slot *slot,
+	cb710_irq_handler_t handler);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1775: FILE: include/linux/cb710.h:93:
+static inline struct cb710_slot *cb710_pdev_to_slot(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1799: FILE: include/linux/cb710.h:117:
+void cb710_dump_regs(struct cb710_chip *chip, unsigned dump);

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1820: FILE: include/linux/cb710.h:138:
+ *  Copyright by Micha³ Miros³aw, 2008-2009
                       ^

WARNING:REPEATED_WORD: Possible repeated word: 'started'
#1838: FILE: include/linux/cb710.h:156:
+ *   Stops mapping iterator @miter.  @miter should have been started
+ *   started using sg_miter_start().  A stopped iteration can be

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1892: FILE: include/linux/cb710.h:210:
+static inline void sg_dwiter_write_from_io(struct sg_mapping_iter *miter,
+	void __iomem *port, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1914: FILE: include/linux/cb710.h:232:
+static inline void sg_dwiter_read_to_io(struct sg_mapping_iter *miter,
+	void __iomem *port, size_t count)

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1940: FILE: MAINTAINERS:1664:
+P:	Micha³ Miros³aw
   	     ^

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#1941: FILE: MAINTAINERS:1665:
+P:	Micha³ Miros³aw
+M:	mirq-linux@rere.qmqm.pl

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121731.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 62 warnings, 112 checks, 1850 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121731.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
