WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> > I think the issue is that the devtmpfs functions are calling vfs helpers

WARNING:TYPO_SPELLING: 'aditional' may be misspelled - perhaps 'additional'?
#96: 
/dev directory without any need for aditional userspace tools.
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inital' may be misspelled - perhaps 'initial'?
#100: 
full coldplug run, which is currently needed to bootstrap the inital
                                                              ^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#147: FILE: drivers/base/Kconfig:28:
+config DEVTMPFS_MOUNT
+	bool "Automount devtmpfs at /dev"
+	depends on DEVTMPFS
+	help
+	  This will mount devtmpfs at /dev if the kernel mounts the root
+	  filesystem. It will not affect initramfs based mounting.
+	  If unsure, say N here.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: drivers/base/base.h:139:
+extern int devtmpfs_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#202: FILE: drivers/base/devtmpfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'susbsytem' may be misspelled - perhaps 'subsystem'?
#210: FILE: drivers/base/devtmpfs.c:9:
+ * the nameof the device, or the susbsytem can provide a custom name
                                  ^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#210: FILE: drivers/base/devtmpfs.c:9:
+ * create a device node in this filesystem. The node is named after the
+ * the nameof the device, or the susbsytem can provide a custom name

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#242: FILE: drivers/base/devtmpfs.c:41:
+	dev_mount = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#245: FILE: drivers/base/devtmpfs.c:44:
+__setup("devtmpfs.mount=", mount_param);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#258: FILE: drivers/base/devtmpfs.c:57:
+			printk(KERN_ERR "dev_get_sb: unable get tmpfs "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dev_get_sb', this function's name, in a string
#258: FILE: drivers/base/devtmpfs.c:57:
+			printk(KERN_ERR "dev_get_sb: unable get tmpfs "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#259: FILE: drivers/base/devtmpfs.c:58:
+			printk(KERN_ERR "dev_get_sb: unable get tmpfs "
+			       "fstype\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#265: FILE: drivers/base/devtmpfs.c:64:
+			printk(KERN_ERR "dev_get_sb: unable to init "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dev_get_sb', this function's name, in a string
#265: FILE: drivers/base/devtmpfs.c:64:
+			printk(KERN_ERR "dev_get_sb: unable to init "

WARNING:SPLIT_STRING: quoted string split across lines
#266: FILE: drivers/base/devtmpfs.c:65:
+			printk(KERN_ERR "dev_get_sb: unable to init "
+			       "tmpfs superblock\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#296: FILE: drivers/base/devtmpfs.c:95:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#301: FILE: drivers/base/devtmpfs.c:100:
+			      name, LOOKUP_PARENT, &nd);
 			                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#305: FILE: drivers/base/devtmpfs.c:104:
+	dentry = lookup_create(&nd, 1);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#307: FILE: drivers/base/devtmpfs.c:106:
+		err = vfs_mkdir(nd.path.dentry->d_inode, dentry, mode);
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#312: FILE: drivers/base/devtmpfs.c:111:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#314: FILE: drivers/base/devtmpfs.c:113:
+	path_put(&nd.path);
 	          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#321: FILE: drivers/base/devtmpfs.c:120:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#329: FILE: drivers/base/devtmpfs.c:128:
+			      path, LOOKUP_PARENT, &nd);
 			                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#334: FILE: drivers/base/devtmpfs.c:133:
+		dentry = lookup_create(&nd, 1);
 		                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#336: FILE: drivers/base/devtmpfs.c:135:
+			err = vfs_mkdir(nd.path.dentry->d_inode,
 			                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#340: FILE: drivers/base/devtmpfs.c:139:
+		mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 		              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#342: FILE: drivers/base/devtmpfs.c:141:
+		path_put(&nd.path);
 		          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#370: FILE: drivers/base/devtmpfs.c:169:
+	struct nameidata nd;
 	                 ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#382: FILE: drivers/base/devtmpfs.c:181:
+		mode = S_IFBLK|0600;
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#384: FILE: drivers/base/devtmpfs.c:183:
+		mode = S_IFCHR|0600;
 		              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#387: FILE: drivers/base/devtmpfs.c:186:
+			      nodename, LOOKUP_PARENT, &nd);
 			                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#392: FILE: drivers/base/devtmpfs.c:191:
+				      nodename, LOOKUP_PARENT, &nd);
 				                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#397: FILE: drivers/base/devtmpfs.c:196:
+	dentry = lookup_create(&nd, 0);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#402: FILE: drivers/base/devtmpfs.c:201:
+		err = vfs_mknod(nd.path.dentry->d_inode,
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#412: FILE: drivers/base/devtmpfs.c:211:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#414: FILE: drivers/base/devtmpfs.c:213:
+	path_put(&nd.path);
 	          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#422: FILE: drivers/base/devtmpfs.c:221:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#427: FILE: drivers/base/devtmpfs.c:226:
+			      name, LOOKUP_PARENT, &nd);
 			                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#431: FILE: drivers/base/devtmpfs.c:230:
+	mutex_lock_nested(&nd.path.dentry->d_inode->i_mutex, I_MUTEX_PARENT);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#432: FILE: drivers/base/devtmpfs.c:231:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#432: FILE: drivers/base/devtmpfs.c:231:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#432: FILE: drivers/base/devtmpfs.c:231:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#435: FILE: drivers/base/devtmpfs.c:234:
+			err = vfs_rmdir(nd.path.dentry->d_inode, dentry);
 			                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#442: FILE: drivers/base/devtmpfs.c:241:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#444: FILE: drivers/base/devtmpfs.c:243:
+	path_put(&nd.path);
 	          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#498: FILE: drivers/base/devtmpfs.c:297:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#512: FILE: drivers/base/devtmpfs.c:311:
+			      nodename, LOOKUP_PARENT, &nd);
 			                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#516: FILE: drivers/base/devtmpfs.c:315:
+	mutex_lock_nested(&nd.path.dentry->d_inode->i_mutex, I_MUTEX_PARENT);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#517: FILE: drivers/base/devtmpfs.c:316:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#517: FILE: drivers/base/devtmpfs.c:316:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#517: FILE: drivers/base/devtmpfs.c:316:
+	dentry = lookup_one_len(nd.last.name, nd.path.dentry, nd.last.len);
 	                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#520: FILE: drivers/base/devtmpfs.c:319:
+			err = vfs_getattr(nd.path.mnt, dentry, &stat);
 			                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#522: FILE: drivers/base/devtmpfs.c:321:
+				err = vfs_unlink(nd.path.dentry->d_inode,
 				                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#534: FILE: drivers/base/devtmpfs.c:333:
+	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#536: FILE: drivers/base/devtmpfs.c:335:
+	path_put(&nd.path);
 	          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#563: FILE: drivers/base/devtmpfs.c:362:
+		printk(KERN_INFO "devtmpfs: error mounting %i\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#565: FILE: drivers/base/devtmpfs.c:364:
+		printk(KERN_INFO "devtmpfs: mounted\n");

WARNING:REPEATED_WORD: Possible repeated word: 'device'
#571: FILE: drivers/base/devtmpfs.c:370:
+ * Create tmpfs mount, created core devices will add their device device

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#581: FILE: drivers/base/devtmpfs.c:380:
+		printk(KERN_ERR "devtmpfs: unable to create credentials\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#587: FILE: drivers/base/devtmpfs.c:386:
+		printk(KERN_ERR "devtmpfs: unable to register devtmpfs "

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: drivers/base/devtmpfs.c:387:
+		printk(KERN_ERR "devtmpfs: unable to register devtmpfs "
+		       "type %i\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#596: FILE: drivers/base/devtmpfs.c:395:
+		printk(KERN_ERR "devtmpfs: unable to create devtmpfs %i\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#604: FILE: drivers/base/devtmpfs.c:403:
+	printk(KERN_INFO "devtmpfs: initialized\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#624: FILE: include/linux/device.h:557:
+extern int devtmpfs_create_node(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#625: FILE: include/linux/device.h:558:
+extern int devtmpfs_delete_node(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#626: FILE: include/linux/device.h:559:
+extern int devtmpfs_mount(const char *mountpoint);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#642: FILE: include/linux/shmem_fs.h:45:
+extern int init_tmpfs(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 60 warnings, 8 checks, 538 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
