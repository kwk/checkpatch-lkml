WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
NOTE: This patch was developed on top of 2.6.25-rc5-mm1 and is applied on top

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#74: FILE: include/linux/mm_types.h:231:
+	spinlock_t owner_lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#105: FILE: kernel/fork.c:1009:
+	struct mm_struct *mm = get_task_mm(p);
+	if (!mm)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p != p->group_leader'
#124: FILE: kernel/fork.c:1383:
+	if (!(clone_flags & CLONE_VM) && (p != p->group_leader))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: include/linux/memcontrol.h:32:
+extern void mem_cgroup_fork_init(struct task_struct *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/memcontrol.h:76:
+extern struct mem_cgroup *mem_cgroup_from_task(struct task_struct *p);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: mm/memcontrol.c:486:
+	BUG_ON(!mem_cont);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/linux/sched.h:2134:
+extern void mm_update_next_owner(struct mm_struct *mm, struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: include/linux/sched.h:2135:
+extern void mm_fork_init_owner(struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#265: FILE: include/linux/sched.h:2136:
+extern void mm_init_owner(struct mm_struct *mm, struct task_struct *p);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#314: FILE: kernel/exit.c:605:
+	BUG_ON(p == p->parent);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#342: FILE: kernel/exit.c:633:
+			if (c->mm && (c->mm == p->mm))
+					goto assign_new_owner;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->mm == p->mm'
#342: FILE: kernel/exit.c:633:
+			if (c->mm && (c->mm == p->mm))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#347: FILE: kernel/exit.c:638:
+	BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302270.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 8 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302270.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
