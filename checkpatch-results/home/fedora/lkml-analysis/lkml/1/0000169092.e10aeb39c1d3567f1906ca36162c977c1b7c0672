WARNING:TYPO_SPELLING: 'modifiy' may be misspelled - perhaps 'modify'?
#33: 
user register state or to modifiy it.  This patch adds stubs to load
                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#81: FILE: arch/x86/include/asm/syscalls.h:33:
+ptregscall int sys_clone(struct pt_regs *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#81: FILE: arch/x86/include/asm/syscalls.h:33:
+ptregscall int sys_clone(struct pt_regs *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#81: FILE: arch/x86/include/asm/syscalls.h:33:
+ptregscall int sys_clone(struct pt_regs *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int __user *' should also have an identifier name
#81: FILE: arch/x86/include/asm/syscalls.h:33:
+ptregscall int sys_clone(struct pt_regs *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#81: FILE: arch/x86/include/asm/syscalls.h:33:
+ptregscall int sys_clone(struct pt_regs *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int __user *' should also have an identifier name
#81: FILE: arch/x86/include/asm/syscalls.h:33:
+ptregscall int sys_clone(struct pt_regs *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#84: FILE: arch/x86/include/asm/syscalls.h:36:
+ptregscall int sys_vfork(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#85: FILE: arch/x86/include/asm/syscalls.h:37:
+ptregscall int sys_execve(struct pt_regs *, char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#85: FILE: arch/x86/include/asm/syscalls.h:37:
+ptregscall int sys_execve(struct pt_regs *, char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user * __user' should also have an identifier name
#85: FILE: arch/x86/include/asm/syscalls.h:37:
+ptregscall int sys_execve(struct pt_regs *, char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user * __user' should also have an identifier name
#85: FILE: arch/x86/include/asm/syscalls.h:37:
+ptregscall int sys_execve(struct pt_regs *, char __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#96: FILE: arch/x86/include/asm/syscalls.h:45:
+ptregscall int sys_sigaltstack(struct pt_regs *, const stack_t __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const stack_t __user *' should also have an identifier name
#96: FILE: arch/x86/include/asm/syscalls.h:45:
+ptregscall int sys_sigaltstack(struct pt_regs *, const stack_t __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'stack_t __user *' should also have an identifier name
#96: FILE: arch/x86/include/asm/syscalls.h:45:
+ptregscall int sys_sigaltstack(struct pt_regs *, const stack_t __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#98: FILE: arch/x86/include/asm/syscalls.h:47:
+ptregscall unsigned long sys_sigreturn(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#99: FILE: arch/x86/include/asm/syscalls.h:48:
+ptregscall int sys_rt_sigreturn(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#103: FILE: arch/x86/include/asm/syscalls.h:51:
+ptregscall long sys_iopl(struct pt_regs *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#103: FILE: arch/x86/include/asm/syscalls.h:51:
+ptregscall long sys_iopl(struct pt_regs *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#113: FILE: arch/x86/include/asm/syscalls.h:67:
+ptregscall int sys_vm86old(struct pt_regs *, struct vm86_struct __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm86_struct __user *' should also have an identifier name
#113: FILE: arch/x86/include/asm/syscalls.h:67:
+ptregscall int sys_vm86old(struct pt_regs *, struct vm86_struct __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#114: FILE: arch/x86/include/asm/syscalls.h:68:
+ptregscall int sys_vm86(struct pt_regs *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#114: FILE: arch/x86/include/asm/syscalls.h:68:
+ptregscall int sys_vm86(struct pt_regs *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#114: FILE: arch/x86/include/asm/syscalls.h:68:
+ptregscall int sys_vm86(struct pt_regs *, unsigned long, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169092.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 0 checks, 350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169092.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
