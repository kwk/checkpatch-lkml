WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#195: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#200: FILE: block/cfq-iosched.h:1:
+#ifndef CFQ_IOSCHED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#207: FILE: block/cfq-iosched.h:8:
+int cfq_merge(struct request_queue *, struct request **, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request **' should also have an identifier name
#207: FILE: block/cfq-iosched.h:8:
+int cfq_merge(struct request_queue *, struct request **, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#207: FILE: block/cfq-iosched.h:8:
+int cfq_merge(struct request_queue *, struct request **, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#208: FILE: block/cfq-iosched.h:9:
+void cfq_merged_request(struct request_queue *, struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#208: FILE: block/cfq-iosched.h:9:
+void cfq_merged_request(struct request_queue *, struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#208: FILE: block/cfq-iosched.h:9:
+void cfq_merged_request(struct request_queue *, struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#209: FILE: block/cfq-iosched.h:10:
+void cfq_merged_requests(struct request_queue *, struct request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#209: FILE: block/cfq-iosched.h:10:
+void cfq_merged_requests(struct request_queue *, struct request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#209: FILE: block/cfq-iosched.h:10:
+void cfq_merged_requests(struct request_queue *, struct request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#211: FILE: block/cfq-iosched.h:12:
+int cfq_allow_merge(struct request_queue *, struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#211: FILE: block/cfq-iosched.h:12:
+int cfq_allow_merge(struct request_queue *, struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#211: FILE: block/cfq-iosched.h:12:
+int cfq_allow_merge(struct request_queue *, struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#212: FILE: block/cfq-iosched.h:13:
+int cfq_dispatch_requests(struct request_queue *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#212: FILE: block/cfq-iosched.h:13:
+int cfq_dispatch_requests(struct request_queue *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#213: FILE: block/cfq-iosched.h:14:
+void cfq_insert_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#213: FILE: block/cfq-iosched.h:14:
+void cfq_insert_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#214: FILE: block/cfq-iosched.h:15:
+void cfq_activate_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#214: FILE: block/cfq-iosched.h:15:
+void cfq_activate_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#215: FILE: block/cfq-iosched.h:16:
+void cfq_deactivate_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#215: FILE: block/cfq-iosched.h:16:
+void cfq_deactivate_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#216: FILE: block/cfq-iosched.h:17:
+int cfq_queue_empty(struct request_queue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#217: FILE: block/cfq-iosched.h:18:
+void cfq_completed_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#217: FILE: block/cfq-iosched.h:18:
+void cfq_completed_request(struct request_queue *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#218: FILE: block/cfq-iosched.h:19:
+int cfq_set_request(struct request_queue *, struct request *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#218: FILE: block/cfq-iosched.h:19:
+int cfq_set_request(struct request_queue *, struct request *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#218: FILE: block/cfq-iosched.h:19:
+int cfq_set_request(struct request_queue *, struct request *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#219: FILE: block/cfq-iosched.h:20:
+void cfq_put_request(struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#220: FILE: block/cfq-iosched.h:21:
+int cfq_may_queue(struct request_queue *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#220: FILE: block/cfq-iosched.h:21:
+int cfq_may_queue(struct request_queue *, int);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#381: FILE: block/elevator.h:1:
+#ifndef ELV_INTERN_H

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#416: FILE: block/elevator.h:36:
+	else
[...]
+	q->elv_ops.elevator_deactivate_req_fn(q, rq);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#462: FILE: block/elevator.h:82:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121037.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 33 warnings, 1 checks, 448 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121037.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
