WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
# HG changeset patch

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
# User Bryan O'Sullivan <bos@pathscale.com>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
# Date 1173994465 25200

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
# Node ID 01cde17958018b5262570cd9ea399378f95051e7

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# Parent  fe719d50378ce70909f96bd5e7bc8e4f28a5031b

WARNING:SPLIT_STRING: quoted string split across lines
#60: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:631:
+		ipath_dev_err(dd, "Board SN %s did not pass functional "
+			"test: %s\n", dd->ipath_serial,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#72: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:287:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:414:
+^I^I        INFINIPATH_HWE_TXEMEMPARITYERR_PIOPBC) \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:415:
+^I^I        << INFINIPATH_HWE_TXEMEMPARITYERR_SHIFT)$

WARNING:SPLIT_STRING: quoted string split across lines
#177: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:498:
+			ipath_dev_err(dd, "RXE parity, Eager TID error is not "
+				"recoverable\n");

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:501:
+			ipath_dbg("Clearing freezemode on ignored or "
+				  "recovered hardware error\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#189: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:569:
+	if (hwerrs) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#199: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:579:
+			ipath_dev_err(dd, "Fatal Hardware Error (freeze "
+					  "mode), no longer usable, SN %.16s\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#213: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:593:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:666:
+	if (dd->ipath_majrev != 3 || (dd->ipath_minrev < 2 ||
+		dd->ipath_minrev > 3)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:1529:
+	if (dd->ipath_boardrev == 5 && dd->ipath_serial[0] == '1' &&
 		dd->ipath_serial[1] == '2' && dd->ipath_serial[2] == '8') {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:1541:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:1545:
+	int cnt = ++ipath_stats.sps_txeparity;
+	if (cnt >= IPATH_MAX_PARITY_ATTEMPTS)  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:1548:
+			ipath_dev_err(dd,
+				"Too many attempts to recover from "

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:1549:
+				"Too many attempts to recover from "
+				"TXE parity, giving up\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/infiniband/hw/ipath/ipath_iba6110.c:1553:
+	dev_info(&dd->pcidev->dev,
+		"Recovering from TXE PIO parity error\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:325:
+^I^I        INFINIPATH_HWE_TXEMEMPARITYERR_PIOPBC) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:326:
+^I^I        << INFINIPATH_HWE_TXEMEMPARITYERR_SHIFT)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:1335:
+	if (ipath_unordered_wc())
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#364: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:1337:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:1339:
+		int cnt = ++ipath_stats.sps_txeparity;
+		if (cnt >= IPATH_MAX_PARITY_ATTEMPTS)  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:1342:
+				ipath_dev_err(dd,
+					"Too many attempts to recover from "

WARNING:SPLIT_STRING: quoted string split across lines
#370: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:1343:
+					"Too many attempts to recover from "
+					"TXE parity, giving up\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/infiniband/hw/ipath/ipath_iba6120.c:1347:
+		dev_info(&dd->pcidev->dev,
+			"Recovering from TXE PIO parity error\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#390: FILE: drivers/infiniband/hw/ipath/ipath_init_chip.c:593:
 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: drivers/infiniband/hw/ipath/ipath_init_chip.c:595:
+	ipath_write_kreg (dd, dd->ipath_kregs->kr_hwdiagctrl, 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:40:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#413: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:49:
+	u32 dwcnt; /* dword count to write */
+	if (pnum < dd->ipath_piobcnt2k) {

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:50:
+		pbuf = (u32 __iomem *) (dd->ipath_pio2kbase + pnum *

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#418: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:54:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#418: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:54:
+	else {

CHECK:SPACING: No space is necessary after a cast
#419: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:55:
+		pbuf = (u32 __iomem *) (dd->ipath_pio4kbase +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:60:
+	dev_info(&dd->pcidev->dev,
+		"Rewrite PIO buffer %u, to recover from parity error\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#426: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:62:
+	*pbuf = dwcnt+1; /* no flush required, since already in freeze */
 	             ^

ERROR:SPACING: space required before the open parenthesis '('
#427: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:63:
+	while(--dwcnt)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#479: FILE: drivers/infiniband/hw/ipath/ipath_kernel.h:715:
+void ipath_disarm_senderrbufs(struct ipath_devdata *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#479: FILE: drivers/infiniband/hw/ipath/ipath_kernel.h:715:
+void ipath_disarm_senderrbufs(struct ipath_devdata *, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 17 warnings, 17 checks, 422 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455606.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
