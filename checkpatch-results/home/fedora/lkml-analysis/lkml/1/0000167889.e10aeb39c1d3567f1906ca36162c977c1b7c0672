CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:305:
+static inline void _ipw_write8(struct ipw_priv *ipw, unsigned long ofs,
+		u8 val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:319:
+static inline void _ipw_write16(struct ipw_priv *ipw, unsigned long ofs,
+		u16 val)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ofs' - possible side-effects?
#80: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:325:
+#define ipw_write16(ipw, ofs, val) do { \
+	IPW_DEBUG_IO("%s %d: write_direct16(0x%08X, 0x%08X)\n", __FILE__, \
+			__LINE__, (u32)(ofs), (u32)(val)); \
+	_ipw_write16(ipw, ofs, val); \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#80: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:325:
+#define ipw_write16(ipw, ofs, val) do { \
+	IPW_DEBUG_IO("%s %d: write_direct16(0x%08X, 0x%08X)\n", __FILE__, \
+			__LINE__, (u32)(ofs), (u32)(val)); \
+	_ipw_write16(ipw, ofs, val); \
+} while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:333:
+static inline void _ipw_write32(struct ipw_priv *ipw, unsigned long ofs,
+		u32 val)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ofs' - possible side-effects?
#98: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:339:
+#define ipw_write32(ipw, ofs, val) do { \
+	IPW_DEBUG_IO("%s %d: write_direct32(0x%08X, 0x%08X)\n", __FILE__, \
+			__LINE__, (u32)(ofs), (u32)(val)); \
+	_ipw_write32(ipw, ofs, val); \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#98: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:339:
+#define ipw_write32(ipw, ofs, val) do { \
+	IPW_DEBUG_IO("%s %d: write_direct32(0x%08X, 0x%08X)\n", __FILE__, \
+			__LINE__, (u32)(ofs), (u32)(val)); \
+	_ipw_write32(ipw, ofs, val); \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ofs' - possible side-effects?
#118: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:352:
+#define ipw_read8(ipw, ofs) ({ \
+	IPW_DEBUG_IO("%s %d: read_direct8(0x%08X)\n", __FILE__, __LINE__, \
+			(u32)(ofs)); \
+	_ipw_read8(ipw, ofs); \
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ofs' - possible side-effects?
#138: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:365:
+#define ipw_read16(ipw, ofs) ({ \
+	IPW_DEBUG_IO("%s %d: read_direct16(0x%08X)\n", __FILE__, __LINE__, \
+			(u32)(ofs)); \
+	_ipw_read16(ipw, ofs); \
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ofs' - possible side-effects?
#158: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:378:
+#define ipw_read32(ipw, ofs) ({ \
+	IPW_DEBUG_IO("%s %d: read_direct32(0x%08X)\n", __FILE__, __LINE__, \
+			(u32)(ofs)); \
+	_ipw_read32(ipw, ofs); \
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#176: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:386:
+#define ipw_read_indirect(a, b, c, d) ({ \
+	IPW_DEBUG_IO("%s %d: read_indirect(0x%08X) %u bytes\n", __FILE__, \
+			__LINE__, (u32)(b), (u32)(d)); \
+	_ipw_read_indirect(a, b, c, d); \
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#176: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:386:
+#define ipw_read_indirect(a, b, c, d) ({ \
+	IPW_DEBUG_IO("%s %d: read_indirect(0x%08X) %u bytes\n", __FILE__, \
+			__LINE__, (u32)(b), (u32)(d)); \
+	_ipw_read_indirect(a, b, c, d); \
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#188: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:395:
+#define ipw_write_indirect(a, b, c, d) do { \
+	IPW_DEBUG_IO("%s %d: write_indirect(0x%08X) %u bytes\n", __FILE__, \
+			__LINE__, (u32)(b), (u32)(d)); \
+	_ipw_write_indirect(a, b, c, d); \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#188: FILE: drivers/net/wireless/ipw2x00/ipw2200.c:395:
+#define ipw_write_indirect(a, b, c, d) do { \
+	IPW_DEBUG_IO("%s %d: write_indirect(0x%08X) %u bytes\n", __FILE__, \
+			__LINE__, (u32)(b), (u32)(d)); \
+	_ipw_write_indirect(a, b, c, d); \
+} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 14 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
