WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
initrd(rootfs image that is loaded separately from uImage) fails. Kernel crashes very early. 

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#68: FILE: arch/powerpc/kernel/prom.c:767:
+int need_reloc_initrd = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#69: FILE: arch/powerpc/kernel/prom.c:768:
+static int need_to_fix_reserve_map = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#96: FILE: arch/powerpc/kernel/prom.c:783:
+	orig_initrd_start = (unsigned long)(of_read_ulong(prop, l/4));
 	                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#101: FILE: arch/powerpc/kernel/prom.c:788:
+	orig_initrd_end = (unsigned long)(of_read_ulong(prop, l/4));
 	                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: arch/powerpc/kernel/prom.c:801:
+		/* TODO: add support for Initrd Image that is spread to
+		low and high mem */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: arch/powerpc/kernel/prom.c:801:
+		low and high mem */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'base_32 != orig_initrd_start'
#142: FILE: arch/powerpc/kernel/prom.c:1096:
+			if (!need_to_fix_reserve_map ||
+				(base_32 != orig_initrd_start)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: arch/powerpc/kernel/prom.c:1097:
+			if (!need_to_fix_reserve_map ||
+				(base_32 != orig_initrd_start)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'base != orig_initrd_start'
#160: FILE: arch/powerpc/kernel/prom.c:1114:
+		if (!need_to_fix_reserve_map ||
+			(base != orig_initrd_start)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: arch/powerpc/kernel/prom.c:1115:
+		if (!need_to_fix_reserve_map ||
+			(base != orig_initrd_start)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: arch/powerpc/kernel/setup-common.c:338:
+#if defined (CONFIG_BLK_DEV_INITRD) && (CONFIG_PPC32)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#178: FILE: arch/powerpc/kernel/setup-common.c:340:
+extern int need_reloc_initrd;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#189: FILE: arch/powerpc/kernel/setup-common.c:351:
+	char *dest = (char *) initrd_start;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: arch/powerpc/kernel/setup-common.c:357:
+	 * data from it, in page-size chunks. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: arch/powerpc/kernel/setup-common.c:362:
+			int amount_to_copy = min(size, PAGE_SIZE);
+			memcpy(dest, src_ptr, amount_to_copy);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#206: FILE: arch/powerpc/kernel/setup-common.c:368:
+			printk(KERN_CRIT

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: arch/powerpc/kernel/setup-common.c:374:
+#elif defined (CONFIG_BLK_DEV_INITRD)

CHECK:BRACES: Unbalanced braces around else statement
#228: FILE: arch/powerpc/kernel/setup-common.c:391:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123963.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 8 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123963.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
