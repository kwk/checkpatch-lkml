CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cfqq' - possible side-effects?
#116: FILE: block/cfq-iosched.c:266:
+#define CFQQ_SEEKY(cfqq) (!cfqq->cic || CIC_SEEKY(cfqq->cic))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cfqq' may be better as '(cfqq)' to avoid precedence issues
#116: FILE: block/cfq-iosched.c:266:
+#define CFQQ_SEEKY(cfqq) (!cfqq->cic || CIC_SEEKY(cfqq->cic))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#133: FILE: block/cfq-iosched.c:368:
+		unsigned process_thr = cfq_target_latency

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: block/cfq-iosched.c:583:
+		enum wl_type_t type = cfq_cfqq_sync(cfqq) ? SYNC_WL : ASYNC_WL;
+		if (type == SYNC_WL && (CFQQ_SEEKY(cfqq) ||

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: block/cfq-iosched.c:599:
+		enum wl_type_t type = cfq_cfqq_sync(cfqq) ? SYNC_WL : ASYNC_WL;
+		if (type == SYNC_WL && (CFQQ_SEEKY(cfqq) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: block/cfq-iosched.c:1152:
+		struct cfq_rb_root *service_tree = cfqq->service_tree;
+		if (!service_tree) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: block/cfq-iosched.c:1289:
+	enum wl_type_t cur_best = SYNC_NOIDLE_WL;
+	for (i = 0; i < 3; ++i) {

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: block/cfq-iosched.c:1362:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nonzero_counts == 1'
#284: FILE: block/cfq-iosched.c:1379:
+			if (previous_prio != cfqd->serving_prio ||
+			    (nonzero_counts == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#298: FILE: block/cfq-iosched.c:1393:
+				unsigned slice = cfq_target_latency;

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: block/cfq-iosched.c:1394:
+				unsigned slice = cfq_target_latency;
+				slice = slice * counts[cfqd->serving_type] /

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#300: FILE: block/cfq-iosched.c:1395:
+					max_t(unsigned, cfqd->busy_queues_avg

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: block/cfq-iosched.c:1405:
+				else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: block/cfq-iosched.c:1406:
+					unsigned slice_min =

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: block/cfq-iosched.c:1409:
+					slice = max_t(unsigned, slice,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#355: FILE: block/cfq-iosched.c:2245:
+	if (cfqd->serving_type == SYNC_NOIDLE_WL
+	    && new_cfqq->service_tree == cfqq->service_tree)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057630.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 6 checks, 292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057630.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
