WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: block/gpdisk.c:1:
+#include <linux/genhd.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#96: FILE: block/gpdisk.c:9:
+static unsigned int gpdisk_major = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#97: FILE: block/gpdisk.c:10:
+module_param(gpdisk_major, uint, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#104: FILE: block/gpdisk.c:17:
+static unsigned int gpdisk_first_minor = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gpdisk"
#158: FILE: block/gpdisk.c:71:
+	if (gpdisk == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#193: FILE: block/gpdisk.c:106:
+	return;
+}

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#312: FILE: include/linux/genhd.h:70:
+#include <asm/atomic.h>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "disk->gpdisk"
#334: FILE: include/linux/genhd.h:266:
+	return atomic_read(&disk->gpdisk_enabled) > 0 && disk->gpdisk != NULL;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: include/linux/genhd.h:276:
+extern void gpdisk_new(struct gendisk *, unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: include/linux/genhd.h:277:
+extern void gpdisk_release(struct gendisk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#345: FILE: include/linux/genhd.h:277:
+extern void gpdisk_release(struct gendisk *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373063.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 4 checks, 273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373063.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
