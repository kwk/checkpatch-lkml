WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#53: 
      mg_disk: seperate mg_disk.h again
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#104: FILE: block/blk-settings.c:113:
+	lim->max_sectors = lim->max_hw_sectors = SAFE_MAX_SECTORS;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#105: FILE: block/blk-settings.c:114:
+	lim->logical_block_size = lim->physical_block_size = lim->io_min = 512;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: fs/btrfs/disk-io.c:1361:
+	err = bdi_register(bdi, NULL, "btrfs-%d",
+				atomic_inc_return(&btrfs_bdi_num));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/linux/blkdev.h:929:
+extern void blk_set_default_limits(struct queue_limits *lim);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#327: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#332: FILE: include/linux/mg_disk.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#358: FILE: include/linux/mg_disk.h:27:
+#define MG_BOOT_DEV		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#360: FILE: include/linux/mg_disk.h:29:
+#define MG_STORAGE_DEV		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#362: FILE: include/linux/mg_disk.h:31:
+#define MG_STORAGE_DEV_SKIP_RST	(1 << 2)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000109433.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 7 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000109433.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
