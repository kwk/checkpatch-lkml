WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
--- linux-2.6.23.1/include/linux/backlight.h	2007-10-12 18:43:44.000000000 +0200

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#54: FILE: include/linux/backlight.h:10:
#include <linux/device.h>

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: include/linux/backlight.h:73:
+  struct timeout *timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/linux/backlight.h:74:
+  struct input_handler *input_handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: include/linux/backlight.h:75:
+  unsigned short dimmer_low_level;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/linux/backlight.h:76:
+  unsigned short dimmer_high_level;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: include/linux/timeout.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: include/linux/timeout.h:18:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: include/linux/timeout.h:19:
+ *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: include/linux/timeout.h:31:
+  TIMEOUT_RUNNING,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/linux/timeout.h:32:
+  TIMEOUT_TRIGGERED,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/linux/timeout.h:33:
+  TIMEOUT_FINILIZED$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/linux/timeout.h:37:
+  struct mutex lock;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#124: FILE: include/linux/timeout.h:37:
+  struct mutex lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: include/linux/timeout.h:38:
+  spinlock_t latest_lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#125: FILE: include/linux/timeout.h:38:
+  spinlock_t latest_lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: include/linux/timeout.h:39:
+  struct delayed_work trigger_worker;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: include/linux/timeout.h:40:
+  struct work_struct start_worker;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: include/linux/timeout.h:41:
+  unsigned long latest;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: include/linux/timeout.h:42:
+  enum timeout_state state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/linux/timeout.h:44:
+  unsigned long duration; /* client defined duration */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: include/linux/timeout.h:45:
+  unsigned long data; /* client data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: include/linux/timeout.h:46:
+  void (*trigger)(unsigned long); /* client function */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#133: FILE: include/linux/timeout.h:46:
+  void (*trigger)(unsigned long); /* client function */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: include/linux/timeout.h:47:
+  void (*start)(unsigned long); /* client function */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#134: FILE: include/linux/timeout.h:47:
+  void (*start)(unsigned long); /* client function */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: include/linux/timeout.h:50:
+extern void timeout_touch(struct timeout *timeout);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/timeout.h:52:
+extern void timeout_init(struct timeout *timeout);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/timeout.h:54:
+extern void timeout_kill(struct timeout *timeout);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: include/linux/timeout.h:58:
+    return secs * HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: include/linux/timeout.h:63:
+    return jif / HZ;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: drivers/video/backlight/timeout.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#174: FILE: drivers/video/backlight/timeout.c:18:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#175: FILE: drivers/video/backlight/timeout.c:19:
+ *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: drivers/video/backlight/timeout.c:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/video/backlight/timeout.c:32:
+  unsigned long ret;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: drivers/video/backlight/timeout.c:33:
+  unsigned long ret;
+  spin_lock(&timeout->latest_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/video/backlight/timeout.c:33:
+  spin_lock(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/video/backlight/timeout.c:34:
+  ret = timeout->latest;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/video/backlight/timeout.c:35:
+  spin_unlock(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/video/backlight/timeout.c:36:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/video/backlight/timeout.c:41:
+  unsigned long elapsed;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: drivers/video/backlight/timeout.c:42:
+  unsigned long elapsed;
+  spin_lock(&timeout->latest_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/video/backlight/timeout.c:42:
+  spin_lock(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/video/backlight/timeout.c:43:
+  elapsed = jiffies - timeout->latest;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/video/backlight/timeout.c:44:
+  spin_unlock(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/video/backlight/timeout.c:45:
+  return elapsed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/video/backlight/timeout.c:50:
+  spin_lock(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/video/backlight/timeout.c:51:
+  timeout->latest = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/video/backlight/timeout.c:52:
+  spin_unlock(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/video/backlight/timeout.c:58:
+  struct timeout *timeout = container_of(work, struct timeout, trigger_worker.work);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/video/backlight/timeout.c:60:
+  mutex_lock(&timeout->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/video/backlight/timeout.c:63:
+  if (timeout->state != TIMEOUT_RUNNING)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#219: FILE: drivers/video/backlight/timeout.c:63:
+  if (timeout->state != TIMEOUT_RUNNING)
+    goto exit;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/video/backlight/timeout.c:64:
+    goto exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/video/backlight/timeout.c:67:
+  if ( elapsed(timeout) >= timeout->duration ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#223: FILE: drivers/video/backlight/timeout.c:67:
+  if ( elapsed(timeout) >= timeout->duration ) {
[...]
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %ld ms) \n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#223: FILE: drivers/video/backlight/timeout.c:67:
+  if ( elapsed(timeout) >= timeout->duration ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#223: FILE: drivers/video/backlight/timeout.c:67:
+  if ( elapsed(timeout) >= timeout->duration ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#225: FILE: drivers/video/backlight/timeout.c:69:
+    /*
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %f) \n",

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#225: FILE: drivers/video/backlight/timeout.c:69:
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %f) \n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/video/backlight/timeout.c:70:
+        (elapsed(timeout) / (float) (HZ)));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/video/backlight/timeout.c:71:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/video/backlight/timeout.c:72:
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %ld ms) \n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#228: FILE: drivers/video/backlight/timeout.c:72:
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %ld ms) \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#228: FILE: drivers/video/backlight/timeout.c:72:
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %ld ms) \n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/video/backlight/timeout.c:73:
+        (elapsed(timeout) * 1000 / (HZ)));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/video/backlight/timeout.c:73:
+    printk(KERN_DEBUG "tigger_worker_function() -> timeout->trigger() (elapsed: %ld ms) \n",
+        (elapsed(timeout) * 1000 / (HZ)));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/video/backlight/timeout.c:73:
+        (elapsed(timeout) * 1000 / (HZ)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/video/backlight/timeout.c:74:
+    timeout->state = TIMEOUT_TRIGGERED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/video/backlight/timeout.c:75:
+    timeout->trigger(timeout->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/video/backlight/timeout.c:76:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/video/backlight/timeout.c:77:
+  else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#233: FILE: drivers/video/backlight/timeout.c:77:
+  else {
+    unsigned long new_delay = ( read_latest(timeout) - jiffies ) + timeout->duration;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#233: FILE: drivers/video/backlight/timeout.c:77:
+  }
+  else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#233: FILE: drivers/video/backlight/timeout.c:77:
+  else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/video/backlight/timeout.c:78:
+    unsigned long new_delay = ( read_latest(timeout) - jiffies ) + timeout->duration;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#234: FILE: drivers/video/backlight/timeout.c:78:
+    unsigned long new_delay = ( read_latest(timeout) - jiffies ) + timeout->duration;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#234: FILE: drivers/video/backlight/timeout.c:78:
+    unsigned long new_delay = ( read_latest(timeout) - jiffies ) + timeout->duration;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#236: FILE: drivers/video/backlight/timeout.c:80:
+    /*
+    printk(KERN_DEBUG "tigger_worker_function() -> schedule_delayed_work() (new_delay: %ld %f)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/video/backlight/timeout.c:81:
+        new_delay, new_delay / (float) (HZ));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/video/backlight/timeout.c:82:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/video/backlight/timeout.c:83:
+    printk(KERN_DEBUG "tigger_worker_function() -> schedule_delayed_work() (new_delay: %ld jif %ld ms)\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#239: FILE: drivers/video/backlight/timeout.c:83:
+    printk(KERN_DEBUG "tigger_worker_function() -> schedule_delayed_work() (new_delay: %ld jif %ld ms)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/video/backlight/timeout.c:84:
+        new_delay, new_delay * 1000 / (HZ));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/video/backlight/timeout.c:84:
+    printk(KERN_DEBUG "tigger_worker_function() -> schedule_delayed_work() (new_delay: %ld jif %ld ms)\n",
+        new_delay, new_delay * 1000 / (HZ));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/video/backlight/timeout.c:84:
+        new_delay, new_delay * 1000 / (HZ));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/video/backlight/timeout.c:85:
+    schedule_delayed_work(&timeout->trigger_worker,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/video/backlight/timeout.c:86:
+    schedule_delayed_work(&timeout->trigger_worker,
+/*        ( jiffies - read_latest(timeout) ) + timeout->duration ); */

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/video/backlight/timeout.c:87:
+        new_delay );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/video/backlight/timeout.c:87:
+        new_delay );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#243: FILE: drivers/video/backlight/timeout.c:87:
+        new_delay );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/video/backlight/timeout.c:89:
+  }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#245: FILE: drivers/video/backlight/timeout.c:89:
+
+  }

WARNING:INDENTED_LABEL: labels should not be indented
#247: FILE: drivers/video/backlight/timeout.c:91:
+  exit:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/video/backlight/timeout.c:92:
+    mutex_unlock(&timeout->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/video/backlight/timeout.c:98:
+  struct timeout *timeout = container_of(work, struct timeout, start_worker);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/video/backlight/timeout.c:100:
+  printk(KERN_DEBUG "start_worker_function() -> timeout->start()\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#256: FILE: drivers/video/backlight/timeout.c:100:
+  printk(KERN_DEBUG "start_worker_function() -> timeout->start()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_worker_function', this function's name, in a string
#256: FILE: drivers/video/backlight/timeout.c:100:
+  printk(KERN_DEBUG "start_worker_function() -> timeout->start()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/video/backlight/timeout.c:101:
+  timeout->start(timeout->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/video/backlight/timeout.c:102:
+  schedule_delayed_work(&timeout->trigger_worker, timeout->duration);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/video/backlight/timeout.c:108:
+  touch_latest(timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/video/backlight/timeout.c:110:
+  if (timeout->state == TIMEOUT_TRIGGERED &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#266: FILE: drivers/video/backlight/timeout.c:110:
+  if (timeout->state == TIMEOUT_TRIGGERED &&
[...]
+    if (timeout->state == TIMEOUT_TRIGGERED) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/video/backlight/timeout.c:111:
+      mutex_trylock(&timeout->lock)) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#268: FILE: drivers/video/backlight/timeout.c:112:
+      mutex_trylock(&timeout->lock)) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/video/backlight/timeout.c:113:
+    if (timeout->state == TIMEOUT_TRIGGERED) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#269: FILE: drivers/video/backlight/timeout.c:113:
+    if (timeout->state == TIMEOUT_TRIGGERED) {
+      timeout->state = TIMEOUT_RUNNING;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/video/backlight/timeout.c:114:
+      timeout->state = TIMEOUT_RUNNING;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/video/backlight/timeout.c:115:
+      schedule_work(&timeout->start_worker);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/video/backlight/timeout.c:116:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/video/backlight/timeout.c:118:
+    mutex_unlock(&timeout->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/video/backlight/timeout.c:119:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/video/backlight/timeout.c:125:
+  mutex_init(&timeout->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/video/backlight/timeout.c:126:
+  spin_lock_init(&timeout->latest_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/video/backlight/timeout.c:127:
+  INIT_DELAYED_WORK(&timeout->trigger_worker, trigger_worker_function);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/video/backlight/timeout.c:128:
+  INIT_WORK(&timeout->start_worker, start_worker_function);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/video/backlight/timeout.c:129:
+  timeout->state = TIMEOUT_TRIGGERED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/video/backlight/timeout.c:135:
+  mutex_lock(&timeout->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/video/backlight/timeout.c:136:
+  if (timeout->state == TIMEOUT_RUNNING)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#292: FILE: drivers/video/backlight/timeout.c:136:
+  if (timeout->state == TIMEOUT_RUNNING)
+    cancel_delayed_work_sync(&timeout->trigger_worker);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/video/backlight/timeout.c:137:
+    cancel_delayed_work_sync(&timeout->trigger_worker);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/video/backlight/timeout.c:139:
+  flush_scheduled_work();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/video/backlight/timeout.c:140:
+  timeout->state = TIMEOUT_FINILIZED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/video/backlight/timeout.c:141:
+  mutex_unlock(&timeout->lock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: drivers/video/backlight/backlight.c:9:
+#include <linux/backlight.h> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/video/backlight/backlight.c:181:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/video/backlight/backlight.c:182:
+    .flags = INPUT_DEVICE_ID_MATCH_EVBIT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/video/backlight/backlight.c:183:
+    .evbit = { BIT(EV_KEY) },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/video/backlight/backlight.c:184:
+  }, /* key event */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/video/backlight/backlight.c:185:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/video/backlight/backlight.c:186:
+    .flags = INPUT_DEVICE_ID_MATCH_RELBIT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/video/backlight/backlight.c:187:
+    .relbit = { BIT(REL_X) | BIT(REL_Y) | BIT(REL_WHEEL) },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/video/backlight/backlight.c:188:
+  },  /* rel axes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/video/backlight/backlight.c:189:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/video/backlight/backlight.c:190:
+    .flags = INPUT_DEVICE_ID_MATCH_ABSBIT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/video/backlight/backlight.c:191:
+    .absbit = { BIT(ABS_X) | BIT(ABS_Y) },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/video/backlight/backlight.c:192:
+  },  /* abs axes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/video/backlight/backlight.c:193:
+  { }$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#338: FILE: drivers/video/backlight/backlight.c:196:
+static void handler_event(struct input_handle *handle, unsigned int type, unsigned int code, int value)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/video/backlight/backlight.c:198:
+  struct backlight_device *dev = (struct backlight_device *)handle->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/video/backlight/backlight.c:200:
+  switch(type) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#342: FILE: drivers/video/backlight/backlight.c:200:
+  switch(type) {
+    case EV_KEY:
+    case EV_REL:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: drivers/video/backlight/backlight.c:200:
+  switch(type) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/video/backlight/backlight.c:201:
+    case EV_KEY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/video/backlight/backlight.c:202:
+    case EV_REL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/video/backlight/backlight.c:203:
+      timeout_touch(dev->timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/video/backlight/backlight.c:204:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/video/backlight/backlight.c:211:
+  printk(KERN_DEBUG "SWITCH TO HIGH\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#353: FILE: drivers/video/backlight/backlight.c:211:
+  printk(KERN_DEBUG "SWITCH TO HIGH\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/video/backlight/backlight.c:212:
+  bd->props.brightness = bd->dimmer_high_level;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/video/backlight/backlight.c:213:
+  backlight_update_status(bd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/video/backlight/backlight.c:220:
+  printk(KERN_DEBUG "SWITCH TO LOW\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#362: FILE: drivers/video/backlight/backlight.c:220:
+  printk(KERN_DEBUG "SWITCH TO LOW\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/video/backlight/backlight.c:221:
+  bd->props.brightness = bd->dimmer_low_level;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/video/backlight/backlight.c:222:
+  backlight_update_status(bd);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/video/backlight/backlight.c:226:
+static int handler_connect(struct input_handler *handler, struct input_dev *dev,
+    const struct input_device_id *id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/video/backlight/backlight.c:226:
+    const struct input_device_id *id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/video/backlight/backlight.c:228:
+  int error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/video/backlight/backlight.c:229:
+  struct input_handle *handle;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#373: FILE: drivers/video/backlight/backlight.c:231:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/video/backlight/backlight.c:232:
+  handle = kzalloc(sizeof(struct input_handle), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*handle)...) over kzalloc(sizeof(struct input_handle)...)
#374: FILE: drivers/video/backlight/backlight.c:232:
+  handle = kzalloc(sizeof(struct input_handle), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/video/backlight/backlight.c:233:
+  if (!handle)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#375: FILE: drivers/video/backlight/backlight.c:233:
+  if (!handle)
+    return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/video/backlight/backlight.c:234:
+    return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/video/backlight/backlight.c:236:
+  handle->handler = handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/video/backlight/backlight.c:237:
+  handle->dev = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/video/backlight/backlight.c:238:
+  handle->name = "backlight";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/video/backlight/backlight.c:239:
+  handle->private = handler->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/video/backlight/backlight.c:241:
+  error = input_register_handle(handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/video/backlight/backlight.c:242:
+  if (error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#384: FILE: drivers/video/backlight/backlight.c:242:
+  if (error)
+    goto err_free_handle;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/video/backlight/backlight.c:243:
+    goto err_free_handle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/video/backlight/backlight.c:245:
+  error = input_open_device(handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/video/backlight/backlight.c:246:
+  if (error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#388: FILE: drivers/video/backlight/backlight.c:246:
+  if (error)
+    goto err_unregister_handle;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/video/backlight/backlight.c:247:
+    goto err_unregister_handle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/video/backlight/backlight.c:249:
+  return 0;$

WARNING:INDENTED_LABEL: labels should not be indented
#393: FILE: drivers/video/backlight/backlight.c:251:
+  err_unregister_handle:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/video/backlight/backlight.c:252:
+    input_unregister_handle(handle);$

WARNING:INDENTED_LABEL: labels should not be indented
#395: FILE: drivers/video/backlight/backlight.c:253:
+  err_free_handle:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/video/backlight/backlight.c:254:
+    kfree(handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/video/backlight/backlight.c:255:
+  return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/video/backlight/backlight.c:260:
+  input_close_device(handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/video/backlight/backlight.c:261:
+  input_unregister_handle(handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/video/backlight/backlight.c:262:
+  kfree(handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/video/backlight/backlight.c:267:
+  printk(KERN_DEBUG "enable_dimmer()...\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#409: FILE: drivers/video/backlight/backlight.c:267:
+  printk(KERN_DEBUG "enable_dimmer()...\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enable_dimmer', this function's name, in a string
#409: FILE: drivers/video/backlight/backlight.c:267:
+  printk(KERN_DEBUG "enable_dimmer()...\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/video/backlight/backlight.c:268:
+  dev->input_handler = kzalloc(sizeof(struct input_handler), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev->input_handler)...) over kzalloc(sizeof(struct input_handler)...)
#410: FILE: drivers/video/backlight/backlight.c:268:
+  dev->input_handler = kzalloc(sizeof(struct input_handler), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/video/backlight/backlight.c:269:
+  if (!dev->input_handler)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#411: FILE: drivers/video/backlight/backlight.c:269:
+  if (!dev->input_handler)
+    return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/video/backlight/backlight.c:270:
+    return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/video/backlight/backlight.c:272:
+  if (!dev->dimmer_low_level)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#414: FILE: drivers/video/backlight/backlight.c:272:
+  if (!dev->dimmer_low_level)
+    dev->dimmer_low_level = dev->props.max_brightness/2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/video/backlight/backlight.c:273:
+    dev->dimmer_low_level = dev->props.max_brightness/2;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#415: FILE: drivers/video/backlight/backlight.c:273:
+    dev->dimmer_low_level = dev->props.max_brightness/2;
                                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/video/backlight/backlight.c:274:
+  if (!dev->dimmer_high_level)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#416: FILE: drivers/video/backlight/backlight.c:274:
+  if (!dev->dimmer_high_level)
+    dev->dimmer_high_level = dev->props.max_brightness;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/video/backlight/backlight.c:275:
+    dev->dimmer_high_level = dev->props.max_brightness;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/video/backlight/backlight.c:277:
+  dev->input_handler->event = handler_event;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/video/backlight/backlight.c:278:
+  dev->input_handler->connect = handler_connect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/video/backlight/backlight.c:279:
+  dev->input_handler->disconnect = handler_disconnect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/video/backlight/backlight.c:280:
+  dev->input_handler->name = "backlight";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/video/backlight/backlight.c:281:
+  dev->input_handler->id_table = idi_dimmer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/video/backlight/backlight.c:282:
+  dev->input_handler->private = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/video/backlight/backlight.c:284:
+  dev->timeout = kzalloc(sizeof(struct timeout), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev->timeout)...) over kzalloc(sizeof(struct timeout)...)
#426: FILE: drivers/video/backlight/backlight.c:284:
+  dev->timeout = kzalloc(sizeof(struct timeout), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/video/backlight/backlight.c:285:
+  if (!dev->timeout)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#427: FILE: drivers/video/backlight/backlight.c:285:
+  if (!dev->timeout)
+    goto free_handler;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/video/backlight/backlight.c:286:
+    goto free_handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/video/backlight/backlight.c:288:
+  timeout_init(dev->timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/video/backlight/backlight.c:289:
+  dev->timeout->duration = timeout_sec2jiffies(5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/video/backlight/backlight.c:290:
+  dev->timeout->data = (unsigned long)dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/video/backlight/backlight.c:291:
+  dev->timeout->trigger = dimmer_trigger;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/video/backlight/backlight.c:292:
+  dev->timeout->start = dimmer_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/video/backlight/backlight.c:294:
+  if (!input_register_handler(dev->input_handler))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#436: FILE: drivers/video/backlight/backlight.c:294:
+  if (!input_register_handler(dev->input_handler))
+    return 0; /* success */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/video/backlight/backlight.c:295:
+    return 0; /* success */$

WARNING:INDENTED_LABEL: labels should not be indented
#440: FILE: drivers/video/backlight/backlight.c:298:
+  free_handler:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/video/backlight/backlight.c:299:
+    kfree(dev->input_handler);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/video/backlight/backlight.c:300:
+    dev->input_handler=NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#442: FILE: drivers/video/backlight/backlight.c:300:
+    dev->input_handler=NULL;
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/video/backlight/backlight.c:301:
+    return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/video/backlight/backlight.c:306:
+  if (!dev->input_handler)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#448: FILE: drivers/video/backlight/backlight.c:306:
+  if (!dev->input_handler)
+    return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/video/backlight/backlight.c:307:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/video/backlight/backlight.c:309:
+  input_unregister_handler(dev->input_handler);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/video/backlight/backlight.c:310:
+  timeout_kill(dev->timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/video/backlight/backlight.c:311:
+  kfree(dev->input_handler);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/video/backlight/backlight.c:312:
+  kfree(dev->timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/video/backlight/backlight.c:313:
+  dev->input_handler = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/video/backlight/backlight.c:314:
+  dev->timeout = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/video/backlight/backlight.c:315:
+  printk(KERN_DEBUG "disable_dimmer()\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#457: FILE: drivers/video/backlight/backlight.c:315:
+  printk(KERN_DEBUG "disable_dimmer()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'disable_dimmer', this function's name, in a string
#457: FILE: drivers/video/backlight/backlight.c:315:
+  printk(KERN_DEBUG "disable_dimmer()\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: drivers/video/backlight/backlight.c:320:
+static ssize_t show_dimmer_control(struct device *dev,
+    struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/video/backlight/backlight.c:320:
+    struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/video/backlight/backlight.c:324:
+  return snprintf(buf, PAGE_SIZE, "%d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/video/backlight/backlight.c:325:
+      (bd->input_handler != NULL));$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bd->input_handler"
#467: FILE: drivers/video/backlight/backlight.c:325:
+      (bd->input_handler != NULL));

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/video/backlight/backlight.c:329:
+static ssize_t show_dimmer_timeout(struct device *dev,
+    struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/video/backlight/backlight.c:329:
+    struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/video/backlight/backlight.c:333:
+  if (bd->timeout)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#475: FILE: drivers/video/backlight/backlight.c:333:
+  if (bd->timeout)
+    return snprintf(buf, PAGE_SIZE, "%d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/video/backlight/backlight.c:334:
+    return snprintf(buf, PAGE_SIZE, "%d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: drivers/video/backlight/backlight.c:335:
+        timeout_jif2sec(bd->timeout->duration));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/video/backlight/backlight.c:335:
+        timeout_jif2sec(bd->timeout->duration));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/video/backlight/backlight.c:336:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#478: FILE: drivers/video/backlight/backlight.c:336:
+  else
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/video/backlight/backlight.c:337:
+    return 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/video/backlight/backlight.c:341:
+static ssize_t show_dimmer_low_level(struct device *dev,
+    struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/video/backlight/backlight.c:341:
+    struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/video/backlight/backlight.c:345:
+  return snprintf(buf, PAGE_SIZE, "%d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/video/backlight/backlight.c:346:
+      bd->dimmer_low_level);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: drivers/video/backlight/backlight.c:350:
+static ssize_t show_dimmer_high_level(struct device *dev,
+    struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/video/backlight/backlight.c:350:
+    struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/video/backlight/backlight.c:354:
+  return snprintf(buf, PAGE_SIZE, "%d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/video/backlight/backlight.c:355:
+      bd->dimmer_high_level);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/video/backlight/backlight.c:360:
+static ssize_t store_dimmer_control(struct device *dev,
+    struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/video/backlight/backlight.c:360:
+    struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/video/backlight/backlight.c:364:
+  char *endp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/video/backlight/backlight.c:365:
+  int control = simple_strtoul(buf, &endp, 0);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#507: FILE: drivers/video/backlight/backlight.c:365:
+  int control = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/video/backlight/backlight.c:368:
+  if (control == 1 && !bd->input_handler)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#510: FILE: drivers/video/backlight/backlight.c:368:
+  if (control == 1 && !bd->input_handler)
+    enable_dimmer(bd);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/video/backlight/backlight.c:369:
+    enable_dimmer(bd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/video/backlight/backlight.c:370:
+  else if (control == 0 && bd->input_handler)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#512: FILE: drivers/video/backlight/backlight.c:370:
+  else if (control == 0 && bd->input_handler)
+    disable_dimmer(bd);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/video/backlight/backlight.c:371:
+    disable_dimmer(bd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/video/backlight/backlight.c:372:
+  mutex_unlock(&bd->ops_lock);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/video/backlight/backlight.c:378:
+static ssize_t store_dimmer_timeout(struct device *dev,
+    struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/video/backlight/backlight.c:378:
+    struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/video/backlight/backlight.c:382:
+  char *endp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/video/backlight/backlight.c:383:
+  int timeout = simple_strtoul(buf, &endp, 0);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#525: FILE: drivers/video/backlight/backlight.c:383:
+  int timeout = simple_strtoul(buf, &endp, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/video/backlight/backlight.c:385:
+  if (timeout <= 0 || timeout >= 60*30)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#527: FILE: drivers/video/backlight/backlight.c:385:
+  if (timeout <= 0 || timeout >= 60*30)
+    return -ENXIO;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#527: FILE: drivers/video/backlight/backlight.c:385:
+  if (timeout <= 0 || timeout >= 60*30)
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/video/backlight/backlight.c:386:
+    return -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/video/backlight/backlight.c:389:
+  if (!bd->timeout) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 10)
#531: FILE: drivers/video/backlight/backlight.c:389:
+  if (!bd->timeout) {
+	  mutex_unlock(&bd->ops_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/video/backlight/backlight.c:391:
+    return -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/video/backlight/backlight.c:392:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/video/backlight/backlight.c:393:
+  bd->timeout->duration = timeout_sec2jiffies(timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/video/backlight/backlight.c:396:
+  return count;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/video/backlight/backlight.c:400:
+static ssize_t store_dimmer_low_level(struct device *dev,
+    struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/video/backlight/backlight.c:400:
+    struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/video/backlight/backlight.c:404:
+  char *endp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/video/backlight/backlight.c:405:
+  int low = simple_strtoul(buf, &endp, 0);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#547: FILE: drivers/video/backlight/backlight.c:405:
+  int low = simple_strtoul(buf, &endp, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/video/backlight/backlight.c:407:
+  if (low < 0 || low > bd->props.max_brightness)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#549: FILE: drivers/video/backlight/backlight.c:407:
+  if (low < 0 || low > bd->props.max_brightness)
+    return -ENXIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/video/backlight/backlight.c:408:
+    return -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/video/backlight/backlight.c:411:
+  bd->dimmer_low_level = low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/video/backlight/backlight.c:414:
+  return count;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/video/backlight/backlight.c:418:
+static ssize_t store_dimmer_high_level(struct device *dev,
+    struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/video/backlight/backlight.c:418:
+    struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: drivers/video/backlight/backlight.c:422:
+  char *endp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/video/backlight/backlight.c:423:
+  int high = simple_strtoul(buf, &endp, 0);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#565: FILE: drivers/video/backlight/backlight.c:423:
+  int high = simple_strtoul(buf, &endp, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/video/backlight/backlight.c:425:
+  if (high < 0 || high > bd->props.max_brightness)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#567: FILE: drivers/video/backlight/backlight.c:425:
+  if (high < 0 || high > bd->props.max_brightness)
+    return -ENXIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/video/backlight/backlight.c:426:
+    return -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/video/backlight/backlight.c:429:
+  bd->dimmer_high_level = high;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/video/backlight/backlight.c:432:
+  return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/video/backlight/backlight.c:525:
+  disable_dimmer(bd);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364184.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 259 warnings, 28 checks, 534 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364184.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
