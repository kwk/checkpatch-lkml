WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#38: FILE: drivers/serial/mcf.c:1:
+/****************************************************************************/

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'inlude' may be misspelled - perhaps 'include'?
#74: FILE: drivers/serial/mcf.c:37:
+ *	specific inlude files.
   	         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#109: FILE: drivers/serial/mcf.c:72:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#127: FILE: drivers/serial/mcf.c:90:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/serial/mcf.c:107:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

CHECK:SPACING: No space is necessary after a cast
#157: FILE: drivers/serial/mcf.c:120:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

CHECK:SPACING: No space is necessary after a cast
#170: FILE: drivers/serial/mcf.c:133:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

CHECK:SPACING: No space is necessary after a cast
#203: FILE: drivers/serial/mcf.c:166:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/serial/mcf.c:177:
+	writeb(MCFUART_UCR_RXENABLE | MCFUART_UCR_TXENABLE,
+		port->membase + MCFUART_UCR);

CHECK:SPACING: No space is necessary after a cast
#229: FILE: drivers/serial/mcf.c:192:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/serial/mcf.c:211:
+static void mcf_set_termios(struct uart_port *port, struct ktermios *termios,
+	struct ktermios *old)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#261: FILE: drivers/serial/mcf.c:224:
+	case CS5: mr1 |= MCFUART_MR1_CS5; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#262: FILE: drivers/serial/mcf.c:225:
+	case CS6: mr1 |= MCFUART_MR1_CS6; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#263: FILE: drivers/serial/mcf.c:226:
+	case CS7: mr1 |= MCFUART_MR1_CS7; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#265: FILE: drivers/serial/mcf.c:228:
+	default:  mr1 |= MCFUART_MR1_CS8; break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/serial/mcf.c:266:
+	writeb(MCFUART_UCSR_RXCLKTIMER | MCFUART_UCSR_TXCLKTIMER,
+		port->membase + MCFUART_UCSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: drivers/serial/mcf.c:268:
+	writeb(MCFUART_UCR_RXENABLE | MCFUART_UCR_TXENABLE,
+		port->membase + MCFUART_UCR);

CHECK:SPACING: No space is necessary after a cast
#313: FILE: drivers/serial/mcf.c:276:
+	struct uart_port *port = (struct uart_port *) pp;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/serial/mcf.c:286:
+			writeb(MCFUART_UCR_CMDRESETERR,
+				port->membase + MCFUART_UCR);

CHECK:SPACING: No space is necessary after a cast
#359: FILE: drivers/serial/mcf.c:322:
+	struct uart_port *port = (struct uart_port *) pp;

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#374: FILE: drivers/serial/mcf.c:337:
+		xmit->tail = (xmit->tail + 1) & (UART_XMIT_SIZE -1);
 		                                                ^

CHECK:SPACING: No space is necessary after a cast
#392: FILE: drivers/serial/mcf.c:355:
+	struct mcf_uart *pp = (struct mcf_uart *) port;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#413: FILE: drivers/serial/mcf.c:376:
+		printk(KERN_ERR "MCF: unable to attach ColdFire UART %d "

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: drivers/serial/mcf.c:377:
+		printk(KERN_ERR "MCF: unable to attach ColdFire UART %d "
+			"interrupt vector=%d\n", port->line, port->irq);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#441: FILE: drivers/serial/mcf.c:404:
+static int mcf_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                          ^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ser->type != PORT_UNKNOWN'
#443: FILE: drivers/serial/mcf.c:406:
+	if ((ser->type != PORT_UNKNOWN) && (ser->type != PORT_MCF))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ser->type != PORT_MCF'
#443: FILE: drivers/serial/mcf.c:406:
+	if ((ser->type != PORT_UNKNOWN) && (ser->type != PORT_MCF))

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#453: FILE: drivers/serial/mcf.c:416:
+static struct uart_ops mcf_uart_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: No space is necessary after a cast
#492: FILE: drivers/serial/mcf.c:455:
+			(unsigned char __iomem *) port->mapbase;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'co->index >= 0'
#542: FILE: drivers/serial/mcf.c:505:
+	if ((co->index >= 0) && (co->index <= MCF_MAXPORTS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'co->index <= MCF_MAXPORTS'
#542: FILE: drivers/serial/mcf.c:505:
+	if ((co->index >= 0) && (co->index <= MCF_MAXPORTS))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#576: FILE: drivers/serial/mcf.c:539:
+#define	MCF_CONSOLE	&mcf_console

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#603: FILE: drivers/serial/mcf.c:566:
+static int __devinit mcf_probe(struct platform_device *pdev)

CHECK:SPACING: No space is necessary after a cast
#616: FILE: drivers/serial/mcf.c:579:
+			(unsigned char __iomem *) platp[i].mapbase;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#662: FILE: drivers/serial/mcf.c:625:
+	printk("ColdFire internal UART serial driver\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366893.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 8 warnings, 22 checks, 653 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366893.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
