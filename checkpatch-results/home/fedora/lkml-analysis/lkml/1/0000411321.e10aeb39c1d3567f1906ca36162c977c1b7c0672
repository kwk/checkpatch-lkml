WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Subject: Fix XFS_IOC_FSBULKSTAT{,_SINGLE} and XFS_IOC_FSINUMBERS in compat mode

WARNING:TYPO_SPELLING: 'formater' may be misspelled - perhaps 'formatter'?
#51: 
  custom "output formater" in the private_data argument which takes care
                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'formater' may be misspelled - perhaps 'formatter'?
#55: 
  formater" mecanism to xfs_inumbers().
  ^^^^^^^^

WARNING:TYPO_SPELLING: 'mecanism' may be misspelled - perhaps 'mechanism'?
#55: 
  formater" mecanism to xfs_inumbers().
            ^^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#91: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:51:
+#define _PACKED __attribute__((packed))

WARNING:NEW_TYPEDEFS: do not add new typedefs
#99: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:129:
+typedef struct compat_xfs_inogrp {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#103: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:133:
+} __attribute__((packed)) compat_xfs_inogrp_t;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#105: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:135:
+STATIC int xfs_inumbers_fmt_compat(

WARNING:NEW_TYPEDEFS: do not add new typedefs
#134: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:163:
+typedef struct compat_xfs_bstime {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#139: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:168:
+STATIC int xfs_bstime_store_compat(

WARNING:NEW_TYPEDEFS: do not add new typedefs
#152: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:181:
+typedef struct compat_xfs_bstat {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#164: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:193:
+	int64_t		bs_blocks;	/* number of blocks		*/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#176: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:205:
+STATIC int xfs_bulkstat_one_fmt_compat(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:235:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#208: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:237:
+typedef struct compat_xfs_fsop_bulkreq {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#229: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:253:
+xfs_ioc_bulkstat_compat(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#275: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:289:
+	if ((count = bulkreq.icount) <= 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:294:
+		error = xfs_inumbers(mp, &inlast, &count,
+				bulkreq.ubuffer, xfs_inumbers_fmt_compat);

CHECK:BRACES: Unbalanced braces around else statement
#281: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:295:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:298:
+		bulkstat_one_fmt_pf formatter = xfs_bulkstat_one_fmt_compat;
+		error = xfs_bulkstat(mp, &inlast, &count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:299:
+		error = xfs_bulkstat(mp, &inlast, &count,
+			xfs_bulkstat_one, formatter,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bulkreq.ocount"
#292: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:306:
+	if (bulkreq.ocount != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:308:
+		if (copy_to_user(bulkreq.lastip, &inlast,
+						sizeof(xfs_ino_t)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:318:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: fs/xfs/linux-2.6/xfs_ioctl32.c:446:
+				cmd, (void*)arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#334: FILE: fs/xfs/xfs_itable.h:72:
+typedef int (*bulkstat_one_fmt_pf)(  /* used size in bytes or negative error */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#336: FILE: fs/xfs/xfs_itable.h:74:
+	void			__user *ubuffer, /* buffer to write to */
+	const xfs_bstat_t	*buffer);        /* buffer to read from */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#345: FILE: fs/xfs/xfs_itable.h:93:
+typedef int (*inumbers_fmt_pf)(

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: fs/xfs/xfs_itable.h:97:
+	long			count,		/* # of elements to read */
+	long			*written);	/* # of bytes written */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#352: FILE: fs/xfs/xfs_itable.h:100:
+xfs_inumbers_fmt(

WARNING:LINE_SPACING: Missing a blank line after declarations
#356: FILE: fs/xfs/xfs_itable.h:104:
+	long			count,		/* # of elements to read */
+	long			*written);	/* # of bytes written */

WARNING:LINE_SPACING: Missing a blank line after declarations
#365: FILE: fs/xfs/xfs_itable.h:112:
+	void			__user *buffer, /* buffer with inode info */
+	inumbers_fmt_pf		formatter);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#375: FILE: fs/xfs/xfs_itable.c:206:
+xfs_bulkstat_one_fmt(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#400: FILE: fs/xfs/xfs_itable.c:257:
+	if ((error = formatter(buffer, buf)) < 0)  {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#417: FILE: fs/xfs/xfs_itable.c:763:
+xfs_inumbers_fmt(

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: fs/xfs/xfs_itable.c:767:
+	long			count,		/* # of elements to read */
+	long			*written)	/* # of bytes written */

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: fs/xfs/xfs_itable.c:784:
+	void		__user *ubuffer,/* buffer with inode descriptions */
+	inumbers_fmt_pf	formatter)

WARNING:LINE_SPACING: Missing a blank line after declarations
#449: FILE: fs/xfs/xfs_itable.c:864:
+			long written;
+			if (formatter(ubuffer, buffer, bufidx, &written)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#465: FILE: fs/xfs/xfs_itable.c:891:
+			long written;
+			if (formatter(ubuffer, buffer, bufidx, &written))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411321.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 19 warnings, 16 checks, 394 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411321.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
