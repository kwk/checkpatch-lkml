ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Stephen Hemminger <shemminger@vyatta.com'
#65: 
Signed-off-by: Stephen Hemminger <shemminger@vyatta.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: No space is necessary after a cast
#105: FILE: include/linux/netfilter/x_tables.h:435:
+extern void xt_info_rdlock_bh(void) __acquires(xt_info_lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/netfilter/x_tables.h:435:
+extern void xt_info_rdlock_bh(void) __acquires(xt_info_lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#105: FILE: include/linux/netfilter/x_tables.h:435:
+extern void xt_info_rdlock_bh(void) __acquires(xt_info_lock);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#106: FILE: include/linux/netfilter/x_tables.h:436:
+extern void xt_info_rdunlock_bh(void) __releases(xt_info_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/netfilter/x_tables.h:436:
+extern void xt_info_rdunlock_bh(void) __releases(xt_info_lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#106: FILE: include/linux/netfilter/x_tables.h:436:
+extern void xt_info_rdunlock_bh(void) __releases(xt_info_lock);

CHECK:SPACING: No space is necessary after a cast
#107: FILE: include/linux/netfilter/x_tables.h:437:
+extern void xt_info_wrlock_bh(void) __acquires(xt_info_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/netfilter/x_tables.h:437:
+extern void xt_info_wrlock_bh(void) __acquires(xt_info_lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#107: FILE: include/linux/netfilter/x_tables.h:437:
+extern void xt_info_wrlock_bh(void) __acquires(xt_info_lock);

CHECK:SPACING: No space is necessary after a cast
#108: FILE: include/linux/netfilter/x_tables.h:438:
+extern void xt_info_wrunlock_bh(void) __releases(xt_info_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/netfilter/x_tables.h:438:
+extern void xt_info_wrunlock_bh(void) __releases(xt_info_lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#108: FILE: include/linux/netfilter/x_tables.h:438:
+extern void xt_info_wrunlock_bh(void) __releases(xt_info_lock);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: net/ipv4/netfilter/ip_tables.c:1307:
+ * and everything is OK. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#318: FILE: net/netfilter/x_tables.c:666:
+/*
+ * The info table entries are per-cpu, and are usually updated

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: net/netfilter/x_tables.c:671:
+^Ispinlock_t ^I   lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#323: FILE: net/netfilter/x_tables.c:671:
+	spinlock_t 	   lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: net/netfilter/x_tables.c:672:
+^Iint   ^I   ^I   depth;^I/* # readers - 1 */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#326: FILE: net/netfilter/x_tables.c:674:
+};
+static DEFINE_PER_CPU(struct xt_info_lock, xt_info_locks);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#361: FILE: net/netfilter/x_tables.c:709:
+	BUG_ON(lock->depth < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#380: FILE: net/netfilter/x_tables.c:728:
+		struct xt_info_lock *lock = &per_cpu(xt_info_locks, i);
+		spin_lock(&lock->lock);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#381: FILE: net/netfilter/x_tables.c:729:
+		BUG_ON(lock->depth != -1);

CHECK:SPACING: No space is necessary after a cast
#391: FILE: net/netfilter/x_tables.c:739:
+void xt_info_wrunlock_bh(void) __releases(&lock->lock)

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: net/netfilter/x_tables.c:745:
+		struct xt_info_lock *lock = &per_cpu(xt_info_locks, i);
+		BUG_ON(lock->depth != -1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#397: FILE: net/netfilter/x_tables.c:745:
+		BUG_ON(lock->depth != -1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#404: FILE: net/netfilter/x_tables.c:752:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: net/ipv6/netfilter/ip6_tables.c:1339:
+ * and everything is OK. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#767: FILE: net/ipv4/netfilter/arp_tables.c:1098:
+ * and everything is OK. */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000136920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 15 warnings, 12 checks, 687 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000136920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
