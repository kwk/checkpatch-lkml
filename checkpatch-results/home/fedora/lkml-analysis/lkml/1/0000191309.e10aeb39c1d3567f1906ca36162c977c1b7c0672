WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [Target_Core_Mod]: Updates for generic portal group functionality

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#56: FILE: drivers/lio-core/target_core_tpg.c:312:
+EXPORT_SYMBOL(core_tpg_check_initiator_node_acl);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#82: FILE: drivers/lio-core/target_core_tpg.c:654:
+EXPORT_SYMBOL(core_tpg_set_initiator_node_queue_depth);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: drivers/lio-core/target_core_tpg.c:701:
+	printk("TARGET_CORE[%s]: Allocated %s se_portal_group_t for endpoint:"

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: drivers/lio-core/target_core_tpg.c:702:
+	printk("TARGET_CORE[%s]: Allocated %s se_portal_group_t for endpoint:"
+		" %s, Portal Tag: %u\n", tfo->get_fabric_name(),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfo->tpg_get_wwn"
#112: FILE: drivers/lio-core/target_core_tpg.c:704:
+		"Normal" : "Discovery", (tfo->tpg_get_wwn(se_tpg) == NULL) ?

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#126: FILE: drivers/lio-core/target_core_tpg.h:38:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl (se_portal_group_t *, void *, const char *, u32, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct target_core_fabric_ops *' should also have an identifier name
#130: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#130: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#130: FILE: drivers/lio-core/target_core_tpg.h:41:
+extern se_portal_group_t *core_tpg_register (struct target_core_fabric_ops *, void *, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191309.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 3 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191309.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
