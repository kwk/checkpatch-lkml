CHECK:BRACES: braces {} should be used on all arms of this statement
#316: FILE: drivers/s390/block/dasd.c:1514:
+	if (test_bit(DASD_CQR_FLAGS_USE_ERP, &cqr->flags)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#321: FILE: drivers/s390/block/dasd.c:1519:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#340: FILE: drivers/s390/block/dasd.c:1537:
+				    struct dasd_ccw_req, blocklist)) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#355: FILE: drivers/s390/block/dasd.c:1552:
+		if (interruptible) {
[...]
+		} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#356: FILE: drivers/s390/block/dasd.c:1553:
+			rc = wait_event_interruptible(

CHECK:BRACES: Unbalanced braces around else statement
#363: FILE: drivers/s390/block/dasd.c:1560:
+		} else

CHECK:SPACING: No space is necessary after a cast
#367: FILE: drivers/s390/block/dasd.c:1564:
+		cqr->callback_data = (void *) &generic_waitq;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#369: FILE: drivers/s390/block/dasd.c:1566:
+		if (interruptible) {
[...]
+		} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#370: FILE: drivers/s390/block/dasd.c:1567:
+			rc = wait_event_interruptible(

CHECK:BRACES: Unbalanced braces around else statement
#381: FILE: drivers/s390/block/dasd.c:1578:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'maincqr->status != DASD_CQR_DONE'
#386: FILE: drivers/s390/block/dasd.c:1583:
+	if ((maincqr->status != DASD_CQR_DONE) &&
+	    (maincqr->intrc != -ERESTARTSYS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#471: FILE: drivers/s390/block/dasd.c:1818:
+				spin_lock_irqsave(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#475: FILE: drivers/s390/block/dasd.c:1822:
+				spin_unlock_irqrestore(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#581: FILE: drivers/s390/block/dasd_eckd.c:84:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#636: FILE: drivers/s390/block/dasd_eckd.c:1273:
+	char *sense;
+	if (init_cqr->status == DASD_CQR_DONE)

CHECK:BRACES: braces {} should be used on all arms of this statement
#636: FILE: drivers/s390/block/dasd_eckd.c:1273:
+	if (init_cqr->status == DASD_CQR_DONE)
[...]
+	else if (init_cqr->status == DASD_CQR_NEED_ERP ||
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#645: FILE: drivers/s390/block/dasd_eckd.c:1282:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#723: FILE: drivers/s390/block/dasd_eckd.c:1354:
+			"Detecting the DASD disk layout failed because "
+			"of an I/O error\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#754: FILE: drivers/s390/block/dasd_int.h:598:
+void dasd_device_set_stop_bits(struct dasd_device *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#754: FILE: drivers/s390/block/dasd_int.h:598:
+void dasd_device_set_stop_bits(struct dasd_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#755: FILE: drivers/s390/block/dasd_int.h:599:
+void dasd_device_remove_stop_bits(struct dasd_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#755: FILE: drivers/s390/block/dasd_int.h:599:
+void dasd_device_remove_stop_bits(struct dasd_device *, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 16 checks, 664 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
