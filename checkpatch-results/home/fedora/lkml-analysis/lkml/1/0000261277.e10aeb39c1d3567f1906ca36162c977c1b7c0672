WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: drivers/video/via/hw.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: drivers/video/via/hw.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: drivers/video/via/hw.c:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <rgbLUT>
#286: FILE: drivers/video/via/hw.c:243:
+struct rgbLUT palLUT_table[] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <palLUT_table>
#286: FILE: drivers/video/via/hw.c:243:
+struct rgbLUT palLUT_table[] = {

CHECK:CAMELCASE: Avoid CamelCase: <ModeInfoIndex>
#552: FILE: drivers/video/via/hw.c:509:
+static int search_mode_setting(int ModeInfoIndex);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#572: FILE: drivers/video/via/hw.c:529:
+}
+u8 viafb_read_reg(int io_port, u8 index)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#610: FILE: drivers/video/via/hw.c:567:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name ==
 					UNICHROME_CLE266'
#628: FILE: drivers/video/via/hw.c:585:
+				if (viafb_dual_fb &&
+					(viaparinfo->chip_info->gfx_chip_name ==
+					UNICHROME_CLE266)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/video/via/hw.c:586:
+				if (viafb_dual_fb &&
+					(viaparinfo->chip_info->gfx_chip_name ==

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->lvds_setting_info->iga_path'
#632: FILE: drivers/video/via/hw.c:589:
+					viaparinfo->
+					lvds_setting_info->iga_path = IGA2;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->crt_setting_info->iga_path'
#634: FILE: drivers/video/via/hw.c:591:
+					viaparinfo->
+					crt_setting_info->iga_path = IGA1;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->tmds_setting_info->iga_path'
#636: FILE: drivers/video/via/hw.c:593:
+					viaparinfo->
+					tmds_setting_info->iga_path = IGA1;

CHECK:BRACES: Unbalanced braces around else statement
#637: FILE: drivers/video/via/hw.c:594:
+				} else

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->lvds_setting_info->iga_path'
#639: FILE: drivers/video/via/hw.c:596:
+					viaparinfo->
+					lvds_setting_info->iga_path = IGA1;

CHECK:CAMELCASE: Avoid CamelCase: <LCD2_Device>
#645: FILE: drivers/video/via/hw.c:602:
+			if (LCD2_Device == viafb_primary_dev)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_set_start_addr', this function's name, in a string
#680: FILE: drivers/video/via/hw.c:637:
+	DEBUG_MSG(KERN_INFO "viafb_set_start_addr!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#700: FILE: drivers/video/via/hw.c:657:
+		} else {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#726: FILE: drivers/video/via/hw.c:683:
+		if (via_fb_accel) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#731: FILE: drivers/video/via/hw.c:688:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->tmds_setting_info->h_active == 1600'
#783: FILE: drivers/video/via/hw.c:740:
+			if ((viaparinfo->tmds_setting_info->h_active == 1600) &&
+				(viaparinfo->tmds_setting_info->v_active ==
+				1200))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->tmds_setting_info->v_active ==
 				1200'
#783: FILE: drivers/video/via/hw.c:740:
+			if ((viaparinfo->tmds_setting_info->h_active == 1600) &&
+				(viaparinfo->tmds_setting_info->v_active ==
+				1200))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: drivers/video/via/hw.c:741:
+			if ((viaparinfo->tmds_setting_info->h_active == 1600) &&
+				(viaparinfo->tmds_setting_info->v_active ==

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: drivers/video/via/hw.c:744:
+				viafb_write_reg_mask(CR96, VIACR, 0x03,
+					       BIT0 + BIT1 + BIT2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#790: FILE: drivers/video/via/hw.c:747:
+				viafb_write_reg_mask(CR96, VIACR, 0x07,
+					       BIT0 + BIT1 + BIT2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: drivers/video/via/hw.c:754:
+			viafb_write_reg_mask(CR96, VIACR, 0x07,
+				       BIT0 + BIT1 + BIT2 + BIT3);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: drivers/video/via/hw.c:794:
+			viafb_write_reg_mask(CR99, VIACR, 0x08,
+				       BIT0 + BIT1 + BIT2 + BIT3);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/video/via/hw.c:801:
+			viafb_write_reg_mask(CR99, VIACR, 0x0F,
+				       BIT0 + BIT1 + BIT2 + BIT3);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#880: FILE: drivers/video/via/hw.c:837:
+				viafb_write_reg_mask(CR93, VIACR, 0x21,
+					       BIT0 + BIT5 + BIT7);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: drivers/video/via/hw.c:840:
+				viafb_write_reg_mask(CR93, VIACR, 0xA1,
+					       BIT0 + BIT5 + BIT7);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#899: FILE: drivers/video/via/hw.c:856:
+				viafb_write_reg_mask(CR97, VIACR, 0x03,
+					       BIT0 + BIT1 + BIT4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/video/via/hw.c:860:
+				viafb_write_reg_mask(CR97, VIACR, 0x13,
+					       BIT0 + BIT1 + BIT4);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_lcd_output_path', this function's name, in a string
#943: FILE: drivers/video/via/hw.c:900:
+		  "set_lcd_output_path, iga:%d,out_interface:%d\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#979: FILE: drivers/video/via/hw.c:936:
+		if (set_iga == IGA1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#981: FILE: drivers/video/via/hw.c:938:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#988: FILE: drivers/video/via/hw.c:945:
+		if (set_iga == IGA1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#990: FILE: drivers/video/via/hw.c:947:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#998: FILE: drivers/video/via/hw.c:955:
+		if (set_iga == IGA1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1000: FILE: drivers/video/via/hw.c:957:
+		else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'UNICHROME_K8M890 == viaparinfo->chip_info->gfx_chip_name'
#1009: FILE: drivers/video/via/hw.c:966:
+		if ((UNICHROME_K8M890 == viaparinfo->chip_info->gfx_chip_name)
+		    || (UNICHROME_P4M890 ==
+		    viaparinfo->chip_info->gfx_chip_name))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1009: FILE: drivers/video/via/hw.c:966:
+		if ((UNICHROME_K8M890 == viaparinfo->chip_info->gfx_chip_name)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1010: FILE: drivers/video/via/hw.c:967:
+		if ((UNICHROME_K8M890 == viaparinfo->chip_info->gfx_chip_name)
+		    || (UNICHROME_P4M890 ==

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: drivers/video/via/hw.c:970:
+			viafb_write_reg_mask(CR97, VIACR, 0x84,
+				       BIT7 + BIT2 + BIT1 + BIT0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1047: FILE: drivers/video/via/hw.c:1004:
+	while ((i < NUM_TOTAL_MODETABLE)
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1048: FILE: drivers/video/via/hw.c:1005:
+	while ((i < NUM_TOTAL_MODETABLE)
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

CHECK:CAMELCASE: Avoid CamelCase: <CLE266Modes>
#1048: FILE: drivers/video/via/hw.c:1005:
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

CHECK:CAMELCASE: Avoid CamelCase: <ModeIndex>
#1048: FILE: drivers/video/via/hw.c:1005:
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= NUM_TOTAL_MODETABLE'
#1049: FILE: drivers/video/via/hw.c:1006:
+	if ((i >= NUM_TOTAL_MODETABLE))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#1049: FILE: drivers/video/via/hw.c:1006:
+	if ((i >= NUM_TOTAL_MODETABLE))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1053: FILE: drivers/video/via/hw.c:1010:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <VideoModeTable>
#1055: FILE: drivers/video/via/hw.c:1012:
+struct VideoModeTable *viafb_get_modetbl_pointer(int Index)

CHECK:CAMELCASE: Avoid CamelCase: <Index>
#1055: FILE: drivers/video/via/hw.c:1012:
+struct VideoModeTable *viafb_get_modetbl_pointer(int Index)

CHECK:CAMELCASE: Avoid CamelCase: <TmpTbl>
#1057: FILE: drivers/video/via/hw.c:1014:
+	struct VideoModeTable *TmpTbl = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1058: FILE: drivers/video/via/hw.c:1015:
+	struct VideoModeTable *TmpTbl = NULL;
+	TmpTbl = &CLE266Modes[search_mode_setting(Index)];

WARNING:LINE_SPACING: Missing a blank line after declarations
#1066: FILE: drivers/video/via/hw.c:1023:
+	int i = 0;
+	while ((i < NUM_TOTAL_CEA_MODES)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1066: FILE: drivers/video/via/hw.c:1023:
+	while ((i < NUM_TOTAL_CEA_MODES)
+	       && (Index != CEA_HDMI_Modes[i].ModeIndex)) i++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1067: FILE: drivers/video/via/hw.c:1024:
+	while ((i < NUM_TOTAL_CEA_MODES)
+	       && (Index != CEA_HDMI_Modes[i].ModeIndex)) i++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < NUM_TOTAL_CEA_MODES'
#1068: FILE: drivers/video/via/hw.c:1025:
+	if ((i < NUM_TOTAL_CEA_MODES))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#1068: FILE: drivers/video/via/hw.c:1025:
+	if ((i < NUM_TOTAL_CEA_MODES))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1068: FILE: drivers/video/via/hw.c:1025:
+	if ((i < NUM_TOTAL_CEA_MODES))
[...]
+	 else {
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#1070: FILE: drivers/video/via/hw.c:1027:
+	 else {

CHECK:BRACES: Unbalanced braces around else statement
#1070: FILE: drivers/video/via/hw.c:1027:
+	 else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#1073: FILE: drivers/video/via/hw.c:1030:
+		while ((i < NUM_TOTAL_MODETABLE)
[...]
+		       i++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1074: FILE: drivers/video/via/hw.c:1031:
+		while ((i < NUM_TOTAL_MODETABLE)
+		       && (Index != CLE266Modes[i].ModeIndex))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= NUM_TOTAL_MODETABLE'
#1076: FILE: drivers/video/via/hw.c:1033:
+		if ((i >= NUM_TOTAL_MODETABLE))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#1076: FILE: drivers/video/via/hw.c:1033:
+		if ((i >= NUM_TOTAL_MODETABLE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_K800'
#1106: FILE: drivers/video/via/hw.c:1063:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_K800)
+		|| (viaparinfo->chip_info->gfx_chip_name == UNICHROME_K8M890))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_K8M890'
#1106: FILE: drivers/video/via/hw.c:1063:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_K800)
+		|| (viaparinfo->chip_info->gfx_chip_name == UNICHROME_K8M890))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1107: FILE: drivers/video/via/hw.c:1064:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_K800)
+		|| (viaparinfo->chip_info->gfx_chip_name == UNICHROME_K8M890))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266'
#1109: FILE: drivers/video/via/hw.c:1066:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+	    && (viaparinfo->chip_info->gfx_chip_revision == CLE266_REVISION_AX))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_revision == CLE266_REVISION_AX'
#1109: FILE: drivers/video/via/hw.c:1066:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+	    && (viaparinfo->chip_info->gfx_chip_revision == CLE266_REVISION_AX))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1110: FILE: drivers/video/via/hw.c:1067:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+	    && (viaparinfo->chip_info->gfx_chip_revision == CLE266_REVISION_AX))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1113: FILE: drivers/video/via/hw.c:1070:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1116: FILE: drivers/video/via/hw.c:1073:
+void viafb_load_reg(int timing_value, int viafb_load_reg_num,
+	struct io_register *reg,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1149: FILE: drivers/video/via/hw.c:1106:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <RegTable>
#1152: FILE: drivers/video/via/hw.c:1109:
+void viafb_write_regx(struct io_reg RegTable[], int ItemNum)

CHECK:CAMELCASE: Avoid CamelCase: <ItemNum>
#1152: FILE: drivers/video/via/hw.c:1109:
+void viafb_write_regx(struct io_reg RegTable[], int ItemNum)

CHECK:CAMELCASE: Avoid CamelCase: <RegTemp>
#1155: FILE: drivers/video/via/hw.c:1112:
+	unsigned char RegTemp;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fetch_count_reg.iga1_fetch_count_reg.reg_num'
#1202: FILE: drivers/video/via/hw.c:1159:
+		viafb_load_reg_num = fetch_count_reg.
+			iga1_fetch_count_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fetch_count_reg.iga2_fetch_count_reg.reg_num'
#1210: FILE: drivers/video/via/hw.c:1167:
+		viafb_load_reg_num = fetch_count_reg.
+			iga2_fetch_count_reg.reg_num;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1216: FILE: drivers/video/via/hw.c:1173:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1235: FILE: drivers/video/via/hw.c:1192:
+			/* If resolution > 1280x1024, expire length = 64, else
+			   expire length = 128 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1235: FILE: drivers/video/via/hw.c:1192:
+			   expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1236: FILE: drivers/video/via/hw.c:1193:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1236: FILE: drivers/video/via/hw.c:1193:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1242: FILE: drivers/video/via/hw.c:1199:
+
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1253: FILE: drivers/video/via/hw.c:1210:
+			/* If resolution > 1280x1024, expire length = 64, else
+			   expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1253: FILE: drivers/video/via/hw.c:1210:
+			   expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1254: FILE: drivers/video/via/hw.c:1211:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1254: FILE: drivers/video/via/hw.c:1211:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1268: FILE: drivers/video/via/hw.c:1225:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1268: FILE: drivers/video/via/hw.c:1225:
+			   else expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1269: FILE: drivers/video/via/hw.c:1226:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1269: FILE: drivers/video/via/hw.c:1226:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga1_fifo_threshold_select_reg.reg_num'
#1332: FILE: drivers/video/via/hw.c:1289:
+		    fifo_threshold_select_reg.
+		    iga1_fifo_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga1_fifo_threshold_select_reg.reg'
#1335: FILE: drivers/video/via/hw.c:1292:
+		    fifo_threshold_select_reg.
+		    iga1_fifo_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga1_fifo_high_threshold_select_reg.reg_num'
#1343: FILE: drivers/video/via/hw.c:1300:
+		    fifo_high_threshold_select_reg.
+		    iga1_fifo_high_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga1_fifo_high_threshold_select_reg.reg'
#1346: FILE: drivers/video/via/hw.c:1303:
+		    fifo_high_threshold_select_reg.
+		    iga1_fifo_high_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga1_display_queue_expire_num_reg.reg_num'
#1355: FILE: drivers/video/via/hw.c:1312:
+		    display_queue_expire_num_reg.
+		    iga1_display_queue_expire_num_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga1_display_queue_expire_num_reg.reg'
#1358: FILE: drivers/video/via/hw.c:1315:
+		    display_queue_expire_num_reg.
+		    iga1_display_queue_expire_num_reg.reg;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1369: FILE: drivers/video/via/hw.c:1326:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else  expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1369: FILE: drivers/video/via/hw.c:1326:
+			   else  expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1370: FILE: drivers/video/via/hw.c:1327:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1370: FILE: drivers/video/via/hw.c:1327:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1384: FILE: drivers/video/via/hw.c:1341:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else  expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1384: FILE: drivers/video/via/hw.c:1341:
+			   else  expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1385: FILE: drivers/video/via/hw.c:1342:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1385: FILE: drivers/video/via/hw.c:1342:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1399: FILE: drivers/video/via/hw.c:1356:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1399: FILE: drivers/video/via/hw.c:1356:
+			   else expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1400: FILE: drivers/video/via/hw.c:1357:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1400: FILE: drivers/video/via/hw.c:1357:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg_num'
#1460: FILE: drivers/video/via/hw.c:1417:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg'
#1463: FILE: drivers/video/via/hw.c:1420:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1465: FILE: drivers/video/via/hw.c:1422:
+			viafb_load_reg(reg_value,
+				viafb_load_reg_num, reg, VIACR);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1467: FILE: drivers/video/via/hw.c:1424:
+		} else {
+

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg_num'
#1473: FILE: drivers/video/via/hw.c:1430:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg'
#1476: FILE: drivers/video/via/hw.c:1433:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1478: FILE: drivers/video/via/hw.c:1435:
+			viafb_load_reg(reg_value,
+				viafb_load_reg_num, reg, VIACR);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga2_fifo_threshold_select_reg.reg_num'
#1485: FILE: drivers/video/via/hw.c:1442:
+		    fifo_threshold_select_reg.
+		    iga2_fifo_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga2_fifo_threshold_select_reg.reg'
#1488: FILE: drivers/video/via/hw.c:1445:
+		    fifo_threshold_select_reg.
+		    iga2_fifo_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga2_fifo_high_threshold_select_reg.reg_num'
#1496: FILE: drivers/video/via/hw.c:1453:
+		    fifo_high_threshold_select_reg.
+		    iga2_fifo_high_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga2_fifo_high_threshold_select_reg.reg'
#1499: FILE: drivers/video/via/hw.c:1456:
+		    fifo_high_threshold_select_reg.
+		    iga2_fifo_high_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga2_display_queue_expire_num_reg.reg_num'
#1508: FILE: drivers/video/via/hw.c:1465:
+		    display_queue_expire_num_reg.
+		    iga2_display_queue_expire_num_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga2_display_queue_expire_num_reg.reg'
#1511: FILE: drivers/video/via/hw.c:1468:
+		    display_queue_expire_num_reg.
+		    iga2_display_queue_expire_num_reg.reg;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1514: FILE: drivers/video/via/hw.c:1471:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1516: FILE: drivers/video/via/hw.c:1473:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1'
#1556: FILE: drivers/video/via/hw.c:1513:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1556: FILE: drivers/video/via/hw.c:1513:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA2'
#1584: FILE: drivers/video/via/hw.c:1541:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1584: FILE: drivers/video/via/hw.c:1541:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1'
#1612: FILE: drivers/video/via/hw.c:1569:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1612: FILE: drivers/video/via/hw.c:1569:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA2'
#1617: FILE: drivers/video/via/hw.c:1574:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1617: FILE: drivers/video/via/hw.c:1574:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:CAMELCASE: Avoid CamelCase: <VIARMisc>
#1623: FILE: drivers/video/via/hw.c:1580:
+	RegTemp = inb(VIARMisc);

CHECK:CAMELCASE: Avoid CamelCase: <VIAWMisc>
#1624: FILE: drivers/video/via/hw.c:1581:
+	outb(RegTemp | (BIT2 + BIT3), VIAWMisc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1628: FILE: drivers/video/via/hw.c:1585:
+void viafb_load_crtc_timing(struct display_timing device_timing,
+	int set_iga)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_total'
#1643: FILE: drivers/video/via/hw.c:1600:
+				    IGA1_HOR_TOTAL_FORMULA(device_timing.
+							   hor_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_addr'
#1651: FILE: drivers/video/via/hw.c:1608:
+				    IGA1_HOR_ADDR_FORMULA(device_timing.
+							  hor_addr);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_total'
#1693: FILE: drivers/video/via/hw.c:1650:
+				    IGA1_VER_TOTAL_FORMULA(device_timing.
+							   ver_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_addr'
#1701: FILE: drivers/video/via/hw.c:1658:
+				    IGA1_VER_ADDR_FORMULA(device_timing.
+							  ver_addr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1741: FILE: drivers/video/via/hw.c:1698:
+
+			}

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_total'
#1749: FILE: drivers/video/via/hw.c:1706:
+				    IGA2_HOR_TOTAL_FORMULA(device_timing.
+							   hor_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_addr'
#1757: FILE: drivers/video/via/hw.c:1714:
+				    IGA2_HOR_ADDR_FORMULA(device_timing.
+							  hor_addr);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'iga2_crtc_reg.hor_sync_start.reg_num'
#1787: FILE: drivers/video/via/hw.c:1744:
+					    iga2_crtc_reg.hor_sync_start.
+					    reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_total'
#1804: FILE: drivers/video/via/hw.c:1761:
+				    IGA2_VER_TOTAL_FORMULA(device_timing.
+							   ver_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_addr'
#1812: FILE: drivers/video/via/hw.c:1769:
+				    IGA2_VER_ADDR_FORMULA(device_timing.
+							  ver_addr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1852: FILE: drivers/video/via/hw.c:1809:
+
+			}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1890: FILE: drivers/video/via/hw.c:1847:
+void viafb_fill_crtc_timing(struct crt_mode_table *crt_table,
+	int mode_index, int bpp_byte, int set_iga)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->crt_setting_info->refresh_rate'
#1905: FILE: drivers/video/via/hw.c:1862:
+		if (crt_table[i].refresh_rate == viaparinfo->
+			crt_setting_info->refresh_rate)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode_index == VIA_RES_640X480'
#1913: FILE: drivers/video/via/hw.c:1870:
+	if ((viafb_LCD_ON | viafb_DVI_ON) && (mode_index == VIA_RES_640X480)
+	    && (viaparinfo->crt_setting_info->refresh_rate == 60)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->crt_setting_info->refresh_rate == 60'
#1913: FILE: drivers/video/via/hw.c:1870:
+	if ((viafb_LCD_ON | viafb_DVI_ON) && (mode_index == VIA_RES_640X480)
+	    && (viaparinfo->crt_setting_info->refresh_rate == 60)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1914: FILE: drivers/video/via/hw.c:1871:
+	if ((viafb_LCD_ON | viafb_DVI_ON) && (mode_index == VIA_RES_640X480)
+	    && (viaparinfo->crt_setting_info->refresh_rate == 60)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name != UNICHROME_CLE266'
#1964: FILE: drivers/video/via/hw.c:1921:
+	if ((viaparinfo->chip_info->gfx_chip_name != UNICHROME_CLE266)
+	    && (viaparinfo->chip_info->gfx_chip_name != UNICHROME_K400))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name != UNICHROME_K400'
#1964: FILE: drivers/video/via/hw.c:1921:
+	if ((viaparinfo->chip_info->gfx_chip_name != UNICHROME_CLE266)
+	    && (viaparinfo->chip_info->gfx_chip_name != UNICHROME_K400))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1965: FILE: drivers/video/via/hw.c:1922:
+	if ((viaparinfo->chip_info->gfx_chip_name != UNICHROME_CLE266)
+	    && (viaparinfo->chip_info->gfx_chip_name != UNICHROME_K400))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1975: FILE: drivers/video/via/hw.c:1932:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2000: FILE: drivers/video/via/hw.c:1957:
+void viafb_update_device_setting(int hres, int vres,
+	int bpp, int vmode_refresh, int flag)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2026: FILE: drivers/video/via/hw.c:1983:
+	} else {
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2042: FILE: drivers/video/via/hw.c:1999:
+		if (IGA2 == viaparinfo->lvds_setting_info2->iga_path) {

WARNING:TYPO_SPELLING: 'Indentify' may be misspelled - perhaps 'Identify'?
#2058: FILE: drivers/video/via/hw.c:2015:
+	/* Indentify GFX Chip Name */
 	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2061: FILE: drivers/video/via/hw.c:2018:
+		pdev = pci_get_device(pciidlist[i].vendor,
+			pciidlist[i].device, 0);

WARNING:SPACING: space prohibited before semicolon
#2067: FILE: drivers/video/via/hw.c:2024:
+		return ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'orignal' may be misspelled - perhaps 'original'?
#2082: FILE: drivers/video/via/hw.c:2039:
+		/* restore orignal CR4F value */
 		           ^^^^^^^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2108: FILE: drivers/video/via/hw.c:2065:
+	if (INTERFACE_NONE == viaparinfo->chip_info->tmds_chip_info.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->tmds_chip_info.output_interface'
#2109: FILE: drivers/video/via/hw.c:2066:
+	if (INTERFACE_NONE == viaparinfo->chip_info->tmds_chip_info.
+		output_interface) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viafb_display_hardware_layout ==
 				     HW_LAYOUT_DVI_ONLY'
#2114: FILE: drivers/video/via/hw.c:2071:
+				if ((viafb_display_hardware_layout ==
+				     HW_LAYOUT_DVI_ONLY)
+				    || (viafb_display_hardware_layout ==
+					HW_LAYOUT_LCD_DVI)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viafb_display_hardware_layout ==
 					HW_LAYOUT_LCD_DVI'
#2114: FILE: drivers/video/via/hw.c:2071:
+				if ((viafb_display_hardware_layout ==
+				     HW_LAYOUT_DVI_ONLY)
+				    || (viafb_display_hardware_layout ==
+					HW_LAYOUT_LCD_DVI)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2116: FILE: drivers/video/via/hw.c:2073:
+				     HW_LAYOUT_DVI_ONLY)
+				    || (viafb_display_hardware_layout ==

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->tmds_chip_info.output_interface'
#2119: FILE: drivers/video/via/hw.c:2076:
+					viaparinfo->chip_info->tmds_chip_info.
+					    output_interface = INTERFACE_TMDS;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->tmds_chip_info.output_interface'
#2122: FILE: drivers/video/via/hw.c:2079:
+					viaparinfo->chip_info->tmds_chip_info.
+						output_interface =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2162: FILE: drivers/video/via/hw.c:2119:
+	viafb_init_lvds_output_interface(&viaparinfo->chip_info->lvds_chip_info,
+				   viaparinfo->lvds_setting_info);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->lvds_chip_info2'
#2165: FILE: drivers/video/via/hw.c:2122:
+		viafb_init_lvds_output_interface(&viaparinfo->chip_info->
+			lvds_chip_info2, viaparinfo->lvds_setting_info2);

WARNING:TYPO_SPELLING: 'singel' may be misspelled - perhaps 'single'?
#2167: FILE: drivers/video/via/hw.c:2124:
+	/*If CX700,two singel LCD, we need to reassign
 	               ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2168: FILE: drivers/video/via/hw.c:2125:
+	/*If CX700,two singel LCD, we need to reassign
+	   LCD interface to different LVDS port */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2168: FILE: drivers/video/via/hw.c:2125:
+	   LCD interface to different LVDS port */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'UNICHROME_CX700 == viaparinfo->chip_info->gfx_chip_name'
#2169: FILE: drivers/video/via/hw.c:2126:
+	if ((UNICHROME_CX700 == viaparinfo->chip_info->gfx_chip_name)
+	    && (HW_LAYOUT_LCD1_LCD2 == viafb_display_hardware_layout)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'HW_LAYOUT_LCD1_LCD2 == viafb_display_hardware_layout'
#2169: FILE: drivers/video/via/hw.c:2126:
+	if ((UNICHROME_CX700 == viaparinfo->chip_info->gfx_chip_name)
+	    && (HW_LAYOUT_LCD1_LCD2 == viafb_display_hardware_layout)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2169: FILE: drivers/video/via/hw.c:2126:
+	if ((UNICHROME_CX700 == viaparinfo->chip_info->gfx_chip_name)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2170: FILE: drivers/video/via/hw.c:2127:
+	if ((UNICHROME_CX700 == viaparinfo->chip_info->gfx_chip_name)
+	    && (HW_LAYOUT_LCD1_LCD2 == viafb_display_hardware_layout)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2170: FILE: drivers/video/via/hw.c:2127:
+	    && (HW_LAYOUT_LCD1_LCD2 == viafb_display_hardware_layout)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2171: FILE: drivers/video/via/hw.c:2128:
+		if ((INTEGRATED_LVDS == viaparinfo->chip_info->lvds_chip_info.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->lvds_chip_info.lvds_chip_name'
#2172: FILE: drivers/video/via/hw.c:2129:
+		if ((INTEGRATED_LVDS == viaparinfo->chip_info->lvds_chip_info.
+			lvds_chip_name) && (INTEGRATED_LVDS ==

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->lvds_chip_info2.lvds_chip_name'
#2174: FILE: drivers/video/via/hw.c:2131:
+			viaparinfo->chip_info->
+			lvds_chip_info2.lvds_chip_name)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->lvds_chip_info2.output_interface'
#2178: FILE: drivers/video/via/hw.c:2135:
+			viaparinfo->chip_info->lvds_chip_info2.
+				output_interface =

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->lvds_viaparinfo->chip_info->lvds_chip_name'
#2185: FILE: drivers/video/via/hw.c:2142:
+		  viaparinfo->chip_info->lvds_viaparinfo->chip_info->
+		  lvds_chip_name);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->chip_info->lvds_viaparinfo->chip_info->output_interface'
#2188: FILE: drivers/video/via/hw.c:2145:
+		  viaparinfo->chip_info->lvds_viaparinfo->chip_info->
+		  output_interface);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2241: FILE: drivers/video/via/hw.c:2198:
+	/*If viafb_LCD2_ON, on cx700, internal lvds's information
+	is keeped on lvds_setting_info2 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2241: FILE: drivers/video/via/hw.c:2198:
+	is keeped on lvds_setting_info2 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2243: FILE: drivers/video/via/hw.c:2200:
+	if (viafb_LCD2_ON &&
+		viaparinfo->lvds_setting_info2->device_lcd_dualedge) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2267: FILE: drivers/video/via/hw.c:2224:
+int viafb_setmode(int vmode_index, int hor_res, int ver_res, int video_bpp,
+	int vmode_index1, int hor_res1, int ver_res1, int video_bpp1)

CHECK:CAMELCASE: Avoid CamelCase: <VIAStatus>
#2291: FILE: drivers/video/via/hw.c:2248:
+	inb(VIAStatus);

CHECK:CAMELCASE: Avoid CamelCase: <CLE266_ModeXregs>
#2297: FILE: drivers/video/via/hw.c:2254:
+		viafb_write_regx(CLE266_ModeXregs, NUM_TOTAL_CLE266_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CLE266_ModeXregs>
#2297: FILE: drivers/video/via/hw.c:2254:
+		viafb_write_regx(CLE266_ModeXregs, NUM_TOTAL_CLE266_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <KM400_ModeXregs>
#2301: FILE: drivers/video/via/hw.c:2258:
+		viafb_write_regx(KM400_ModeXregs, NUM_TOTAL_KM400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_KM400_ModeXregs>
#2301: FILE: drivers/video/via/hw.c:2258:
+		viafb_write_regx(KM400_ModeXregs, NUM_TOTAL_KM400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <CN400_ModeXregs>
#2306: FILE: drivers/video/via/hw.c:2263:
+		viafb_write_regx(CN400_ModeXregs, NUM_TOTAL_CN400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CN400_ModeXregs>
#2306: FILE: drivers/video/via/hw.c:2263:
+		viafb_write_regx(CN400_ModeXregs, NUM_TOTAL_CN400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <CN700_ModeXregs>
#2313: FILE: drivers/video/via/hw.c:2270:
+		viafb_write_regx(CN700_ModeXregs, NUM_TOTAL_CN700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CN700_ModeXregs>
#2313: FILE: drivers/video/via/hw.c:2270:
+		viafb_write_regx(CN700_ModeXregs, NUM_TOTAL_CN700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <CX700_ModeXregs>
#2317: FILE: drivers/video/via/hw.c:2274:
+		viafb_write_regx(CX700_ModeXregs, NUM_TOTAL_CX700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CX700_ModeXregs>
#2317: FILE: drivers/video/via/hw.c:2274:
+		viafb_write_regx(CX700_ModeXregs, NUM_TOTAL_CX700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <VX800_ModeXregs>
#2320: FILE: drivers/video/via/hw.c:2277:
+		viafb_write_regx(VX800_ModeXregs, NUM_TOTAL_VX800_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_VX800_ModeXregs>
#2320: FILE: drivers/video/via/hw.c:2277:
+		viafb_write_regx(VX800_ModeXregs, NUM_TOTAL_VX800_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <Misc>
#2329: FILE: drivers/video/via/hw.c:2286:
+	outb(VPIT.Misc, VIAWMisc);

CHECK:CAMELCASE: Avoid CamelCase: <StdSR>
#2332: FILE: drivers/video/via/hw.c:2289:
+	for (i = 1; i <= StdSR; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <StdGR>
#2344: FILE: drivers/video/via/hw.c:2301:
+	for (i = 0; i < StdGR; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <StdAR>
#2350: FILE: drivers/video/via/hw.c:2307:
+	for (i = 0; i < StdAR; i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266'
#2361: FILE: drivers/video/via/hw.c:2318:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+	    || (viaparinfo->chip_info->gfx_chip_name == UNICHROME_K400)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_K400'
#2361: FILE: drivers/video/via/hw.c:2318:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+	    || (viaparinfo->chip_info->gfx_chip_name == UNICHROME_K400)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2362: FILE: drivers/video/via/hw.c:2319:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+	    || (viaparinfo->chip_info->gfx_chip_name == UNICHROME_K400)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].index'
#2369: FILE: drivers/video/via/hw.c:2326:
+					    res_patch_table[i].
+					    io_reg_table[j].index;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].port'
#2372: FILE: drivers/video/via/hw.c:2329:
+					    res_patch_table[i].
+					    io_reg_table[j].port;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].value'
#2375: FILE: drivers/video/via/hw.c:2332:
+					    res_patch_table[i].
+					    io_reg_table[j].value;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].mask'
#2378: FILE: drivers/video/via/hw.c:2335:
+					    res_patch_table[i].
+					    io_reg_table[j].mask;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2380: FILE: drivers/video/via/hw.c:2337:
+					viafb_write_reg_mask(index, port, value,
+						       mask);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266'
#2387: FILE: drivers/video/via/hw.c:2344:
+		if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+		    || (viaparinfo->chip_info->gfx_chip_name ==
+		    UNICHROME_K400)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name ==
 		    UNICHROME_K400'
#2387: FILE: drivers/video/via/hw.c:2344:
+		if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+		    || (viaparinfo->chip_info->gfx_chip_name ==
+		    UNICHROME_K400)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2388: FILE: drivers/video/via/hw.c:2345:
+		if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CLE266)
+		    || (viaparinfo->chip_info->gfx_chip_name ==

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].table_length'
#2396: FILE: drivers/video/via/hw.c:2353:
+					     res_patch_table[i].
+					     table_length; j++) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].index'
#2399: FILE: drivers/video/via/hw.c:2356:
+						    res_patch_table[i].
+						    io_reg_table[j].index;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].port'
#2402: FILE: drivers/video/via/hw.c:2359:
+						    res_patch_table[i].
+						    io_reg_table[j].port;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].value'
#2405: FILE: drivers/video/via/hw.c:2362:
+						    res_patch_table[i].
+						    io_reg_table[j].value;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].mask'
#2408: FILE: drivers/video/via/hw.c:2365:
+						    res_patch_table[i].
+						    io_reg_table[j].mask;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2410: FILE: drivers/video/via/hw.c:2367:
+						viafb_write_reg_mask(index,
+							port, value, mask);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->crt_setting_info->iga_path ==
 			IGA2'
#2423: FILE: drivers/video/via/hw.c:2380:
+		if (viafb_SAMM_ON && (viaparinfo->crt_setting_info->iga_path ==
+			IGA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2426: FILE: drivers/video/via/hw.c:2383:
+			viafb_fill_crtc_timing(crt_timing1, vmode_index1,
+				video_bpp1 / 8,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2430: FILE: drivers/video/via/hw.c:2387:
+			viafb_fill_crtc_timing(crt_timing, vmode_index,
+				video_bpp / 8,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2437: FILE: drivers/video/via/hw.c:2394:
+		/* Patch if set_hres is not 8 alignment (1366) to viafb_setmode
+		to 8 alignment (1368),there is several pixels (2 pixels)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2438: FILE: drivers/video/via/hw.c:2395:
+		on right side of screen. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2442: FILE: drivers/video/via/hw.c:2399:
+			viafb_write_reg(CR02, VIACR,
+				viafb_read_reg(VIACR, CR02) - 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->tmds_setting_info->iga_path == IGA2'
#2448: FILE: drivers/video/via/hw.c:2405:
+		if (viafb_SAMM_ON &&
+			(viaparinfo->tmds_setting_info->iga_path == IGA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2449: FILE: drivers/video/via/hw.c:2406:
+		if (viafb_SAMM_ON &&
+			(viaparinfo->tmds_setting_info->iga_path == IGA2)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->tmds_setting_info->v_active'
#2453: FILE: drivers/video/via/hw.c:2410:
+				      viaparinfo->tmds_setting_info->
+				      v_active, 1),

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->tmds_setting_info->iga_path'
#2455: FILE: drivers/video/via/hw.c:2412:
+				     video_bpp1, viaparinfo->
+				     tmds_setting_info->iga_path);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->tmds_setting_info->v_active'
#2460: FILE: drivers/video/via/hw.c:2417:
+				      viaparinfo->
+				      tmds_setting_info->v_active, 0),

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->tmds_setting_info->iga_path'
#2462: FILE: drivers/video/via/hw.c:2419:
+				     video_bpp, viaparinfo->
+				     tmds_setting_info->iga_path);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->lvds_setting_info->iga_path == IGA2'
#2467: FILE: drivers/video/via/hw.c:2424:
+		if (viafb_SAMM_ON &&
+			(viaparinfo->lvds_setting_info->iga_path == IGA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2468: FILE: drivers/video/via/hw.c:2425:
+		if (viafb_SAMM_ON &&
+			(viaparinfo->lvds_setting_info->iga_path == IGA2)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->lvds_setting_info'
#2471: FILE: drivers/video/via/hw.c:2428:
+			viafb_lcd_set_mode(crt_timing1, viaparinfo->
+				lvds_setting_info,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->lvds_setting_info'
#2481: FILE: drivers/video/via/hw.c:2438:
+			viafb_lcd_set_mode(crt_timing, viaparinfo->
+				lvds_setting_info,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->lvds_setting_info2->iga_path == IGA2'
#2486: FILE: drivers/video/via/hw.c:2443:
+		if (viafb_SAMM_ON &&
+			(viaparinfo->lvds_setting_info2->iga_path == IGA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2487: FILE: drivers/video/via/hw.c:2444:
+		if (viafb_SAMM_ON &&
+			(viaparinfo->lvds_setting_info2->iga_path == IGA2)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->lvds_setting_info2'
#2490: FILE: drivers/video/via/hw.c:2447:
+			viafb_lcd_set_mode(crt_timing1, viaparinfo->
+				lvds_setting_info2,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viaparinfo->lvds_setting_info2'
#2500: FILE: drivers/video/via/hw.c:2457:
+			viafb_lcd_set_mode(crt_timing, viaparinfo->
+				lvds_setting_info2,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'viaparinfo->chip_info->gfx_chip_name == UNICHROME_CX700'
#2505: FILE: drivers/video/via/hw.c:2462:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CX700)
+	    && (viafb_LCD_ON || viafb_DVI_ON))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2506: FILE: drivers/video/via/hw.c:2463:
+	if ((viaparinfo->chip_info->gfx_chip_name == UNICHROME_CX700)
+	    && (viafb_LCD_ON || viafb_DVI_ON))

CHECK:CAMELCASE: Avoid CamelCase: <via_fb_hotplug_Xres>
#2511: FILE: drivers/video/via/hw.c:2468:
+		via_fb_hotplug_Xres = hor_res;

CHECK:CAMELCASE: Avoid CamelCase: <via_fb_hotplug_Yres>
#2512: FILE: drivers/video/via/hw.c:2469:
+		via_fb_hotplug_Yres = ver_res;

CHECK:CAMELCASE: Avoid CamelCase: <viafb_DeviceStatus>
#2517: FILE: drivers/video/via/hw.c:2474:
+			viafb_DeviceStatus = DVI_Device;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hres == res_map_refresh_tbl[i].hres'
#2535: FILE: drivers/video/via/hw.c:2492:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vres == res_map_refresh_tbl[i].vres'
#2535: FILE: drivers/video/via/hw.c:2492:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vmode_refresh == res_map_refresh_tbl[i].vmode_refresh'
#2535: FILE: drivers/video/via/hw.c:2492:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2536: FILE: drivers/video/via/hw.c:2493:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2537: FILE: drivers/video/via/hw.c:2494:
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2542: FILE: drivers/video/via/hw.c:2499:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#2548: FILE: drivers/video/via/hw.c:2505:
+	int i, nearest = -1, diff = REFRESH_TOLERANCE;
+	for (i = 0; i < NUM_TOTAL_RES_MAP_REFRESH; i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hres == res_map_refresh_tbl[i].hres'
#2549: FILE: drivers/video/via/hw.c:2506:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (diff > (abs(long_refresh -
+		    res_map_refresh_tbl[i].vmode_refresh)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vres == res_map_refresh_tbl[i].vres'
#2549: FILE: drivers/video/via/hw.c:2506:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (diff > (abs(long_refresh -
+		    res_map_refresh_tbl[i].vmode_refresh)))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2550: FILE: drivers/video/via/hw.c:2507:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2551: FILE: drivers/video/via/hw.c:2508:
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (diff > (abs(long_refresh -

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_map_refresh_tbl[i].vmode_refresh'
#2554: FILE: drivers/video/via/hw.c:2511:
+			diff = abs(long_refresh - res_map_refresh_tbl[i].
+				vmode_refresh);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2592: FILE: drivers/video/via/hw.c:2549:
+void viafb_get_mmio_info(unsigned long *mmio_base,
+	unsigned long *mmio_len)

WARNING:SPACING: space prohibited before semicolon
#2604: FILE: drivers/video/via/hw.c:2561:
+		return ;

WARNING:SPACING: space prohibited before semicolon
#2614: FILE: drivers/video/via/hw.c:2571:
+		return ;

WARNING:SPACING: space prohibited before semicolon
#2651: FILE: drivers/video/via/hw.c:2608:
+		return ;

WARNING:SPACING: space prohibited before semicolon
#2664: FILE: drivers/video/via/hw.c:2621:
+		return ;

CHECK:CAMELCASE: Avoid CamelCase: <FBSize>
#2678: FILE: drivers/video/via/hw.c:2635:
+	unsigned long configid, deviceid, FBSize = 0;

CHECK:CAMELCASE: Avoid CamelCase: <VideoMemSize>
#2679: FILE: drivers/video/via/hw.c:2636:
+	int VideoMemSize;

CHECK:CAMELCASE: Avoid CamelCase: <DeviceFound>
#2680: FILE: drivers/video/via/hw.c:2637:
+	int DeviceFound = FALSE;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#2683: FILE: drivers/video/via/hw.c:2640:
+		outl(configid, (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#2684: FILE: drivers/video/via/hw.c:2641:
+		deviceid = (inl((unsigned long)0xCFC) >> 16) & 0xffff;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#2689: FILE: drivers/video/via/hw.c:2646:
+			outl(configid + 0xE0, (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#2690: FILE: drivers/video/via/hw.c:2647:
+			FBSize = inl((unsigned long)0xCFC);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#2703: FILE: drivers/video/via/hw.c:2660:
+			outl(configid + 0xA0, (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#2704: FILE: drivers/video/via/hw.c:2661:
+			FBSize = inl((unsigned long)0xCFC);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2774: FILE: drivers/video/via/hw.c:2731:
+void viafb_set_dpa_gfx(int output_interface, struct GFX_DPA_SETTING\

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2775: FILE: drivers/video/via/hw.c:2732:
+					*p_gfx_dpa_setting)
 					^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2782: FILE: drivers/video/via/hw.c:2739:
+			viafb_write_reg_mask(CR96, VIACR,
+				       p_gfx_dpa_setting->DVP0, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2786: FILE: drivers/video/via/hw.c:2743:
+			viafb_write_reg_mask(SR1E, VIASR,
+				       p_gfx_dpa_setting->DVP0ClockDri_S, BIT2);

CHECK:CAMELCASE: Avoid CamelCase: <DVP0ClockDri_S>
#2786: FILE: drivers/video/via/hw.c:2743:
+				       p_gfx_dpa_setting->DVP0ClockDri_S, BIT2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2788: FILE: drivers/video/via/hw.c:2745:
+			viafb_write_reg_mask(SR2A, VIASR,
+				       p_gfx_dpa_setting->DVP0ClockDri_S1,

CHECK:CAMELCASE: Avoid CamelCase: <DVP0ClockDri_S1>
#2788: FILE: drivers/video/via/hw.c:2745:
+				       p_gfx_dpa_setting->DVP0ClockDri_S1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2791: FILE: drivers/video/via/hw.c:2748:
+			viafb_write_reg_mask(SR1B, VIASR,
+				       p_gfx_dpa_setting->DVP0DataDri_S, BIT1);

CHECK:CAMELCASE: Avoid CamelCase: <DVP0DataDri_S>
#2791: FILE: drivers/video/via/hw.c:2748:
+				       p_gfx_dpa_setting->DVP0DataDri_S, BIT1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2793: FILE: drivers/video/via/hw.c:2750:
+			viafb_write_reg_mask(SR2A, VIASR,
+				       p_gfx_dpa_setting->DVP0DataDri_S1, BIT5);

CHECK:CAMELCASE: Avoid CamelCase: <DVP0DataDri_S1>
#2793: FILE: drivers/video/via/hw.c:2750:
+				       p_gfx_dpa_setting->DVP0DataDri_S1, BIT5);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2801: FILE: drivers/video/via/hw.c:2758:
+			viafb_write_reg_mask(CR9B, VIACR,
+				       p_gfx_dpa_setting->DVP1, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2805: FILE: drivers/video/via/hw.c:2762:
+			viafb_write_reg_mask(SR65, VIASR,
+				       p_gfx_dpa_setting->DVP1Driving, 0x0F);

CHECK:CAMELCASE: Avoid CamelCase: <DVP1Driving>
#2805: FILE: drivers/video/via/hw.c:2762:
+				       p_gfx_dpa_setting->DVP1Driving, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2812: FILE: drivers/video/via/hw.c:2769:
+			viafb_write_reg_mask(CR97, VIACR,
+				       p_gfx_dpa_setting->DFPHigh, 0x0F);

CHECK:CAMELCASE: Avoid CamelCase: <DFPHigh>
#2812: FILE: drivers/video/via/hw.c:2769:
+				       p_gfx_dpa_setting->DFPHigh, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2819: FILE: drivers/video/via/hw.c:2776:
+			viafb_write_reg_mask(CR99, VIACR,
+				       p_gfx_dpa_setting->DFPLow, 0x0F);

CHECK:CAMELCASE: Avoid CamelCase: <DFPLow>
#2819: FILE: drivers/video/via/hw.c:2776:
+				       p_gfx_dpa_setting->DFPLow, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2826: FILE: drivers/video/via/hw.c:2783:
+			viafb_write_reg_mask(CR97, VIACR,
+				       p_gfx_dpa_setting->DFPHigh, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2828: FILE: drivers/video/via/hw.c:2785:
+			viafb_write_reg_mask(CR99, VIACR,
+				       p_gfx_dpa_setting->DFPLow, 0x0F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2838: FILE: drivers/video/via/hw.c:2795:
+		viafb_load_offset_reg(info->var.xres_virtual,
+				info->var.bits_per_pixel >> 3, IGA1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2842: FILE: drivers/video/via/hw.c:2799:
+			viafb_load_offset_reg(viafb_second_virtual_xres,
+				via_fb_bpp1 >> 3,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2846: FILE: drivers/video/via/hw.c:2803:
+			viafb_load_offset_reg(info->var.xres_virtual,
+					info->var.bits_per_pixel >> 3, IGA2);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2849: FILE: drivers/video/via/hw.c:2806:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2854: FILE: drivers/video/via/hw.c:2811:
+void viafb_fill_var_timing_info(struct fb_var_screeninfo *var, int refresh,
+			  int mode_index)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2860: FILE: drivers/video/via/hw.c:2817:
+	int i = 0, index = 0;
+	vmode_tbl = &CLE266Modes[search_mode_setting(mode_index)];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2913: FILE: drivers/video/via/hw.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2929: FILE: drivers/video/via/hw.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2931: FILE: drivers/video/via/hw.h:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2940: FILE: drivers/video/via/hw.h:28:
+/***************************************************
+* Definition IGA1 Design Method of CRTC Registers *

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2942: FILE: drivers/video/via/hw.h:30:
+#define IGA1_HOR_TOTAL_FORMULA(x)           (((x)/8)-5)
                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2942: FILE: drivers/video/via/hw.h:30:
+#define IGA1_HOR_TOTAL_FORMULA(x)           (((x)/8)-5)
                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2943: FILE: drivers/video/via/hw.h:31:
+#define IGA1_HOR_ADDR_FORMULA(x)            (((x)/8)-1)
                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2943: FILE: drivers/video/via/hw.h:31:
+#define IGA1_HOR_ADDR_FORMULA(x)            (((x)/8)-1)
                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2944: FILE: drivers/video/via/hw.h:32:
+#define IGA1_HOR_BLANK_START_FORMULA(x)     (((x)/8)-1)
                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2944: FILE: drivers/video/via/hw.h:32:
+#define IGA1_HOR_BLANK_START_FORMULA(x)     (((x)/8)-1)
                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2945: FILE: drivers/video/via/hw.h:33:
+#define IGA1_HOR_BLANK_END_FORMULA(x, y)     (((x+y)/8)-1)
                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2945: FILE: drivers/video/via/hw.h:33:
+#define IGA1_HOR_BLANK_END_FORMULA(x, y)     (((x+y)/8)-1)
                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2945: FILE: drivers/video/via/hw.h:33:
+#define IGA1_HOR_BLANK_END_FORMULA(x, y)     (((x+y)/8)-1)
                                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2945: FILE: drivers/video/via/hw.h:33:
+#define IGA1_HOR_BLANK_END_FORMULA(x, y)     (((x+y)/8)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2945: FILE: drivers/video/via/hw.h:33:
+#define IGA1_HOR_BLANK_END_FORMULA(x, y)     (((x+y)/8)-1)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2946: FILE: drivers/video/via/hw.h:34:
+#define IGA1_HOR_SYNC_START_FORMULA(x)      ((x)/8)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2947: FILE: drivers/video/via/hw.h:35:
+#define IGA1_HOR_SYNC_END_FORMULA(x, y)      ((x+y)/8)
                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2947: FILE: drivers/video/via/hw.h:35:
+#define IGA1_HOR_SYNC_END_FORMULA(x, y)      ((x+y)/8)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2947: FILE: drivers/video/via/hw.h:35:
+#define IGA1_HOR_SYNC_END_FORMULA(x, y)      ((x+y)/8)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2947: FILE: drivers/video/via/hw.h:35:
+#define IGA1_HOR_SYNC_END_FORMULA(x, y)      ((x+y)/8)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2949: FILE: drivers/video/via/hw.h:37:
+#define IGA1_VER_TOTAL_FORMULA(x)           ((x)-2)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2950: FILE: drivers/video/via/hw.h:38:
+#define IGA1_VER_ADDR_FORMULA(x)            ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2951: FILE: drivers/video/via/hw.h:39:
+#define IGA1_VER_BLANK_START_FORMULA(x)     ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2952: FILE: drivers/video/via/hw.h:40:
+#define IGA1_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2952: FILE: drivers/video/via/hw.h:40:
+#define IGA1_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2952: FILE: drivers/video/via/hw.h:40:
+#define IGA1_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2952: FILE: drivers/video/via/hw.h:40:
+#define IGA1_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2953: FILE: drivers/video/via/hw.h:41:
+#define IGA1_VER_SYNC_START_FORMULA(x)      ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2954: FILE: drivers/video/via/hw.h:42:
+#define IGA1_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2954: FILE: drivers/video/via/hw.h:42:
+#define IGA1_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2954: FILE: drivers/video/via/hw.h:42:
+#define IGA1_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2954: FILE: drivers/video/via/hw.h:42:
+#define IGA1_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2957: FILE: drivers/video/via/hw.h:45:
+/***************************************************
+** Definition IGA2 Design Method of CRTC Registers *

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2959: FILE: drivers/video/via/hw.h:47:
+#define IGA2_HOR_TOTAL_FORMULA(x)           ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2960: FILE: drivers/video/via/hw.h:48:
+#define IGA2_HOR_ADDR_FORMULA(x)            ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2961: FILE: drivers/video/via/hw.h:49:
+#define IGA2_HOR_BLANK_START_FORMULA(x)     ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2962: FILE: drivers/video/via/hw.h:50:
+#define IGA2_HOR_BLANK_END_FORMULA(x, y)     ((x+y)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2962: FILE: drivers/video/via/hw.h:50:
+#define IGA2_HOR_BLANK_END_FORMULA(x, y)     ((x+y)-1)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2962: FILE: drivers/video/via/hw.h:50:
+#define IGA2_HOR_BLANK_END_FORMULA(x, y)     ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2962: FILE: drivers/video/via/hw.h:50:
+#define IGA2_HOR_BLANK_END_FORMULA(x, y)     ((x+y)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2963: FILE: drivers/video/via/hw.h:51:
+#define IGA2_HOR_SYNC_START_FORMULA(x)      ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2964: FILE: drivers/video/via/hw.h:52:
+#define IGA2_HOR_SYNC_END_FORMULA(x, y)      ((x+y)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2964: FILE: drivers/video/via/hw.h:52:
+#define IGA2_HOR_SYNC_END_FORMULA(x, y)      ((x+y)-1)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2964: FILE: drivers/video/via/hw.h:52:
+#define IGA2_HOR_SYNC_END_FORMULA(x, y)      ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2964: FILE: drivers/video/via/hw.h:52:
+#define IGA2_HOR_SYNC_END_FORMULA(x, y)      ((x+y)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2966: FILE: drivers/video/via/hw.h:54:
+#define IGA2_VER_TOTAL_FORMULA(x)           ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2967: FILE: drivers/video/via/hw.h:55:
+#define IGA2_VER_ADDR_FORMULA(x)            ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2968: FILE: drivers/video/via/hw.h:56:
+#define IGA2_VER_BLANK_START_FORMULA(x)     ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2969: FILE: drivers/video/via/hw.h:57:
+#define IGA2_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2969: FILE: drivers/video/via/hw.h:57:
+#define IGA2_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2969: FILE: drivers/video/via/hw.h:57:
+#define IGA2_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2969: FILE: drivers/video/via/hw.h:57:
+#define IGA2_VER_BLANK_END_FORMULA(x, y)     ((x+y)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2970: FILE: drivers/video/via/hw.h:58:
+#define IGA2_VER_SYNC_START_FORMULA(x)      ((x)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2971: FILE: drivers/video/via/hw.h:59:
+#define IGA2_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2971: FILE: drivers/video/via/hw.h:59:
+#define IGA2_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)
                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2971: FILE: drivers/video/via/hw.h:59:
+#define IGA2_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2971: FILE: drivers/video/via/hw.h:59:
+#define IGA2_VER_SYNC_END_FORMULA(x, y)      ((x+y)-1)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2976: FILE: drivers/video/via/hw.h:64:
+#define IGA2_HOR_TOTAL_SHADOW_FORMULA(x)           ((x/8)-5)
                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2976: FILE: drivers/video/via/hw.h:64:
+#define IGA2_HOR_TOTAL_SHADOW_FORMULA(x)           ((x/8)-5)
                                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2976: FILE: drivers/video/via/hw.h:64:
+#define IGA2_HOR_TOTAL_SHADOW_FORMULA(x)           ((x/8)-5)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2977: FILE: drivers/video/via/hw.h:65:
+#define IGA2_HOR_BLANK_END_SHADOW_FORMULA(x, y)     (((x+y)/8)-1)
                                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2977: FILE: drivers/video/via/hw.h:65:
+#define IGA2_HOR_BLANK_END_SHADOW_FORMULA(x, y)     (((x+y)/8)-1)
                                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2977: FILE: drivers/video/via/hw.h:65:
+#define IGA2_HOR_BLANK_END_SHADOW_FORMULA(x, y)     (((x+y)/8)-1)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2977: FILE: drivers/video/via/hw.h:65:
+#define IGA2_HOR_BLANK_END_SHADOW_FORMULA(x, y)     (((x+y)/8)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2977: FILE: drivers/video/via/hw.h:65:
+#define IGA2_HOR_BLANK_END_SHADOW_FORMULA(x, y)     (((x+y)/8)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2978: FILE: drivers/video/via/hw.h:66:
+#define IGA2_VER_TOTAL_SHADOW_FORMULA(x)           ((x)-2)
                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2979: FILE: drivers/video/via/hw.h:67:
+#define IGA2_VER_ADDR_SHADOW_FORMULA(x)            ((x)-1)
                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2980: FILE: drivers/video/via/hw.h:68:
+#define IGA2_VER_BLANK_START_SHADOW_FORMULA(x)     ((x)-1)
                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2981: FILE: drivers/video/via/hw.h:69:
+#define IGA2_VER_BLANK_END_SHADOW_FORMULA(x, y)     ((x+y)-1)
                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2981: FILE: drivers/video/via/hw.h:69:
+#define IGA2_VER_BLANK_END_SHADOW_FORMULA(x, y)     ((x+y)-1)
                                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2981: FILE: drivers/video/via/hw.h:69:
+#define IGA2_VER_BLANK_END_SHADOW_FORMULA(x, y)     ((x+y)-1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2981: FILE: drivers/video/via/hw.h:69:
+#define IGA2_VER_BLANK_END_SHADOW_FORMULA(x, y)     ((x+y)-1)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2983: FILE: drivers/video/via/hw.h:71:
+#define IGA2_VER_SYNC_END_SHADOW_FORMULA(x, y)      (x+y)
                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2983: FILE: drivers/video/via/hw.h:71:
+#define IGA2_VER_SYNC_END_SHADOW_FORMULA(x, y)      (x+y)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#2983: FILE: drivers/video/via/hw.h:71:
+#define IGA2_VER_SYNC_END_SHADOW_FORMULA(x, y)      (x+y)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3040: FILE: drivers/video/via/hw.h:128:
+/* location: CLE266: {CR53,0,7},{CR54,3,5} => CLE266's CR5D[6]
+is reserved, so it may have problem to set 1600x1200 on IGA2. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3040: FILE: drivers/video/via/hw.h:128:
+is reserved, so it may have problem to set 1600x1200 on IGA2. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3041: FILE: drivers/video/via/hw.h:129:
+/*         ^IOthers: {CR53,0,7},{CR54,3,5},{CR5D,6,6} */$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3069: FILE: drivers/video/via/hw.h:157:
+#define IGA1_OFFSET_FORMULA(x, y)        ((x*y)/IGA1_OFFSER_ALIGN_BYTE)
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3069: FILE: drivers/video/via/hw.h:157:
+#define IGA1_OFFSET_FORMULA(x, y)        ((x*y)/IGA1_OFFSER_ALIGN_BYTE)
                                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3069: FILE: drivers/video/via/hw.h:157:
+#define IGA1_OFFSET_FORMULA(x, y)        ((x*y)/IGA1_OFFSER_ALIGN_BYTE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3069: FILE: drivers/video/via/hw.h:157:
+#define IGA1_OFFSET_FORMULA(x, y)        ((x*y)/IGA1_OFFSER_ALIGN_BYTE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3076: FILE: drivers/video/via/hw.h:164:
+#define IGA1_FETCH_COUNT_FORMULA(x, y)   \
+	(((x*y)/IGA1_FETCH_COUNT_ALIGN_BYTE) + IGA1_FETCH_COUNT_PATCH_VALUE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3076: FILE: drivers/video/via/hw.h:164:
+#define IGA1_FETCH_COUNT_FORMULA(x, y)   \
+	(((x*y)/IGA1_FETCH_COUNT_ALIGN_BYTE) + IGA1_FETCH_COUNT_PATCH_VALUE)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3077: FILE: drivers/video/via/hw.h:165:
+	(((x*y)/IGA1_FETCH_COUNT_ALIGN_BYTE) + IGA1_FETCH_COUNT_PATCH_VALUE)
 	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3077: FILE: drivers/video/via/hw.h:165:
+	(((x*y)/IGA1_FETCH_COUNT_ALIGN_BYTE) + IGA1_FETCH_COUNT_PATCH_VALUE)
 	       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3083: FILE: drivers/video/via/hw.h:171:
+#define IGA2_OFFSET_FORMULA(x, y)        (x*y)/IGA2_OFFSET_ALIGN_BYTE
                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3083: FILE: drivers/video/via/hw.h:171:
+#define IGA2_OFFSET_FORMULA(x, y)        (x*y)/IGA2_OFFSET_ALIGN_BYTE
                                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3083: FILE: drivers/video/via/hw.h:171:
+#define IGA2_OFFSET_FORMULA(x, y)        (x*y)/IGA2_OFFSET_ALIGN_BYTE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3083: FILE: drivers/video/via/hw.h:171:
+#define IGA2_OFFSET_FORMULA(x, y)        (x*y)/IGA2_OFFSET_ALIGN_BYTE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3083: FILE: drivers/video/via/hw.h:171:
+#define IGA2_OFFSET_FORMULA(x, y)        (x*y)/IGA2_OFFSET_ALIGN_BYTE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3088: FILE: drivers/video/via/hw.h:176:
+#define IGA2_FETCH_COUNT_FORMULA(x, y)   \
+	(((x*y)/IGA2_FETCH_COUNT_ALIGN_BYTE) + IGA2_FETCH_COUNT_PATCH_VALUE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3088: FILE: drivers/video/via/hw.h:176:
+#define IGA2_FETCH_COUNT_FORMULA(x, y)   \
+	(((x*y)/IGA2_FETCH_COUNT_ALIGN_BYTE) + IGA2_FETCH_COUNT_PATCH_VALUE)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3089: FILE: drivers/video/via/hw.h:177:
+	(((x*y)/IGA2_FETCH_COUNT_ALIGN_BYTE) + IGA2_FETCH_COUNT_PATCH_VALUE)
 	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3089: FILE: drivers/video/via/hw.h:177:
+	(((x*y)/IGA2_FETCH_COUNT_ALIGN_BYTE) + IGA2_FETCH_COUNT_PATCH_VALUE)
 	       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3147: FILE: drivers/video/via/hw.h:235:
+/* location: {SR22,0,4}. (128/4) =64, P800 must be set zero,
+				because HW only 5 bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3147: FILE: drivers/video/via/hw.h:235:
+				because HW only 5 bits */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3260: FILE: drivers/video/via/hw.h:348:
+#define IGA1_FIFO_DEPTH_SELECT_FORMULA(x)                   ((x/2)-1)
                                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3260: FILE: drivers/video/via/hw.h:348:
+#define IGA1_FIFO_DEPTH_SELECT_FORMULA(x)                   ((x/2)-1)
                                                                   ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3260: FILE: drivers/video/via/hw.h:348:
+#define IGA1_FIFO_DEPTH_SELECT_FORMULA(x)                   ((x/2)-1)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3261: FILE: drivers/video/via/hw.h:349:
+#define IGA1_FIFO_THRESHOLD_FORMULA(x)                      (x/4)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3261: FILE: drivers/video/via/hw.h:349:
+#define IGA1_FIFO_THRESHOLD_FORMULA(x)                      (x/4)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3262: FILE: drivers/video/via/hw.h:350:
+#define IGA1_DISPLAY_QUEUE_EXPIRE_NUM_FORMULA(x)            (x/4)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3262: FILE: drivers/video/via/hw.h:350:
+#define IGA1_DISPLAY_QUEUE_EXPIRE_NUM_FORMULA(x)            (x/4)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3263: FILE: drivers/video/via/hw.h:351:
+#define IGA1_FIFO_HIGH_THRESHOLD_FORMULA(x)                 (x/4)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3263: FILE: drivers/video/via/hw.h:351:
+#define IGA1_FIFO_HIGH_THRESHOLD_FORMULA(x)                 (x/4)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3264: FILE: drivers/video/via/hw.h:352:
+#define IGA2_FIFO_DEPTH_SELECT_FORMULA(x)                   (((x/2)/4)-1)
                                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3264: FILE: drivers/video/via/hw.h:352:
+#define IGA2_FIFO_DEPTH_SELECT_FORMULA(x)                   (((x/2)/4)-1)
                                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3264: FILE: drivers/video/via/hw.h:352:
+#define IGA2_FIFO_DEPTH_SELECT_FORMULA(x)                   (((x/2)/4)-1)
                                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3264: FILE: drivers/video/via/hw.h:352:
+#define IGA2_FIFO_DEPTH_SELECT_FORMULA(x)                   (((x/2)/4)-1)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3265: FILE: drivers/video/via/hw.h:353:
+#define IGA2_FIFO_THRESHOLD_FORMULA(x)                      (x/4)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3265: FILE: drivers/video/via/hw.h:353:
+#define IGA2_FIFO_THRESHOLD_FORMULA(x)                      (x/4)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3266: FILE: drivers/video/via/hw.h:354:
+#define IGA2_DISPLAY_QUEUE_EXPIRE_NUM_FORMULA(x)            (x/4)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3266: FILE: drivers/video/via/hw.h:354:
+#define IGA2_DISPLAY_QUEUE_EXPIRE_NUM_FORMULA(x)            (x/4)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3267: FILE: drivers/video/via/hw.h:355:
+#define IGA2_FIFO_HIGH_THRESHOLD_FORMULA(x)                 (x/4)
                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3267: FILE: drivers/video/via/hw.h:355:
+#define IGA2_FIFO_HIGH_THRESHOLD_FORMULA(x)                 (x/4)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3288: FILE: drivers/video/via/hw.h:376:
+#define CLE266_POWER_SEQ_FORMULA(x)     ((x)/CLE266_POWER_SEQ_UNIT)
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3289: FILE: drivers/video/via/hw.h:377:
+#define K800_POWER_SEQ_FORMULA(x)       ((x)/K800_POWER_SEQ_UNIT)
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3290: FILE: drivers/video/via/hw.h:378:
+#define P880_POWER_SEQ_FORMULA(x)       ((x)/P880_POWER_SEQ_UNIT)
                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3306: FILE: drivers/video/via/hw.h:394:
+#define CLE266_LCD_HOR_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3306: FILE: drivers/video/via/hw.h:394:
+#define CLE266_LCD_HOR_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3306: FILE: drivers/video/via/hw.h:394:
+#define CLE266_LCD_HOR_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3306: FILE: drivers/video/via/hw.h:394:
+#define CLE266_LCD_HOR_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3306: FILE: drivers/video/via/hw.h:394:
+#define CLE266_LCD_HOR_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3306: FILE: drivers/video/via/hw.h:394:
+#define CLE266_LCD_HOR_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3308: FILE: drivers/video/via/hw.h:396:
+#define CLE266_LCD_VER_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3308: FILE: drivers/video/via/hw.h:396:
+#define CLE266_LCD_VER_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3308: FILE: drivers/video/via/hw.h:396:
+#define CLE266_LCD_VER_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3308: FILE: drivers/video/via/hw.h:396:
+#define CLE266_LCD_VER_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))
                                                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3308: FILE: drivers/video/via/hw.h:396:
+#define CLE266_LCD_VER_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3308: FILE: drivers/video/via/hw.h:396:
+#define CLE266_LCD_VER_SCF_FORMULA(x, y)   (((x-1)*1024)/(y-1))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3310: FILE: drivers/video/via/hw.h:398:
+#define K800_LCD_HOR_SCF_FORMULA(x, y)     (((x-1)*4096)/(y-1))
                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3310: FILE: drivers/video/via/hw.h:398:
+#define K800_LCD_HOR_SCF_FORMULA(x, y)     (((x-1)*4096)/(y-1))
                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3310: FILE: drivers/video/via/hw.h:398:
+#define K800_LCD_HOR_SCF_FORMULA(x, y)     (((x-1)*4096)/(y-1))
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3310: FILE: drivers/video/via/hw.h:398:
+#define K800_LCD_HOR_SCF_FORMULA(x, y)     (((x-1)*4096)/(y-1))
                                                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3310: FILE: drivers/video/via/hw.h:398:
+#define K800_LCD_HOR_SCF_FORMULA(x, y)     (((x-1)*4096)/(y-1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3310: FILE: drivers/video/via/hw.h:398:
+#define K800_LCD_HOR_SCF_FORMULA(x, y)     (((x-1)*4096)/(y-1))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3312: FILE: drivers/video/via/hw.h:400:
+#define K800_LCD_VER_SCF_FORMULA(x, y)     (((x-1)*2048)/(y-1))
                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3312: FILE: drivers/video/via/hw.h:400:
+#define K800_LCD_VER_SCF_FORMULA(x, y)     (((x-1)*2048)/(y-1))
                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3312: FILE: drivers/video/via/hw.h:400:
+#define K800_LCD_VER_SCF_FORMULA(x, y)     (((x-1)*2048)/(y-1))
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3312: FILE: drivers/video/via/hw.h:400:
+#define K800_LCD_VER_SCF_FORMULA(x, y)     (((x-1)*2048)/(y-1))
                                                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#3312: FILE: drivers/video/via/hw.h:400:
+#define K800_LCD_VER_SCF_FORMULA(x, y)     (((x-1)*2048)/(y-1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#3312: FILE: drivers/video/via/hw.h:400:
+#define K800_LCD_VER_SCF_FORMULA(x, y)     (((x-1)*2048)/(y-1))

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3405: FILE: drivers/video/via/hw.h:493:
+/*****************************************************
+**      Define IGA2 Shadow Display Timing         ****

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3457: FILE: drivers/video/via/hw.h:545:
+/*****************************************************
+**      Define IGA2 Display Timing                ****

CHECK:CAMELCASE: Avoid CamelCase: <Mask>
#3780: FILE: drivers/video/via/hw.h:868:
+	u8 Mask;

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#3781: FILE: drivers/video/via/hw.h:869:
+	u8 Data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3812: FILE: drivers/video/via/hw.h:900:
+void viafb_set_output_path(int device, int set_iga,
+	int output_interface);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3814: FILE: drivers/video/via/hw.h:902:
+void viafb_fill_crtc_timing(struct crt_mode_table *crt_table,
+		      int mode_index, int bpp_byte, int set_iga);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3818: FILE: drivers/video/via/hw.h:906:
+void viafb_load_reg(int timing_value, int viafb_load_reg_num,
+	struct io_register *reg,

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#3835: FILE: drivers/video/via/hw.h:923:
+void viafb_set_dpa_gfx(int output_interface, struct GFX_DPA_SETTING\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct GFX_DPA_SETTING' should also have an identifier name
#3835: FILE: drivers/video/via/hw.h:923:
+void viafb_set_dpa_gfx(int output_interface, struct GFX_DPA_SETTING\

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#3836: FILE: drivers/video/via/hw.h:924:
+					*p_gfx_dpa_setting);
 					^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3839: FILE: drivers/video/via/hw.h:927:
+int viafb_setmode(int vmode_index, int hor_res, int ver_res,
+	    int video_bpp, int vmode_index1, int hor_res1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3846: FILE: drivers/video/via/hw.h:934:
+void viafb_update_device_setting(int hres, int vres, int bpp,
+			   int vmode_refresh, int flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3848: FILE: drivers/video/via/hw.h:936:
+void viafb_get_mmio_info(unsigned long *mmio_base,
+	unsigned long *mmio_len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261277.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 122 warnings, 330 checks, 3807 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261277.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
