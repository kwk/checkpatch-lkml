WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#17: 
Subject: [RFC][PATCH] Sparse RAM MTD map support

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#57: FILE: drivers/mtd/maps/Kconfig:574:
+config MTD_SPARSE_RAM
+	tristate "Sparse mapping for a 8/16 bit RAM on a 16/32 bit bus"
+	depends on MTD
+	select MTD_RAM
+	select MTD_MAP_BANK_WIDTH_1
+	select MTD_MAP_BANK_WIDTH_2
+	select MTD_COMPLEX_MAPPINGS
+	help
+	  This adds an MTD device for accessing an 8bit RAM plugged to
+	  a 16bit or 32bit bus, or a 16bit RAM plugged to a 32bit bus.

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: drivers/mtd/maps/sparse_ram.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/mtd/maps/sparse_ram.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: drivers/mtd/maps/sparse_ram.c:21:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: drivers/mtd/maps/sparse_ram.c:41:
+	int offset = map->map_priv_1;
+	return __raw_readw(map->virt + (ofs << 1)) >> offset;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: drivers/mtd/maps/sparse_ram.c:47:
+	int offset = map->map_priv_1;
+	return __raw_readl(map->virt + (ofs << 2)) >> offset;

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: drivers/mtd/maps/sparse_ram.c:53:
+	map_word ret;
+	ret.x[0] = sparse_ram_read_16(map, ofs) & 0xFF;

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: drivers/mtd/maps/sparse_ram.c:60:
+	map_word ret;
+	ret.x[0] = sparse_ram_read_32(map, ofs) & 0xFF;

WARNING:LINE_SPACING: Missing a blank line after declarations
#150: FILE: drivers/mtd/maps/sparse_ram.c:67:
+	map_word ret;
+	ret.x[0] = sparse_ram_read_32(map, ofs) & 0xFFFF;

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: drivers/mtd/maps/sparse_ram.c:87:
+	int offset = map->map_priv_1;
+	sparse_ram_write_16(map, d.x[0] << offset, ofs);

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: drivers/mtd/maps/sparse_ram.c:94:
+	int offset = map->map_priv_1;
+	sparse_ram_write_32(map, d.x[0] << offset, ofs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#207: FILE: drivers/mtd/maps/sparse_ram.c:124:
+	BUG_ON(len & 1 || from & 1 || (unsigned long)to & 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: drivers/mtd/maps/sparse_ram.c:163:
+	BUG_ON(len & 1 || to & 1 || (unsigned long)from & 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: drivers/mtd/maps/sparse_ram.c:201:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct sparse_ram)...)
#298: FILE: drivers/mtd/maps/sparse_ram.c:215:
+	info = kzalloc(sizeof(struct sparse_ram), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#300: FILE: drivers/mtd/maps/sparse_ram.c:217:
+	if (!info) {
+		dev_err(&dev->dev, "Out of memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/mtd/maps/sparse_ram.c:273:
+	dev_info(&dev->dev, "Probing %dbit RAM on a %dbit bus %.8llx@%.8llx\n",
+		data->width * 8, data->access * 8,

CHECK:SPACING: No space is necessary after a cast
#357: FILE: drivers/mtd/maps/sparse_ram.c:274:
+		(unsigned long long) res_size,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/mtd/maps/sparse_ram.c:275:
+		(unsigned long long) info->res->start);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#409: FILE: include/linux/mtd/sparse_ram.h:1:
+#ifndef __LINUX_MTD_SPARSE_RAM_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000238896.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 5 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000238896.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
