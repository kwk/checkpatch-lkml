WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
>>>>> Here is another posting for IO controller patches. Last time I had posted

WARNING:REPEATED_WORD: Possible repeated word: 'io'
#73: 
>> mount -t cgroup -o io io /cgroup

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#121: 
        occured when we tried to delete the cgroup. Earlier, ioqs were being
        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'signficant' may be misspelled - perhaps 'significant'?
#125: 
        problem can become signficant if cgroups are created and destroyed
                           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#143: 
        Also we no longer need to maintain a seprate linked list of idle
                                             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: block/cfq-iosched.c:1236:
+^I^Icfqq = cfq_find_alloc_queue(cfqd, iog, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sd->next_active"
#266: FILE: block/elevator-fq.c:677:
+		if (sd->next_active != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: block/elevator-fq.c:1327:
+/* This cleanup function is does the last bit of things to destroy cgroup.
+   It should only get called after io_destroy_group has been invoked.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: block/elevator-fq.c:1338:
+		BUG_ON(!RB_EMPTY_ROOT(&st->active));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#388: FILE: block/elevator-fq.c:1339:
+		BUG_ON(!RB_EMPTY_ROOT(&st->idle));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#389: FILE: block/elevator-fq.c:1340:
+		BUG_ON(st->wsum != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#394: FILE: block/elevator-fq.c:1343:
+	BUG_ON(iog->sched_data.next_active != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iog->sched_data.next_active"
#394: FILE: block/elevator-fq.c:1343:
+	BUG_ON(iog->sched_data.next_active != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#395: FILE: block/elevator-fq.c:1344:
+	BUG_ON(iog->sched_data.active_entity != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iog->sched_data.active_entity"
#395: FILE: block/elevator-fq.c:1344:
+	BUG_ON(iog->sched_data.active_entity != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: block/elevator-fq.c:1345:
+	BUG_ON(entity != NULL && entity->tree != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entity"
#396: FILE: block/elevator-fq.c:1345:
+	BUG_ON(entity != NULL && entity->tree != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entity->tree"
#396: FILE: block/elevator-fq.c:1345:
+	BUG_ON(entity != NULL && entity->tree != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#420: FILE: block/elevator-fq.c:1355:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#424: FILE: block/elevator-fq.c:1359:
+	BUG_ON(atomic_read(&iog->ref) <= 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: block/elevator-fq.c:1378:
+   It might still have pending IOs in some busy queues. It should be able to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#444: FILE: block/elevator-fq.c:1378:
+/* After the group is destroyed, no new sync IO should come to the group.
+   It might still have pending IOs in some busy queues. It should be able to 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: block/elevator-fq.c:1383:
+   is moved to the new cgroup. $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#462: FILE: block/elevator-fq.c:1391:
+	BUG_ON(iog->my_entity == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iog->my_entity"
#462: FILE: block/elevator-fq.c:1391:
+	BUG_ON(iog->my_entity == NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#465: FILE: block/elevator-fq.c:1394:
+	/* We flush idle tree now, and don't put things in there
+	   any more.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#490: FILE: block/elevator-fq.c:1406:
+	/* Put the reference taken at the time of creation
+	   so that when all queues are gone, cgroup can be destroyed.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#639: FILE: block/elevator-fq.h:468:
+extern void elv_put_iog(struct io_group *iog);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#668: FILE: block/elevator-fq.h:552:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000131567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 18 warnings, 8 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000131567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
