WARNING:TYPO_SPELLING: 'internel' may be misspelled - perhaps 'internal'?
#13: 
Subject: [RFC][Patch 3/3]integrity:TPM internel kernel interface
                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: drivers/char/tpm/tpm.c:376:
+ssize_t tpm_transmit(struct tpm_chip * chip, char *buf, size_t bufsiz)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_transmit', this function's name, in a string
#106: FILE: drivers/char/tpm/tpm.c:395:
+		dev_err(chip->dev, "tpm_transmit: tpm_send: error %zd\n", rc);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_transmit', this function's name, in a string
#116: FILE: drivers/char/tpm/tpm.c:427:
+		dev_err(chip->dev, "tpm_transmit: tpm_recv: error %zd\n", rc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: drivers/char/tpm/tpm.c:480:
+static ssize_t transmit_cmd(struct tpm_chip *chip, u8 * data, int len,

WARNING:TYPO_SPELLING: 'attemtping' may be misspelled - perhaps 'attempting'?
#199: FILE: drivers/char/tpm/tpm.c:606:
+			  "attemtping to determine the permanent state");
 			   ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'attemtping' may be misspelled - perhaps 'attempting'?
#217: FILE: drivers/char/tpm/tpm.c:631:
+			  "attemtping to determine the permanent state");
 			   ^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#250: FILE: drivers/char/tpm/tpm.c:667:
+				  struct device_attribute * attr, char *buf)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#310: FILE: drivers/char/tpm/tpm.c:746:
+	list_for_each_entry(pos, &tpm_chip_list, list)
+	    if ((chip_num == TPM_ANY_NUM || pos->dev_num == chip_num)

WARNING:TABSTOP: Statements should start on a tabstop
#311: FILE: drivers/char/tpm/tpm.c:747:
+	    if ((chip_num == TPM_ANY_NUM || pos->dev_num == chip_num)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_typ == TPM_ANY_TYPE'
#311: FILE: drivers/char/tpm/tpm.c:747:
+	    if ((chip_num == TPM_ANY_NUM || pos->dev_num == chip_num)
+		&& (chip_typ == TPM_ANY_TYPE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#312: FILE: drivers/char/tpm/tpm.c:748:
+	    if ((chip_num == TPM_ANY_NUM || pos->dev_num == chip_num)
+		&& (chip_typ == TPM_ANY_TYPE)) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: drivers/char/tpm/tpm.c:759:
+ * @chip_id: ^Itpm chip identifier$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: drivers/char/tpm/tpm.c:760:
+ * ^I^IUpper 2 bytes: ANY, HW_ONLY or SW_ONLY$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: drivers/char/tpm/tpm.c:761:
+ * ^I^ILower 2 bytes: tpm idx # or AN&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#327: FILE: drivers/char/tpm/tpm.c:763:
+ * @res_buf: ^ITPM_PCR value$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: drivers/char/tpm/tpm.c:766:
+int tpm_pcr_read(u32 chip_id, int pcr_idx, u8 * res_buf, int res_buf_size)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#341: FILE: drivers/char/tpm/tpm.c:777:
+	if ((chip = tpm_chip_lookup(chip_num,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#350: FILE: drivers/char/tpm/tpm.c:786:
+		rc = be32_to_cpu(*((u32 *) (data + 6)));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#357: FILE: drivers/char/tpm/tpm.c:793:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: drivers/char/tpm/tpm.c:806:
+ * @chip_id: ^Itpm chip identifier$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: drivers/char/tpm/tpm.c:807:
+ * ^I^IUpper 2 bytes: ANY, HW_ONLY or SW_ONLY$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: drivers/char/tpm/tpm.c:808:
+ * ^I^ILower 2 bytes: tpm idx # or AN&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#374: FILE: drivers/char/tpm/tpm.c:810:
+ * @hash: ^Ihash value used to extend pcr value$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#376: FILE: drivers/char/tpm/tpm.c:812:
+int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8 * hash)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#384: FILE: drivers/char/tpm/tpm.c:820:
+	if ((chip = tpm_chip_lookup(chip_num,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: drivers/char/tpm/tpm.c:828:
+	if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0)

CHECK:SPACING: No space is necessary after a cast
#393: FILE: drivers/char/tpm/tpm.c:829:
+		rc = be32_to_cpu(*((u32 *) (data + 6)));

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: drivers/char/tpm/tpm.c:881:
+		       "Sigscheme: %02X %02X\nParameters: %02X %02X %02X %02X"
+		       " %02X %02X %02X %02X %02X %02X %02X %02X\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#446: FILE: drivers/char/tpm/tpm.c:882:
+		       "Modulus length: %d\nModulus: \n",

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/char/tpm/tpm.c:887:
+		       be32_to_cpu(*((__be32 *) (data + 34))));

CHECK:SPACING: No space is necessary after a cast
#482: FILE: drivers/char/tpm/tpm.c:937:
+		       be32_to_cpu(*((__be32 *) (data +

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#523: FILE: drivers/char/tpm/tpm.c:976:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <= TPM_ERROR_SIZE) {

CHECK:SPACING: No space is necessary after a cast
#532: FILE: drivers/char/tpm/tpm.c:984:
+		       be32_to_cpu(*((__be32 *) (data +

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#540: FILE: drivers/char/tpm/tpm.c:990:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <= TPM_ERROR_SIZE) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#564: FILE: drivers/char/tpm/tpm.c:1008:
+ssize_t tpm_store_cancel(struct device * dev, struct device_attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#564: FILE: drivers/char/tpm/tpm.c:1008:
+ssize_t tpm_store_cancel(struct device * dev, struct device_attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: drivers/char/tpm/tpm.c:1122:
+ssize_t tpm_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: drivers/char/tpm/tpm.c:1122:
+ssize_t tpm_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#586: FILE: drivers/char/tpm/tpm.c:1123:
+		 size_t size, loff_t * off)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#633: FILE: include/linux/tpm.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#674: FILE: include/linux/tpm.h:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#675: FILE: include/linux/tpm.h:43:
+#if defined(CONFIG_TCG_TPM) || defined(CONFIG_TCG_TPM_MODULE)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#677: FILE: include/linux/tpm.h:45:
+extern int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#677: FILE: include/linux/tpm.h:45:
+extern int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#678: FILE: include/linux/tpm.h:46:
+extern int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#678: FILE: include/linux/tpm.h:46:
+extern int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#680: FILE: include/linux/tpm.h:48:
+static inline int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#681: FILE: include/linux/tpm.h:49:
+static inline int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf,
+				int res_buf_size)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#686: FILE: include/linux/tpm.h:54:
+static inline int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416429.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 19 warnings, 12 checks, 615 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416429.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
