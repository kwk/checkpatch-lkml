WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- linux-2.6.22.base/include/linux/perfmon.h	1969-12-31 16:00:00.000000000 -0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: include/linux/perfmon.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: include/linux/perfmon.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: include/linux/perfmon.h:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#59: FILE: include/linux/perfmon.h:18:
+ * 02111-1307 USA
+  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#71: FILE: include/linux/perfmon.h:30:
+#define PFM_MAX_PMCS	(PFM_ARCH_MAX_HW_PMCS+PFM_ARCH_MAX_SW_PMCS)
                     	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#72: FILE: include/linux/perfmon.h:31:
+#define PFM_MAX_PMDS	(PFM_ARCH_MAX_HW_PMDS+PFM_ARCH_MAX_SW_PMDS)
                     	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#78: FILE: include/linux/perfmon.h:37:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#78: FILE: include/linux/perfmon.h:37:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#78: FILE: include/linux/perfmon.h:37:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#78: FILE: include/linux/perfmon.h:37:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#115: FILE: include/linux/perfmon.h:74:
+#define PFM_REG_RETFL_NOTAVAIL	(1<<31) /* not implemented or unaccessible */
                               	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: include/linux/perfmon.h:74:
+#define PFM_REG_RETFL_NOTAVAIL	(1<<31) /* not implemented or unaccessible */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#116: FILE: include/linux/perfmon.h:75:
+#define PFM_REG_RETFL_EINVAL	(1<<30) /* entry is invalid */
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: include/linux/perfmon.h:75:
+#define PFM_REG_RETFL_EINVAL	(1<<30) /* entry is invalid */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#117: FILE: include/linux/perfmon.h:76:
+#define PFM_REG_RETFL_NOSET	(1<<29) /* event set does not exist */
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: include/linux/perfmon.h:76:
+#define PFM_REG_RETFL_NOSET	(1<<29) /* event set does not exist */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#118: FILE: include/linux/perfmon.h:77:
+#define PFM_REG_RETFL_MASK	(PFM_REG_RETFL_NOTAVAIL|\
                           	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#119: FILE: include/linux/perfmon.h:78:
+				 PFM_REG_RETFL_EINVAL|\
 				                     ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: include/linux/perfmon.h:97:
+#define PFM_FL_NOTIFY_BLOCK    ^I 0x01^I/* block task on user notifications */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: include/linux/perfmon.h:119:
+^I__u16 reg_num;^I   ^I/* which register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: include/linux/perfmon.h:120:
+^I__u16 reg_set;^I   ^I/* event set for this register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: include/linux/perfmon.h:121:
+^I__u32 reg_flags; ^I/* input: flags, return: reg error */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: include/linux/perfmon.h:130:
+^I__u64 reg_random_mask; ^I/* bitmask used to limit random value */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: include/linux/perfmon.h:164:
+^I__u32^Iset_flags; ^I  /* input: flags, return: err flag  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/perfmon.h:178:
+^I__u64 ^Iset_ovfl_pmds[PFM_HW_PMD_BV]; /* out: last ovfl PMDs */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#246: FILE: include/linux/perfmon.h:205:
+	volatile unsigned long	set_seq;   /* sequence number of updates */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: include/linux/perfmon.h:218:
+^I__u32 ^I^Imsg_type;^I/* message type: PFM_MSG_OVFL */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: include/linux/perfmon.h:221:
+^I__u16 ^I^Imsg_active_set;^I/* active set at overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: include/linux/perfmon.h:222:
+^I__u16 ^I^Imsg_ovfl_cpu;^I/* cpu of PMU interrupt */$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#285: FILE: include/linux/perfmon.h:244:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#285: FILE: include/linux/perfmon.h:244:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#285: FILE: include/linux/perfmon.h:244:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#287: FILE: include/linux/perfmon.h:246:
+#define PFM_VERSION_MAJOR(x)	 (((x)>>16) & 0xffff)
                             	      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#313: FILE: include/linux/perfmon.h:272:
+#define PFM_MSGS_COUNT		(1<<PFM_MSGS_ORDER) /* number of messages */
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: include/linux/perfmon.h:272:
+#define PFM_MSGS_COUNT		(1<<PFM_MSGS_ORDER) /* number of messages */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#314: FILE: include/linux/perfmon.h:273:
+#define PFM_MSGQ_MASK		(PFM_MSGS_COUNT-1)
                      		               ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: include/linux/perfmon.h:284:
+ * ^Ibits[00-15] : generic$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#348: FILE: include/linux/perfmon.h:307:
+#define PFM_ERR(f, x...)  printk(KERN_ERR     "perfmon: " f "\n", ## x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#349: FILE: include/linux/perfmon.h:308:
+#define PFM_WARN(f, x...) printk(KERN_WARNING "perfmon: " f "\n", ## x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#350: FILE: include/linux/perfmon.h:309:
+#define PFM_LOG(f, x...)  printk(KERN_NOTICE  "perfmon: " f "\n", ## x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#351: FILE: include/linux/perfmon.h:310:
+#define PFM_INFO(f, x...) printk(KERN_INFO    "perfmon: " f "\n", ## x)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: include/linux/perfmon.h:318:
+ * ^I$ echo 0 >/proc/sys/kernel/printk_ratelimit$

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#364: FILE: include/linux/perfmon.h:323:
+		if (unlikely(pfm_controls.debug >0 && printk_ratelimit())) { \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#364: FILE: include/linux/perfmon.h:323:
+		if (unlikely(pfm_controls.debug >0 && printk_ratelimit())) { \
 		                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#365: FILE: include/linux/perfmon.h:324:
+			printk("perfmon: %s.%d: CPU%d [%d]: " f "\n", \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#366: FILE: include/linux/perfmon.h:325:
+			       __FUNCTION__, __LINE__, \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#367: FILE: include/linux/perfmon.h:326:
+			       smp_processor_id(), current->pid , ## x); \
 			                                        ^

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#373: FILE: include/linux/perfmon.h:332:
+		if (unlikely(pfm_controls.debug_ovfl >0 && printk_ratelimit())) { \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#373: FILE: include/linux/perfmon.h:332:
+		if (unlikely(pfm_controls.debug_ovfl >0 && printk_ratelimit())) { \
 		                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: include/linux/perfmon.h:333:
+			printk("perfmon: %s.%d: CPU%d [%d]: " f "\n", \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#375: FILE: include/linux/perfmon.h:334:
+			       __FUNCTION__, __LINE__, \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#376: FILE: include/linux/perfmon.h:335:
+			       smp_processor_id(), current->pid , ## x); \
 			                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: include/linux/perfmon.h:339:
+#define PFM_DBG(f, x...)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: include/linux/perfmon.h:340:
+#define PFM_DBG_ovfl(f, x...)	do {} while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: include/linux/perfmon.h:351:
+^Iu64 short_reset;    ^I/* reset value on overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#398: FILE: include/linux/perfmon.h:357:
+^Iu64 eventid;^I ^I /* overflow event identifier */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: include/linux/perfmon.h:448:
+^Istruct task_struct ^I*task;^I/* attached task */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: include/linux/perfmon.h:451:
+^Iu64 ^I^I^Ilast_act;^I/* last activation */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#493: FILE: include/linux/perfmon.h:452:
+^Iu32^I^I^Ilast_cpu;   ^I/* last CPU used (SMP only) */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: include/linux/perfmon.h:459:
+^Iwait_queue_head_t ^Imsgq_wait;^I/* used when flags.kapi=0 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#515: FILE: include/linux/perfmon.h:474:
+^Istruct pfm_ovfl_arg ^Iovfl_arg;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#521: FILE: include/linux/perfmon.h:480:
+	return (struct pfm_arch_context *)(c+1);
 	                                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#527: FILE: include/linux/perfmon.h:486:
+	BUG_ON(task && task->pid == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: include/linux/perfmon.h:549:
+int __pfm_create_evtsets(struct pfm_context *ctx, struct pfarg_setdesc *req,
+			int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: include/linux/perfmon.h:609:
+void pfm_switch_sets(struct pfm_context *ctx,
+		    struct pfm_event_set *new_set,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: include/linux/perfmon.h:615:
+int pfm_ovfl_notify_user(struct pfm_context *ctx,
+			struct pfm_event_set *set,

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: include/linux/perfmon.h:616:
+^I     ^I^Iunsigned long ip);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#657: FILE: include/linux/perfmon.h:616:
+^I     ^I^Iunsigned long ip);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#664: FILE: include/linux/perfmon.h:623:
+#define PFM_SET_REMAP_BASE		(PFM_SET_REMAP_OFFS*PAGE_SIZE)
                           		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#665: FILE: include/linux/perfmon.h:624:
+#define PFM_SET_REMAP_OFFS_MAX		(PFM_SET_REMAP_OFFS+\
                               		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#666: FILE: include/linux/perfmon.h:625:
+					 PFM_MAX_NUM_SETS*PFM_SET_REMAP_SCALAR)
 					                 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#671: FILE: include/linux/perfmon.h:630:
+^Iu64 ovfl_intr_all_count; ^I/* total ovfl interrupts */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#697: FILE: include/linux/perfmon.h:656:
+};
+#define to_stats(n) container_of(n, struct pfm_stats, kobj)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#731: FILE: include/linux/perfmon.h:690:
+#define PFM_MAX_ARG_COUNT(m) (INT_MAX/sizeof(*(m)))
                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#770: FILE: include/linux/perfmon.h:729:
+void __pfm_init_percpu (void *dummy);

WARNING:LINE_SPACING: Missing a blank line after declarations
#803: FILE: include/linux/perfmon.h:762:
+	unsigned long info;
+	info = __get_cpu_var(pfm_syst_info);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#826: FILE: include/linux/perfmon.h:785:
+#define pfm_exit_thread(_t)  ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#827: FILE: include/linux/perfmon.h:786:
+#define pfm_handle_work(_t)    ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#829: FILE: include/linux/perfmon.h:788:
+#define pfm_ctxsw(_p, _t)     ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#830: FILE: include/linux/perfmon.h:789:
+#define pfm_handle_switch_timeout()  ^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#832: FILE: include/linux/perfmon.h:791:
+#define pfm_release_dbregs(_t) ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#833: FILE: include/linux/perfmon.h:792:
+#define pfm_use_dbregs(_t)     ^I^I(0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#844: FILE: perfmon/perfmon.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#866: FILE: perfmon/perfmon.c:23:
+ * ^Ihttp://www.hpl.hp.com/research/linux/perfmon$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#878: FILE: perfmon/perfmon.c:35:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#879: FILE: perfmon/perfmon.c:36:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#935: FILE: perfmon/perfmon.c:92:
+	return ctx->msgq+next;
 	                ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#963: FILE: perfmon/perfmon.c:120:
+^I * ^I- PMU description table$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#964: FILE: perfmon/perfmon.c:121:
+^I * ^I- sampling format$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#974: FILE: perfmon/perfmon.c:131:
+static int pfm_setup_smpl_fmt(struct pfm_smpl_fmt *fmt, void *fmt_arg,
+				struct pfm_context *ctx, u32 ctx_flags,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#975: FILE: perfmon/perfmon.c:132:
+				int mode, struct file *filp)
 				                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1006: FILE: perfmon/perfmon.c:163:
+			ret = pfm_smpl_buffer_alloc_compat(ctx, size, filp);
 			                                              ^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1012: FILE: perfmon/perfmon.c:169:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1033: FILE: perfmon/perfmon.c:190:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1134: FILE: perfmon/perfmon.c:291:
+	PFM_DBG_ovfl("%s r_pmds=0x%llx not_masked=%d",
+		reset_mode == PFM_PMD_RESET_LONG ? "long" : "short",

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1162: FILE: perfmon/perfmon.c:319:
+			set->view->set_pmds[i]= val;
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: perfmon/perfmon.c:330:
+			PFM_DBG_ovfl("set%u pmd%u sval=0x%llx",
+					set->id,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1216: FILE: perfmon/perfmon.c:373:
+	if (hdr) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1219: FILE: perfmon/perfmon.c:376:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1220: FILE: perfmon/perfmon.c:377:
+		rst_ctrl= PFM_OVFL_CTRL_RESET;
 		        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1249: FILE: perfmon/perfmon.c:406:
+			int nn;
+			nn = bitmap_weight(ulp(set->reset_pmds), pfm_pmu_conf->max_pmd);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1282: FILE: perfmon/perfmon.c:439:
+^I * ^Iif not current task and due to lazy, state may$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1283: FILE: perfmon/perfmon.c:440:
+^I * ^Istill be live$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: perfmon/perfmon.c:480:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1323: FILE: perfmon/perfmon.c:480:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: perfmon/perfmon.c:480:
+ ^I^I^I}$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx"
#1386: FILE: perfmon/perfmon.c:543:
+	if (ctx == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1391: FILE: perfmon/perfmon.c:548:
+	BUG_ON(ctx->flags.system);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1505: FILE: perfmon/perfmon.c:662:
+	kill_fasync (&ctx->async_queue, SIGIO, POLL_IN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1518: FILE: perfmon/perfmon.c:675:
+int pfm_ovfl_notify_user(struct pfm_context *ctx,
+			struct pfm_event_set *set,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1519: FILE: perfmon/perfmon.c:676:
+^I     ^I^Iunsigned long ip)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1519: FILE: perfmon/perfmon.c:676:
+^I     ^I^Iunsigned long ip)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg"
#1529: FILE: perfmon/perfmon.c:686:
+		if (msg == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg"
#1583: FILE: perfmon/perfmon.c:740:
+	if (msg == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1584: FILE: perfmon/perfmon.c:741:
+		PFM_ERR("%s no more msgs", __FUNCTION__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1612: FILE: perfmon/perfmon.c:769:
+	BUG_ON(ctx->flags.system);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1633: FILE: perfmon/perfmon.c:790:
+		BUG_ON(ctx->state != PFM_CTX_LOADED);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1692: FILE: perfmon/perfmon.c:849:
+static struct notifier_block pfm_cpu_notifier ={
                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1714: FILE: perfmon/perfmon.c:871:
+	pfm_ctx_cachep = kmem_cache_create("pfm_context",
+				   sizeof(struct pfm_context)+PFM_ARCH_CTX_SIZE,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1714: FILE: perfmon/perfmon.c:871:
+				   sizeof(struct pfm_context)+PFM_ARCH_CTX_SIZE,
 				                             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pfm_ctx_cachep"
#1716: FILE: perfmon/perfmon.c:873:
+	if (pfm_ctx_cachep == NULL) {

WARNING:TYPO_SPELLING: 'Wehn' may be misspelled - perhaps 'When'?
#1762: FILE: perfmon/perfmon.c:919:
+ * the initial event set to activate. Wehn missing, the last active
                                       ^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1788: FILE: perfmon/perfmon.c:945:
+	old_set = new_set = ctx->active_set;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task"
#1793: FILE: perfmon/perfmon.c:950:
+	if (task == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_set"
#1806: FILE: perfmon/perfmon.c:963:
+		if (new_set == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task"
#1918: FILE: perfmon/perfmon.c:1075:
+	if (task == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1968: FILE: perfmon/perfmon.c:1125:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!set"
#2085: FILE: perfmon/perfmon.c:1242:
+	if (set == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "old"
#2115: FILE: perfmon/perfmon.c:1272:
+		if (old != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#2117: FILE: perfmon/perfmon.c:1274:
+			PFM_DBG("load_pid=%d has a context "
+				"old=%p new=%p cur=%p",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#2169: FILE: perfmon/perfmon.c:1326:
+		struct pfm_context *ctxp;
+		ctxp = __get_cpu_var(pmu_ctx);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2177: FILE: perfmon/perfmon.c:1334:
+^I ^I * we activate switch timeout callbacks to pfm_handle_switch_timeout()$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2177: FILE: perfmon/perfmon.c:1334:
+^I ^I * we activate switch timeout callbacks to pfm_handle_switch_timeout()$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2178: FILE: perfmon/perfmon.c:1335:
+^I ^I * even though the interface guarantees monitoring is inactive at$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2178: FILE: perfmon/perfmon.c:1335:
+^I ^I * even though the interface guarantees monitoring is inactive at$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2179: FILE: perfmon/perfmon.c:1336:
+^I ^I * this point. The reason is that on some architectures (e.g., IA-64)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2179: FILE: perfmon/perfmon.c:1336:
+^I ^I * this point. The reason is that on some architectures (e.g., IA-64)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2180: FILE: perfmon/perfmon.c:1337:
+^I ^I * it is possible to start monitoring directly from user level without$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2180: FILE: perfmon/perfmon.c:1337:
+^I ^I * it is possible to start monitoring directly from user level without$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2181: FILE: perfmon/perfmon.c:1338:
+^I ^I * the kernel knowing. In that case, the kernel would not be able to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2181: FILE: perfmon/perfmon.c:1338:
+^I ^I * the kernel knowing. In that case, the kernel would not be able to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2182: FILE: perfmon/perfmon.c:1339:
+^I ^I * active switch timeout when monitoring starts$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2182: FILE: perfmon/perfmon.c:1339:
+^I ^I * active switch timeout when monitoring starts$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2183: FILE: perfmon/perfmon.c:1340:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2183: FILE: perfmon/perfmon.c:1340:
+^I ^I */$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2217: FILE: perfmon/perfmon.c:1374:
+	ctx->msgq_head = ctx->msgq_tail = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2265: FILE: perfmon/perfmon.c:1422:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#2338: FILE: perfmon/perfmon.c:1495:
+	if (  (ctx_flags & PFM_FL_SYSTEM_WIDE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2339: FILE: perfmon/perfmon.c:1496:
+	if (  (ctx_flags & PFM_FL_SYSTEM_WIDE)
+	   && pfm_controls.sys_group != PFM_GROUP_PERM_ANY

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2340: FILE: perfmon/perfmon.c:1497:
+	   && pfm_controls.sys_group != PFM_GROUP_PERM_ANY
+	   && !in_group_p(pfm_controls.sys_group)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2344: FILE: perfmon/perfmon.c:1501:
+	} else if (pfm_controls.task_group != PFM_GROUP_PERM_ANY
+		   && !in_group_p(pfm_controls.task_group)) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2361: FILE: perfmon/perfmon.c:1518:
+ * ^I>=0: the file descriptor to identify the context$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2362: FILE: perfmon/perfmon.c:1519:
+ * ^I<0 : the error code$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2372: FILE: perfmon/perfmon.c:1529:
+	struct file *filp = NULL;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2408: FILE: perfmon/perfmon.c:1565:
+	fd = pfm_alloc_fd(&filp);
 	                   ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2422: FILE: perfmon/perfmon.c:1579:
+	ctx->flags.system = (ctx_flags & PFM_FL_SYSTEM_WIDE) ? 1: 0;
 	                                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2423: FILE: perfmon/perfmon.c:1580:
+	ctx->flags.no_msg = (ctx_flags & PFM_FL_OVFL_NO_MSG) ? 1: 0;
 	                                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2424: FILE: perfmon/perfmon.c:1581:
+	ctx->flags.mapset = (ctx_flags & PFM_FL_MAP_SETS) ? 1: 0;
 	                                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pfm_find_set"
#2442: FILE: perfmon/perfmon.c:1599:
+	if (pfm_find_set(ctx, 0, 1) == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2454: FILE: perfmon/perfmon.c:1611:
+					 mode, filp);
 					       ^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2470: FILE: perfmon/perfmon.c:1627:
+	ctx->msgq_head = ctx->msgq_tail = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#2474: FILE: perfmon/perfmon.c:1631:
+	PFM_DBG("ctx=%p flags=0x%x system=%d notify_block=%d no_msg=%d"
+		" use_fmt=%d remap=%d ctx_fd=%d mode=%d",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fmt"
#2480: FILE: perfmon/perfmon.c:1637:
+		fmt != NULL,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2491: FILE: perfmon/perfmon.c:1648:
+	fd_install(fd, filp);
 	               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2496: FILE: perfmon/perfmon.c:1653:
+	put_filp(filp);
 	         ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx"
#2524: FILE: perfmon/perfmon.c:1681:
+	if (ctx == NULL)

WARNING:TYPO_SPELLING: 'bookeeping' may be misspelled - perhaps 'bookkeeping'?
#2534: FILE: perfmon/perfmon.c:1691:
+	 * all the bookeeping of saving values and updating duration
 	           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2588: FILE: Documentation/perfmon2.txt:31:
+   hardware limitations in the number of available counters or in how events can be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2605: FILE: Documentation/perfmon2.txt:48:
+   sampling buffer is full. It is possible to use poll/select on the descriptor $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2622: FILE: Documentation/perfmon2.txt:65:
+    $

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#2624: FILE: Documentation/perfmon2.txt:67:
+    non Itanium processors. Yet is is not on the OProfile web site and it is

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2656: FILE: Documentation/perfmon2.txt:99:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2661: FILE: Documentation/perfmon2.txt:104:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2666: FILE: Documentation/perfmon2.txt:109:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2671: FILE: Documentation/perfmon2.txt:114:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2721: FILE: Documentation/perfmon2.txt:164:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2779: FILE: Documentation/perfmon2.txt:222:
+   ^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 36 errors, 81 warnings, 61 checks, 2751 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
