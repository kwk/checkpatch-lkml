WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: arch/x86/kernel/uv_hwperf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#103: FILE: arch/x86/kernel/uv_hwperf.c:38:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#104: FILE: arch/x86/kernel/uv_hwperf.c:39:
+#include <asm/topology.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#105: FILE: arch/x86/kernel/uv_hwperf.c:40:
+#include <asm/uaccess.h>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!objbuf"
#133: FILE: arch/x86/kernel/uv_hwperf.c:68:
+	if (objbuf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#134: FILE: arch/x86/kernel/uv_hwperf.c:69:
+		printk(KERN_ERR "uv_hwperf_enum_objects: vmalloc(%d) failed\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'uv_hwperf_enum_objects', this function's name, in a string
#134: FILE: arch/x86/kernel/uv_hwperf.c:69:
+		printk(KERN_ERR "uv_hwperf_enum_objects: vmalloc(%d) failed\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: arch/x86/kernel/uv_hwperf.c:70:
+		printk(KERN_ERR "uv_hwperf_enum_objects: vmalloc(%d) failed\n",
+			 (int)sz);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/x86/kernel/uv_hwperf.c:76:
+	e = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_ENUM_OBJECTS, 0,
+		sz, (u64 *)objbuf, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: arch/x86/kernel/uv_hwperf.c:89:
+static int uv_hwperf_location_to_bpos(char *location,
+	int *rack, int *slot, int *blade)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#220: FILE: arch/x86/kernel/uv_hwperf.c:155:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/x86/kernel/uv_hwperf.c:162:
+static int uv_hwperf_generic_ordinal(struct uv_hwperf_object_info *obj,
+				struct uv_hwperf_object_info *objs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/x86/kernel/uv_hwperf.c:183:
+static const char *uv_hwperf_get_slabname(struct uv_hwperf_object_info *obj,
+			struct uv_hwperf_object_info *objs, int *ordinal)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/x86/kernel/uv_hwperf.c:233:
+uv_hwperf_findobj_id(struct uv_hwperf_object_info *objbuf,
+	int nobj, int id)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#310: FILE: arch/x86/kernel/uv_hwperf.c:245:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: arch/x86/kernel/uv_hwperf.c:297:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: arch/x86/kernel/uv_hwperf.c:299:
+	e = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_ENUM_PORTS,
+		nodeobj->id, sz, (u64 *)&ptdata, NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: arch/x86/kernel/uv_hwperf.c:331:
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: arch/x86/kernel/uv_hwperf.c:333:
+		e = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_ENUM_PORTS,
+				router->id, sz, (u64 *)&ptdata, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: arch/x86/kernel/uv_hwperf.c:340:
+			dest = uv_hwperf_findobj_id(objbuf, nobj,
+				ptdata[j].conn_id);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#481: FILE: arch/x86/kernel/uv_hwperf.c:416:
+		seq_printf(s, "# uv_topology version 1\n");

WARNING:SPLIT_STRING: quoted string split across lines
#483: FILE: arch/x86/kernel/uv_hwperf.c:418:
+		seq_printf(s, "# objtype ordinal location partition"
+			" [attribute value [, ...]]\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: arch/x86/kernel/uv_hwperf.c:421:
+		if (uv_bios_get_sn_info(0, &uv_type, &partid, &coher,
+			&region_size, &system_serial_number))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#487: FILE: arch/x86/kernel/uv_hwperf.c:422:
+			BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#489: FILE: arch/x86/kernel/uv_hwperf.c:424:
+		seq_printf(s, "partition %ld %s local "
+			"uvtype %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#490: FILE: arch/x86/kernel/uv_hwperf.c:425:
+			"uvtype %s, "
+			"coherency_domain %ld, "

WARNING:SPLIT_STRING: quoted string split across lines
#491: FILE: arch/x86/kernel/uv_hwperf.c:426:
+			"coherency_domain %ld, "
+			"region_size %ld, "

WARNING:SPLIT_STRING: quoted string split across lines
#492: FILE: arch/x86/kernel/uv_hwperf.c:427:
+			"region_size %ld, "
+			"system_serial_number %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: arch/x86/kernel/uv_hwperf.c:447:
+	seq_printf(s, "%s %d %s %s asic %s", slabname, ordinal, obj->location,
+		obj->uv_hwp_this_part ? "local" : "shared", obj->name);

CHECK:BRACES: Unbalanced braces around else statement
#517: FILE: arch/x86/kernel/uv_hwperf.c:452:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: arch/x86/kernel/uv_hwperf.c:459:
+		if (uv_hwperf_get_nearest_node_objdata(objs, uv_hwperf_obj_cnt,
+			ordinal, &near_mem, &near_cpu) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: arch/x86/kernel/uv_hwperf.c:468:
+				seq_printf(s, i ? ":%d" : ", dist %d",
+					node_distance(ordinal, i));

WARNING:SPLIT_STRING: quoted string split across lines
#551: FILE: arch/x86/kernel/uv_hwperf.c:486:
+					seq_printf(s, "cpu %d %s%d local"
+						" freq %uMHz, arch UV",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#558: FILE: arch/x86/kernel/uv_hwperf.c:493:
+							node_distance(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptdata"
#574: FILE: arch/x86/kernel/uv_hwperf.c:509:
+		if (ptdata == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: arch/x86/kernel/uv_hwperf.c:512:
+		e = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_ENUM_PORTS,
+				obj->id, sz, (u64 *)ptdata, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: arch/x86/kernel/uv_hwperf.c:524:
+			seq_printf(s, "numalink %d %s-%d",
+				ordinal+pt, obj->location, ptdata[pt].port);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#589: FILE: arch/x86/kernel/uv_hwperf.c:524:
+				ordinal+pt, obj->location, ptdata[pt].port);
 				       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#594: FILE: arch/x86/kernel/uv_hwperf.c:529:
+				seq_puts(s, " local endpoint disconnected"
+					    ", protocol unknown\n");

WARNING:TYPO_SPELLING: 'partiton' may be misspelled - perhaps 'partition'?
#602: FILE: arch/x86/kernel/uv_hwperf.c:537:
+				/* both ends of the link in foreign partiton */
 				                                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: arch/x86/kernel/uv_hwperf.c:544:
+			seq_printf(s, " endpoint %s-%d, protocol %s\n",
+				p->location, ptdata[pt].conn_port,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#618: FILE: arch/x86/kernel/uv_hwperf.c:553:
+static void *uv_topology_start(struct seq_file *s, loff_t * pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#628: FILE: arch/x86/kernel/uv_hwperf.c:563:
+static void *uv_topology_next(struct seq_file *s, void *v, loff_t * pos)

WARNING:RETURN_VOID: void function return statements are not generally useful
#637: FILE: arch/x86/kernel/uv_hwperf.c:572:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: arch/x86/kernel/uv_hwperf.c:598:
+	r = uv_bios_hwperf(uv_hwperf_master_nasid, op_info->op, op_info->a->arg,
+			 op_info->a->sz, (u64 *)op_info->p, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: arch/x86/kernel/uv_hwperf.c:629:
+			smp_call_function_single(cpu, uv_hwperf_call_bios,
+				op_info, 1);

CHECK:BRACES: Unbalanced braces around else statement
#696: FILE: arch/x86/kernel/uv_hwperf.c:631:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: arch/x86/kernel/uv_hwperf.c:715:
+	r = copy_from_user(&a, (const void __user *)arg,
+		sizeof(struct uv_hwperf_ioctl_args));

CHECK:SPACING: No space is necessary after a cast
#811: FILE: arch/x86/kernel/uv_hwperf.c:746:
+			*(u64 *) p =

CHECK:SPACING: No space is necessary after a cast
#812: FILE: arch/x86/kernel/uv_hwperf.c:747:
+				(u64) num_online_cpus() *

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#829: FILE: arch/x86/kernel/uv_hwperf.c:764:
+						if (node != cpu_to_node(j))

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#835: FILE: arch/x86/kernel/uv_hwperf.c:770:
+						if (!freq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: arch/x86/kernel/uv_hwperf.c:927:
+	biosr = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_GET_HEAPSIZE,
+				0, (u64)sizeof(u64), (u64 *)&v, NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uv_hwperf_biosheap"
#999: FILE: arch/x86/kernel/uv_hwperf.c:934:
+	if (uv_hwperf_biosheap == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: arch/x86/kernel/uv_hwperf.c:939:
+	biosr = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_INSTALL_HEAP,
+				0, v, (u64 *)uv_hwperf_biosheap, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1011: FILE: arch/x86/kernel/uv_hwperf.c:946:
+	biosr = uv_bios_hwperf(uv_hwperf_master_nasid, UV_HWPERF_OBJECT_COUNT,
+				0, sizeof(u64), (u64 *)&v, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1045: FILE: arch/x86/kernel/uv_hwperf.c:980:
+		printk(KERN_ERR "unable to create /proc/sgi_uv/topology\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1102: FILE: arch/x86/kernel/uv_hwperf.c:1037:
+		printk(KERN_ERR "uv_hwperf_device_register: failed to "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'uv_hwperf_device_register', this function's name, in a string
#1102: FILE: arch/x86/kernel/uv_hwperf.c:1037:
+		printk(KERN_ERR "uv_hwperf_device_register: failed to "

WARNING:SPLIT_STRING: quoted string split across lines
#1103: FILE: arch/x86/kernel/uv_hwperf.c:1038:
+		printk(KERN_ERR "uv_hwperf_device_register: failed to "
+		"register misc device for \"%s\"\n", uv_hwperf_dev.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1119: FILE: arch/x86/kernel/uv_hwperf.c:1054:
+		printk(KERN_ERR "uv_hwperf_device_deregister: failed to "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'uv_hwperf_device_deregister', this function's name, in a string
#1119: FILE: arch/x86/kernel/uv_hwperf.c:1054:
+		printk(KERN_ERR "uv_hwperf_device_deregister: failed to "

WARNING:SPLIT_STRING: quoted string split across lines
#1120: FILE: arch/x86/kernel/uv_hwperf.c:1055:
+		printk(KERN_ERR "uv_hwperf_device_deregister: failed to "
+		"deregister misc device \"%s\"\n", uv_hwperf_dev.name);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1124: FILE: arch/x86/kernel/uv_hwperf.c:1059:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1166: FILE: include/asm-x86/uv/hwperf.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1212: FILE: include/asm-x86/uv/hwperf.h:47:
+#define UV_HWPERF_IS_NODE(x)		((x) && strstr((x)->name, "Hub"))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1213: FILE: include/asm-x86/uv/hwperf.h:48:
+#define UV_HWPERF_IS_IONODE(x)		((x) && strstr((x)->name, "IORiser"))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1214: FILE: include/asm-x86/uv/hwperf.h:49:
+#define UV_HWPERF_IS_NL5ROUTER(x)	((x) && strstr((x)->name, "NL5Router"))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1215: FILE: include/asm-x86/uv/hwperf.h:50:
+#define UV_HWPERF_IS_OLDROUTER(x)	((x) && strstr((x)->name, "Router"))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1217: FILE: include/asm-x86/uv/hwperf.h:52:
+#define UV_HWPERF_FOREIGN(x)		((x) && !(x)->uv_hwp_this_part && \
+					!(x)->uv_hwp_is_shared)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1219: FILE: include/asm-x86/uv/hwperf.h:54:
+#define UV_HWPERF_SAME_OBJTYPE(x, y)	((UV_HWPERF_IS_NODE(x) && \
+					 UV_HWPERF_IS_NODE(y)) || \
+					(UV_HWPERF_IS_IONODE(x) && \
+					 UV_HWPERF_IS_IONODE(y)) || \
+					(UV_HWPERF_IS_ROUTER(x) && \
+					 UV_HWPERF_IS_ROUTER(y)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#1219: FILE: include/asm-x86/uv/hwperf.h:54:
+#define UV_HWPERF_SAME_OBJTYPE(x, y)	((UV_HWPERF_IS_NODE(x) && \
+					 UV_HWPERF_IS_NODE(y)) || \
+					(UV_HWPERF_IS_IONODE(x) && \
+					 UV_HWPERF_IS_IONODE(y)) || \
+					(UV_HWPERF_IS_ROUTER(x) && \
+					 UV_HWPERF_IS_ROUTER(y)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1296: FILE: include/asm-x86/uv/hwperf.h:131:
+#define UV_HWPERF_OBJECT_COUNT		(10|UV_HWPERF_OP_MEM_COPYOUT)
                               		   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1308: FILE: include/asm-x86/uv/hwperf.h:143:
+#define UV_HWPERF_OBJECT_DISTANCE	(11|UV_HWPERF_OP_MEM_COPYOUT)
                                  	   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1317: FILE: include/asm-x86/uv/hwperf.h:152:
+#define UV_HWPERF_ENUM_OBJECTS		(12|UV_HWPERF_OP_MEM_COPYOUT)
                               		   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1326: FILE: include/asm-x86/uv/hwperf.h:161:
+#define UV_HWPERF_ENUM_PORTS		(13|UV_HWPERF_OP_MEM_COPYOUT)
                             		   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1338: FILE: include/asm-x86/uv/hwperf.h:173:
+#define UV_HWPERF_SET_MMRS		(14|UV_HWPERF_OP_MEM_COPYIN)
                           		   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1339: FILE: include/asm-x86/uv/hwperf.h:174:
+#define UV_HWPERF_GET_MMRS		(15|UV_HWPERF_OP_MEM_COPYOUT| \
                           		   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1339: FILE: include/asm-x86/uv/hwperf.h:174:
+#define UV_HWPERF_GET_MMRS		(15|UV_HWPERF_OP_MEM_COPYOUT| \
                           		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1379: FILE: include/asm-x86/uv/hwperf.h:214:
+#define UV_HWPERF_GET_CPU_INFO		(100|UV_HWPERF_OP_MEM_COPYOUT)
                               		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1387: FILE: include/asm-x86/uv/hwperf.h:222:
+#define UV_HWPERF_GET_OBJ_NODE		(101|UV_HWPERF_OP_MEM_COPYOUT)
                               		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1395: FILE: include/asm-x86/uv/hwperf.h:230:
+#define UV_HWPERF_GET_NODE_NASID	(102|UV_HWPERF_OP_MEM_COPYOUT)
                                 	    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1403: FILE: include/asm-x86/uv/hwperf.h:238:
+extern int uv_hwperf_get_nearest_node(short node, short *near_mem,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1404: FILE: include/asm-x86/uv/hwperf.h:239:
+extern int uv_hwperf_get_nearest_node(short node, short *near_mem,
+					short *near_cpu);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1426: FILE: include/asm-x86/uv/geo.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1438: FILE: include/asm-x86/uv/geo.h:13:
+/* The geoid_s implementation below is based loosely on the pcfg_t
+   implementation in sys/SN/promcfg.h. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1438: FILE: include/asm-x86/uv/geo.h:13:
+   implementation in sys/SN/promcfg.h. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1444: FILE: include/asm-x86/uv/geo.h:19:
+#define GEOID_SIZE	8	/* Would 16 be better?  The size can
+				   be different on different platforms. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1444: FILE: include/asm-x86/uv/geo.h:19:
+				   be different on different platforms. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: include/asm-x86/uv/geo.h:23:
+    unsigned int rack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: include/asm-x86/uv/geo.h:24:
+    unsigned char type;^I^I/* What type of h/w is named by this geoid_s */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: include/asm-x86/uv/geo.h:25:
+    unsigned char slot:4;^I/* slot is IRU */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: include/asm-x86/uv/geo.h:26:
+    unsigned char blade:4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: include/asm-x86/uv/geo.h:31:
+    struct geo_common_s common;^I^I/* No additional fields needed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: include/asm-x86/uv/geo.h:35:
+    struct geo_common_s common;^I^I/* No additional fields needed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1464: FILE: include/asm-x86/uv/geo.h:39:
+    struct geo_common_s common;^I^I/* No additional fields needed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: include/asm-x86/uv/geo.h:43:
+    struct geo_iocntl_s common;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1469: FILE: include/asm-x86/uv/geo.h:44:
+    char bus;^I^I^I^I/* Bus/widget number */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: include/asm-x86/uv/geo.h:45:
+    char slot;^I^I^I^I/* PCI slot number */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1475: FILE: include/asm-x86/uv/geo.h:50:
+    struct geo_node_s node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1476: FILE: include/asm-x86/uv/geo.h:51:
+    char slice;^I^I^I^I/* Which CPU on the node */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: include/asm-x86/uv/geo.h:55:
+    struct geo_node_s node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: include/asm-x86/uv/geo.h:56:
+    char membus;^I^I^I/* The memory bus on the node */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1482: FILE: include/asm-x86/uv/geo.h:57:
+    char memslot;^I^I^I/* The memory slot on the bus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: include/asm-x86/uv/geo.h:61:
+    struct geo_common_s common;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: include/asm-x86/uv/geo.h:62:
+    struct geo_node_s node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: include/asm-x86/uv/geo.h:63:
+    struct geo_iocntl_s iocntl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: include/asm-x86/uv/geo.h:64:
+    struct geo_pcicard_s pcicard;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: include/asm-x86/uv/geo.h:65:
+    struct geo_rtr_s rtr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1491: FILE: include/asm-x86/uv/geo.h:66:
+    struct geo_cpu_s cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: include/asm-x86/uv/geo.h:67:
+    struct geo_mem_s mem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: include/asm-x86/uv/geo.h:68:
+    char padsize[GEOID_SIZE];$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1499: FILE: include/asm-x86/uv/geo.h:74:
+#define GEO_MAX_LEN	48	/* max. formatted length, plus some pad:
+				   module/001c07/slab/5/node/memory/2/slot/4 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1499: FILE: include/asm-x86/uv/geo.h:74:
+				   module/001c07/slab/5/node/memory/2/slot/4 */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1509: FILE: include/asm-x86/uv/geo.h:84:
+#define GEO_TYPE_MAX		(GEO_TYPE_MEM+1)
                     		             ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1555: FILE: arch/x86/Kconfig:400:
+config UV_HWPERF
+	tristate "SGI UV hwperf: hub counters and topology"
+	help
+	If you have an SGI UV system and you want to enable access to hub
+	counters and topology, say Y here, otherwise say N.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 59 warnings, 55 checks, 1490 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
