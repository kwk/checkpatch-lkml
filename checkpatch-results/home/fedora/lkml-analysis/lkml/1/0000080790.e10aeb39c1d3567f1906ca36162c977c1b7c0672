CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/biotrack.h:52:
+extern int blkio_cgroup_register_ioband(const struct ioband_cgroup_ops *ops);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#92: FILE: mm/biotrack.c:52:
 };
+static DEFINE_MUTEX(ioband_ops_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#93: FILE: mm/biotrack.c:53:
+static const struct ioband_cgroup_ops *ioband_ops = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: mm/biotrack.c:306:
+static int blkio_devs_read(struct cgroup *cgrp, struct cftype *cft,
+							struct seq_file *m)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: mm/biotrack.c:317:
+static int blkio_devs_write(struct cgroup *cgrp, struct cftype *cft,
+							const char *buffer)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: mm/biotrack.c:340:
+static int blkio_settings_read(struct cgroup *cgrp, struct cftype *cft,
+							struct seq_file *m)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: mm/biotrack.c:357:
+static int blkio_settings_write(struct cgroup *cgrp, struct cftype *cft,
+							const char *buffer)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/md/dm-ioband-policy.c:348:
+	seq_printf(m, " token=%d carryover=%d",
+				dp->g_token_bucket, dp->g_carryover);

WARNING:TYPO_SPELLING: 'spacified' may be misspelled - perhaps 'specified'?
#291: FILE: drivers/md/dm-ioband-policy.c:386:
+ * g_show_group   : Show the configuration of the spacified ioband group.
                                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'spacified' may be misspelled - perhaps 'specified'?
#343: FILE: drivers/md/dm-ioband-rangebw.c:640:
+ * g_show_group   : Show the configuration of the spacified ioband group.
                                                   ^^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#390: FILE: drivers/md/dm-ioband-ctl.c:277:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#501: FILE: drivers/md/dm-ioband-ctl.c:1399:
+			if (cgrp == cgrp->top_cgroup)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#503: FILE: drivers/md/dm-ioband-ctl.c:1401:
+			else {

WARNING:SPACING: Unnecessary space before function pointer arguments
#631: FILE: drivers/md/dm-ioband.h:63:
+	void (*g_show_device) (struct seq_file *, struct ioband_device *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#631: FILE: drivers/md/dm-ioband.h:63:
+	void (*g_show_device) (struct seq_file *, struct ioband_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_device *' should also have an identifier name
#631: FILE: drivers/md/dm-ioband.h:63:
+	void (*g_show_device) (struct seq_file *, struct ioband_device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#632: FILE: drivers/md/dm-ioband.h:64:
+	void (*g_show_group) (struct seq_file *, struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#632: FILE: drivers/md/dm-ioband.h:64:
+	void (*g_show_group) (struct seq_file *, struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#632: FILE: drivers/md/dm-ioband.h:64:
+	void (*g_show_group) (struct seq_file *, struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#651: FILE: drivers/md/dm-ioband.h:160:
+	void (*show_device)(struct seq_file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#652: FILE: drivers/md/dm-ioband.h:161:
+	int (*config_device)(int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#652: FILE: drivers/md/dm-ioband.h:161:
+	int (*config_device)(int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#653: FILE: drivers/md/dm-ioband.h:162:
+	void (*show_group)(struct seq_file *, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blkio_cgroup *' should also have an identifier name
#653: FILE: drivers/md/dm-ioband.h:162:
+	void (*show_group)(struct seq_file *, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#653: FILE: drivers/md/dm-ioband.h:162:
+	void (*show_group)(struct seq_file *, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#654: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#654: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blkio_cgroup *' should also have an identifier name
#654: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#654: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, struct blkio_cgroup *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#655: FILE: drivers/md/dm-ioband.h:164:
+	void (*remove_group)(int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000080790.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 19 warnings, 10 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000080790.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
