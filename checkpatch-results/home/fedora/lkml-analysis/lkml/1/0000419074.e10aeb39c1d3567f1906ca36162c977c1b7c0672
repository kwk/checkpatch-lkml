WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
address, port number and so on) and check current configuration of netconsole.

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#127: FILE: drivers/net/netconsole.c:126:
+	nt->np.local_port = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: drivers/net/netconsole.c:132:
+static ssize_t store_remote_port(struct netconsole_target *nt, const char *buf,
+				size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#135: FILE: drivers/net/netconsole.c:134:
+	nt->np.remote_port = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/net/netconsole.c:156:
+static ssize_t store_remote_mac(struct netconsole_target *nt, const char *buf,
+			       size_t count)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#160: FILE: drivers/net/netconsole.c:159:
+	unsigned char input_mac[ETH_ALEN] =
+		{0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#164: FILE: drivers/net/netconsole.c:163:
+	input_mac[i++] = simple_strtol(cur, NULL, 16);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#167: FILE: drivers/net/netconsole.c:166:
+		input_mac[i++] = simple_strtol(cur, NULL, 16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct netconsole_target*' should also have an identifier name
#178: FILE: drivers/net/netconsole.c:177:
+	ssize_t (*show)(struct netconsole_target*, char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#178: FILE: drivers/net/netconsole.c:177:
+	ssize_t (*show)(struct netconsole_target*, char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct netconsole_target*' should also have an identifier name
#179: FILE: drivers/net/netconsole.c:178:
+	ssize_t (*store)(struct netconsole_target*, const char*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char*' should also have an identifier name
#179: FILE: drivers/net/netconsole.c:178:
+	ssize_t (*store)(struct netconsole_target*, const char*,

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/net/netconsole.c:184:
+                           __ATTR(_name, _mode, _show, _store)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/net/netconsole.c:184:
+                           __ATTR(_name, _mode, _show, _store)$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#187: FILE: drivers/net/netconsole.c:186:
+static NETCON_CLASS_ATTR(id, S_IRUGO, show_id, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#188: FILE: drivers/net/netconsole.c:187:
+static NETCON_CLASS_ATTR(local_port, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#190: FILE: drivers/net/netconsole.c:189:
+static NETCON_CLASS_ATTR(remote_port, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#192: FILE: drivers/net/netconsole.c:191:
+static NETCON_CLASS_ATTR(local_ip, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#194: FILE: drivers/net/netconsole.c:193:
+static NETCON_CLASS_ATTR(remote_ip, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#196: FILE: drivers/net/netconsole.c:195:
+static NETCON_CLASS_ATTR(local_mac, S_IRUGO, show_local_mac, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#197: FILE: drivers/net/netconsole.c:196:
+static NETCON_CLASS_ATTR(remote_mac, S_IRUGO | S_IWUSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/net/netconsole.c:211:
+static ssize_t show_target_attr(struct kobject *kobj,
+				    struct attribute *attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: drivers/net/netconsole.c:216:
+	struct netconsole_target * nt =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/net/netconsole.c:225:
+static ssize_t store_target_attr(struct kobject *kobj,
+				     struct attribute *attr,

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#254: FILE: drivers/net/netconsole.c:258:
+static struct sysfs_ops target_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: braces {} should be used on all arms of this statement
#304: FILE: drivers/net/netconsole.c:404:
+	if (misc_register(&netconsole_miscdev)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: drivers/net/netconsole.c:405:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#307: FILE: drivers/net/netconsole.c:407:
+		       "netconsole: failed to register misc device for "
+		       "name = %s, id = %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#310: FILE: drivers/net/netconsole.c:410:
+		return -EIO;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: drivers/net/netconsole.c:410:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 21 warnings, 6 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
