CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#292: FILE: arch/x86/kernel/setup.c:165:
+		Dprintk(KERN_INFO "Setting node for non-present cpu %d\n", cpu);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#316: FILE: arch/x86/kernel/setup.c:189:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpu_to_node', this function's name, in a string
#317: FILE: arch/x86/kernel/setup.c:190:
+			"cpu_to_node(%d): usage too early!\n", cpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#331: FILE: arch/x86/kernel/setup.c:204:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'early_cpu_to_node', this function's name, in a string
#332: FILE: arch/x86/kernel/setup.c:205:
+			"early_cpu_to_node(%d): no per_cpu area!\n", cpu);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#506: FILE: arch/x86/mm/numa_64.c:637:
+	BUG_ON(cpu_to_apicid == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_to_apicid"
#506: FILE: arch/x86/mm/numa_64.c:637:
+	BUG_ON(cpu_to_apicid == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#606: FILE: include/asm-x86/numa_64.h:32:
+extern void __cpuinit numa_set_node(int cpu, int node);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#607: FILE: include/asm-x86/numa_64.h:33:
+extern void __cpuinit numa_clear_node(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#608: FILE: include/asm-x86/numa_64.h:34:
+extern void __cpuinit numa_add_cpu(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#609: FILE: include/asm-x86/numa_64.h:35:
+extern void __cpuinit numa_remove_cpu(int cpu);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_initvalue' - possible side-effects?
#636: FILE: include/asm-x86/percpu.h:155:
+#define	DEFINE_EARLY_PER_CPU(_type, _name, _initvalue)			\
+	DEFINE_PER_CPU(_type, _name) = _initvalue;			\
+	__typeof__(_type) _name##_early_map[NR_CPUS] __initdata =	\
+				{ [0 ... NR_CPUS-1] = _initvalue };	\
+	__typeof__(_type) *_name##_early_ptr = _name##_early_map

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#639: FILE: include/asm-x86/percpu.h:158:
+				{ [0 ... NR_CPUS-1] = _initvalue };	\
 				                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#652: FILE: include/asm-x86/percpu.h:171:
+#define^Iearly_per_cpu(_name, _cpu) ^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_name' - possible side-effects?
#652: FILE: include/asm-x86/percpu.h:171:
+#define	early_per_cpu(_name, _cpu) 				\
+	(early_per_cpu_ptr(_name) ?				\
+		early_per_cpu_ptr(_name)[_cpu] :		\
+		per_cpu(_name, _cpu))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_cpu' - possible side-effects?
#652: FILE: include/asm-x86/percpu.h:171:
+#define	early_per_cpu(_name, _cpu) 				\
+	(early_per_cpu_ptr(_name) ?				\
+		early_per_cpu_ptr(_name)[_cpu] :		\
+		per_cpu(_name, _cpu))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#741: FILE: include/asm-x86/topology.h:48:
 }
+#define early_cpu_to_node(cpu)	cpu_to_node(cpu)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: include/asm-x86/topology.h:62:
+extern int cpu_to_node(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#770: FILE: include/asm-x86/topology.h:63:
+extern int early_cpu_to_node(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#771: FILE: include/asm-x86/topology.h:64:
+extern cpumask_t *_node_to_cpumask_ptr(int node);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#772: FILE: include/asm-x86/topology.h:65:
+extern cpumask_t node_to_cpumask(int node);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#830: FILE: include/asm-x86/topology.h:100:
+#define node_to_cpumask_ptr(v, node)		\
+		cpumask_t *v = _node_to_cpumask_ptr(node)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#833: FILE: include/asm-x86/topology.h:103:
+#define node_to_cpumask_ptr_next(v, node)	\
+			   v = _node_to_cpumask_ptr(node)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#865: FILE: include/asm-x86/topology.h:181:
+#define node_to_cpumask_ptr(v, node)		\
+		cpumask_t *v = &cpu_online_map

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#867: FILE: include/asm-x86/topology.h:183:
+#define node_to_cpumask_ptr_next(v, node)	\
+			   v = &cpu_online_map

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#873: FILE: include/asm-x86/topology.h:189:
+}
+static inline int node_to_first_cpu(int node)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000292400.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 18 checks, 711 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000292400.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
