WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#98: FILE: mm/bootmem.c:289:
+	printk(KERN_DEBUG "nid=%td start=0x%010lx end=0x%010lx aligned=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: mm/bootmem.c:290:
+	printk(KERN_DEBUG "nid=%td start=0x%010lx end=0x%010lx aligned=%d\n",
+		bdata - bootmem_node_data, start, end, aligned);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#117: FILE: mm/bootmem.c:308:
+					printk(KERN_DEBUG "  free [0x%010lx - 0x%010lx]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: mm/bootmem.c:309:
+					printk(KERN_DEBUG "  free [0x%010lx - 0x%010lx]\n",
+							free_start + bdata->node_min_pfn,

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#134: FILE: mm/bootmem.c:325:
+						if (free_end == (idx + off)) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#136: FILE: mm/bootmem.c:327:
+						} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#138: FILE: mm/bootmem.c:329:
+							printk(KERN_DEBUG "  free [0x%010lx - 0x%010lx]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: mm/bootmem.c:330:
+							printk(KERN_DEBUG "  free [0x%010lx - 0x%010lx]\n",
+								free_start + bdata->node_min_pfn,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#156: FILE: mm/bootmem.c:347:
+		printk(KERN_DEBUG "  free [0x%010lx - 0x%010lx]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: mm/bootmem.c:348:
+		printk(KERN_DEBUG "  free [0x%010lx - 0x%010lx]\n",
+			free_start + bdata->node_min_pfn,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#159: FILE: mm/bootmem.c:350:
+	printk(KERN_DEBUG "  total free 0x%010lx\n", count);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 4 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
