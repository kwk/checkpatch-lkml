CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#87: FILE: drivers/media/video/omap/omap24xxvout.c:324:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#89: FILE: drivers/media/video/omap/omap24xxvout.c:326:
+	int *link = &link_status;
+	spin_lock(&vout_link_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vout_linked == vout->vid'
#90: FILE: drivers/media/video/omap/omap24xxvout.c:327:
+	if ((*link == 0) && (vout_linked == vout->vid))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: drivers/media/video/omap/omap24xxvout.c:347:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#111: FILE: drivers/media/video/omap/omap24xxvout.c:348:
+int omap24xxvout_streaming_link(struct omap24xxvout_device *vout,
+					struct omap24xxvout_fh *fh) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/media/video/omap/omap24xxvout.c:349:
+int omap24xxvout_streaming_link(struct omap24xxvout_device *vout,
+					struct omap24xxvout_fh *fh) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/media/video/omap/omap24xxvout.c:357:
+	omap2_disp_config_vlayer(vout->vid, &vout->pix,
+			&vout->crop, &vout->win, vout->rotation,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: drivers/media/video/omap/omap24xxvout.c:363:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#127: FILE: drivers/media/video/omap/omap24xxvout.c:364:
+int omap24xxvout_tv_link(void){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#128: FILE: drivers/media/video/omap/omap24xxvout.c:365:
+int omap24xxvout_tv_link(void){
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vout"
#134: FILE: drivers/media/video/omap/omap24xxvout.c:371:
+	if (vout == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#151: FILE: drivers/media/video/omap/omap24xxvout.c:388:
+	if (NULL == fh) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#165: FILE: drivers/media/video/omap/omap24xxvout.c:402:
+static  int
+omap24xxvout_tv_link_release(void) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vout->vid != vout_linked'
#173: FILE: drivers/media/video/omap/omap24xxvout.c:410:
+	if ((vout_linked != -1) && (vout->vid != vout_linked))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#206: FILE: drivers/media/video/omap/omap24xxvout.c:1135:
+					omap2_disp_get_output_dev(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/media/video/omap/omap24xxvout.c:1139:
+					set_output_device("tv",
+						AUTO_VIDEO_LINK);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#273: FILE: drivers/video/omap/omap_disp_out.c:1867:
+ssize_t
+set_output_device(const char *buffer, int layer) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: drivers/video/omap/omap_disp_out.c:1870:
+	ssize_t ret;
+	if (strncmp(buffer, "lcd", 3) == 0)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#286: FILE: drivers/video/omap/omap_disp_out.c:1880:
+int
+get_tv_state(void){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#299: FILE: drivers/video/omap/omap_disp_out.c:1892:
+static ssize_t
+tv_state_show(struct device *dev, struct device_attribute *attr, char *buf) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: drivers/media/video/omap/omap24xxvoutdef.h:105:
 
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#334: FILE: drivers/media/video/omap/omap24xxvoutdef.h:180:
+	extern int automatic_link;
+	extern int get_tv_state(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: drivers/media/video/omap/omap24xxvoutdef.h:180:
+	extern int get_tv_state(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: drivers/media/video/omap/omap24xxvoutdef.h:181:
+	extern ssize_t set_output_device(const char *buffer, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#335: FILE: drivers/media/video/omap/omap24xxvoutdef.h:181:
+	extern ssize_t set_output_device(const char *buffer, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220446.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 5 warnings, 14 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220446.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
