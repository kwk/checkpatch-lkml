CHECK:BRACES: braces {} should be used on all arms of this statement
#75: FILE: include/linux/mm.h:556:
+	if (address)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmpxchg"
#76: FILE: include/linux/mm.h:557:
+		return cmpxchg(&page->virtual, NULL, address) == NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#77: FILE: include/linux/mm.h:558:
+		return cmpxchg(&page->virtual, NULL, address) == NULL;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#77: FILE: include/linux/mm.h:558:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: include/linux/mm.h:564:
+		void *virt = page->virtual;
+		return cmpxchg(&page->vitrual, virt, NULL) == virt;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#86: FILE: include/linux/mm.h:567:
+}
+void page_address_init(void);

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#125: FILE: mm/highmem.c:37:
+#include <asm/pgtable.h>

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: mm/highmem.c:93:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: mm/highmem.c:107:
+		BUG();

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#279: FILE: mm/highmem.c:141:
+#if 0

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: mm/highmem.c:142:
+		flush_tlb_kernel_range(PKMAP_ADDR(pos), PKMAP_ADDR(pos+1));
 		                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#311: FILE: mm/highmem.c:160:
+			if (!flush) {
[...]
+			} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: mm/highmem.c:162:
+				atomic_t *counter = &pkmap_count[pos2];
+				VM_BUG_ON(atomic_read(counter) != 0);

CHECK:BRACES: Unbalanced braces around else statement
#316: FILE: mm/highmem.c:165:
+			} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: mm/highmem.c:172:
+			atomic_t *counter = &pkmap_count[entries[i]];
+			VM_BUG_ON(atomic_read(counter) != 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#350: FILE: mm/highmem.c:192:
+	if (unlikely(!__set_page_address(page, (void *)vaddr, pos))) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#363: FILE: mm/highmem.c:205:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#385: FILE: mm/highmem.c:218:
+		atomic_t *counter = &pkmap_count[PKMAP_NR(vaddr)];
+		if (atomic_inc_not_zero(counter)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: mm/highmem.c:224:
+			unsigned long vaddr2 = (unsigned long)page_address(page);
+			if (likely(vaddr == vaddr2))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#615: FILE: mm/highmem.c:363:
+	BUG();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: mm/highmem.c:380:
+#elif defined (CONFIG_HIGHMEM) /* HASHED_PAGE_VIRTUAL */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 9 checks, 597 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
