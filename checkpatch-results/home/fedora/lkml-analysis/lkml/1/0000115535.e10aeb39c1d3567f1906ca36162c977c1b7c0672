WARNING:TYPO_SPELLING: 'subsytem' may be misspelled - perhaps 'subsystem'?
#41: 
It uses the ssb subsytem to access embeded watchdog device.
                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'embeded' may be misspelled - perhaps 'embedded'?
#41: 
It uses the ssb subsytem to access embeded watchdog device.
                                   ^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: drivers/watchdog/Kconfig:767:
+config BCM47XX_WDT
+    tristate "Broadcom BCM47xx Watchdog Timer"
+    depends on BCM47XX
+    help
+      Hardware driver for the Broadcom BCM47xx Watchog Timer.
+
 # PARISC Architecture
 
 # POWERPC Architecture

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'Watchog' may be misspelled - perhaps 'Watchdog'?
#64: FILE: drivers/watchdog/Kconfig:771:
+      Hardware driver for the Broadcom BCM47xx Watchog Timer.
                                                ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/watchdog/bcm47xx_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: drivers/watchdog/bcm47xx_wdt.c:44:
+MODULE_PARM_DESC(nowayout,
+		"Watchdog cannot be stopped once started (default="

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: drivers/watchdog/bcm47xx_wdt.c:68:
+	if(!atomic_dec_and_test(&ticks)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#157: FILE: drivers/watchdog/bcm47xx_wdt.c:72:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#157: FILE: drivers/watchdog/bcm47xx_wdt.c:72:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#158: FILE: drivers/watchdog/bcm47xx_wdt.c:73:
+		printk(KERN_CRIT PFX "Watchdog will fire soon!!!.\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_time <= 0'
#186: FILE: drivers/watchdog/bcm47xx_wdt.c:101:
+	if ((new_time <= 0) || (new_time > WDT_MAX_TIME))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_time > WDT_MAX_TIME'
#186: FILE: drivers/watchdog/bcm47xx_wdt.c:101:
+	if ((new_time <= 0) || (new_time > WDT_MAX_TIME))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#207: FILE: drivers/watchdog/bcm47xx_wdt.c:122:
+		printk(KERN_CRIT DRV_NAME ": Unexpected close, not stopping watchdog!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: drivers/watchdog/bcm47xx_wdt.c:131:
+static ssize_t bcm47xx_wdt_write (struct file *file, const char __user *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/watchdog/bcm47xx_wdt.c:132:
+static ssize_t bcm47xx_wdt_write (struct file *file, const char __user *data,
+			      size_t len, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: drivers/watchdog/bcm47xx_wdt.c:132:
+			      size_t len, loff_t * ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#227: FILE: drivers/watchdog/bcm47xx_wdt.c:142:
+				char c;
+				if (get_user(c, data + i))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: drivers/watchdog/bcm47xx_wdt.c:154:
+^I.identity ^I= DRV_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: drivers/watchdog/bcm47xx_wdt.c:155:
+^I.options ^I= WDIOF_SETTIMEOUT |$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/watchdog/bcm47xx_wdt.c:161:
+static long bcm47xx_wdt_ioctl(struct file *file,
+					unsigned int cmd, unsigned long arg)

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#250: FILE: drivers/watchdog/bcm47xx_wdt.c:165:
+	int new_value, retval = -EINVAL;;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/watchdog/bcm47xx_wdt.c:214:
+static int bcm47xx_wdt_notify_sys(struct notifier_block *this, unsigned long code,
+	void *unused)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#336: FILE: drivers/watchdog/bcm47xx_wdt.c:251:
+		printk(KERN_INFO DRV_NAME ": wdt_time value must be 1 <= wdt_time <= 256, using %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/watchdog/bcm47xx_wdt.c:252:
+		printk(KERN_INFO DRV_NAME ": wdt_time value must be 1 <= wdt_time <= 256, using %d\n",
+			wdt_time);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#350: FILE: drivers/watchdog/bcm47xx_wdt.c:265:
+	printk(KERN_INFO "BCM47xx Watchdog Timer enabled (%d seconds%s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/watchdog/bcm47xx_wdt.c:266:
+	printk(KERN_INFO "BCM47xx Watchdog Timer enabled (%d seconds%s)\n",
+				wdt_time, nowayout ? ", nowayout" : "");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000115535.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 14 warnings, 9 checks, 308 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000115535.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
