WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
there are several modules provided by cs5536, currently, only these modules are

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#42: 
since the PCI operations are similiar between fuloong(2e) and
                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#43: 
fuloong(2f),yeeloong(2f) and even similiar to gdium, herein, I just rename
                                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#140: FILE: arch/mips/loongson/Kconfig:57:
+	  controller have the similiar programming interface of the FPGA north
 	                      ^^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#162: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#178: FILE: arch/mips/loongson/fuloong-2f/irq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#203: FILE: arch/mips/loongson/fuloong-2f/irq.c:26:
+#define LOONGSON_INT_BIT_INT0		(1 << 11)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#204: FILE: arch/mips/loongson/fuloong-2f/irq.c:27:
+#define LOONGSON_INT_BIT_INT1		(1 << 12)

CHECK:BRACES: braces {} should be used on all arms of this statement
#236: FILE: arch/mips/loongson/fuloong-2f/irq.c:59:
+	if (pending & CAUSEF_IP7)
[...]
+	else if (pending & CAUSEF_IP6) {	/* North Bridge, Perf counter */
[...]
+	} else if (pending & CAUSEF_IP3)	/* CPU UART */
[...]
+	else if (pending & CAUSEF_IP2)	/* South Bridge */
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#298: FILE: arch/mips/loongson/fuloong-2f/reset.c:1:
+/* Board-specific reboot/shutdown routines

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: arch/mips/loongson/fuloong-2f/reset.c:40:
+		u32 hi, lo;
+		_rdmsr(DIVIL_MSR_REG(DIVIL_SOFT_RESET), &hi, &lo);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#342: FILE: arch/mips/loongson/fuloong-2f/reset.c:45:
+	udelay(8000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#342: FILE: arch/mips/loongson/fuloong-2f/reset.c:45:
+	udelay(8000);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#386: FILE: arch/mips/pci/fixup-fuloong2f.c:1:
+/*

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#444: FILE: arch/mips/pci/fixup-fuloong2f.c:59:
+	if ((PCI_SLOT(dev->devfn) != PCI_IDSEL_CS5536)
+	    && (PCI_SLOT(dev->devfn) < 32)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#446: FILE: arch/mips/pci/fixup-fuloong2f.c:61:
+		printk(KERN_INFO "slot: %d, pin: %d, irq: %d\n", slot, pin,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#471: FILE: arch/mips/pci/fixup-fuloong2f.c:86:
+		return dev->irq;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#472: FILE: arch/mips/pci/fixup-fuloong2f.c:87:
+		printk(KERN_INFO " strange pci slot number.\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#490: FILE: arch/mips/pci/fixup-fuloong2f.c:105:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#498: FILE: arch/mips/pci/fixup-fuloong2f.c:113:
+	return;
+}

WARNING:IF_1: Consider removing the #if 1 and its #endif
#507: FILE: arch/mips/pci/fixup-fuloong2f.c:122:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#509: FILE: arch/mips/pci/fixup-fuloong2f.c:124:
+	printk(KERN_INFO "cs5536 acc latency 0x%x\n", val);

WARNING:RETURN_VOID: void function return statements are not generally useful
#513: FILE: arch/mips/pci/fixup-fuloong2f.c:128:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#521: FILE: arch/mips/pci/fixup-fuloong2f.c:136:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#534: FILE: arch/mips/pci/fixup-fuloong2f.c:149:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#723: FILE: arch/mips/pci/ops-loongson2.c:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#753: FILE: arch/mips/pci/ops-loongson2.c:31:
+#define CFG_SPACE_REG(offset) \
+	(void *)CKSEG1ADDR(LOONGSON_PCICFG_BASE | (offset))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#758: FILE: arch/mips/pci/ops-loongson2.c:36:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: arch/mips/pci/ops-loongson2.c:38:
+static int loongson_pcibios_config_access(unsigned char access_type,
+				      struct pci_bus *bus,

WARNING:TYPO_SPELLING: 'regsters' may be misspelled - perhaps 'registers'?
#779: FILE: arch/mips/pci/ops-loongson2.c:57:
+		 * to access the regsters 0xf4,0xf8,0xfc, which is bigger than
 		                 ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PCI_IDSEL_CS5536 == device'
#783: FILE: arch/mips/pci/ops-loongson2.c:61:
+		if ((PCI_IDSEL_CS5536 == device) && (reg < 0xF0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg < 0xF0'
#783: FILE: arch/mips/pci/ops-loongson2.c:61:
+		if ((PCI_IDSEL_CS5536 == device) && (reg < 0xF0)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#783: FILE: arch/mips/pci/ops-loongson2.c:61:
+		if ((PCI_IDSEL_CS5536 == device) && (reg < 0xF0)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#808: FILE: arch/mips/pci/ops-loongson2.c:86:
+	LOONGSON_PCICMD |= LOONGSON_PCICMD_MABORT_CLR | \

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#837: FILE: arch/mips/pci/ops-loongson2.c:115:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#839: FILE: arch/mips/pci/ops-loongson2.c:117:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#845: FILE: arch/mips/pci/ops-loongson2.c:123:
+static int loongson_pcibios_read(struct pci_bus *bus, unsigned int devfn,
+			     int where, int size, u32 *val)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 2'
#849: FILE: arch/mips/pci/ops-loongson2.c:127:
+	if ((size == 2) && (where & 1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: arch/mips/pci/ops-loongson2.c:133:
+	if (loongson_pcibios_config_access(PCI_ACCESS_READ, bus, devfn, where,
+				       &data))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#869: FILE: arch/mips/pci/ops-loongson2.c:147:
+static int loongson_pcibios_write(struct pci_bus *bus, unsigned int devfn,
+			      int where, int size, u32 val)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 2'
#873: FILE: arch/mips/pci/ops-loongson2.c:151:
+	if ((size == 2) && (where & 1))

CHECK:BRACES: braces {} should be used on all arms of this statement
#878: FILE: arch/mips/pci/ops-loongson2.c:156:
+	if (size == 4)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#880: FILE: arch/mips/pci/ops-loongson2.c:158:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: arch/mips/pci/ops-loongson2.c:160:
+		if (loongson_pcibios_config_access(PCI_ACCESS_READ, bus, devfn,
+					where, &data))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#894: FILE: arch/mips/pci/ops-loongson2.c:172:
+	if (loongson_pcibios_config_access(PCI_ACCESS_WRITE, bus, devfn, where,
+				       &data))

WARNING:LINE_SPACING: Missing a blank line after declarations
#912: FILE: arch/mips/pci/ops-loongson2.c:190:
+	u32 devfn = PCI_DEVFN(PCI_IDSEL_CS5536, 0);
+	loongson_pcibios_write(&bus, devfn, PCI_MSR_ADDR, 4, msr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#924: FILE: arch/mips/pci/ops-loongson2.c:202:
+	u32 devfn = PCI_DEVFN(PCI_IDSEL_CS5536, 0);
+	loongson_pcibios_write(&bus, devfn, PCI_MSR_ADDR, 4, msr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 26 warnings, 20 checks, 644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
