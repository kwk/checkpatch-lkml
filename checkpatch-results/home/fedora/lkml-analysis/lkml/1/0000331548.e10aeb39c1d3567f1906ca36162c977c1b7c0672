WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#79: FILE: kernel/kgdb.c:957:
+	 * GDB is reconnecting. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#83: FILE: kernel/kgdb.c:961:
+	 * as much.  Only need to do this once. */

WARNING:SPLIT_STRING: quoted string split across lines
#86: FILE: kernel/kgdb.c:964:
+		kgdb_msg_write("Not all CPUs have been "
+					   "synced for KGDB\n", 39);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#107: FILE: kernel/kgdb.c:985:
+		for (i = 0; i < NR_CPUS; i++) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#121: FILE: kernel/kgdb.c:999:
+	 * are in kgdb_wait, and thus have debuggerinfo. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#122: FILE: kernel/kgdb.c:1000:
+	if (kgdb_ops->shadowth &&
[...]
+	} else if (local_debuggerinfo)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: kernel/kgdb.c:1001:
+	if (kgdb_ops->shadowth &&
+		ks->kgdb_usethreadid >= pid_max + num_online_cpus()) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: kernel/kgdb.c:1003:
+		shadowregs = kgdb_shadow_regs(ks->linux_regs,
+					  ks->kgdb_usethreadid -

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: kernel/kgdb.c:1008:
+			error_packet(remcom_out_buffer,
+						 -EINVAL);

CHECK:BRACES: Unbalanced braces around else statement
#136: FILE: kernel/kgdb.c:1014:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: kernel/kgdb.c:1018:
+		 * This should be enough for a stack trace. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: kernel/kgdb.c:1022:
+	kgdb_mem2hex((char *)gdb_regs, remcom_out_buffer,
+				 NUMREGBYTES);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: kernel/kgdb.c:1029:
+	kgdb_hex2mem(&remcom_in_buffer[1], (char *)gdb_regs,
+				 NUMREGBYTES);

CHECK:BRACES: braces {} should be used on all arms of this statement
#153: FILE: kernel/kgdb.c:1031:
+	if (kgdb_usethread && kgdb_usethread != current)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#155: FILE: kernel/kgdb.c:1033:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#168: FILE: kernel/kgdb.c:1046:
+	if (kgdb_hex2long(&ptr, &addr) > 0 && *ptr++ == ',' &&
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: kernel/kgdb.c:1047:
+	if (kgdb_hex2long(&ptr, &addr) > 0 && *ptr++ == ',' &&
+		kgdb_hex2long(&ptr, &length) > 0) {

CHECK:BRACES: Unbalanced braces around else statement
#175: FILE: kernel/kgdb.c:1053:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#209: FILE: kernel/kgdb.c:1087:
+		if (error < 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#211: FILE: kernel/kgdb.c:1089:
+		else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: kernel/kgdb.c:1103:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#231: FILE: kernel/kgdb.c:1109:
+		printk(KERN_CRIT "Executing reboot\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: kernel/kgdb.c:1124:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: kernel/kgdb.c:1150:
+				strcpy(remcom_out_buffer,
+				"m0000000000000001");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: kernel/kgdb.c:1182:
+		if (memcmp(remcom_in_buffer + 1,
+				   "ThreadExtraInfo,", 16)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: kernel/kgdb.c:1184:
+			error_packet(remcom_out_buffer,
+						 -EINVAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: kernel/kgdb.c:1192:
+			error_packet(remcom_out_buffer,
+						 -EINVAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: kernel/kgdb.c:1197:
+			kgdb_mem2hex(getthread(ks->linux_regs,
+					ks->threadid)->comm,

CHECK:BRACES: Unbalanced braces around else statement
#326: FILE: kernel/kgdb.c:1204:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: kernel/kgdb.c:1206:
+			static char tmpstr[23 + BUF_THREAD_ID_SIZE];
+			sprintf(tmpstr, "Shadow task %d for pid 0",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: kernel/kgdb.c:1207:
+			sprintf(tmpstr, "Shadow task %d for pid 0",
+					(int)(ks->threadid - pid_max));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: kernel/kgdb.c:1209:
+			kgdb_mem2hex(tmpstr, remcom_out_buffer,
+						 strlen(tmpstr));

CHECK:BRACES: braces {} should be used on all arms of this statement
#359: FILE: kernel/kgdb.c:1237:
+		if (!ks->threadid)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#361: FILE: kernel/kgdb.c:1239:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: kernel/kgdb.c:1241:
+			thread = getthread(ks->linux_regs,
+							   ks->threadid);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: kernel/kgdb.c:1287:
+	 * if we support it. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: kernel/kgdb.c:1289:
+	if (*bpt_type == '1' &&
+		!(kgdb_ops->flags & KGDB_HW_BREAKPOINT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: kernel/kgdb.c:1298:
+		if (*(ptr++) != ',' ||
+			!kgdb_hex2long(&ptr, &length)) {

CHECK:SPACING: No space is necessary after a cast
#438: FILE: kernel/kgdb.c:1316:
+			(int) length, *bpt_type);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: kernel/kgdb.c:1332:
+	if (remcom_in_buffer[1] == '0' &&
+		remcom_in_buffer[2] == '9') {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#472: FILE: kernel/kgdb.c:1350:
+		return 1;
+	} else {

WARNING:TABSTOP: Statements should start on a tabstop
#474: FILE: kernel/kgdb.c:1352:
+	    return 0;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#477: FILE: kernel/kgdb.c:1355:
+	/* Indicate fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:TYPO_SPELLING: 'procesing' may be misspelled - perhaps 'processing'?
#483: FILE: kernel/kgdb.c:1360:
+ * This function performs all gdbserial command procesing
                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#497: FILE: kernel/kgdb.c:1374:
+		 * packet */

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: kernel/kgdb.c:1377:
+			kgdb_msg_write("Not all CPUs have been synced for "
+			       "KGDB\n", 39);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#574: FILE: kernel/kgdb.c:1451:
+			/* Fall through on tmp < 0 */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#583: FILE: kernel/kgdb.c:1460:
+			/* Fall through to default processing */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: kernel/kgdb.c:1464:
+			error = kgdb_arch_handle_exception(ks->ex_vector,
+						ks->signo,

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: kernel/kgdb.c:1493:
+	unsigned long addr;
+	if (atomic_read(&debugger_active) != raw_smp_processor_id() + 1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#632: FILE: kernel/kgdb.c:1509:
+		printk(KERN_CRIT

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#644: FILE: kernel/kgdb.c:1521:
+	printk(KERN_CRIT

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331548.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 32 checks, 1238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331548.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
