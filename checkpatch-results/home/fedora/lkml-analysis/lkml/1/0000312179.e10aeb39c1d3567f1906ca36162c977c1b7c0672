WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> arch/sparc/kernel/built-in.o:(__ex_table+0x394): undefined reference to `kernel_unaligned_trap_fault'

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a3f9985843b674cbcb58f39fab8416675e7ab842', maybe rebased or not pulled?
#49: 
commit a3f9985843b674cbcb58f39fab8416675e7ab842

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#61: 
    Signed-off-by: David S. Miller <davem@davemloft.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#84: FILE: arch/sparc64/kernel/traps.c:2130:
+	    TI_RESTART_BLOCK != offsetof(struct thread_info, restart_block) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#85: FILE: arch/sparc64/kernel/traps.c:2131:
+	    TI_KUNA_REGS != offsetof(struct thread_info, kern_una_regs) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#86: FILE: arch/sparc64/kernel/traps.c:2132:
+	    TI_KUNA_INSN != offsetof(struct thread_info, kern_una_insn) ||

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#91: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: arch/sparc64/kernel/una_asm.S:1:
+/* una_asm.S: Kernel unaligned trap assembler helpers.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#134: FILE: arch/sparc64/kernel/una_asm.S:39:
+	ba,pt	%xcc, 0f
 	^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#141: FILE: arch/sparc64/kernel/una_asm.S:46:
+	ba,pt	%xcc, 0f
 	^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#184: FILE: arch/sparc64/kernel/una_asm.S:89:
+3:	ba,pt	%xcc, 0f
   	^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#197: FILE: arch/sparc64/kernel/una_asm.S:102:
+3:	ba,pt	%xcc, 0f
   	^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#336: FILE: arch/sparc64/kernel/unaligned.c:183:
+extern void do_int_load(unsigned long *dest_reg, int size,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#422: FILE: arch/sparc64/kernel/unaligned.c:186:
+extern void __do_int_store(unsigned long *dst_addr, int size,

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/sparc64/kernel/unaligned.c:198:
+^I^I        (unsigned)fetch_reg(reg_num, regs) : 0)) << 32) |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#434: FILE: arch/sparc64/kernel/unaligned.c:198:
+		        (unsigned)fetch_reg(reg_num, regs) : 0)) << 32) |

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#435: FILE: arch/sparc64/kernel/unaligned.c:199:
+			(unsigned)fetch_reg(reg_num + 1, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/sparc64/kernel/unaligned.c:239:
+                ^Iprintk(KERN_ALERT "Unable to handle kernel NULL "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#467: FILE: arch/sparc64/kernel/unaligned.c:239:
+                ^Iprintk(KERN_ALERT "Unable to handle kernel NULL "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/sparc64/kernel/unaligned.c:239:
+                ^Iprintk(KERN_ALERT "Unable to handle kernel NULL "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#467: FILE: arch/sparc64/kernel/unaligned.c:239:
+                	printk(KERN_ALERT "Unable to handle kernel NULL "

WARNING:SPLIT_STRING: quoted string split across lines
#468: FILE: arch/sparc64/kernel/unaligned.c:240:
+                	printk(KERN_ALERT "Unable to handle kernel NULL "
+			       "pointer dereference in mna handler");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/sparc64/kernel/unaligned.c:242:
+                ^Iprintk(KERN_ALERT "Unable to handle kernel paging "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#471: FILE: arch/sparc64/kernel/unaligned.c:242:
+                ^Iprintk(KERN_ALERT "Unable to handle kernel paging "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/sparc64/kernel/unaligned.c:242:
+                ^Iprintk(KERN_ALERT "Unable to handle kernel paging "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#471: FILE: arch/sparc64/kernel/unaligned.c:242:
+                	printk(KERN_ALERT "Unable to handle kernel paging "

WARNING:SPLIT_STRING: quoted string split across lines
#472: FILE: arch/sparc64/kernel/unaligned.c:243:
+                	printk(KERN_ALERT "Unable to handle kernel paging "
+			       "request in mna handler");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#475: FILE: arch/sparc64/kernel/unaligned.c:245:
+		printk(KERN_ALERT "current->{active_,}mm->context = %016lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: arch/sparc64/kernel/unaligned.c:246:
+		printk(KERN_ALERT "current->{active_,}mm->context = %016lx\n",
 			(current->mm ? CTX_HWBITS(current->mm->context) :

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#479: FILE: arch/sparc64/kernel/unaligned.c:248:
+		printk(KERN_ALERT "current->{active_,}mm->pgd = %016lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: arch/sparc64/kernel/unaligned.c:249:
+		printk(KERN_ALERT "current->{active_,}mm->pgd = %016lx\n",
 			(current->mm ? (unsigned long) current->mm->pgd :

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#504: FILE: arch/sparc64/kernel/unaligned.c:271:
+		printk("Unsupported unaligned load/store trap for kernel "

WARNING:SPLIT_STRING: quoted string split across lines
#505: FILE: arch/sparc64/kernel/unaligned.c:272:
+		printk("Unsupported unaligned load/store trap for kernel "
+		       "at <%016lx>.\n", regs->tpc);

WARNING:SPLIT_STRING: quoted string split across lines
#507: FILE: arch/sparc64/kernel/unaligned.c:274:
+		unaligned_panic("Kernel does fpu/atomic "
+				"unaligned load/store.", regs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#519: FILE: arch/sparc64/kernel/unaligned.c:283:
+		printk("KMNA: pc=%016lx [dir=%s addr=%016lx size=%d] "

WARNING:SPLIT_STRING: quoted string split across lines
#520: FILE: arch/sparc64/kernel/unaligned.c:284:
+		printk("KMNA: pc=%016lx [dir=%s addr=%016lx size=%d] "
+		       "retpc[%016lx]\n",

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#530: FILE: arch/sparc64/kernel/unaligned.c:290:
+			do_int_load(fetch_reg_addr(((insn>>25)&0x1f), regs),
 			                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#530: FILE: arch/sparc64/kernel/unaligned.c:290:
+			do_int_load(fetch_reg_addr(((insn>>25)&0x1f), regs),
 			                                      ^

CHECK:SPACING: No space is necessary after a cast
#531: FILE: arch/sparc64/kernel/unaligned.c:291:
+				    size, (unsigned long *) addr,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#547: FILE: arch/sparc64/kernel/unaligned.c:297:
+			do_int_store(((insn>>25)&0x1f), size,
 			                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#547: FILE: arch/sparc64/kernel/unaligned.c:297:
+			do_int_store(((insn>>25)&0x1f), size,
 			                        ^

CHECK:SPACING: No space is necessary after a cast
#548: FILE: arch/sparc64/kernel/unaligned.c:298:
+				     (unsigned long *) addr, regs,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 31 warnings, 8 checks, 487 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
