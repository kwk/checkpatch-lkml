WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#127: 
acctually BIOS is not supposed to put resource in pci BAR in reserved entries of e820.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: arch/x86/kernel/e820.c:1285:
+		    e820.map[i].addr < (1ULL<<20))
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#185: FILE: arch/x86/kernel/e820.c:1301:
+		    e820.map[i].addr < (1ULL<<20)) {
 		                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#217: FILE: arch/x86/kernel/e820.c:1333:
+		    e820.map[i].addr < (1ULL<<20))
 		                            ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*res)...) over kzalloc(sizeof(struct resource)...)
#222: FILE: arch/x86/kernel/e820.c:1338:
+	res = kzalloc(sizeof(struct resource) * count, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#229: FILE: arch/x86/kernel/e820.c:1345:
+		    e820.map[i].addr < (1ULL<<20))
 		                            ^

WARNING:MISPLACED_INIT: __initdata should be placed after real_removed_size
#249: FILE: arch/x86/pci/i386.c:197:
+static __initdata u64 real_removed_size;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#274: FILE: arch/x86/pci/i386.c:222:
+}
+static void __init e820_remove_bar_overlap(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#300: FILE: arch/x86/pci/i386.c:248:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: arch/x86/pci/i386.c:250:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000209596.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 8 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000209596.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
