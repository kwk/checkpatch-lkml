WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
> > Mind if i nitpick a bit about minor style issues? Since this is going to 

WARNING:TYPO_SPELLING: 'mininum' may be misspelled - perhaps 'minimum'?
#210: FILE: mm/slqb.c:598:
+ *	C. Padding to reach required alignment boundary or at mininum
   	                                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#242: FILE: mm/slqb.c:727:
+	printk(KERN_INFO "TRACE %s %s 0x%p inuse=%d fp=0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: mm/slqb.c:728:
+	printk(KERN_INFO "TRACE %s %s 0x%p inuse=%d fp=0x%p\n",
+		s->name,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1090: FILE: mm/slqb.c:3297:
+				len += sprintf(buf+len,
 				                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1100: FILE: mm/slqb.c:3306:
+#define STAT_ATTR(si, text)					\
 static ssize_t text##_show(struct kmem_cache *s, char *buf)	\
 {								\
 	return show_stat(s, buf, si);				\
 }								\
 SLAB_ATTR_RO(text);						\
 

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1155: FILE: mm/slqb.c:3330:
 static struct attribute *slab_attrs[] = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1156: FILE: mm/slqb.c:3331:
+	&                 slab_size_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1157: FILE: mm/slqb.c:3332:
+	&               object_size_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1158: FILE: mm/slqb.c:3333:
+	&             objs_per_slab_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1159: FILE: mm/slqb.c:3334:
+	&                     order_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1160: FILE: mm/slqb.c:3335:
+	&                   objects_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1161: FILE: mm/slqb.c:3336:
+	&             total_objects_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1162: FILE: mm/slqb.c:3337:
+	&                     slabs_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1163: FILE: mm/slqb.c:3338:
+	&                      ctor_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1164: FILE: mm/slqb.c:3339:
+	&                     align_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1165: FILE: mm/slqb.c:3340:
+	&             hwcache_align_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1166: FILE: mm/slqb.c:3341:
+	&           reclaim_account_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1167: FILE: mm/slqb.c:3342:
+	&            destroy_by_rcu_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1168: FILE: mm/slqb.c:3343:
+	&                  red_zone_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1169: FILE: mm/slqb.c:3344:
+	&                    poison_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1170: FILE: mm/slqb.c:3345:
+	&                store_user_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1171: FILE: mm/slqb.c:3346:
+	&                   hiwater_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1172: FILE: mm/slqb.c:3347:
+	&                 freebatch_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1175: FILE: mm/slqb.c:3349:
+	&                 cache_dma_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1192: FILE: mm/slqb.c:3352:
+	&                     alloc_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1193: FILE: mm/slqb.c:3353:
+	&           alloc_slab_fill_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1194: FILE: mm/slqb.c:3354:
+	&            alloc_slab_new_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1195: FILE: mm/slqb.c:3355:
+	&                      free_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1196: FILE: mm/slqb.c:3356:
+	&               free_remote_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1197: FILE: mm/slqb.c:3357:
+	&           flush_free_list_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1198: FILE: mm/slqb.c:3358:
+	&   flush_free_list_objects_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1199: FILE: mm/slqb.c:3359:
+	&    flush_free_list_remote_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1200: FILE: mm/slqb.c:3360:
+	&        flush_slab_partial_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1201: FILE: mm/slqb.c:3361:
+	&           flush_slab_free_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1202: FILE: mm/slqb.c:3362:
+	&          flush_rfree_list_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1203: FILE: mm/slqb.c:3363:
+	&  flush_rfree_list_objects_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1204: FILE: mm/slqb.c:3364:
+	&         claim_remote_list_attr.attr,
 	^

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#1205: FILE: mm/slqb.c:3365:
+	& claim_remote_list_objects_attr.attr,
 	^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1253: FILE: mm/slqb.c:3494:
+		printk(KERN_ERR

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000177504.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 5 warnings, 3 checks, 1111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000177504.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
