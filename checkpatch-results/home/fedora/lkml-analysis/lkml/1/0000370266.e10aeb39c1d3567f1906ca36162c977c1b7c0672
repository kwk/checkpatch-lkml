WARNING:TYPO_SPELLING: 'Otherwize' may be misspelled - perhaps 'Otherwise'?
#38: 
Otherwize it probes port-addrs, specified by find() user, 
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#59: 
I added the module to /drivers/hwmon, mostly cuz thats where
                                                 ^^^^^

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#63: 
Signed-off-by:  Jim Cromie <jim.cromie@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: drivers/hwmon/Kconfig:768:
+config SUPERIO_LOCKS
+	tristate "Super-IO port sharing"
+	default n
+	help
+	  This module provides a shared reservation for use by drivers
+	  which need to share access to a multi-function device via
+	  its superio port, and which register that port.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/hwmon/superio_locks.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#138: FILE: drivers/hwmon/superio_locks.c:38:
+struct superio* superio_probe_reserve(const struct superio_search * const where,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: drivers/hwmon/superio_locks.c:49:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: drivers/hwmon/superio_locks.c:57:
+	/* sanity check that cmd-reg remembers the val just written
+	rc = inb(cmd_addr);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#165: FILE: drivers/hwmon/superio_locks.c:65:
+		mydevid = inb(cmd_addr+1);
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: drivers/hwmon/superio_locks.c:68:
+		mydevid = inb(cmd_addr+1) << 8;
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#169: FILE: drivers/hwmon/superio_locks.c:69:
+		outb(devid_addr+1, cmd_addr);
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#170: FILE: drivers/hwmon/superio_locks.c:70:
+		mydevid |= inb(cmd_addr+1);
 		                       ^

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#174: FILE: drivers/hwmon/superio_locks.c:74:
+	mydevid &= ~ where->devid_mask;
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#186: FILE: drivers/hwmon/superio_locks.c:86:
+		printk(KERN_ERR DRVNAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#192: FILE: drivers/hwmon/superio_locks.c:92:
+		printk(KERN_ERR DRVNAME

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#207: FILE: drivers/hwmon/superio_locks.c:107:
+}
+/*

WARNING:TYPO_SPELLING: 'Otherwize' may be misspelled - perhaps 'Otherwise'?
#209: FILE: drivers/hwmon/superio_locks.c:109:
+ * reserved, and shares that reservation.  Otherwize it calls
                                            ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#212: FILE: drivers/hwmon/superio_locks.c:112:
+static struct superio* superio_get(const struct superio_search * const where,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#223: FILE: drivers/hwmon/superio_locks.c:123:
+		if (gate->users && cmd_addr == gate->sioaddr
+		    && want_devid == gate->devid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#224: FILE: drivers/hwmon/superio_locks.c:124:
+		    && want_devid == gate->devid) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/hwmon/superio_locks.c:132:
+			pr_debug("sharing port:%x dev:%x users:%d\n",
+				gate->sioaddr, gate->devid, gate->users);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#248: FILE: drivers/hwmon/superio_locks.c:148:
+struct superio* superio_find(const struct superio_search * const where)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#251: FILE: drivers/hwmon/superio_locks.c:151:
+	struct superio* gate = NULL;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#256: FILE: drivers/hwmon/superio_locks.c:156:
+	for (ci = 0; ci < ARRAY_SIZE(where->cmdreg_addrs)
+	       && where->cmdreg_addrs[ci]; ci++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/hwmon/superio_locks.c:157:
+^I     $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#257: FILE: drivers/hwmon/superio_locks.c:157:
+	       && where->cmdreg_addrs[ci]; ci++) {
+	     

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#259: FILE: drivers/hwmon/superio_locks.c:159:
+		for (di = 0; di < ARRAY_SIZE(where->device_ids)
+		       && where->device_ids[di]; di++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: drivers/hwmon/superio_locks.c:160:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#260: FILE: drivers/hwmon/superio_locks.c:160:
+		       && where->device_ids[di]; di++) {
+			

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: drivers/hwmon/superio_locks.c:163:
+			if (!gate) {
[...]
+			} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/hwmon/superio_locks.c:165:
+				pr_debug("no devid:%x at port:%x\n",
+					where->device_ids[di],

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: drivers/hwmon/superio_locks.c:167:
+			} else

ERROR:POINTER_LOCATION: "foo* const bar" should be "foo * const bar"
#286: FILE: drivers/hwmon/superio_locks.c:186:
+void superio_release(struct superio* const gate)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#291: FILE: drivers/hwmon/superio_locks.c:191:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: drivers/hwmon/superio_locks.c:193:
+		       " superio: attempt to release corrupted superio-lock"
+		       " %p vs %p\n", gate, &sio_locks);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/hwmon/superio_locks.c:200:
+		pr_debug("releasing last user of superio-port %x\n",
+			gate->sioaddr);

CHECK:BRACES: Unbalanced braces around else statement
#301: FILE: drivers/hwmon/superio_locks.c:201:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: drivers/hwmon/superio_locks.c:205:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#308: FILE: drivers/hwmon/superio_locks.c:208:
+	return;
+}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#316: FILE: drivers/hwmon/superio_locks.c:216:
+	sio_locks = kzalloc(max_locks*sizeof(struct superio), GFP_KERNEL);
 	                             ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#316: FILE: drivers/hwmon/superio_locks.c:216:
+	sio_locks = kzalloc(max_locks*sizeof(struct superio), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#318: FILE: drivers/hwmon/superio_locks.c:218:
+		printk(KERN_ERR "superio: no memory\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#340: FILE: include/linux/superio-locks.h:1:
+#include <linux/mutex.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#341: FILE: include/linux/superio-locks.h:2:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: include/linux/superio-locks.h:20:
+^Iu8  ldn_addr;^I^I/* logical device select reg */  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: include/linux/superio-locks.h:31:
+^Iu8  ldn_addr;^I^I/* logical device select reg */  $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#373: FILE: include/linux/superio-locks.h:34:
+struct superio* superio_find(const struct superio_search * const where);

ERROR:POINTER_LOCATION: "foo* const bar" should be "foo * const bar"
#374: FILE: include/linux/superio-locks.h:35:
+void superio_release(struct superio* const gate);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: include/linux/superio-locks.h:42:
+	return inb(sio_port->sioaddr+1);
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#387: FILE: include/linux/superio-locks.h:48:
+	outb(val, sio_port->sioaddr+1);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: include/linux/superio-locks.h:58:
+	val |= inb(sio_port->sioaddr+1);
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#414: FILE: include/linux/superio-locks.h:75:
+	int i;
+	mutex_lock(&gate->lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: include/linux/superio-locks.h:83:
+	int i;
+	for (i = 0; i < SEQ_SZ && gate->enter_seq[i]; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#439: FILE: include/linux/superio-locks.h:100:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370266.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 18 warnings, 24 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370266.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
