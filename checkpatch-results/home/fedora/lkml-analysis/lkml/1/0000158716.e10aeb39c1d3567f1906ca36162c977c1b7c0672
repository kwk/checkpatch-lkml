WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: ltt/ltt-trace-control.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#120: FILE: ltt/ltt-trace-control.c:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: ltt/ltt-trace-control.c:65:
+static ssize_t alloc_write(struct file *file, const char __user *user_buf,
+		size_t count, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#147: FILE: ltt/ltt-trace-control.c:90:
+		printk(KERN_ERR "alloc_write: ltt_trace_alloc failed: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_write', this function's name, in a string
#147: FILE: ltt/ltt-trace-control.c:90:
+		printk(KERN_ERR "alloc_write: ltt_trace_alloc failed: %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: ltt/ltt-trace-control.c:91:
+		printk(KERN_ERR "alloc_write: ltt_trace_alloc failed: %d\n",
+			err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: ltt/ltt-trace-control.c:108:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: ltt/ltt-trace-control.c:110:
+static ssize_t enabled_write(struct file *file, const char __user *user_buf,
+		size_t count, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#196: FILE: ltt/ltt-trace-control.c:139:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enabled_write', this function's name, in a string
#197: FILE: ltt/ltt-trace-control.c:140:
+				"enabled_write: ltt_trace_start failed: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#208: FILE: ltt/ltt-trace-control.c:151:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enabled_write', this function's name, in a string
#209: FILE: ltt/ltt-trace-control.c:152:
+				"enabled_write: ltt_trace_stop failed: %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: ltt/ltt-trace-control.c:177:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: ltt/ltt-trace-control.c:179:
+static ssize_t trans_write(struct file *file, const char __user *user_buf,
+		size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: ltt/ltt-trace-control.c:198:
+	err = ltt_trace_set_type(file->f_dentry->d_parent->d_name.name,
+		trans_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#257: FILE: ltt/ltt-trace-control.c:200:
+		printk(KERN_ERR "trans_write: ltt_trace_set_type failed: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trans_write', this function's name, in a string
#257: FILE: ltt/ltt-trace-control.c:200:
+		printk(KERN_ERR "trans_write: ltt_trace_set_type failed: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: ltt/ltt-trace-control.c:201:
+		printk(KERN_ERR "trans_write: ltt_trace_set_type failed: %d\n",
+			err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: ltt/ltt-trace-control.c:217:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: ltt/ltt-trace-control.c:219:
+static ssize_t channel_subbuf_num_write(struct file *file,
+		const char __user *user_buf, size_t count, loff_t *ppos)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#291: FILE: ltt/ltt-trace-control.c:234:
+	if (sscanf(buf, "%u", &num) != 1) {
+		err = -EPERM;
+		goto err_get_number;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#301: FILE: ltt/ltt-trace-control.c:244:
+		printk(KERN_ERR "channel_subbuf_num_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'channel_subbuf_num_write', this function's name, in a string
#301: FILE: ltt/ltt-trace-control.c:244:
+		printk(KERN_ERR "channel_subbuf_num_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: ltt/ltt-trace-control.c:245:
+		printk(KERN_ERR "channel_subbuf_num_write: "
+			"ltt_trace_set_channel_subbufcount failed: %d\n", err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: ltt/ltt-trace-control.c:261:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: ltt/ltt-trace-control.c:263:
+static ssize_t channel_subbuf_size_write(struct file *file,
+	const char __user *user_buf, size_t count, loff_t *ppos)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#335: FILE: ltt/ltt-trace-control.c:278:
+	if (sscanf(buf, "%u", &num) != 1) {
+		err = -EPERM;
+		goto err_get_number;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#345: FILE: ltt/ltt-trace-control.c:288:
+		printk(KERN_ERR "channel_subbuf_size_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'channel_subbuf_size_write', this function's name, in a string
#345: FILE: ltt/ltt-trace-control.c:288:
+		printk(KERN_ERR "channel_subbuf_size_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: ltt/ltt-trace-control.c:289:
+		printk(KERN_ERR "channel_subbuf_size_write: "
+		"ltt_trace_set_channel_subbufsize failed: %d\n", err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#362: FILE: ltt/ltt-trace-control.c:305:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: ltt/ltt-trace-control.c:307:
+static ssize_t channel_overwrite_write(struct file *file,
+	const char __user *user_buf, size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: ltt/ltt-trace-control.c:340:
+		err = ltt_trace_set_channel_overwrite(trace_name, channel_name,
+			1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#399: FILE: ltt/ltt-trace-control.c:342:
+			printk(KERN_ERR "channel_overwrite_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'channel_overwrite_write', this function's name, in a string
#399: FILE: ltt/ltt-trace-control.c:342:
+			printk(KERN_ERR "channel_overwrite_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#400: FILE: ltt/ltt-trace-control.c:343:
+			printk(KERN_ERR "channel_overwrite_write: "
+			"ltt_trace_set_channel_overwrite failed: %d\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: ltt/ltt-trace-control.c:351:
+		err = ltt_trace_set_channel_overwrite(trace_name, channel_name,
+			0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#410: FILE: ltt/ltt-trace-control.c:353:
+			printk(KERN_ERR "channel_overwrite_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'channel_overwrite_write', this function's name, in a string
#410: FILE: ltt/ltt-trace-control.c:353:
+			printk(KERN_ERR "channel_overwrite_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#411: FILE: ltt/ltt-trace-control.c:354:
+			printk(KERN_ERR "channel_overwrite_write: "
+			"ltt_trace_set_channel_overwrite failed: %d\n", err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#433: FILE: ltt/ltt-trace-control.c:376:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: ltt/ltt-trace-control.c:378:
+static ssize_t channel_enable_write(struct file *file,
+	const char __user *user_buf, size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: ltt/ltt-trace-control.c:411:
+		err = ltt_trace_set_channel_enable(trace_name, channel_name,
+			1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#470: FILE: ltt/ltt-trace-control.c:413:
+			printk(KERN_ERR "channel_enable_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'channel_enable_write', this function's name, in a string
#470: FILE: ltt/ltt-trace-control.c:413:
+			printk(KERN_ERR "channel_enable_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#471: FILE: ltt/ltt-trace-control.c:414:
+			printk(KERN_ERR "channel_enable_write: "
+			"ltt_trace_set_channel_enable failed: %d\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: ltt/ltt-trace-control.c:422:
+		err = ltt_trace_set_channel_enable(trace_name, channel_name,
+			0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#481: FILE: ltt/ltt-trace-control.c:424:
+			printk(KERN_ERR "channel_enable_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'channel_enable_write', this function's name, in a string
#481: FILE: ltt/ltt-trace-control.c:424:
+			printk(KERN_ERR "channel_enable_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: ltt/ltt-trace-control.c:425:
+			printk(KERN_ERR "channel_enable_write: "
+			"ltt_trace_set_channel_enable failed: %d\n", err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: ltt/ltt-trace-control.c:447:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#516: FILE: ltt/ltt-trace-control.c:459:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#516: FILE: ltt/ltt-trace-control.c:459:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#517: FILE: ltt/ltt-trace-control.c:460:
+		printk(KERN_ERR "_create_trace_control_dir: "
+			"create control root dir of %s failed\n", trace_name);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#523: FILE: ltt/ltt-trace-control.c:466:
+	tmp_den = debugfs_create_file("alloc", S_IWUSR, trace_root, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: ltt/ltt-trace-control.c:467:
+	tmp_den = debugfs_create_file("alloc", S_IWUSR, trace_root, NULL,
+		&ltt_alloc_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#526: FILE: ltt/ltt-trace-control.c:469:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#526: FILE: ltt/ltt-trace-control.c:469:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#527: FILE: ltt/ltt-trace-control.c:470:
+		printk(KERN_ERR "_create_trace_control_dir: "
+			"create file of alloc failed\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#533: FILE: ltt/ltt-trace-control.c:476:
+	tmp_den = debugfs_create_file("trans", S_IWUSR, trace_root, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: ltt/ltt-trace-control.c:477:
+	tmp_den = debugfs_create_file("trans", S_IWUSR, trace_root, NULL,
+		&ltt_trans_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#536: FILE: ltt/ltt-trace-control.c:479:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#536: FILE: ltt/ltt-trace-control.c:479:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#537: FILE: ltt/ltt-trace-control.c:480:
+		printk(KERN_ERR "_create_trace_control_dir: "
+			"create file of trans failed\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#543: FILE: ltt/ltt-trace-control.c:486:
+	tmp_den = debugfs_create_file("enabled", S_IWUSR, trace_root, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: ltt/ltt-trace-control.c:487:
+	tmp_den = debugfs_create_file("enabled", S_IWUSR, trace_root, NULL,
+		&ltt_enabled_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#546: FILE: ltt/ltt-trace-control.c:489:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#546: FILE: ltt/ltt-trace-control.c:489:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#547: FILE: ltt/ltt-trace-control.c:490:
+		printk(KERN_ERR "_create_trace_control_dir: "
+			"create file of enabled failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#555: FILE: ltt/ltt-trace-control.c:498:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#555: FILE: ltt/ltt-trace-control.c:498:
+		printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#556: FILE: ltt/ltt-trace-control.c:499:
+		printk(KERN_ERR "_create_trace_control_dir: "
+			"create dir of channel failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#585: FILE: ltt/ltt-trace-control.c:528:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#585: FILE: ltt/ltt-trace-control.c:528:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#586: FILE: ltt/ltt-trace-control.c:529:
+			printk(KERN_ERR "_create_trace_control_dir: "
+				"create channel dir of %s failed\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#592: FILE: ltt/ltt-trace-control.c:535:
+		tmp_den = debugfs_create_file("subbuf_num", S_IWUSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: ltt/ltt-trace-control.c:536:
+		tmp_den = debugfs_create_file("subbuf_num", S_IWUSR,
+			channel_den, NULL, &ltt_channel_subbuf_num_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#595: FILE: ltt/ltt-trace-control.c:538:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#595: FILE: ltt/ltt-trace-control.c:538:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#596: FILE: ltt/ltt-trace-control.c:539:
+			printk(KERN_ERR "_create_trace_control_dir: "
+				"create subbuf_num in %s failed\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#602: FILE: ltt/ltt-trace-control.c:545:
+		tmp_den = debugfs_create_file("subbuf_size", S_IWUSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: ltt/ltt-trace-control.c:546:
+		tmp_den = debugfs_create_file("subbuf_size", S_IWUSR,
+			channel_den, NULL, &ltt_channel_subbuf_size_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#605: FILE: ltt/ltt-trace-control.c:548:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#605: FILE: ltt/ltt-trace-control.c:548:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#606: FILE: ltt/ltt-trace-control.c:549:
+			printk(KERN_ERR "_create_trace_control_dir: "
+				"create subbuf_size in %s failed\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#612: FILE: ltt/ltt-trace-control.c:555:
+		tmp_den = debugfs_create_file("enable", S_IWUSR, channel_den,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: ltt/ltt-trace-control.c:556:
+		tmp_den = debugfs_create_file("enable", S_IWUSR, channel_den,
+			NULL, &ltt_channel_enable_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#615: FILE: ltt/ltt-trace-control.c:558:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#615: FILE: ltt/ltt-trace-control.c:558:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#616: FILE: ltt/ltt-trace-control.c:559:
+			printk(KERN_ERR "_create_trace_control_dir: "
+				"create enable in %s failed\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#622: FILE: ltt/ltt-trace-control.c:565:
+		tmp_den = debugfs_create_file("overwrite", S_IWUSR, channel_den,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: ltt/ltt-trace-control.c:566:
+		tmp_den = debugfs_create_file("overwrite", S_IWUSR, channel_den,
+			NULL, &ltt_channel_overwrite_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#625: FILE: ltt/ltt-trace-control.c:568:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_create_trace_control_dir', this function's name, in a string
#625: FILE: ltt/ltt-trace-control.c:568:
+			printk(KERN_ERR "_create_trace_control_dir: "

WARNING:SPLIT_STRING: quoted string split across lines
#626: FILE: ltt/ltt-trace-control.c:569:
+			printk(KERN_ERR "_create_trace_control_dir: "
+				"create overwrite in %s failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: ltt/ltt-trace-control.c:585:
+static ssize_t setup_trace_write(struct file *file, const char __user *user_buf,
+		size_t count, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#666: FILE: ltt/ltt-trace-control.c:609:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup_trace_write', this function's name, in a string
#667: FILE: ltt/ltt-trace-control.c:610:
+			"setup_trace_write: ltt_trace_setup failed: %d\n", err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#671: FILE: ltt/ltt-trace-control.c:614:
+	BUG_ON(!trace);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#674: FILE: ltt/ltt-trace-control.c:617:
+		printk(KERN_ERR "setup_trace_write: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup_trace_write', this function's name, in a string
#674: FILE: ltt/ltt-trace-control.c:617:
+		printk(KERN_ERR "setup_trace_write: "

WARNING:SPLIT_STRING: quoted string split across lines
#675: FILE: ltt/ltt-trace-control.c:618:
+		printk(KERN_ERR "setup_trace_write: "
+			"_create_trace_control_dir failed: %d\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: ltt/ltt-trace-control.c:642:
+static ssize_t destroy_trace_write(struct file *file,
+		const char __user *user_buf, size_t count, loff_t *ppos)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#707: FILE: ltt/ltt-trace-control.c:650:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#723: FILE: ltt/ltt-trace-control.c:666:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'destroy_trace_write', this function's name, in a string
#724: FILE: ltt/ltt-trace-control.c:667:
+			"destroy_trace_write: ltt_trace_destroy failed: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#732: FILE: ltt/ltt-trace-control.c:675:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'destroy_trace_write', this function's name, in a string
#733: FILE: ltt/ltt-trace-control.c:676:
+			"destroy_trace_write: lookup for %s's dentry failed\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#757: FILE: ltt/ltt-trace-control.c:700:
+static int marker_enable_open(struct inode *inode, struct file *filp)
                                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#763: FILE: ltt/ltt-trace-control.c:706:
+static ssize_t marker_enable_read(struct file *filp, char __user *ubuf,
                                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: ltt/ltt-trace-control.c:707:
+static ssize_t marker_enable_read(struct file *filp, char __user *ubuf,
+			    size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#781: FILE: ltt/ltt-trace-control.c:724:
+static ssize_t marker_enable_write(struct file *filp, const char __user *ubuf,
                                                 ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: ltt/ltt-trace-control.c:725:
+static ssize_t marker_enable_write(struct file *filp, const char __user *ubuf,
+				size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#827: FILE: ltt/ltt-trace-control.c:770:
+static int marker_info_open(struct inode *inode, struct file *filp)
                                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#833: FILE: ltt/ltt-trace-control.c:776:
+static ssize_t marker_info_read(struct file *filp, char __user *ubuf,
                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: ltt/ltt-trace-control.c:777:
+static ssize_t marker_info_read(struct file *filp, char __user *ubuf,
+			    size_t cnt, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#873: FILE: ltt/ltt-trace-control.c:816:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#885: FILE: ltt/ltt-trace-control.c:828:
+			printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: ltt/ltt-trace-control.c:839:
+		enable_d = debugfs_create_file("enable", 0644, marker_d,
+						marker, &enable_fops);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#898: FILE: ltt/ltt-trace-control.c:841:
+			printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: ltt/ltt-trace-control.c:852:
+		info_d = debugfs_create_file("info", 0444, marker_d,
+						marker, &info_fops);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#911: FILE: ltt/ltt-trace-control.c:854:
+			printk(KERN_ERR

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iter.marker"
#936: FILE: ltt/ltt-trace-control.c:879:
+	for (; iter.marker != NULL; marker_iter_next(&iter)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#978: FILE: ltt/ltt-trace-control.c:921:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1001: FILE: ltt/ltt-trace-control.c:944:
+static int module_notify(struct notifier_block *self,
+		  unsigned long val, void *data)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1035: FILE: ltt/ltt-trace-control.c:978:
+		printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: ltt/ltt-trace-control.c:986:
+	ltt_setup_trace_file = debugfs_create_file(LTT_SETUP_TRACE_FILE,
+		S_IWUSR, ltt_root_dentry, NULL, &ltt_setup_trace_operations);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1043: FILE: ltt/ltt-trace-control.c:986:
+		S_IWUSR, ltt_root_dentry, NULL, &ltt_setup_trace_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1045: FILE: ltt/ltt-trace-control.c:988:
+		printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1053: FILE: ltt/ltt-trace-control.c:996:
+	ltt_destroy_trace_file = debugfs_create_file(LTT_DESTROY_TRACE_FILE,
+		S_IWUSR, ltt_root_dentry, NULL, &ltt_destroy_trace_operations);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1053: FILE: ltt/ltt-trace-control.c:996:
+		S_IWUSR, ltt_root_dentry, NULL, &ltt_destroy_trace_operations);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1055: FILE: ltt/ltt-trace-control.c:998:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1065: FILE: ltt/ltt-trace-control.c:1008:
+		printk(KERN_ERR

WARNING:TYPO_SPELLING: 'destory' may be misspelled - perhaps 'destroy'?
#1096: FILE: ltt/ltt-trace-control.c:1039:
+	/* destory all traces */
 	   ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1098: FILE: ltt/ltt-trace-control.c:1041:
+	list_for_each_entry(trace_dir, &ltt_control_dir->d_subdirs,
+		d_u.d_child) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 93 warnings, 42 checks, 1061 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
