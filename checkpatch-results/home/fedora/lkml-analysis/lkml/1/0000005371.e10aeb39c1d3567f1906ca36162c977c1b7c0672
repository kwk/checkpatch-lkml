WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: arch/x86/xen/enlighten.c:1321:
+       struct xen_hvm_param a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/x86/xen/enlighten.c:1323:
+       a.domid = DOMID_SELF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/x86/xen/enlighten.c:1324:
+       a.index = HVM_PARAM_CALLBACK_IRQ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/x86/xen/enlighten.c:1325:
+       a.value = via;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/x86/xen/enlighten.c:1326:
+       return HYPERVISOR_hvm_op(HVMOP_set_param, &a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/x86/xen/enlighten.c:1331:
+       xen_evtchn_do_upcall(get_irq_regs());$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#93: FILE: arch/x86/xen/enlighten.c:1337:
+	uint64_t callback_via;

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: arch/x86/xen/enlighten.c:1351:
+ ^Ipv_time_ops = xen_time_ops;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: arch/x86/xen/enlighten.c:1351:
+ ^Ipv_time_ops = xen_time_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/x86/xen/enlighten.c:1351:
+ ^Ipv_time_ops = xen_time_ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/x86/xen/enlighten.c:1352:
+ ^Ipv_apic_ops = xen_apic_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: arch/x86/xen/enlighten.c:1352:
+ ^Ipv_apic_ops = xen_apic_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/x86/xen/enlighten.c:1352:
+ ^Ipv_apic_ops = xen_apic_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/x86/xen/smp.c:492:
+       int cpu = smp_processor_id();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/x86/xen/smp.c:494:
+       cpu_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/x86/xen/smp.c:495:
+       touch_nmi_watchdog();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/x86/xen/smp.c:496:
+       preempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/x86/xen/smp.c:499:
+       barrier();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/x86/xen/smp.c:501:
+        * Check TSC synchronization with the BSP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/x86/xen/smp.c:502:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/x86/xen/smp.c:503:
+       check_tsc_sync_target();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/x86/xen/smp.c:506:
+       smp_store_cpu_info(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/x86/xen/smp.c:509:
+       set_cpu_sibling_map(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/x86/xen/smp.c:510:
+       wmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#168: FILE: arch/x86/xen/smp.c:510:
+       wmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/x86/xen/smp.c:512:
+       set_cpu_online(smp_processor_id(), true);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/x86/xen/smp.c:513:
+       per_cpu(cpu_state, smp_processor_id()) = CPU_ONLINE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/x86/xen/smp.c:516:
+       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/x86/xen/smp.c:518:
+       xen_setup_cpu_clockevents();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/x86/xen/smp.c:520:
+       wmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#178: FILE: arch/x86/xen/smp.c:520:
+       wmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/x86/xen/smp.c:521:
+       cpu_idle();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/x86/xen/smp.c:527:
+       struct vcpu_guest_context *ctxt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/x86/xen/smp.c:528:
+       unsigned long start_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/x86/xen/smp.c:530:
+       if (cpumask_test_and_set_cpu(cpu, xen_cpu_initialized_map))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#188: FILE: arch/x86/xen/smp.c:530:
+       if (cpumask_test_and_set_cpu(cpu, xen_cpu_initialized_map))
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: arch/x86/xen/smp.c:531:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/x86/xen/smp.c:531:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/x86/xen/smp.c:533:
+       ctxt = kzalloc(sizeof(*ctxt), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/x86/xen/smp.c:534:
+       if (ctxt == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#192: FILE: arch/x86/xen/smp.c:534:
+       if (ctxt == NULL)
+               return -ENOMEM;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctxt"
#192: FILE: arch/x86/xen/smp.c:534:
+       if (ctxt == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/x86/xen/smp.c:535:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/x86/xen/smp.c:535:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/x86/xen/smp.c:537:
+       early_gdt_descr.address = (unsigned long)get_cpu_gdt_table(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/x86/xen/smp.c:538:
+       initial_code = (unsigned long)xen_hvm_pv_start_secondary;$

CHECK:SPACING: No space is necessary after a cast
#197: FILE: arch/x86/xen/smp.c:539:
+       stack_start.sp = (void *) idle->thread.sp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/x86/xen/smp.c:539:
+       stack_start.sp = (void *) idle->thread.sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/x86/xen/smp.c:542:
+       start_ip = setup_trampoline();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/x86/xen/smp.c:545:
+       ctxt->flags = VGCF_HVM_GUEST;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/x86/xen/smp.c:546:
+       ctxt->user_regs.eip = start_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/x86/xen/smp.c:548:
+       printk(KERN_INFO "Booting processor %d ip 0x%lx\n", cpu, start_ip);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#206: FILE: arch/x86/xen/smp.c:548:
+       printk(KERN_INFO "Booting processor %d ip 0x%lx\n", cpu, start_ip);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/x86/xen/smp.c:550:
+       if (HYPERVISOR_vcpu_op(VCPUOP_initialise, cpu, ctxt))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#208: FILE: arch/x86/xen/smp.c:550:
+       if (HYPERVISOR_vcpu_op(VCPUOP_initialise, cpu, ctxt))
+               BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/x86/xen/smp.c:551:
+               BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/x86/xen/smp.c:551:
+               BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: arch/x86/xen/smp.c:551:
+               BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/x86/xen/smp.c:553:
+       kfree(ctxt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/x86/xen/smp.c:554:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/x86/xen/smp.c:559:
+       struct task_struct *idle = idle_task(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/x86/xen/smp.c:560:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/x86/xen/smp.c:561:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/x86/xen/smp.c:563:
+       per_cpu(current_task, cpu) = idle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/x86/xen/smp.c:566:
+       irq_ctx_init(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/x86/xen/smp.c:568:
+       clear_tsk_thread_flag(idle, TIF_FORK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/x86/xen/smp.c:569:
+       initial_gs = per_cpu_offset(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/x86/xen/smp.c:570:
+       per_cpu(kernel_stack, cpu) =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/x86/xen/smp.c:571:
+               (unsigned long)task_stack_page(idle) -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/x86/xen/smp.c:571:
+               (unsigned long)task_stack_page(idle) -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/x86/xen/smp.c:572:
+               KERNEL_STACK_OFFSET + THREAD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/x86/xen/smp.c:572:
+               KERNEL_STACK_OFFSET + THREAD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/x86/xen/smp.c:575:
+       xen_setup_timer(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/x86/xen/smp.c:576:
+       xen_init_lock_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/x86/xen/smp.c:578:
+       per_cpu(cpu_state, cpu) = CPU_UP_PREPARE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/x86/xen/smp.c:580:
+       rc = hvm_pv_cpu_initialize_context(cpu, idle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/x86/xen/smp.c:581:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#239: FILE: arch/x86/xen/smp.c:581:
+       if (rc)
+               return rc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/x86/xen/smp.c:582:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/x86/xen/smp.c:582:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/x86/xen/smp.c:584:
+       if (num_online_cpus() == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#242: FILE: arch/x86/xen/smp.c:584:
+       if (num_online_cpus() == 1)
+               alternatives_smp_switch(1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: arch/x86/xen/smp.c:585:
+               alternatives_smp_switch(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/x86/xen/smp.c:585:
+               alternatives_smp_switch(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/x86/xen/smp.c:587:
+       rc = xen_smp_intr_init(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/x86/xen/smp.c:588:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#246: FILE: arch/x86/xen/smp.c:588:
+       if (rc)
+               return rc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/x86/xen/smp.c:589:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/x86/xen/smp.c:589:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/x86/xen/smp.c:591:
+       rc = HYPERVISOR_vcpu_op(VCPUOP_up, cpu, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/x86/xen/smp.c:592:
+       BUG_ON(rc);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#250: FILE: arch/x86/xen/smp.c:592:
+       BUG_ON(rc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: arch/x86/xen/smp.c:595:
+        * Check TSC synchronization with the AP (keep irqs disabled$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/x86/xen/smp.c:596:
+        * while doing so):$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/x86/xen/smp.c:597:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/x86/xen/smp.c:598:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/x86/xen/smp.c:599:
+       check_tsc_sync_source(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/x86/xen/smp.c:600:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/x86/xen/smp.c:602:
+       while (!cpu_online(cpu)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#260: FILE: arch/x86/xen/smp.c:602:
+       while (!cpu_online(cpu)) {
+               cpu_relax();

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/x86/xen/smp.c:603:
+               cpu_relax();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/x86/xen/smp.c:603:
+               cpu_relax();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/x86/xen/smp.c:604:
+               touch_nmi_watchdog();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/x86/xen/smp.c:604:
+               touch_nmi_watchdog();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/x86/xen/smp.c:605:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/x86/xen/smp.c:607:
+       return 0;$

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#268: FILE: arch/x86/xen/smp.c:610:
+static const struct smp_ops xen_hvm_smp_ops __initdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: arch/x86/xen/smp.c:627:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: drivers/xen/events.c:1407:
+ ^Ixen_setup_pirqs();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: drivers/xen/events.c:1407:
+ ^Ixen_setup_pirqs();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/xen/events.c:1407:
+ ^Ixen_setup_pirqs();$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxE)
#392: FILE: include/xen/hvm.h:26:
+#define HVM_CALLBACK_VECTOR(x) (((uint64_t)HVM_CALLBACK_VIA_TYPE_VECTOR)<<\
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: include/xen/hvm.h:27:
+                               HVM_CALLBACK_VIA_TYPE_SHIFT | (x))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: include/xen/hvm.h:27:
+                               HVM_CALLBACK_VIA_TYPE_SHIFT | (x))$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 89 warnings, 5 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
