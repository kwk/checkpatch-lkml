WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#57: FILE: drivers/md/md.c:5366:
+	ITERATE_RDEV(mddev,rdev,rtmp)
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#57: FILE: drivers/md/md.c:5366:
+	ITERATE_RDEV(mddev,rdev,rtmp)
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#59: FILE: drivers/md/md.c:5368:
+		    (test_bit(Faulty, &rdev->flags) ||

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#60: FILE: drivers/md/md.c:5369:
+		     ! test_bit(In_sync, &rdev->flags)) &&
 		     ^

CHECK:CAMELCASE: Avoid CamelCase: <In_sync>
#60: FILE: drivers/md/md.c:5369:
+		     ! test_bit(In_sync, &rdev->flags)) &&

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#61: FILE: drivers/md/md.c:5370:
+		    atomic_read(&rdev->nr_pending)==0) {
 		                                  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#62: FILE: drivers/md/md.c:5371:
+			if (mddev->pers->hot_remove_disk(

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#63: FILE: drivers/md/md.c:5372:
+				    mddev, rdev->raid_disk)==0) {
 				                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#65: FILE: drivers/md/md.c:5374:
+				char nm[20];
+				sprintf(nm,"rd%d", rdev->raid_disk);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: drivers/md/md.c:5374:
+				sprintf(nm,"rd%d", rdev->raid_disk);
 				          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/md/md.c:5381:
+		ITERATE_RDEV(mddev,rdev,rtmp)
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/md/md.c:5381:
+		ITERATE_RDEV(mddev,rdev,rtmp)
 		                       ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#74: FILE: drivers/md/md.c:5383:
+			if (rdev->raid_disk < 0
+			    && !test_bit(Faulty, &rdev->flags)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: drivers/md/md.c:5385:
+				if (mddev->pers->hot_add_disk(mddev,rdev)) {
 				                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#76: FILE: drivers/md/md.c:5385:
+				if (mddev->pers->hot_add_disk(mddev,rdev)) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: drivers/md/md.c:5387:
+					char nm[20];
+					sprintf(nm, "rd%d", rdev->raid_disk);

CHECK:BRACES: Unbalanced braces around else statement
#83: FILE: drivers/md/md.c:5392:
+				} else

CHECK:CAMELCASE: Avoid CamelCase: <MaxSector>
#134: FILE: drivers/md/md.c:5516:
+		if (mddev->reshape_position != MaxSector) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#139: FILE: drivers/md/md.c:5521:
+		} else if ((spares = remove_and_add_spares(mddev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465459.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 4 warnings, 7 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465459.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
