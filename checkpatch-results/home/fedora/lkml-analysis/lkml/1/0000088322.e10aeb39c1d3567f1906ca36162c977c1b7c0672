WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Provide an interface by which the system administrator can decide what state

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#93: FILE: drivers/base/cpu.c:82:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/base/cpu.c:106:
+cpu_driver_callback(struct notifier_block *nfb, unsigned long action,
+								void *hcpu)

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after cpu_driver_notifier
#139: FILE: drivers/base/cpu.c:128:
+static struct notifier_block __cpuinitdata cpu_driver_notifier = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/base/cpu.c:136:
+	int ret = 0;
+	cpu_maps_update_begin();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu_offline_driver"
#149: FILE: drivers/base/cpu.c:138:
+	if (cpu_offline_driver != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: include/linux/cpu.h:57:
+	ssize_t (*show_available_states)(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: include/linux/cpu.h:59:
+	ssize_t (*show_preferred_state)(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: include/linux/cpu.h:62:
+	ssize_t (*store_preferred_state)(struct sys_device *dev,
+			struct sysdev_attribute *attr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/linux/cpu.h:66:
+extern int register_cpu_offline_driver(struct cpu_offline_driver *driver);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: include/linux/cpu.h:67:
+extern void unregister_cpu_offline_driver(struct cpu_offline_driver *driver);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088322.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 8 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088322.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
