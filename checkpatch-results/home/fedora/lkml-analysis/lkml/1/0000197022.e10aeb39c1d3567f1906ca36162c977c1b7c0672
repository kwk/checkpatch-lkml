ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: include/linux/ring_buffer.h:130:
+               int cpu);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: include/linux/ring_buffer.h:130:
+struct ring_buffer_per_cpu *ring_buffer_cpu(struct ring_buffer *buffer,
+               int cpu);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: include/linux/ring_buffer.h:130:
+               int cpu);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: include/linux/ring_buffer.h:131:
+struct page * ring_buffer_get_page(struct ring_buffer_per_cpu *cpu_buffer,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: include/linux/ring_buffer.h:132:
+               pgoff_t pgoff);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: include/linux/ring_buffer.h:132:
+struct page * ring_buffer_get_page(struct ring_buffer_per_cpu *cpu_buffer,
+               pgoff_t pgoff);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: include/linux/ring_buffer.h:132:
+               pgoff_t pgoff);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: include/linux/ring_buffer.h:134:
+               int count_in);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: include/linux/ring_buffer.h:134:
+void ring_buffer_advance_reader(struct ring_buffer_per_cpu *cpu_buffer,
+               int count_in);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: include/linux/ring_buffer.h:134:
+               int count_in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: kernel/ktrace/ring_buffer.c:157:
+       struct buffer_page              *page_array;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#105: FILE: kernel/ktrace/ring_buffer.c:189:
*buffer, int cpu)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: kernel/ktrace/ring_buffer.c:191:
+       return buffer->buffers[cpu];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/ktrace/ring_buffer.c:252:
+       struct buffer_page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: kernel/ktrace/ring_buffer.c:253:
+       void *array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: kernel/ktrace/ring_buffer.c:258:
+       array = cpu_buffer->page_array;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 15)
#131: FILE: kernel/ktrace/ring_buffer.c:259:
       for (i = 0; i < nr_pages; i++) {
+               page = (struct buffer_page *) (array + i * BP_HEADER_SIZE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: kernel/ktrace/ring_buffer.c:260:
+               page = (struct buffer_page *) (array + i * BP_HEADER_SIZE);$

CHECK:SPACING: No space is necessary after a cast
#137: FILE: kernel/ktrace/ring_buffer.c:260:
+               page = (struct buffer_page *) (array + i * BP_HEADER_SIZE);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/ktrace/ring_buffer.c:260:
+               page = (struct buffer_page *) (array + i * BP_HEADER_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: kernel/ktrace/ring_buffer.c:261:
+               list_add_tail(&page->list, &pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: kernel/ktrace/ring_buffer.c:261:
+               list_add_tail(&page->list, &pages);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 23)
#141: FILE: kernel/ktrace/ring_buffer.c:264:
               if (!addr)
+                       return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: kernel/ktrace/ring_buffer.c:265:
+                       return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: kernel/ktrace/ring_buffer.c:265:
+                       return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: kernel/ktrace/ring_buffer.c:294:
+       cpu_buffer->page_array = kzalloc_node(BP_HEADER_SIZE * buffer->pages,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: kernel/ktrace/ring_buffer.c:295:
+                       GFP_KERNEL, cpu_to_node(cpu));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: kernel/ktrace/ring_buffer.c:295:
+       cpu_buffer->page_array = kzalloc_node(BP_HEADER_SIZE * buffer->pages,
+                       GFP_KERNEL, cpu_to_node(cpu));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: kernel/ktrace/ring_buffer.c:295:
+                       GFP_KERNEL, cpu_to_node(cpu));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/ktrace/ring_buffer.c:296:
+       if (!cpu_buffer->page_array)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 14)
#170: FILE: kernel/ktrace/ring_buffer.c:296:
+       if (!cpu_buffer->page_array)
               goto fail_free_buffer;

CHECK:SPACING: No space is necessary after a cast
#173: FILE: kernel/ktrace/ring_buffer.c:299:
+       page = (struct buffer_page *) ((void *) cpu_buffer->page_array +

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: kernel/ktrace/ring_buffer.c:299:
+       page = (struct buffer_page *) ((void *) cpu_buffer->page_array +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/ktrace/ring_buffer.c:300:
+                       BP_HEADER_SIZE * (buffer->pages -1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/ktrace/ring_buffer.c:300:
+                       BP_HEADER_SIZE * (buffer->pages -1));$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#174: FILE: kernel/ktrace/ring_buffer.c:300:
+                       BP_HEADER_SIZE * (buffer->pages -1));
                                                        ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 15)
#177: FILE: kernel/ktrace/ring_buffer.c:303:
       if (!addr)
+               goto fail_free_array;

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/ktrace/ring_buffer.c:304:
+               goto fail_free_array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/ktrace/ring_buffer.c:304:
+               goto fail_free_array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/ktrace/ring_buffer.c:308:
+       ret = rb_allocate_pages(cpu_buffer, buffer->pages - 1);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 15)
#186: FILE: kernel/ktrace/ring_buffer.c:309:
       if (ret < 0)
+               goto fail_free_array;

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: kernel/ktrace/ring_buffer.c:310:
+               goto fail_free_array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/ktrace/ring_buffer.c:310:
+               goto fail_free_array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: kernel/ktrace/ring_buffer.c:319:
+       kfree(cpu_buffer->page_array);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/ktrace/ring_buffer.c:338:
+       kfree(cpu_buffer->page_array);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: kernel/ktrace/ring_buffer.c:443:
+               p = cpu_buffer->pages.prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: kernel/ktrace/ring_buffer.c:443:
+               p = cpu_buffer->pages.prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: kernel/ktrace/ring_buffer.c:501:
+       struct buffer_page *page, *array;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 15)
#232: FILE: kernel/ktrace/ring_buffer.c:547:
       for_each_buffer_cpu(buffer, cpu) {
+               cpu_buffer = buffer->buffers[cpu];

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: kernel/ktrace/ring_buffer.c:548:
+               cpu_buffer = buffer->buffers[cpu];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: kernel/ktrace/ring_buffer.c:548:
+               cpu_buffer = buffer->buffers[cpu];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: kernel/ktrace/ring_buffer.c:549:
+               array = kzalloc_node(BP_HEADER_SIZE * nr_pages,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: kernel/ktrace/ring_buffer.c:549:
+               array = kzalloc_node(BP_HEADER_SIZE * nr_pages,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: kernel/ktrace/ring_buffer.c:550:
+                       GFP_KERNEL, cpu_to_node(cpu));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: kernel/ktrace/ring_buffer.c:550:
+               array = kzalloc_node(BP_HEADER_SIZE * nr_pages,
+                       GFP_KERNEL, cpu_to_node(cpu));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: kernel/ktrace/ring_buffer.c:550:
+                       GFP_KERNEL, cpu_to_node(cpu));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: kernel/ktrace/ring_buffer.c:551:
+               memcpy(array, cpu_buffer->page_array,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: kernel/ktrace/ring_buffer.c:551:
+               memcpy(array, cpu_buffer->page_array,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: kernel/ktrace/ring_buffer.c:552:
+                               BP_HEADER_SIZE * buffer->pages);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: kernel/ktrace/ring_buffer.c:552:
+               memcpy(array, cpu_buffer->page_array,
+                               BP_HEADER_SIZE * buffer->pages);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: kernel/ktrace/ring_buffer.c:552:
+                               BP_HEADER_SIZE * buffer->pages);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 23)
#238: FILE: kernel/ktrace/ring_buffer.c:553:
               for (i = 0; i < new_pages; i++) {
+                       page = (struct buffer_page *) ((void *) array +

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: kernel/ktrace/ring_buffer.c:554:
+                       page = (struct buffer_page *) ((void *) array +$

CHECK:SPACING: No space is necessary after a cast
#245: FILE: kernel/ktrace/ring_buffer.c:554:
+                       page = (struct buffer_page *) ((void *) array +

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/ktrace/ring_buffer.c:554:
+                       page = (struct buffer_page *) ((void *) array +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: kernel/ktrace/ring_buffer.c:555:
+                                       (buffer->pages + i) * BP_HEADER_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: kernel/ktrace/ring_buffer.c:555:
+                                       (buffer->pages + i) * BP_HEADER_SIZE);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (22, 31)
#248: FILE: kernel/ktrace/ring_buffer.c:557:
                       if (!addr)
+                               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: kernel/ktrace/ring_buffer.c:558:
+                               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: kernel/ktrace/ring_buffer.c:558:
+                               return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: kernel/ktrace/ring_buffer.c:560:
+                       list_add_tail(&page->list, &pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: kernel/ktrace/ring_buffer.c:560:
+                       list_add_tail(&page->list, &pages);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: kernel/ktrace/ring_buffer.c:563:
+               kfree(cpu_buffer->page_array);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: kernel/ktrace/ring_buffer.c:563:
+               kfree(cpu_buffer->page_array);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: kernel/ktrace/ring_buffer.c:564:
+               cpu_buffer->page_array = array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: kernel/ktrace/ring_buffer.c:564:
+               cpu_buffer->page_array = array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: kernel/ktrace/ring_buffer.c:1298:
+       return rb_per_cpu_empty(cpu_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/ktrace/ring_buffer.c:1642:
+       struct buffer_page *reader;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: kernel/ktrace/ring_buffer.c:1643:
+       unsigned pgoff;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: kernel/ktrace/ring_buffer.c:1643:
+       unsigned pgoff;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/ktrace/ring_buffer.c:1645:
+       reader = rb_get_reader_page(cpu_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: kernel/ktrace/ring_buffer.c:1646:
+       if (!reader)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#300: FILE: kernel/ktrace/ring_buffer.c:1646:
+       if (!reader)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: kernel/ktrace/ring_buffer.c:1647:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/ktrace/ring_buffer.c:1647:
+               return 0;$

CHECK:SPACING: No space is necessary after a cast
#302: FILE: kernel/ktrace/ring_buffer.c:1648:
+       pgoff = ((void *) reader - (void *) cpu_buffer->page_array) /

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: kernel/ktrace/ring_buffer.c:1648:
+       pgoff = ((void *) reader - (void *) cpu_buffer->page_array) /$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: kernel/ktrace/ring_buffer.c:1649:
+               BP_HEADER_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/ktrace/ring_buffer.c:1649:
+               BP_HEADER_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: kernel/ktrace/ring_buffer.c:1650:
+       return pgoff * BUF_PAGE_SIZE + rb_page_commit(reader);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: kernel/ktrace/ring_buffer.c:1655:
+       struct buffer_page *reader;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: kernel/ktrace/ring_buffer.c:1656:
+       unsigned pgoff;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#310: FILE: kernel/ktrace/ring_buffer.c:1656:
+       unsigned pgoff;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: kernel/ktrace/ring_buffer.c:1658:
+       reader = rb_get_reader_page(cpu_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: kernel/ktrace/ring_buffer.c:1659:
+       if (!reader)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#313: FILE: kernel/ktrace/ring_buffer.c:1659:
+       if (!reader)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: kernel/ktrace/ring_buffer.c:1660:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/ktrace/ring_buffer.c:1660:
+               return 0;$

CHECK:SPACING: No space is necessary after a cast
#315: FILE: kernel/ktrace/ring_buffer.c:1661:
+       pgoff = ((void *) reader - (void *) cpu_buffer->page_array) /

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: kernel/ktrace/ring_buffer.c:1661:
+       pgoff = ((void *) reader - (void *) cpu_buffer->page_array) /$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: kernel/ktrace/ring_buffer.c:1662:
+               BP_HEADER_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: kernel/ktrace/ring_buffer.c:1662:
+               BP_HEADER_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: kernel/ktrace/ring_buffer.c:1663:
+       return pgoff * BUF_PAGE_SIZE + reader->read;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: kernel/ktrace/ring_buffer.c:1667:
+               int count)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: kernel/ktrace/ring_buffer.c:1667:
+void ring_buffer_advance_reader(struct ring_buffer_per_cpu *cpu_buffer,
+               int count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: kernel/ktrace/ring_buffer.c:1667:
+               int count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: kernel/ktrace/ring_buffer.c:1669:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: kernel/ktrace/ring_buffer.c:1670:
+       struct buffer_page *reader;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: kernel/ktrace/ring_buffer.c:1672:
+       spin_lock_irqsave(&cpu_buffer->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: kernel/ktrace/ring_buffer.c:1673:
+       reader = cpu_buffer->reader_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: kernel/ktrace/ring_buffer.c:1674:
+       reader->read += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/ktrace/ring_buffer.c:1675:
+       spin_unlock_irqrestore(&cpu_buffer->lock, flags);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: kernel/ktrace/ring_buffer.c:1678:
+struct page * ring_buffer_get_page(struct ring_buffer_per_cpu *cpu_buffer,

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: kernel/ktrace/ring_buffer.c:1679:
+               pgoff_t pgoff)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: kernel/ktrace/ring_buffer.c:1679:
+struct page * ring_buffer_get_page(struct ring_buffer_per_cpu *cpu_buffer,
+               pgoff_t pgoff)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: kernel/ktrace/ring_buffer.c:1679:
+               pgoff_t pgoff)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: kernel/ktrace/ring_buffer.c:1681:
+       struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: kernel/ktrace/ring_buffer.c:1682:
+       struct buffer_page *bpage;$

CHECK:SPACING: No space is necessary after a cast
#338: FILE: kernel/ktrace/ring_buffer.c:1684:
+       bpage = (struct buffer_page *) ((void *) cpu_buffer->page_array +

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: kernel/ktrace/ring_buffer.c:1684:
+       bpage = (struct buffer_page *) ((void *) cpu_buffer->page_array +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: kernel/ktrace/ring_buffer.c:1685:
+                       pgoff * BP_HEADER_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: kernel/ktrace/ring_buffer.c:1685:
+                       pgoff * BP_HEADER_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: kernel/ktrace/ring_buffer.c:1686:
+       page = virt_to_page(bpage->page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: kernel/ktrace/ring_buffer.c:1687:
+       if (!page)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#341: FILE: kernel/ktrace/ring_buffer.c:1687:
+       if (!page)
+               printk("error: fail to vmalloc page\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: kernel/ktrace/ring_buffer.c:1688:
+               printk("error: fail to vmalloc page\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: kernel/ktrace/ring_buffer.c:1688:
+               printk("error: fail to vmalloc page\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: kernel/ktrace/ring_buffer.c:1688:
+               printk("error: fail to vmalloc page\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: kernel/ktrace/ring_buffer.c:1689:
+       return page;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197022.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 33 errors, 81 warnings, 15 checks, 277 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197022.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
