WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#215: FILE: fs/namei.c:705:
+void follow_mount(struct nameidata *nd)
                                     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#258: FILE: fs/namei.c:777:
+	follow_mount(nd);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#288: FILE: fs/namei.c:833:
+static int enter_file(struct inode *inode, struct nameidata *nd)
                                                              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#293: FILE: fs/namei.c:838:
+	printk(KERN_DEBUG "%s/%d enter %s/\n", current->comm, current->pid,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#300: FILE: fs/namei.c:845:
+	err = inode->i_op->enter(nd, &newpath);
 	                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#302: FILE: fs/namei.c:847:
+		err = mount_dironfile(nd, &newpath);
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#339: FILE: fs/namei.c:963:
+			err = enter_file(inode, nd);
 			                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#374: FILE: fs/namei.c:1021:
+				err = enter_file(inode, nd);
 				                        ^^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#404: FILE: fs/namei.c:2519:
+	if (d_real_mountpoint(old_dentry)||d_real_mountpoint(new_dentry))
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#441: FILE: fs/namespace.c:167:
+	BUG_ON(IS_MNT_DIRONFILE(mnt));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#481: FILE: fs/namespace.c:372:
+	struct nameidata nd;
 	                 ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#483: FILE: fs/namespace.c:374:
+	printk(KERN_DEBUG "umount dir-on-file %p\n", mnt);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: fs/namespace.c:375:
+	BUG_ON(!IS_MNT_DIRONFILE(mnt));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#492: FILE: fs/namespace.c:383:
+	detach_mnt(mnt, &nd);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#499: FILE: fs/namespace.c:390:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'reseting' may be misspelled - perhaps 'resetting'?
#510: FILE: fs/namespace.c:403:
+ * Decrement mount refcount, without reseting the expiry flag
                                      ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#546: FILE: fs/namespace.c:679:
+			printk(KERN_DEBUG "detach dir-on-file %p\n", p);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#647: FILE: fs/namespace.c:1157:
+int mount_dironfile(struct nameidata *nd, struct path *old)
                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#673: FILE: fs/namespace.c:1183:
+	attach_mnt(mnt, nd);
 	                ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#677: FILE: fs/namespace.c:1187:
+	printk(KERN_DEBUG "mount dir-on-file %p\n", mnt);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#687: FILE: fs/namespace.c:1197:
+		follow_mount(nd);
 		             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#704: FILE: fs/namespace.c:1262:
+	follow_mount(nd);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#724: FILE: fs/namespace.c:1379:
+	follow_mount(nd);
 	             ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#779: FILE: fs/namespace.c:1824:
+		printk(KERN_DEBUG "clone dir-on-file %p\n", q);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#813: FILE: include/linux/namei.h:99:
+extern void follow_mount(struct nameidata *nd);
                                            ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#813: FILE: include/linux/namei.h:99:
+extern void follow_mount(struct nameidata *nd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#841: FILE: include/linux/fs.h:1152:
+	int (*enter) (struct nameidata *, struct path *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#841: FILE: include/linux/fs.h:1152:
+	int (*enter) (struct nameidata *, struct path *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#841: FILE: include/linux/fs.h:1152:
+	int (*enter) (struct nameidata *, struct path *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#849: FILE: include/linux/fs.h:1323:
+extern int mount_dironfile(struct nameidata *nd, struct path *old);
                                              ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#849: FILE: include/linux/fs.h:1323:
+extern int mount_dironfile(struct nameidata *nd, struct path *old);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#888: FILE: include/linux/dcache.h:373:
+	BUG_ON(dentry->d_mounted < dentry->d_dironfile);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#892: FILE: include/linux/dcache.h:377:
+extern struct vfsmount *lookup_mnt(struct vfsmount *, struct dentry *, bool);

WARNING:REPEATED_WORD: Possible repeated word: 'mounted'
#959: FILE: Documentation/filesystems/vfs.txt:454:
+  	bind mounted mounted on the object.  The mount will be marked

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#973: FILE: fs/dcache.c:90:
+	BUG_ON(dentry->d_dironfile);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428015.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 31 warnings, 3 checks, 726 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428015.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
