CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#51: FILE: arch/x86/boot/bitops.h:24:
 }
+static inline int variable_test_bit(unsigned long nr, const void *addr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#72: FILE: arch/x86/include/asm/bitops.h:60:
+set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#82: FILE: arch/x86/include/asm/bitops.h:83:
+__set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#91: FILE: arch/x86/include/asm/bitops.h:99:
+clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#101: FILE: arch/x86/include/asm/bitops.h:121:
+clear_bit_unlock(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#109: FILE: arch/x86/include/asm/bitops.h:128:
+__clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#119: FILE: arch/x86/include/asm/bitops.h:146:
+__clear_bit_unlock(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#129: FILE: arch/x86/include/asm/bitops.h:165:
+__change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#139: FILE: arch/x86/include/asm/bitops.h:180:
+change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#149: FILE: arch/x86/include/asm/bitops.h:202:
+test_and_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#158: FILE: arch/x86/include/asm/bitops.h:220:
+test_and_set_bit_lock(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#168: FILE: arch/x86/include/asm/bitops.h:235:
+__test_and_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#178: FILE: arch/x86/include/asm/bitops.h:255:
+test_and_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#188: FILE: arch/x86/include/asm/bitops.h:276:
+__test_and_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#198: FILE: arch/x86/include/asm/bitops.h:289:
+__test_and_change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#208: FILE: arch/x86/include/asm/bitops.h:310:
+test_and_change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#218: FILE: arch/x86/include/asm/bitops.h:322:
+constant_test_bit(unsigned long nr, const volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#226: FILE: arch/x86/include/asm/bitops.h:329:
+variable_test_bit(unsigned long nr, volatile const unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#239: FILE: arch/x86/include/asm/sync_bitops.h:30:
+sync_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#249: FILE: arch/x86/include/asm/sync_bitops.h:49:
+sync_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#259: FILE: arch/x86/include/asm/sync_bitops.h:67:
+sync_change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#269: FILE: arch/x86/include/asm/sync_bitops.h:84:
+sync_test_and_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#279: FILE: arch/x86/include/asm/sync_bitops.h:103:
+sync_test_and_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#289: FILE: arch/x86/include/asm/sync_bitops.h:122:
+sync_test_and_change_bit(unsigned long nr, volatile unsigned long *addr)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162769.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 1 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162769.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
