WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#57: FILE: MAINTAINERS:781:
+P:	Mike Frysinger
+M:	michael.frysinger@analog.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#61: FILE: MAINTAINERS:785:
+W:	http://blackfin.uclinux.org
+S:	Supported

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: drivers/char/watchdog/Kconfig:621:
+config BFIN_WDT
+	tristate "Blackfin On-Chip Watchdog Timer"
+	depends on WATCHDOG && BLACKFIN
+	---help---
+	  If you say yes here you will get support for the Blackfin On-Chip
+	  Watchdog Timer. If you have one of these processors and wish to
+	  have watchdog support enabled, say Y, otherwise say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called bfin_wdt.
+
 # SPARC64 Architecture
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: drivers/char/watchdog/bfin_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#137: FILE: drivers/char/watchdog/bfin_wdt.c:28:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: drivers/char/watchdog/bfin_wdt.c:79:
+ * ^IThe Userspace watchdog got a KeepAlive: schedule the next timeout.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#249: FILE: drivers/char/watchdog/bfin_wdt.c:140:
+		printk(KERN_WARNING PFX "timeout value is too large\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: drivers/char/watchdog/bfin_wdt.c:147:
+		int run = bfin_wdt_running();
+		bfin_wdt_stop();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#258: FILE: drivers/char/watchdog/bfin_wdt.c:149:
+		if (run) bfin_wdt_start();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#304: FILE: drivers/char/watchdog/bfin_wdt.c:195:
+		printk(KERN_CRIT PFX "Unexpected close, not stopping watchdog!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: drivers/char/watchdog/bfin_wdt.c:215:
+                              size_t len, loff_t *ppos)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/char/watchdog/bfin_wdt.c:215:
+                              size_t len, loff_t *ppos)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: drivers/char/watchdog/bfin_wdt.c:228:
+				char c;
+				if (get_user(c, data + i))

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: drivers/char/watchdog/bfin_wdt.c:251:
+                          unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/char/watchdog/bfin_wdt.c:251:
+                          unsigned int cmd, unsigned long arg)$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#367: FILE: drivers/char/watchdog/bfin_wdt.c:258:
+	switch (cmd) {
+		default:
[...]
+		case WDIOC_GETSUPPORT:
[...]
+		case WDIOC_GETSTATUS:
+		case WDIOC_GETBOOTSTATUS:
[...]
+		case WDIOC_KEEPALIVE:
[...]
+		case WDIOC_GETTIMEOUT:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/char/watchdog/bfin_wdt.c:325:
+                               void *unused)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/char/watchdog/bfin_wdt.c:325:
+                               void *unused)$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#502: FILE: drivers/char/watchdog/bfin_wdt.c:393:
+static struct file_operations bfin_wdt_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: drivers/char/watchdog/bfin_wdt.c:411:
+^I            WDIOF_KEEPALIVEPING |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: drivers/char/watchdog/bfin_wdt.c:412:
+^I            WDIOF_MAGICCLOSE,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#557: FILE: drivers/char/watchdog/bfin_wdt.c:448:
+		printk(KERN_ERR PFX "cannot register reboot notifier (err=%d)\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#563: FILE: drivers/char/watchdog/bfin_wdt.c:454:
+		printk(KERN_ERR PFX "cannot register miscdev on minor=%d (err=%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#569: FILE: drivers/char/watchdog/bfin_wdt.c:460:
+	printk(KERN_INFO PFX "initialized: timeout=%d sec (nowayout=%d)\n",

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#596: FILE: drivers/char/watchdog/bfin_wdt.c:487:
+MODULE_PARM_DESC(timeout, "Watchdog timeout in seconds. (1<=timeout<=((2^32)/SCLK), default=" __MODULE_STRING(WATCHDOG_TIMEOUT) ")");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#599: FILE: drivers/char/watchdog/bfin_wdt.c:490:
+MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started (default=" __MODULE_STRING(WATCHDOG_NOWAYOUT) ")");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406236.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 19 warnings, 0 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406236.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
