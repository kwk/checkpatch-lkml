CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#77: FILE: drivers/s390/block/dasd_devmap.c:709:
+	if (devmap->device && devmap->device->block
+	    && devmap->device->block->gdp)

CHECK:SPACING: No space is necessary after a cast
#257: FILE: drivers/s390/block/dasd_diag.c:250:
+	device = (struct dasd_device *) cqr->startdev;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#334: FILE: drivers/s390/block/dasd_diag.c:423:
+		block->blocks = (unsigned long) label->block_count;

CHECK:SPACING: No space is necessary after a cast
#357: FILE: drivers/s390/block/dasd_diag.c:438:
+			    (unsigned long) block->bp_block,

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/s390/block/dasd_diag.c:439:
+			    (unsigned long) (block->blocks <<

CHECK:SPACING: No space is necessary after a cast
#519: FILE: drivers/s390/block/dasd_eckd.c:279:
+	private = (struct dasd_eckd_private *) device->private;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#530: FILE: drivers/s390/block/dasd_eckd.c:290:
+	if (rc == -ENOSYS || rc == -EACCES)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/s390/block/dasd_eckd.c:304:
+	basepriv = (struct dasd_eckd_private *) basedev->private;

CHECK:SPACING: No space is necessary after a cast
#545: FILE: drivers/s390/block/dasd_eckd.c:305:
+	startpriv = (struct dasd_eckd_private *) startdev->private;

CHECK:SPACING: No space is necessary after a cast
#551: FILE: drivers/s390/block/dasd_eckd.c:311:
+	ccw->cda = (__u32) __pa(pfxdata);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#612: FILE: drivers/s390/block/dasd_eckd.c:372:
+	     basepriv->rdc_data.cu_type == 0x1750)
+	    && !(basepriv->uses_cdl && trk < 2))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#625: FILE: drivers/s390/block/dasd_eckd.c:385:
+	    data->attributes.operation == DASD_SEQ_ACCESS) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#730: FILE: drivers/s390/block/dasd_eckd.c:720:
+	private = (struct dasd_eckd_private *) device->private;

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#732: FILE: drivers/s390/block/dasd_eckd.c:722:
+				   1 /* PSF */	+ 1 /* RSSD */ ,
 				              	               ^

CHECK:SPACING: No space is necessary after a cast
#749: FILE: drivers/s390/block/dasd_eckd.c:739:
+	prssdp = (struct dasd_psf_prssd_data *) cqr->data;

CHECK:SPACING: No space is necessary after a cast
#759: FILE: drivers/s390/block/dasd_eckd.c:749:
+	ccw->cda = (__u32)(addr_t) prssdp;

CHECK:SPACING: No space is necessary after a cast
#762: FILE: drivers/s390/block/dasd_eckd.c:752:
+	features = (struct dasd_rssd_features *) (prssdp + 1);

CHECK:SPACING: No space is necessary after a cast
#768: FILE: drivers/s390/block/dasd_eckd.c:758:
+	ccw->cda = (__u32)(addr_t) features;

CHECK:SPACING: No space is necessary after a cast
#775: FILE: drivers/s390/block/dasd_eckd.c:765:
+		prssdp = (struct dasd_psf_prssd_data *) cqr->data;

CHECK:SPACING: No space is necessary after a cast
#776: FILE: drivers/s390/block/dasd_eckd.c:766:
+		features = (struct dasd_rssd_features *) (prssdp + 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#784: FILE: drivers/s390/block/dasd_eckd.c:774:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#800: FILE: drivers/s390/block/dasd_eckd.c:784:
+	cqr = dasd_smalloc_request("ECKD", 1 /* PSF */ ,
 	                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#801: FILE: drivers/s390/block/dasd_eckd.c:785:
+	cqr = dasd_smalloc_request("ECKD", 1 /* PSF */ ,
 				  sizeof(struct dasd_psf_ssc_data),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: drivers/s390/block/dasd_eckd.c:790:
+		DEV_MESSAGE(KERN_WARNING, device, "%s",
 			   "Could not allocate PSF-SSC request");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#840: FILE: drivers/s390/block/dasd_eckd.c:806:
+	cqr->expires = 10*HZ;
 	                 ^

CHECK:SPACING: No space is necessary after a cast
#894: FILE: drivers/s390/block/dasd_eckd.c:851:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1043: FILE: drivers/s390/block/dasd_eckd.c:1052:
+	private = (struct dasd_eckd_private *) block->base->private;

CHECK:SPACING: No space is necessary after a cast
#1124: FILE: drivers/s390/block/dasd_eckd.c:1148:
+	private = (struct dasd_eckd_private *) block->base->private;

CHECK:SPACING: No space is necessary after a cast
#1151: FILE: drivers/s390/block/dasd_eckd.c:1170:
+	private = (struct dasd_eckd_private *) block->base->private;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cqr->startdev != cqr->block->base'
#1208: FILE: drivers/s390/block/dasd_eckd.c:1370:
+	if (cqr->block && (cqr->startdev != cqr->block->base)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#1219: FILE: drivers/s390/block/dasd_eckd.c:1379:
+	struct dasd_device *device = (struct dasd_device *) cqr->startdev;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1229: FILE: drivers/s390/block/dasd_eckd.c:1401:
 
+

CHECK:SPACING: No space is necessary after a cast
#1270: FILE: drivers/s390/block/dasd_eckd.c:1449:
+	private = (struct dasd_eckd_private *) basedev->private;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1283: FILE: drivers/s390/block/dasd_eckd.c:1460:
+	first_rec = first_trk = req->sector >> block->s2b_shift;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#1357: FILE: drivers/s390/block/dasd_eckd.c:1522:
+		idaws = (unsigned long *) (cqr->data +

CHECK:SPACING: No space is necessary after a cast
#1368: FILE: drivers/s390/block/dasd_eckd.c:1533:
+		idaws = (unsigned long *) (cqr->data +

CHECK:SPACING: No space is necessary after a cast
#1419: FILE: drivers/s390/block/dasd_eckd.c:1627:
+	private = (struct dasd_eckd_private *) cqr->block->base->private;

CHECK:SPACING: No space is necessary after a cast
#1471: FILE: drivers/s390/block/dasd_eckd.c:1700:
+	private = (struct dasd_eckd_private *) startdev->private;

CHECK:SPACING: No space is necessary after a cast
#1491: FILE: drivers/s390/block/dasd_eckd.c:1720:
+	private = (struct dasd_eckd_private *) cqr->memdev->private;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1676: FILE: drivers/s390/block/dasd_eckd.c:2108:
+		for (last = first; last->flags & (CCW_FLAG_CC | CCW_FLAG_DC); last++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1681: FILE: drivers/s390/block/dasd_eckd.c:2113:
+		printk("%s", page);

CHECK:SPACING: No space is necessary after a cast
#1704: FILE: drivers/s390/block/dasd_eckd.c:2119:
+		fail = (struct ccw1 *)(addr_t) irb->scsw.cpa; /* failing CCW */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1720: FILE: drivers/s390/block/dasd_eckd.c:2135:
+			printk("%s", page);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1778: FILE: drivers/s390/block/dasd_eckd.h:151:
+	} __attribute__ ((packed)) validity;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1786: FILE: drivers/s390/block/dasd_eckd.h:159:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1808: FILE: drivers/s390/block/dasd_eckd.h:371:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1810: FILE: drivers/s390/block/dasd_eckd.h:373:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1818: FILE: drivers/s390/block/dasd_eckd.h:396:
 
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1827: FILE: drivers/s390/block/dasd_eckd.h:405:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1829: FILE: drivers/s390/block/dasd_eckd.h:407:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1838: FILE: drivers/s390/block/dasd_eckd.h:416:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1841: FILE: drivers/s390/block/dasd_eckd.h:419:
+	spinlock_t lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1866: FILE: drivers/s390/block/dasd_eckd.h:444:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1885: FILE: drivers/s390/block/dasd_eckd.h:463:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1903: FILE: drivers/s390/block/dasd_eckd.h:481:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1905: FILE: drivers/s390/block/dasd_eckd.h:483:
+int dasd_alias_make_device_known_to_lcu(struct dasd_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1906: FILE: drivers/s390/block/dasd_eckd.h:484:
+void dasd_alias_disconnect_device_from_lcu(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1907: FILE: drivers/s390/block/dasd_eckd.h:485:
+int dasd_alias_add_device(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1908: FILE: drivers/s390/block/dasd_eckd.h:486:
+int dasd_alias_remove_device(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1909: FILE: drivers/s390/block/dasd_eckd.h:487:
+struct dasd_device *dasd_alias_get_start_dev(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1910: FILE: drivers/s390/block/dasd_eckd.h:488:
+void dasd_alias_handle_summary_unit_check(struct dasd_device *, struct irb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irb *' should also have an identifier name
#1910: FILE: drivers/s390/block/dasd_eckd.h:488:
+void dasd_alias_handle_summary_unit_check(struct dasd_device *, struct irb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_ccw_req *' should also have an identifier name
#1911: FILE: drivers/s390/block/dasd_eckd.h:489:
+void dasd_eckd_reset_ccw_to_base_io(struct dasd_ccw_req *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1977: FILE: drivers/s390/block/dasd_erp.c:71:
+dasd_free_erp_request(struct dasd_ccw_req *cqr, struct dasd_device * device)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#2090: FILE: drivers/s390/block/dasd_fba.c:175:
+	private = (struct dasd_fba_private *) block->base->private;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2162: FILE: drivers/s390/block/dasd_fba.c:218:
+static void dasd_fba_handle_unsolicited_interrupt(struct dasd_device *device,
+						   struct irb *irb) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2163: FILE: drivers/s390/block/dasd_fba.c:219:
+static void dasd_fba_handle_unsolicited_interrupt(struct dasd_device *device,
+						   struct irb *irb) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2180: FILE: drivers/s390/block/dasd_fba.c:236:
+static struct dasd_ccw_req *dasd_fba_build_cp(struct dasd_device * memdev,

CHECK:SPACING: No space is necessary after a cast
#2191: FILE: drivers/s390/block/dasd_fba.c:253:
+	private = (struct dasd_fba_private *) block->base->private;

CHECK:SPACING: No space is necessary after a cast
#2259: FILE: drivers/s390/block/dasd_fba.c:376:
+	private = (struct dasd_fba_private *) cqr->block->base->private;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2340: FILE: drivers/s390/block/dasd_genhd.c:61:
+					       'a'+(((base->devindex-18278)
 					          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2340: FILE: drivers/s390/block/dasd_genhd.c:61:
+					       'a'+(((base->devindex-18278)
 					                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2344: FILE: drivers/s390/block/dasd_genhd.c:64:
+				       'a'+(((base->devindex-702)/676)%26));
 				          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2344: FILE: drivers/s390/block/dasd_genhd.c:64:
+				       'a'+(((base->devindex-702)/676)%26));
 				                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2344: FILE: drivers/s390/block/dasd_genhd.c:64:
+				       'a'+(((base->devindex-702)/676)%26));
 				                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2344: FILE: drivers/s390/block/dasd_genhd.c:64:
+				       'a'+(((base->devindex-702)/676)%26));
 				                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2348: FILE: drivers/s390/block/dasd_genhd.c:67:
+			       'a'+(((base->devindex-26)/26)%26));
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2348: FILE: drivers/s390/block/dasd_genhd.c:67:
+			       'a'+(((base->devindex-26)/26)%26));
 			                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2348: FILE: drivers/s390/block/dasd_genhd.c:67:
+			       'a'+(((base->devindex-26)/26)%26));
 			                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2348: FILE: drivers/s390/block/dasd_genhd.c:67:
+			       'a'+(((base->devindex-26)/26)%26));
 			                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2351: FILE: drivers/s390/block/dasd_genhd.c:69:
+	len += sprintf(gdp->disk_name + len, "%c", 'a'+(base->devindex%26));
 	                                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2351: FILE: drivers/s390/block/dasd_genhd.c:69:
+	len += sprintf(gdp->disk_name + len, "%c", 'a'+(base->devindex%26));
 	                                                              ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344703.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 15 warnings, 61 checks, 2280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344703.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
