WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#52: FILE: block/blk-cgroup.c:19:
+extern void cfq_delink_blkio_group(void *, struct blkio_group *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#52: FILE: block/blk-cgroup.c:19:
+extern void cfq_delink_blkio_group(void *, struct blkio_group *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blkio_group *' should also have an identifier name
#52: FILE: block/blk-cgroup.c:19:
+extern void cfq_delink_blkio_group(void *, struct blkio_group *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: block/blk-cgroup.c:182:
+	blkg = hlist_entry(blkcg->blkg_list.first, struct blkio_group,
+				blkcg_node);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: block/cfq-iosched.c:310:
+	BUG_ON(idx >= IO_IOPRIO_CLASSES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#236: FILE: block/cfq-iosched.c:520:
+	BUG_ON(atomic_read(&cfqg->ref) <= 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#242: FILE: block/cfq-iosched.c:526:
+		BUG_ON(!RB_EMPTY_ROOT(&st->rb));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: block/cfq-iosched.c:527:
+		BUG_ON(st->active != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "st->active"
#243: FILE: block/cfq-iosched.c:527:
+		BUG_ON(st->active != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#252: FILE: block/cfq-iosched.c:536:
+	BUG_ON(hlist_unhashed(&cfqg->cfqd_node));

WARNING:TYPO_SPELLING: 'deltion' may be misspelled - perhaps 'deletion'?
#290: FILE: block/cfq-iosched.c:574:
+ * it should not be NULL as even if elevator was exiting, cgroup deltion
                                                                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052611.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 2 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052611.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
