WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Gitweb:     http://git.kernel.org/tip/7ce7e4249921d5073e764f7ff7ad83cfa9894bd7

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#47: 
be written to to set filters; reading from it will display the current

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: kernel/trace/trace.h:828:
+extern void filter_free_pred(struct filter_pred *pred);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: kernel/trace/trace.h:829:
+extern int filter_print_preds(struct filter_pred **preds, char *buf);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: kernel/trace/trace.h:830:
+extern int filter_parse(char **pbuf, struct filter_pred *pred);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: kernel/trace/trace.h:831:
+extern int filter_add_pred(struct ftrace_event_call *call,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: kernel/trace/trace.h:833:
+extern void filter_free_preds(struct ftrace_event_call *call);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: kernel/trace/trace.h:834:
+extern int filter_match_preds(struct ftrace_event_call *call, void *rec);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#184: FILE: kernel/trace/trace_events.c:463:
+event_filter_read(struct file *filp, char __user *ubuf, size_t cnt,
                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#209: FILE: kernel/trace/trace_events.c:488:
+event_filter_write(struct file *filp, const char __user *ubuf, size_t cnt,
                                 ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#272: FILE: kernel/trace/trace_events.c:697:
+		pr_warning("Could not create debugfs "
+			   "'%s/filter' entry\n", call->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#278: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#283: FILE: kernel/trace/trace_events_filter.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#297: FILE: kernel/trace/trace_events_filter.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#298: FILE: kernel/trace/trace_events_filter.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:BRACES: braces {} should be used on all arms of this statement
#373: FILE: kernel/trace/trace_events_filter.c:91:
+		if (call->preds[i]) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#378: FILE: kernel/trace/trace_events_filter.c:96:
+			if (!matched && !pred->or) {
[...]
+			} else if (matched && pred->or)
[...]

CHECK:BRACES: Unbalanced braces around else statement
#383: FILE: kernel/trace/trace_events_filter.c:101:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#406: FILE: kernel/trace/trace_events_filter.c:124:
+		if (preds[i]) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#422: FILE: kernel/trace/trace_events_filter.c:140:
+		} else

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#475: FILE: kernel/trace/trace_events_filter.c:193:
+		call->preds = kzalloc(MAX_FILTER_PRED * sizeof(pred),
+				      GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#541: FILE: kernel/trace/trace_events_filter.c:259:
+	while ((tok = strsep(pbuf, " \n"))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#543: FILE: kernel/trace/trace_events_filter.c:261:
+			if (!strcmp(tok, "0")) {
[...]
+			} else if (!strcmp(tok, "&&")) {
[...]
+			} else if (!strcmp(tok, "||")) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#552: FILE: kernel/trace/trace_events_filter.c:270:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#558: FILE: kernel/trace/trace_events_filter.c:276:
+			if (!pred->field_name)
[...]
+			else if (!strcmp(tok, "!="))
[...]
+			else if (!strcmp(tok, "=="))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#564: FILE: kernel/trace/trace_events_filter.c:282:
+			else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#573: FILE: kernel/trace/trace_events_filter.c:291:
+				if (!strcmp(tok, "!="))
[...]
+				else if (!strcmp(tok, "=="))
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#577: FILE: kernel/trace/trace_events_filter.c:295:
+				else {

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#598: FILE: kernel/trace/trace_events_filter.c:316:
+	pred->val = simple_strtoull(val_str, &tmp, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#608: FILE: kernel/trace/trace_events_filter.c:326:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151257.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 10 warnings, 18 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151257.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
