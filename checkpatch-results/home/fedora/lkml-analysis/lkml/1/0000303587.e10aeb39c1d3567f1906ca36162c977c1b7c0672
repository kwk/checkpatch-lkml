CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: fs/xattr.c:72:
+vfs_setxattr(struct dentry *dentry, const char *name, const void *value,
 		size_t size, int flags)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/security.h:54:
+extern int cap_inode_setxattr(struct dentry *dentry, const char *name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: include/linux/security.h:56:
+extern int cap_inode_removexattr(struct dentry *dentry, const char *name);

WARNING:SPACING: Unnecessary space before function pointer arguments
#238: FILE: include/linux/security.h:1309:
+	int (*inode_setxattr) (struct dentry *dentry, const char *name,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#240: FILE: include/linux/security.h:1311:
+	void (*inode_post_setxattr) (struct dentry *dentry, const char *name,

WARNING:SPACING: Unnecessary space before function pointer arguments
#242: FILE: include/linux/security.h:1313:
+	int (*inode_getxattr) (struct dentry *dentry, const char *name);

WARNING:SPACING: Unnecessary space before function pointer arguments
#245: FILE: include/linux/security.h:1315:
+	int (*inode_removexattr) (struct dentry *dentry, const char *name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: include/linux/security.h:1976:
+static inline int security_inode_setxattr (struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: include/linux/security.h:1983:
+static inline void security_inode_post_setxattr (struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: include/linux/security.h:1989:
+static inline int security_inode_getxattr (struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: include/linux/security.h:2000:
+static inline int security_inode_removexattr (struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: include/linux/syscalls.h:253:
+asmlinkage ssize_t sys_lgetxattr(const char __user *path, const char __user *name,
 				void __user *value, size_t size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: include/linux/syscalls.h:255:
+asmlinkage ssize_t sys_fgetxattr(int fd, const char __user *name,
 				void __user *value, size_t size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: include/linux/syscalls.h:257:
+asmlinkage ssize_t sys_listxattr(const char __user *path, char __user *list,
 				size_t size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: include/linux/syscalls.h:259:
+asmlinkage ssize_t sys_llistxattr(const char __user *path, char __user *list,
 				size_t size);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#362: FILE: include/linux/xattr.h:50:
+ssize_t vfs_getxattr(struct dentry *, const char *, void *, size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#362: FILE: include/linux/xattr.h:50:
+ssize_t vfs_getxattr(struct dentry *, const char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#362: FILE: include/linux/xattr.h:50:
+ssize_t vfs_getxattr(struct dentry *, const char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#362: FILE: include/linux/xattr.h:50:
+ssize_t vfs_getxattr(struct dentry *, const char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#366: FILE: include/linux/xattr.h:52:
+int vfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#366: FILE: include/linux/xattr.h:52:
+int vfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#366: FILE: include/linux/xattr.h:52:
+int vfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#366: FILE: include/linux/xattr.h:52:
+int vfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#366: FILE: include/linux/xattr.h:52:
+int vfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#367: FILE: include/linux/xattr.h:53:
+int vfs_removexattr(struct dentry *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#367: FILE: include/linux/xattr.h:53:
+int vfs_removexattr(struct dentry *, const char *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: security/dummy.c:368:
+static int dummy_inode_setxattr (struct dentry *dentry, const char *name,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: security/dummy.c:378:
+static void dummy_inode_post_setxattr (struct dentry *dentry, const char *name,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#423: FILE: security/dummy.c:384:
+static int dummy_inode_getxattr (struct dentry *dentry, const char *name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: security/dummy.c:394:
+static int dummy_inode_removexattr (struct dentry *dentry, const char *name)

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: security/selinux/hooks.c:2628:
+                                        const void *value, size_t size,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: security/selinux/hooks.c:2628:
+                                        const void *value, size_t size,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#518: FILE: security/selinux/hooks.c:2652:
+static int selinux_inode_getxattr (struct dentry *dentry, const char *name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#527: FILE: security/selinux/hooks.c:2662:
+static int selinux_inode_removexattr (struct dentry *dentry, const char *name)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: security/selinux/include/security.h:87:
+int security_context_to_sid(const char *scontext, u32 scontext_len,
 	u32 *out_sid);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 26 warnings, 8 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
