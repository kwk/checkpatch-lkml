WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '61205226c1aed87e444c3e0e4a271aee76c57589', maybe rebased or not pulled?
#70: 
commit 61205226c1aed87e444c3e0e4a271aee76c57589

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#76: 
    This was a forward port of work done by Mathieu Desnoyers, I changed it to

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#81: 
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: block/blk-core.c:1268:
+		trace_block_remap(bdev_get_queue(bio->bi_bdev), bio,
 				    bdev->bd_dev, bio->bi_sector,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: block/blk-core.c:1440:
+			trace_block_remap(q, bio, old_dev, bio->bi_sector,
 					    old_sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: block/blktrace.c:131:
+static void __blk_add_trace(struct blk_trace *bt, sector_t sector, int bytes,
 		     int rw, u32 what, int error, int pdu_len, void *pdu_data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: block/blktrace.c:602:
+static void blk_add_trace_rq(struct request_queue *q, struct request *rq,
+				    u32 what)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: block/blktrace.c:660:
+static void blk_add_trace_bio(struct request_queue *q, struct bio *bio,
+				     u32 what)

CHECK:BRACES: braces {} should be used on all arms of this statement
#418: FILE: block/blktrace.c:698:
+	if (bio)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#420: FILE: block/blktrace.c:700:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#428: FILE: block/blktrace.c:708:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#431: FILE: block/blktrace.c:711:
+	if (bio)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#433: FILE: block/blktrace.c:713:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: block/blktrace.c:783:
+static void blk_add_trace_remap(struct request_queue *q, struct bio *bio,
+				       dev_t dev, sector_t from, sector_t to)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/md/dm.c:602:
+		trace_block_remap(bdev_get_queue(clone->bi_bdev), clone,
 				    tio->io->bio->bi_bdev->bd_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: fs/bio.c:1268:
+	trace_block_split(bdev_get_queue(bi->bi_bdev), bi,
 				bi->bi_sector + first_sectors);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#880: FILE: include/linux/blktrace_api.h:188:
+extern void blk_add_driver_data(struct request_queue *q, struct request *rq,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#901: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#906: FILE: include/trace/block.h:1:
+#ifndef _TRACE_BLOCK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: include/trace/block.h:8:
+DEFINE_TRACE(block_rq_abort,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#916: FILE: include/trace/block.h:11:
+DEFINE_TRACE(block_rq_insert,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: include/trace/block.h:14:
+DEFINE_TRACE(block_rq_issue,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: include/trace/block.h:17:
+DEFINE_TRACE(block_rq_requeue,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: include/trace/block.h:20:
+DEFINE_TRACE(block_rq_complete,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: include/trace/block.h:23:
+DEFINE_TRACE(block_bio_bounce,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: include/trace/block.h:26:
+DEFINE_TRACE(block_bio_complete,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: include/trace/block.h:29:
+DEFINE_TRACE(block_bio_backmerge,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: include/trace/block.h:32:
+DEFINE_TRACE(block_bio_frontmerge,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: include/trace/block.h:35:
+DEFINE_TRACE(block_bio_queue,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: include/trace/block.h:38:
+DEFINE_TRACE(block_getrq,
+	TPPROTO(struct request_queue *q, struct bio *bio, int rw),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#946: FILE: include/trace/block.h:41:
+DEFINE_TRACE(block_sleeprq,
+	TPPROTO(struct request_queue *q, struct bio *bio, int rw),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#949: FILE: include/trace/block.h:44:
+DEFINE_TRACE(block_plug,
+	TPPROTO(struct request_queue *q),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: include/trace/block.h:47:
+DEFINE_TRACE(block_unplug_timer,
+	TPPROTO(struct request_queue *q),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: include/trace/block.h:50:
+DEFINE_TRACE(block_unplug_io,
+	TPPROTO(struct request_queue *q),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: include/trace/block.h:53:
+DEFINE_TRACE(block_split,
+	TPPROTO(struct request_queue *q, struct bio *bio, unsigned int pdu),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#961: FILE: include/trace/block.h:56:
+DEFINE_TRACE(block_remap,
+	TPPROTO(struct request_queue *q, struct bio *bio, dev_t dev,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 31 checks, 831 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
