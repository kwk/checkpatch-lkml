CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#56: FILE: kernel/module.c:2078:
+static Elf_Ehdr *examine_fatelf_module(const unsigned char *hdr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#63: FILE: kernel/module.c:2085:
+	if (likely(le32_to_cpu(fatelf->magic) != FATELF_MAGIC)) {
[...]
+	} else if (unlikely(le16_to_cpu(fatelf->version) != 1)) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#64: FILE: kernel/module.c:2086:
+		return (Elf_Ehdr *) hdr;  /* not FatELF; not an error. */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: kernel/module.c:2091:
+	memset(&elf, 0, sizeof (elf));

CHECK:SPACING: No space is necessary after a cast
#71: FILE: kernel/module.c:2093:
+	records = (int) fatelf->num_records;  /* uint8, no byteswap needed */

CHECK:SPACING: No space is necessary after a cast
#87: FILE: kernel/module.c:2109:
+			const unsigned long uloff = (unsigned long) rec_offset;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#89: FILE: kernel/module.c:2111:
+			if (unlikely(end_offset < rec_offset)) {
[...]
+			} else if (unlikely(end_offset > len)) {
[...]

CHECK:SPACING: No space is necessary after a cast
#95: FILE: kernel/module.c:2117:
+			return (Elf_Ehdr *) (hdr + uloff);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#119: FILE: kernel/module.c:2153:
+	if (len > 64 * 1024 * 1024 || (hdr_alloc = vmalloc(len)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#128: FILE: kernel/module.c:2161:
+	hdr = examine_fatelf_module((unsigned char *) hdr_alloc, len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdr"
#129: FILE: kernel/module.c:2162:
+	if (hdr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057735.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 7 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057735.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
