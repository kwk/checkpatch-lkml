WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
  ACTION=="add", SUBSYSTEM=="pcmcia", ATTR{subsystem/drivers_probe}="$kernel"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: drivers/base/bus.c:31:
+static int __must_check bus_rescan_devices_helper(struct device *dev,
+						void *data);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#154: FILE: drivers/base/bus.c:554:
+	bus->drivers_probe_attr.attr.mode = S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#162: FILE: drivers/base/bus.c:562:
+	bus->drivers_autoprobe_attr.attr.mode = S_IWUSR | S_IRUGO;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: include/linux/device.h:41:
+	ssize_t (*show)(struct bus_type *, char * buf);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_type *' should also have an identifier name
#251: FILE: include/linux/device.h:41:
+	ssize_t (*show)(struct bus_type *, char * buf);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#252: FILE: include/linux/device.h:42:
+	ssize_t (*store)(struct bus_type *, const char * buf, size_t count);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_type *' should also have an identifier name
#252: FILE: include/linux/device.h:42:
+	ssize_t (*store)(struct bus_type *, const char * buf, size_t count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/linux/device.h:45:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/linux/device.h:45:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/linux/device.h:45:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#256: FILE: include/linux/device.h:46:
+struct bus_attribute bus_attr_##_name = __ATTR(_name,_mode,_show,_store)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#256: FILE: include/linux/device.h:46:
+struct bus_attribute bus_attr_##_name = __ATTR(_name,_mode,_show,_store)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#256: FILE: include/linux/device.h:46:
+struct bus_attribute bus_attr_##_name = __ATTR(_name,_mode,_show,_store)
                                                                 ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/linux/device.h:48:
+extern int __must_check bus_create_file(struct bus_type *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_type *' should also have an identifier name
#258: FILE: include/linux/device.h:48:
+extern int __must_check bus_create_file(struct bus_type *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_attribute *' should also have an identifier name
#258: FILE: include/linux/device.h:48:
+extern int __must_check bus_create_file(struct bus_type *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/linux/device.h:50:
+extern void bus_remove_file(struct bus_type *, struct bus_attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_type *' should also have an identifier name
#260: FILE: include/linux/device.h:50:
+extern void bus_remove_file(struct bus_type *, struct bus_attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_attribute *' should also have an identifier name
#260: FILE: include/linux/device.h:50:
+extern void bus_remove_file(struct bus_type *, struct bus_attribute *);

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#264: FILE: include/linux/device.h:54:
+	struct module		* owner;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000439690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 9 warnings, 3 checks, 208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000439690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
