WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: kernel/trace/trace_branch.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#202: FILE: kernel/trace/trace_branch.c:144:
+struct tracer branch_trace __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#289: FILE: kernel/trace/trace_branch.c:231:
+		seq_printf(m, " correct incorrect  %% "
+			      "       Function                "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#290: FILE: kernel/trace/trace_branch.c:232:
+			      "       Function                "
+			      "  File              Line\n"

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: kernel/trace/trace_branch.c:234:
+			      " ------- ---------  - "
+			      "       --------                "

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: kernel/trace/trace_branch.c:235:
+			      "       --------                "
+			      "  ----              ----\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#303: FILE: kernel/trace/trace_branch.c:245:
+	if (p->correct) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#306: FILE: kernel/trace/trace_branch.c:248:
+	} else

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#314: FILE: kernel/trace/trace_branch.c:256:
+static struct seq_operations tracing_likely_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: kernel/trace/trace_branch.c:270:
+		struct seq_file *m = file->private_data;
+		m->private = (void *)inode->i_private;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#334: FILE: kernel/trace/trace_branch.c:276:
+static struct file_operations tracing_likely_fops = {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#340: FILE: kernel/trace/trace_branch.c:282:
+extern unsigned long __start_likely_profile[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#341: FILE: kernel/trace/trace_branch.c:283:
+extern unsigned long __stop_likely_profile[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#342: FILE: kernel/trace/trace_branch.c:284:
+extern unsigned long __start_unlikely_profile[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#343: FILE: kernel/trace/trace_branch.c:285:
+extern unsigned long __stop_unlikely_profile[];

WARNING:SPLIT_STRING: quoted string split across lines
#373: FILE: kernel/trace/trace_branch.c:315:
+		pr_warning("Could not create debugfs"
+			   " 'profile_unlikely' entry\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204877.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 14 warnings, 2 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204877.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
