WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#75: 
 drivers/ide/ide-iops.c        |  742 ++---------------------------------------

WARNING:SPLIT_STRING: quoted string split across lines
#619: FILE: drivers/ide/ide-acpi.c:310:
+		DEBPRINT("(0x1f1-1f7): "
+			 "hex: %02x %02x %02x %02x %02x %02x %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#635: FILE: drivers/ide/ide-acpi.c:326:
+			printk(KERN_ERR "%s: ide_no_data_taskfile failed: %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: drivers/ide/ide-acpi.c:327:
+			printk(KERN_ERR "%s: ide_no_data_taskfile failed: %u\n",
+					__func__, err);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#823: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#828: FILE: drivers/ide/ide-devsets.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#832: FILE: drivers/ide/ide-devsets.c:5:
+DEFINE_MUTEX(ide_setting_mtx);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive->hwif->dma_ops"
#877: FILE: drivers/ide/ide-devsets.c:50:
+	if (drive->hwif->dma_ops == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#882: FILE: drivers/ide/ide-devsets.c:55:
+	if (arg) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#885: FILE: drivers/ide/ide-devsets.c:58:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#930: FILE: drivers/ide/ide-devsets.c:103:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#930: FILE: drivers/ide/ide-devsets.c:103:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#932: FILE: drivers/ide/ide-devsets.c:105:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:BRACES: braces {} should be used on all arms of this statement
#935: FILE: drivers/ide/ide-devsets.c:108:
+		if (arg == 8 || arg == 9) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#942: FILE: drivers/ide/ide-devsets.c:115:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1042: FILE: drivers/ide/ide-dma.c:489:
+		printk(KERN_WARNING "%s: DMA timeout error\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1047: FILE: drivers/ide/ide-dma.c:494:
+		printk(KERN_WARNING "%s: DMA timeout retry\n", drive->name);

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#1053: FILE: drivers/ide/ide-dma.c:500:
+	 * a timeout -- we'll reenable after we finish this next request
 	                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1092: FILE: drivers/ide/ide-eh.c:1:
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq"
#1212: FILE: drivers/ide/ide-eh.c:121:
+	if (rq == NULL)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1249: FILE: drivers/ide/ide-eh.c:158:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:BRACES: braces {} should be used on all arms of this statement
#1252: FILE: drivers/ide/ide-eh.c:161:
+	if (OK_STAT(stat, 0, ATA_BUSY))
[...]
+	else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1253: FILE: drivers/ide/ide-eh.c:162:
+		printk(KERN_INFO "%s: ATAPI reset complete\n", drive->name);

CHECK:BRACES: Unbalanced braces around else statement
#1254: FILE: drivers/ide/ide-eh.c:163:
+	else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1256: FILE: drivers/ide/ide-eh.c:165:
+			ide_set_handler(drive, &atapi_reset_pollfunc, HZ/20,
 			                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1263: FILE: drivers/ide/ide-eh.c:172:
+		printk(KERN_ERR "%s: ATAPI reset timed-out, status=0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1264: FILE: drivers/ide/ide-eh.c:173:
+		printk(KERN_ERR "%s: ATAPI reset timed-out, status=0x%02x\n",
+			drive->name, stat);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#1276: FILE: drivers/ide/ide-eh.c:185:
+	static const char *err_master_vals[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1277: FILE: drivers/ide/ide-eh.c:186:
+	static const char *err_master_vals[] =
+		{ NULL, "passed", "formatter device error",

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1283: FILE: drivers/ide/ide-eh.c:192:
+	printk(KERN_ERR "%s: reset: master: ", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1285: FILE: drivers/ide/ide-eh.c:194:
+		printk(KERN_CONT "%s", err_master_vals[err_master]);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1285: FILE: drivers/ide/ide-eh.c:194:
+		printk(KERN_CONT "%s", err_master_vals[err_master]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1287: FILE: drivers/ide/ide-eh.c:196:
+		printk(KERN_CONT "error (0x%02x?)", err);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1287: FILE: drivers/ide/ide-eh.c:196:
+		printk(KERN_CONT "error (0x%02x?)", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1289: FILE: drivers/ide/ide-eh.c:198:
+		printk(KERN_CONT "; slave: failed");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1289: FILE: drivers/ide/ide-eh.c:198:
+		printk(KERN_CONT "; slave: failed");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1290: FILE: drivers/ide/ide-eh.c:199:
+	printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1290: FILE: drivers/ide/ide-eh.c:199:
+	printk(KERN_CONT "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1309: FILE: drivers/ide/ide-eh.c:218:
+			printk(KERN_ERR "%s: host reset_poll failure for %s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: drivers/ide/ide-eh.c:219:
+			printk(KERN_ERR "%s: host reset_poll failure for %s.\n",
+				hwif->name, drive->name);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1319: FILE: drivers/ide/ide-eh.c:228:
+			ide_set_handler(drive, &reset_pollfunc, HZ/20, NULL);
 			                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1323: FILE: drivers/ide/ide-eh.c:232:
+		printk(KERN_ERR "%s: reset timed-out, status=0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: drivers/ide/ide-eh.c:233:
+		printk(KERN_ERR "%s: reset timed-out, status=0x%02x\n",
+			hwif->name, tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1331: FILE: drivers/ide/ide-eh.c:240:
+			printk(KERN_INFO "%s: reset: success\n", hwif->name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1425: FILE: drivers/ide/ide-eh.c:334:
+	BUG_ON(hwif->handler != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hwif->handler"
#1425: FILE: drivers/ide/ide-eh.c:334:
+	BUG_ON(hwif->handler != NULL);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1431: FILE: drivers/ide/ide-eh.c:340:
+		udelay(20);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1436: FILE: drivers/ide/ide-eh.c:345:
+		__ide_set_handler(drive, &atapi_reset_pollfunc, HZ/20, NULL);
 		                                                  ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1489: FILE: drivers/ide/ide-eh.c:398:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1493: FILE: drivers/ide/ide-eh.c:402:
+	udelay(10);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1496: FILE: drivers/ide/ide-eh.c:405:
+	__ide_set_handler(drive, &reset_pollfunc, HZ/20, NULL);
 	                                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1526: FILE: drivers/ide/ide-io-std.c:1:
+

CHECK:SPACING: No space is necessary after a cast
#1536: FILE: drivers/ide/ide-io-std.c:11:
+	return (u8) inb(port);

CHECK:SPACING: No space is necessary after a cast
#1550: FILE: drivers/ide/ide-io-std.c:25:
+	return (u8) readb((void __iomem *) port);

CHECK:SPACING: No space is necessary after a cast
#1555: FILE: drivers/ide/ide-io-std.c:30:
+	writeb(value, (void __iomem *) port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1653: FILE: drivers/ide/ide-io-std.c:128:
+		tf_outb((tf->device & HIHI) | drive->select,
+			 io_ports->device_addr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1752: FILE: drivers/ide/ide-io-std.c:227:
+		unsigned long uninitialized_var(flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'flags' should also have an identifier name
#1752: FILE: drivers/ide/ide-io-std.c:227:
+		unsigned long uninitialized_var(flags);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1770: FILE: drivers/ide/ide-io-std.c:245:
+				__ide_mm_insw((void __iomem *)data_addr,
+						(u8 *)buf + (len & ~3), 1);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1798: FILE: drivers/ide/ide-io-std.c:273:
+		unsigned long uninitialized_var(flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'flags' should also have an identifier name
#1798: FILE: drivers/ide/ide-io-std.c:273:
+		unsigned long uninitialized_var(flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: drivers/ide/ide-io-std.c:291:
+				__ide_mm_outsw((void __iomem *)data_addr,
+						 (u8 *)buf + (len & ~3), 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!id"
#2692: FILE: drivers/ide/ide-iops.c:296:
+	if (id == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2731: FILE: drivers/ide/ide-iops.c:320:
+		printk(KERN_ERR "%s: %s: bad status\n", drive->name, __func__);

CHECK:BRACES: Unbalanced braces around else statement
#3389: FILE: drivers/ide/ide-park.c:79:
+	} else		/* cmd == REQ_UNPARK_HEADS */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3394: FILE: drivers/ide/ide-park.c:84:
+	drive->hwif->data_phase = task.data_phase = TASKFILE_NO_DATA;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3804: FILE: drivers/ide/ide-probe.c:985:
+		printk(KERN_ERR "%s: disabled, no IRQ\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3830: FILE: drivers/ide/ide-probe.c:1005:
+		printk(KERN_ERR "%s: disabled, unable to get IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3831: FILE: drivers/ide/ide-probe.c:1006:
+		printk(KERN_ERR "%s: disabled, unable to get IRQ %d\n",
+			hwif->name, hwif->irq);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3923: FILE: drivers/ide/ide-xfer-mode.c:1:
+#include <linux/types.h>

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#3930: FILE: drivers/ide/ide-xfer-mode.c:8:
+static const char *udma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3931: FILE: drivers/ide/ide-xfer-mode.c:9:
+static const char *udma_str[] =
+	 { "UDMA/16", "UDMA/25",  "UDMA/33",  "UDMA/44",

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#3933: FILE: drivers/ide/ide-xfer-mode.c:11:
+static const char *mwdma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3934: FILE: drivers/ide/ide-xfer-mode.c:12:
+static const char *mwdma_str[] =
+	{ "MWDMA0", "MWDMA1", "MWDMA2" };

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#3935: FILE: drivers/ide/ide-xfer-mode.c:13:
+static const char *swdma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3936: FILE: drivers/ide/ide-xfer-mode.c:14:
+static const char *swdma_str[] =
+	{ "SWDMA0", "SWDMA1", "SWDMA2" };

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#3937: FILE: drivers/ide/ide-xfer-mode.c:15:
+static const char *pio_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3938: FILE: drivers/ide/ide-xfer-mode.c:16:
+static const char *pio_str[] =
+	{ "PIO0", "PIO1", "PIO2", "PIO3", "PIO4", "PIO5" };

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3995: FILE: drivers/ide/ide-xfer-mode.c:73:
+		printk(KERN_INFO "%s: is on PIO blacklist\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4018: FILE: drivers/ide/ide-xfer-mode.c:96:
+			printk(KERN_INFO "%s: tPIO > 2, assuming tPIO = 2\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4019: FILE: drivers/ide/ide-xfer-mode.c:97:
+			printk(KERN_INFO "%s: tPIO > 2, assuming tPIO = 2\n",
+					 drive->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#4037: FILE: drivers/ide/ide-xfer-mode.c:115:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#4037: FILE: drivers/ide/ide-xfer-mode.c:115:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#4044: FILE: drivers/ide/ide-xfer-mode.c:122:
+	if (port_ops->set_dma_mode == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4054: FILE: drivers/ide/ide-xfer-mode.c:132:
+		return 0;
+	} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#4068: FILE: drivers/ide/ide-xfer-mode.c:146:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#4068: FILE: drivers/ide/ide-xfer-mode.c:146:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4076: FILE: drivers/ide/ide-xfer-mode.c:154:
+		return 0;
+	} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#4090: FILE: drivers/ide/ide-xfer-mode.c:168:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#4090: FILE: drivers/ide/ide-xfer-mode.c:168:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4094: FILE: drivers/ide/ide-xfer-mode.c:172:
+	BUG_ON(hwif->pio_mask == 0x00);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4105: FILE: drivers/ide/ide-xfer-mode.c:183:
+	printk(KERN_DEBUG "%s: host max PIO%d wanted PIO%d%s selected PIO%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4106: FILE: drivers/ide/ide-xfer-mode.c:184:
+	printk(KERN_DEBUG "%s: host max PIO%d wanted PIO%d%s selected PIO%d\n",
+			  drive->name, host_pio, req_pio,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#4156: FILE: drivers/ide/ide-xfer-mode.c:234:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#4156: FILE: drivers/ide/ide-xfer-mode.c:234:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4162: FILE: drivers/ide/ide-xfer-mode.c:240:
+	BUG_ON(rate < XFER_PIO_0);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4392: FILE: drivers/ide/pdc202xx_new.c:450:
 static struct pci_dev * __devinit pdc20270_get_dev2(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4414: FILE: drivers/ide/pdc202xx_old.c:296:
 static void __devinit pdc202ata4_fixup_irq(struct pci_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#4494: FILE: drivers/ide/serverworks.c:356:
 static const struct ide_port_info serverworks_chipsets[] __devinitdata = {

CHECK:BRACES: braces {} should be used on all arms of this statement
#4615: FILE: drivers/ide/setup-pci.c:568:
+	if (ide_pci_is_in_compatibility_mode(dev)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4618: FILE: drivers/ide/setup-pci.c:571:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4619: FILE: drivers/ide/setup-pci.c:572:
+		hw[1].irq = hw[0].irq = ret;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4628: FILE: drivers/ide/setup-pci.c:595:
+		ide_pci_setup_ports(pdev[i], d, &hw[i*2], &hws[i*2]);
 		                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4628: FILE: drivers/ide/setup-pci.c:595:
+		ide_pci_setup_ports(pdev[i], d, &hw[i*2], &hws[i*2]);
 		                                                ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#4637: FILE: drivers/ide/setup-pci.c:623:
+		if (ide_pci_is_in_compatibility_mode(pdev[i])) {
[...]
+		} else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4638: FILE: drivers/ide/setup-pci.c:624:
+			hw[i*2].irq = pci_get_legacy_ide_irq(pdev[i], 0);
 			    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4639: FILE: drivers/ide/setup-pci.c:625:
+			hw[i*2 + 1].irq = pci_get_legacy_ide_irq(pdev[i], 1);
 			    ^

CHECK:BRACES: Unbalanced braces around else statement
#4640: FILE: drivers/ide/setup-pci.c:626:
+		} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4641: FILE: drivers/ide/setup-pci.c:627:
+			hw[i*2 + 1].irq = hw[i*2].irq = ret;
 			    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4641: FILE: drivers/ide/setup-pci.c:627:
+			hw[i*2 + 1].irq = hw[i*2].irq = ret;
 			                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4641: FILE: drivers/ide/setup-pci.c:627:
+			hw[i*2 + 1].irq = hw[i*2].irq = ret;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4896: FILE: include/linux/ide.h:197:
+    defined(CONFIG_PARISC) || defined(CONFIG_PPC) || defined(CONFIG_SPARC)$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4905: FILE: include/linux/ide.h:853:
+	int		(*init_chipset)(struct pci_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4916: FILE: include/linux/ide.h:1133:
+int ide_end_request(ide_drive_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4916: FILE: include/linux/ide.h:1133:
+int ide_end_request(ide_drive_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4916: FILE: include/linux/ide.h:1133:
+int ide_end_request(ide_drive_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4917: FILE: include/linux/ide.h:1134:
+int ide_end_dequeued_request(ide_drive_t *, struct request *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4917: FILE: include/linux/ide.h:1134:
+int ide_end_dequeued_request(ide_drive_t *, struct request *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4917: FILE: include/linux/ide.h:1134:
+int ide_end_dequeued_request(ide_drive_t *, struct request *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4917: FILE: include/linux/ide.h:1134:
+int ide_end_dequeued_request(ide_drive_t *, struct request *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4918: FILE: include/linux/ide.h:1135:
+void ide_kill_rq(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4918: FILE: include/linux/ide.h:1135:
+void ide_kill_rq(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4921: FILE: include/linux/ide.h:1137:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#4921: FILE: include/linux/ide.h:1137:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4921: FILE: include/linux/ide.h:1137:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_expiry_t *' should also have an identifier name
#4921: FILE: include/linux/ide.h:1137:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4923: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#4923: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4923: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_expiry_t *' should also have an identifier name
#4923: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4932: FILE: include/linux/ide.h:1159:
+ide_startstop_t ide_do_park_unpark(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4932: FILE: include/linux/ide.h:1159:
+ide_startstop_t ide_do_park_unpark(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4933: FILE: include/linux/ide.h:1160:
+ide_startstop_t ide_do_devset(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#4933: FILE: include/linux/ide.h:1160:
+ide_startstop_t ide_do_devset(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4960: FILE: include/linux/ide.h:1238:
+int ide_dev_read_id(ide_drive_t *, u8, u16 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#4960: FILE: include/linux/ide.h:1238:
+int ide_dev_read_id(ide_drive_t *, u8, u16 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16 *' should also have an identifier name
#4960: FILE: include/linux/ide.h:1238:
+int ide_dev_read_id(ide_drive_t *, u8, u16 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#4990: FILE: include/linux/ide.h:1365:
+	int			(*init_chipset)(struct pci_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4998: FILE: include/linux/ide.h:1456:
+ide_startstop_t ide_dma_timeout_retry(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#4998: FILE: include/linux/ide.h:1456:
+ide_startstop_t ide_dma_timeout_retry(ide_drive_t *, int);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#5006: FILE: include/linux/ide.h:1468:
+static inline ide_startstop_t ide_dma_timeout_retry(ide_drive_t *drive, int error) { return ide_stopped; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#5016: FILE: include/linux/ide.h:1477:
+void ide_acpi_init_port(ide_hwif_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#5046: FILE: include/linux/ide.h:1560:
+const char *ide_xfer_verbose(u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#5053: FILE: include/linux/ide.h:1565:
+int ide_set_xfer_rate(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#5053: FILE: include/linux/ide.h:1565:
+int ide_set_xfer_rate(ide_drive_t *, u8);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5065: FILE: include/linux/ide.h:1602:
+#define ide_port_for_each_present_dev(i, dev, port) \
+	for ((i) = 0; ((dev) = (port)->devices[i]) || (i) < MAX_DRIVES; (i)++) \
+		if ((dev)->dev_flags & IDE_DFLAG_PRESENT)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#5065: FILE: include/linux/ide.h:1602:
+#define ide_port_for_each_present_dev(i, dev, port) \
+	for ((i) = 0; ((dev) = (port)->devices[i]) || (i) < MAX_DRIVES; (i)++) \
+		if ((dev)->dev_flags & IDE_DFLAG_PRESENT)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#5065: FILE: include/linux/ide.h:1602:
+#define ide_port_for_each_present_dev(i, dev, port) \
+	for ((i) = 0; ((dev) = (port)->devices[i]) || (i) < MAX_DRIVES; (i)++) \
+		if ((dev)->dev_flags & IDE_DFLAG_PRESENT)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 83 warnings, 59 checks, 4500 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
