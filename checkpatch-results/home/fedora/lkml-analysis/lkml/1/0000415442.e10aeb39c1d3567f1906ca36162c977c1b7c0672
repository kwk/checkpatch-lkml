ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: perfmon/perfmon_syscalls.c:441:
+                PFM_DBG("invalid arg count %d", count);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: perfmon/perfmon_syscalls.c:441:
+                PFM_DBG("invalid arg count %d", count);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_arch_write_pmc', this function's name, in a string
#264: FILE: include/asm-i386/perfmon.h:143:
+	PFM_DBG_ovfl("pfm_arch_write_pmc(0x%016Lx, 0x%016Lx)",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#264: FILE: include/asm-i386/perfmon.h:143:
+	PFM_DBG_ovfl("pfm_arch_write_pmc(0x%016Lx, 0x%016Lx)",

CHECK:SPACING: No space is necessary after a cast
#265: FILE: include/asm-i386/perfmon.h:144:
+		     (unsigned long long) pfm_pmu_conf->pmc_desc[cnum].hw_addr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#266: FILE: include/asm-i386/perfmon.h:145:
+		     (unsigned long long) value);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: include/asm-i386/perfmon.h:146:
+	BUG_ON(pfm_pmu_conf->pmc_desc[cnum].type & PFM_REG_V);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_arch_write_pmd', this function's name, in a string
#275: FILE: include/asm-i386/perfmon.h:162:
+	PFM_DBG_ovfl("pfm_arch_write_pmd(0x%016Lx, 0x%016Lx)",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#275: FILE: include/asm-i386/perfmon.h:162:
+	PFM_DBG_ovfl("pfm_arch_write_pmd(0x%016Lx, 0x%016Lx)",

CHECK:SPACING: No space is necessary after a cast
#276: FILE: include/asm-i386/perfmon.h:163:
+		     (unsigned long long) pfm_pmu_conf->pmd_desc[cnum].hw_addr,

CHECK:SPACING: No space is necessary after a cast
#277: FILE: include/asm-i386/perfmon.h:164:
+		     (unsigned long long) value);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: include/asm-i386/perfmon.h:165:
+	BUG_ON(pfm_pmu_conf->pmd_desc[cnum].type & PFM_REG_V);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#286: FILE: include/asm-i386/perfmon.h:176:
+	BUG_ON(pfm_pmu_conf->pmd_desc[cnum].type & PFM_REG_V);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_arch_read_pmd', this function's name, in a string
#291: FILE: include/asm-i386/perfmon.h:181:
+	PFM_DBG_ovfl("pfm_arch_read_pmd(0x%016Lx) = 0x%016Lx",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#291: FILE: include/asm-i386/perfmon.h:181:
+	PFM_DBG_ovfl("pfm_arch_read_pmd(0x%016Lx) = 0x%016Lx",

CHECK:SPACING: No space is necessary after a cast
#292: FILE: include/asm-i386/perfmon.h:182:
+		     (unsigned long long) pfm_pmu_conf->pmd_desc[cnum].hw_addr,

CHECK:SPACING: No space is necessary after a cast
#293: FILE: include/asm-i386/perfmon.h:183:
+		     (unsigned long long) tmp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: include/asm-i386/perfmon.h:191:
+	BUG_ON(pfm_pmu_conf->pmc_desc[cnum].type & PFM_REG_V);

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: include/asm-i386/perfmon.h:196:
+        PFM_DBG_ovfl("pfm_arch_read_pmc(0x%016Lx) = 0x%016Lx",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: include/asm-i386/perfmon.h:196:
+        PFM_DBG_ovfl("pfm_arch_read_pmc(0x%016Lx) = 0x%016Lx",$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_arch_read_pmc', this function's name, in a string
#306: FILE: include/asm-i386/perfmon.h:196:
+        PFM_DBG_ovfl("pfm_arch_read_pmc(0x%016Lx) = 0x%016Lx",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#306: FILE: include/asm-i386/perfmon.h:196:
+        PFM_DBG_ovfl("pfm_arch_read_pmc(0x%016Lx) = 0x%016Lx",

CHECK:SPACING: No space is necessary after a cast
#307: FILE: include/asm-i386/perfmon.h:197:
+		     (unsigned long long) pfm_pmu_conf->pmc_desc[cnum].hw_addr,

CHECK:SPACING: No space is necessary after a cast
#308: FILE: include/asm-i386/perfmon.h:198:
+		     (unsigned long long) tmp);

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#321: FILE: perfmon/perfmon.c:868:
+	PFM_LOG("version %u.%u, compiled: " __DATE__ ", " __TIME__,

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#321: FILE: perfmon/perfmon.c:868:
+	PFM_LOG("version %u.%u, compiled: " __DATE__ ", " __TIME__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: perfmon/perfmon_intr.c:193:
+			PFM_DBG_ovfl("Hardware counter overflow of PMD%d=0x%04llx",
+				i, new_val);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 14 warnings, 9 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
