WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#64: FILE: drivers/misc/sgi-gru/grukservices.c:58:
+ * ^IEach blade has one "kernel context" that owns GRU kernel resources$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: drivers/misc/sgi-gru/grukservices.c:59:
+ * ^Ilocated on the blade. Kernel drivers use GRU resources in this context$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#66: FILE: drivers/misc/sgi-gru/grukservices.c:60:
+ * ^Ifor sending messages, zeroing memory, etc.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#68: FILE: drivers/misc/sgi-gru/grukservices.c:62:
+ * ^IThe kernel context is dynamically loaded on demand. If it is not in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: drivers/misc/sgi-gru/grukservices.c:63:
+ * ^Iuse by the kernel, the kernel context can be unloaded & given to a user.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: drivers/misc/sgi-gru/grukservices.c:64:
+ * ^IThe kernel context will be reloaded when needed. This may require that$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: drivers/misc/sgi-gru/grukservices.c:65:
+ * ^Ia context be stolen from a user.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#72: FILE: drivers/misc/sgi-gru/grukservices.c:66:
+ * ^I^INOTE: frequent unloading/reloading of the kernel context is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: drivers/misc/sgi-gru/grukservices.c:67:
+ * ^I^Iexpensive. We are depending on batch schedulers, cpusets, sane$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: drivers/misc/sgi-gru/grukservices.c:68:
+ * ^I^Idrivers or some other mechanism to prevent the need for frequent$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: drivers/misc/sgi-gru/grukservices.c:69:
+ *^I ^Istealing/reloading.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: drivers/misc/sgi-gru/grukservices.c:71:
+ * ^IThe kernel context consists of two parts:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: drivers/misc/sgi-gru/grukservices.c:72:
+ * ^I^I- 1 CB & a few DSRs that are reserved for each cpu on the blade.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: drivers/misc/sgi-gru/grukservices.c:73:
+ * ^I^I  Each cpu has it's own private resources & does not share them$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: drivers/misc/sgi-gru/grukservices.c:74:
+ * ^I^I  with other cpus. These resources are used serially, ie,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: drivers/misc/sgi-gru/grukservices.c:75:
+ * ^I^I  locked, used & unlocked  on each call to a function in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: drivers/misc/sgi-gru/grukservices.c:76:
+ * ^I^I  grukservices.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: drivers/misc/sgi-gru/grukservices.c:77:
+ * ^I^I  ^I(Now that we have dynamic loading of kernel contexts, I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: drivers/misc/sgi-gru/grukservices.c:78:
+ * ^I^I  ^I may rethink this & allow sharing between cpus....)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: drivers/misc/sgi-gru/grukservices.c:84:
+ *^I^I  ^I- these resources must be explicitly locked/unlocked$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: drivers/misc/sgi-gru/grukservices.c:85:
+ *^I^I  ^I- locked resources prevent (obviously) the kernel$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: drivers/misc/sgi-gru/grukservices.c:86:
+ *^I^I  ^I  context from being unloaded.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: drivers/misc/sgi-gru/grukservices.c:90:
+ * ^I^I  When these resources are reserved, the caller can optionally$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/misc/sgi-gru/grukservices.c:91:
+ * ^I^I  associate a wait_queue with the resources and use asynchronous$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: drivers/misc/sgi-gru/grukservices.c:92:
+ * ^I^I  GRU instructions. When an async GRU instruction completes, the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: drivers/misc/sgi-gru/grukservices.c:93:
+ * ^I^I  driver will do a wakeup on the event.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#103: FILE: drivers/misc/sgi-gru/grukservices.c:97:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#150: FILE: drivers/misc/sgi-gru/grukservices.c:168:
+		kgts->ts_cbr_au_count = GRU_CB_COUNT_TO_AU(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#152: FILE: drivers/misc/sgi-gru/grukservices.c:170:
+		kgts->ts_dsr_au_count = GRU_DS_BYTES_TO_AU(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: drivers/misc/sgi-gru/grukservices.c:248:
+ * ^Iinput:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: drivers/misc/sgi-gru/grukservices.c:249:
+ * ^I^Iblade_id  - blade on which resources should be reserved$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: drivers/misc/sgi-gru/grukservices.c:250:
+ * ^I^Icbrs^I  - number of CBRs$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/misc/sgi-gru/grukservices.c:251:
+ * ^I^Idsr_bytes - number of DSR bytes needed$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: drivers/misc/sgi-gru/grukservices.c:257:
+unsigned long gru_reserve_async_resources(int blade_id, int cbrs, int dsr_bytes,
+			struct completion *cmp)

WARNING:MEMORY_BARRIER: memory barrier without comment
#231: FILE: drivers/misc/sgi-gru/grukservices.c:313:
+	mb();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: drivers/misc/sgi-gru/grukservices.h:152:
+ * ^Iinput:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: drivers/misc/sgi-gru/grukservices.h:153:
+ * ^I^Iblade_id  - blade on which resources should be reserved$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: drivers/misc/sgi-gru/grukservices.h:154:
+ * ^I^Icbrs^I  - number of CBRs$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/misc/sgi-gru/grukservices.h:155:
+ * ^I^Idsr_bytes - number of DSR bytes needed$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: drivers/misc/sgi-gru/grukservices.h:156:
+ * ^I^Icmp^I  - completion structure for waiting for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: drivers/misc/sgi-gru/grukservices.h:157:
+ * ^I^I^I    async completions$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: drivers/misc/sgi-gru/grukservices.h:162:
+extern unsigned long gru_reserve_async_resources(int blade_id, int cbrs, int dsr_bytes,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/misc/sgi-gru/grukservices.h:163:
+extern unsigned long gru_reserve_async_resources(int blade_id, int cbrs, int dsr_bytes,
+				struct completion *cmp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: drivers/misc/sgi-gru/grukservices.h:171:
+extern void gru_release_async_resources(unsigned long han);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: drivers/misc/sgi-gru/grukservices.h:179:
+extern void gru_wait_async_cbr(unsigned long han);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: drivers/misc/sgi-gru/grukservices.h:190:
+extern void gru_lock_async_resource(unsigned long han,  void **cb, void **dsr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: drivers/misc/sgi-gru/grukservices.h:198:
+extern void gru_unlock_async_resource(unsigned long han);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000143657.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 37 warnings, 10 checks, 277 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000143657.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
