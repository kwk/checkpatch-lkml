WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#127: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: drivers/char/ummunot.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#154: FILE: drivers/char/ummunot.c:23:
+#include <asm/cacheflush.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#182: FILE: drivers/char/ummunot.c:51:
+	spinlock_t		lock;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#261: FILE: drivers/char/ummunot.c:130:
+static int ummunot_open(struct inode *inode, struct file *filp)
                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SIZEOF_PARENTHESIS: sizeof *priv should be sizeof(*priv)
#269: FILE: drivers/char/ummunot.c:138:
+	priv = kmalloc(sizeof *priv, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#273: FILE: drivers/char/ummunot.c:142:
+	priv->counter = (void *) get_zeroed_page(GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#304: FILE: drivers/char/ummunot.c:173:
+	free_page((unsigned long) priv->counter);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#311: FILE: drivers/char/ummunot.c:180:
+static int ummunot_close(struct inode *inode, struct file *filp)
                                                            ^^^^

CHECK:SPACING: No space is necessary after a cast
#319: FILE: drivers/char/ummunot.c:188:
+	free_page((unsigned long) priv->counter);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#336: FILE: drivers/char/ummunot.c:205:
+static ssize_t ummunot_read(struct file *filp, char __user *buf,
                                          ^^^^

CHECK:SPACING: No space is necessary after a cast
#348: FILE: drivers/char/ummunot.c:217:
+	events = (void *) get_zeroed_page(GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *events should be sizeof(*events)
#373: FILE: drivers/char/ummunot.c:242:
+	max = min(PAGE_SIZE, count) / sizeof *events;

WARNING:SIZEOF_PARENTHESIS: sizeof *events should be sizeof(*events)
#405: FILE: drivers/char/ummunot.c:274:
+	if (copy_to_user(buf, events, n * sizeof *events))

WARNING:SIZEOF_PARENTHESIS: sizeof *events should be sizeof(*events)
#408: FILE: drivers/char/ummunot.c:277:
+		ret = n * sizeof *events;

CHECK:SPACING: No space is necessary after a cast
#411: FILE: drivers/char/ummunot.c:280:
+	free_page((unsigned long) events);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#415: FILE: drivers/char/ummunot.c:284:
+static unsigned int ummunot_poll(struct file *filp, struct poll_table_struct *wait)
                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#419: FILE: drivers/char/ummunot.c:288:
+	poll_wait(filp, &priv->read_wait, wait);
 	          ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#449: FILE: drivers/char/ummunot.c:318:
+	struct ummunot_register_ioctl parm;
 	                              ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#455: FILE: drivers/char/ummunot.c:324:
+	if (copy_from_user(&parm, arg, sizeof parm))
 	                    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#455: FILE: drivers/char/ummunot.c:324:
+	if (copy_from_user(&parm, arg, sizeof parm))
 	                                      ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof parm should be sizeof(parm)
#455: FILE: drivers/char/ummunot.c:324:
+	if (copy_from_user(&parm, arg, sizeof parm))

WARNING:SIZEOF_PARENTHESIS: sizeof *reg should be sizeof(*reg)
#460: FILE: drivers/char/ummunot.c:329:
+	reg = kmalloc(sizeof *reg, GFP_KERNEL);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#464: FILE: drivers/char/ummunot.c:333:
+	reg->user_cookie	= parm.user_cookie;
 	                	  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#465: FILE: drivers/char/ummunot.c:334:
+	reg->start		= parm.start;
 	          		  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#466: FILE: drivers/char/ummunot.c:335:
+	reg->end		= parm.end;
 	        		  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#474: FILE: drivers/char/ummunot.c:343:
+		if (treg->user_cookie == parm.user_cookie) {
 		                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#532: FILE: drivers/char/ummunot.c:401:
+static long ummunot_ioctl(struct file *filp, unsigned int cmd,
                                        ^^^^

CHECK:SPACING: No space is necessary after a cast
#536: FILE: drivers/char/ummunot.c:405:
+	void __user *argp = (void __user *) arg;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#562: FILE: drivers/char/ummunot.c:431:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#564: FILE: drivers/char/ummunot.c:433:
+static struct vm_operations_struct ummunot_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#568: FILE: drivers/char/ummunot.c:437:
+static int ummunot_mmap(struct file *filp, struct vm_area_struct *vma)
                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#582: FILE: drivers/char/ummunot.c:451:
+static int ummunot_fasync(int fd, struct file *filp, int on)
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#586: FILE: drivers/char/ummunot.c:455:
+	return fasync_helper(fd, filp, on, &priv->async_queue);
 	                         ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#627: FILE: include/linux/ummunot.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093620.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 8 checks, 644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093620.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
