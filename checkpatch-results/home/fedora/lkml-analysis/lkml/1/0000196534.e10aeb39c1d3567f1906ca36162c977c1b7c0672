CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#139: FILE: include/linux/ftrace.h:403:
+};
+enum {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#252: FILE: kernel/trace/ftrace.c:1375:
+static struct seq_operations ftrace_graph_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: braces {} should be used on all arms of this statement
#274: FILE: kernel/trace/ftrace.c:1397:
+	if (file->f_mode & FMODE_READ) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: kernel/trace/ftrace.c:1401:
+			struct seq_file *m = file->private_data;
+			m->private = ftrace_graph_funcs;

CHECK:BRACES: Unbalanced braces around else statement
#280: FILE: kernel/trace/ftrace.c:1403:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: kernel/trace/ftrace.c:1412:
+ftrace_graph_read(struct file *file, char __user *ubuf,
+		       size_t cnt, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#336: FILE: kernel/trace/ftrace.c:1459:
+	unsigned char buffer[FTRACE_BUFF_MAX+1];
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#353: FILE: kernel/trace/ftrace.c:1476:
+	if (file->f_mode & FMODE_READ) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: kernel/trace/ftrace.c:1478:
+		struct seq_file *m = file->private_data;
+		array = m->private;

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: kernel/trace/ftrace.c:1479:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#381: FILE: kernel/trace/ftrace.c:1504:
+		if (index < FTRACE_BUFF_MAX)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#383: FILE: kernel/trace/ftrace.c:1506:
+		else {

WARNING:SPLIT_STRING: quoted string split across lines
#431: FILE: kernel/trace/ftrace.c:1574:
+		pr_warning("Could not create debugfs "
+			   "'set_graph_function' entry\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196534.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 9 checks, 373 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196534.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
