WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> >>>> @@ -83,6 +96,9 @@ static inline struct scatterlist *sg_last(struct scatterlist *sgl,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'SG' - possible side-effects?
#70: FILE: arch/alpha/kernel/pci_iommu.c:468:
+#define SG_ENT_VIRT_ADDRESS(SG) (page_address(sg_page((SG)) + (SG)->offset))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sg' - possible side-effects?
#109: FILE: arch/ia64/hp/common/sba_iommu.c:249:
+#define sba_sg_address(sg)	(page_address(sg_page((sg)) + (sg)->offset))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sg' - possible side-effects?
#144: FILE: arch/ia64/sn/pci/pci_dma.c:19:
+#define SG_ENT_VIRT_ADDRESS(sg)	(page_address(sg_page((sg)) + (sg)->offset))

CHECK:SPACING: No space is necessary after a cast
#170: FILE: arch/mips/mm/dma-default.c:168:
+		addr = (unsigned long) page_address(sg_page(sg));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#179: FILE: arch/mips/mm/dma-default.c:226:
+			addr = (unsigned long) page_address(sg_page(sg));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: arch/sparc/kernel/ioport.c:730:
+		BUG_ON(page_address(sg_page(sg)) == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_address"
#262: FILE: arch/sparc/kernel/ioport.c:730:
+		BUG_ON(page_address(sg_page(sg)) == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: arch/sparc/kernel/ioport.c:751:
+			BUG_ON(page_address(sg_page(sg)) == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_address"
#274: FILE: arch/sparc/kernel/ioport.c:751:
+			BUG_ON(page_address(sg_page(sg)) == NULL);

CHECK:SPACING: No space is necessary after a cast
#277: FILE: arch/sparc/kernel/ioport.c:753:
+			    (unsigned long) page_address(sg_page(sg)),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#286: FILE: arch/sparc/kernel/ioport.c:801:
+			BUG_ON(page_address(sg_page(sg)) == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_address"
#286: FILE: arch/sparc/kernel/ioport.c:801:
+			BUG_ON(page_address(sg_page(sg)) == NULL);

CHECK:SPACING: No space is necessary after a cast
#289: FILE: arch/sparc/kernel/ioport.c:803:
+			    (unsigned long) page_address(sg_page(sg)),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#298: FILE: arch/sparc/kernel/ioport.c:817:
+			BUG_ON(page_address(sg_page(sg)) == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_address"
#298: FILE: arch/sparc/kernel/ioport.c:817:
+			BUG_ON(page_address(sg_page(sg)) == NULL);

CHECK:SPACING: No space is necessary after a cast
#301: FILE: arch/sparc/kernel/ioport.c:819:
+			    (unsigned long) page_address(sg_page(sg)),

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#314: FILE: arch/sparc/mm/io-unit.c:147:
+		sg->dvma_address = iounit_get_area(iounit, (unsigned long)page_address(sg_page(sg)) + sg->offset, sg->length);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#345: FILE: arch/sparc/mm/iommu.c:276:
+		if ((page = (unsigned long) page_address(sg_page(sg))) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#345: FILE: arch/sparc/mm/iommu.c:276:
+		if ((page = (unsigned long) page_address(sg_page(sg))) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#367: FILE: arch/sparc/mm/sun4c.c:1231:
+		sg->dvma_address = (__u32)sun4c_lockarea(page_address(sg_page(sg)) + sg->offset, sg->length);

CHECK:SPACING: No space is necessary after a cast
#402: FILE: arch/sparc64/kernel/iommu_common.c:76:
+	sgaddr = (unsigned long) (page_address(sg_page(sg)) + sg->offset);

CHECK:SPACING: No space is necessary after a cast
#411: FILE: arch/sparc64/kernel/iommu_common.c:126:
+		sgaddr = (unsigned long) (page_address(sg_page(sg)) + sg->offset);

CHECK:SPACING: No space is necessary after a cast
#429: FILE: arch/sparc64/kernel/iommu_common.c:210:
+	prev  = (unsigned long) (page_address(sg_page(sg)) + sg->offset);

CHECK:SPACING: No space is necessary after a cast
#432: FILE: arch/sparc64/kernel/iommu_common.c:212:
+	dent_addr = (u32) ((unsigned long)(page_address(sg_page(sg)) + sg->offset)

CHECK:SPACING: No space is necessary after a cast
#439: FILE: arch/sparc64/kernel/iommu_common.c:218:
+		addr = (unsigned long) (page_address(sg_page(sg)) + sg->offset);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#503: FILE: arch/x86/kernel/pci-calgary_64.c:416:
+		BUG_ON(!p);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#515: FILE: arch/x86/kernel/pci-calgary_64.c:439:
+		BUG_ON(!p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: arch/x86/kernel/pci-gart_64.c:305:
+^I^Iunsigned long addr = page_to_phys(sg_page(s)) + s->offset; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#554: FILE: arch/x86/kernel/pci-nommu_64.c:65:
+		BUG_ON(!sg_page(s));

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#555: FILE: arch/x86/kernel/pci-nommu_64.c:66:
+		s->dma_address = virt_to_bus(page_address(sg_page(s)) +s->offset);
 		                                                      ^

CHECK:SPACING: No space is necessary after a cast
#608: FILE: crypto/hmac.c:163:
+	sg_set_page(&sg[1], (void *) sg);

CHECK:SPACING: No space is necessary after a cast
#634: FILE: crypto/scatterwalk.h:25:
+	return (++sg)->length ? sg : (void *) sg_page(sg);

CHECK:SPACING: No space is necessary after a cast
#765: FILE: drivers/block/cciss.c:2624:
+		temp64.val = (__u64) pci_map_page(h->pdev, sg_page(&tmp_sg[i]),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#910: FILE: drivers/ide/ide-probe.c:1340:
+	hwif->sg_table = kmalloc(sizeof(struct scatterlist)*hwif->sg_max_nents,
 	                                                   ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hwif->sg_table)...) over kmalloc(sizeof(struct scatterlist)...)
#910: FILE: drivers/ide/ide-probe.c:1340:
+	hwif->sg_table = kmalloc(sizeof(struct scatterlist)*hwif->sg_max_nents,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#910: FILE: drivers/ide/ide-probe.c:1340:
+	hwif->sg_table = kmalloc(sizeof(struct scatterlist)*hwif->sg_max_nents,
 				 GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/ide/mips/au1xxx-ide.c:279:
+^I^I^I^I^I^I     (void*)(page_address(sg_page(sg)) $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#943: FILE: drivers/ide/mips/au1xxx-ide.c:279:
+						     (void*)(page_address(sg_page(sg)) 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: drivers/ide/mips/au1xxx-ide.c:288:
+^I^I^I^I^I^I   (void*)(page_address(sg_page(sg)) $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#952: FILE: drivers/ide/mips/au1xxx-ide.c:288:
+						   (void*)(page_address(sg_page(sg)) 

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: drivers/infiniband/hw/ipath/ipath_dma.c:111:
+		addr = (u64) page_address(sg_page(sg));

CHECK:SPACING: No space is necessary after a cast
#1041: FILE: drivers/infiniband/hw/ipath/ipath_dma.c:130:
+	u64 addr = (u64) page_address(sg_page(sg));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1223: FILE: drivers/md/dm-crypt.c:355:
+^I^I$

CHECK:CAMELCASE: Avoid CamelCase: <SGlist>
#1259: FILE: drivers/media/video/ivtv/ivtv-udma.c:66:
+			sg_set_page(&dma->SGlist[map_offset], dma->bouncemap[map_offset]);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mq->sg)...) over kmalloc(sizeof(struct scatterlist)...)
#1328: FILE: drivers/mmc/card/queue.c:157:
+			mq->sg = kmalloc(sizeof(struct scatterlist),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1329: FILE: drivers/mmc/card/queue.c:158:
+			mq->sg = kmalloc(sizeof(struct scatterlist),
 				GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mq->bounce_sg)...) over kmalloc(sizeof(struct scatterlist)...)
#1337: FILE: drivers/mmc/card/queue.c:165:
+			mq->bounce_sg = kmalloc(sizeof(struct scatterlist) *

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1391: FILE: drivers/mmc/host/at91_mci.c:229:
+		sg->dma_address = dma_map_page(NULL, sg_page(sg), sg->offset, sg->length, DMA_FROM_DEVICE);

CHECK:SPACING: No space is necessary after a cast
#1440: FILE: drivers/mmc/host/au1xmmc.c:616:
+					(void *) (page_address(sg_page(sg)) +

CHECK:SPACING: No space is necessary after a cast
#1447: FILE: drivers/mmc/host/au1xmmc.c:622:
+					(void *) (page_address(sg_page(sg)) +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1460: FILE: drivers/mmc/host/imxmmc.c:265:
+		host->data_ptr = (u16*)(page_address(sg_page(data->sg)) + data->sg->offset);

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#1724: FILE: drivers/scsi/NCR5380.c:301:
+		cmd->SCp.ptr = page_address(sg_page(cmd->SCp.buffer))+
 		                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#1724: FILE: drivers/scsi/NCR5380.c:301:
+		cmd->SCp.ptr = page_address(sg_page(cmd->SCp.buffer))+

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#1733: FILE: drivers/scsi/NCR5380.c:2146:
+					cmd->SCp.ptr = page_address(sg_page(cmd->SCp.buffer))+
 					                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1746: FILE: drivers/scsi/NCR53c406a.c:878:
+                                NCR53c406a_pio_write(page_address(sg_page(sg)) + sg->offset,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1746: FILE: drivers/scsi/NCR53c406a.c:878:
+                                NCR53c406a_pio_write(page_address(sg_page(sg)) + sg->offset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1755: FILE: drivers/scsi/NCR53c406a.c:900:
+                                NCR53c406a_pio_read(page_address(sg_page(sg)) + sg->offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1755: FILE: drivers/scsi/NCR53c406a.c:900:
+                                NCR53c406a_pio_read(page_address(sg_page(sg)) + sg->offset,$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sgent' - possible side-effects?
#1781: FILE: drivers/scsi/aha1542.c:52:
+#define SCSI_SG_PA(sgent)	(isa_page_to_bus(sg_page((sgent))) + (sgent)->offset)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1834: FILE: drivers/scsi/fdomain.c:1324:
+	       current_SC->SCp.ptr = page_address(sg_page(current_SC->SCp.buffer)) + current_SC->SCp.buffer->offset;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1843: FILE: drivers/scsi/fdomain.c:1357:
+	    current_SC->SCp.ptr = page_address(sg_page(current_SC->SCp.buffer)) + current_SC->SCp.buffer->offset;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1865: FILE: drivers/scsi/gdth.c:2377:
+            if (!sg_page(sl)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: drivers/scsi/gdth.c:2377:
+            if (!sg_page(sl)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1872: FILE: drivers/scsi/gdth.c:2383:
+            address = kmap_atomic(sg_page(sl), KM_BIO_SRC_IRQ) + sl->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1872: FILE: drivers/scsi/gdth.c:2383:
+            address = kmap_atomic(sg_page(sl), KM_BIO_SRC_IRQ) + sl->offset;$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1885: FILE: drivers/scsi/ibmmca.c:1831:
+			ld(shpnt)[ldn].sge[i].address = (void *) (isa_page_to_bus(sg_page(sg)) + sg->offset);

CHECK:SPACING: No space is necessary after a cast
#1885: FILE: drivers/scsi/ibmmca.c:1831:
+			ld(shpnt)[ldn].sge[i].address = (void *) (isa_page_to_bus(sg_page(sg)) + sg->offset);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2032: FILE: drivers/scsi/ips.c:1518:
+                buffer = kmap_atomic(sg_page(sg), KM_IRQ0) + sg->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2032: FILE: drivers/scsi/ips.c:1518:
+                buffer = kmap_atomic(sg_page(sg), KM_IRQ0) + sg->offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2041: FILE: drivers/scsi/ips.c:3526:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2041: FILE: drivers/scsi/ips.c:3526:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2050: FILE: drivers/scsi/ips.c:3559:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2050: FILE: drivers/scsi/ips.c:3559:
+                buffer = kmap_atomic(sg_page(&sg[i]), KM_IRQ0) + sg[i].offset;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#2125: FILE: drivers/scsi/megaraid.c:1545:
+			if( sg_page(sgl) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2125: FILE: drivers/scsi/megaraid.c:1545:
+			if( sg_page(sgl) ) {

ERROR:SPACING: space required before the open parenthesis '('
#2125: FILE: drivers/scsi/megaraid.c:1545:
+			if( sg_page(sgl) ) {

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#2169: FILE: drivers/scsi/osst.c:545:
+				memset(page_address(sg_page(&STp->buffer->sg[i])),

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2178: FILE: drivers/scsi/osst.c:4440:
+		STp->buffer->aux = (os_aux_t *) (page_address(sg_page(&STp->buffer->sg[i])) + OS_DATA_SIZE - b_size);

CHECK:SPACING: No space is necessary after a cast
#2178: FILE: drivers/scsi/osst.c:4440:
+		STp->buffer->aux = (os_aux_t *) (page_address(sg_page(&STp->buffer->sg[i])) + OS_DATA_SIZE - b_size);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#2191: FILE: drivers/scsi/osst.c:5258:
+		if (page != NULL) {
+		    sg_set_page(&STbuffer->sg[0], page);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#2191: FILE: drivers/scsi/osst.c:5258:
+		if (page != NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <STbuffer>
#2192: FILE: drivers/scsi/osst.c:5259:
+		    sg_set_page(&STbuffer->sg[0], page);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg_page"
#2200: FILE: drivers/scsi/osst.c:5265:
+	if (sg_page(&STbuffer->sg[0]) == NULL) {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2209: FILE: drivers/scsi/osst.c:5272:
+		struct page *page = alloc_pages(priority, (OS_FRAME_SIZE - got <= PAGE_SIZE) ? 0 : order);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#2212: FILE: drivers/scsi/osst.c:5274:
+		if (page == NULL) {

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#2545: FILE: drivers/scsi/st.c:4455:
+			sg_set_page(&sgl[i], pages[i]);;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2617: FILE: drivers/usb/core/message.c:446:
+				page_address(sg_page(&sg[i])) + sg [i].offset;

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:LINE_SPACING: Missing a blank line after declarations
#2653: FILE: drivers/usb/misc/usbtest.c:364:
+		struct page *page = sg_page(&sg[i]);
+		if (!page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2656: FILE: drivers/usb/misc/usbtest.c:366:
+		kfree (page_address (page) + sg [i].offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2656: FILE: drivers/usb/misc/usbtest.c:366:
+		kfree (page_address (page) + sg [i].offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2656: FILE: drivers/usb/misc/usbtest.c:366:
+		kfree (page_address (page) + sg [i].offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2794: FILE: include/asm-avr32/scatterlist.h:7:
+    unsigned long^Ipage_link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2872: FILE: include/asm-m32r/scatterlist.h:9:
+    unsigned long page_link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2950: FILE: include/asm-s390/scatterlist.h:5:
+    unsigned long page_link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2963: FILE: include/asm-sh/scatterlist.h:7:
+    unsigned long page_link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2976: FILE: include/asm-sh64/scatterlist.h:17:
+    unsigned long page_link;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3031: FILE: include/asm-x86/dma-mapping_32.h:48:
+		BUG_ON(!sg_page(sg));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3048: FILE: include/asm-x86/scatterlist_32.h:8:
+    unsigned long^Isg_magic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3050: FILE: include/asm-x86/scatterlist_32.h:10:
+    unsigned long^Ipage_link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3064: FILE: include/asm-x86/scatterlist_64.h:8:
+    unsigned long^Isg_magic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3066: FILE: include/asm-x86/scatterlist_64.h:10:
+    unsigned long^Ipage_link;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3126: FILE: include/linux/scatterlist.h:43:
+	BUG_ON(sg->sg_magic != SG_MAGIC);

CHECK:SPACING: No space is necessary after a cast
#3128: FILE: include/linux/scatterlist.h:45:
+	sg->page_link = page_link | (unsigned long) page;

CHECK:SPACING: No space is necessary after a cast
#3131: FILE: include/linux/scatterlist.h:48:
+#define sg_page(sg)	((struct page *) ((sg)->page_link & ~0x3))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3138: FILE: include/linux/scatterlist.h:55:
+ * $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3139: FILE: include/linux/scatterlist.h:56:
+ * 
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#3166: FILE: include/linux/scatterlist.h:73:
+	((struct scatterlist *) ((sg)->page_link & ~0x03))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3182: FILE: include/linux/scatterlist.h:87:
+	BUG_ON(sg->sg_magic != SG_MAGIC);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3196: FILE: include/linux/scatterlist.h:132:
+	BUG_ON(sgl[0].sg_magic != SG_MAGIC);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3197: FILE: include/linux/scatterlist.h:133:
+	BUG_ON(!sg_is_last(ret));

CHECK:SPACING: No space is necessary after a cast
#3207: FILE: include/linux/scatterlist.h:153:
+	prv[prv_nents - 1].page_link = (unsigned long) sgl | 0x01;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3265: FILE: include/linux/scatterlist.h:211:
+		int i;
+		for (i = 0; i < nents; i++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sg' - possible side-effects?
#3302: FILE: lib/swiotlb.c:38:
+#define SG_ENT_VIRT_ADDRESS(sg)	(page_address(sg_page((sg)) + (sg)->offset))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368396.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 45 warnings, 48 checks, 2673 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368396.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
