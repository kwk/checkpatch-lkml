WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#50: FILE: include/linux/slab.h:63:
+unsigned kmem_estimate_pages(struct kmem_cache *cachep,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: include/linux/slab.h:64:
+unsigned kmem_estimate_pages(struct kmem_cache *cachep,
+			gfp_t flags, int objects);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#59: FILE: include/linux/slab.h:99:
+unsigned kestimate_single(size_t, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#59: FILE: include/linux/slab.h:99:
+unsigned kestimate_single(size_t, gfp_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#59: FILE: include/linux/slab.h:99:
+unsigned kestimate_single(size_t, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#59: FILE: include/linux/slab.h:99:
+unsigned kestimate_single(size_t, gfp_t, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#60: FILE: include/linux/slab.h:100:
+unsigned kestimate(gfp_t, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#60: FILE: include/linux/slab.h:100:
+unsigned kestimate(gfp_t, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#60: FILE: include/linux/slab.h:100:
+unsigned kestimate(gfp_t, size_t);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#75: FILE: mm/slub.c:2471:
+unsigned kmem_estimate_pages(struct kmem_cache *s, gfp_t flags, int objects)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#113: FILE: mm/slub.c:2855:
+unsigned kestimate_single(size_t size, gfp_t flags, int count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: mm/slub.c:2858:
+	struct kmem_cache *s = get_slab(size, flags);
+	if (!s)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#121: FILE: mm/slub.c:2863:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: mm/slub.c:2870:
+unsigned kestimate(gfp_t flags, size_t bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#175: FILE: mm/slab.c:3857:
+unsigned kmem_estimate_pages(struct kmem_cache *cachep,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: mm/slab.c:3858:
+unsigned kmem_estimate_pages(struct kmem_cache *cachep,
+		gfp_t flags, int objects)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#181: FILE: mm/slab.c:3863:
+	unsigned nr_slabs = DIV_ROUND_UP(objects, cachep->num);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#182: FILE: mm/slab.c:3864:
+	unsigned nr_pages = nr_slabs << cachep->gfporder;

WARNING:TYPO_SPELLING: 'truely' may be misspelled - perhaps 'truly'?
#189: FILE: mm/slab.c:3871:
+	 * XXX: truely account these
 	        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: mm/slab.c:3882:
+unsigned kestimate_single(size_t size, gfp_t flags, int count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: mm/slab.c:3885:
+	struct kmem_cache *s = kmem_find_general_cachep(size, flags);
+	if (!s)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#214: FILE: mm/slab.c:3896:
+unsigned kestimate(gfp_t flags, size_t bytes)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000318191.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 3 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000318191.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
