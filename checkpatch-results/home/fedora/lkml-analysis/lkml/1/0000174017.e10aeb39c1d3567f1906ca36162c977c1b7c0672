WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Subject: [PATCH 4/4] [LIO-Target/PERSISTENT-RESERVATION]: Add support for iSCSI Transport IDs

WARNING:TYPO_SPELLING: 'avaiable' may be misspelled - perhaps 'available'?
#49: 
The latter is avaiable when there is an active I_T Nexus (iSCSI Session)
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#83: FILE: drivers/lio-core/iscsi_target_tpg.c:89:
+extern u16 lio_tpg_get_tag (se_portal_group_t *se_tpg)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#91: FILE: drivers/lio-core/iscsi_target_tpg.c:103:
+extern u32 lio_tpg_get_pr_transport_id (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: drivers/lio-core/iscsi_target_tpg.c:103:
+extern u32 lio_tpg_get_pr_transport_id (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/lio-core/iscsi_target_tpg.c:143:
+^Iif ((*format_code == 1) && (se_sess = se_nacl->nacl_sess)) {  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#131: FILE: drivers/lio-core/iscsi_target_tpg.c:143:
+	if ((*format_code == 1) && (se_sess = se_nacl->nacl_sess)) {  

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: drivers/lio-core/iscsi_target_tpg.c:164:
+		buf[off+len] = 0x2c; off++; // ASCII Character: ","
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: drivers/lio-core/iscsi_target_tpg.c:165:
+		buf[off+len] = 0x69; off++; // ASCII Character: "i"
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: drivers/lio-core/iscsi_target_tpg.c:166:
+		buf[off+len] = 0x2c; off++; // ASCII Character: ","
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: drivers/lio-core/iscsi_target_tpg.c:167:
+		buf[off+len] = 0x30; off++; // ASCII Character: "0"
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: drivers/lio-core/iscsi_target_tpg.c:168:
+		buf[off+len] = 0x78; off++; // ASCII Character: "x"
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: drivers/lio-core/iscsi_target_tpg.c:170:
+		buf[off+len] = sess->isid[0]; off++;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#159: FILE: drivers/lio-core/iscsi_target_tpg.c:171:
+		buf[off+len] = sess->isid[1]; off++;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: drivers/lio-core/iscsi_target_tpg.c:172:
+		buf[off+len] = sess->isid[2]; off++;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/lio-core/iscsi_target_tpg.c:173:
+		buf[off+len] = sess->isid[3]; off++;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: drivers/lio-core/iscsi_target_tpg.c:174:
+		buf[off+len] = sess->isid[4]; off++;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/lio-core/iscsi_target_tpg.c:175:
+		buf[off+len] = sess->isid[5]; off++;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#164: FILE: drivers/lio-core/iscsi_target_tpg.c:176:
+		buf[off+len] = '\0'; off++;
 		       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/lio-core/iscsi_target_tpg.c:185:
+^Iif ((padding = ((-len) & 3)) != 0) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#173: FILE: drivers/lio-core/iscsi_target_tpg.c:185:
+	if ((padding = ((-len) & 3)) != 0) 

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#184: FILE: drivers/lio-core/iscsi_target_tpg.c:196:
+	return(len);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#187: FILE: drivers/lio-core/iscsi_target_tpg.c:199:
+extern u32 lio_tpg_get_pr_transport_id_len (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: drivers/lio-core/iscsi_target_tpg.c:199:
+extern u32 lio_tpg_get_pr_transport_id_len (

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#208: FILE: drivers/lio-core/iscsi_target_tpg.c:220:
+	if ((se_sess = se_nacl->nacl_sess)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#208: FILE: drivers/lio-core/iscsi_target_tpg.c:220:
+	if ((se_sess = se_nacl->nacl_sess)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'seperator' may be misspelled - perhaps 'separator'?
#209: FILE: drivers/lio-core/iscsi_target_tpg.c:221:
+		len += 5; /* For ",i,0x" ASCII seperator */
 		                               ^^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#212: FILE: drivers/lio-core/iscsi_target_tpg.c:224:
+	} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#220: FILE: drivers/lio-core/iscsi_target_tpg.c:232:
+	if ((padding = ((-len) & 3)) != 0)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#228: FILE: drivers/lio-core/iscsi_target_tpg.c:240:
+	return(len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: drivers/lio-core/iscsi_target_tpg.h:33:
+extern u16 lio_tpg_get_tag (struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#243: FILE: drivers/lio-core/iscsi_target_tpg.h:33:
+extern u16 lio_tpg_get_tag (struct se_portal_group_s *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#243: FILE: drivers/lio-core/iscsi_target_tpg.h:33:
+extern u16 lio_tpg_get_tag (struct se_portal_group_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#245: FILE: drivers/lio-core/iscsi_target_tpg.h:35:
+extern u32 lio_tpg_get_pr_transport_id (struct se_portal_group_s *, struct se_node_acl_s *, int *, unsigned char *);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#246: FILE: drivers/lio-core/iscsi_target_tpg.h:36:
+extern u32 lio_tpg_get_pr_transport_id_len (struct se_portal_group_s *, struct se_node_acl_s *, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: drivers/lio-core/iscsi_target_tpg.h:36:
+extern u32 lio_tpg_get_pr_transport_id_len (struct se_portal_group_s *, struct se_node_acl_s *, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: drivers/lio-core/iscsi_target_tpg.h:36:
+extern u32 lio_tpg_get_pr_transport_id_len (struct se_portal_group_s *, struct se_node_acl_s *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#246: FILE: drivers/lio-core/iscsi_target_tpg.h:36:
+extern u32 lio_tpg_get_pr_transport_id_len (struct se_portal_group_s *, struct se_node_acl_s *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#246: FILE: drivers/lio-core/iscsi_target_tpg.h:36:
+extern u32 lio_tpg_get_pr_transport_id_len (struct se_portal_group_s *, struct se_node_acl_s *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#246: FILE: drivers/lio-core/iscsi_target_tpg.h:36:
+extern u32 lio_tpg_get_pr_transport_id_len (struct se_portal_group_s *, struct se_node_acl_s *, int *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 19 warnings, 19 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
