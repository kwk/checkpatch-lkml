WARNING:REPEATED_WORD: Possible repeated word: 'Heh'
#33: 
> > Heh heh, I'm amazed it actually works.  Agreed that the list walking

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#105: FILE: drivers/base/core.c:1018:
+EXPORT_SYMBOL_GPL(device_initialize_owner);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: include/linux/device.h:512:
+extern int __must_check device_register_owner(struct device * dev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/device.h:512:
+extern int __must_check device_register_owner(struct device * dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: include/linux/device.h:513:
+extern int __must_check device_register_owner(struct device * dev,
+		struct module *owner);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: include/linux/device.h:516:
+extern void device_initialize_owner(struct device * dev, struct module *owner);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/device.h:516:
+extern void device_initialize_owner(struct device * dev, struct module *owner);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/base/platform.c:112:
+int platform_add_devices_owner(struct platform_device **devs, int num,
+		struct module *owner)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/base/platform.c:321:
+int platform_device_register_owner(struct platform_device * pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/base/platform.c:322:
+int platform_device_register_owner(struct platform_device * pdev,
+		struct module *owner)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/platform_device.h:26:
+extern int platform_device_register_owner(struct platform_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#194: FILE: include/linux/platform_device.h:26:
+extern int platform_device_register_owner(struct platform_device *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: include/linux/platform_device.h:27:
+extern int platform_device_register_owner(struct platform_device *,
+		struct module *owner);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/linux/platform_device.h:38:
+extern int platform_add_devices_owner(struct platform_device **, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device **' should also have an identifier name
#205: FILE: include/linux/platform_device.h:38:
+extern int platform_add_devices_owner(struct platform_device **, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#205: FILE: include/linux/platform_device.h:38:
+extern int platform_add_devices_owner(struct platform_device **, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: include/linux/platform_device.h:39:
+extern int platform_add_devices_owner(struct platform_device **, int,
+		struct module *owner);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000443542.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 9 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000443542.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
