WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
This patch adds support for handling PCI devices that are assigned to the guest

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/x86/kvm/x86.c:107:
+kvm_find_pci_pt_dev(struct list_head *head,
+		struct kvm_pci_pt_info *pt_pci_info, int irq, int source)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'match->pt_dev.guest.busnr == pt_pci_info->busnr'
#138: FILE: arch/x86/kvm/x86.c:133:
+			if ((match->pt_dev.guest.busnr == pt_pci_info->busnr) &&
+			    (match->pt_dev.guest.devfn == pt_pci_info->devfn))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'match->pt_dev.guest.devfn == pt_pci_info->devfn'
#138: FILE: arch/x86/kvm/x86.c:133:
+			if ((match->pt_dev.guest.busnr == pt_pci_info->busnr) &&
+			    (match->pt_dev.guest.devfn == pt_pci_info->devfn))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#171: FILE: arch/x86/kvm/x86.c:166:
+		printk(KERN_ERR "%s: no matching device assigned to guest "

WARNING:SPLIT_STRING: quoted string split across lines
#172: FILE: arch/x86/kvm/x86.c:167:
+		printk(KERN_ERR "%s: no matching device assigned to guest "
+		       "found for irq %d, source = %d!\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#181: FILE: arch/x86/kvm/x86.c:176:
+	if (source == KVM_PT_SOURCE_IRQ)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#183: FILE: arch/x86/kvm/x86.c:178:
+	else {

CHECK:SPACING: No space is necessary after a cast
#197: FILE: arch/x86/kvm/x86.c:192:
+	struct kvm *kvm = (struct kvm *) dev_id;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*match)...) over kzalloc(sizeof(struct kvm_pci_pt_dev_list)...)
#283: FILE: arch/x86/kvm/x86.c:278:
+	match = kzalloc(sizeof(struct kvm_pci_pt_dev_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!match"
#284: FILE: arch/x86/kvm/x86.c:279:
+	if (match == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#285: FILE: arch/x86/kvm/x86.c:280:
+		printk(KERN_INFO "%s: Couldn't allocate memory\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#285: FILE: arch/x86/kvm/x86.c:280:
+	if (match == NULL) {
+		printk(KERN_INFO "%s: Couldn't allocate memory\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#306: FILE: arch/x86/kvm/x86.c:301:
+			printk(KERN_INFO "%s: couldn't allocate irq for pv "

WARNING:SPLIT_STRING: quoted string split across lines
#307: FILE: arch/x86/kvm/x86.c:302:
+			printk(KERN_INFO "%s: couldn't allocate irq for pv "
+			       "device\n", __func__);

WARNING:SIZEOF_PARENTHESIS: sizeof pci_pt_dev should be sizeof(pci_pt_dev)
#372: FILE: arch/x86/kvm/x86.c:1956:
+		if (copy_from_user(&pci_pt_dev, argp, sizeof pci_pt_dev))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273676.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 8 checks, 438 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273676.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
