CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: drivers/gpio/gpiolib.c:315:
+static ssize_t gpio_trigger_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:BRACES: braces {} should be used on all arms of this statement
#136: FILE: drivers/gpio/gpiolib.c:322:
+	if (!test_bit(FLAG_EXPORT, &desc->flags))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#138: FILE: drivers/gpio/gpiolib.c:324:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: drivers/gpio/gpiolib.c:326:
+		int i;
+		status = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/gpio/gpiolib.c:342:
+static ssize_t gpio_trigger_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

CHECK:BRACES: braces {} should be used on all arms of this statement
#168: FILE: drivers/gpio/gpiolib.c:354:
+	if (!test_bit(FLAG_EXPORT, &desc->flags))
[...]
+	else if (i == ARRAY_SIZE(trigger_types))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#172: FILE: drivers/gpio/gpiolib.c:358:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: drivers/gpio/gpiolib.c:360:
+		int irq = gpio_to_irq(desc - gpio_desc);
+		if (irq >= 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#174: FILE: drivers/gpio/gpiolib.c:360:
+		if (irq >= 0) {
[...]
+		} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#182: FILE: drivers/gpio/gpiolib.c:368:
+			if (trigger_types[i].flags & ((1 << FLAG_TRIG_FALL)
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#198: FILE: drivers/gpio/gpiolib.c:384:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#200: FILE: drivers/gpio/gpiolib.c:386:
+		} else

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_trigger_show' to 'poll_edge_show' 'gpio_trigger_store' to 'poll_edge_store'
#206: FILE: drivers/gpio/gpiolib.c:392:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#227: FILE: drivers/gpio/gpiolib.c:598:
+			if (!status
+			    && gpio_to_irq(gpio) >= 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#228: FILE: drivers/gpio/gpiolib.c:599:
+			    && gpio_to_irq(gpio) >= 0
+			    && (direction_may_change

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#229: FILE: drivers/gpio/gpiolib.c:600:
+			    && (direction_may_change
+				|| !test_bit(FLAG_IS_OUT, &desc->flags)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/gpio/gpiolib.c:602:
+				status = device_create_file(dev,
+						&dev_attr_poll_edge);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000115044.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 14 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000115044.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
