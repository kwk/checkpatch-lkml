WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: fs/nilfs2/recovery.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: fs/nilfs2/recovery.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: fs/nilfs2/recovery.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#118: FILE: fs/nilfs2/recovery.c:52:
+	ino_t ino;		/* Inode number of the file that this block
+				   belongs to */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#118: FILE: fs/nilfs2/recovery.c:52:
+				   belongs to */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: fs/nilfs2/recovery.c:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#130: FILE: fs/nilfs2/recovery.c:64:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#134: FILE: fs/nilfs2/recovery.c:68:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#138: FILE: fs/nilfs2/recovery.c:72:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#142: FILE: fs/nilfs2/recovery.c:76:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#146: FILE: fs/nilfs2/recovery.c:80:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#150: FILE: fs/nilfs2/recovery.c:84:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#154: FILE: fs/nilfs2/recovery.c:88:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#158: FILE: fs/nilfs2/recovery.c:92:
+		printk(KERN_WARNING

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#163: FILE: fs/nilfs2/recovery.c:97:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#202: FILE: fs/nilfs2/recovery.c:136:
+	BUG_ON(offset >= blocksize);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#210: FILE: fs/nilfs2/recovery.c:144:
+			struct buffer_head *bh
+				= sb_bread(sbi->s_super, ++start);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: fs/nilfs2/recovery.c:181:
+		unsigned bytes = le16_to_cpu(sr->sr_bytes);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#350: FILE: fs/nilfs2/recovery.c:284:
+	BUG_ON((*pbh)->b_size < *offset);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#369: FILE: fs/nilfs2/recovery.c:303:
+	unsigned int rest_item_in_current_block
+		= ((*pbh)->b_size - *offset) / bytes;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#406: FILE: fs/nilfs2/recovery.c:340:
+	offset = le16_to_cpu(

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#460: FILE: fs/nilfs2/recovery.c:394:
+		struct nilfs_recovery_block *rb
+			= list_entry(head->next,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#471: FILE: fs/nilfs2/recovery.c:405:
+		struct nilfs_segment_entry *ent
+			= list_entry(head->next,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#552: FILE: fs/nilfs2/recovery.c:486:
+	nilfs->ns_nextnum = nilfs->ns_segnum = segnum[0];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#584: FILE: fs/nilfs2/recovery.c:518:
+	unsigned blocksize = sbi->s_super->s_blocksize;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#626: FILE: fs/nilfs2/recovery.c:560:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#628: FILE: fs/nilfs2/recovery.c:562:
+		       "NILFS warning: error recovering data block "
+		       "(err=%d, ino=%lu, block-offset=%llu)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#633: FILE: fs/nilfs2/recovery.c:567:
+		iput(inode); /* iput(NULL) is just ignored */
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#633: FILE: fs/nilfs2/recovery.c:567:
+		iput(inode); /* iput(NULL) is just ignored */
 		                ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#673: FILE: fs/nilfs2/recovery.c:607:
+	while (segnum != ri->ri_segnum || pseg_start <= ri->ri_pseg_start) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#697: FILE: fs/nilfs2/recovery.c:631:
+			/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#702: FILE: fs/nilfs2/recovery.c:636:
+			err = collect_blocks_from_segsum(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#707: FILE: fs/nilfs2/recovery.c:641:
+				err = recover_dsync_blocks(

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#713: FILE: fs/nilfs2/recovery.c:647:
+			break; /* Fall through to try_next_pseg */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#739: FILE: fs/nilfs2/recovery.c:673:
+		printk(KERN_INFO "NILFS (device %s): salvaged %lu blocks\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#751: FILE: fs/nilfs2/recovery.c:685:
+	printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#753: FILE: fs/nilfs2/recovery.c:687:
+	       "NILFS (device %s): Error roll-forwarding "
+	       "(err=%d, pseg block=%llu). ",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#770: FILE: fs/nilfs2/recovery.c:704:
+	BUG_ON(!bh);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#775: FILE: fs/nilfs2/recovery.c:709:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#777: FILE: fs/nilfs2/recovery.c:711:
+		       "NILFS warning: buffer sync write failed during "
+		       "post-cleaning of recovery.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#812: FILE: fs/nilfs2/recovery.c:746:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#824: FILE: fs/nilfs2/recovery.c:758:
+			printk(KERN_ERR "NILFS: Error preparing segments for "

WARNING:SPLIT_STRING: quoted string split across lines
#825: FILE: fs/nilfs2/recovery.c:759:
+			printk(KERN_ERR "NILFS: Error preparing segments for "
+			       "recovery.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#838: FILE: fs/nilfs2/recovery.c:772:
+			printk(KERN_ERR "NILFS: Oops! recovery failed. "

WARNING:SPLIT_STRING: quoted string split across lines
#839: FILE: fs/nilfs2/recovery.c:773:
+			printk(KERN_ERR "NILFS: Oops! recovery failed. "
+			       "(err=%d)\n", err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#921: FILE: fs/nilfs2/recovery.c:855:
+				/* This will never happen because a superblock
+				   (last_segment) always points to a pseg

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#922: FILE: fs/nilfs2/recovery.c:856:
+				   having a super root. */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#938: FILE: fs/nilfs2/recovery.c:872:
+		ri->ri_lsegs_start = ri->ri_lsegs_end = 0;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228139.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 36 warnings, 11 checks, 941 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228139.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
