CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*msrs)...) over kzalloc(sizeof(struct msr)...)
#94: FILE: drivers/edac/amd64_edac.c:2766:
+	msrs = kzalloc(sizeof(struct msr) * cpumask_weight(&mask), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#94: FILE: drivers/edac/amd64_edac.c:2766:
+	msrs = kzalloc(sizeof(struct msr) * cpumask_weight(&mask), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#96: FILE: drivers/edac/amd64_edac.c:2768:
+	if (!msrs) {
+		amd64_printk(KERN_WARNING, "%s: error allocating msrs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: drivers/edac/amd64_edac.c:2769:
+		amd64_printk(KERN_WARNING, "%s: error allocating msrs\n",
+			      __func__);

WARNING:TABSTOP: Statements should start on a tabstop
#98: FILE: drivers/edac/amd64_edac.c:2770:
+		 return false;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071613.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 2 checks, 95 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071613.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
