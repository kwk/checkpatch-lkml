WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
This patch is modify from Mathieu's patch base on ingo's suggestion, the original patch

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#65: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: include/trace/events/timer.h:1:
+#if !defined(_TRACE_TIMER_H) || defined(TRACE_HEADER_MULTI_READ)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: include/trace/events/timer.h:11:
+TRACE_EVENT(timer_init,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#85: FILE: include/trace/events/timer.h:16:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#86: FILE: include/trace/events/timer.h:17:
+		__field( void *,	timer		)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#86: FILE: include/trace/events/timer.h:17:
+		__field( void *,	timer		)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#89: FILE: include/trace/events/timer.h:20:
+	TP_fast_assign(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#96: FILE: include/trace/events/timer.h:27:
+TRACE_EVENT(timer_start,
+
+	TP_PROTO(struct timer_list *timer, int cpu),
+
+	TP_ARGS(timer, cpu),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,	function	)
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: include/trace/events/timer.h:28:
+TRACE_EVENT(timer_start,
+

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#98: FILE: include/trace/events/timer.h:29:
+	TP_PROTO(struct timer_list *timer, int cpu),
+
+	TP_ARGS(timer, cpu),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,	function	)
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#100: FILE: include/trace/events/timer.h:31:
+	TP_ARGS(timer, cpu),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,	function	)
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#102: FILE: include/trace/events/timer.h:33:
+	TP_STRUCT__entry(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#102: FILE: include/trace/events/timer.h:33:
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,	function	)
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#103: FILE: include/trace/events/timer.h:34:
+		__field( void *,	timer		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#103: FILE: include/trace/events/timer.h:34:
+		__field( void *,	timer		)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#103: FILE: include/trace/events/timer.h:34:
+		__field( void *,	timer		)
+		__field( void *,	function	)
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#104: FILE: include/trace/events/timer.h:35:
+		__field( void *,	function	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#104: FILE: include/trace/events/timer.h:35:
+		__field( void *,	function	)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#104: FILE: include/trace/events/timer.h:35:
+		__field( void *,	function	)
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#105: FILE: include/trace/events/timer.h:36:
+		__field( unsigned long,	expires		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#105: FILE: include/trace/events/timer.h:36:
+		__field( unsigned long,	expires		)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#105: FILE: include/trace/events/timer.h:36:
+		__field( unsigned long,	expires		)
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#106: FILE: include/trace/events/timer.h:37:
+		__field( int,		cpu		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#106: FILE: include/trace/events/timer.h:37:
+		__field( int,		cpu		)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#106: FILE: include/trace/events/timer.h:37:
+		__field( int,		cpu		)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#107: FILE: include/trace/events/timer.h:38:
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#109: FILE: include/trace/events/timer.h:40:
+	TP_fast_assign(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#109: FILE: include/trace/events/timer.h:40:
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+		__entry->expires	= timer->expires;
+		__entry->cpu		= cpu;
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#114: FILE: include/trace/events/timer.h:45:
+	),
+
+	TP_printk("timer=%p func=%pf expires=%lu cpu=%d", __entry->timer,
+		  __entry->function, __entry->expires, __entry->cpu)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#120: FILE: include/trace/events/timer.h:51:
+TRACE_EVENT(timer_expire,
+
+	TP_PROTO(struct timer_list *timer),
+
+	TP_ARGS(timer),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function	)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/trace/events/timer.h:52:
+TRACE_EVENT(timer_expire,
+

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#122: FILE: include/trace/events/timer.h:53:
+	TP_PROTO(struct timer_list *timer),
+
+	TP_ARGS(timer),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function	)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#124: FILE: include/trace/events/timer.h:55:
+	TP_ARGS(timer),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function	)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#126: FILE: include/trace/events/timer.h:57:
+	TP_STRUCT__entry(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#126: FILE: include/trace/events/timer.h:57:
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function	)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#127: FILE: include/trace/events/timer.h:58:
+		__field( void *,	timer		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#127: FILE: include/trace/events/timer.h:58:
+		__field( void *,	timer		)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#127: FILE: include/trace/events/timer.h:58:
+		__field( void *,	timer		)
+		__field( void *,        function	)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#128: FILE: include/trace/events/timer.h:59:
+		__field( void *,        function	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#128: FILE: include/trace/events/timer.h:59:
+		__field( void *,        function	)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#128: FILE: include/trace/events/timer.h:59:
+		__field( void *,        function	)
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#129: FILE: include/trace/events/timer.h:60:
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#131: FILE: include/trace/events/timer.h:62:
+	TP_fast_assign(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#131: FILE: include/trace/events/timer.h:62:
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function       = timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#134: FILE: include/trace/events/timer.h:65:
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#139: FILE: include/trace/events/timer.h:70:
+TRACE_EVENT(timer_cancel,
+
+	TP_PROTO(struct timer_list *timer),
+
+	TP_ARGS(timer),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function        )
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: include/trace/events/timer.h:71:
+TRACE_EVENT(timer_cancel,
+

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#141: FILE: include/trace/events/timer.h:72:
+	TP_PROTO(struct timer_list *timer),
+
+	TP_ARGS(timer),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function        )
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#143: FILE: include/trace/events/timer.h:74:
+	TP_ARGS(timer),
+
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function        )
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#145: FILE: include/trace/events/timer.h:76:
+	TP_STRUCT__entry(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#145: FILE: include/trace/events/timer.h:76:
+	TP_STRUCT__entry(
+		__field( void *,	timer		)
+		__field( void *,        function        )
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: include/trace/events/timer.h:77:
+		__field( void *,	timer		)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: include/trace/events/timer.h:77:
+		__field( void *,	timer		)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#146: FILE: include/trace/events/timer.h:77:
+		__field( void *,	timer		)
+		__field( void *,        function        )
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

ERROR:SPACING: space prohibited after that open parenthesis '('
#147: FILE: include/trace/events/timer.h:78:
+		__field( void *,        function        )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#147: FILE: include/trace/events/timer.h:78:
+		__field( void *,        function        )

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#147: FILE: include/trace/events/timer.h:78:
+		__field( void *,        function        )
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#148: FILE: include/trace/events/timer.h:79:
+	),
+
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#150: FILE: include/trace/events/timer.h:81:
+	TP_fast_assign(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#150: FILE: include/trace/events/timer.h:81:
+	TP_fast_assign(
+		__entry->timer		= timer;
+		__entry->function	= timer->function;
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pf' - use %ps instead
#153: FILE: include/trace/events/timer.h:84:
+	),
+
+	TP_printk("timer=%p func=%pf", __entry->timer, __entry->function)
+);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: include/trace/events/timer.h:94:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121896.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 32 warnings, 13 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121896.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
