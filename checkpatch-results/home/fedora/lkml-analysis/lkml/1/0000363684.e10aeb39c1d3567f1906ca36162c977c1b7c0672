ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: linux/cramfs_fs.h:93:
+				| CRAMFS_FLAG_LZO_COMPRESSION )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer name
#79: FILE: linux/cramfs_fs.h:96:
+int (* cramfs_uncompress_block) ();

WARNING:SPACING: Unnecessary space before function pointer arguments
#79: FILE: linux/cramfs_fs.h:96:
+int (* cramfs_uncompress_block) ();

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#79: FILE: linux/cramfs_fs.h:96:
+int (* cramfs_uncompress_block) ();
      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: lzo_compress.c:1:
+#include <stdio.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: lzo_compress.c:6:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#101: FILE: lzo_compress.c:8:
+extern void *lzo_compress_buf;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#102: FILE: lzo_compress.c:9:
+extern int page_size;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: lzo_compress.c:12:
+int cramfs_lzo_cmpr(unsigned char *data_in, unsigned char *cpage_out,
+			  uint32_t sourcelen, uint32_t *dstlen)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#105: FILE: lzo_compress.c:12:
+			  uint32_t sourcelen, uint32_t *dstlen)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#107: FILE: lzo_compress.c:14:
+	uint32_t compress_size;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: lzo_compress.c:17:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: lzo_compress.c:17:
+
+	

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#111: FILE: lzo_compress.c:18:
+	ret = lzo1x_999_compress(data_in, sourcelen, (void *)lzo_compress_buf, &compress_size, (void *)lzo_mem);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: lzo_compress.c:19:
+^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#113: FILE: lzo_compress.c:20:
+	if (ret != LZO_E_OK || compress_size > *dstlen )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: lzo_compress.c:22:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: lzo_compress.c:27:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#121: FILE: lzo_compress.c:28:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: lzo_compress.c:54:
+
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#156: FILE: mkcramfs.c:80:
+void *lzo_mem = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#157: FILE: mkcramfs.c:81:
+void *lzo_compress_buf = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#167: FILE: mkcramfs.c:99:
+static int opt_lzo = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#208: FILE: mkcramfs.c:613:
+				err= cramfs_lzo_cmpr(uncompressed,base + curr,input, &len);
 				   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: mkcramfs.c:613:
+				err= cramfs_lzo_cmpr(uncompressed,base + curr,input, &len);
 				                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: mkcramfs.c:613:
+				err= cramfs_lzo_cmpr(uncompressed,base + curr,input, &len);
 				                                             ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#212: FILE: mkcramfs.c:617:
+			}
+			else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#212: FILE: mkcramfs.c:617:
+			else {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#214: FILE: mkcramfs.c:619:
+				err = compress2(base + curr, &len, uncompressed, input, Z_BEST_COMPRESSION);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#215: FILE: mkcramfs.c:620:
+				if (err != Z_OK) {
+					die(MKFS_ERROR, 0, "compression error: %s", zError(err));
+				}

CHECK:CAMELCASE: Avoid CamelCase: <zError>
#216: FILE: mkcramfs.c:621:
+					die(MKFS_ERROR, 0, "compression error: %s", zError(err));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'istead' may be misspelled - perhaps 'instead'?
#236: FILE: mkcramfs.c:747:
+			printf("LZO compression is used istead of ZLIB\n");
 			                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: mkcramfs.c:781:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#247: FILE: mkcramfs.c:781:
+	if (opt_lzo) {
+	

ERROR:SPACING: space prohibited after that open parenthesis '('
#248: FILE: mkcramfs.c:782:
+		if ( cramfs_lzo_init() < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#248: FILE: mkcramfs.c:782:
+		if ( cramfs_lzo_init() < 0 )

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 9 warnings, 10 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
