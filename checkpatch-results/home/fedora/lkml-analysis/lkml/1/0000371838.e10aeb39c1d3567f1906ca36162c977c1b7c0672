WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#58: FILE: drivers/usb/gadget/file_storage.c:3476:
+		filp = open_namei(AT_FDCWD, filename, O_RDWR | mode, 0);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#64: FILE: drivers/usb/gadget/file_storage.c:3481:
+		filp = open_namei(AT_FDCWD, filename, O_RDONLY | mode, 0);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/exec.c:1768:
+		file = open_namei(AT_FDCWD, corename,
 				 O_CREAT | 2 | O_NOFOLLOW | O_LARGEFILE | flag,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#90: FILE: fs/namei.c:1734:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#99: FILE: fs/namei.c:1757:
+					 &nd, flag);
 					  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                                                       ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: fs/namei.c:1766:
+	error = path_lookup_create(dfd,pathname,LOOKUP_PARENT,&nd,flag,mode);
 	                                                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#117: FILE: fs/namei.c:1776:
+	if (nd.last_type != LAST_NORM || nd.last.name[nd.last.len])
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#117: FILE: fs/namei.c:1776:
+	if (nd.last_type != LAST_NORM || nd.last.name[nd.last.len])
 	                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#117: FILE: fs/namei.c:1776:
+	if (nd.last_type != LAST_NORM || nd.last.name[nd.last.len])
 	                                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#122: FILE: fs/namei.c:1779:
+	dir = nd.dentry;
 	      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#123: FILE: fs/namei.c:1780:
+	nd.flags &= ~LOOKUP_PARENT;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#127: FILE: fs/namei.c:1782:
+	path.dentry = lookup_hash(&nd);
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#128: FILE: fs/namei.c:1783:
+	path.mnt = nd.mnt;
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#138: FILE: fs/namei.c:1792:
+	if (IS_ERR(nd.intent.open.file)) {
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#139: FILE: fs/namei.c:1793:
+		error = PTR_ERR(nd.intent.open.file);
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#146: FILE: fs/namei.c:1799:
+		error = __open_namei_create(&nd, &path, flag, mode);
 		                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#150: FILE: fs/namei.c:1802:
+		return nameidata_to_filp(&nd, sys_open_flag);
 		                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#159: FILE: fs/namei.c:1827:
+	path_to_nameidata(&path, &nd);
 	                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#165: FILE: fs/namei.c:1832:
+	error = may_open(&nd, acc_mode, flag);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#169: FILE: fs/namei.c:1835:
+	return nameidata_to_filp(&nd, sys_open_flag);
 	                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#175: FILE: fs/namei.c:1840:
+	dput_path(&path, &nd);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#180: FILE: fs/namei.c:1842:
+	if (!IS_ERR(&nd.intent.open.file))
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#181: FILE: fs/namei.c:1843:
+		release_open_intent(&nd);
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#182: FILE: fs/namei.c:1844:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#191: FILE: fs/namei.c:1858:
+	 * stored in nd.last.name and we will have to putname() it when we
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#196: FILE: fs/namei.c:1861:
+	nd.flags |= LOOKUP_PARENT;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#197: FILE: fs/namei.c:1862:
+	error = security_inode_follow_link(path.dentry, &nd);
 	                                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#201: FILE: fs/namei.c:1865:
+	error = __do_follow_link(&path, &nd);
 	                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#208: FILE: fs/namei.c:1871:
+		release_open_intent(&nd);
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#213: FILE: fs/namei.c:1874:
+	nd.flags &= ~LOOKUP_PARENT;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#214: FILE: fs/namei.c:1875:
+	if (nd.last_type == LAST_BIND)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#218: FILE: fs/namei.c:1878:
+	if (nd.last_type != LAST_NORM)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#222: FILE: fs/namei.c:1880:
+	if (nd.last.name[nd.last.len]) {
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#222: FILE: fs/namei.c:1880:
+	if (nd.last.name[nd.last.len]) {
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#223: FILE: fs/namei.c:1881:
+		__putname(nd.last.name);
 		          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#229: FILE: fs/namei.c:1886:
+		__putname(nd.last.name);
 		          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#233: FILE: fs/namei.c:1889:
+	dir = nd.dentry;
 	      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#238: FILE: fs/namei.c:1891:
+	path.dentry = lookup_hash(&nd);
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#239: FILE: fs/namei.c:1892:
+	path.mnt = nd.mnt;
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#240: FILE: fs/namei.c:1893:
+	__putname(nd.last.name);
 	          ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#287: FILE: include/linux/fs.h:1724:
+extern struct file *open_namei(int dfd, const char *, int, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#287: FILE: include/linux/fs.h:1724:
+extern struct file *open_namei(int dfd, const char *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#287: FILE: include/linux/fs.h:1724:
+extern struct file *open_namei(int dfd, const char *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#287: FILE: include/linux/fs.h:1724:
+extern struct file *open_namei(int dfd, const char *, int, int);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#299: FILE: kernel/acct.c:211:
+	file = open_namei(AT_FDCWD, name, O_WRONLY|O_APPEND|O_LARGEFILE, 0);
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#299: FILE: kernel/acct.c:211:
+	file = open_namei(AT_FDCWD, name, O_WRONLY|O_APPEND|O_LARGEFILE, 0);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#311: FILE: mm/swapfile.c:1201:
+	victim = open_namei(AT_FDCWD, pathname, O_RDWR|O_LARGEFILE, 0);
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#320: FILE: mm/swapfile.c:1480:
+	swap_file = open_namei(AT_FDCWD, name, O_RDWR|O_LARGEFILE, 0);
 	                                             ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#332: FILE: sound/sound_firmware.c:17:
+	filp = open_namei(AT_FDCWD, fn, 0, 0);
 	^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 43 warnings, 6 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
