WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> Expecting people to fix up all drivers is simply not going to happen. And 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#72: FILE: include/asm-x86/io.h:8:
+#define build_mmio_read(name, size, type, reg, barrier) \
+static inline type name(const volatile void __iomem *addr) \
+{ type ret; asm volatile("mov" size " %1,%0":"=" reg (ret) \
+:"m" (*(volatile type __force *)addr) barrier); return ret; }

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#72: FILE: include/asm-x86/io.h:8:
+#define build_mmio_read(name, size, type, reg, barrier) \
+static inline type name(const volatile void __iomem *addr) \
+{ type ret; asm volatile("mov" size " %1,%0":"=" reg (ret) \
+:"m" (*(volatile type __force *)addr) barrier); return ret; }

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#73: FILE: include/asm-x86/io.h:9:
+static inline type name(const volatile void __iomem *addr) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: include/asm-x86/io.h:10:
+{ type ret; asm volatile("mov" size " %1,%0":"=" reg (ret) \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#74: FILE: include/asm-x86/io.h:10:
+{ type ret; asm volatile("mov" size " %1,%0":"=" reg (ret) \
                                             ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#75: FILE: include/asm-x86/io.h:11:
+:"m" (*(volatile type __force *)addr) barrier); return ret; }
 ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#75: FILE: include/asm-x86/io.h:11:
+:"m" (*(volatile type __force *)addr) barrier); return ret; }

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#78: FILE: include/asm-x86/io.h:14:
+static inline void name(type val, volatile void __iomem *addr) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: include/asm-x86/io.h:15:
+{ asm volatile("mov" size " %0,%1": :reg (val), \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#79: FILE: include/asm-x86/io.h:15:
+{ asm volatile("mov" size " %0,%1": :reg (val), \
                                   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#79: FILE: include/asm-x86/io.h:15:
+{ asm volatile("mov" size " %0,%1": :reg (val), \
                                     ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#80: FILE: include/asm-x86/io.h:16:
+"m" (*(volatile type __force *)addr) barrier); }

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#82: FILE: include/asm-x86/io.h:18:
+build_mmio_read(readb, "b", unsigned char, "q", :"memory")
                                                 ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#83: FILE: include/asm-x86/io.h:19:
+build_mmio_read(readw, "w", unsigned short, "r", :"memory")
                                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#84: FILE: include/asm-x86/io.h:20:
+build_mmio_read(readl, "l", unsigned int, "r", :"memory")
                                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#86: FILE: include/asm-x86/io.h:22:
+build_mmio_read(__readb, "b", unsigned char, "q", )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#87: FILE: include/asm-x86/io.h:23:
+build_mmio_read(__readw, "w", unsigned short, "r", )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#88: FILE: include/asm-x86/io.h:24:
+build_mmio_read(__readl, "l", unsigned int, "r", )

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#90: FILE: include/asm-x86/io.h:26:
+build_mmio_write(writeb, "b", unsigned char, "q", :"memory")
                                                   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#91: FILE: include/asm-x86/io.h:27:
+build_mmio_write(writew, "w", unsigned short, "r", :"memory")
                                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#92: FILE: include/asm-x86/io.h:28:
+build_mmio_write(writel, "l", unsigned int, "r", :"memory")
                                                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#94: FILE: include/asm-x86/io.h:30:
+build_mmio_write(__writeb, "b", unsigned char, "q", )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#95: FILE: include/asm-x86/io.h:31:
+build_mmio_write(__writew, "w", unsigned short, "r", )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#96: FILE: include/asm-x86/io.h:32:
+build_mmio_write(__writel, "l", unsigned int, "r", )

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#112: FILE: include/asm-x86/io.h:48:
+build_mmio_read(readq, "q", unsigned long, "r", :"memory")
                                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#113: FILE: include/asm-x86/io.h:49:
+build_mmio_read(__readq, "q", unsigned long, "r", )

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#114: FILE: include/asm-x86/io.h:50:
+build_mmio_write(writeq, "q", unsigned long, "r", :"memory")
                                                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#115: FILE: include/asm-x86/io.h:51:
+build_mmio_write(__writeq, "q", unsigned long, "r", )

WARNING:REPEATED_WORD: Possible repeated word: 'readq'
#122: FILE: include/asm-x86/io.h:58:
+#define readq readq

WARNING:REPEATED_WORD: Possible repeated word: 'writeq'
#123: FILE: include/asm-x86/io.h:59:
+#define writeq writeq

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 10 warnings, 1 checks, 194 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
