WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#53: FILE: drivers/char/epca.c:77:
+/* MAXBOARDS is typically 12, but ISA and EISA cards are restricted
+   to 7 below. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#53: FILE: drivers/char/epca.c:77:
+   to 7 below. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#121: FILE: drivers/char/epca.c:417:
+	printk(KERN_ERR "epca_error (Digi): line = %d %s\n", line, msg);

CHECK:CAMELCASE: Avoid CamelCase: <verifyChannel>
#130: FILE: drivers/char/epca.c:428:
+	ch = verifyChannel(tty);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#131: FILE: drivers/char/epca.c:429:
+	if (ch != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#149: FILE: drivers/char/epca.c:459:
+			/* Setup an event to indicate when the
+			   transmit buffer empties */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: drivers/char/epca.c:459:
+			   transmit buffer empties */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#177: FILE: drivers/char/epca.c:533:
+	if (ch != NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <bytesAvailable>
#186: FILE: drivers/char/epca.c:551:
+			const unsigned char *buf, int bytesAvailable)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch"
#196: FILE: drivers/char/epca.c:576:
+	if (ch == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#219: FILE: drivers/char/epca.c:661:
+	if (ch != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch"
#245: FILE: drivers/char/epca.c:701:
+	if (ch == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: drivers/char/epca.c:713:
+	if (tail == head && readw(&ch->mailbox->cin) == ctail &&
+						readb(&bc->tbusy) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch"
#284: FILE: drivers/char/epca.c:754:
+	if (ch == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#294: FILE: drivers/char/epca.c:776:
+	if (ch != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/char/epca.c:784:
+		if ((ch->statusflags & TXBUSY) &&
+				!(ch->statusflags & EMPTYWAIT))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#312: FILE: drivers/char/epca.c:791:
+				struct file *filp, struct channel *ch)
 				             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#334: FILE: drivers/char/epca.c:881:
+static int pc_open(struct tty_struct *tty, struct file *filp)
                                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/char/epca.c:1005:
+	if (tty_unregister_driver(pc_driver) ||
+				tty_unregister_driver(pc_info)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#363: FILE: drivers/char/epca.c:1045:
+static int info_open(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#372: FILE: drivers/char/epca.c:1100:
+	printk(KERN_INFO "DIGI epca driver version %s loaded.\n", VERSION);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#381: FILE: drivers/char/epca.c:1253:
+				printk(KERN_ERR "epca: Board at 0x%x doesn't appear to be an XI\n", (int)bd->port);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#381: FILE: drivers/char/epca.c:1253:
+				printk(KERN_ERR "epca: Board at 0x%x doesn't appear to be an XI\n", (int)bd->port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/char/epca.c:1364:
+	if ((bd->type == PCXEVE || bd->type == PCXE) &&
+					(readw(memaddr + XEPORTS) < 3))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bc"
#464: FILE: drivers/char/epca.c:1625:
+		if (bc == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#489: FILE: drivers/char/epca.c:1657:
+				/* This event is generated by
+				   setup_empty_event */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#489: FILE: drivers/char/epca.c:1657:
+				   setup_empty_event */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: drivers/char/epca.c:1700:
+		printk(KERN_ERR "line %d: Out of range, cmd = %x, head = %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/char/epca.c:1701:
+		printk(KERN_ERR "line %d: Out of range, cmd = %x, head = %x\n",
+						__LINE__,  cmd, head);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#519: FILE: drivers/char/epca.c:1702:
+		printk(KERN_ERR "line %d: Out of range, cmdMax = %x, cmdStart = %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/char/epca.c:1703:
+		printk(KERN_ERR "line %d: Out of range, cmdMax = %x, cmdStart = %x\n",
+						__LINE__,  cmdMax, cmdStart);

CHECK:CAMELCASE: Avoid CamelCase: <cmdMax>
#520: FILE: drivers/char/epca.c:1703:
+						__LINE__,  cmdMax, cmdStart);

CHECK:CAMELCASE: Avoid CamelCase: <cmdStart>
#520: FILE: drivers/char/epca.c:1703:
+						__LINE__,  cmdMax, cmdStart);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#559: FILE: drivers/char/epca.c:2005:
+		printk(KERN_WARNING "epca; overrun! DigiBoard device %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/char/epca.c:2006:
+		printk(KERN_WARNING "epca; overrun! DigiBoard device %s\n",
+								tty->name);

CHECK:CAMELCASE: Avoid CamelCase: <dataToRead>
#574: FILE: drivers/char/epca.c:2018:
+		dataToRead = (wrapgap < bytesAvailable) ? wrapgap

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/char/epca.c:2177:
+static int pc_ioctl(struct tty_struct *tty, struct file *file,
+					unsigned int cmd, unsigned long arg)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#611: FILE: drivers/char/epca.c:2203:
+		/* Setup an event to indicate when the transmit
+		   buffer empties */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#611: FILE: drivers/char/epca.c:2203:
+		   buffer empties */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#625: FILE: drivers/char/epca.c:2216:
+		/* Setup an event to indicate when the transmit buffer
+		   empties */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#625: FILE: drivers/char/epca.c:2216:
+		   empties */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#638: FILE: drivers/char/epca.c:2258:
+			/* Setup an event to indicate when the transmit
+			   buffer empties */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: drivers/char/epca.c:2258:
+			   buffer empties */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#669: FILE: drivers/char/epca.c:2335:
+				fepcmd(ch, SONOFFC, ch->fepstartc,
+						ch->fepstopc, 0, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/char/epca.c:2340:
+				fepcmd(ch, SAUXONOFFC, ch->fepstartca,
+						ch->fepstopca, 0, 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#686: FILE: drivers/char/epca.c:2366:
+	if (ch != NULL)  { /* Begin if channel valid */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#705: FILE: drivers/char/epca.c:2414:
+	if (ch != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#719: FILE: drivers/char/epca.c:2436:
+	if (ch != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#725: FILE: drivers/char/epca.c:2440:
+		/* Just in case output was resumed because of a change
+		   in Digi-flow */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#725: FILE: drivers/char/epca.c:2440:
+		   in Digi-flow */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#737: FILE: drivers/char/epca.c:2473:
+	if (ch != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch"
#748: FILE: drivers/char/epca.c:2494:
+	if (ch != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#750: FILE: drivers/char/epca.c:2496:
+		/* Just in case output was resumed because of a change
+		   in Digi-flow */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#750: FILE: drivers/char/epca.c:2496:
+		   in Digi-flow */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#777: FILE: drivers/char/epca.c:2578:
+				printk(KERN_ERR "epca_setup: Invalid board status 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#778: FILE: drivers/char/epca.c:2579:
+				printk(KERN_ERR "epca_setup: Invalid board status 0x%x\n",
+						board.status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#787: FILE: drivers/char/epca.c:2633:
+				printk(KERN_ERR "epca_setup: Invalid memory base 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: drivers/char/epca.c:2634:
+				printk(KERN_ERR "epca_setup: Invalid memory base 0x%x\n",
+					(unsigned int)board.membase);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#797: FILE: drivers/char/epca.c:2765:
+				printk(KERN_ERR "epca_setup: Invalid memory base %s\n", str);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#818: FILE: drivers/char/epca.c:2830:
+		printk(KERN_ERR PFX "PCI region #%d not available (size 0)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: drivers/char/epca.c:2831:
+		printk(KERN_ERR PFX "PCI region #%d not available (size 0)\n",
 			epca_info_tbl[info_idx].bar_idx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#829: FILE: drivers/char/epca.c:2842:
+		printk(KERN_ERR PFX "resource 0x%x @ 0x%lx unavailable\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: drivers/char/epca.c:2843:
+		printk(KERN_ERR PFX "resource 0x%x @ 0x%lx unavailable\n",
 			0x200000, addr + PCI_IO_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/char/epca.c:2848:
+	boards[board_idx].re_map_port = ioremap_nocache(addr + PCI_IO_OFFSET,
+								0x200000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#839: FILE: drivers/char/epca.c:2850:
+		printk(KERN_ERR PFX "cannot map 0x%x @ 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: drivers/char/epca.c:2851:
+		printk(KERN_ERR PFX "cannot map 0x%x @ 0x%lx\n",
 			0x200000, addr + PCI_IO_OFFSET);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#847: FILE: drivers/char/epca.c:2856:
+		printk(KERN_ERR PFX "resource 0x%x @ 0x%lx unavailable\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/char/epca.c:2857:
+		printk(KERN_ERR PFX "resource 0x%x @ 0x%lx unavailable\n",
 			0x200000, addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#856: FILE: drivers/char/epca.c:2863:
+		printk(KERN_ERR PFX "cannot map 0x%x @ 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: drivers/char/epca.c:2864:
+		printk(KERN_ERR PFX "cannot map 0x%x @ 0x%lx\n",
 			0x200000, addr + PCI_IO_OFFSET);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288513.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 34 warnings, 36 checks, 780 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288513.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
