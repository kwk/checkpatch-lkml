WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
recently we discovered writing to a nfs-exported lustre filesystem is rathe=

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#61: 
nd=20
^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#62: 
only then prepare/commit it. Before generic_file_buffered_write() commited=
                                                                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'likelyhood' may be misspelled - perhaps 'likelihood'?
#67: 
conditions which IMHO don't reflect the likelyhood for the new aio data=20
                                        ^^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#91: FILE: mm/filemap.c:2058:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: mm/filemap.c:2090:
+	unsigned long	data_start =3D (pos & (PAGE_CACHE_SIZE -1)); /* Within page=

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#112: FILE: mm/filemap.c:2090:
+	unsigned long	data_start =3D (pos & (PAGE_CACHE_SIZE -1)); /* Within page=
 	             	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#112: FILE: mm/filemap.c:2090:
+	unsigned long	data_start =3D (pos & (PAGE_CACHE_SIZE -1)); /* Within page=
 	             	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#114: FILE: mm/filemap.c:2092:
+	loff_t		wpos =3D pos; /* the position in the file we will return */
 	      		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#117: FILE: mm/filemap.c:2095:
+	unsigned long	index =3D pos >> PAGE_CACHE_SHIFT;
 	             	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: mm/filemap.c:2107:
+	page =3D __grab_cache_page(mapping, index, &cached_page, &lru_pvec);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#127: FILE: mm/filemap.c:2109:
+		status =3D -ENOMEM;
 		       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#127: FILE: mm/filemap.c:2109:
+		status =3D -ENOMEM;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#142: FILE: mm/filemap.c:2132:
+		data_end =3D offset + bytes;
 		         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#172: FILE: mm/filemap.c:2147:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
[...]
=2D			 * prepare_write() may have instantiated a few blocks

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: mm/filemap.c:2147:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#172: FILE: mm/filemap.c:2147:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: mm/filemap.c:2147:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#172: FILE: mm/filemap.c:2147:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#172: FILE: mm/filemap.c:2147:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#182: FILE: mm/filemap.c:2152:
+			status =3D a_ops->prepare_write(file, page, data_start, data_end);
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#184: FILE: mm/filemap.c:2154:
+				loff_t isize =3D i_size_read(inode);
 				             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#186: FILE: mm/filemap.c:2156:
+				if (status =3D=3D AOP_TRUNCATED_PAGE)
 				           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#186: FILE: mm/filemap.c:2156:
+				if (status =3D=3D AOP_TRUNCATED_PAGE)
 				              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#186: FILE: mm/filemap.c:2156:
+				if (status =3D=3D AOP_TRUNCATED_PAGE)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#189: FILE: mm/filemap.c:2159:
+				/*
+				* prepare_write() may have instantiated a few blocks

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#196: FILE: mm/filemap.c:2165:
=2D		if (likely(nr_segs =3D=3D 1))
+		if (likely(nr_segs =3D=3D 1)) /* FIXME: really likely with aio? */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#197: FILE: mm/filemap.c:2166:
+		if (likely(nr_segs =3D=3D 1)) /* FIXME: really likely with aio? */
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#197: FILE: mm/filemap.c:2166:
+		if (likely(nr_segs =3D=3D 1)) /* FIXME: really likely with aio? */
 		                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#197: FILE: mm/filemap.c:2166:
+		if (likely(nr_segs =3D=3D 1)) /* FIXME: really likely with aio? */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 16)
#205: FILE: mm/filemap.c:2171:
=2D		if (status =3D=3D AOP_TRUNCATED_PAGE) {
[...]
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#207: FILE: mm/filemap.c:2173:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#207: FILE: mm/filemap.c:2173:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#207: FILE: mm/filemap.c:2173:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#207: FILE: mm/filemap.c:2173:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {
 		                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#207: FILE: mm/filemap.c:2173:
+		if (data_end =3D=3D PAGE_CACHE_SIZE || count =3D=3D bytes) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#213: FILE: mm/filemap.c:2179:
+			status =3D a_ops->commit_write(file, page,
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#215: FILE: mm/filemap.c:2181:
+			if (status =3D=3D AOP_TRUNCATED_PAGE) {
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: mm/filemap.c:2181:
+			if (status =3D=3D AOP_TRUNCATED_PAGE) {
 			              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#215: FILE: mm/filemap.c:2181:
+			if (status =3D=3D AOP_TRUNCATED_PAGE) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#215: FILE: mm/filemap.c:2181:
+			if (status =3D=3D AOP_TRUNCATED_PAGE) {
+				continue;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#225: FILE: mm/filemap.c:2190:
+				page =3D __grab_cache_page(mapping, index + 1,
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#228: FILE: mm/filemap.c:2193:
+					status =3D -ENOMEM;
 					       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#228: FILE: mm/filemap.c:2193:
+					status =3D -ENOMEM;
 					           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: mm/filemap.c:2197:
+				page =3D NULL;
 				     ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#234: FILE: mm/filemap.c:2199:
+			written +=3D data_end - data_start;
 			        ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#235: FILE: mm/filemap.c:2200:
+			wpos    +=3D data_end - data_start;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#236: FILE: mm/filemap.c:2201:
+			data_start =3D 0; /* correct would be data_end % PAGE_SIZE
 			           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: mm/filemap.c:2202:
+^I^I^I                 * but if this would be !=3D 0, we don't$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#237: FILE: mm/filemap.c:2202:
+			data_start =3D 0; /* correct would be data_end % PAGE_SIZE
+			                 * but if this would be !=3D 0, we don't

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: mm/filemap.c:2203:
+^I^I^I                 * have more data$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: mm/filemap.c:2204:
+^I^I^I                 */$

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#253: FILE: mm/filemap.c:2209:
+				count -=3D copied;
 				      ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#254: FILE: mm/filemap.c:2210:
+				pos +=3D copied;
 				    ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#255: FILE: mm/filemap.c:2211:
+				buf +=3D copied;
 				    ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#265: FILE: mm/filemap.c:2219:
+					iov_base +=3D copied;
 					         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 16)
#276: FILE: mm/filemap.c:2225:
=2D		if (status < 0)
+		if (status)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#285: FILE: mm/filemap.c:2231:
+	*ppos =3D wpos;
 	      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 8)
#298: FILE: mm/filemap.c:2241:
=2D	if (likely(status >=3D 0)) {
+	if (likely(!status)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000383751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 43 errors, 13 warnings, 3 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000383751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
