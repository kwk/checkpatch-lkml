WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#79: FILE: include/linux/statistic.h:59:
+#define _STATISTIC_FLAGS_KEY	0x08	/* client uses opaque binary key
+					   instead of integer

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: include/linux/statistic.h:60:
+					   (flag not for direct use) */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#81: FILE: include/linux/statistic.h:61:
+#define STATISTIC_FLAGS_KEY	_STATISTIC_FLAGS_KEY | STATISTIC_FLAGS_LABEL

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#83: FILE: include/linux/statistic.h:63:
+					/* client uses opaque binary key and
+					   labels buckets based on its

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#84: FILE: include/linux/statistic.h:64:
+					   interpretation of keys */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/statistic.h:147:
+extern void statistic_set_key(struct statistic *, int, void *, u64);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct statistic *' should also have an identifier name
#110: FILE: include/linux/statistic.h:147:
+extern void statistic_set_key(struct statistic *, int, void *, u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#110: FILE: include/linux/statistic.h:147:
+extern void statistic_set_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#110: FILE: include/linux/statistic.h:147:
+extern void statistic_set_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#110: FILE: include/linux/statistic.h:147:
+extern void statistic_set_key(struct statistic *, int, void *, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/statistic.h:151:
+extern void _statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct statistic *' should also have an identifier name
#114: FILE: include/linux/statistic.h:151:
+extern void _statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#114: FILE: include/linux/statistic.h:151:
+extern void _statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#114: FILE: include/linux/statistic.h:151:
+extern void _statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#114: FILE: include/linux/statistic.h:151:
+extern void _statistic_add_key(struct statistic *, int, void *, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/statistic.h:152:
+extern void statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct statistic *' should also have an identifier name
#115: FILE: include/linux/statistic.h:152:
+extern void statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#115: FILE: include/linux/statistic.h:152:
+extern void statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#115: FILE: include/linux/statistic.h:152:
+extern void statistic_add_key(struct statistic *, int, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#115: FILE: include/linux/statistic.h:152:
+extern void statistic_add_key(struct statistic *, int, void *, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/linux/statistic.h:166:
+extern void statistic_kadd_sparse(struct statistic *, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct statistic *' should also have an identifier name
#123: FILE: include/linux/statistic.h:166:
+extern void statistic_kadd_sparse(struct statistic *, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#123: FILE: include/linux/statistic.h:166:
+extern void statistic_kadd_sparse(struct statistic *, void *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#123: FILE: include/linux/statistic.h:166:
+extern void statistic_kadd_sparse(struct statistic *, void *, u64);

WARNING:TYPO_SPELLING: 'proessing' may be misspelled - perhaps 'processing'?
#134: FILE: include/linux/statistic.h:248:
+ * @type: data proessing mode to be used (must match statistic_info::defaults)
                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'perfomance' may be misspelled - perhaps 'performance'?
#145: FILE: include/linux/statistic.h:259:
+ * Use this when you feel that the perfomance gain outweighs the loss
                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'proessing' may be misspelled - perhaps 'processing'?
#174: FILE: include/linux/statistic.h:288:
+ * @type: data proessing mode to be used (must match statistic_info::defaults)
                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'perfomance' may be misspelled - perhaps 'performance'?
#185: FILE: include/linux/statistic.h:299:
+ * Use this when you feel that the perfomance gain outweighs the loss
                                    ^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: include/linux/statistic.h:311:
+	unsigned long flags;
+	local_irq_save(flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: lib/statistic.c:1168:
+	void *slist = percpu_ptr(stat->data, smp_processor_id());
+	statistic_do_sparse(1, slist, sizeof(value), &value, incr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#414: FILE: lib/statistic.c:1175:
+	void *slist = percpu_ptr(stat->data, smp_processor_id());
+	statistic_do_sparse(1, slist, stat->key_size, key, incr);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#460: FILE: lib/statistic.c:1213:
+			seq_printf(seq, "- ");

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#462: FILE: lib/statistic.c:1215:
+			seq_printf(seq, "0x%Lx ",

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#464: FILE: lib/statistic.c:1217:
+		seq_printf(seq, "%Lu ", (unsigned long long)entry->hits);

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: lib/statistic.c:1462:
+	unsigned long flags;
+	local_irq_save(flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 30 warnings, 4 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
