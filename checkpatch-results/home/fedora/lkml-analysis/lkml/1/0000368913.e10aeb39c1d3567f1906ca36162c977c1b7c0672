WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> Following Pete notes I will rework code and give it for review once again.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: Documentation/Configure.help:16129:
+  computer's USB port. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Documenatation' may be misspelled - perhaps 'Documentation'?
#80: FILE: Documentation/Configure.help:16135:
+  a module, say M here and read <file:Documenatation/modules.txt>.
                                       ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: drivers/usb/adutux.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'originaly' may be misspelled - perhaps 'originally'?
#91: FILE: drivers/usb/adutux.c:3:
+ * was originaly created by John Homppi for 2.6.* kernels.
        ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: drivers/usb/adutux.c:4:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#124: FILE: drivers/usb/adutux.c:36:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: drivers/usb/adutux.c:46:
+#define dbg(lvl, format, arg...) ^I^I^I^I^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lvl' may be better as '(lvl)' to avoid precedence issues
#134: FILE: drivers/usb/adutux.c:46:
+#define dbg(lvl, format, arg...) 					\
+do { 									\
+	if (debug >= lvl)						\
+		printk(KERN_DEBUG __FILE__ " : " format " \n", ## arg);	\
+} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: drivers/usb/adutux.c:47:
+do { ^I^I^I^I^I^I^I^I^I\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#137: FILE: drivers/usb/adutux.c:49:
+		printk(KERN_DEBUG __FILE__ " : " format " \n", ## arg);	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#137: FILE: drivers/usb/adutux.c:49:
+		printk(KERN_DEBUG __FILE__ " : " format " \n", ## arg);	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: drivers/usb/adutux.c:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#147: FILE: drivers/usb/adutux.c:59:
+module_param(debug, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#155: FILE: drivers/usb/adutux.c:67:
+static struct usb_device_id device_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#157: FILE: drivers/usb/adutux.c:69:
+	{ USB_DEVICE(ADU_VENDOR_ID, ADU_PRODUCT_ID+20) },	/* ADU120 */
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: drivers/usb/adutux.c:70:
+	{ USB_DEVICE(ADU_VENDOR_ID, ADU_PRODUCT_ID+30) },	/* ADU130 */
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#159: FILE: drivers/usb/adutux.c:71:
+	{ USB_DEVICE(ADU_VENDOR_ID, ADU_PRODUCT_ID+100) },	/* ADU200 */
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: drivers/usb/adutux.c:72:
+	{ USB_DEVICE(ADU_VENDOR_ID, ADU_PRODUCT_ID+108) },	/* ADU208 */
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/usb/adutux.c:73:
+	{ USB_DEVICE(ADU_VENDOR_ID, ADU_PRODUCT_ID+118) },	/* ADU218 */
 	                                          ^

ERROR:SPACING: space required after that close brace '}'
#162: FILE: drivers/usb/adutux.c:74:
+	{ }/* Terminating entry */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#172: FILE: drivers/usb/adutux.c:84:
+#define COMMAND_TIMEOUT	(2*HZ)	/* 60 second timeout for a command */
                        	  ^

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#177: FILE: drivers/usb/adutux.c:89:
+	struct usb_device*	udev;	/* save off the usb device pointer */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo*			bar" should be "foo *bar"
#184: FILE: drivers/usb/adutux.c:96:
+	char*			read_buffer_primary;

ERROR:POINTER_LOCATION: "foo*			bar" should be "foo *bar"
#186: FILE: drivers/usb/adutux.c:98:
+	char*			read_buffer_secondary;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#189: FILE: drivers/usb/adutux.c:101:
+	spinlock_t		buflock;

ERROR:POINTER_LOCATION: "foo*			bar" should be "foo *bar"
#194: FILE: drivers/usb/adutux.c:106:
+	char*			interrupt_in_buffer;

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#195: FILE: drivers/usb/adutux.c:107:
+	struct usb_endpoint_descriptor*	interrupt_in_endpoint;

ERROR:POINTER_LOCATION: "foo*		bar" should be "foo *bar"
#196: FILE: drivers/usb/adutux.c:108:
+	struct urb*		interrupt_in_urb;

ERROR:POINTER_LOCATION: "foo*			bar" should be "foo *bar"
#199: FILE: drivers/usb/adutux.c:111:
+	char*			interrupt_out_buffer;

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#200: FILE: drivers/usb/adutux.c:112:
+	struct usb_endpoint_descriptor*	interrupt_out_endpoint;

ERROR:POINTER_LOCATION: "foo*		bar" should be "foo *bar"
#201: FILE: drivers/usb/adutux.c:113:
+	struct urb*		interrupt_out_urb;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#205: FILE: drivers/usb/adutux.c:117:
+extern devfs_handle_t	usb_devfs_handle;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#226: FILE: drivers/usb/adutux.c:138:
+static struct file_operations adu_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#227: FILE: drivers/usb/adutux.c:139:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#228: FILE: drivers/usb/adutux.c:140:
+	read:		adu_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#228: FILE: drivers/usb/adutux.c:140:
+	read:		adu_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#229: FILE: drivers/usb/adutux.c:141:
+	write:		adu_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#229: FILE: drivers/usb/adutux.c:141:
+	write:		adu_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#230: FILE: drivers/usb/adutux.c:142:
+	open:		adu_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#230: FILE: drivers/usb/adutux.c:142:
+	open:		adu_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#231: FILE: drivers/usb/adutux.c:143:
+	release:	adu_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#231: FILE: drivers/usb/adutux.c:143:
+	release:	adu_release,

WARNING:INDENTED_LABEL: labels should not be indented
#236: FILE: drivers/usb/adutux.c:148:
+	name:		"adutux",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#237: FILE: drivers/usb/adutux.c:149:
+	probe:		adu_probe,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#237: FILE: drivers/usb/adutux.c:149:
+	probe:		adu_probe,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#238: FILE: drivers/usb/adutux.c:150:
+	disconnect:	adu_disconnect,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#238: FILE: drivers/usb/adutux.c:150:
+	disconnect:	adu_disconnect,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#239: FILE: drivers/usb/adutux.c:151:
+	fops:		&adu_fops,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#239: FILE: drivers/usb/adutux.c:151:
+	fops:		&adu_fops,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#240: FILE: drivers/usb/adutux.c:152:
+	minor:		ADU_MINOR_BASE,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#240: FILE: drivers/usb/adutux.c:152:
+	minor:		ADU_MINOR_BASE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#241: FILE: drivers/usb/adutux.c:153:
+	id_table:	device_table,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#241: FILE: drivers/usb/adutux.c:153:
+	id_table:	device_table,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#255: FILE: drivers/usb/adutux.c:167:
+	printk(KERN_DEBUG __FILE__": %s - length = %d, data = ",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#255: FILE: drivers/usb/adutux.c:167:
+	printk(KERN_DEBUG __FILE__": %s - length = %d, data = ",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: drivers/usb/adutux.c:170:
+		printk("%.2x ", data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#259: FILE: drivers/usb/adutux.c:171:
+	printk("\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: drivers/usb/adutux.c:180:
+	dbg(2," %s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#268: FILE: drivers/usb/adutux.c:180:
+	dbg(2," %s : enter", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#270: FILE: drivers/usb/adutux.c:182:
+	if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#271: FILE: drivers/usb/adutux.c:183:
+		dbg(1," %s : dev is null", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#271: FILE: drivers/usb/adutux.c:183:
+		dbg(1," %s : dev is null", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->udev"
#275: FILE: drivers/usb/adutux.c:187:
+	if (dev->udev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: drivers/usb/adutux.c:188:
+		dbg(1," %s : udev is null", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: drivers/usb/adutux.c:188:
+		dbg(1," %s : udev is null", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: drivers/usb/adutux.c:197:
+	dbg(2," %s : leave", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#285: FILE: drivers/usb/adutux.c:197:
+	dbg(2," %s : leave", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#293: FILE: drivers/usb/adutux.c:205:
+	dbg(2, "%s enter", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#299: FILE: drivers/usb/adutux.c:211:
+	if (dev->interrupt_in_urb != NULL) {
+		usb_free_urb(dev->interrupt_in_urb);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->interrupt_in_urb"
#299: FILE: drivers/usb/adutux.c:211:
+	if (dev->interrupt_in_urb != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#302: FILE: drivers/usb/adutux.c:214:
+	if (dev->interrupt_out_urb != NULL) {
+		usb_free_urb(dev->interrupt_out_urb);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->interrupt_out_urb"
#302: FILE: drivers/usb/adutux.c:214:
+	if (dev->interrupt_out_urb != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#305: FILE: drivers/usb/adutux.c:217:
+	if (dev->read_buffer_primary != NULL) {
+		kfree(dev->read_buffer_primary);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->read_buffer_primary"
#305: FILE: drivers/usb/adutux.c:217:
+	if (dev->read_buffer_primary != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#308: FILE: drivers/usb/adutux.c:220:
+	if (dev->read_buffer_secondary != NULL) {
+		kfree(dev->read_buffer_secondary);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->read_buffer_secondary"
#308: FILE: drivers/usb/adutux.c:220:
+	if (dev->read_buffer_secondary != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#311: FILE: drivers/usb/adutux.c:223:
+	if (dev->interrupt_in_buffer != NULL) {
+		kfree(dev->interrupt_in_buffer);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->interrupt_in_buffer"
#311: FILE: drivers/usb/adutux.c:223:
+	if (dev->interrupt_in_buffer != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#314: FILE: drivers/usb/adutux.c:226:
+	if (dev->interrupt_out_buffer != NULL) {
+		kfree(dev->interrupt_out_buffer);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->interrupt_out_buffer"
#314: FILE: drivers/usb/adutux.c:226:
+	if (dev->interrupt_out_buffer != NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#319: FILE: drivers/usb/adutux.c:231:
+	dbg(2, "%s : leave", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: drivers/usb/adutux.c:241:
+	dbg(4," %s : enter, status %d", __FUNCTION__, urb->status);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#329: FILE: drivers/usb/adutux.c:241:
+	dbg(4," %s : enter, status %d", __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#330: FILE: drivers/usb/adutux.c:242:
+	adu_debug_data(5, __FUNCTION__, urb->actual_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/usb/adutux.c:249:
+		if ((urb->status != -ENOENT) && (urb->status != -ECONNRESET) &&
+			(urb->status != -ESHUTDOWN)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#338: FILE: drivers/usb/adutux.c:250:
+			dbg(1," %s : nonzero status received: %d",
 			     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#339: FILE: drivers/usb/adutux.c:251:
+			    __FUNCTION__, urb->status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'urb->actual_length'
#345: FILE: drivers/usb/adutux.c:257:
+		if (dev->read_buffer_length <
+		    (4 * dev->interrupt_in_endpoint->wMaxPacketSize) -
+		     (urb->actual_length)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#346: FILE: drivers/usb/adutux.c:258:
+		    (4 * dev->interrupt_in_endpoint->wMaxPacketSize) -

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: drivers/usb/adutux.c:260:
+			memcpy (dev->read_buffer_primary +

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: drivers/usb/adutux.c:265:
+			dbg(2," %s reading  %d ", __FUNCTION__,
 			     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#353: FILE: drivers/usb/adutux.c:265:
+			dbg(2," %s reading  %d ", __FUNCTION__,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: drivers/usb/adutux.c:268:
+			dbg(1," %s : read_buffer overflow", __FUNCTION__);
 			     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#356: FILE: drivers/usb/adutux.c:268:
+			dbg(1," %s : read_buffer overflow", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#365: FILE: drivers/usb/adutux.c:277:
+	adu_debug_data(5, __FUNCTION__, urb->actual_length,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/usb/adutux.c:279:
+	dbg(4," %s : leave, status %d", __FUNCTION__, urb->status);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#367: FILE: drivers/usb/adutux.c:279:
+	dbg(4," %s : leave, status %d", __FUNCTION__, urb->status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: drivers/usb/adutux.c:289:
+	dbg(4," %s : enter, status %d", __FUNCTION__, urb->status);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#377: FILE: drivers/usb/adutux.c:289:
+	dbg(4," %s : enter, status %d", __FUNCTION__, urb->status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: drivers/usb/adutux.c:290:
+	adu_debug_data(5,__FUNCTION__, urb->actual_length, urb->transfer_buffer);
 	                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#378: FILE: drivers/usb/adutux.c:290:
+	adu_debug_data(5,__FUNCTION__, urb->actual_length, urb->transfer_buffer);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#384: FILE: drivers/usb/adutux.c:296:
+			    __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#392: FILE: drivers/usb/adutux.c:304:
+	adu_debug_data(5, __FUNCTION__, urb->actual_length,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: drivers/usb/adutux.c:306:
+	dbg(4," %s : leave, status %d", __FUNCTION__, urb->status);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#394: FILE: drivers/usb/adutux.c:306:
+	dbg(4," %s : leave, status %d", __FUNCTION__, urb->status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: drivers/usb/adutux.c:318:
+	dbg(2,"%s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#406: FILE: drivers/usb/adutux.c:318:
+	dbg(2,"%s : enter", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'subminor < 0'
#409: FILE: drivers/usb/adutux.c:321:
+	if ((subminor < 0) ||
+	    (subminor >= MAX_DEVICES)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'subminor >= MAX_DEVICES'
#409: FILE: drivers/usb/adutux.c:321:
+	if ((subminor < 0) ||
+	    (subminor >= MAX_DEVICES)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#421: FILE: drivers/usb/adutux.c:333:
+	if (dev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: drivers/usb/adutux.c:348:
+	dbg(2,"%s : open count %d", __FUNCTION__, dev->open_count);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#436: FILE: drivers/usb/adutux.c:348:
+	dbg(2,"%s : open count %d", __FUNCTION__, dev->open_count);

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#456: FILE: drivers/usb/adutux.c:368:
+		     usb_rcvintpipe(dev->udev, dev->interrupt_in_endpoint->bEndpointAddress),

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#481: FILE: drivers/usb/adutux.c:393:
+	dbg(2, " %s : leave, return value %d", __FUNCTION__, retval);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: drivers/usb/adutux.c:405:
+	dbg(2," %s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#493: FILE: drivers/usb/adutux.c:405:
+	dbg(2," %s : enter", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->udev"
#495: FILE: drivers/usb/adutux.c:407:
+	if (dev->udev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: drivers/usb/adutux.c:418:
+	dbg(2," %s : open count %d", __FUNCTION__, dev->open_count);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#506: FILE: drivers/usb/adutux.c:418:
+	dbg(2," %s : open count %d", __FUNCTION__, dev->open_count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: drivers/usb/adutux.c:428:
+	dbg(2," %s : leave", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#516: FILE: drivers/usb/adutux.c:428:
+	dbg(2," %s : leave", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: drivers/usb/adutux.c:440:
+	dbg(2," %s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#528: FILE: drivers/usb/adutux.c:440:
+	dbg(2," %s : enter", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!file"
#530: FILE: drivers/usb/adutux.c:442:
+	if (file == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#531: FILE: drivers/usb/adutux.c:443:
+		dbg(1," %s : file is NULL", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#531: FILE: drivers/usb/adutux.c:443:
+		dbg(1," %s : file is NULL", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#538: FILE: drivers/usb/adutux.c:450:
+	if (dev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: drivers/usb/adutux.c:451:
+		dbg(1," %s : object is NULL", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#539: FILE: drivers/usb/adutux.c:451:
+		dbg(1," %s : object is NULL", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: drivers/usb/adutux.c:460:
+		dbg(1," %s : device not opened", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#548: FILE: drivers/usb/adutux.c:460:
+		dbg(1," %s : device not opened", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: drivers/usb/adutux.c:474:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, retval);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#562: FILE: drivers/usb/adutux.c:474:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, retval);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: drivers/usb/adutux.c:494:
+	dbg(2," %s : enter, count = %Zd, file=%p", __FUNCTION__, count, file);
 	     ^

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#582: FILE: drivers/usb/adutux.c:494:
+	dbg(2," %s : enter, count = %Zd, file=%p", __FUNCTION__, count, file);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#582: FILE: drivers/usb/adutux.c:494:
+	dbg(2," %s : enter, count = %Zd, file=%p", __FUNCTION__, count, file);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#585: FILE: drivers/usb/adutux.c:497:
+	dbg(2," %s : dev=%p", __FUNCTION__, dev);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#585: FILE: drivers/usb/adutux.c:497:
+	dbg(2," %s : dev=%p", __FUNCTION__, dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->udev"
#591: FILE: drivers/usb/adutux.c:503:
+	if (dev->udev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#599: FILE: drivers/usb/adutux.c:511:
+		dbg(1," %s : read request of 0 bytes", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#599: FILE: drivers/usb/adutux.c:511:
+		dbg(1," %s : read request of 0 bytes", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: drivers/usb/adutux.c:516:
+	dbg(2," %s : about to start looping", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#604: FILE: drivers/usb/adutux.c:516:
+	dbg(2," %s : about to start looping", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: drivers/usb/adutux.c:519:
+		int data_in_secondary = dev->secondary_tail - dev->secondary_head;
+		dbg(2," %s : while, data_in_secondary=%d, status=%d",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: drivers/usb/adutux.c:519:
+		dbg(2," %s : while, data_in_secondary=%d, status=%d",
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#608: FILE: drivers/usb/adutux.c:520:
+		    __FUNCTION__, data_in_secondary,

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#613: FILE: drivers/usb/adutux.c:525:
+			int amount = bytes_to_read < data_in_secondary ? bytes_to_read : data_in_secondary;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#614: FILE: drivers/usb/adutux.c:526:
+			i = copy_to_user(buffer, dev->read_buffer_secondary+dev->secondary_head, amount);

WARNING:LINE_SPACING: Missing a blank line after declarations
#614: FILE: drivers/usb/adutux.c:526:
+			int amount = bytes_to_read < data_in_secondary ? bytes_to_read : data_in_secondary;
+			i = copy_to_user(buffer, dev->read_buffer_secondary+dev->secondary_head, amount);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#614: FILE: drivers/usb/adutux.c:526:
+			i = copy_to_user(buffer, dev->read_buffer_secondary+dev->secondary_head, amount);
 			                                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: drivers/usb/adutux.c:540:
+			spin_lock_irqsave (&dev->buflock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#632: FILE: drivers/usb/adutux.c:544:
+				char *tmp;
+				dbg(2," %s : swap, read_buffer_length = %d",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#632: FILE: drivers/usb/adutux.c:544:
+				dbg(2," %s : swap, read_buffer_length = %d",
 				     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#633: FILE: drivers/usb/adutux.c:545:
+				    __FUNCTION__, dev->read_buffer_length);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: drivers/usb/adutux.c:560:
+					dbg(2," %s : submitted already", __FUNCTION__);
 					     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#648: FILE: drivers/usb/adutux.c:560:
+					dbg(2," %s : submitted already", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: drivers/usb/adutux.c:563:
+					dbg(2," %s : initiate input", __FUNCTION__);
 					     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#651: FILE: drivers/usb/adutux.c:563:
+					dbg(2," %s : initiate input", __FUNCTION__);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#656: FILE: drivers/usb/adutux.c:568:
+						     usb_rcvintpipe(dev->udev, dev->interrupt_in_endpoint->bEndpointAddress),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: drivers/usb/adutux.c:578:
+						dbg(2," %s : submitted OK", __FUNCTION__);
 						     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#666: FILE: drivers/usb/adutux.c:578:
+						dbg(2," %s : submitted OK", __FUNCTION__);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#668: FILE: drivers/usb/adutux.c:580:
+						if (retval == -ENOMEM) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#668: FILE: drivers/usb/adutux.c:580:
+						if (retval == -ENOMEM) {
+							retval = bytes_read ? bytes_read : -ENOMEM;
+						}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#672: FILE: drivers/usb/adutux.c:584:
+						dbg(2," %s : submit failed", __FUNCTION__);
 						     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#672: FILE: drivers/usb/adutux.c:584:
+						dbg(2," %s : submit failed", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#687: FILE: drivers/usb/adutux.c:599:
+					dbg(2," %s : timeout", __FUNCTION__);
 					     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#687: FILE: drivers/usb/adutux.c:599:
+					dbg(2," %s : timeout", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#693: FILE: drivers/usb/adutux.c:605:
+					dbg(2," %s : signal pending", __FUNCTION__);
 					     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#693: FILE: drivers/usb/adutux.c:605:
+					dbg(2," %s : signal pending", __FUNCTION__);

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#703: FILE: drivers/usb/adutux.c:615:
+	if (should_submit && !dev->interrupt_in_urb->status==-EINPROGRESS) {
 	                                                   ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#703: FILE: drivers/usb/adutux.c:615:
+	if (should_submit && !dev->interrupt_in_urb->status==-EINPROGRESS) {
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#706: FILE: drivers/usb/adutux.c:618:
+			     usb_rcvintpipe(dev->udev,dev->interrupt_in_endpoint->bEndpointAddress),
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#723: FILE: drivers/usb/adutux.c:635:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, retval);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#723: FILE: drivers/usb/adutux.c:635:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, retval);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#740: FILE: drivers/usb/adutux.c:652:
+	dbg(2," %s : enter, count = %Zd", __FUNCTION__, count);
 	     ^

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#740: FILE: drivers/usb/adutux.c:652:
+	dbg(2," %s : enter, count = %Zd", __FUNCTION__, count);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#740: FILE: drivers/usb/adutux.c:652:
+	dbg(2," %s : enter, count = %Zd", __FUNCTION__, count);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->udev"
#748: FILE: drivers/usb/adutux.c:660:
+	if (dev->udev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#756: FILE: drivers/usb/adutux.c:668:
+		dbg(1," %s : write request of 0 bytes", __FUNCTION__);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#756: FILE: drivers/usb/adutux.c:668:
+		dbg(1," %s : write request of 0 bytes", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#760: FILE: drivers/usb/adutux.c:672:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#766: FILE: drivers/usb/adutux.c:678:
+				if (signal_pending(current)) {
+				dbg(1," %s : interrupted", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#767: FILE: drivers/usb/adutux.c:679:
+				dbg(1," %s : interrupted", __FUNCTION__);
 				     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#767: FILE: drivers/usb/adutux.c:679:
+				dbg(1," %s : interrupted", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#774: FILE: drivers/usb/adutux.c:686:
+			if (timeout > 0) {
+				break;
+			}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#777: FILE: drivers/usb/adutux.c:689:
+			dbg(1," %s : interrupted timeout: %d", __FUNCTION__, timeout);
 			     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#777: FILE: drivers/usb/adutux.c:689:
+			dbg(1," %s : interrupted timeout: %d", __FUNCTION__, timeout);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#780: FILE: drivers/usb/adutux.c:692:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#781: FILE: drivers/usb/adutux.c:693:
+		dbg(1," %s : final timeout: %d", __FUNCTION__, timeout);
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#781: FILE: drivers/usb/adutux.c:693:
+		dbg(1," %s : final timeout: %d", __FUNCTION__, timeout);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#784: FILE: drivers/usb/adutux.c:696:
+			dbg(1, "%s - command timed out.", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#789: FILE: drivers/usb/adutux.c:701:
+		dbg(4," %s : in progress, count = %Zd", __FUNCTION__, count);
 		     ^

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#789: FILE: drivers/usb/adutux.c:701:
+		dbg(4," %s : in progress, count = %Zd", __FUNCTION__, count);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#789: FILE: drivers/usb/adutux.c:701:
+		dbg(4," %s : in progress, count = %Zd", __FUNCTION__, count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#792: FILE: drivers/usb/adutux.c:704:
+			dbg(4," %s : sending, count = %Zd", __FUNCTION__, count);
 			     ^

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#792: FILE: drivers/usb/adutux.c:704:
+			dbg(4," %s : sending, count = %Zd", __FUNCTION__, count);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#792: FILE: drivers/usb/adutux.c:704:
+			dbg(4," %s : sending, count = %Zd", __FUNCTION__, count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: drivers/usb/adutux.c:709:
+			dbg(4," %s : buffer_size = %Zd, count = %Zd, bytes_to_write = %Zd",
 			     ^

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#797: FILE: drivers/usb/adutux.c:709:
+			dbg(4," %s : buffer_size = %Zd, count = %Zd, bytes_to_write = %Zd",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#798: FILE: drivers/usb/adutux.c:710:
+			    __FUNCTION__, buffer_size, count, bytes_to_write);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#800: FILE: drivers/usb/adutux.c:712:
+			if (copy_from_user(dev->interrupt_out_buffer, buffer, bytes_to_write) != 0) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#806: FILE: drivers/usb/adutux.c:718:
+			FILL_INT_URB(

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#809: FILE: drivers/usb/adutux.c:721:
+				     usb_sndintpipe(dev->udev, dev->interrupt_out_endpoint->bEndpointAddress),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#837: FILE: drivers/usb/adutux.c:749:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, retval);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#837: FILE: drivers/usb/adutux.c:749:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, retval);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: drivers/usb/adutux.c:760:
+static void *adu_probe(struct usb_device *udev, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#862: FILE: drivers/usb/adutux.c:774:
+	dbg(2, " %s : enter", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!udev"
#864: FILE: drivers/usb/adutux.c:776:
+	if (udev == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#865: FILE: drivers/usb/adutux.c:777:
+		info ("udev is NULL.");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: drivers/usb/adutux.c:782:
+		info ("Strange interface number %d.", ifnum);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!minor_table[minor]"
#877: FILE: drivers/usb/adutux.c:789:
+		if (minor_table[minor] == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#881: FILE: drivers/usb/adutux.c:793:
+		info ("Too many devices plugged in, can not handle this device.");

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#885: FILE: drivers/usb/adutux.c:797:
+	/* allocate memory for our device state and intialize it */
 	                                            ^^^^^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct adu_device)...)
#886: FILE: drivers/usb/adutux.c:798:
+	dev = kmalloc(sizeof(struct adu_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#887: FILE: drivers/usb/adutux.c:799:
+	if (dev == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#888: FILE: drivers/usb/adutux.c:800:
+		err ("Out of memory");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#891: FILE: drivers/usb/adutux.c:803:
+	memset (dev, 0x00, sizeof (*dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#891: FILE: drivers/usb/adutux.c:803:
+	memset (dev, 0x00, sizeof (*dev));

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#926: FILE: drivers/usb/adutux.c:838:
+	for (i = 0; i < iface_desc->bNumEndpoints; ++i) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: drivers/usb/adutux.c:841:
+^I^I/** $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#934: FILE: drivers/usb/adutux.c:846:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) == USB_ENDPOINT_XFER_INT)) {

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#934: FILE: drivers/usb/adutux.c:846:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) == USB_ENDPOINT_XFER_INT)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: drivers/usb/adutux.c:851:
+^I^I/** $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#944: FILE: drivers/usb/adutux.c:856:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) == USB_ENDPOINT_XFER_INT)) {

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: drivers/usb/adutux.c:862:
+	if(dev->interrupt_in_endpoint == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->interrupt_in_endpoint"
#950: FILE: drivers/usb/adutux.c:862:
+	if(dev->interrupt_in_endpoint == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->interrupt_out_endpoint"
#954: FILE: drivers/usb/adutux.c:866:
+	if (dev->interrupt_out_endpoint == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1023: FILE: drivers/usb/adutux.c:935:
+^I^I^I^I    S_IFCHR | S_IRUSR | S_IWUSR | $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1023: FILE: drivers/usb/adutux.c:935:
+				    S_IFCHR | S_IRUSR | S_IWUSR | 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1024: FILE: drivers/usb/adutux.c:936:
+^I^I^I^I    S_IRGRP | S_IWGRP | S_IROTH, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRGRP | S_IWGRP | S_IROTH' are not preferred. Consider using octal permissions '0064'.
#1024: FILE: drivers/usb/adutux.c:936:
+				    S_IRGRP | S_IWGRP | S_IROTH, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1028: FILE: drivers/usb/adutux.c:940:
+	info ("ADU%d now attached to /dev/usb/adutux%d", udev->descriptor.idProduct, dev->minor);

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1028: FILE: drivers/usb/adutux.c:940:
+	info ("ADU%d now attached to /dev/usb/adutux%d", udev->descriptor.idProduct, dev->minor);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1045: FILE: drivers/usb/adutux.c:957:
+	dbg(2," %s : leave, return value 0x%.8lx (dev)", __FUNCTION__, (dev)?(long)dev:0);
 	     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1045: FILE: drivers/usb/adutux.c:957:
+	dbg(2," %s : leave, return value 0x%.8lx (dev)", __FUNCTION__, (dev)?(long)dev:0);
 	                                                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1045: FILE: drivers/usb/adutux.c:957:
+	dbg(2," %s : leave, return value 0x%.8lx (dev)", __FUNCTION__, (dev)?(long)dev:0);
 	                                                                              ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1045: FILE: drivers/usb/adutux.c:957:
+	dbg(2," %s : leave, return value 0x%.8lx (dev)", __FUNCTION__, (dev)?(long)dev:0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: drivers/usb/adutux.c:972:
+	dbg(2," %s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1060: FILE: drivers/usb/adutux.c:972:
+	dbg(2," %s : enter", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: drivers/usb/adutux.c:976:
+	down (&dev->sem);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1072: FILE: drivers/usb/adutux.c:984:
+	dbg(2," %s : open count %d", __FUNCTION__, dev->open_count);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1072: FILE: drivers/usb/adutux.c:984:
+	dbg(2," %s : open count %d", __FUNCTION__, dev->open_count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1074: FILE: drivers/usb/adutux.c:986:
+		up (&dev->sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1078: FILE: drivers/usb/adutux.c:990:
+		up (&dev->sem);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: drivers/usb/adutux.c:995:
+	dbg(2," %s : leave", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1083: FILE: drivers/usb/adutux.c:995:
+	dbg(2," %s : leave", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: drivers/usb/adutux.c:1005:
+	dbg(2," %s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1093: FILE: drivers/usb/adutux.c:1005:
+	dbg(2," %s : enter", __FUNCTION__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1098: FILE: drivers/usb/adutux.c:1010:
+		err("usb_register failed for the "__FILE__" driver. "

WARNING:SPLIT_STRING: quoted string split across lines
#1099: FILE: drivers/usb/adutux.c:1011:
+		err("usb_register failed for the "__FILE__" driver. "
+		    "Error number %d", result);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1107: FILE: drivers/usb/adutux.c:1019:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, result);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1107: FILE: drivers/usb/adutux.c:1019:
+	dbg(2," %s : leave, return value %d", __FUNCTION__, result);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1117: FILE: drivers/usb/adutux.c:1029:
+	dbg(2," %s : enter", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1117: FILE: drivers/usb/adutux.c:1029:
+	dbg(2," %s : enter", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: drivers/usb/adutux.c:1032:
+	dbg(2," %s : leave", __FUNCTION__);
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1120: FILE: drivers/usb/adutux.c:1032:
+	dbg(2," %s : leave", __FUNCTION__);

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#1160: FILE: MAINTAINERS:178:
+P:	Vitaliy Ivanov
+M:	vitalivanov@gmail.com

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368913.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 83 errors, 129 warnings, 46 checks, 1082 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368913.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
