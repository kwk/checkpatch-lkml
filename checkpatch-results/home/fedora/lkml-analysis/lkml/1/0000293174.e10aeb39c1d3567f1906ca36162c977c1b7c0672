CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#28: 
Signed-off-by: Krzysztof Ha³asa <khc@pm.waw.pl>
                           ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#39: FILE: drivers/net/arm/Kconfig:51:
+config IXP4XX_ETH
+	tristate "Intel IXP4xx Ethernet support"
+	depends on ARM && ARCH_IXP4XX && IXP4XX_NPE && IXP4XX_QMGR
+	select MII
+	help
+	  Say Y here if you want to use built-in Ethernet ports
+	  on IXP4xx processor.

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#56: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: drivers/net/arm/ixp4xx_eth.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: drivers/net/arm/ixp4xx_eth.c:105:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: drivers/net/arm/ixp4xx_eth.c:131:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#193: FILE: drivers/net/arm/ixp4xx_eth.c:133:
+typedef struct sk_buff buffer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#197: FILE: drivers/net/arm/ixp4xx_eth.c:137:
+typedef void buffer_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#286: FILE: drivers/net/arm/ixp4xx_eth.c:226:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: drivers/net/arm/ixp4xx_eth.c:239:
+	int i;
+	for (i = 0; i < cnt; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#310: FILE: drivers/net/arm/ixp4xx_eth.c:250:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#317: FILE: drivers/net/arm/ixp4xx_eth.c:257:
+		printk(KERN_ERR "%s: MII not ready to transmit\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: drivers/net/arm/ixp4xx_eth.c:277:
+		printk(KERN_ERR "%s: MII write failed\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#342: FILE: drivers/net/arm/ixp4xx_eth.c:282:
+	printk(KERN_DEBUG "%s: mdio_cmd() took %i cycles\n", dev->name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mdio_cmd', this function's name, in a string
#342: FILE: drivers/net/arm/ixp4xx_eth.c:282:
+	printk(KERN_DEBUG "%s: mdio_cmd() took %i cycles\n", dev->name,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#350: FILE: drivers/net/arm/ixp4xx_eth.c:290:
+		printk(KERN_ERR "%s: MII read failed\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#389: FILE: drivers/net/arm/ixp4xx_eth.c:329:
+			printk(KERN_DEBUG "%s: phy_reset() took %i cycles\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'phy_reset', this function's name, in a string
#389: FILE: drivers/net/arm/ixp4xx_eth.c:329:
+			printk(KERN_DEBUG "%s: phy_reset() took %i cycles\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#398: FILE: drivers/net/arm/ixp4xx_eth.c:338:
+	printk(KERN_ERR "%s: MII reset failed\n", dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#411: FILE: drivers/net/arm/ixp4xx_eth.c:351:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#422: FILE: drivers/net/arm/ixp4xx_eth.c:362:
+			printk(KERN_INFO "%s: link up\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#425: FILE: drivers/net/arm/ixp4xx_eth.c:365:
+			printk(KERN_INFO "%s: link down\n", dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: drivers/net/arm/ixp4xx_eth.c:371:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#440: FILE: drivers/net/arm/ixp4xx_eth.c:380:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#447: FILE: drivers/net/arm/ixp4xx_eth.c:387:
+	printk(KERN_DEBUG "%s: %s(%i) ", dev->name, func, len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: drivers/net/arm/ixp4xx_eth.c:391:
+		printk("%s%02X",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#455: FILE: drivers/net/arm/ixp4xx_eth.c:395:
+	printk("\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: drivers/net/arm/ixp4xx_eth.c:399:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#463: FILE: drivers/net/arm/ixp4xx_eth.c:403:
+	printk(KERN_DEBUG "%X: %X %3X %3X %08X %2X < %2X %4X %X"

WARNING:SPLIT_STRING: quoted string split across lines
#464: FILE: drivers/net/arm/ixp4xx_eth.c:404:
+	printk(KERN_DEBUG "%X: %X %3X %3X %08X %2X < %2X %4X %X"
+	       " %X %X %02X%02X%02X%02X%02X%02X < %02X%02X%02X%02X%02X%02X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#496: FILE: drivers/net/arm/ixp4xx_eth.c:436:
+	printk(KERN_DEBUG "Queue %i %s%s %X\n", queue,

WARNING:LINE_SPACING: Missing a blank line after declarations
#505: FILE: drivers/net/arm/ixp4xx_eth.c:445:
+	u32 phys = qmgr_get_entry(queue);
+	debug_queue(queue, 1, phys);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#515: FILE: drivers/net/arm/ixp4xx_eth.c:455:
+	if (!(phys = queue_get_entry(queue)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#522: FILE: drivers/net/arm/ixp4xx_eth.c:462:
+	BUG_ON(n_desc >= (is_tx ? TX_DESCS : RX_DESCS));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: drivers/net/arm/ixp4xx_eth.c:464:
+	BUG_ON(tab[n_desc].next);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#533: FILE: drivers/net/arm/ixp4xx_eth.c:473:
+	BUG_ON(phys & 0x1F);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#535: FILE: drivers/net/arm/ixp4xx_eth.c:475:
+	BUG_ON(qmgr_stat_overflow(queue));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#538: FILE: drivers/net/arm/ixp4xx_eth.c:478:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#551: FILE: drivers/net/arm/ixp4xx_eth.c:491:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#558: FILE: drivers/net/arm/ixp4xx_eth.c:498:
+	printk(KERN_DEBUG "%s: eth_rx_irq\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_rx_irq', this function's name, in a string
#558: FILE: drivers/net/arm/ixp4xx_eth.c:498:
+	printk(KERN_DEBUG "%s: eth_rx_irq\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#572: FILE: drivers/net/arm/ixp4xx_eth.c:512:
+	printk(KERN_DEBUG "%s: eth_poll\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_poll', this function's name, in a string
#572: FILE: drivers/net/arm/ixp4xx_eth.c:512:
+	printk(KERN_DEBUG "%s: eth_poll\n", dev->name);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#584: FILE: drivers/net/arm/ixp4xx_eth.c:524:
+		if ((n = queue_get_desc(rxq, port, 0)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#587: FILE: drivers/net/arm/ixp4xx_eth.c:527:
+			printk(KERN_DEBUG "%s: eth_poll netif_rx_complete\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_poll', this function's name, in a string
#587: FILE: drivers/net/arm/ixp4xx_eth.c:527:
+			printk(KERN_DEBUG "%s: eth_poll netif_rx_complete\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#595: FILE: drivers/net/arm/ixp4xx_eth.c:535:
+				printk(KERN_DEBUG "%s: eth_poll"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_poll', this function's name, in a string
#595: FILE: drivers/net/arm/ixp4xx_eth.c:535:
+				printk(KERN_DEBUG "%s: eth_poll"

WARNING:TYPO_SPELLING: 'successed' may be misspelled - perhaps 'succeeded'?
#596: FILE: drivers/net/arm/ixp4xx_eth.c:536:
+				       " netif_rx_reschedule successed\n",
 				                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#596: FILE: drivers/net/arm/ixp4xx_eth.c:536:
+				printk(KERN_DEBUG "%s: eth_poll"
+				       " netif_rx_reschedule successed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#603: FILE: drivers/net/arm/ixp4xx_eth.c:543:
+			printk(KERN_DEBUG "%s: eth_poll all done\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_poll', this function's name, in a string
#603: FILE: drivers/net/arm/ixp4xx_eth.c:543:
+			printk(KERN_DEBUG "%s: eth_poll all done\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#612: FILE: drivers/net/arm/ixp4xx_eth.c:552:
+		if ((skb = netdev_alloc_skb(dev, RX_BUFF_SIZE))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#669: FILE: drivers/net/arm/ixp4xx_eth.c:609:
+	printk(KERN_DEBUG "eth_poll(): end, not all work done\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_poll', this function's name, in a string
#669: FILE: drivers/net/arm/ixp4xx_eth.c:609:
+	printk(KERN_DEBUG "eth_poll(): end, not all work done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#674: FILE: drivers/net/arm/ixp4xx_eth.c:614:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#680: FILE: drivers/net/arm/ixp4xx_eth.c:620:
+	printk(KERN_DEBUG DRV_NAME ": eth_txdone_irq\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_txdone_irq', this function's name, in a string
#680: FILE: drivers/net/arm/ixp4xx_eth.c:620:
+	printk(KERN_DEBUG DRV_NAME ": eth_txdone_irq\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#689: FILE: drivers/net/arm/ixp4xx_eth.c:629:
+		BUG_ON(npe_id >= MAX_NPES);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#691: FILE: drivers/net/arm/ixp4xx_eth.c:631:
+		BUG_ON(!port);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#694: FILE: drivers/net/arm/ixp4xx_eth.c:634:
+		BUG_ON(n_desc >= TX_DESCS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#704: FILE: drivers/net/arm/ixp4xx_eth.c:644:
+			printk(KERN_DEBUG "%s: eth_txdone_irq free %p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_txdone_irq', this function's name, in a string
#704: FILE: drivers/net/arm/ixp4xx_eth.c:644:
+			printk(KERN_DEBUG "%s: eth_txdone_irq free %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#715: FILE: drivers/net/arm/ixp4xx_eth.c:655:
+			printk(KERN_DEBUG "%s: eth_txdone_irq xmit ready\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_txdone_irq', this function's name, in a string
#715: FILE: drivers/net/arm/ixp4xx_eth.c:655:
+			printk(KERN_DEBUG "%s: eth_txdone_irq xmit ready\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#733: FILE: drivers/net/arm/ixp4xx_eth.c:673:
+	printk(KERN_DEBUG "%s: eth_xmit\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_xmit', this function's name, in a string
#733: FILE: drivers/net/arm/ixp4xx_eth.c:673:
+	printk(KERN_DEBUG "%s: eth_xmit\n", dev->name);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#752: FILE: drivers/net/arm/ixp4xx_eth.c:692:
+	if (!(mem = kmalloc(bytes, GFP_ATOMIC))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#773: FILE: drivers/net/arm/ixp4xx_eth.c:713:
+	BUG_ON(n < 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#782: FILE: drivers/net/arm/ixp4xx_eth.c:722:
+	desc->buf_len = desc->pkt_len = len;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#791: FILE: drivers/net/arm/ixp4xx_eth.c:731:
+		printk(KERN_DEBUG "%s: eth_xmit queue full\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_xmit', this function's name, in a string
#791: FILE: drivers/net/arm/ixp4xx_eth.c:731:
+		printk(KERN_DEBUG "%s: eth_xmit queue full\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#797: FILE: drivers/net/arm/ixp4xx_eth.c:737:
+			printk(KERN_DEBUG "%s: eth_xmit ready again\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_xmit', this function's name, in a string
#797: FILE: drivers/net/arm/ixp4xx_eth.c:737:
+			printk(KERN_DEBUG "%s: eth_xmit ready again\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#805: FILE: drivers/net/arm/ixp4xx_eth.c:745:
+	printk(KERN_DEBUG "%s: eth_xmit end\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eth_xmit', this function's name, in a string
#805: FILE: drivers/net/arm/ixp4xx_eth.c:745:
+	printk(KERN_DEBUG "%s: eth_xmit end\n", dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#810: FILE: drivers/net/arm/ixp4xx_eth.c:750:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#814: FILE: drivers/net/arm/ixp4xx_eth.c:754:
+	struct port *port = netdev_priv(dev);
+	return &port->stat;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#846: FILE: drivers/net/arm/ixp4xx_eth.c:786:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#861: FILE: drivers/net/arm/ixp4xx_eth.c:801:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#898: FILE: drivers/net/arm/ixp4xx_eth.c:838:
+	printk(KERN_DEBUG "%s: unable to request hardware queues\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#919: FILE: drivers/net/arm/ixp4xx_eth.c:859:
+		if (!(dma_pool = dma_pool_create(DRV_NAME, NULL,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#923: FILE: drivers/net/arm/ixp4xx_eth.c:863:
+	if (!(port->desc_tab = dma_pool_alloc(dma_pool, GFP_KERNEL,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#936: FILE: drivers/net/arm/ixp4xx_eth.c:876:
+		if (!(buff = netdev_alloc_skb(port->netdev, RX_BUFF_SIZE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#940: FILE: drivers/net/arm/ixp4xx_eth.c:880:
+		if (!(buff = kmalloc(RX_BUFF_SIZE, GFP_KERNEL)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#966: FILE: drivers/net/arm/ixp4xx_eth.c:906:
+			buffer_t *buff = port->rx_buff_tab[i];
+			if (buff) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#976: FILE: drivers/net/arm/ixp4xx_eth.c:916:
+			buffer_t *buff = port->tx_buff_tab[i];
+			if (buff) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1004: FILE: drivers/net/arm/ixp4xx_eth.c:944:
+			printk(KERN_ERR "%s: %s not responding\n", dev->name,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1040: FILE: drivers/net/arm/ixp4xx_eth.c:980:
+	if ((err = request_queues(port)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1043: FILE: drivers/net/arm/ixp4xx_eth.c:983:
+	if ((err = init_queues(port)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1114: FILE: drivers/net/arm/ixp4xx_eth.c:1054:
+		printk(KERN_CRIT "%s: unable to enable loopback\n", dev->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1127: FILE: drivers/net/arm/ixp4xx_eth.c:1067:
+			int n = queue_get_desc(port->plat->txreadyq, port, 1);
+			BUG_ON(n < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1127: FILE: drivers/net/arm/ixp4xx_eth.c:1067:
+			BUG_ON(n < 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1130: FILE: drivers/net/arm/ixp4xx_eth.c:1070:
+			desc->buf_len = desc->pkt_len = 1;

WARNING:MEMORY_BARRIER: memory barrier without comment
#1131: FILE: drivers/net/arm/ixp4xx_eth.c:1071:
+			wmb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1138: FILE: drivers/net/arm/ixp4xx_eth.c:1078:
+		printk(KERN_CRIT "%s: unable to drain RX queue, %i buffer(s)"

WARNING:SPLIT_STRING: quoted string split across lines
#1139: FILE: drivers/net/arm/ixp4xx_eth.c:1079:
+		printk(KERN_CRIT "%s: unable to drain RX queue, %i buffer(s)"
+		       " left in NPE\n", dev->name, buffs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1142: FILE: drivers/net/arm/ixp4xx_eth.c:1082:
+		printk(KERN_DEBUG "Draining RX queue took %i cycles\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1158: FILE: drivers/net/arm/ixp4xx_eth.c:1098:
+		printk(KERN_CRIT "%s: unable to drain TX queue, %i buffer(s) "

WARNING:SPLIT_STRING: quoted string split across lines
#1159: FILE: drivers/net/arm/ixp4xx_eth.c:1099:
+		printk(KERN_CRIT "%s: unable to drain TX queue, %i buffer(s) "
+		       "left in NPE\n", dev->name, buffs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1162: FILE: drivers/net/arm/ixp4xx_eth.c:1102:
+		printk(KERN_DEBUG "Draining TX queues took %i cycles\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1167: FILE: drivers/net/arm/ixp4xx_eth.c:1107:
+		printk(KERN_CRIT "%s: unable to disable loopback\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1183: FILE: drivers/net/arm/ixp4xx_eth.c:1123:
+static int __devinit eth_init_one(struct platform_device *pdev)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1191: FILE: drivers/net/arm/ixp4xx_eth.c:1131:
+	if (!(dev = alloc_etherdev(sizeof(struct port))))

CHECK:CAMELCASE: Avoid CamelCase: <IXP4XX_EthA_BASE_VIRT>
#1201: FILE: drivers/net/arm/ixp4xx_eth.c:1141:
+		port->regs = (struct eth_regs __iomem *)IXP4XX_EthA_BASE_VIRT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <IXP4XX_EthA_BASE_PHYS>
#1202: FILE: drivers/net/arm/ixp4xx_eth.c:1142:
+		regs_phys  = IXP4XX_EthA_BASE_PHYS;

CHECK:CAMELCASE: Avoid CamelCase: <IXP4XX_EthB_BASE_VIRT>
#1205: FILE: drivers/net/arm/ixp4xx_eth.c:1145:
+		port->regs = (struct eth_regs __iomem *)IXP4XX_EthB_BASE_VIRT;

CHECK:CAMELCASE: Avoid CamelCase: <IXP4XX_EthB_BASE_PHYS>
#1206: FILE: drivers/net/arm/ixp4xx_eth.c:1146:
+		regs_phys  = IXP4XX_EthB_BASE_PHYS;

CHECK:CAMELCASE: Avoid CamelCase: <IXP4XX_EthC_BASE_VIRT>
#1209: FILE: drivers/net/arm/ixp4xx_eth.c:1149:
+		port->regs = (struct eth_regs __iomem *)IXP4XX_EthC_BASE_VIRT;

CHECK:CAMELCASE: Avoid CamelCase: <IXP4XX_EthC_BASE_PHYS>
#1210: FILE: drivers/net/arm/ixp4xx_eth.c:1150:
+		regs_phys  = IXP4XX_EthC_BASE_PHYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1213: FILE: drivers/net/arm/ixp4xx_eth.c:1153:
+		err = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1227: FILE: drivers/net/arm/ixp4xx_eth.c:1167:
+	if (!(port->npe = npe_request(NPE_ID(port->id)))) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1251: FILE: drivers/net/arm/ixp4xx_eth.c:1191:
+	udelay(50);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1253: FILE: drivers/net/arm/ixp4xx_eth.c:1193:
+	udelay(50);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1262: FILE: drivers/net/arm/ixp4xx_eth.c:1202:
+	printk(KERN_INFO "%s: MII PHY %i on %s\n", dev->name, plat->phy,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1282: FILE: drivers/net/arm/ixp4xx_eth.c:1222:
+static int __devexit eth_remove_one(struct platform_device *pdev)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1305: FILE: drivers/net/arm/ixp4xx_eth.c:1245:
+		return -ENOSYS;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1358: FILE: arch/arm/mach-ixp4xx/ixp4xx_qmgr.c:187:
+	mask[1] = mask[2] = mask[3] = 0;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293174.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 80 warnings, 26 checks, 1306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293174.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
