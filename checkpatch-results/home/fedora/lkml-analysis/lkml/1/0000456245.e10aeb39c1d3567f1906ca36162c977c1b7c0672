CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#49: FILE: include/linux/fs.h:407:
+size_t iov_iter_copy_from_user_atomic(struct page *page,
+		struct iov_iter *i, unsigned long offset, size_t bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: include/linux/fs.h:409:
+size_t iov_iter_copy_from_user(struct page *page,
+		struct iov_iter *i, unsigned long offset, size_t bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: include/linux/fs.h:415:
+static inline void iov_iter_init(struct iov_iter *i,
+			const struct iovec *iov, unsigned long nr_segs,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#73: FILE: include/linux/fs.h:431:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: mm/filemap.c:1843:
+static size_t __iovec_copy_from_user_inatomic(char *vaddr,
 			const struct iovec *iov, size_t base, size_t bytes)

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#105: FILE: mm/filemap.c:1866:
+ * were sucessfully copied.  If a fault is encountered then return the number of
         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: mm/filemap.c:1870:
+size_t iov_iter_copy_from_user_atomic(struct page *page,
+		struct iov_iter *i, unsigned long offset, size_t bytes)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#114: FILE: mm/filemap.c:1875:
+	BUG_ON(!in_atomic());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#114: FILE: mm/filemap.c:1875:
+	BUG_ON(!in_atomic());

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: mm/filemap.c:1880:
+		char __user *buf = i->iov->iov_base + i->iov_offset;
+		left = __copy_from_user_inatomic_nocache(kaddr + offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: mm/filemap.c:1881:
+		left = __copy_from_user_inatomic_nocache(kaddr + offset,
+							buf, bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: mm/filemap.c:1885:
+		copied = __iovec_copy_from_user_inatomic(kaddr + offset,
+						i->iov, i->iov_offset, bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: mm/filemap.c:1899:
+size_t iov_iter_copy_from_user(struct page *page,
+		struct iov_iter *i, unsigned long offset, size_t bytes)

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: mm/filemap.c:1908:
+		char __user *buf = i->iov->iov_base + i->iov_offset;
+		left = __copy_from_user_nocache(kaddr + offset, buf, bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: mm/filemap.c:1912:
+		copied = __iovec_copy_from_user_inatomic(kaddr + offset,
+						i->iov, i->iov_offset, bytes);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#182: FILE: mm/filemap.c:1943:
+	BUG_ON(i->count < bytes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: mm/filemap.c:1953:
+	char __user *buf = i->iov->iov_base + i->iov_offset;
+	return fault_in_pages_readable(buf, seglen);

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: mm/filemap.c:1962:
+	const struct iovec *iov = i->iov;
+	if (i->nr_segs == 1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: mm/filemap.c:2143:
+		bytes = min_t(unsigned long, PAGE_CACHE_SIZE - offset,
+						iov_iter_count(&i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: mm/filemap.c:2193:
+			copied = iov_iter_copy_from_user(src_page, &i,
+								offset, bytes);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 12 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
