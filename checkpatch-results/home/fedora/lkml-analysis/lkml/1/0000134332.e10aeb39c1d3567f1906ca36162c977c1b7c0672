WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <zfWlanReset>
#44: FILE: staging/otus/80211core/ccmd_cs_fix.c:30:
+u16_t zfWlanReset(zdev_t *dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <zfUpdateRxRate>
#45: FILE: staging/otus/80211core/ccmd_cs_fix.c:31:
+u32_t zfUpdateRxRate(zdev_t *dev);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#45: FILE: staging/otus/80211core/ccmd_cs_fix.c:31:
+u32_t zfUpdateRxRate(zdev_t *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <zfiUsbRegIn>
#53: FILE: staging/otus/80211core/ccmd_cs_fix.c:35:
+extern void zfiUsbRegIn(zdev_t *dev, u32_t *rsp, u16_t rspLen);

CHECK:CAMELCASE: Avoid CamelCase: <rspLen>
#53: FILE: staging/otus/80211core/ccmd_cs_fix.c:35:
+extern void zfiUsbRegIn(zdev_t *dev, u32_t *rsp, u16_t rspLen);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#53: FILE: staging/otus/80211core/ccmd_cs_fix.c:35:
+extern void zfiUsbRegIn(zdev_t *dev, u32_t *rsp, u16_t rspLen);

CHECK:CAMELCASE: Avoid CamelCase: <zfiUsbOutComplete>
#54: FILE: staging/otus/80211core/ccmd_cs_fix.c:36:
+extern void zfiUsbOutComplete(zdev_t *dev, zbuf_t *buf, u8_t status, u8_t *hdr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#54: FILE: staging/otus/80211core/ccmd_cs_fix.c:36:
+extern void zfiUsbOutComplete(zdev_t *dev, zbuf_t *buf, u8_t status, u8_t *hdr);

CHECK:CAMELCASE: Avoid CamelCase: <zfiUsbRegOutComplete>
#55: FILE: staging/otus/80211core/ccmd_cs_fix.c:37:
+extern void zfiUsbRegOutComplete(zdev_t *dev);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#55: FILE: staging/otus/80211core/ccmd_cs_fix.c:37:
+extern void zfiUsbRegOutComplete(zdev_t *dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfHpReinit>
#56: FILE: staging/otus/80211core/ccmd_cs_fix.c:38:
+extern u16_t zfHpReinit(zdev_t *dev, u32_t frequency);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#56: FILE: staging/otus/80211core/ccmd_cs_fix.c:38:
+extern u16_t zfHpReinit(zdev_t *dev, u32_t frequency);

CHECK:CAMELCASE: Avoid CamelCase: <zfiGlobalDataSize>
#62: FILE: staging/otus/80211core/ccmd_cs_fix.c:43:
+u16_t zfiGlobalDataSize(zdev_t *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#69: FILE: staging/otus/80211core/ccmd_cs_fix.c:46:
+	u32_t ret;
+	ret = (sizeof(struct zsWlanDev));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <zsWlanDev>
#69: FILE: staging/otus/80211core/ccmd_cs_fix.c:46:
+	ret = (sizeof(struct zsWlanDev));

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#70: FILE: staging/otus/80211core/ccmd_cs_fix.c:47:
+	zm_assert((ret>>16) == 0);
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanOpen>
#78: FILE: staging/otus/80211core/ccmd_cs_fix.c:54:
+extern u16_t zfiWlanOpen(zdev_t *dev, struct zsCbFuncTbl *cbFuncTbl)

CHECK:CAMELCASE: Avoid CamelCase: <zsCbFuncTbl>
#78: FILE: staging/otus/80211core/ccmd_cs_fix.c:54:
+extern u16_t zfiWlanOpen(zdev_t *dev, struct zsCbFuncTbl *cbFuncTbl)

CHECK:CAMELCASE: Avoid CamelCase: <cbFuncTbl>
#78: FILE: staging/otus/80211core/ccmd_cs_fix.c:54:
+extern u16_t zfiWlanOpen(zdev_t *dev, struct zsCbFuncTbl *cbFuncTbl)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#94: FILE: staging/otus/80211core/ccmd_cs_fix.c:57:
+	/* u16_t ret;
+	   u32_t i;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <devSize>
#98: FILE: staging/otus/80211core/ccmd_cs_fix.c:61:
+	u32_t devSize;

CHECK:CAMELCASE: Avoid CamelCase: <zfCbUsbFuncTbl>
#99: FILE: staging/otus/80211core/ccmd_cs_fix.c:62:
+	struct zfCbUsbFuncTbl cbUsbFuncTbl;

CHECK:CAMELCASE: Avoid CamelCase: <cbUsbFuncTbl>
#99: FILE: staging/otus/80211core/ccmd_cs_fix.c:62:
+	struct zfCbUsbFuncTbl cbUsbFuncTbl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: staging/otus/80211core/ccmd_cs_fix.c:63:
+	struct zfCbUsbFuncTbl cbUsbFuncTbl;
+	zmw_get_wlan_dev(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfZeroMemory>
#106: FILE: staging/otus/80211core/ccmd_cs_fix.c:69:
+	zfZeroMemory((u8_t *)wd, (u16_t)devSize);

CHECK:CAMELCASE: Avoid CamelCase: <zfAggInit>
#110: FILE: staging/otus/80211core/ccmd_cs_fix.c:72:
+	zfAggInit(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfCwmInit>
#114: FILE: staging/otus/80211core/ccmd_cs_fix.c:75:
+	zfCwmInit(dev);

CHECK:CAMELCASE: Avoid CamelCase: <commTally>
#147: FILE: staging/otus/80211core/ccmd_cs_fix.c:77:
+	wd->commTally.RateCtrlTxMPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <RateCtrlTxMPDU>
#147: FILE: staging/otus/80211core/ccmd_cs_fix.c:77:
+	wd->commTally.RateCtrlTxMPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <RateCtrlBAFail>
#148: FILE: staging/otus/80211core/ccmd_cs_fix.c:78:
+	wd->commTally.RateCtrlBAFail = 0;

CHECK:CAMELCASE: Avoid CamelCase: <preambleTypeInUsed>
#149: FILE: staging/otus/80211core/ccmd_cs_fix.c:79:
+	wd->preambleTypeInUsed = ZM_PREAMBLE_TYPE_SHORT;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cbFuncTbl"
#151: FILE: staging/otus/80211core/ccmd_cs_fix.c:81:
+	if (cbFuncTbl == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <zfcbRecvEth>
#155: FILE: staging/otus/80211core/ccmd_cs_fix.c:85:
+		if (cbFuncTbl->zfcbRecvEth == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cbFuncTbl->zfcbRecvEth"
#155: FILE: staging/otus/80211core/ccmd_cs_fix.c:85:
+		if (cbFuncTbl->zfcbRecvEth == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <zfcbAuthNotify>
#159: FILE: staging/otus/80211core/ccmd_cs_fix.c:89:
+		wd->zfcbAuthNotify = cbFuncTbl->zfcbAuthNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbAsocNotify>
#161: FILE: staging/otus/80211core/ccmd_cs_fix.c:91:
+		wd->zfcbAsocNotify = cbFuncTbl->zfcbAsocNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbDisAsocNotify>
#162: FILE: staging/otus/80211core/ccmd_cs_fix.c:92:
+		wd->zfcbDisAsocNotify = cbFuncTbl->zfcbDisAsocNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbApConnectNotify>
#163: FILE: staging/otus/80211core/ccmd_cs_fix.c:93:
+		wd->zfcbApConnectNotify = cbFuncTbl->zfcbApConnectNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbConnectNotify>
#164: FILE: staging/otus/80211core/ccmd_cs_fix.c:94:
+		wd->zfcbConnectNotify = cbFuncTbl->zfcbConnectNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbScanNotify>
#165: FILE: staging/otus/80211core/ccmd_cs_fix.c:95:
+		wd->zfcbScanNotify = cbFuncTbl->zfcbScanNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbMicFailureNotify>
#166: FILE: staging/otus/80211core/ccmd_cs_fix.c:96:
+		wd->zfcbMicFailureNotify = cbFuncTbl->zfcbMicFailureNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbApMicFailureNotify>
#167: FILE: staging/otus/80211core/ccmd_cs_fix.c:97:
+		wd->zfcbApMicFailureNotify = cbFuncTbl->zfcbApMicFailureNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbIbssPartnerNotify>
#168: FILE: staging/otus/80211core/ccmd_cs_fix.c:98:
+		wd->zfcbIbssPartnerNotify = cbFuncTbl->zfcbIbssPartnerNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbMacAddressNotify>
#169: FILE: staging/otus/80211core/ccmd_cs_fix.c:99:
+		wd->zfcbMacAddressNotify = cbFuncTbl->zfcbMacAddressNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbSendCompleteIndication>
#170: FILE: staging/otus/80211core/ccmd_cs_fix.c:100:
+		wd->zfcbSendCompleteIndication =

CHECK:CAMELCASE: Avoid CamelCase: <zfcbRestoreBufData>
#173: FILE: staging/otus/80211core/ccmd_cs_fix.c:103:
+		wd->zfcbRestoreBufData = cbFuncTbl->zfcbRestoreBufData;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbRecv80211>
#174: FILE: staging/otus/80211core/ccmd_cs_fix.c:104:
+		wd->zfcbRecv80211 = cbFuncTbl->zfcbRecv80211;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbCencAsocNotify>
#203: FILE: staging/otus/80211core/ccmd_cs_fix.c:106:
+		wd->zfcbCencAsocNotify = cbFuncTbl->zfcbCencAsocNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbClassifyTxPacket>
#205: FILE: staging/otus/80211core/ccmd_cs_fix.c:108:
+		wd->zfcbClassifyTxPacket = cbFuncTbl->zfcbClassifyTxPacket;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbHwWatchDogNotify>
#206: FILE: staging/otus/80211core/ccmd_cs_fix.c:109:
+		wd->zfcbHwWatchDogNotify = cbFuncTbl->zfcbHwWatchDogNotify;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbUsbRecv>
#210: FILE: staging/otus/80211core/ccmd_cs_fix.c:113:
+	cbUsbFuncTbl.zfcbUsbRecv = zfiUsbRecv;

CHECK:CAMELCASE: Avoid CamelCase: <zfiUsbRecv>
#210: FILE: staging/otus/80211core/ccmd_cs_fix.c:113:
+	cbUsbFuncTbl.zfcbUsbRecv = zfiUsbRecv;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbUsbRegIn>
#211: FILE: staging/otus/80211core/ccmd_cs_fix.c:114:
+	cbUsbFuncTbl.zfcbUsbRegIn = zfiUsbRegIn;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbUsbOutComplete>
#212: FILE: staging/otus/80211core/ccmd_cs_fix.c:115:
+	cbUsbFuncTbl.zfcbUsbOutComplete = zfiUsbOutComplete;

CHECK:CAMELCASE: Avoid CamelCase: <zfcbUsbRegOutComplete>
#213: FILE: staging/otus/80211core/ccmd_cs_fix.c:116:
+	cbUsbFuncTbl.zfcbUsbRegOutComplete = zfiUsbRegOutComplete;

CHECK:CAMELCASE: Avoid CamelCase: <zfwUsbRegisterCallBack>
#214: FILE: staging/otus/80211core/ccmd_cs_fix.c:117:
+	zfwUsbRegisterCallBack(dev, &cbUsbFuncTbl);

CHECK:CAMELCASE: Avoid CamelCase: <macAddr>
#216: FILE: staging/otus/80211core/ccmd_cs_fix.c:119:
+	wd->macAddr[0] = 0x8000;

CHECK:CAMELCASE: Avoid CamelCase: <regulationTable>
#220: FILE: staging/otus/80211core/ccmd_cs_fix.c:123:
+	wd->regulationTable.regionCode = 0xffff;

CHECK:CAMELCASE: Avoid CamelCase: <regionCode>
#220: FILE: staging/otus/80211core/ccmd_cs_fix.c:123:
+	wd->regulationTable.regionCode = 0xffff;

CHECK:CAMELCASE: Avoid CamelCase: <zfHpInit>
#222: FILE: staging/otus/80211core/ccmd_cs_fix.c:125:
+	zfHpInit(dev, wd->frequency);

CHECK:CAMELCASE: Avoid CamelCase: <mTxRate>
#250: FILE: staging/otus/80211core/ccmd_cs_fix.c:138:
+	wd->sta.mTxRate = 0x0;

CHECK:CAMELCASE: Avoid CamelCase: <uTxRate>
#251: FILE: staging/otus/80211core/ccmd_cs_fix.c:139:
+	wd->sta.uTxRate = 0x3;

CHECK:CAMELCASE: Avoid CamelCase: <mmTxRate>
#252: FILE: staging/otus/80211core/ccmd_cs_fix.c:140:
+	wd->sta.mmTxRate = 0x0;

CHECK:CAMELCASE: Avoid CamelCase: <adapterState>
#253: FILE: staging/otus/80211core/ccmd_cs_fix.c:141:
+	wd->sta.adapterState = ZM_STA_STATE_DISCONNECT;

CHECK:CAMELCASE: Avoid CamelCase: <preambleTypeHT>
#257: FILE: staging/otus/80211core/ccmd_cs_fix.c:145:
+	wd->sta.preambleTypeHT = 0;

CHECK:CAMELCASE: Avoid CamelCase: <htCtrlBandwidth>
#258: FILE: staging/otus/80211core/ccmd_cs_fix.c:146:
+	wd->sta.htCtrlBandwidth = 0;

CHECK:CAMELCASE: Avoid CamelCase: <htCtrlSTBC>
#259: FILE: staging/otus/80211core/ccmd_cs_fix.c:147:
+	wd->sta.htCtrlSTBC = 0;

CHECK:CAMELCASE: Avoid CamelCase: <htCtrlSG>
#260: FILE: staging/otus/80211core/ccmd_cs_fix.c:148:
+	wd->sta.htCtrlSG = 0;

CHECK:CAMELCASE: Avoid CamelCase: <defaultTA>
#261: FILE: staging/otus/80211core/ccmd_cs_fix.c:149:
+	wd->sta.defaultTA = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#263: FILE: staging/otus/80211core/ccmd_cs_fix.c:151:
+	/*wd->sta.activescanTickPerChannel =
+	*ZM_TIME_ACTIVE_SCAN/ZM_MS_PER_TICK;

CHECK:CAMELCASE: Avoid CamelCase: <activescanTickPerChannel>
#269: FILE: staging/otus/80211core/ccmd_cs_fix.c:156:
+		wd->sta.activescanTickPerChannel = Dur / ZM_MS_PER_TICK;

CHECK:CAMELCASE: Avoid CamelCase: <Dur>
#269: FILE: staging/otus/80211core/ccmd_cs_fix.c:156:
+		wd->sta.activescanTickPerChannel = Dur / ZM_MS_PER_TICK;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#277: FILE: staging/otus/80211core/ccmd_cs_fix.c:159:
+	wd->sta.passiveScanTickPerChannel = ZM_TIME_PASSIVE_SCAN/ZM_MS_PER_TICK;
 	                                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <passiveScanTickPerChannel>
#277: FILE: staging/otus/80211core/ccmd_cs_fix.c:159:
+	wd->sta.passiveScanTickPerChannel = ZM_TIME_PASSIVE_SCAN/ZM_MS_PER_TICK;

CHECK:CAMELCASE: Avoid CamelCase: <bAutoReconnect>
#278: FILE: staging/otus/80211core/ccmd_cs_fix.c:160:
+	wd->sta.bAutoReconnect = TRUE;

CHECK:CAMELCASE: Avoid CamelCase: <dropUnencryptedPkts>
#279: FILE: staging/otus/80211core/ccmd_cs_fix.c:161:
+	wd->sta.dropUnencryptedPkts = FALSE;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#282: FILE: staging/otus/80211core/ccmd_cs_fix.c:164:
+	/* set default to bypass all multicast packet for linux,
+	*  window XP would set 0 by wrapper initialization

CHECK:CAMELCASE: Avoid CamelCase: <rifsState>
#325: FILE: staging/otus/80211core/ccmd_cs_fix.c:169:
+	wd->sta.rifsState = ZM_RIFS_STATE_DETECTING;

CHECK:CAMELCASE: Avoid CamelCase: <rifsLikeFrameCnt>
#326: FILE: staging/otus/80211core/ccmd_cs_fix.c:170:
+	wd->sta.rifsLikeFrameCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rifsCount>
#327: FILE: staging/otus/80211core/ccmd_cs_fix.c:171:
+	wd->sta.rifsCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <osRxFilter>
#329: FILE: staging/otus/80211core/ccmd_cs_fix.c:173:
+	wd->sta.osRxFilter = 0;

CHECK:CAMELCASE: Avoid CamelCase: <bSafeMode>
#330: FILE: staging/otus/80211core/ccmd_cs_fix.c:174:
+	wd->sta.bSafeMode = 0;

CHECK:CAMELCASE: Avoid CamelCase: <zfResetSupportRate>
#333: FILE: staging/otus/80211core/ccmd_cs_fix.c:177:
+	zfResetSupportRate(dev, ZM_DEFAULT_SUPPORT_RATE_DISCONNECT);

CHECK:CAMELCASE: Avoid CamelCase: <beaconInterval>
#334: FILE: staging/otus/80211core/ccmd_cs_fix.c:178:
+	wd->beaconInterval = 100;

CHECK:CAMELCASE: Avoid CamelCase: <rtsThreshold>
#335: FILE: staging/otus/80211core/ccmd_cs_fix.c:179:
+	wd->rtsThreshold = 2346;

CHECK:CAMELCASE: Avoid CamelCase: <fragThreshold>
#336: FILE: staging/otus/80211core/ccmd_cs_fix.c:180:
+	wd->fragThreshold = 32767;

CHECK:CAMELCASE: Avoid CamelCase: <wlanMode>
#337: FILE: staging/otus/80211core/ccmd_cs_fix.c:181:
+	wd->wlanMode = ZM_MODE_INFRASTRUCTURE;

CHECK:CAMELCASE: Avoid CamelCase: <txMCS>
#338: FILE: staging/otus/80211core/ccmd_cs_fix.c:182:
+	wd->txMCS = 0xff;    /* AUTO */

CHECK:CAMELCASE: Avoid CamelCase: <maxTxPower2>
#342: FILE: staging/otus/80211core/ccmd_cs_fix.c:186:
+	wd->maxTxPower2 = 0xff;

CHECK:CAMELCASE: Avoid CamelCase: <maxTxPower5>
#343: FILE: staging/otus/80211core/ccmd_cs_fix.c:187:
+	wd->maxTxPower5 = 0xff;

CHECK:CAMELCASE: Avoid CamelCase: <supportMode>
#344: FILE: staging/otus/80211core/ccmd_cs_fix.c:188:
+	wd->supportMode = 0xffffffff;

CHECK:CAMELCASE: Avoid CamelCase: <adhocMode>
#345: FILE: staging/otus/80211core/ccmd_cs_fix.c:189:
+	wd->ws.adhocMode = ZM_ADHOCBAND_G;

CHECK:CAMELCASE: Avoid CamelCase: <autoSetFrequency>
#346: FILE: staging/otus/80211core/ccmd_cs_fix.c:190:
+	wd->ws.autoSetFrequency = 0xff;

CHECK:CAMELCASE: Avoid CamelCase: <ssidLen>
#350: FILE: staging/otus/80211core/ccmd_cs_fix.c:194:
+	wd->ap.ssidLen[0] = 6;

CHECK:CAMELCASE: Avoid CamelCase: <countryIsoName>
#359: FILE: staging/otus/80211core/ccmd_cs_fix.c:203:
+	wd->ws.countryIsoName[0] = 0;

CHECK:CAMELCASE: Avoid CamelCase: <XLinkMode>
#370: FILE: staging/otus/80211core/ccmd_cs_fix.c:212:
+	wd->XLinkMode = 0;

CHECK:CAMELCASE: Avoid CamelCase: <HTCap>
#410: FILE: staging/otus/80211core/ccmd_cs_fix.c:218:
+	wd->ap.HTCap.Data.ElementID = ZM_WLAN_EID_HT_CAPABILITY;

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#410: FILE: staging/otus/80211core/ccmd_cs_fix.c:218:
+	wd->ap.HTCap.Data.ElementID = ZM_WLAN_EID_HT_CAPABILITY;

CHECK:CAMELCASE: Avoid CamelCase: <ElementID>
#410: FILE: staging/otus/80211core/ccmd_cs_fix.c:218:
+	wd->ap.HTCap.Data.ElementID = ZM_WLAN_EID_HT_CAPABILITY;

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#411: FILE: staging/otus/80211core/ccmd_cs_fix.c:219:
+	wd->ap.HTCap.Data.Length = 26;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#413: FILE: staging/otus/80211core/ccmd_cs_fix.c:221:
+	/*wd->ap.HTCap.Data.SupChannelWidthSet = 0;
+	wd->ap.HTCap.Data.MIMOPowerSave = 3;

CHECK:CAMELCASE: Avoid CamelCase: <AMPDUParam>
#418: FILE: staging/otus/80211core/ccmd_cs_fix.c:226:
+	wd->ap.HTCap.Data.AMPDUParam |= HTCAP_MaxRxAMPDU3;

CHECK:CAMELCASE: Avoid CamelCase: <MCSSet>
#419: FILE: staging/otus/80211core/ccmd_cs_fix.c:227:
+	wd->ap.HTCap.Data.MCSSet[0] = 0xFF; /* MCS 0 ~  7 */

CHECK:CAMELCASE: Avoid CamelCase: <ExtHTCap>
#423: FILE: staging/otus/80211core/ccmd_cs_fix.c:231:
+	wd->ap.ExtHTCap.Data.ElementID = ZM_WLAN_EID_EXTENDED_HT_CAPABILITY;

CHECK:CAMELCASE: Avoid CamelCase: <ControlChannel>
#425: FILE: staging/otus/80211core/ccmd_cs_fix.c:233:
+	wd->ap.ExtHTCap.Data.ControlChannel = 6;

CHECK:CAMELCASE: Avoid CamelCase: <ChannelInfo>
#427: FILE: staging/otus/80211core/ccmd_cs_fix.c:235:
+	wd->ap.ExtHTCap.Data.ChannelInfo |= ExtHtCap_RecomTxWidthSet;

CHECK:CAMELCASE: Avoid CamelCase: <ExtHtCap_RecomTxWidthSet>
#427: FILE: staging/otus/80211core/ccmd_cs_fix.c:235:
+	wd->ap.ExtHTCap.Data.ChannelInfo |= ExtHtCap_RecomTxWidthSet;

CHECK:CAMELCASE: Avoid CamelCase: <OperatingInfo>
#429: FILE: staging/otus/80211core/ccmd_cs_fix.c:237:
+	wd->ap.ExtHTCap.Data.OperatingInfo |= 1;

CHECK:CAMELCASE: Avoid CamelCase: <HtCapInfo>
#438: FILE: staging/otus/80211core/ccmd_cs_fix.c:246:
+	wd->sta.HTCap.Data.HtCapInfo |= HTCAP_SMEnabled;

CHECK:CAMELCASE: Avoid CamelCase: <HTCAP_DSSSandCCKin40MHz>
#441: FILE: staging/otus/80211core/ccmd_cs_fix.c:249:
+	wd->sta.HTCap.Data.HtCapInfo |= HTCAP_DSSSandCCKin40MHz;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#467: FILE: staging/otus/80211core/ccmd_cs_fix.c:254:
+	/*wd->sta.HTCap.Data.MIMOPowerSave = 0;
+	wd->sta.HTCap.Data.ShortGIfor40MHz = 0;

CHECK:CAMELCASE: Avoid CamelCase: <ExtHtCap_ExtChannelOffsetBelow>
#482: FILE: staging/otus/80211core/ccmd_cs_fix.c:269:
+	wd->sta.ExtHTCap.Data.ChannelInfo |= ExtHtCap_ExtChannelOffsetBelow;

CHECK:CAMELCASE: Avoid CamelCase: <qosMode>
#493: FILE: staging/otus/80211core/ccmd_cs_fix.c:278:
+	wd->ap.qosMode[0] = 1;

CHECK:CAMELCASE: Avoid CamelCase: <ledStruct>
#498: FILE: staging/otus/80211core/ccmd_cs_fix.c:281:
+	wd->ledStruct.ledMode[0] = 0x2221;

CHECK:CAMELCASE: Avoid CamelCase: <ledMode>
#498: FILE: staging/otus/80211core/ccmd_cs_fix.c:281:
+	wd->ledStruct.ledMode[0] = 0x2221;

CHECK:CAMELCASE: Avoid CamelCase: <zfTimerInit>
#502: FILE: staging/otus/80211core/ccmd_cs_fix.c:284:
+	zfTimerInit(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfBssInfoCreate>
#510: FILE: staging/otus/80211core/ccmd_cs_fix.c:288:
+	zfBssInfoCreate(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfScanMgrInit>
#511: FILE: staging/otus/80211core/ccmd_cs_fix.c:289:
+	zfScanMgrInit(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfPowerSavingMgrInit>
#512: FILE: staging/otus/80211core/ccmd_cs_fix.c:290:
+	zfPowerSavingMgrInit(dev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#528: FILE: staging/otus/80211core/ccmd_cs_fix.c:298:
+		/*zfSetKey(dev, 0, 0, ZM_WEP64, addr, key);
+		zfSetKey(dev, 0, 0, ZM_AES, addr, key);

CHECK:CAMELCASE: Avoid CamelCase: <staWmeEnabled>
#548: FILE: staging/otus/80211core/ccmd_cs_fix.c:305:
+	wd->ws.staWmeEnabled = 1;           /* Enable WME by default */

CHECK:CAMELCASE: Avoid CamelCase: <uapsdQ>
#550: FILE: staging/otus/80211core/ccmd_cs_fix.c:307:
+	wd->ap.uapsdQ = zfQueueCreate(dev, ZM_UAPSD_Q_SIZE);

CHECK:CAMELCASE: Avoid CamelCase: <zfQueueCreate>
#550: FILE: staging/otus/80211core/ccmd_cs_fix.c:307:
+	wd->ap.uapsdQ = zfQueueCreate(dev, ZM_UAPSD_Q_SIZE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->ap.uapsdQ"
#551: FILE: staging/otus/80211core/ccmd_cs_fix.c:308:
+	zm_assert(wd->ap.uapsdQ != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->sta.uapsdQ"
#553: FILE: staging/otus/80211core/ccmd_cs_fix.c:310:
+	zm_assert(wd->sta.uapsdQ != NULL);

CHECK:CAMELCASE: Avoid CamelCase: <zfHpGetMacAddress>
#559: FILE: staging/otus/80211core/ccmd_cs_fix.c:316:
+	zfHpGetMacAddress(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfCoreSetFrequency>
#562: FILE: staging/otus/80211core/ccmd_cs_fix.c:318:
+	zfCoreSetFrequency(dev, wd->frequency);

CHECK:CAMELCASE: Avoid CamelCase: <zfwWriteReg>
#566: FILE: staging/otus/80211core/ccmd_cs_fix.c:321:
+	zfwWriteReg(dev, ZM_REG_PCI_CONTROL, 6);

CHECK:CAMELCASE: Avoid CamelCase: <DFSEnable>
#575: FILE: staging/otus/80211core/ccmd_cs_fix.c:326:
+	wd->sta.DFSEnable = 1;

CHECK:CAMELCASE: Avoid CamelCase: <zfHpStartRecv>
#586: FILE: staging/otus/80211core/ccmd_cs_fix.c:333:
+	zfHpStartRecv(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanClose>
#597: FILE: staging/otus/80211core/ccmd_cs_fix.c:341:
+u16_t zfiWlanClose(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <zfHpStopRecv>
#614: FILE: staging/otus/80211core/ccmd_cs_fix.c:352:
+	zfHpStopRecv(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfHpRelease>
#624: FILE: staging/otus/80211core/ccmd_cs_fix.c:358:
+	zfHpRelease(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfQueueDestroy>
#628: FILE: staging/otus/80211core/ccmd_cs_fix.c:360:
+	zfQueueDestroy(dev, wd->ap.uapsdQ);

CHECK:CAMELCASE: Avoid CamelCase: <zfBssInfoDestroy>
#632: FILE: staging/otus/80211core/ccmd_cs_fix.c:363:
+	zfBssInfoDestroy(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfAggRxFreeBuf>
#639: FILE: staging/otus/80211core/ccmd_cs_fix.c:367:
+	zfAggRxFreeBuf(dev, 1);  /* 1 for release structure memory */

CHECK:CAMELCASE: Avoid CamelCase: <zfGetWrapperSetting>
#651: FILE: staging/otus/80211core/ccmd_cs_fix.c:376:
+void zfGetWrapperSetting(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <bPassive>
#655: FILE: staging/otus/80211core/ccmd_cs_fix.c:378:
+	u8_t bPassive;

CHECK:CAMELCASE: Avoid CamelCase: <vapId>
#656: FILE: staging/otus/80211core/ccmd_cs_fix.c:379:
+	u16_t vapId = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.countryIsoName[0] != 0'
#672: FILE: staging/otus/80211core/ccmd_cs_fix.c:385:
+	if ((wd->ws.countryIsoName[0] != 0)
+		|| (wd->ws.countryIsoName[1] != 0)
+		|| (wd->ws.countryIsoName[2] != '\0')) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.countryIsoName[1] != 0'
#672: FILE: staging/otus/80211core/ccmd_cs_fix.c:385:
+	if ((wd->ws.countryIsoName[0] != 0)
+		|| (wd->ws.countryIsoName[1] != 0)
+		|| (wd->ws.countryIsoName[2] != '\0')) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#673: FILE: staging/otus/80211core/ccmd_cs_fix.c:386:
+	if ((wd->ws.countryIsoName[0] != 0)
+		|| (wd->ws.countryIsoName[1] != 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#674: FILE: staging/otus/80211core/ccmd_cs_fix.c:387:
+		|| (wd->ws.countryIsoName[1] != 0)
+		|| (wd->ws.countryIsoName[2] != '\0')) {

CHECK:CAMELCASE: Avoid CamelCase: <zfHpGetRegulationTablefromRegionCode>
#675: FILE: staging/otus/80211core/ccmd_cs_fix.c:388:
+		zfHpGetRegulationTablefromRegionCode(dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: staging/otus/80211core/ccmd_cs_fix.c:389:
+		zfHpGetRegulationTablefromRegionCode(dev,
+		zfHpGetRegionCodeFromIsoName(dev, wd->ws.countryIsoName));

CHECK:CAMELCASE: Avoid CamelCase: <zfHpGetRegionCodeFromIsoName>
#676: FILE: staging/otus/80211core/ccmd_cs_fix.c:389:
+		zfHpGetRegionCodeFromIsoName(dev, wd->ws.countryIsoName));

CHECK:CAMELCASE: Avoid CamelCase: <zfChGetFirstChannel>
#712: FILE: staging/otus/80211core/ccmd_cs_fix.c:401:
+		wd->frequency = zfChGetFirstChannel(dev, &bPassive);

CHECK:CAMELCASE: Avoid CamelCase: <preambleType>
#960: FILE: staging/otus/80211core/ccmd_cs_fix.c:417:
+	switch (wd->ws.preambleType) {

CHECK:CAMELCASE: Avoid CamelCase: <zfwGetVapId>
#973: FILE: staging/otus/80211core/ccmd_cs_fix.c:430:
+		vapId = zfwGetVapId(dev);

CHECK:CAMELCASE: Avoid CamelCase: <authAlgo>
#976: FILE: staging/otus/80211core/ccmd_cs_fix.c:433:
+			wd->ap.authAlgo[0] = wd->ws.authMode;

CHECK:CAMELCASE: Avoid CamelCase: <authMode>
#976: FILE: staging/otus/80211core/ccmd_cs_fix.c:433:
+			wd->ap.authAlgo[0] = wd->ws.authMode;

CHECK:CAMELCASE: Avoid CamelCase: <encryMode>
#977: FILE: staging/otus/80211core/ccmd_cs_fix.c:434:
+			wd->ap.encryMode[0] = wd->ws.encryMode;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.beaconInterval >= 20'
#986: FILE: staging/otus/80211core/ccmd_cs_fix.c:443:
+		if ((wd->ws.beaconInterval >= 20) &&
+					(wd->ws.beaconInterval <= 1000))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.beaconInterval <= 1000'
#986: FILE: staging/otus/80211core/ccmd_cs_fix.c:443:
+		if ((wd->ws.beaconInterval >= 20) &&
+					(wd->ws.beaconInterval <= 1000))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: staging/otus/80211core/ccmd_cs_fix.c:444:
+		if ((wd->ws.beaconInterval >= 20) &&
+					(wd->ws.beaconInterval <= 1000))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#997: FILE: staging/otus/80211core/ccmd_cs_fix.c:454:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <apWmeEnabled>
#998: FILE: staging/otus/80211core/ccmd_cs_fix.c:455:
+		wd->ap.qosMode = wd->ws.apWmeEnabled & 0x1;

CHECK:CAMELCASE: Avoid CamelCase: <uapsdEnabled>
#999: FILE: staging/otus/80211core/ccmd_cs_fix.c:456:
+		wd->ap.uapsdEnabled = (wd->ws.apWmeEnabled & 0x2) >> 1;

CHECK:CAMELCASE: Avoid CamelCase: <currentAuthMode>
#1002: FILE: staging/otus/80211core/ccmd_cs_fix.c:459:
+		wd->sta.currentAuthMode = wd->ws.authMode;

CHECK:CAMELCASE: Avoid CamelCase: <wepStatus>
#1003: FILE: staging/otus/80211core/ccmd_cs_fix.c:460:
+		wd->sta.wepStatus = wd->ws.wepStatus;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.adhocMode == ZM_ADHOCBAND_G'
#1015: FILE: staging/otus/80211core/ccmd_cs_fix.c:472:
+			if ((wd->ws.adhocMode == ZM_ADHOCBAND_G) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_BG) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_ABG))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.adhocMode == ZM_ADHOCBAND_BG'
#1015: FILE: staging/otus/80211core/ccmd_cs_fix.c:472:
+			if ((wd->ws.adhocMode == ZM_ADHOCBAND_G) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_BG) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_ABG))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.adhocMode == ZM_ADHOCBAND_ABG'
#1015: FILE: staging/otus/80211core/ccmd_cs_fix.c:472:
+			if ((wd->ws.adhocMode == ZM_ADHOCBAND_G) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_BG) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_ABG))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1016: FILE: staging/otus/80211core/ccmd_cs_fix.c:473:
+			if ((wd->ws.adhocMode == ZM_ADHOCBAND_G) ||
+				(wd->ws.adhocMode == ZM_ADHOCBAND_BG) ||

CHECK:CAMELCASE: Avoid CamelCase: <bIbssGMode>
#1018: FILE: staging/otus/80211core/ccmd_cs_fix.c:475:
+				wd->wfc.bIbssGMode = 1;

CHECK:CAMELCASE: Avoid CamelCase: <atimWindow>
#1027: FILE: staging/otus/80211core/ccmd_cs_fix.c:484:
+		if (wd->ws.atimWindow)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1027: FILE: staging/otus/80211core/ccmd_cs_fix.c:484:
+		if (wd->ws.atimWindow)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1029: FILE: staging/otus/80211core/ccmd_cs_fix.c:486:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1035: FILE: staging/otus/80211core/ccmd_cs_fix.c:492:
+		/* wd->sta.connectingHiddenAP = 1;
+		   wd->ws.connectingHiddenAP;

CHECK:CAMELCASE: Avoid CamelCase: <ibssJoinOnly>
#1038: FILE: staging/otus/80211core/ccmd_cs_fix.c:495:
+		wd->sta.ibssJoinOnly = wd->ws.ibssJoinOnly;

CHECK:CAMELCASE: Avoid CamelCase: <bDesiredBssid>
#1040: FILE: staging/otus/80211core/ccmd_cs_fix.c:497:
+		if (wd->ws.bDesiredBssid) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1040: FILE: staging/otus/80211core/ccmd_cs_fix.c:497:
+		if (wd->ws.bDesiredBssid) {
[...]
+		} else
[...]

CHECK:CAMELCASE: Avoid CamelCase: <zfMemoryCopy>
#1041: FILE: staging/otus/80211core/ccmd_cs_fix.c:498:
+			zfMemoryCopy(wd->sta.desiredBssid,

CHECK:CAMELCASE: Avoid CamelCase: <desiredBssid>
#1041: FILE: staging/otus/80211core/ccmd_cs_fix.c:498:
+			zfMemoryCopy(wd->sta.desiredBssid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: staging/otus/80211core/ccmd_cs_fix.c:499:
+			zfMemoryCopy(wd->sta.desiredBssid,
+						wd->ws.desiredBssid, 6);

CHECK:BRACES: Unbalanced braces around else statement
#1045: FILE: staging/otus/80211core/ccmd_cs_fix.c:502:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.ssidLen != wd->sta.ssidLen'
#1050: FILE: staging/otus/80211core/ccmd_cs_fix.c:507:
+			if ((!zfMemoryIsEqual(wd->ws.ssid, wd->sta.ssid,
+				wd->sta.ssidLen)) ||
+				(wd->ws.ssidLen != wd->sta.ssidLen) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPA) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPAPSK) ||
+				(wd->ws.staWmeQosInfo != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.authMode == ZM_AUTH_MODE_WPA'
#1050: FILE: staging/otus/80211core/ccmd_cs_fix.c:507:
+			if ((!zfMemoryIsEqual(wd->ws.ssid, wd->sta.ssid,
+				wd->sta.ssidLen)) ||
+				(wd->ws.ssidLen != wd->sta.ssidLen) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPA) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPAPSK) ||
+				(wd->ws.staWmeQosInfo != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.authMode == ZM_AUTH_MODE_WPAPSK'
#1050: FILE: staging/otus/80211core/ccmd_cs_fix.c:507:
+			if ((!zfMemoryIsEqual(wd->ws.ssid, wd->sta.ssid,
+				wd->sta.ssidLen)) ||
+				(wd->ws.ssidLen != wd->sta.ssidLen) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPA) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPAPSK) ||
+				(wd->ws.staWmeQosInfo != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.staWmeQosInfo != 0'
#1050: FILE: staging/otus/80211core/ccmd_cs_fix.c:507:
+			if ((!zfMemoryIsEqual(wd->ws.ssid, wd->sta.ssid,
+				wd->sta.ssidLen)) ||
+				(wd->ws.ssidLen != wd->sta.ssidLen) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPA) ||
+				(wd->sta.authMode == ZM_AUTH_MODE_WPAPSK) ||
+				(wd->ws.staWmeQosInfo != 0)) {

CHECK:CAMELCASE: Avoid CamelCase: <zfMemoryIsEqual>
#1050: FILE: staging/otus/80211core/ccmd_cs_fix.c:507:
+			if ((!zfMemoryIsEqual(wd->ws.ssid, wd->sta.ssid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: staging/otus/80211core/ccmd_cs_fix.c:508:
+			if ((!zfMemoryIsEqual(wd->ws.ssid, wd->sta.ssid,
+				wd->sta.ssidLen)) ||

CHECK:CAMELCASE: Avoid CamelCase: <staWmeQosInfo>
#1055: FILE: staging/otus/80211core/ccmd_cs_fix.c:512:
+				(wd->ws.staWmeQosInfo != 0)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1057: FILE: staging/otus/80211core/ccmd_cs_fix.c:514:
+				/* if u-APSD test(set QosInfo), clear
+				   connectByReasso to do association

CHECK:CAMELCASE: Avoid CamelCase: <connectByReasso>
#1060: FILE: staging/otus/80211core/ccmd_cs_fix.c:517:
+				wd->sta.connectByReasso = FALSE;

CHECK:CAMELCASE: Avoid CamelCase: <failCntOfReasso>
#1061: FILE: staging/otus/80211core/ccmd_cs_fix.c:518:
+				wd->sta.failCntOfReasso = 0;

CHECK:CAMELCASE: Avoid CamelCase: <pmkidInfo>
#1062: FILE: staging/otus/80211core/ccmd_cs_fix.c:519:
+				wd->sta.pmkidInfo.bssidCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <bssidCount>
#1062: FILE: staging/otus/80211core/ccmd_cs_fix.c:519:
+				wd->sta.pmkidInfo.bssidCount = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1066: FILE: staging/otus/80211core/ccmd_cs_fix.c:523:
+				zfMemoryCopy(wd->sta.ssid, wd->ws.ssid,
+							wd->sta.ssidLen);

CHECK:CAMELCASE: Avoid CamelCase: <wmeEnabled>
#1077: FILE: staging/otus/80211core/ccmd_cs_fix.c:534:
+		wd->sta.wmeEnabled = wd->ws.staWmeEnabled;

CHECK:CAMELCASE: Avoid CamelCase: <wmeQosInfo>
#1078: FILE: staging/otus/80211core/ccmd_cs_fix.c:535:
+		wd->sta.wmeQosInfo = wd->ws.staWmeQosInfo;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1080: FILE: staging/otus/80211core/ccmd_cs_fix.c:537:
+
+	}

CHECK:CAMELCASE: Avoid CamelCase: <zfWlanEnable>
#1085: FILE: staging/otus/80211core/ccmd_cs_fix.c:542:
+u16_t zfWlanEnable(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <zfApInitStaTbl>
#1106: FILE: staging/otus/80211core/ccmd_cs_fix.c:563:
+			zfApInitStaTbl(dev);

CHECK:CAMELCASE: Avoid CamelCase: <bRate>
#1109: FILE: staging/otus/80211core/ccmd_cs_fix.c:566:
+			wd->bRate = 0xf;

CHECK:CAMELCASE: Avoid CamelCase: <gRate>
#1110: FILE: staging/otus/80211core/ccmd_cs_fix.c:567:
+			wd->gRate = 0xff;

CHECK:CAMELCASE: Avoid CamelCase: <bRateBasic>
#1111: FILE: staging/otus/80211core/ccmd_cs_fix.c:568:
+			wd->bRateBasic = 0xf;

CHECK:CAMELCASE: Avoid CamelCase: <gRateBasic>
#1112: FILE: staging/otus/80211core/ccmd_cs_fix.c:569:
+			wd->gRateBasic = 0x0;

CHECK:CAMELCASE: Avoid CamelCase: <apBitmap>
#1114: FILE: staging/otus/80211core/ccmd_cs_fix.c:571:
+			wd->ap.apBitmap = 1;

CHECK:CAMELCASE: Avoid CamelCase: <beaconCounter>
#1115: FILE: staging/otus/80211core/ccmd_cs_fix.c:572:
+			wd->ap.beaconCounter = 0;

CHECK:CAMELCASE: Avoid CamelCase: <hideSsid>
#1118: FILE: staging/otus/80211core/ccmd_cs_fix.c:575:
+			wd->ap.hideSsid[0] = 0;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1119: FILE: staging/otus/80211core/ccmd_cs_fix.c:576:
+			wd->ap.staAgingTimeSec = 10*60;
 			                           ^

CHECK:CAMELCASE: Avoid CamelCase: <staAgingTimeSec>
#1119: FILE: staging/otus/80211core/ccmd_cs_fix.c:576:
+			wd->ap.staAgingTimeSec = 10*60;

CHECK:CAMELCASE: Avoid CamelCase: <staProbingTimeSec>
#1120: FILE: staging/otus/80211core/ccmd_cs_fix.c:577:
+			wd->ap.staProbingTimeSec = 60;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1123: FILE: staging/otus/80211core/ccmd_cs_fix.c:580:
+				wd->ap.bcmcHead[i] = wd->ap.bcmcTail[i] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <bcmcHead>
#1123: FILE: staging/otus/80211core/ccmd_cs_fix.c:580:
+				wd->ap.bcmcHead[i] = wd->ap.bcmcTail[i] = 0;

CHECK:CAMELCASE: Avoid CamelCase: <bcmcTail>
#1123: FILE: staging/otus/80211core/ccmd_cs_fix.c:580:
+				wd->ap.bcmcHead[i] = wd->ap.bcmcTail[i] = 0;

CHECK:CAMELCASE: Avoid CamelCase: <bgMode>
#1130: FILE: staging/otus/80211core/ccmd_cs_fix.c:587:
+			wd->bgMode = wd->ws.bgMode;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.ssidLen <= 32'
#1131: FILE: staging/otus/80211core/ccmd_cs_fix.c:588:
+			if ((wd->ws.ssidLen <= 32) && (wd->ws.ssidLen != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.ssidLen != 0'
#1131: FILE: staging/otus/80211core/ccmd_cs_fix.c:588:
+			if ((wd->ws.ssidLen <= 32) && (wd->ws.ssidLen != 0)) {

CHECK:CAMELCASE: Avoid CamelCase: <wlanType>
#1143: FILE: staging/otus/80211core/ccmd_cs_fix.c:600:
+			if (wd->ap.wlanType[0] != ZM_WLAN_TYPE_PURE_B)

CHECK:CAMELCASE: Avoid CamelCase: <vapNumber>
#1170: FILE: staging/otus/80211core/ccmd_cs_fix.c:616:
+			wd->ap.vapNumber = 2;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1175: FILE: staging/otus/80211core/ccmd_cs_fix.c:619:
+			wd->ap.apBitmap = 0x1 | (0x01 << (vapId+1));
 			                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.ssidLen <= 32'
#1195: FILE: staging/otus/80211core/ccmd_cs_fix.c:621:
+			if ((wd->ws.ssidLen <= 32) && (wd->ws.ssidLen != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->ws.ssidLen != 0'
#1195: FILE: staging/otus/80211core/ccmd_cs_fix.c:621:
+			if ((wd->ws.ssidLen <= 32) && (wd->ws.ssidLen != 0)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1196: FILE: staging/otus/80211core/ccmd_cs_fix.c:622:
+				wd->ap.ssidLen[vapId+1] = wd->ws.ssidLen;
 				                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1198: FILE: staging/otus/80211core/ccmd_cs_fix.c:624:
+					wd->ap.ssid[vapId+1][i] =
 					                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1203: FILE: staging/otus/80211core/ccmd_cs_fix.c:629:
+			if (wd->ap.encryMode[vapId+1] == 0)
 			                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1204: FILE: staging/otus/80211core/ccmd_cs_fix.c:630:
+				wd->ap.capab[vapId+1] = 0x401;
 				                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1206: FILE: staging/otus/80211core/ccmd_cs_fix.c:632:
+				wd->ap.capab[vapId+1] = 0x411;
 				                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1210: FILE: staging/otus/80211core/ccmd_cs_fix.c:634:
+			wd->ap.authAlgo[vapId+1] = wd->ws.authMode;
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1211: FILE: staging/otus/80211core/ccmd_cs_fix.c:635:
+			wd->ap.encryMode[vapId+1] = wd->ws.encryMode;
 			                      ^

CHECK:CAMELCASE: Avoid CamelCase: <zfInitMacApMode>
#1228: FILE: staging/otus/80211core/ccmd_cs_fix.c:646:
+		zfInitMacApMode(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfApSetProtectionMode>
#1328: FILE: staging/otus/80211core/ccmd_cs_fix.c:649:
+		zfApSetProtectionMode(dev, 0);

CHECK:CAMELCASE: Avoid CamelCase: <zfApSendBeacon>
#1330: FILE: staging/otus/80211core/ccmd_cs_fix.c:651:
+		zfApSendBeacon(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfScanMgrScanStop>
#1333: FILE: staging/otus/80211core/ccmd_cs_fix.c:654:
+		zfScanMgrScanStop(dev, ZM_SCAN_MGR_SCAN_INTERNAL);

CHECK:CAMELCASE: Avoid CamelCase: <oppositeCount>
#1337: FILE: staging/otus/80211core/ccmd_cs_fix.c:658:
+		wd->sta.oppositeCount = 0;    /* reset opposite count */

CHECK:CAMELCASE: Avoid CamelCase: <zfStaInitOppositeInfo>
#1340: FILE: staging/otus/80211core/ccmd_cs_fix.c:661:
+		zfStaInitOppositeInfo(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfStaResetStatus>
#1343: FILE: staging/otus/80211core/ccmd_cs_fix.c:664:
+		zfStaResetStatus(dev, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.cmDisallowSsidLength != 0'
#1345: FILE: staging/otus/80211core/ccmd_cs_fix.c:666:
+		if ((wd->sta.cmDisallowSsidLength != 0) &&
+		(wd->sta.ssidLen == wd->sta.cmDisallowSsidLength) &&
+		(zfMemoryIsEqual(wd->sta.ssid, wd->sta.cmDisallowSsid,
+		wd->sta.ssidLen)) &&
+		(wd->sta.wepStatus == ZM_ENCRYPTION_TKIP)) {/*countermeasures*/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.ssidLen == wd->sta.cmDisallowSsidLength'
#1345: FILE: staging/otus/80211core/ccmd_cs_fix.c:666:
+		if ((wd->sta.cmDisallowSsidLength != 0) &&
+		(wd->sta.ssidLen == wd->sta.cmDisallowSsidLength) &&
+		(zfMemoryIsEqual(wd->sta.ssid, wd->sta.cmDisallowSsid,
+		wd->sta.ssidLen)) &&
+		(wd->sta.wepStatus == ZM_ENCRYPTION_TKIP)) {/*countermeasures*/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.wepStatus == ZM_ENCRYPTION_TKIP'
#1345: FILE: staging/otus/80211core/ccmd_cs_fix.c:666:
+		if ((wd->sta.cmDisallowSsidLength != 0) &&
+		(wd->sta.ssidLen == wd->sta.cmDisallowSsidLength) &&
+		(zfMemoryIsEqual(wd->sta.ssid, wd->sta.cmDisallowSsid,
+		wd->sta.ssidLen)) &&
+		(wd->sta.wepStatus == ZM_ENCRYPTION_TKIP)) {/*countermeasures*/

CHECK:CAMELCASE: Avoid CamelCase: <cmDisallowSsidLength>
#1345: FILE: staging/otus/80211core/ccmd_cs_fix.c:666:
+		if ((wd->sta.cmDisallowSsidLength != 0) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1346: FILE: staging/otus/80211core/ccmd_cs_fix.c:667:
+		if ((wd->sta.cmDisallowSsidLength != 0) &&
+		(wd->sta.ssidLen == wd->sta.cmDisallowSsidLength) &&

CHECK:CAMELCASE: Avoid CamelCase: <cmDisallowSsid>
#1347: FILE: staging/otus/80211core/ccmd_cs_fix.c:668:
+		(zfMemoryIsEqual(wd->sta.ssid, wd->sta.cmDisallowSsid,

CHECK:CAMELCASE: Avoid CamelCase: <zfHpSetApStaMode>
#1356: FILE: staging/otus/80211core/ccmd_cs_fix.c:677:
+					zfHpSetApStaMode(dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1357: FILE: staging/otus/80211core/ccmd_cs_fix.c:678:
+					zfHpSetApStaMode(dev,
+					ZM_HAL_80211_MODE_IBSS_WPA2PSK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: staging/otus/80211core/ccmd_cs_fix.c:681:
+					zfHpSetApStaMode(dev,
+					ZM_HAL_80211_MODE_IBSS_GENERAL);

CHECK:CAMELCASE: Avoid CamelCase: <zfIbssConnectNetwork>
#1363: FILE: staging/otus/80211core/ccmd_cs_fix.c:684:
+				zfIbssConnectNetwork(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfInfraConnectNetwork>
#1370: FILE: staging/otus/80211core/ccmd_cs_fix.c:691:
+				zfInfraConnectNetwork(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfUpdateBssid>
#1377: FILE: staging/otus/80211core/ccmd_cs_fix.c:698:
+				zfUpdateBssid(dev, bssid);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1386: FILE: staging/otus/80211core/ccmd_cs_fix.c:707:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1388: FILE: staging/otus/80211core/ccmd_cs_fix.c:709:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1390: FILE: staging/otus/80211core/ccmd_cs_fix.c:711:
+	/* if ((wd->wlanMode != ZM_MODE_INFRASTRUCTURE) &&
+		(wd->wlanMode != ZM_MODE_AP))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->zfcbConnectNotify"
#1396: FILE: staging/otus/80211core/ccmd_cs_fix.c:717:
+		if (wd->zfcbConnectNotify != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <zfChangeAdapterState>
#1399: FILE: staging/otus/80211core/ccmd_cs_fix.c:720:
+		zfChangeAdapterState(dev, ZM_STA_STATE_CONNECTED);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1402: FILE: staging/otus/80211core/ccmd_cs_fix.c:723:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->zfcbConnectNotify"
#1404: FILE: staging/otus/80211core/ccmd_cs_fix.c:725:
+		if (wd->zfcbConnectNotify != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <EnableHT>
#1411: FILE: staging/otus/80211core/ccmd_cs_fix.c:732:
+	if (wd->sta.EnableHT) {

CHECK:CAMELCASE: Avoid CamelCase: <oneTxStreamCap>
#1415: FILE: staging/otus/80211core/ccmd_cs_fix.c:734:
+		oneTxStreamCap = (zfHpCapability(dev) &

CHECK:CAMELCASE: Avoid CamelCase: <zfHpCapability>
#1415: FILE: staging/otus/80211core/ccmd_cs_fix.c:734:
+		oneTxStreamCap = (zfHpCapability(dev) &

CHECK:CAMELCASE: Avoid CamelCase: <CurrentRxRateKbps>
#1428: FILE: staging/otus/80211core/ccmd_cs_fix.c:740:
+		wd->CurrentRxRateKbps = 270000;

CHECK:CAMELCASE: Avoid CamelCase: <CurrentTxRateKbps>
#1430: FILE: staging/otus/80211core/ccmd_cs_fix.c:742:
+		wd->CurrentTxRateKbps = 54000;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanEnable>
#1443: FILE: staging/otus/80211core/ccmd_cs_fix.c:752:
+u16_t zfiWlanEnable(zdev_t *dev)

CHECK:SPACING: No space is necessary after a cast
#1457: FILE: staging/otus/80211core/ccmd_cs_fix.c:762:
+	zfZeroMemory((u8_t *) &wd->trafTally, sizeof(struct zsTrafTally));

CHECK:CAMELCASE: Avoid CamelCase: <trafTally>
#1457: FILE: staging/otus/80211core/ccmd_cs_fix.c:762:
+	zfZeroMemory((u8_t *) &wd->trafTally, sizeof(struct zsTrafTally));

CHECK:CAMELCASE: Avoid CamelCase: <zsTrafTally>
#1457: FILE: staging/otus/80211core/ccmd_cs_fix.c:762:
+	zfZeroMemory((u8_t *) &wd->trafTally, sizeof(struct zsTrafTally));

CHECK:CAMELCASE: Avoid CamelCase: <cmMicFailureCount>
#1461: FILE: staging/otus/80211core/ccmd_cs_fix.c:765:
+	if (wd->sta.cmMicFailureCount == 1) {

CHECK:CAMELCASE: Avoid CamelCase: <zfTimerCancel>
#1462: FILE: staging/otus/80211core/ccmd_cs_fix.c:766:
+		zfTimerCancel(dev, ZM_EVENT_CM_TIMER);

CHECK:CAMELCASE: Avoid CamelCase: <zfFlushVtxq>
#1472: FILE: staging/otus/80211core/ccmd_cs_fix.c:770:
+	zfFlushVtxq(dev);

CHECK:CAMELCASE: Avoid CamelCase: <queueFlushed>
#1473: FILE: staging/otus/80211core/ccmd_cs_fix.c:771:
+	if ((wd->queueFlushed & 0x10) != 0)

CHECK:CAMELCASE: Avoid CamelCase: <zfHpUsbReset>
#1474: FILE: staging/otus/80211core/ccmd_cs_fix.c:772:
+		zfHpUsbReset(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDisable>
#1493: FILE: staging/otus/80211core/ccmd_cs_fix.c:782:
+u16_t zfiWlanDisable(zdev_t *dev, u8_t ResetKeyCache)

CHECK:CAMELCASE: Avoid CamelCase: <ResetKeyCache>
#1493: FILE: staging/otus/80211core/ccmd_cs_fix.c:782:
+u16_t zfiWlanDisable(zdev_t *dev, u8_t ResetKeyCache)

CHECK:CAMELCASE: Avoid CamelCase: <isConnected>
#1498: FILE: staging/otus/80211core/ccmd_cs_fix.c:785:
+	u8_t isConnected;

CHECK:CAMELCASE: Avoid CamelCase: <zfStaIsConnected>
#1514: FILE: staging/otus/80211core/ccmd_cs_fix.c:797:
+		isConnected = zfStaIsConnected(dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->wlanMode == ZM_MODE_INFRASTRUCTURE'
#1539: FILE: staging/otus/80211core/ccmd_cs_fix.c:799:
+		if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+			(wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2'
#1539: FILE: staging/otus/80211core/ccmd_cs_fix.c:799:
+		if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+			(wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1540: FILE: staging/otus/80211core/ccmd_cs_fix.c:800:
+		if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+			(wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2)) {

CHECK:CAMELCASE: Avoid CamelCase: <zfSendMmFrame>
#1544: FILE: staging/otus/80211core/ccmd_cs_fix.c:804:
+				zfSendMmFrame(dev, ZM_WLAN_FRAME_TYPE_DEAUTH,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1545: FILE: staging/otus/80211core/ccmd_cs_fix.c:805:
+				zfSendMmFrame(dev, ZM_WLAN_FRAME_TYPE_DEAUTH,
+						wd->sta.bssid, 3, 0, 0);

CHECK:CAMELCASE: Avoid CamelCase: <ibssBssIsCreator>
#1552: FILE: staging/otus/80211core/ccmd_cs_fix.c:812:
+			wd->sta.ibssBssIsCreator = 0;

CHECK:CAMELCASE: Avoid CamelCase: <zfStaIbssMonitoring>
#1554: FILE: staging/otus/80211core/ccmd_cs_fix.c:814:
+			zfStaIbssMonitoring(dev, 1);

CHECK:CAMELCASE: Avoid CamelCase: <ibssWpa2Psk>
#1562: FILE: staging/otus/80211core/ccmd_cs_fix.c:819:
+		wd->sta.ibssWpa2Psk = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wpaState>
#1567: FILE: staging/otus/80211core/ccmd_cs_fix.c:823:
+		wd->sta.wpaState = ZM_STA_WPA_STATE_INIT;

CHECK:CAMELCASE: Avoid CamelCase: <connectTimeoutCount>
#1572: FILE: staging/otus/80211core/ccmd_cs_fix.c:826:
+		wd->sta.connectTimeoutCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <connectState>
#1577: FILE: staging/otus/80211core/ccmd_cs_fix.c:829:
+		wd->sta.connectState = ZM_STA_CONN_STATE_NONE;

CHECK:CAMELCASE: Avoid CamelCase: <leapEnabled>
#1580: FILE: staging/otus/80211core/ccmd_cs_fix.c:832:
+		wd->sta.leapEnabled = 0;

CHECK:CAMELCASE: Avoid CamelCase: <zfHpDisableRifs>
#1584: FILE: staging/otus/80211core/ccmd_cs_fix.c:836:
+			zfHpDisableRifs(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfHpResetKeyCache>
#1594: FILE: staging/otus/80211core/ccmd_cs_fix.c:846:
+			zfHpResetKeyCache(dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->zfcbConnectNotify"
#1597: FILE: staging/otus/80211core/ccmd_cs_fix.c:849:
+			if (wd->zfcbConnectNotify != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->zfcbConnectNotify"
#1602: FILE: staging/otus/80211core/ccmd_cs_fix.c:854:
+			if (wd->zfcbConnectNotify != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <staTable>
#1609: FILE: staging/otus/80211core/ccmd_cs_fix.c:861:
+			if (wd->ap.staTable[i].valid == 1) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1612: FILE: staging/otus/80211core/ccmd_cs_fix.c:864:
+				zfSendMmFrame(dev, ZM_WLAN_FRAME_TYPE_DEAUTH,
+				wd->ap.staTable[i].addr, 3, 0, 0);

CHECK:CAMELCASE: Avoid CamelCase: <zfHpDisableBeacon>
#1763: FILE: staging/otus/80211core/ccmd_cs_fix.c:875:
+	zfHpDisableBeacon(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfApFlushBufferedPsFrame>
#1769: FILE: staging/otus/80211core/ccmd_cs_fix.c:880:
+	zfApFlushBufferedPsFrame(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfAgingDefragList>
#1771: FILE: staging/otus/80211core/ccmd_cs_fix.c:882:
+	zfAgingDefragList(dev, 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1781: FILE: staging/otus/80211core/ccmd_cs_fix.c:891:
+	/* Clear the information for the peer stations
+	of IBSS or AP of Station mode

CHECK:CAMELCASE: Avoid CamelCase: <oppositeInfo>
#1783: FILE: staging/otus/80211core/ccmd_cs_fix.c:893:
+	zfZeroMemory((u8_t *)wd->sta.oppositeInfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1784: FILE: staging/otus/80211core/ccmd_cs_fix.c:894:
+	zfZeroMemory((u8_t *)wd->sta.oppositeInfo,
+			sizeof(struct zsOppositeInfo) * ZM_MAX_OPPOSITE_COUNT);

CHECK:CAMELCASE: Avoid CamelCase: <zsOppositeInfo>
#1784: FILE: staging/otus/80211core/ccmd_cs_fix.c:894:
+			sizeof(struct zsOppositeInfo) * ZM_MAX_OPPOSITE_COUNT);

CHECK:CAMELCASE: Avoid CamelCase: <SWEncryptEnable>
#1787: FILE: staging/otus/80211core/ccmd_cs_fix.c:897:
+	if (wd->sta.SWEncryptEnable != 0) {

CHECK:CAMELCASE: Avoid CamelCase: <zfStaDisableSWEncryption>
#1789: FILE: staging/otus/80211core/ccmd_cs_fix.c:899:
+		zfStaDisableSWEncryption(dev);

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#1792: FILE: staging/otus/80211core/ccmd_cs_fix.c:902:
+	/* Improve WEP/TKIP performace with HT AP,
 	                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1793: FILE: staging/otus/80211core/ccmd_cs_fix.c:903:
+	/* Improve WEP/TKIP performace with HT AP,
+	detail information please look bug#32495 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1793: FILE: staging/otus/80211core/ccmd_cs_fix.c:903:
+	detail information please look bug#32495 */

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSuspend>
#1799: FILE: staging/otus/80211core/ccmd_cs_fix.c:909:
+u16_t zfiWlanSuspend(zdev_t *dev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1805: FILE: staging/otus/80211core/ccmd_cs_fix.c:915:
+	/* Change the HAL state to init so that any packet
+	can't be transmitted between resume & HAL reinit.

CHECK:CAMELCASE: Avoid CamelCase: <halState>
#1809: FILE: staging/otus/80211core/ccmd_cs_fix.c:919:
+	wd->halState = ZM_HAL_STATE_INIT;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanResume>
#1815: FILE: staging/otus/80211core/ccmd_cs_fix.c:925:
+u16_t zfiWlanResume(zdev_t *dev, u8_t doReconn)

CHECK:CAMELCASE: Avoid CamelCase: <doReconn>
#1815: FILE: staging/otus/80211core/ccmd_cs_fix.c:925:
+u16_t zfiWlanResume(zdev_t *dev, u8_t doReconn)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1818: FILE: staging/otus/80211core/ccmd_cs_fix.c:928:
+	u16_t ret;
+	zmw_get_wlan_dev(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfCoreSetFrequencyExV2>
#1825: FILE: staging/otus/80211core/ccmd_cs_fix.c:935:
+	zfCoreSetFrequencyExV2(dev, wd->frequency, wd->BandWidth40,

CHECK:CAMELCASE: Avoid CamelCase: <BandWidth40>
#1825: FILE: staging/otus/80211core/ccmd_cs_fix.c:935:
+	zfCoreSetFrequencyExV2(dev, wd->frequency, wd->BandWidth40,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1826: FILE: staging/otus/80211core/ccmd_cs_fix.c:936:
+	zfCoreSetFrequencyExV2(dev, wd->frequency, wd->BandWidth40,
+		wd->ExtOffset, NULL, 1);

CHECK:CAMELCASE: Avoid CamelCase: <ExtOffset>
#1826: FILE: staging/otus/80211core/ccmd_cs_fix.c:936:
+		wd->ExtOffset, NULL, 1);

CHECK:CAMELCASE: Avoid CamelCase: <zfHpSetMacAddress>
#1828: FILE: staging/otus/80211core/ccmd_cs_fix.c:938:
+	zfHpSetMacAddress(dev, wd->macAddr, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1836: FILE: staging/otus/80211core/ccmd_cs_fix.c:946:
+	if (wd->wlanMode != ZM_MODE_INFRASTRUCTURE &&
+			wd->wlanMode != ZM_MODE_IBSS)

CHECK:CAMELCASE: Avoid CamelCase: <zfStaIsConnecting>
#1840: FILE: staging/otus/80211core/ccmd_cs_fix.c:950:
+	if ((zfStaIsConnected(dev)) || (zfStaIsConnecting(dev))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1841: FILE: staging/otus/80211core/ccmd_cs_fix.c:951:
+		if (doReconn == 1) {
[...]
+		} else if (doReconn == 0)
[...]

CHECK:CAMELCASE: Avoid CamelCase: <zfHpSetRollCallTable>
#1849: FILE: staging/otus/80211core/ccmd_cs_fix.c:959:
+			zfHpSetRollCallTable(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanFlushAllQueuedBuffers>
#1863: FILE: staging/otus/80211core/ccmd_cs_fix.c:982:
+void zfiWlanFlushAllQueuedBuffers(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanScan>
#1881: FILE: staging/otus/80211core/ccmd_cs_fix.c:993:
+u16_t zfiWlanScan(zdev_t *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1886: FILE: staging/otus/80211core/ccmd_cs_fix.c:996:
+	u16_t ret = 1;
+	zmw_get_wlan_dev(dev);

CHECK:CAMELCASE: Avoid CamelCase: <heartBeatNotification>
#1921: FILE: staging/otus/80211core/ccmd_cs_fix.c:1005:
+		wd->heartBeatNotification |= ZM_BSSID_LIST_SCAN;

CHECK:CAMELCASE: Avoid CamelCase: <scanFrequency>
#1922: FILE: staging/otus/80211core/ccmd_cs_fix.c:1006:
+		wd->sta.scanFrequency = 0;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1926: FILE: staging/otus/80211core/ccmd_cs_fix.c:1010:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <zfStaBlockWlanScan>
#1927: FILE: staging/otus/80211core/ccmd_cs_fix.c:1011:
+		if (!zfStaBlockWlanScan(dev)) {

CHECK:CAMELCASE: Avoid CamelCase: <LEDCtrlFlagFromReg>
#1949: FILE: staging/otus/80211core/ccmd_cs_fix.c:1029:
+	if (wd->ledStruct.LEDCtrlFlagFromReg & ZM_LED_CTRL_FLAG_ALPHA) {

CHECK:CAMELCASE: Avoid CamelCase: <LEDCtrlFlag>
#1951: FILE: staging/otus/80211core/ccmd_cs_fix.c:1031:
+		wd->ledStruct.LEDCtrlFlag |= ZM_LED_CTRL_FLAG_ALPHA;

CHECK:CAMELCASE: Avoid CamelCase: <zfScanMgrScanStart>
#1955: FILE: staging/otus/80211core/ccmd_cs_fix.c:1034:
+	ret = zfScanMgrScanStart(dev, ZM_SCAN_MGR_SCAN_EXTERNAL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1981: FILE: staging/otus/80211core/ccmd_cs_fix.c:1042:
+/* rate         ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1982: FILE: staging/otus/80211core/ccmd_cs_fix.c:1043:
+/*    0 : AUTO  ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1983: FILE: staging/otus/80211core/ccmd_cs_fix.c:1044:
+/*    1 : CCK 1M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1984: FILE: staging/otus/80211core/ccmd_cs_fix.c:1045:
+/*    2 : CCK 2M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1985: FILE: staging/otus/80211core/ccmd_cs_fix.c:1046:
+/*    3 : CCK 5.5M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1986: FILE: staging/otus/80211core/ccmd_cs_fix.c:1047:
+/*    4 : CCK 11M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1987: FILE: staging/otus/80211core/ccmd_cs_fix.c:1048:
+/*    5 : OFDM 6M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1988: FILE: staging/otus/80211core/ccmd_cs_fix.c:1049:
+/*    6 : OFDM 9M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1989: FILE: staging/otus/80211core/ccmd_cs_fix.c:1050:
+/*    7 : OFDM 12M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1990: FILE: staging/otus/80211core/ccmd_cs_fix.c:1051:
+/*    8 : OFDM 18M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1991: FILE: staging/otus/80211core/ccmd_cs_fix.c:1052:
+/*    9 : OFDM 24M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1992: FILE: staging/otus/80211core/ccmd_cs_fix.c:1053:
+/*    10 : OFDM 36M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1993: FILE: staging/otus/80211core/ccmd_cs_fix.c:1054:
+/*    11 : OFDM 48M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1994: FILE: staging/otus/80211core/ccmd_cs_fix.c:1055:
+/*    12 : OFDM 54M ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1995: FILE: staging/otus/80211core/ccmd_cs_fix.c:1056:
+/*    13 : MCS 0 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1996: FILE: staging/otus/80211core/ccmd_cs_fix.c:1057:
+/*    28 : MCS 15 ^I*/$

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetTxRate>
#2017: FILE: staging/otus/80211core/ccmd_cs_fix.c:1062:
+u16_t zfiWlanSetTxRate(zdev_t *dev, u16_t rate)

CHECK:CAMELCASE: Avoid CamelCase: <zcRateToMCS>
#2024: FILE: staging/otus/80211core/ccmd_cs_fix.c:1068:
+		wd->txMCS = zcRateToMCS[rate];

CHECK:CAMELCASE: Avoid CamelCase: <txMT>
#2025: FILE: staging/otus/80211core/ccmd_cs_fix.c:1069:
+		wd->txMT = zcRateToMT[rate];

CHECK:CAMELCASE: Avoid CamelCase: <zcRateToMT>
#2025: FILE: staging/otus/80211core/ccmd_cs_fix.c:1069:
+		wd->txMT = zcRateToMT[rate];

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2047: FILE: staging/otus/80211core/ccmd_cs_fix.c:1081:
 const u32_t zcRateIdToKbps40M[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2157: FILE: staging/otus/80211core/ccmd_cs_fix.c:1093:
 const u32_t zcRateIdToKbps20M[] =
+{

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryTxRate>
#2168: FILE: staging/otus/80211core/ccmd_cs_fix.c:1104:
+u32_t zfiWlanQueryTxRate(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <rateId>
#2170: FILE: staging/otus/80211core/ccmd_cs_fix.c:1106:
+	u8_t rateId = 0xff;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2171: FILE: staging/otus/80211core/ccmd_cs_fix.c:1107:
+	u8_t rateId = 0xff;
+	zmw_get_wlan_dev(dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->wlanMode == ZM_MODE_INFRASTRUCTURE'
#2175: FILE: staging/otus/80211core/ccmd_cs_fix.c:1111:
+	if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+						(zfStaIsConnected(dev))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2176: FILE: staging/otus/80211core/ccmd_cs_fix.c:1112:
+	if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+						(zfStaIsConnected(dev))) {

CHECK:CAMELCASE: Avoid CamelCase: <rcCell>
#2180: FILE: staging/otus/80211core/ccmd_cs_fix.c:1116:
+			if ((wd->sta.oppositeInfo[0].rcCell.flag &

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2182: FILE: staging/otus/80211core/ccmd_cs_fix.c:1118:
+				rateId = wd->sta.oppositeInfo[0].rcCell. \

CHECK:CAMELCASE: Avoid CamelCase: <operationRateSet>
#2183: FILE: staging/otus/80211core/ccmd_cs_fix.c:1119:
+				operationRateSet[wd->sta.oppositeInfo[0]. \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2184: FILE: staging/otus/80211core/ccmd_cs_fix.c:1120:
+				rcCell.operationRateCount-1];
 				                         ^

CHECK:CAMELCASE: Avoid CamelCase: <operationRateCount>
#2184: FILE: staging/otus/80211core/ccmd_cs_fix.c:1120:
+				rcCell.operationRateCount-1];

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2186: FILE: staging/otus/80211core/ccmd_cs_fix.c:1122:
+				rateId = wd->sta.oppositeInfo[0].rcCell. \

CHECK:CAMELCASE: Avoid CamelCase: <currentRateIndex>
#2188: FILE: staging/otus/80211core/ccmd_cs_fix.c:1124:
+				rcCell.currentRateIndex];

CHECK:BRACES: braces {} should be used on all arms of this statement
#2193: FILE: staging/otus/80211core/ccmd_cs_fix.c:1129:
+	if (rateId != 0xff) {
[...]
+	} else
[...]

CHECK:CAMELCASE: Avoid CamelCase: <zcRateIdToKbps40M>
#2195: FILE: staging/otus/80211core/ccmd_cs_fix.c:1131:
+			return zcRateIdToKbps40M[rateId];

CHECK:CAMELCASE: Avoid CamelCase: <zcRateIdToKbps20M>
#2197: FILE: staging/otus/80211core/ccmd_cs_fix.c:1133:
+			return zcRateIdToKbps20M[rateId];

CHECK:BRACES: Unbalanced braces around else statement
#2198: FILE: staging/otus/80211core/ccmd_cs_fix.c:1134:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <zfWlanUpdateRxRate>
#2202: FILE: staging/otus/80211core/ccmd_cs_fix.c:1138:
+void zfWlanUpdateRxRate(zdev_t *dev, struct zsAdditionInfo *addInfo)

CHECK:CAMELCASE: Avoid CamelCase: <zsAdditionInfo>
#2202: FILE: staging/otus/80211core/ccmd_cs_fix.c:1138:
+void zfWlanUpdateRxRate(zdev_t *dev, struct zsAdditionInfo *addInfo)

CHECK:CAMELCASE: Avoid CamelCase: <addInfo>
#2202: FILE: staging/otus/80211core/ccmd_cs_fix.c:1138:
+void zfWlanUpdateRxRate(zdev_t *dev, struct zsAdditionInfo *addInfo)

CHECK:CAMELCASE: Avoid CamelCase: <rxRateKbps>
#2204: FILE: staging/otus/80211core/ccmd_cs_fix.c:1140:
+	u32_t rxRateKbps;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2205: FILE: staging/otus/80211core/ccmd_cs_fix.c:1141:
+	u32_t rxRateKbps;
+	zmw_get_wlan_dev(dev);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2207: FILE: staging/otus/80211core/ccmd_cs_fix.c:1143:
+	/* zm_msg1_mm(ZM_LV_0, "addInfo->Tail.Data.RxMacStatus =",
+	*  addInfo->Tail.Data.RxMacStatus & 0x03);

CHECK:CAMELCASE: Avoid CamelCase: <Tail>
#2218: FILE: staging/otus/80211core/ccmd_cs_fix.c:1154:
+	if ((addInfo->Tail.Data.RxMacStatus & 0x10) == 0) {

CHECK:CAMELCASE: Avoid CamelCase: <RxMacStatus>
#2218: FILE: staging/otus/80211core/ccmd_cs_fix.c:1154:
+	if ((addInfo->Tail.Data.RxMacStatus & 0x10) == 0) {

CHECK:CAMELCASE: Avoid CamelCase: <modulationType>
#2220: FILE: staging/otus/80211core/ccmd_cs_fix.c:1156:
+		wd->modulationType = addInfo->Tail.Data.RxMacStatus & 0x03;

CHECK:CAMELCASE: Avoid CamelCase: <rateField>
#2224: FILE: staging/otus/80211core/ccmd_cs_fix.c:1160:
+			wd->rateField = addInfo->PlcpHeader[0] & 0xff;

CHECK:CAMELCASE: Avoid CamelCase: <PlcpHeader>
#2224: FILE: staging/otus/80211core/ccmd_cs_fix.c:1160:
+			wd->rateField = addInfo->PlcpHeader[0] & 0xff;

CHECK:CAMELCASE: Avoid CamelCase: <rxInfo>
#2225: FILE: staging/otus/80211core/ccmd_cs_fix.c:1161:
+			wd->rxInfo = 0;

CHECK:CAMELCASE: Avoid CamelCase: <CurrentRxRateUpdated>
#2242: FILE: staging/otus/80211core/ccmd_cs_fix.c:1178:
+		if (wd->CurrentRxRateUpdated == 1) {

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateN40L>
#2272: FILE: staging/otus/80211core/ccmd_cs_fix.c:1197:
+u32_t zcIndextoRateN40L[16] = {13500, 27000, 40500, 54000, 81000, 108000,

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateN40S>
#2275: FILE: staging/otus/80211core/ccmd_cs_fix.c:1200:
+u32_t zcIndextoRateN40S[16] = {15000, 30000, 45000, 60000, 90000, 120000,

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryRxRate>
#2286: FILE: staging/otus/80211core/ccmd_cs_fix.c:1211:
+u32_t zfiWlanQueryRxRate(zdev_t *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2367: FILE: staging/otus/80211core/ccmd_cs_fix.c:1223:
+	u32_t rxRateKbps = 130000;
+	zmw_get_wlan_dev(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateBG>
#2392: FILE: staging/otus/80211core/ccmd_cs_fix.c:1248:
+			rxRateKbps = zcIndextoRateBG[wd->rateField];

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateN20S>
#2410: FILE: staging/otus/80211core/ccmd_cs_fix.c:1266:
+					rxRateKbps = zcIndextoRateN20S[mcs];

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateN20L>
#2413: FILE: staging/otus/80211core/ccmd_cs_fix.c:1269:
+					rxRateKbps = zcIndextoRateN20L[mcs];

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2422: FILE: staging/otus/80211core/ccmd_cs_fix.c:1278:
+	/*	zm_msg1_mm(ZM_LV_0, "wd->CurrentRxRateKbps=",
+		wd->CurrentRxRateKbps);

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#2427: FILE: staging/otus/80211core/ccmd_cs_fix.c:1281:
+	/* ToDo: use bandwith field to define 40MB */
 	             ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanGetStatistics>
#2433: FILE: staging/otus/80211core/ccmd_cs_fix.c:1286:
+u16_t zfiWlanGetStatistics(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanReset>
#2442: FILE: staging/otus/80211core/ccmd_cs_fix.c:1292:
+u16_t zfiWlanReset(zdev_t *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2461: FILE: staging/otus/80211core/ccmd_cs_fix.c:1305:
+	u8_t isConnected;
+	zmw_get_wlan_dev(dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->wlanMode == ZM_MODE_INFRASTRUCTURE'
#2472: FILE: staging/otus/80211core/ccmd_cs_fix.c:1315:
+		if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+		(wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2'
#2472: FILE: staging/otus/80211core/ccmd_cs_fix.c:1315:
+		if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+		(wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2473: FILE: staging/otus/80211core/ccmd_cs_fix.c:1316:
+		if ((wd->wlanMode == ZM_MODE_INFRASTRUCTURE) &&
+		(wd->sta.currentAuthMode != ZM_AUTH_MODE_WPA2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2478: FILE: staging/otus/80211core/ccmd_cs_fix.c:1321:
+				zfSendMmFrame(dev, ZM_WLAN_FRAME_TYPE_DEAUTH,
+						wd->sta.bssid, 3, 0, 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->zfcbConnectNotify"
#2490: FILE: staging/otus/80211core/ccmd_cs_fix.c:1332:
+		if (wd->zfcbConnectNotify != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd->zfcbConnectNotify"
#2494: FILE: staging/otus/80211core/ccmd_cs_fix.c:1336:
+		if (wd->zfcbConnectNotify != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <zfStaRefreshBlockList>
#2583: FILE: staging/otus/80211core/ccmd_cs_fix.c:1356:
+	zfStaRefreshBlockList(dev, 1);

CHECK:CAMELCASE: Avoid CamelCase: <InternalScanReq>
#2595: FILE: staging/otus/80211core/ccmd_cs_fix.c:1368:
+	wd->sta.InternalScanReq = 0;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2659: FILE: staging/otus/80211core/ccmd_cs_fix.c:1393:
+^I/* ^IClear the information for the peer$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2660: FILE: staging/otus/80211core/ccmd_cs_fix.c:1394:
+	/* 	Clear the information for the peer
+		stations of IBSS or AP of Station mode

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2663: FILE: staging/otus/80211core/ccmd_cs_fix.c:1397:
+	zfZeroMemory((u8_t *)wd->sta.oppositeInfo,
+			sizeof(struct zsOppositeInfo) * ZM_MAX_OPPOSITE_COUNT);

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#2676: FILE: staging/otus/80211core/ccmd_cs_fix.c:1410:
+	/* 	Improve WEP/TKIP performace with HT AP,
 	   	                 ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2676: FILE: staging/otus/80211core/ccmd_cs_fix.c:1410:
+^I/* ^IImprove WEP/TKIP performace with HT AP,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2677: FILE: staging/otus/80211core/ccmd_cs_fix.c:1411:
+	/* 	Improve WEP/TKIP performace with HT AP,
+		detail information please look bug#32495

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDeauth>
#2690: FILE: staging/otus/80211core/ccmd_cs_fix.c:1423:
+u16_t zfiWlanDeauth(zdev_t *dev, u16_t *macAddr, u16_t reason)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2735: FILE: staging/otus/80211core/ccmd_cs_fix.c:1431:
+		/*
+		* we will reset all key in zfHpResetKeyCache() when call

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2743: FILE: staging/otus/80211core/ccmd_cs_fix.c:1439:
+		/*
+		if ((id = zfApFindSta(dev, macAddr)) != 0xffff)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2761: FILE: staging/otus/80211core/ccmd_cs_fix.c:1457:
+		zfSendMmFrame(dev, ZM_WLAN_FRAME_TYPE_DEAUTH, macAddr,
+								reason, 0, 0);

CHECK:BRACES: Unbalanced braces around else statement
#2762: FILE: staging/otus/80211core/ccmd_cs_fix.c:1458:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2764: FILE: staging/otus/80211core/ccmd_cs_fix.c:1460:
+		zfSendMmFrame(dev, ZM_WLAN_FRAME_TYPE_DEAUTH,
+						wd->sta.bssid, 3, 0, 0);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetAllMulticast>
#2779: FILE: staging/otus/80211core/ccmd_cs_fix.c:1471:
+void zfiWlanSetAllMulticast(zdev_t *dev, u32_t setting)

CHECK:CAMELCASE: Avoid CamelCase: <bAllMulticast>
#2786: FILE: staging/otus/80211core/ccmd_cs_fix.c:1475:
+	wd->sta.bAllMulticast = (u8_t)setting;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetHTCtrl>
#2792: FILE: staging/otus/80211core/ccmd_cs_fix.c:1480:
+void zfiWlanSetHTCtrl(zdev_t *dev, u32_t *setting, u32_t forceTxTPC)

CHECK:CAMELCASE: Avoid CamelCase: <forceTxTPC>
#2792: FILE: staging/otus/80211core/ccmd_cs_fix.c:1480:
+void zfiWlanSetHTCtrl(zdev_t *dev, u32_t *setting, u32_t forceTxTPC)

CHECK:CAMELCASE: Avoid CamelCase: <enableAggregation>
#2811: FILE: staging/otus/80211core/ccmd_cs_fix.c:1490:
+	wd->enableAggregation   = (u8_t)setting[6];

CHECK:CAMELCASE: Avoid CamelCase: <enableWDS>
#2812: FILE: staging/otus/80211core/ccmd_cs_fix.c:1491:
+	wd->enableWDS           = (u8_t)setting[7];

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryHTCtrl>
#2820: FILE: staging/otus/80211core/ccmd_cs_fix.c:1497:
+void zfiWlanQueryHTCtrl(zdev_t *dev, u32_t *setting, u32_t *forceTxTPC)

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDbg>
#2847: FILE: staging/otus/80211core/ccmd_cs_fix.c:1513:
+void zfiWlanDbg(zdev_t *dev, u8_t setting)

CHECK:CAMELCASE: Avoid CamelCase: <enableHALDbgInfo>
#2853: FILE: staging/otus/80211core/ccmd_cs_fix.c:1517:
+	wd->enableHALDbgInfo = setting;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetRxPacketDump>
#2858: FILE: staging/otus/80211core/ccmd_cs_fix.c:1521:
+void zfiWlanSetRxPacketDump(zdev_t *dev, u32_t setting)

CHECK:CAMELCASE: Avoid CamelCase: <rxPacketDump>
#2871: FILE: staging/otus/80211core/ccmd_cs_fix.c:1525:
+		wd->rxPacketDump = 1;   /* enable */

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanResetTally>
#2880: FILE: staging/otus/80211core/ccmd_cs_fix.c:1533:
+void zfiWlanResetTally(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <txUnicastFrm>
#2950: FILE: staging/otus/80211core/ccmd_cs_fix.c:1541:
+	wd->commTally.txUnicastFrm = 0;		/* txUnicastFrames */

CHECK:CAMELCASE: Avoid CamelCase: <txMulticastFrm>
#2951: FILE: staging/otus/80211core/ccmd_cs_fix.c:1542:
+	wd->commTally.txMulticastFrm = 0;	/* txMulticastFrames */

CHECK:CAMELCASE: Avoid CamelCase: <txUnicastOctets>
#2952: FILE: staging/otus/80211core/ccmd_cs_fix.c:1543:
+	wd->commTally.txUnicastOctets = 0;	/* txUniOctets  byte size */

CHECK:CAMELCASE: Avoid CamelCase: <txMulticastOctets>
#2953: FILE: staging/otus/80211core/ccmd_cs_fix.c:1544:
+	wd->commTally.txMulticastOctets = 0;	/* txMultiOctets  byte size */

CHECK:CAMELCASE: Avoid CamelCase: <txFrmUpperNDIS>
#2954: FILE: staging/otus/80211core/ccmd_cs_fix.c:1545:
+	wd->commTally.txFrmUpperNDIS = 0;

CHECK:CAMELCASE: Avoid CamelCase: <txFrmDrvMgt>
#2955: FILE: staging/otus/80211core/ccmd_cs_fix.c:1546:
+	wd->commTally.txFrmDrvMgt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <RetryFailCnt>
#2956: FILE: staging/otus/80211core/ccmd_cs_fix.c:1547:
+	wd->commTally.RetryFailCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_TotalTxFrm>
#2957: FILE: staging/otus/80211core/ccmd_cs_fix.c:1548:
+	wd->commTally.Hw_TotalTxFrm = 0;	/* Hardware total Tx Frame */

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RetryCnt>
#2958: FILE: staging/otus/80211core/ccmd_cs_fix.c:1549:
+	wd->commTally.Hw_RetryCnt = 0;		/* txMultipleRetriesFrames */

CHECK:CAMELCASE: Avoid CamelCase: <Hw_UnderrunCnt>
#2959: FILE: staging/otus/80211core/ccmd_cs_fix.c:1550:
+	wd->commTally.Hw_UnderrunCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <DriverRxFrmCnt>
#2960: FILE: staging/otus/80211core/ccmd_cs_fix.c:1551:
+	wd->commTally.DriverRxFrmCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rxUnicastFrm>
#2961: FILE: staging/otus/80211core/ccmd_cs_fix.c:1552:
+	wd->commTally.rxUnicastFrm = 0;		/* rxUnicastFrames */

CHECK:CAMELCASE: Avoid CamelCase: <rxMulticastFrm>
#2962: FILE: staging/otus/80211core/ccmd_cs_fix.c:1553:
+	wd->commTally.rxMulticastFrm = 0;	/* rxMulticastFrames */

CHECK:CAMELCASE: Avoid CamelCase: <NotifyNDISRxFrmCnt>
#2963: FILE: staging/otus/80211core/ccmd_cs_fix.c:1554:
+	wd->commTally.NotifyNDISRxFrmCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rxUnicastOctets>
#2964: FILE: staging/otus/80211core/ccmd_cs_fix.c:1555:
+	wd->commTally.rxUnicastOctets = 0;	/* rxUniOctets  byte size */

CHECK:CAMELCASE: Avoid CamelCase: <rxMulticastOctets>
#2965: FILE: staging/otus/80211core/ccmd_cs_fix.c:1556:
+	wd->commTally.rxMulticastOctets = 0;	/* rxMultiOctets  byte size */

CHECK:CAMELCASE: Avoid CamelCase: <DriverDiscardedFrm>
#2966: FILE: staging/otus/80211core/ccmd_cs_fix.c:1557:
+	wd->commTally.DriverDiscardedFrm = 0;	/* Discard by ValidateFrame */

CHECK:CAMELCASE: Avoid CamelCase: <LessThanDataMinLen>
#2967: FILE: staging/otus/80211core/ccmd_cs_fix.c:1558:
+	wd->commTally.LessThanDataMinLen = 0;

CHECK:CAMELCASE: Avoid CamelCase: <GreaterThanMaxLen>
#2968: FILE: staging/otus/80211core/ccmd_cs_fix.c:1559:
+	wd->commTally.GreaterThanMaxLen = 0;

CHECK:CAMELCASE: Avoid CamelCase: <DriverDiscardedFrmCauseByMulticastList>
#2969: FILE: staging/otus/80211core/ccmd_cs_fix.c:1560:
+	wd->commTally.DriverDiscardedFrmCauseByMulticastList = 0;

CHECK:CAMELCASE: Avoid CamelCase: <DriverDiscardedFrmCauseByFrmCtrl>
#2970: FILE: staging/otus/80211core/ccmd_cs_fix.c:1561:
+	wd->commTally.DriverDiscardedFrmCauseByFrmCtrl = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rxNeedFrgFrm>
#2971: FILE: staging/otus/80211core/ccmd_cs_fix.c:1562:
+	wd->commTally.rxNeedFrgFrm = 0;		/* need more frg frm */

CHECK:CAMELCASE: Avoid CamelCase: <DriverRxMgtFrmCnt>
#2972: FILE: staging/otus/80211core/ccmd_cs_fix.c:1563:
+	wd->commTally.DriverRxMgtFrmCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rxBroadcastFrm>
#2973: FILE: staging/otus/80211core/ccmd_cs_fix.c:1564:
+	wd->commTally.rxBroadcastFrm = 0;/* Receive broadcast frame count */

CHECK:CAMELCASE: Avoid CamelCase: <rxBroadcastOctets>
#2974: FILE: staging/otus/80211core/ccmd_cs_fix.c:1565:
+	wd->commTally.rxBroadcastOctets = 0;/*Receive broadcast framebyte size*/

CHECK:CAMELCASE: Avoid CamelCase: <Hw_TotalRxFrm>
#2975: FILE: staging/otus/80211core/ccmd_cs_fix.c:1566:
+	wd->commTally.Hw_TotalRxFrm = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_CRC16Cnt>
#2976: FILE: staging/otus/80211core/ccmd_cs_fix.c:1567:
+	wd->commTally.Hw_CRC16Cnt = 0;		/* rxPLCPCRCErrCnt */

CHECK:CAMELCASE: Avoid CamelCase: <Hw_CRC32Cnt>
#2977: FILE: staging/otus/80211core/ccmd_cs_fix.c:1568:
+	wd->commTally.Hw_CRC32Cnt = 0;		/* rxCRC32ErrCnt */

CHECK:CAMELCASE: Avoid CamelCase: <Hw_DecrypErr_UNI>
#2978: FILE: staging/otus/80211core/ccmd_cs_fix.c:1569:
+	wd->commTally.Hw_DecrypErr_UNI = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_DecrypErr_Mul>
#2979: FILE: staging/otus/80211core/ccmd_cs_fix.c:1570:
+	wd->commTally.Hw_DecrypErr_Mul = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxFIFOOverrun>
#2980: FILE: staging/otus/80211core/ccmd_cs_fix.c:1571:
+	wd->commTally.Hw_RxFIFOOverrun = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxTimeOut>
#2981: FILE: staging/otus/80211core/ccmd_cs_fix.c:1572:
+	wd->commTally.Hw_RxTimeOut = 0;

CHECK:CAMELCASE: Avoid CamelCase: <LossAP>
#2982: FILE: staging/otus/80211core/ccmd_cs_fix.c:1573:
+	wd->commTally.LossAP = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Tx_MPDU>
#2984: FILE: staging/otus/80211core/ccmd_cs_fix.c:1575:
+	wd->commTally.Tx_MPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <BA_Fail>
#2985: FILE: staging/otus/80211core/ccmd_cs_fix.c:1576:
+	wd->commTally.BA_Fail = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_Tx_AMPDU>
#2986: FILE: staging/otus/80211core/ccmd_cs_fix.c:1577:
+	wd->commTally.Hw_Tx_AMPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_Tx_MPDU>
#2987: FILE: staging/otus/80211core/ccmd_cs_fix.c:1578:
+	wd->commTally.Hw_Tx_MPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <txQosDropCount>
#2989: FILE: staging/otus/80211core/ccmd_cs_fix.c:1580:
+	wd->commTally.txQosDropCount[0] = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxMPDU>
#2995: FILE: staging/otus/80211core/ccmd_cs_fix.c:1586:
+	wd->commTally.Hw_RxMPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxDropMPDU>
#2996: FILE: staging/otus/80211core/ccmd_cs_fix.c:1587:
+	wd->commTally.Hw_RxDropMPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxDelMPDU>
#2997: FILE: staging/otus/80211core/ccmd_cs_fix.c:1588:
+	wd->commTally.Hw_RxDelMPDU = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxPhyMiscError>
#2999: FILE: staging/otus/80211core/ccmd_cs_fix.c:1590:
+	wd->commTally.Hw_RxPhyMiscError = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxPhyXRError>
#3000: FILE: staging/otus/80211core/ccmd_cs_fix.c:1591:
+	wd->commTally.Hw_RxPhyXRError = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxPhyOFDMError>
#3001: FILE: staging/otus/80211core/ccmd_cs_fix.c:1592:
+	wd->commTally.Hw_RxPhyOFDMError = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxPhyCCKError>
#3002: FILE: staging/otus/80211core/ccmd_cs_fix.c:1593:
+	wd->commTally.Hw_RxPhyCCKError = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxPhyHTError>
#3003: FILE: staging/otus/80211core/ccmd_cs_fix.c:1594:
+	wd->commTally.Hw_RxPhyHTError = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Hw_RxPhyTotalCount>
#3004: FILE: staging/otus/80211core/ccmd_cs_fix.c:1595:
+	wd->commTally.Hw_RxPhyTotalCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rx11bDataFrame>
#3007: FILE: staging/otus/80211core/ccmd_cs_fix.c:1598:
+	wd->commTally.rx11bDataFrame = 0;

CHECK:CAMELCASE: Avoid CamelCase: <rxOFDMDataFrame>
#3008: FILE: staging/otus/80211core/ccmd_cs_fix.c:1599:
+	wd->commTally.rxOFDMDataFrame = 0;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryTally>
#3017: FILE: staging/otus/80211core/ccmd_cs_fix.c:1606:
+void zfiWlanQueryTally(zdev_t *dev, struct zsCommTally *tally)

CHECK:CAMELCASE: Avoid CamelCase: <zsCommTally>
#3017: FILE: staging/otus/80211core/ccmd_cs_fix.c:1606:
+void zfiWlanQueryTally(zdev_t *dev, struct zsCommTally *tally)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3030: FILE: staging/otus/80211core/ccmd_cs_fix.c:1614:
+	zfMemoryCopy((u8_t *)tally, (u8_t *)&wd->commTally,
+						sizeof(struct zsCommTally));

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryTrafTally>
#3035: FILE: staging/otus/80211core/ccmd_cs_fix.c:1618:
+void zfiWlanQueryTrafTally(zdev_t *dev, struct zsTrafTally *tally)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3048: FILE: staging/otus/80211core/ccmd_cs_fix.c:1626:
+	zfMemoryCopy((u8_t *)tally, (u8_t *)&wd->trafTally,
+						sizeof(struct zsTrafTally));

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryMonHalRxInfo>
#3053: FILE: staging/otus/80211core/ccmd_cs_fix.c:1630:
+void zfiWlanQueryMonHalRxInfo(zdev_t *dev, struct zsMonHalRxInfo *monHalRxInfo)

CHECK:CAMELCASE: Avoid CamelCase: <zsMonHalRxInfo>
#3053: FILE: staging/otus/80211core/ccmd_cs_fix.c:1630:
+void zfiWlanQueryMonHalRxInfo(zdev_t *dev, struct zsMonHalRxInfo *monHalRxInfo)

CHECK:CAMELCASE: Avoid CamelCase: <monHalRxInfo>
#3053: FILE: staging/otus/80211core/ccmd_cs_fix.c:1630:
+void zfiWlanQueryMonHalRxInfo(zdev_t *dev, struct zsMonHalRxInfo *monHalRxInfo)

CHECK:CAMELCASE: Avoid CamelCase: <zfHpQueryMonHalRxInfo>
#3056: FILE: staging/otus/80211core/ccmd_cs_fix.c:1632:
+	zfHpQueryMonHalRxInfo(dev, (u8_t *)monHalRxInfo);

CHECK:CAMELCASE: Avoid CamelCase: <zfiDKEnable>
#3061: FILE: staging/otus/80211core/ccmd_cs_fix.c:1636:
+void zfiDKEnable(zdev_t *dev, u32_t enable)

CHECK:CAMELCASE: Avoid CamelCase: <modeMDKEnable>
#3068: FILE: staging/otus/80211core/ccmd_cs_fix.c:1640:
+	wd->modeMDKEnable = enable;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryPacketTypePromiscuous>
#3074: FILE: staging/otus/80211core/ccmd_cs_fix.c:1645:
+u32_t zfiWlanQueryPacketTypePromiscuous(zdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <swSniffer>
#3080: FILE: staging/otus/80211core/ccmd_cs_fix.c:1649:
+	return wd->swSniffer;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetPacketTypePromiscuous>
#3085: FILE: staging/otus/80211core/ccmd_cs_fix.c:1653:
+void zfiWlanSetPacketTypePromiscuous(zdev_t *dev, u32_t setValue)

CHECK:CAMELCASE: Avoid CamelCase: <setValue>
#3085: FILE: staging/otus/80211core/ccmd_cs_fix.c:1653:
+void zfiWlanSetPacketTypePromiscuous(zdev_t *dev, u32_t setValue)

CHECK:CAMELCASE: Avoid CamelCase: <zfHpSetSnifferMode>
#3093: FILE: staging/otus/80211core/ccmd_cs_fix.c:1661:
+		zfHpSetSnifferMode(dev, 1);

WARNING:TYPO_SPELLING: 'enalbe' may be misspelled - perhaps 'enable'?
#3094: FILE: staging/otus/80211core/ccmd_cs_fix.c:1662:
+		zm_msg0_mm(ZM_LV_1, "enalbe sniffer mode");
 		                     ^^^^^^

WARNING:TYPO_SPELLING: 'disalbe' may be misspelled - perhaps 'disable'?
#3097: FILE: staging/otus/80211core/ccmd_cs_fix.c:1665:
+		zm_msg0_mm(ZM_LV_0, "disalbe sniffer mode");
 		                     ^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetXLinkMode>
#3101: FILE: staging/otus/80211core/ccmd_cs_fix.c:1669:
+void zfiWlanSetXLinkMode(zdev_t *dev, u32_t setValue)

CHECK:BRACES: braces {} should be used on all arms of this statement
#3106: FILE: staging/otus/80211core/ccmd_cs_fix.c:1674:
+	if (setValue) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3109: FILE: staging/otus/80211core/ccmd_cs_fix.c:1677:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <zfStaChannelManagement>
#3113: FILE: staging/otus/80211core/ccmd_cs_fix.c:1681:
+extern void zfStaChannelManagement(zdev_t *dev, u8_t scan);

CHECK:CAMELCASE: Avoid CamelCase: <zfiSetChannelManagement>
#3115: FILE: staging/otus/80211core/ccmd_cs_fix.c:1683:
+void zfiSetChannelManagement(zdev_t *dev, u32_t setting)

CHECK:CAMELCASE: Avoid CamelCase: <zfCoreSetFrequencyEx>
#3141: FILE: staging/otus/80211core/ccmd_cs_fix.c:1709:
+	zfCoreSetFrequencyEx(dev, wd->frequency, wd->BandWidth40,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3142: FILE: staging/otus/80211core/ccmd_cs_fix.c:1710:
+	zfCoreSetFrequencyEx(dev, wd->frequency, wd->BandWidth40,
+							wd->ExtOffset, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <zfiSetRifs>
#3145: FILE: staging/otus/80211core/ccmd_cs_fix.c:1713:
+void zfiSetRifs(zdev_t *dev, u16_t setting)

CHECK:CAMELCASE: Avoid CamelCase: <HtInfo>
#3249: FILE: staging/otus/80211core/ccmd_cs_fix.c:1717:
+	wd->sta.ie.HtInfo.ChannelInfo |= ExtHtCap_RIFSMode;

CHECK:CAMELCASE: Avoid CamelCase: <ExtHtCap_RIFSMode>
#3249: FILE: staging/otus/80211core/ccmd_cs_fix.c:1717:
+	wd->sta.ie.HtInfo.ChannelInfo |= ExtHtCap_RIFSMode;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3256: FILE: staging/otus/80211core/ccmd_cs_fix.c:1724:
+		/* zfHpSetRifs(dev, 1, 0,
+		*  (wd->sta.currentFrequency < 3000)? 1:0);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3262: FILE: staging/otus/80211core/ccmd_cs_fix.c:1730:
+		/* zfHpSetRifs(dev, 1, 1,
+		*  (wd->sta.currentFrequency < 3000)? 1:0);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3268: FILE: staging/otus/80211core/ccmd_cs_fix.c:1736:
+		/* zfHpSetRifs(dev, 1, 0,
+		*  (wd->sta.currentFrequency < 3000)? 1:0);

CHECK:CAMELCASE: Avoid CamelCase: <zfiCheckRifs>
#3274: FILE: staging/otus/80211core/ccmd_cs_fix.c:1742:
+void zfiCheckRifs(zdev_t *dev)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3281: FILE: staging/otus/80211core/ccmd_cs_fix.c:1749:
+		/* zfHpSetRifs(dev, wd->sta.EnableHT, wd->sta.HT2040,
+		*  (wd->sta.currentFrequency < 3000)? 1:0);

CHECK:CAMELCASE: Avoid CamelCase: <zfiSetReorder>
#3285: FILE: staging/otus/80211core/ccmd_cs_fix.c:1753:
+void zfiSetReorder(zdev_t *dev, u16_t value)

CHECK:CAMELCASE: Avoid CamelCase: <zfiSetSeqDebug>
#3294: FILE: staging/otus/80211core/ccmd_cs_fix.c:1760:
+void zfiSetSeqDebug(zdev_t *dev, u16_t value)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 64 warnings, 436 checks, 3261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
