WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/mtd/mtdswap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: drivers/mtd/mtdswap.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: drivers/mtd/mtdswap.c:20:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:TYPO_SPELLING: 'efficent' may be misspelled - perhaps 'efficient'?
#75: FILE: drivers/mtd/mtdswap.c:36:
+ *    taken. The driver becomes faster but less space efficent if given more
                                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'convience' may be misspelled - perhaps 'convince'?
#79: FILE: drivers/mtd/mtdswap.c:40:
+ *    trees roughly in that order as its used. For convience, each tree is
                                                    ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#101: FILE: drivers/mtd/mtdswap.c:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#129: FILE: drivers/mtd/mtdswap.c:90:
+#define TRACE(fmt,a...) printk(KERN_DEBUG fmt, ##a)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: drivers/mtd/mtdswap.c:90:
+#define TRACE(fmt,a...) printk(KERN_DEBUG fmt, ##a)
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: drivers/mtd/mtdswap.c:92:
+#define TRACE(fmt,a...)
                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'swpdev' may be better as '(swpdev)' to avoid precedence issues
#151: FILE: drivers/mtd/mtdswap.c:112:
+#define EBLKADDR_TO_NUM(swpdev, addr) (addr - &swpdev->eblk_data[0])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#151: FILE: drivers/mtd/mtdswap.c:112:
+#define EBLKADDR_TO_NUM(swpdev, addr) (addr - &swpdev->eblk_data[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: drivers/mtd/mtdswap.c:128:
+        /* spinlock protects the fields in this block */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/mtd/mtdswap.c:141:
+        /* mutex protects the fields in this block */$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#188: FILE: drivers/mtd/mtdswap.c:149:
+	struct task_struct* thread;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#198: FILE: drivers/mtd/mtdswap.c:159:
+} __attribute__((packed));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: drivers/mtd/mtdswap.c:161:
+#define SWPDEV_MAGIC ^I^I0x2095$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: drivers/mtd/mtdswap.c:162:
+#define SWPDEV_TYPE_CLEAN ^I0x0001$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: drivers/mtd/mtdswap.c:163:
+#define SWPDEV_TYPE_DIRTY ^I0x0002$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#229: FILE: drivers/mtd/mtdswap.c:190:
+	if (swpdev->mtd->block_isbad
+			&& swpdev->mtd->block_isbad(swpdev->mtd, offset)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#230: FILE: drivers/mtd/mtdswap.c:191:
+		printk(KERN_WARNING "swpdev_check_markers(): Bad block at %08x\n", offset);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'swpdev_check_markers', this function's name, in a string
#230: FILE: drivers/mtd/mtdswap.c:191:
+		printk(KERN_WARNING "swpdev_check_markers(): Bad block at %08x\n", offset);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#242: FILE: drivers/mtd/mtdswap.c:203:
+		printk(KERN_WARNING "swpdev_check_markers(): Read OOB failed %d for block at %08x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'swpdev_check_markers', this function's name, in a string
#242: FILE: drivers/mtd/mtdswap.c:203:
+		printk(KERN_WARNING "swpdev_check_markers(): Read OOB failed %d for block at %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/mtd/mtdswap.c:204:
+		printk(KERN_WARNING "swpdev_check_markers(): Read OOB failed %d for block at %08x\n",
+				ret, offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#247: FILE: drivers/mtd/mtdswap.c:208:
+		printk(KERN_WARNING "swpdev_check_markers(): Read OOB return short read (%zd bytes not %d) for block at %08x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'swpdev_check_markers', this function's name, in a string
#247: FILE: drivers/mtd/mtdswap.c:208:
+		printk(KERN_WARNING "swpdev_check_markers(): Read OOB return short read (%zd bytes not %d) for block at %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/mtd/mtdswap.c:209:
+		printk(KERN_WARNING "swpdev_check_markers(): Read OOB return short read (%zd bytes not %d) for block at %08x\n",
+				ops.retlen, SWPDEV_OOBSIZE, offset);

CHECK:SPACING: No space is necessary after a cast
#254: FILE: drivers/mtd/mtdswap.c:215:
+	p = (unsigned char *) &n;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/mtd/mtdswap.c:224:
+static int swpdev_write_marker(struct mtdswp_dev *swpdev,
+		struct swp_eblk *eblk, u16 marker)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#287: FILE: drivers/mtd/mtdswap.c:248:
+	ret = swpdev->mtd->write_oob(swpdev->mtd, offset , &ops);
 	                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#290: FILE: drivers/mtd/mtdswap.c:251:
+		printk(KERN_WARNING "swpdev_write_cleanmarker(): Write failed for block at %08x: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/mtd/mtdswap.c:252:
+		printk(KERN_WARNING "swpdev_write_cleanmarker(): Write failed for block at %08x: error %d\n",
+				offset, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#295: FILE: drivers/mtd/mtdswap.c:256:
+		printk(KERN_WARNING "swpdev_write_cleanmarker(): Short write for block at %08x: %zd not %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/mtd/mtdswap.c:257:
+		printk(KERN_WARNING "swpdev_write_cleanmarker(): Short write for block at %08x: %zd not %d\n",
+				offset, ops.retlen, SWPDEV_OOBSIZE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#309: FILE: drivers/mtd/mtdswap.c:270:
+	/* if the count is < max, we try to write the counter to
+	   the 2nd page oob area */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#309: FILE: drivers/mtd/mtdswap.c:270:
+	   the 2nd page oob area */

ERROR:SPACING: space prohibited after that open parenthesis '('
#310: FILE: drivers/mtd/mtdswap.c:271:
+	if( ++eblk->bad_count < MAX_ERASE_FAILURES)

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: drivers/mtd/mtdswap.c:271:
+	if( ++eblk->bad_count < MAX_ERASE_FAILURES)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#317: FILE: drivers/mtd/mtdswap.c:278:
+	printk(KERN_WARNING "swpdev_write_badblock(): Marking bad block at %08x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'swpdev_write_badblock', this function's name, in a string
#317: FILE: drivers/mtd/mtdswap.c:278:
+	printk(KERN_WARNING "swpdev_write_badblock(): Marking bad block at %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/mtd/mtdswap.c:279:
+	printk(KERN_WARNING "swpdev_write_badblock(): Marking bad block at %08x\n",
+			offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#322: FILE: drivers/mtd/mtdswap.c:283:
+		printk(KERN_WARNING "swpdev_write_badblock(): Write failed for block at %08x: error %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'swpdev_write_badblock', this function's name, in a string
#322: FILE: drivers/mtd/mtdswap.c:283:
+		printk(KERN_WARNING "swpdev_write_badblock(): Write failed for block at %08x: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/mtd/mtdswap.c:284:
+		printk(KERN_WARNING "swpdev_write_badblock(): Write failed for block at %08x: error %d\n",
+				offset, ret);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: drivers/mtd/mtdswap.c:350:
+static struct swp_eblk * mtdswap_next_clean(struct mtdswp_dev *swpdev, int gc_context)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'swpdev->clean.rb_node == NULL'
#396: FILE: drivers/mtd/mtdswap.c:357:
+	if ((swpdev->clean.rb_node == NULL) && !gc_context) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!swpdev->clean.rb_node"
#396: FILE: drivers/mtd/mtdswap.c:357:
+	if ((swpdev->clean.rb_node == NULL) && !gc_context) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!swpdev->clean.rb_node"
#415: FILE: drivers/mtd/mtdswap.c:376:
+	if (swpdev->clean.rb_node == NULL) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#462: FILE: drivers/mtd/mtdswap.c:423:
+	} else if (weight > (maxweight/2)) {
 	                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: drivers/mtd/mtdswap.c:439:
+	wait_queue_head_t *wait_q = (wait_queue_head_t *)done->priv;
+	wake_up(wait_q);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#507: FILE: drivers/mtd/mtdswap.c:468:
+		printk (KERN_WARNING "mtdswap: erase of region [0x%x, 0x%x] "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: drivers/mtd/mtdswap.c:468:
+		printk (KERN_WARNING "mtdswap: erase of region [0x%x, 0x%x] "

WARNING:SPLIT_STRING: quoted string split across lines
#508: FILE: drivers/mtd/mtdswap.c:469:
+		printk (KERN_WARNING "mtdswap: erase of region [0x%x, 0x%x] "
+				     "on \"%s\" failed\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#523: FILE: drivers/mtd/mtdswap.c:484:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#536: FILE: drivers/mtd/mtdswap.c:497:
+		printk(KERN_ERR "Read Error: %d (block %ld)\n", ret, block);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#540: FILE: drivers/mtd/mtdswap.c:501:
+		printk(KERN_ERR "Short read: %d\n", retlen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#546: FILE: drivers/mtd/mtdswap.c:507:
+		printk(KERN_ERR "Write error: %d\n", newblock);

WARNING:TYPO_SPELLING: 'entires' may be misspelled - perhaps 'entries'?
#563: FILE: drivers/mtd/mtdswap.c:524:
+	TRACE("moving %d entires for block %d\n", active, EBLKADDR_TO_NUM(swpdev, eblk));
 	                 ^^^^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#584: FILE: drivers/mtd/mtdswap.c:545:
+			return ret;
+		else

CHECK:SPACING: No space is necessary after a cast
#592: FILE: drivers/mtd/mtdswap.c:553:
+	struct mtdswp_dev *swpdev = (struct mtdswp_dev *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#593: FILE: drivers/mtd/mtdswap.c:554:
+	struct mtdswp_dev *swpdev = (struct mtdswp_dev *) data;
+	wake_up(&swpdev->thread_wq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: drivers/mtd/mtdswap.c:565:
+           to deal with signals. We can't just call exit_sighand() since$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#604: FILE: drivers/mtd/mtdswap.c:565:
+	/* This isn't done by default since some kernel threads actually want
+           to deal with signals. We can't just call exit_sighand() since

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/mtd/mtdswap.c:566:
+           that'll cause an oops when we finally do exit. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#605: FILE: drivers/mtd/mtdswap.c:566:
+           that'll cause an oops when we finally do exit. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "swpdev->dirty.rb_node"
#625: FILE: drivers/mtd/mtdswap.c:586:
+		} else if (swpdev->dirty.rb_node != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "swpdev->used.rb_node"
#630: FILE: drivers/mtd/mtdswap.c:591:
+		} else if ((swpdev->used.rb_node != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "swpdev->high_frag.rb_node"
#638: FILE: drivers/mtd/mtdswap.c:599:
+		} else if (swpdev->high_frag.rb_node != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "swpdev->low_frag.rb_node"
#644: FILE: drivers/mtd/mtdswap.c:605:
+		} else if ((swpdev->low_frag.rb_node != NULL) && ((swpdev->clean_count < 5) ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#659: FILE: drivers/mtd/mtdswap.c:620:
+			printk(KERN_ERR "empty block returned error: %d, aborting.\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/mtd/mtdswap.c:636:
+		TRACE("Erasing block %d (active = %d)\n",
+				EBLKADDR_TO_NUM(swpdev, eblk),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#678: FILE: drivers/mtd/mtdswap.c:639:
+		BUG_ON(bitmap_weight(eblk->active, MAX_PAGES_PER_EB) != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'swpdev->clean_count == 0'
#705: FILE: drivers/mtd/mtdswap.c:666:
+	if ((swpdev->clean_count == 0) && !gc_context) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#719: FILE: drivers/mtd/mtdswap.c:680:
+			printk(KERN_ERR "too few free blocks!\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#723: FILE: drivers/mtd/mtdswap.c:684:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'swpdev->curr_write_pos == swpdev->pages_per_blk'
#727: FILE: drivers/mtd/mtdswap.c:688:
+	if ((swpdev->curr_write_pos == swpdev->pages_per_blk)
+			|| !swpdev->curr_write) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#728: FILE: drivers/mtd/mtdswap.c:689:
+	if ((swpdev->curr_write_pos == swpdev->pages_per_blk)
+			|| !swpdev->curr_write) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!swpdev->curr_write"
#738: FILE: drivers/mtd/mtdswap.c:699:
+	if (swpdev->curr_write == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#740: FILE: drivers/mtd/mtdswap.c:701:
+		printk(KERN_ERR "No space!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#790: FILE: drivers/mtd/mtdswap.c:751:
+		printk(KERN_ERR "Short write to MTD device: %d written\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/mtd/mtdswap.c:752:
+		printk(KERN_ERR "Short write to MTD device: %d written\n",
+				retlen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#797: FILE: drivers/mtd/mtdswap.c:758:
+		printk(KERN_ERR "Write to MTD device failed: %d (%d written)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: drivers/mtd/mtdswap.c:759:
+		printk(KERN_ERR "Write to MTD device failed: %d (%d written)\n",
+				ret, retlen);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#805: FILE: drivers/mtd/mtdswap.c:766:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: drivers/mtd/mtdswap.c:768:
+static int mtdswap_writesect(struct mtd_blktrans_dev *dev,
+			      unsigned long block, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: drivers/mtd/mtdswap.c:817:
+static int mtdswap_readsect(struct mtd_blktrans_dev *dev,
+			      unsigned long block, char *buf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#874: FILE: drivers/mtd/mtdswap.c:835:
+		printk(KERN_ERR "Page %ld (block %ld) accessed but not written to!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#875: FILE: drivers/mtd/mtdswap.c:836:
+		printk(KERN_ERR "Page %ld (block %ld) accessed but not written to!\n",
+			block, realblock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#884: FILE: drivers/mtd/mtdswap.c:845:
+		printk(KERN_ERR "Read error %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#889: FILE: drivers/mtd/mtdswap.c:850:
+		printk(KERN_ERR "Short read %d\n", retlen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#895: FILE: drivers/mtd/mtdswap.c:856:
+		printk(KERN_ERR "CRC mismatch for block %ld\n", block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/mtd/mtdswap.c:865:
+static int mtdswap_ioctl(struct mtd_blktrans_dev *dev, unsigned int cmd,
+				unsigned long arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: drivers/mtd/mtdswap.c:871:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/mtd/mtdswap.c:871:
+                {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#911: FILE: drivers/mtd/mtdswap.c:872:
+		unsigned long eblknum, offset,realblock, page = arg - 1;
 		                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: drivers/mtd/mtdswap.c:879:
+			TRACE("Marking %ld (block %ld) unused but hasn't been written to!\n",
+					page, realblock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#929: FILE: drivers/mtd/mtdswap.c:890:
+			printk(KERN_ERR "Page outside of page range accessed (%ld, %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/mtd/mtdswap.c:891:
+			printk(KERN_ERR "Page outside of page range accessed (%ld, %d)\n",
+					page, swpdev->pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#936: FILE: drivers/mtd/mtdswap.c:897:
+			TRACE("Marking %ld (block %ld) unused but hasn't been written to!\n",
+					page, realblock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#949: FILE: drivers/mtd/mtdswap.c:910:
+static ssize_t mtdswap_show_stats_item(char *name, int count,
+		struct rb_root *root, char *buf, int buflen)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "root->rb_node"
#953: FILE: drivers/mtd/mtdswap.c:914:
+	if (root->rb_node != NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#972: FILE: drivers/mtd/mtdswap.c:933:
+			&swpdev->used, page+len, PAGE_SIZE-len);
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#972: FILE: drivers/mtd/mtdswap.c:933:
+			&swpdev->used, page+len, PAGE_SIZE-len);
 			                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#974: FILE: drivers/mtd/mtdswap.c:935:
+			&swpdev->low_frag, page+len, PAGE_SIZE-len);
 			                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#974: FILE: drivers/mtd/mtdswap.c:935:
+			&swpdev->low_frag, page+len, PAGE_SIZE-len);
 			                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#976: FILE: drivers/mtd/mtdswap.c:937:
+			&swpdev->high_frag, page+len, PAGE_SIZE-len);
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#976: FILE: drivers/mtd/mtdswap.c:937:
+			&swpdev->high_frag, page+len, PAGE_SIZE-len);
 			                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#978: FILE: drivers/mtd/mtdswap.c:939:
+			&swpdev->dirty, page+len, PAGE_SIZE-len);
 			                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#978: FILE: drivers/mtd/mtdswap.c:939:
+			&swpdev->dirty, page+len, PAGE_SIZE-len);
 			                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#981: FILE: drivers/mtd/mtdswap.c:942:
+	len += snprintf(page+len, PAGE_SIZE-len, "\n");
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#981: FILE: drivers/mtd/mtdswap.c:942:
+	len += snprintf(page+len, PAGE_SIZE-len, "\n");
 	                                   ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#986: FILE: drivers/mtd/mtdswap.c:947:
+	.attr = {.name = "stat-mtdswap", .mode = S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1027: FILE: drivers/mtd/mtdswap.c:988:
+	swpdev->clean = swpdev->used = swpdev->low_frag = RB_ROOT;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1028: FILE: drivers/mtd/mtdswap.c:989:
+	swpdev->high_frag = swpdev->dirty = RB_ROOT;

CHECK:SPACING: No space is necessary after a cast
#1034: FILE: drivers/mtd/mtdswap.c:995:
+	swpdev->thread_timer.data = (unsigned long) swpdev;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1037: FILE: drivers/mtd/mtdswap.c:998:
+		printk(KERN_ERR "Error: Maximum of %d pages per eraseblock exceeded.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/mtd/mtdswap.c:999:
+		printk(KERN_ERR "Error: Maximum of %d pages per eraseblock exceeded.\n",
+				MAX_PAGES_PER_EB);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1043: FILE: drivers/mtd/mtdswap.c:1004:
+		printk(KERN_ERR "Error: mtd->writesize (%d) > PAGE_SIZE (%ld) unsupported\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: drivers/mtd/mtdswap.c:1005:
+		printk(KERN_ERR "Error: mtd->writesize (%d) > PAGE_SIZE (%ld) unsupported\n",
+				mtd->writesize, PAGE_SIZE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'oinfo->oobfree[0].length < SWPDEV_OOBSIZE'
#1050: FILE: drivers/mtd/mtdswap.c:1011:
+	if (!swpdev->mtd->oobsize || !oinfo
+			|| (oinfo->oobfree[0].length < SWPDEV_OOBSIZE))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1051: FILE: drivers/mtd/mtdswap.c:1012:
+	if (!swpdev->mtd->oobsize || !oinfo
+			|| (oinfo->oobfree[0].length < SWPDEV_OOBSIZE))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*swpdev->blk_data)...) over vmalloc(sizeof(struct swp_blk)...)
#1056: FILE: drivers/mtd/mtdswap.c:1017:
+	swpdev->blk_data = vmalloc(sizeof(struct swp_blk) * swpdev->pages);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*swpdev->eblk_data)...) over kzalloc(sizeof(struct swp_eblk)...)
#1060: FILE: drivers/mtd/mtdswap.c:1021:
+	swpdev->eblk_data = kzalloc(sizeof(struct swp_eblk) * swpdev->eblks, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1060: FILE: drivers/mtd/mtdswap.c:1021:
+	swpdev->eblk_data = kzalloc(sizeof(struct swp_eblk) * swpdev->eblks, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1109: FILE: drivers/mtd/mtdswap.c:1070:
+	printk(KERN_ERR "mtdswap init failed (%d)\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: drivers/mtd/mtdswap.c:1076:
+   ^ITRACE("mtdswap_release\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1115: FILE: drivers/mtd/mtdswap.c:1076:
+   ^ITRACE("mtdswap_release\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: drivers/mtd/mtdswap.c:1076:
+   ^ITRACE("mtdswap_release\n");$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1154: FILE: drivers/mtd/mtdswap.c:1115:
+		part = simple_strtoul(this_opt, &opt_end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mtd->index != part'
#1161: FILE: drivers/mtd/mtdswap.c:1122:
+	if ((part == -1) || (mtd->index != part) || (this_opt == opt_end))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'this_opt == opt_end'
#1161: FILE: drivers/mtd/mtdswap.c:1122:
+	if ((part == -1) || (mtd->index != part) || (this_opt == opt_end))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1164: FILE: drivers/mtd/mtdswap.c:1125:
+	printk(KERN_INFO "Enabling MTD swap on device %d\n", part);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct mtdswp_dev)...)
#1166: FILE: drivers/mtd/mtdswap.c:1127:
+	dev = kzalloc(sizeof(struct mtdswp_dev), GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1198: FILE: drivers/mtd/mtdswap.c:1159:
+^I.blksize ^I= PAGE_SIZE,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1223: FILE: drivers/mtd/mtdswap.c:1184:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1235: FILE: drivers/mtd/Kconfig:285:
+config MTD_SWAP
+        tristate "Swap on MTD device support"
+	depends on MTD && SWAP
+	select MTD_BLKDEVS
+	---help---
+	  This provides support for swap space on an mtd device.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000461460.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 57 warnings, 63 checks, 1207 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000461460.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
