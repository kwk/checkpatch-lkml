WARNING:TYPO_SPELLING: 'miscelaneous' may be misspelled - perhaps 'miscellaneous'?
#18: 
Subject: [PATCH 4/4] autofs4 - add miscelaneous device for ioctls
                                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#108: FILE: fs/autofs4/autofs_i.h:44:
+#define DPRINTK(fmt, args...)				\
+do {							\
+	printk(KERN_DEBUG "pid %d: %s: " fmt "\n",	\
+		current->pid, __func__, ##args);	\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#110: FILE: fs/autofs4/autofs_i.h:46:
+	printk(KERN_DEBUG "pid %d: %s: " fmt "\n",	\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#118: FILE: fs/autofs4/autofs_i.h:53:
+#define AUTOFS_WARN(fmt, args...)			\
+do {							\
+	printk(KERN_WARNING "pid %d: %s: " fmt "\n",	\
+		current->pid, __func__, ##args);	\
+} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#120: FILE: fs/autofs4/autofs_i.h:55:
+	printk(KERN_WARNING "pid %d: %s: " fmt "\n",	\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#124: FILE: fs/autofs4/autofs_i.h:59:
+#define AUTOFS_ERROR(fmt, args...)			\
+do {							\
+	printk(KERN_ERR "pid %d: %s: " fmt "\n",	\
+		current->pid, __func__, ##args);	\
+} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: fs/autofs4/autofs_i.h:61:
+	printk(KERN_ERR "pid %d: %s: " fmt "\n",	\

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#152: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: fs/autofs4/dev-ioctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:REPEATED_WORD: Possible repeated word: 'at'
#193: FILE: fs/autofs4/dev-ioctl.c:37:
+ * which have been left busy at at service shutdown.

CHECK:SPACING: No space is necessary after a cast
#214: FILE: fs/autofs4/dev-ioctl.c:58:
+	while ((void *) str <= end)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major'
#231: FILE: fs/autofs4/dev-ioctl.c:75:
+	if ((AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major) ||
+	    (AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor'
#231: FILE: fs/autofs4/dev-ioctl.c:75:
+	if ((AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major) ||
+	    (AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#231: FILE: fs/autofs4/dev-ioctl.c:75:
+	if ((AUTOFS_DEV_IOCTL_VERSION_MAJOR != param->ver_major) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#232: FILE: fs/autofs4/dev-ioctl.c:76:
+	    (AUTOFS_DEV_IOCTL_VERSION_MINOR < param->ver_minor)) {

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: fs/autofs4/dev-ioctl.c:78:
+		AUTOFS_WARN("ioctl control interface version mismatch: "
+		     "kernel(%u.%u), user(%u.%u), cmd(%d)",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:RETURN_VOID: void function return statements are not generally useful
#278: FILE: fs/autofs4/dev-ioctl.c:122:
+	return;
+}

WARNING:SPLIT_STRING: quoted string split across lines
#290: FILE: fs/autofs4/dev-ioctl.c:134:
+		AUTOFS_WARN("invalid device control module version "
+		     "supplied for cmd(0x%08x)", cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: fs/autofs4/dev-ioctl.c:147:
+		err = invalid_str(param->path,
+				 (void *) ((size_t) param + param->size));

CHECK:SPACING: No space is necessary after a cast
#303: FILE: fs/autofs4/dev-ioctl.c:147:
+				 (void *) ((size_t) param + param->size));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#354: FILE: fs/autofs4/dev-ioctl.c:198:
+static int autofs_dev_ioctl_find_super(struct nameidata *nd, dev_t devno)
                                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#395: FILE: fs/autofs4/dev-ioctl.c:239:
+static int autofs_dev_ioctl_find_sbi_type(struct nameidata *nd, unsigned int type)
                                                             ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#430: FILE: fs/autofs4/dev-ioctl.c:274:
+	BUG_ON(fdt->fd[fd] != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fdt->fd[fd]"
#430: FILE: fs/autofs4/dev-ioctl.c:274:
+	BUG_ON(fdt->fd[fd] != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#436: FILE: fs/autofs4/dev-ioctl.c:280:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#443: FILE: fs/autofs4/dev-ioctl.c:287:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#444: FILE: fs/autofs4/dev-ioctl.c:288:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#450: FILE: fs/autofs4/dev-ioctl.c:294:
+		err = path_lookup(path, LOOKUP_PARENT, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#459: FILE: fs/autofs4/dev-ioctl.c:303:
+		err = autofs_dev_ioctl_find_super(&nd, devid);
 		                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#461: FILE: fs/autofs4/dev-ioctl.c:305:
+			path_put(&nd.path);
 			          ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#465: FILE: fs/autofs4/dev-ioctl.c:309:
+		filp = dentry_open(nd.path.dentry, nd.path.mnt, O_RDONLY);
 		^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#465: FILE: fs/autofs4/dev-ioctl.c:309:
+		filp = dentry_open(nd.path.dentry, nd.path.mnt, O_RDONLY);
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#465: FILE: fs/autofs4/dev-ioctl.c:309:
+		filp = dentry_open(nd.path.dentry, nd.path.mnt, O_RDONLY);
 		                                   ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#466: FILE: fs/autofs4/dev-ioctl.c:310:
+		if (IS_ERR(filp)) {
 		           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#467: FILE: fs/autofs4/dev-ioctl.c:311:
+			err = PTR_ERR(filp);
 			              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#471: FILE: fs/autofs4/dev-ioctl.c:315:
+		autofs_dev_ioctl_fd_install(fd, filp);
 		                                ^^^^

CHECK:SPACING: No space is necessary after a cast
#529: FILE: fs/autofs4/dev-ioctl.c:373:
+	token = (autofs_wqt_t) param->arg1;

CHECK:SPACING: No space is necessary after a cast
#544: FILE: fs/autofs4/dev-ioctl.c:388:
+	token = (autofs_wqt_t) param->arg1;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#577: FILE: fs/autofs4/dev-ioctl.c:421:
+		return -EBUSY;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#579: FILE: fs/autofs4/dev-ioctl.c:423:
+		struct file *pipe = fget(pipefd);
+		if (!pipe->f_op || !pipe->f_op->write) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#632: FILE: fs/autofs4/dev-ioctl.c:476:
+	struct nameidata nd;
 	                 ^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#645: FILE: fs/autofs4/dev-ioctl.c:489:
+	param->arg1 = param->arg2 = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#648: FILE: fs/autofs4/dev-ioctl.c:492:
+	err = path_lookup(path, LOOKUP_PARENT, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#652: FILE: fs/autofs4/dev-ioctl.c:496:
+	err = autofs_dev_ioctl_find_super(&nd, devid);
 	                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#656: FILE: fs/autofs4/dev-ioctl.c:500:
+	ino = autofs4_dentry_ino(nd.path.dentry);
 	                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#659: FILE: fs/autofs4/dev-ioctl.c:503:
+		autofs4_expire_wait(nd.path.dentry);
 		                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#667: FILE: fs/autofs4/dev-ioctl.c:511:
+	path_put(&nd.path);
 	          ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#699: FILE: fs/autofs4/dev-ioctl.c:543:
+		 * little easier
+		*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#746: FILE: fs/autofs4/dev-ioctl.c:590:
+ * In both cases the the device number (as returned by

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#753: FILE: fs/autofs4/dev-ioctl.c:597:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#773: FILE: fs/autofs4/dev-ioctl.c:617:
+			err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 			                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#777: FILE: fs/autofs4/dev-ioctl.c:621:
+			sb = nd.path.dentry->d_sb;
 			     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#782: FILE: fs/autofs4/dev-ioctl.c:626:
+			err = path_lookup(path, LOOKUP_PARENT, &nd);
 			                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#786: FILE: fs/autofs4/dev-ioctl.c:630:
+			err = autofs_dev_ioctl_find_sbi_type(&nd, type);
 			                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#790: FILE: fs/autofs4/dev-ioctl.c:634:
+			ino = autofs4_dentry_ino(nd.path.dentry);
 			                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#795: FILE: fs/autofs4/dev-ioctl.c:639:
+		if (nd.path.dentry->d_inode &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#796: FILE: fs/autofs4/dev-ioctl.c:640:
+		    nd.path.mnt->mnt_root == nd.path.dentry) {
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#796: FILE: fs/autofs4/dev-ioctl.c:640:
+		    nd.path.mnt->mnt_root == nd.path.dentry) {
 		                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#798: FILE: fs/autofs4/dev-ioctl.c:642:
+			param->arg2 = nd.path.dentry->d_inode->i_sb->s_magic;
 			              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#803: FILE: fs/autofs4/dev-ioctl.c:647:
+		err = path_lookup(path, LOOKUP_PARENT, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#807: FILE: fs/autofs4/dev-ioctl.c:651:
+		err = autofs_dev_ioctl_find_super(&nd, devid);
 		                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#813: FILE: fs/autofs4/dev-ioctl.c:657:
+		err = have_submounts(nd.path.dentry);
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#815: FILE: fs/autofs4/dev-ioctl.c:659:
+		if (nd.path.mnt->mnt_mountpoint != nd.path.mnt->mnt_root) {
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#815: FILE: fs/autofs4/dev-ioctl.c:659:
+		if (nd.path.mnt->mnt_mountpoint != nd.path.mnt->mnt_root) {
 		                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#816: FILE: fs/autofs4/dev-ioctl.c:660:
+			if (follow_down(&nd.path.mnt, &nd.path.dentry)) {
 			                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#816: FILE: fs/autofs4/dev-ioctl.c:660:
+			if (follow_down(&nd.path.mnt, &nd.path.dentry)) {
 			                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#817: FILE: fs/autofs4/dev-ioctl.c:661:
+				struct inode *inode = nd.path.dentry->d_inode;
 				                      ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#818: FILE: fs/autofs4/dev-ioctl.c:662:
+				struct inode *inode = nd.path.dentry->d_inode;
+				param->arg2 = inode->i_sb->s_magic;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#824: FILE: fs/autofs4/dev-ioctl.c:668:
+	path_put(&nd.path);
 	          ^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#834: FILE: fs/autofs4/dev-ioctl.c:678:
+#define cmd_idx(cmd)	(cmd - _IOC_NR(AUTOFS_DEV_IOCTL_IOC_FIRST))

CHECK:SPACING: No space is necessary after a cast
#974: FILE: fs/autofs4/dev-ioctl.c:818:
+	err = _autofs_dev_ioctl(command, (struct autofs_dev_ioctl __user *) u);

WARNING:LINE_SPACING: Missing a blank line after declarations
#974: FILE: fs/autofs4/dev-ioctl.c:818:
+	int err;
+	err = _autofs_dev_ioctl(command, (struct autofs_dev_ioctl __user *) u);

CHECK:SPACING: No space is necessary after a cast
#975: FILE: fs/autofs4/dev-ioctl.c:819:
+	return (long) err;

CHECK:SPACING: No space is necessary after a cast
#981: FILE: fs/autofs4/dev-ioctl.c:825:
+	return (long) autofs_dev_ioctl(file, command, (ulong) compat_ptr(u));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#994: FILE: fs/autofs4/dev-ioctl.c:838:
+^I.minor ^I^I= MISC_DYNAMIC_MINOR,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#995: FILE: fs/autofs4/dev-ioctl.c:839:
+^I.name  ^I^I= AUTOFS_DEVICE_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#996: FILE: fs/autofs4/dev-ioctl.c:840:
+^I.fops  ^I^I= &_dev_ioctl_fops$

WARNING:RETURN_VOID: void function return statements are not generally useful
#1017: FILE: fs/autofs4/dev-ioctl.c:861:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1085: FILE: include/linux/auto_dev-ioctl.h:1:
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#1115: FILE: include/linux/auto_dev-ioctl.h:31:
+ * of the chunk of memory otherwise is is the size of the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1123: FILE: include/linux/auto_dev-ioctl.h:39:
+				 * including this struct */

WARNING:RETURN_VOID: void function return statements are not generally useful
#1141: FILE: include/linux/auto_dev-ioctl.h:57:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243449.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 68 warnings, 14 checks, 1143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243449.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
