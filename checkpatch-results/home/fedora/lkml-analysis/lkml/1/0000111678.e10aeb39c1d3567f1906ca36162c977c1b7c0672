WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
﻿﻿﻿﻿﻿When a root port receive the same errors more than once before kernel

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#52: FILE: drivers/pci/pcie/aer/aerdrv_core.c:151:
+		e_info->dev[e_info->error_dev_num ++] = dev;
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#54: FILE: drivers/pci/pcie/aer/aerdrv_core.c:153:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: drivers/pci/pcie/aer/aerdrv_core.c:205:
+^I * ^I1) nosourceid==y;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: drivers/pci/pcie/aer/aerdrv_core.c:206:
+^I * ^I2) bus id is equal to 0. Some ports might lose the bus$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: drivers/pci/pcie/aer/aerdrv_core.c:207:
+^I * ^I^Iid of error source id;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: drivers/pci/pcie/aer/aerdrv_core.c:208:
+^I * ^I3) There are multiple errors and prior id comparing fails;$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#139: FILE: drivers/pci/pcie/aer/aerdrv_core.c:257:
+	if (e_info->flags & AER_MULTI_ERROR_VALID_FLAG) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#141: FILE: drivers/pci/pcie/aer/aerdrv_core.c:259:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/pci/pcie/aer/aerdrv_core.c:742:
+static inline void aer_process_err_devices(struct pcie_device *p_device,
+			struct aer_err_info *e_info)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e_info->dev[0]"
#155: FILE: drivers/pci/pcie/aer/aerdrv_core.c:746:
+	if (e_info->dev[0] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#156: FILE: drivers/pci/pcie/aer/aerdrv_core.c:747:
+		printk(KERN_DEBUG "%s->can't find device of ID%04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/pci/pcie/aer/aerdrv_core.c:748:
+		printk(KERN_DEBUG "%s->can't find device of ID%04x\n",
+				__func__, e_info->id);

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#160: FILE: drivers/pci/pcie/aer/aerdrv_core.c:751:
+	for (i = 0; i < e_info->error_dev_num; i ++) {
 	                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e_info->dev[i]"
#161: FILE: drivers/pci/pcie/aer/aerdrv_core.c:752:
+		if (e_info->dev[i] == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/pci/pcie/aer/aerdrv_core.c:759:
+			handle_error_source(p_device,
+					e_info->dev[i],

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111678.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 7 checks, 157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111678.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
