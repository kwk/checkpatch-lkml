CHECK:CAMELCASE: Avoid CamelCase: <DramRange>
#55: FILE: drivers/edac/amd64_edac.c:2735:
+static int f10_match_to_this_node(struct amd64_pvt *pvt, int DramRange,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#56: FILE: drivers/edac/amd64_edac.c:2736:
+static int f10_match_to_this_node(struct amd64_pvt *pvt, int DramRange,
+				u64 SystemAddr,

CHECK:CAMELCASE: Avoid CamelCase: <SystemAddr>
#56: FILE: drivers/edac/amd64_edac.c:2736:
+				u64 SystemAddr,

CHECK:CAMELCASE: Avoid CamelCase: <CSFound>
#60: FILE: drivers/edac/amd64_edac.c:2740:
+	int CSFound = -1;

CHECK:CAMELCASE: Avoid CamelCase: <NodeID>
#61: FILE: drivers/edac/amd64_edac.c:2741:
+	int NodeID;

CHECK:CAMELCASE: Avoid CamelCase: <HiRangeSelected>
#62: FILE: drivers/edac/amd64_edac.c:2742:
+	int HiRangeSelected;

CHECK:CAMELCASE: Avoid CamelCase: <IntlvEn>
#63: FILE: drivers/edac/amd64_edac.c:2743:
+	u32 IntlvEn, IntlvSel;

CHECK:CAMELCASE: Avoid CamelCase: <IntlvSel>
#63: FILE: drivers/edac/amd64_edac.c:2743:
+	u32 IntlvEn, IntlvSel;

CHECK:CAMELCASE: Avoid CamelCase: <DramEn>
#64: FILE: drivers/edac/amd64_edac.c:2744:
+	u32 DramEn;

CHECK:CAMELCASE: Avoid CamelCase: <Ilog>
#65: FILE: drivers/edac/amd64_edac.c:2745:
+	u32 Ilog;

CHECK:CAMELCASE: Avoid CamelCase: <HoleOffset>
#66: FILE: drivers/edac/amd64_edac.c:2746:
+	u32 HoleOffset, HoleEn;

CHECK:CAMELCASE: Avoid CamelCase: <HoleEn>
#66: FILE: drivers/edac/amd64_edac.c:2746:
+	u32 HoleOffset, HoleEn;

CHECK:CAMELCASE: Avoid CamelCase: <InputAddr>
#67: FILE: drivers/edac/amd64_edac.c:2747:
+	u32 InputAddr, Temp;

CHECK:CAMELCASE: Avoid CamelCase: <Temp>
#67: FILE: drivers/edac/amd64_edac.c:2747:
+	u32 InputAddr, Temp;

CHECK:CAMELCASE: Avoid CamelCase: <DctSelBaseAddr>
#68: FILE: drivers/edac/amd64_edac.c:2748:
+	u32 DctSelBaseAddr, DctSelIntLvAddr;

CHECK:CAMELCASE: Avoid CamelCase: <DctSelIntLvAddr>
#68: FILE: drivers/edac/amd64_edac.c:2748:
+	u32 DctSelBaseAddr, DctSelIntLvAddr;

CHECK:CAMELCASE: Avoid CamelCase: <DctSelHi>
#69: FILE: drivers/edac/amd64_edac.c:2749:
+	u32 DctSelHi;

CHECK:CAMELCASE: Avoid CamelCase: <ChannelSelect>
#70: FILE: drivers/edac/amd64_edac.c:2750:
+	u32 ChannelSelect;

CHECK:CAMELCASE: Avoid CamelCase: <DramBaseLong>
#71: FILE: drivers/edac/amd64_edac.c:2751:
+	u64 DramBaseLong, DramLimitLong;

CHECK:CAMELCASE: Avoid CamelCase: <DramLimitLong>
#71: FILE: drivers/edac/amd64_edac.c:2751:
+	u64 DramBaseLong, DramLimitLong;

CHECK:CAMELCASE: Avoid CamelCase: <DctSelBaseOffsetLong>
#72: FILE: drivers/edac/amd64_edac.c:2752:
+	u64 DctSelBaseOffsetLong, ChannelAddrLong;

CHECK:CAMELCASE: Avoid CamelCase: <ChannelAddrLong>
#72: FILE: drivers/edac/amd64_edac.c:2752:
+	u64 DctSelBaseOffsetLong, ChannelAddrLong;

CHECK:CAMELCASE: Avoid CamelCase: <dram_IntlvEn>
#77: FILE: drivers/edac/amd64_edac.c:2757:
+	IntlvEn = pvt->dram_IntlvEn[DramRange];

CHECK:CAMELCASE: Avoid CamelCase: <dram_DstNode>
#81: FILE: drivers/edac/amd64_edac.c:2761:
+	NodeID = pvt->dram_DstNode[DramRange];

CHECK:CAMELCASE: Avoid CamelCase: <dram_IntlvSel>
#82: FILE: drivers/edac/amd64_edac.c:2762:
+	IntlvSel = pvt->dram_IntlvSel[DramRange];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/edac/amd64_edac.c:2775:
+	debugf1("   HoleOffset=0x%x  HoleEn=0x%x IntlvSel=0x%x\n",
+			HoleOffset, HoleEn, IntlvSel);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'IntlvEn == 0'
#97: FILE: drivers/edac/amd64_edac.c:2777:
+	if ((IntlvEn == 0) || IntlvSel == ((SystemAddr >> 12) & IntlvEn)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#98: FILE: drivers/edac/amd64_edac.c:2778:
+	if ((IntlvEn == 0) || IntlvSel == ((SystemAddr >> 12) & IntlvEn)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <f10_map_IntlvEn_to_shift>
#99: FILE: drivers/edac/amd64_edac.c:2779:
+		Ilog = f10_map_IntlvEn_to_shift(IntlvEn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: drivers/edac/amd64_edac.c:2789:
+		if (dct_high_range_enabled(pvt) &&
+		   !dct_ganging_enabled(pvt) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/edac/amd64_edac.c:2796:
+		ChannelSelect = f10_determine_channel(pvt, SystemAddr,
+						HiRangeSelected, IntlvEn);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#118: FILE: drivers/edac/amd64_edac.c:2798:
+		ChannelAddrLong = f10_determine_base_addr_offset(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/edac/amd64_edac.c:2815:
+		if (dct_interleave_enabled(pvt) &&
+		   !dct_high_range_enabled(pvt) &&

CHECK:BRACES: Unbalanced braces around else statement
#141: FILE: drivers/edac/amd64_edac.c:2821:
+			else {

WARNING:SPLIT_STRING: quoted string split across lines
#156: FILE: drivers/edac/amd64_edac.c:2836:
+		debugf1("   (ChannelAddrLong=0x%llx) >> 8 becomes "
+			"InputAddr=0x%x\n", ChannelAddrLong, InputAddr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/edac/amd64_edac.c:2842:
+		CSFound = f10_lookup_addr_in_dct(InputAddr,
+						NodeID, ChannelSelect);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/edac/amd64_edac.c:2854:
+static int f10_translate_sysaddr_to_CS(struct amd64_pvt *pvt,
+			u64 SysAddr,

CHECK:CAMELCASE: Avoid CamelCase: <SysAddr>
#174: FILE: drivers/edac/amd64_edac.c:2854:
+			u64 SysAddr,

CHECK:CAMELCASE: Avoid CamelCase: <chanSel>
#176: FILE: drivers/edac/amd64_edac.c:2856:
+			int *chanSel)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#183: FILE: drivers/edac/amd64_edac.c:2863:
+	for (DramRange = 0; DramRange < DRAM_REG_COUNT; DramRange++) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DramBaseLong <= SysAddr'
#190: FILE: drivers/edac/amd64_edac.c:2870:
+		if ((DramBaseLong <= SysAddr) && (SysAddr <= DramLimitLong)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SysAddr <= DramLimitLong'
#190: FILE: drivers/edac/amd64_edac.c:2870:
+		if ((DramBaseLong <= SysAddr) && (SysAddr <= DramLimitLong)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#191: FILE: drivers/edac/amd64_edac.c:2871:
+		if ((DramBaseLong <= SysAddr) && (SysAddr <= DramLimitLong)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/edac/amd64_edac.c:2873:
+			CSFound = f10_match_to_this_node(pvt,
+							DramRange, SysAddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/edac/amd64_edac.c:2894:
+static void f10_map_sysaddr_to_csrow(struct mem_ctl_info *mci,
+					struct amd64_error_info_regs *info,

CHECK:CAMELCASE: Avoid CamelCase: <SystemAddress>
#215: FILE: drivers/edac/amd64_edac.c:2895:
+					u64 SystemAddress)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/edac/amd64_edac.c:2905:
+	csrow = f10_translate_sysaddr_to_CS(pvt,
+					SystemAddress,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/edac/amd64_edac.c:2924:
+			edac_mc_handle_ce(mci, page, offset, syndrome,
+					csrow, chan, EDAC_MOD_STR);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#249: FILE: drivers/edac/amd64_edac.c:2929:
+			for (chan = 0; chan < mci->csrows[csrow].nr_channels;
[...]
+					edac_mc_handle_ce(mci, page, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/edac/amd64_edac.c:2932:
+					edac_mc_handle_ce(mci, page, offset,
+							syndrome,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#278: FILE: drivers/edac/amd64_edac.c:2958:
+		mega_bytes = ((128 << (revf_quad_ddr2_shift[index]-27)));
 		                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/edac/amd64_edac.c:2970:
+static void f10_debug_display_dimm_sizes(int ctrl,
+					struct amd64_pvt *pvt, int ganged)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/edac/amd64_edac.c:2979:
+	debugf1("  dbam%d: 0x%8.08x  CSROW is %s\n", ctrl,
+			ctrl ? pvt->dbam1 : pvt->dbam0,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#307: FILE: drivers/edac/amd64_edac.c:2987:
+	for (dimm = 0; dimm < 4; dimm++) {
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#309: FILE: drivers/edac/amd64_edac.c:2989:
+		if (dcsb[dimm*2] & K8_DCSB_CS_ENABLE)
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#313: FILE: drivers/edac/amd64_edac.c:2993:
+		if (dcsb[dimm*2 + 1] & K8_DCSB_CS_ENABLE)
 		             ^

WARNING:SPLIT_STRING: quoted string split across lines
#317: FILE: drivers/edac/amd64_edac.c:2997:
+		debugf1("     CTRL-%d DIMM-%d=%5dMB   CSROW-%d=%5dMB "
+				"CSROW-%d=%5dMB\n",

CHECK:CAMELCASE: Avoid CamelCase: <F10_DCHR_Ddr3Mode>
#346: FILE: drivers/edac/amd64_edac.c:3026:
+	if ((pvt->dchr0 & F10_DCHR_Ddr3Mode) ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#348: FILE: drivers/edac/amd64_edac.c:3028:
+	    (pvt->dchr1 & F10_DCHR_Ddr3Mode)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/edac/amd64_edac.c:3030:
+		amd64_printk(KERN_WARNING,
+			"%s() This machine is running with DDR3 memory. "

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: drivers/edac/amd64_edac.c:3031:
+			"%s() This machine is running with DDR3 memory. "
+			"This is not currently supported. "

WARNING:SPLIT_STRING: quoted string split across lines
#352: FILE: drivers/edac/amd64_edac.c:3032:
+			"This is not currently supported. "
+			"DCHR0=0x%x DCHR1=0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/edac/amd64_edac.c:3036:
+		amd64_printk(KERN_WARNING,
+			"   Contact '%s' module MAINTAINER to help add"

WARNING:SPLIT_STRING: quoted string split across lines
#357: FILE: drivers/edac/amd64_edac.c:3037:
+			"   Contact '%s' module MAINTAINER to help add"
+			" support.\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 58 checks, 322 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
