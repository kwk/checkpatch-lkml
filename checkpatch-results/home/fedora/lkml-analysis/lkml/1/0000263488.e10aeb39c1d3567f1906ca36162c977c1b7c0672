CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/gpio/gpiolib.c:341:
+static ssize_t gpio_notify_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/gpio/gpiolib.c:360:
+static ssize_t gpio_notify_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: drivers/gpio/gpiolib.c:363:
+	unsigned		gpio = desc - gpio_desc;

CHECK:BRACES: braces {} should be used on all arms of this statement
#194: FILE: drivers/gpio/gpiolib.c:369:
+	if (sysfs_streq(buf, "irq"))
[...]
+	else if (sysfs_streq(buf, "poll"))
[...]
+	else if (sysfs_streq(buf, "none"))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#200: FILE: drivers/gpio/gpiolib.c:375:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/gpio/gpiolib.c:389:
+			 * underlying hardware"? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#222: FILE: drivers/gpio/gpiolib.c:397:
+		 * irq handler.  How many devices don't support this..?? */

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_notify_show' to 'notify_show' 'gpio_notify_store' to 'notify_store'
#244: FILE: drivers/gpio/gpiolib.c:419:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/gpio/gpiolib.c:425:
+static ssize_t gpio_notify_interval_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/gpio/gpiolib.c:435:
+static ssize_t gpio_notify_interval_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#268: FILE: drivers/gpio/gpiolib.c:443:
+	status = strict_strtol(buf, 0, &value);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_notify_interval_show' to 'notify_interval_show' 'gpio_notify_interval_store' to 'notify_interval_store'
#286: FILE: drivers/gpio/gpiolib.c:461:
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/gpio/gpiolib.c:467:
+static ssize_t gpio_notify_filter_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/gpio/gpiolib.c:475:
+	if (test_bit(ASYNC_FALLING, &desc->flags) &&
+			test_bit(ASYNC_RISING, &desc->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/gpio/gpiolib.c:487:
+static ssize_t gpio_notify_filter_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

CHECK:BRACES: braces {} should be used on all arms of this statement
#319: FILE: drivers/gpio/gpiolib.c:494:
+	if (sysfs_streq(buf, "rising")) {
[...]
+	} else if (sysfs_streq(buf, "falling")) {
[...]
+	} else if (sysfs_streq(buf, "both")) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#328: FILE: drivers/gpio/gpiolib.c:503:
+	} else

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'gpio_notify_filter_show' to 'notify_filter_show' 'gpio_notify_filter_store' to 'notify_filter_store'
#333: FILE: drivers/gpio/gpiolib.c:508:
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263488.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 11 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263488.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
