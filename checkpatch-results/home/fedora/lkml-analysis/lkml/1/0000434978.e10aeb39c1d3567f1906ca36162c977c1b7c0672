WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: include/video/atmel_lcdc.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: include/video/atmel_lcdc.h:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: include/video/atmel_lcdc.h:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#85: FILE: include/video/atmel_lcdc.h:27:
+	spinlock_t		lock;

CHECK:BIT_MACRO: Prefer using the BIT macro
#127: FILE: include/video/atmel_lcdc.h:69:
+#define	ATMEL_LCDC_BYPASS	(1     <<  0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#135: FILE: include/video/atmel_lcdc.h:77:
+#define		ATMEL_LCDC_DISTYPE_STNCOLOR	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#137: FILE: include/video/atmel_lcdc.h:79:
+#define	ATMEL_LCDC_SCANMOD	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#139: FILE: include/video/atmel_lcdc.h:81:
+#define		ATMEL_LCDC_SCANMOD_DUAL		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#142: FILE: include/video/atmel_lcdc.h:84:
+#define		ATMEL_LCDC_IFWIDTH_8		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: include/video/atmel_lcdc.h:88:
+#define		ATMEL_LCDC_PIXELSIZE_2		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: include/video/atmel_lcdc.h:94:
+#define	ATMEL_LCDC_INVVD	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: include/video/atmel_lcdc.h:96:
+#define		ATMEL_LCDC_INVVD_INVERTED	(1 << 8)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#155: FILE: include/video/atmel_lcdc.h:97:
+#define	ATMEL_LCDC_INVFRAME	(1 << 9 )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: include/video/atmel_lcdc.h:97:
+#define	ATMEL_LCDC_INVFRAME	(1 << 9 )

CHECK:BIT_MACRO: Prefer using the BIT macro
#157: FILE: include/video/atmel_lcdc.h:99:
+#define		ATMEL_LCDC_INVFRAME_INVERTED	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: include/video/atmel_lcdc.h:100:
+#define	ATMEL_LCDC_INVLINE	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#160: FILE: include/video/atmel_lcdc.h:102:
+#define		ATMEL_LCDC_INVLINE_INVERTED	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#161: FILE: include/video/atmel_lcdc.h:103:
+#define	ATMEL_LCDC_INVCLK	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: include/video/atmel_lcdc.h:105:
+#define		ATMEL_LCDC_INVCLK_INVERTED	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#164: FILE: include/video/atmel_lcdc.h:106:
+#define	ATMEL_LCDC_INVDVAL	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: include/video/atmel_lcdc.h:108:
+#define		ATMEL_LCDC_INVDVAL_INVERTED	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: include/video/atmel_lcdc.h:109:
+#define	ATMEL_LCDC_CLKMOD	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#169: FILE: include/video/atmel_lcdc.h:111:
+#define		ATMEL_LCDC_CLKMOD_ALWAYSACTIVE	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#170: FILE: include/video/atmel_lcdc.h:112:
+#define	ATMEL_LCDC_MEMOR	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: include/video/atmel_lcdc.h:114:
+#define		ATMEL_LCDC_MEMOR_LITTLE		(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#218: FILE: include/video/atmel_lcdc.h:160:
+#define	ATMEL_LCDC_PWR		(1    <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#221: FILE: include/video/atmel_lcdc.h:163:
+#define	ATMEL_LCDC_BUSY		(1    << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#226: FILE: include/video/atmel_lcdc.h:168:
+#define		ATMEL_LCDC_PS_DIV2		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#229: FILE: include/video/atmel_lcdc.h:171:
+#define	ATMEL_LCDC_POL		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#231: FILE: include/video/atmel_lcdc.h:173:
+#define		ATMEL_LCDC_POL_POSITIVE		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#232: FILE: include/video/atmel_lcdc.h:174:
+#define	ATMEL_LCDC_ENA		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#234: FILE: include/video/atmel_lcdc.h:176:
+#define		ATMEL_LCDC_ENA_PWMENABLE	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#244: FILE: include/video/atmel_lcdc.h:186:
+#define	ATMEL_LCDC_LNI		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#245: FILE: include/video/atmel_lcdc.h:187:
+#define	ATMEL_LCDC_LSTLNI	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#246: FILE: include/video/atmel_lcdc.h:188:
+#define	ATMEL_LCDC_EOFI		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#247: FILE: include/video/atmel_lcdc.h:189:
+#define	ATMEL_LCDC_UFLWI	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#248: FILE: include/video/atmel_lcdc.h:190:
+#define	ATMEL_LCDC_OWRI		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: include/video/atmel_lcdc.h:191:
+#define	ATMEL_LCDC_MERI		(1 << 6)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#251: FILE: include/video/atmel_lcdc.h:193:
+#define ATMEL_LCDC_LUT(n)	(0x0c00 + ((n)*4))
                          	              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#259: FILE: drivers/video/atmel_lcdfb.c:1:
+/*

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#284: FILE: drivers/video/atmel_lcdfb.c:26:
+#define lcdc_readl(sinfo, reg)		__raw_readl((sinfo)->mmio+(reg))
                               		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#285: FILE: drivers/video/atmel_lcdfb.c:27:
+#define lcdc_writel(sinfo, reg, val)	__raw_writel((val), (sinfo)->mmio+(reg))
                                     	                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/video/atmel_lcdfb.c:43:
+static inline void atmel_lcdfb_update_dma2d(struct atmel_lcdfb_info *sinfo,
+					struct fb_var_screeninfo *var)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#303: FILE: drivers/video/atmel_lcdfb.c:45:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#304: FILE: drivers/video/atmel_lcdfb.c:46:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#330: FILE: drivers/video/atmel_lcdfb.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: drivers/video/atmel_lcdfb.c:102:
+static void atmel_lcdfb_update_dma(struct fb_info *info,
+			       struct fb_var_screeninfo *var)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: drivers/video/atmel_lcdfb.c:124:
+	dma_free_writecombine(info->device, info->fix.smem_len,
+				info->screen_base, info->fix.smem_start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: drivers/video/atmel_lcdfb.c:140:
+	info->screen_base = dma_alloc_writecombine(info->device, info->fix.smem_len,
+					(dma_addr_t *)&info->fix.smem_start, GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#400: FILE: drivers/video/atmel_lcdfb.c:142:
+	if (!info->screen_base) {
+		return -ENOMEM;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: drivers/video/atmel_lcdfb.c:173:
+static int atmel_lcdfb_check_var(struct fb_var_screeninfo *var,
+			     struct fb_info *info)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#439: FILE: drivers/video/atmel_lcdfb.c:181:
+	dev_dbg(dev, "%s:\n", __func__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#454: FILE: drivers/video/atmel_lcdfb.c:196:
+	var->red.msb_right = var->green.msb_right = var->blue.msb_right = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#456: FILE: drivers/video/atmel_lcdfb.c:198:
+	var->transp.offset = var->transp.length = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#457: FILE: drivers/video/atmel_lcdfb.c:199:
+	var->xoffset = var->yoffset = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#463: FILE: drivers/video/atmel_lcdfb.c:205:
+		var->red.offset = var->green.offset = var->blue.offset = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#464: FILE: drivers/video/atmel_lcdfb.c:206:
+		var->red.length = var->green.length = var->blue.length

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#465: FILE: drivers/video/atmel_lcdfb.c:207:
+		var->red.length = var->green.length = var->blue.length
+			= var->bits_per_pixel;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#472: FILE: drivers/video/atmel_lcdfb.c:214:
+		var->red.length = var->green.length = var->blue.length = 5;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#479: FILE: drivers/video/atmel_lcdfb.c:221:
+		var->red.length = var->green.length = var->blue.length = 8;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/video/atmel_lcdfb.c:225:
+		dev_err(dev, "color depth %d not supported\n",
+					var->bits_per_pixel);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#510: FILE: drivers/video/atmel_lcdfb.c:252:
+	dev_dbg(info->device, "%s:\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/video/atmel_lcdfb.c:254:
+	dev_dbg(info->device, "  * resolution: %ux%u (%ux%u virtual)\n",
+		 info->var.xres, info->var.yres,

CHECK:BRACES: braces {} should be used on all arms of this statement
#548: FILE: drivers/video/atmel_lcdfb.c:290:
+	if (value <= 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#551: FILE: drivers/video/atmel_lcdfb.c:293:
+	} else

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#562: FILE: drivers/video/atmel_lcdfb.c:304:
+	switch (info->var.bits_per_pixel) {
+		case 1:	value |= ATMEL_LCDC_PIXELSIZE_1; break;
+		case 2: value |= ATMEL_LCDC_PIXELSIZE_2; break;
+		case 4: value |= ATMEL_LCDC_PIXELSIZE_4; break;
+		case 8: value |= ATMEL_LCDC_PIXELSIZE_8; break;
+		case 15: /* fall through */
+		case 16: value |= ATMEL_LCDC_PIXELSIZE_16; break;
+		case 24: value |= ATMEL_LCDC_PIXELSIZE_24; break;
+		case 32: value |= ATMEL_LCDC_PIXELSIZE_32; break;
+		default: BUG(); break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#563: FILE: drivers/video/atmel_lcdfb.c:305:
+		case 1:	value |= ATMEL_LCDC_PIXELSIZE_1; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#564: FILE: drivers/video/atmel_lcdfb.c:306:
+		case 2: value |= ATMEL_LCDC_PIXELSIZE_2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#565: FILE: drivers/video/atmel_lcdfb.c:307:
+		case 4: value |= ATMEL_LCDC_PIXELSIZE_4; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#566: FILE: drivers/video/atmel_lcdfb.c:308:
+		case 8: value |= ATMEL_LCDC_PIXELSIZE_8; break;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#567: FILE: drivers/video/atmel_lcdfb.c:309:
+		case 15: /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#568: FILE: drivers/video/atmel_lcdfb.c:310:
+		case 16: value |= ATMEL_LCDC_PIXELSIZE_16; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#569: FILE: drivers/video/atmel_lcdfb.c:311:
+		case 24: value |= ATMEL_LCDC_PIXELSIZE_24; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#570: FILE: drivers/video/atmel_lcdfb.c:312:
+		case 32: value |= ATMEL_LCDC_PIXELSIZE_32; break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#571: FILE: drivers/video/atmel_lcdfb.c:313:
+		default: BUG(); break;

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#571: FILE: drivers/video/atmel_lcdfb.c:313:
+		default: BUG(); break;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#611: FILE: drivers/video/atmel_lcdfb.c:353:
+		msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: drivers/video/atmel_lcdfb.c:361:
+	lcdc_writel(sinfo, ATMEL_LCDC_PWRCON,
+		(sinfo->guard_time << ATMEL_LCDC_GUARDT_OFFSET) | ATMEL_LCDC_PWR);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#634: FILE: drivers/video/atmel_lcdfb.c:376:
+ *  ^Iatmel_lcdfb_setcolreg - Optional function. Sets a color register.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#642: FILE: drivers/video/atmel_lcdfb.c:384:
+ *  ^ISet a single color register. The values supplied have a 16 bit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#643: FILE: drivers/video/atmel_lcdfb.c:385:
+ *  ^Imagnitude which needs to be scaled in this function for the hardware.$

WARNING:TYPO_SPELLING: 'psuedo' may be misspelled - perhaps 'pseudo'?
#646: FILE: drivers/video/atmel_lcdfb.c:388:
+ *	no color palettes are supported. Here a psuedo palette is created
   	                                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/video/atmel_lcdfb.c:401:
+static int atmel_lcdfb_setcolreg(unsigned int regno, unsigned int red,
+			     unsigned int green, unsigned int blue,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#668: FILE: drivers/video/atmel_lcdfb.c:410:
+		red = green = blue = (19595 * red + 38470 * green

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: drivers/video/atmel_lcdfb.c:448:
+static int atmel_lcdfb_pan_display(struct fb_var_screeninfo *var,
+			       struct fb_info *info)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#708: FILE: drivers/video/atmel_lcdfb.c:450:
+	dev_dbg(info->device, "%s\n", __func__);

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#715: FILE: drivers/video/atmel_lcdfb.c:457:
+static struct fb_ops atmel_lcdfb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/video/atmel_lcdfb.c:488:
+	dev_info(info->device,
+	       "%luKiB frame buffer at %08lx (mapped at %p)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#773: FILE: drivers/video/atmel_lcdfb.c:515:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#784: FILE: drivers/video/atmel_lcdfb.c:526:
+	dev_dbg(dev, "%s BEGIN\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: drivers/video/atmel_lcdfb.c:576:
+	ret = fb_find_mode(&info->var, info, NULL, info->monspecs.modedb,
+			info->monspecs.modedb_len, info->monspecs.modedb,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#841: FILE: drivers/video/atmel_lcdfb.c:583:
+
+

WARNING:TYPO_SPELLING: 'alocate' may be misspelled - perhaps 'allocate'?
#872: FILE: drivers/video/atmel_lcdfb.c:614:
+		/* alocate memory buffer */
 		   ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: drivers/video/atmel_lcdfb.c:679:
+	dev_info(dev, "fb%d: Atmel LCDC at 0x%08lx (mapped at %p), irq %lu\n",
+		       info->node, info->fix.mmio_start, sinfo->mmio, sinfo->irq_base);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#941: FILE: drivers/video/atmel_lcdfb.c:683:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: drivers/video/atmel_lcdfb.c:691:
+ ^Irelease_mem_region(info->fix.mmio_start, info->fix.mmio_len);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#949: FILE: drivers/video/atmel_lcdfb.c:691:
+ ^Irelease_mem_region(info->fix.mmio_start, info->fix.mmio_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/video/atmel_lcdfb.c:691:
+ ^Irelease_mem_region(info->fix.mmio_start, info->fix.mmio_len);$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#951: FILE: drivers/video/atmel_lcdfb.c:693:
+	if (map) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#958: FILE: drivers/video/atmel_lcdfb.c:700:
+	if (map) {
+		release_mem_region(info->fix.smem_start, info->fix.smem_len);
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: drivers/video/atmel_lcdfb.c:735:
+ ^Irelease_mem_region(info->fix.mmio_start, info->fix.mmio_len);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#993: FILE: drivers/video/atmel_lcdfb.c:735:
+ ^Irelease_mem_region(info->fix.mmio_start, info->fix.mmio_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: drivers/video/atmel_lcdfb.c:735:
+ ^Irelease_mem_region(info->fix.mmio_start, info->fix.mmio_len);$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1039: FILE: drivers/video/Kconfig:677:
+config FB_ATMEL
+	tristate "AT91/AT32 LCD Controller support"
+	depends on FB && (ARCH_AT91SAM9261 || ARCH_AT91SAM9263 || AVR32)
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	help
+	  This enables support for the AT91/AT32 LCD Controller.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1048: FILE: drivers/video/Kconfig:686:
+config FB_INTSRAM
+	bool "Frame Buffer in internal SRAM"
+	depends on FB_ATMEL && ARCH_AT91SAM9261
+	help
+	  Say Y if you want to map Frame Buffer in internal SRAM. Say N if you want
+	  to let frame buffer in external SDRAM.
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 24 warnings, 67 checks, 996 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
