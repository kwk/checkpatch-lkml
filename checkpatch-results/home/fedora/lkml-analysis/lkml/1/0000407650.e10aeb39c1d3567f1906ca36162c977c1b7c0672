ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: arch/i386/boot/Makefile:51:
+cflags-i386   := $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#231: FILE: arch/i386/boot/tools/build.c:50:
+u8 buf[SETUP_SECT_MAX*512];
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: arch/i386/boot/tools/build.c:53:
+static void die(const char * str, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'argc < 3'
#274: FILE: arch/i386/boot/tools/build.c:83:
+	if ((argc < 3) || (argc > 4))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'argc > 4'
#274: FILE: arch/i386/boot/tools/build.c:83:
+	if ((argc < 3) || (argc > 4))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#321: FILE: arch/i386/boot/tools/build.c:127:
+	i = setup_sectors*512;
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#322: FILE: arch/i386/boot/tools/build.c:128:
+	memset(buf+c, 0, i-c);
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#322: FILE: arch/i386/boot/tools/build.c:128:
+	memset(buf+c, 0, i-c);
 	                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: arch/i386/boot/tools/build.c:143:
+	fprintf (stderr, "System is %d kB\n", (sz+1023)/1024);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#367: FILE: arch/i386/boot/tools/build.c:143:
+	fprintf (stderr, "System is %d kB\n", (sz+1023)/1024);
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#367: FILE: arch/i386/boot/tools/build.c:143:
+	fprintf (stderr, "System is %d kB\n", (sz+1023)/1024);
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#390: FILE: arch/i386/boot/tools/build.c:152:
+	buf[0x1f1] = setup_sectors-1;
 	                          ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 1 warnings, 9 checks, 329 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
