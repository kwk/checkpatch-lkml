WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
 drivers/ide/ide-disk.c                  |  382 +++++-------------------------

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#152: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#262: FILE: drivers/ide/Kconfig:98:
+config IDE_GD_ATA
+	bool "ATA disk support"
+	depends on IDE_GD
+	default y
+	help
+	  This will include support for ATA hard disks.
 
 	  If unsure, say Y.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'MKE' may be misspelled - perhaps 'MAKE'?
#277: FILE: drivers/ide/Kconfig:113:
+	  (i.e. Iomega ZIP or MKE LS-120).
 	                      ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#424: FILE: drivers/ide/ide-cd.c:343:
 	ide_debug_log(IDE_DBG_RQ, "%s: stat: 0x%x, good_stat: 0x%x, "
+		      "rq->cmd[0]: 0x%x, rq->cmd_type: 0x%x, err: 0x%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: drivers/ide/ide-cd.c:1178:
+	ide_debug_log(IDE_DBG_RQ, "Call %s, rq->cmd[0]: 0x%x, write: 0x%x, "
+		      "secs_per_frame: %u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#472: FILE: drivers/ide/ide-cd.c:1223:
+	ide_debug_log(IDE_DBG_PC, "Call %s, rq->cmd[0]: 0x%x, "
+		      "rq->cmd_type: 0x%x\n", __func__, rq->cmd[0],

WARNING:SPLIT_STRING: quoted string split across lines
#493: FILE: drivers/ide/ide-cd.c:1267:
+	ide_debug_log(IDE_DBG_RQ, "Call %s, rq->cmd[0]: 0x%x, "
+		      "rq->cmd_type: 0x%x, block: %llu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#692: FILE: drivers/ide/ide-disk.c:369:
+		printk(KERN_WARNING "%s: cannot use LBA48 - full capacity "

WARNING:SPLIT_STRING: quoted string split across lines
#693: FILE: drivers/ide/ide-disk.c:370:
+		printk(KERN_WARNING "%s: cannot use LBA48 - full capacity "
+		       "%llu sectors (%llu MB)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#701: FILE: drivers/ide/ide-disk.c:378:
+		if (drive->capacity64 > 1ULL << 28) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#702: FILE: drivers/ide/ide-disk.c:379:
+			printk(KERN_INFO "%s: cannot use LBA48 DMA - PIO mode"

WARNING:SPLIT_STRING: quoted string split across lines
#703: FILE: drivers/ide/ide-disk.c:380:
+			printk(KERN_INFO "%s: cannot use LBA48 DMA - PIO mode"
+					 " will be used for accessing sectors "

WARNING:SPLIT_STRING: quoted string split across lines
#704: FILE: drivers/ide/ide-disk.c:381:
+					 " will be used for accessing sectors "
+					 "> %u\n", drive->name, 1 << 28);

CHECK:BRACES: Unbalanced braces around else statement
#705: FILE: drivers/ide/ide-disk.c:382:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#779: FILE: drivers/ide/ide-disk.c:685:
+		printk(KERN_ERR "%s: invalid geometry: %d physical heads?\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: drivers/ide/ide-disk.c:686:
+		printk(KERN_ERR "%s: invalid geometry: %d physical heads?\n",
+			drive->name, drive->head);

CHECK:BRACES: Unbalanced braces around else statement
#782: FILE: drivers/ide/ide-disk.c:688:
+	} else

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1113: FILE: drivers/ide/ide-disk.h:16:
+int ide_disk_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1113: FILE: drivers/ide/ide-disk.h:16:
+int ide_disk_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1113: FILE: drivers/ide/ide-disk.h:16:
+int ide_disk_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1113: FILE: drivers/ide/ide-disk.h:16:
+int ide_disk_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1113: FILE: drivers/ide/ide-disk.h:16:
+int ide_disk_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1247: FILE: drivers/ide/ide-floppy.c:71:
+static int ide_floppy_end_request(ide_drive_t *drive, int uptodate, int nsecs)
                                                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1274: FILE: drivers/ide/ide-floppy.c:154:
+	ide_floppy_end_request(drive, uptodate, 0);
 	                              ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1306: FILE: drivers/ide/ide-floppy.c:265:
+static void idefloppy_blockpc_cmd(struct ide_disk_obj *floppy,
 		struct ide_atapi_pc *pc, struct request *rq)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1769: FILE: drivers/ide/ide-floppy.h:26:
+int ide_floppy_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1769: FILE: drivers/ide/ide-floppy.h:26:
+int ide_floppy_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1769: FILE: drivers/ide/ide-floppy.h:26:
+int ide_floppy_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1769: FILE: drivers/ide/ide-floppy.h:26:
+int ide_floppy_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1769: FILE: drivers/ide/ide-floppy.h:26:
+int ide_floppy_ioctl(ide_drive_t *, struct inode *, struct file *, unsigned int,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1888: FILE: drivers/ide/ide-gd.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#1899: FILE: drivers/ide/ide-gd.c:12:
+#define IDE_DISK_MINORS		(1 << PARTN_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'reinitilized' may be misspelled - perhaps 'reinitialized'?
#1979: FILE: drivers/ide/ide-gd.c:92:
+ * reinitilized on resume otherwise the disk
    ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1992: FILE: drivers/ide/ide-gd.c:105:
+	/* On Alpha, halt(8) doesn't actually turn the machine off,
+	   it puts you into the sort of firmware monitor. Typically,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2001: FILE: drivers/ide/ide-gd.c:114:
+	   the disk to expire its write cache. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2010: FILE: drivers/ide/ide-gd.c:123:
+	printk(KERN_INFO "Shutdown: %s\n", drive->name);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2034: FILE: drivers/ide/ide-gd.c:147:
+static int ide_gd_end_request(ide_drive_t *drive, int uptodate, int nrsecs)
                                                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2036: FILE: drivers/ide/ide-gd.c:149:
+	return drive->disk_ops->end_request(drive, uptodate, nrsecs);
 	                                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2059: FILE: drivers/ide/ide-gd.c:172:
+static int ide_gd_open(struct inode *inode, struct file *filp)
                                                          ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idkp"
#2067: FILE: drivers/ide/ide-gd.c:180:
+	if (idkp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2117: FILE: drivers/ide/ide-gd.c:230:
+static int ide_gd_release(struct inode *inode, struct file *filp)
                                                             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2172: FILE: drivers/ide/ide-gd.c:285:
+	struct ide_disk_obj *idkp = ide_drv_g(disk, ide_disk_obj);
+	set_capacity(disk, ide_gd_capacity(idkp->drive));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2177: FILE: drivers/ide/ide-gd.c:290:
+static int ide_gd_ioctl(struct inode *inode, struct file *file,
+			     unsigned int cmd, unsigned long arg)

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#2186: FILE: drivers/ide/ide-gd.c:299:
+static struct block_device_operations ide_gd_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disk_ops"
#2214: FILE: drivers/ide/ide-gd.c:327:
+	if (disk_ops == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2218: FILE: drivers/ide/ide-gd.c:331:
+		printk(KERN_ERR PFX "%s: not supported by this driver\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2219: FILE: drivers/ide/ide-gd.c:332:
+		printk(KERN_ERR PFX "%s: not supported by this driver\n",
+			drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2225: FILE: drivers/ide/ide-gd.c:338:
+		printk(KERN_ERR PFX "%s: can't allocate a disk structure\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2225: FILE: drivers/ide/ide-gd.c:338:
+	if (!idkp) {
+		printk(KERN_ERR PFX "%s: can't allocate a disk structure\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2226: FILE: drivers/ide/ide-gd.c:339:
+		printk(KERN_ERR PFX "%s: can't allocate a disk structure\n",
+			drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2269: FILE: drivers/ide/ide-gd.c:382:
+	printk(KERN_INFO DRV_NAME " driver " IDE_GD_VERSION "\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2292: FILE: drivers/ide/ide-gd.h:1:
+#ifndef __IDE_GD_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#2333: FILE: drivers/ide/ide-gd.h:42:
+sector_t ide_gd_capacity(ide_drive_t *);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2471: FILE: drivers/ide/pci/delkin_cb.c:72:
 static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2534: FILE: drivers/ide/pci/delkin_cb.c:160:
 static struct pci_device_id delkin_cb_pci_tbl[] __devinitdata = {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2778: FILE: drivers/ide/pci/hpt366.c:754:
+	if (info->chip_type >= HPT370) {
[...]
+			pci_write_config_byte(dev, 0x5a, scr1);
[...]
-	} else
[...]

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2802: FILE: drivers/ide/pci/hpt366.c:1288:
 static void __devinit init_hwif_hpt366(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2830: FILE: drivers/ide/pci/scc_pata.c:842:
 static void __devinit init_hwif_scc(ide_hwif_t *hwif)

CHECK:SPACING: No space is necessary after a cast
#2872: FILE: drivers/ide/pci/sgiioc4.c:305:
+		unsigned int intr_reg = (u32) readl((void __iomem *) other_ir);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#2881: FILE: drivers/ide/pci/sgiioc4.c:309:
+			writel(0x03, (void __iomem *) other_ir);

CHECK:SPACING: No space is necessary after a cast
#2882: FILE: drivers/ide/pci/sgiioc4.c:310:
+			intr_reg = (u32) readl((void __iomem *) other_ir);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2958: FILE: drivers/scsi/ide-scsi.c:347:
+	{ "capacity", S_IFREG|S_IRUGO, proc_ide_read_capacity, NULL },
 	                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2958: FILE: drivers/scsi/ide-scsi.c:347:
+	{ "capacity", S_IFREG|S_IRUGO, proc_ide_read_capacity, NULL },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3074: FILE: include/linux/ide.h:467:
+	int		(*check)(struct ide_drive_s *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#3074: FILE: include/linux/ide.h:467:
+	int		(*check)(struct ide_drive_s *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3075: FILE: include/linux/ide.h:468:
+	int		(*get_capacity)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3076: FILE: include/linux/ide.h:469:
+	void		(*setup)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3077: FILE: include/linux/ide.h:470:
+	void		(*flush)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3078: FILE: include/linux/ide.h:471:
+	int		(*init_media)(struct ide_drive_s *, struct gendisk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#3078: FILE: include/linux/ide.h:471:
+	int		(*init_media)(struct ide_drive_s *, struct gendisk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3079: FILE: include/linux/ide.h:472:
+	int		(*set_doorlock)(struct ide_drive_s *, struct gendisk *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#3079: FILE: include/linux/ide.h:472:
+	int		(*set_doorlock)(struct ide_drive_s *, struct gendisk *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3079: FILE: include/linux/ide.h:472:
+	int		(*set_doorlock)(struct ide_drive_s *, struct gendisk *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3081: FILE: include/linux/ide.h:474:
+	ide_startstop_t	(*do_request)(struct ide_drive_s *, struct request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#3081: FILE: include/linux/ide.h:474:
+	ide_startstop_t	(*do_request)(struct ide_drive_s *, struct request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#3081: FILE: include/linux/ide.h:474:
+	ide_startstop_t	(*do_request)(struct ide_drive_s *, struct request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3083: FILE: include/linux/ide.h:476:
+	int		(*end_request)(struct ide_drive_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3083: FILE: include/linux/ide.h:476:
+	int		(*end_request)(struct ide_drive_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3083: FILE: include/linux/ide.h:476:
+	int		(*end_request)(struct ide_drive_s *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#3084: FILE: include/linux/ide.h:477:
+	int		(*ioctl)(struct ide_drive_s *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#3084: FILE: include/linux/ide.h:477:
+	int		(*ioctl)(struct ide_drive_s *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#3084: FILE: include/linux/ide.h:477:
+	int		(*ioctl)(struct ide_drive_s *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#3084: FILE: include/linux/ide.h:477:
+	int		(*ioctl)(struct ide_drive_s *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#3084: FILE: include/linux/ide.h:477:
+	int		(*ioctl)(struct ide_drive_s *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#3141: FILE: include/linux/ide.h:1143:
+	const struct ide_proc_devset *	(*proc_devsets)(ide_drive_t *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215634.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 70 warnings, 16 checks, 2328 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215634.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
