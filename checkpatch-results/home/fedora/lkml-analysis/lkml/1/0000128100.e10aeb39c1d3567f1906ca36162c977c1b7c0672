WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#53: 
Signed-off-by:  Joseph Cihula <joseph.cihula@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#54: 
Signed-off-by:  Shane Wang <shane.wang@intel.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#55: 
Signed-off-by:  Gang Wei <gang.wei@intel.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: arch/x86/include/asm/tboot.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: arch/x86/include/asm/tboot.h:18:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: arch/x86/include/asm/tboot.h:19:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#131: FILE: arch/x86/include/asm/tboot.h:43:
+} __attribute__ ((__packed__));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/x86/include/asm/tboot.h:51:
+  u64  start;         /* must be 64 byte -aligned */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/x86/include/asm/tboot.h:52:
+  u32  size;          /* must be 64 byte -granular */$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#141: FILE: arch/x86/include/asm/tboot.h:53:
+} __attribute__ ((__packed__));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/x86/include/asm/tboot.h:57:
+  u8  space_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/x86/include/asm/tboot.h:58:
+  u8  bit_width;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/x86/include/asm/tboot.h:59:
+  u8  bit_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/x86/include/asm/tboot.h:60:
+  u8  access_width;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/x86/include/asm/tboot.h:61:
+  u64 address;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#150: FILE: arch/x86/include/asm/tboot.h:62:
+} __attribute__ ((__packed__));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#153: FILE: arch/x86/include/asm/tboot.h:65:
+/* combines Sx info from FADT and FACS tables per ACPI 2.0+ spec
+   (http://www.acpi.info/) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: arch/x86/include/asm/tboot.h:65:
+   (http://www.acpi.info/) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/x86/include/asm/tboot.h:67:
+  struct tboot_acpi_generic_address pm1a_cnt_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/x86/include/asm/tboot.h:68:
+  struct tboot_acpi_generic_address pm1b_cnt_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/x86/include/asm/tboot.h:69:
+  struct tboot_acpi_generic_address pm1a_evt_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/x86/include/asm/tboot.h:70:
+  struct tboot_acpi_generic_address pm1b_evt_blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/x86/include/asm/tboot.h:71:
+  u16 pm1a_cnt_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/x86/include/asm/tboot.h:72:
+  u16 pm1b_cnt_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/x86/include/asm/tboot.h:73:
+  u64 wakeup_vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/x86/include/asm/tboot.h:74:
+  u32 vector_width;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/x86/include/asm/tboot.h:75:
+  u64 kernel_s3_resume_vector;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#164: FILE: arch/x86/include/asm/tboot.h:76:
+} __attribute__ ((__packed__));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: arch/x86/include/asm/tboot.h:81:
+^Iu32  version;      ^I/* Version number: 5 is current */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: arch/x86/include/asm/tboot.h:82:
+^Iu32  log_addr;     ^I/* physical addr of tb_log_t log */$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#186: FILE: arch/x86/include/asm/tboot.h:98:
+} __attribute__ ((__packed__));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tboot_shared"
#198: FILE: arch/x86/include/asm/tboot.h:110:
+	return tboot_shared != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: arch/x86/include/asm/tboot.h:113:
+extern void tboot_probe(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: arch/x86/include/asm/tboot.h:114:
+extern void tboot_create_trampoline(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: arch/x86/include/asm/tboot.h:115:
+extern void tboot_shutdown(u32 shutdown_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: arch/x86/include/asm/tboot.h:116:
+extern void tboot_sleep(u8 sleep_state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: arch/x86/include/asm/tboot.h:117:
+extern void tboot_wait_for_aps(int num_aps);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: arch/x86/include/asm/tboot.h:118:
+extern struct acpi_table_header *tboot_get_dmar_table(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#357: FILE: arch/x86/kernel/tboot.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#373: FILE: arch/x86/kernel/tboot.c:17:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#374: FILE: arch/x86/kernel/tboot.c:18:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#384: FILE: arch/x86/kernel/tboot.c:28:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#386: FILE: arch/x86/kernel/tboot.c:30:
+#include <asm/processor.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#389: FILE: arch/x86/kernel/tboot.c:33:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#402: FILE: arch/x86/kernel/tboot.c:46:
+	/* also verify that it is mapped as we expect it before calling
+	   set_fixmap(), to reduce chance of garbage value causing crash */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: arch/x86/kernel/tboot.c:46:
+	   set_fixmap(), to reduce chance of garbage value causing crash */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#405: FILE: arch/x86/kernel/tboot.c:49:
+		printk(KERN_WARNING "TXT: non-0 tboot_shared_addr but it is not of type E820_UNUSABLE\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#411: FILE: arch/x86/kernel/tboot.c:55:
+		printk(KERN_WARNING "TXT: non-0 tboot_shared_addr but pv_ops is enabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#421: FILE: arch/x86/kernel/tboot.c:65:
+		printk(KERN_WARNING "TXT: tboot_shared at 0x%lx is invalid\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#427: FILE: arch/x86/kernel/tboot.c:71:
+		printk(KERN_WARNING "TXT: tboot_shared version is invalid: %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#433: FILE: arch/x86/kernel/tboot.c:77:
+	printk(KERN_INFO "TXT: found shared page at phys addr 0x%lx:\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#435: FILE: arch/x86/kernel/tboot.c:79:
+	printk(KERN_DEBUG "TXT:  version: %d\n", tboot_shared->version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#436: FILE: arch/x86/kernel/tboot.c:80:
+	printk(KERN_DEBUG "TXT:  log_addr: 0x%08x\n", tboot_shared->log_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#437: FILE: arch/x86/kernel/tboot.c:81:
+	printk(KERN_DEBUG "TXT:  shutdown_entry: 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#439: FILE: arch/x86/kernel/tboot.c:83:
+	printk(KERN_DEBUG "TXT:  tboot_base: 0x%08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#441: FILE: arch/x86/kernel/tboot.c:85:
+	printk(KERN_DEBUG "TXT:  tboot_size: 0x%x\n",

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#504: FILE: arch/x86/kernel/tboot.c:148:
+		panic(KERN_ERR "TXT: Error mapping tboot pages (mfns) @ 0x%x, 0x%x\n", map_base, map_size);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#504: FILE: arch/x86/kernel/tboot.c:148:
+		panic(KERN_ERR "TXT: Error mapping tboot pages (mfns) @ 0x%x, 0x%x\n", map_base, map_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#516: FILE: arch/x86/kernel/tboot.c:160:
+	/* if we're being called before the 1:1 mapping is set up then just
+	   return and let the normal shutdown happen; this should only be

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: arch/x86/kernel/tboot.c:161:
+	   due to very early panic() */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#565: FILE: arch/x86/kernel/tboot.c:209:
+		printk(KERN_WARNING "TXT: unsupported sleep state 0x%x\n",

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#618: FILE: arch/x86/kernel/tboot.c:262:
+} __attribute__ ((__packed__));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!config"
#631: FILE: arch/x86/kernel/tboot.c:275:
+	if (config == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!heap_base"
#638: FILE: arch/x86/kernel/tboot.c:282:
+	if (heap_base == NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tbg' - possible side-effects?
#877: FILE: drivers/acpi/acpica/hwsleep.c:347:
+#define TB_COPY_GAS(tbg, g)                 \
+	tbg.space_id = g.space_id;          \
+	tbg.bit_width = g.bit_width;        \
+	tbg.bit_offset = g.bit_offset;      \
+	tbg.access_width = g.access_width;  \
+	tbg.address = g.address;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'g' - possible side-effects?
#877: FILE: drivers/acpi/acpica/hwsleep.c:347:
+#define TB_COPY_GAS(tbg, g)                 \
+	tbg.space_id = g.space_id;          \
+	tbg.bit_width = g.bit_width;        \
+	tbg.bit_offset = g.bit_offset;      \
+	tbg.access_width = g.access_width;  \
+	tbg.address = g.address;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#877: FILE: drivers/acpi/acpica/hwsleep.c:347:
+#define TB_COPY_GAS(tbg, g)                 \
+	tbg.space_id = g.space_id;          \
+	tbg.bit_width = g.bit_width;        \
+	tbg.bit_offset = g.bit_offset;      \
+	tbg.access_width = g.access_width;  \
+	tbg.address = g.address;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#896: FILE: drivers/acpi/acpica/hwsleep.c:366:
+		/* we need phys addr of waking vector, but can't use
+		   virt_to_phys() on &acpi_gbl_FACS because it is ioremap'ed,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#897: FILE: drivers/acpi/acpica/hwsleep.c:367:
+		   so calc from FACS phys addr */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#955: FILE: drivers/pci/intel-iommu.c:2784:
+			printk(KERN_WARNING "TXT: Forcing Intel-IOMMU to enabled\n");

WARNING:TYPO_SPELLING: 'sysem' may be misspelled - perhaps 'system'?
#1062: FILE: security/Kconfig:146:
+	  Intel TXT will provide higher assurance of sysem configuration and
 	                                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 53 warnings, 14 checks, 940 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
