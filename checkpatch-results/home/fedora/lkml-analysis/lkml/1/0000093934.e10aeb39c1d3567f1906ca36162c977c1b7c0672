WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#12: 
Subject: [PATCH] mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()
                                                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#27: 
mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()
                                  ^^

WARNING:TYPO_SPELLING: 'paches' may be misspelled - perhaps 'patches'?
#29: 
Upcoming paches to support the new 64-bit "BookE" powerpc architecture
         ^^^^^^

WARNING:TYPO_SPELLING: 'implemets' may be misspelled - perhaps 'implements'?
#42: 
almost everybody implemets these as macros, so we may as well add the
                 ^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
argument everywhere. I added it to the pmd and pud variants for consistency.

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'David Howells <dhowells@redhat.com> [MN10300 & FRV]', should be: 'David Howells <dhowells@redhat.com> (MN10300 & FRV)'
#46: 
Acked-by: David Howells <dhowells@redhat.com> [MN10300 & FRV]

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: arch/powerpc/include/asm/pgalloc-32.h:19:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: arch/powerpc/include/asm/pgalloc-32.h:19:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: arch/powerpc/include/asm/pgalloc-64.h:121:
+#define __pmd_free_tlb(tlb, pmd,addr)		      \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: arch/powerpc/include/asm/pgalloc.h:41:
+#define __pte_free_tlb(tlb,ptepage,address)		\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: arch/powerpc/include/asm/pgalloc.h:41:
+#define __pte_free_tlb(tlb,ptepage,address)		\
                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptepage' - possible side-effects?
#106: FILE: arch/powerpc/include/asm/pgalloc.h:41:
+#define __pte_free_tlb(tlb,ptepage,address)		\
 do { \
 	pgtable_page_dtor(ptepage); \
 	pgtable_free_tlb(tlb, pgtable_free_cache(page_address(ptepage), \
+					PTE_NONCACHE_NUM, PTE_TABLE_SIZE-1)); \
 } while (0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#111: FILE: arch/powerpc/include/asm/pgalloc.h:45:
+					PTE_NONCACHE_NUM, PTE_TABLE_SIZE-1)); \
 					                                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#128: FILE: include/asm-generic/pgtable-nopmd.h:62:
 }
+#define __pmd_free_tlb(tlb, x, a)		do { } while (0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#154: FILE: include/asm-generic/tlb.h:126:
+#define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#154: FILE: include/asm-generic/tlb.h:126:
+#define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#163: FILE: include/asm-generic/tlb.h:133:
+#define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#163: FILE: include/asm-generic/tlb.h:133:
+#define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#172: FILE: include/asm-generic/tlb.h:140:
+#define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#172: FILE: include/asm-generic/tlb.h:140:
+#define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#271: FILE: arch/avr32/include/asm/pgalloc.h:86:
+#define __pte_free_tlb(tlb,pte,addr)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#271: FILE: arch/avr32/include/asm/pgalloc.h:86:
+#define __pte_free_tlb(tlb,pte,addr)			\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#271: FILE: arch/avr32/include/asm/pgalloc.h:86:
+#define __pte_free_tlb(tlb,pte,addr)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb), pte);			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: arch/cris/include/asm/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte,address)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: arch/cris/include/asm/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte,address)			\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#284: FILE: arch/cris/include/asm/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte,address)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb), pte);			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: arch/frv/include/asm/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: arch/frv/include/asm/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address)			\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#297: FILE: arch/frv/include/asm/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb),(pte));			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: arch/frv/include/asm/pgalloc.h:65:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: arch/frv/include/asm/pgalloc.h:65:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#319: FILE: arch/ia64/include/asm/pgalloc.h:51:
 }
+#define __pud_free_tlb(tlb, pud, address)	pud_free((tlb)->mm, pud)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#349: FILE: arch/ia64/include/asm/tlb.h:239:
+#define pte_free_tlb(tlb, ptep, address)		\
 do {							\
 	tlb->need_flush = 1;				\
+	__pte_free_tlb(tlb, ptep, address);		\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#349: FILE: arch/ia64/include/asm/tlb.h:239:
+#define pte_free_tlb(tlb, ptep, address)		\
 do {							\
 	tlb->need_flush = 1;				\
+	__pte_free_tlb(tlb, ptep, address);		\
 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#357: FILE: arch/ia64/include/asm/tlb.h:245:
+#define pmd_free_tlb(tlb, ptep, address)		\
 do {							\
 	tlb->need_flush = 1;				\
+	__pmd_free_tlb(tlb, ptep, address);		\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#357: FILE: arch/ia64/include/asm/tlb.h:245:
+#define pmd_free_tlb(tlb, ptep, address)		\
 do {							\
 	tlb->need_flush = 1;				\
+	__pmd_free_tlb(tlb, ptep, address);		\
 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#365: FILE: arch/ia64/include/asm/tlb.h:251:
+#define pud_free_tlb(tlb, pudp, address)		\
 do {							\
 	tlb->need_flush = 1;				\
+	__pud_free_tlb(tlb, pudp, address);		\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#365: FILE: arch/ia64/include/asm/tlb.h:251:
+#define pud_free_tlb(tlb, pudp, address)		\
 do {							\
 	tlb->need_flush = 1;				\
+	__pud_free_tlb(tlb, pudp, address);		\
 } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#428: FILE: arch/m68k/include/asm/sun3_pgalloc.h:35:
+#define __pte_free_tlb(tlb,pte,addr)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#428: FILE: arch/m68k/include/asm/sun3_pgalloc.h:35:
+#define __pte_free_tlb(tlb,pte,addr)			\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#428: FILE: arch/m68k/include/asm/sun3_pgalloc.h:35:
+#define __pte_free_tlb(tlb,pte,addr)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb), pte);			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: arch/mips/include/asm/pgalloc.h:101:
+#define __pte_free_tlb(tlb,pte,address)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: arch/mips/include/asm/pgalloc.h:101:
+#define __pte_free_tlb(tlb,pte,address)			\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#472: FILE: arch/mips/include/asm/pgalloc.h:101:
+#define __pte_free_tlb(tlb,pte,address)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb), pte);			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: arch/sh/include/asm/pgalloc.h:76:
+#define __pte_free_tlb(tlb,pte,addr)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: arch/sh/include/asm/pgalloc.h:76:
+#define __pte_free_tlb(tlb,pte,addr)			\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#563: FILE: arch/sh/include/asm/pgalloc.h:76:
+#define __pte_free_tlb(tlb,pte,addr)			\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb), (pte));			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#572: FILE: arch/sh/include/asm/pgalloc.h:88:
+#define __pmd_free_tlb(tlb,x,addr)	do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#572: FILE: arch/sh/include/asm/pgalloc.h:88:
+#define __pmd_free_tlb(tlb,x,addr)	do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: arch/sparc/include/asm/tlb_64.h:105:
+#define pud_free_tlb(tlb,pudp, addr) __pud_free_tlb(tlb,pudp,addr)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: arch/sparc/include/asm/tlb_64.h:105:
+#define pud_free_tlb(tlb,pudp, addr) __pud_free_tlb(tlb,pudp,addr)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: arch/sparc/include/asm/tlb_64.h:105:
+#define pud_free_tlb(tlb,pudp, addr) __pud_free_tlb(tlb,pudp,addr)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: arch/um/include/asm/pgalloc.h:43:
+#define __pte_free_tlb(tlb,pte, address)		\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#644: FILE: arch/um/include/asm/pgalloc.h:43:
+#define __pte_free_tlb(tlb,pte, address)		\
 do {							\
 	pgtable_page_dtor(pte);				\
 	tlb_remove_page((tlb),(pte));			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: arch/um/include/asm/pgalloc.h:56:
+#define __pmd_free_tlb(tlb,x, address)   tlb_remove_page((tlb),virt_to_page(x))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: arch/um/include/asm/pgalloc.h:56:
+#define __pmd_free_tlb(tlb,x, address)   tlb_remove_page((tlb),virt_to_page(x))
                                                               ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: arch/x86/include/asm/pgalloc.h:49:
+extern void ___pte_free_tlb(struct mmu_gather *tlb, struct page *pte);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#700: FILE: arch/x86/include/asm/pgalloc.h:87:
+extern void ___pmd_free_tlb(struct mmu_gather *tlb, pmd_t *pmd);

WARNING:TYPO_SPELLING: 'adddress' may be misspelled - perhaps 'address'?
#703: FILE: arch/x86/include/asm/pgalloc.h:90:
+				  unsigned long adddress)
 				                ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#715: FILE: arch/x86/include/asm/pgalloc.h:123:
+extern void ___pud_free_tlb(struct mmu_gather *tlb, pud_t *pud);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093934.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 27 errors, 7 warnings, 26 checks, 555 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093934.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
