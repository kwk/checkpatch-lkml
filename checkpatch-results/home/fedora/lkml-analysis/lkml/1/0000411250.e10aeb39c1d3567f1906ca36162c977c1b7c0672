WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
  for x86_64. The efi init code uses these parameters passed by the bootloader.

WARNING:TYPO_SPELLING: 'architecutres' may be misspelled - perhaps 'architectures'?
#69: 
- The variable efi_enabled is used throughout across architecutres if
                                                     ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: Documentation/x86_64/uefi.txt:26:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: Documentation/x86_64/uefi.txt:34:
+  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#162: FILE: arch/x86_64/Kconfig:257:
+config EFI
+	bool "Boot from EFI support (EXPERIMENTAL)"
+	---help---
+	  This enables the the kernel to boot on EFI platforms using
+	  system configuration information passed to it from the firmware.
+	  This also enables the kernel to use any EFI runtime services that are
+	  available (such as the EFI variable services).
+	  This option is only useful on systems that have EFI firmware
+	  and will result in a kernel image that is ~8k larger. However,
+	  even with this option, the resultant kernel should continue to
+	  boot on existing non-EFI platforms. For more information on
+	  how to set up [U]EFI64 system, see Documentation/x86_64/uefi.txt.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#165: FILE: arch/x86_64/Kconfig:260:
+	  This enables the the kernel to boot on EFI platforms using

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: include/asm-x86_64/bootsetup.h:20:
+#define EFI_SYSTAB (*((unsigned long *)(PARAM+0x1b8)))
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: include/asm-x86_64/bootsetup.h:21:
+#define EFI_LOADER_SIG ((unsigned char *)(PARAM+0x1c0))
                                                ^

CHECK:SPACING: No space is necessary after a cast
#187: FILE: include/asm-x86_64/bootsetup.h:22:
+#define EFI_MEMDESC_SIZE (*((unsigned int *) (PARAM+0x1c4)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: include/asm-x86_64/bootsetup.h:22:
+#define EFI_MEMDESC_SIZE (*((unsigned int *) (PARAM+0x1c4)))
                                                    ^

CHECK:SPACING: No space is necessary after a cast
#188: FILE: include/asm-x86_64/bootsetup.h:23:
+#define EFI_MEMDESC_VERSION (*((unsigned int *) (PARAM+0x1c8)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: include/asm-x86_64/bootsetup.h:23:
+#define EFI_MEMDESC_VERSION (*((unsigned int *) (PARAM+0x1c8)))
                                                       ^

CHECK:SPACING: No space is necessary after a cast
#189: FILE: include/asm-x86_64/bootsetup.h:24:
+#define EFI_MEMMAP_SIZE (*((unsigned int *) (PARAM+0x1cc)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#189: FILE: include/asm-x86_64/bootsetup.h:24:
+#define EFI_MEMMAP_SIZE (*((unsigned int *) (PARAM+0x1cc)))
                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: include/asm-x86_64/bootsetup.h:25:
+#define EFI_MEMMAP (*((unsigned long *)(PARAM+0x1d0)))
                                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#198: FILE: include/asm-x86_64/eficallwrap.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: include/asm-x86_64/eficallwrap.h:4:
+ *  ^IContributed by Chandramouli Narayanan<mouli@linux.intel.com>$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: include/asm-x86_64/eficallwrap.h:19:
+extern efi_status_t LIN2WIN0(void *fp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/asm-x86_64/eficallwrap.h:20:
+extern efi_status_t LIN2WIN1(void *fp, u64 arg1);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#218: FILE: include/asm-x86_64/eficallwrap.h:21:
+extern efi_status_t LIN2WIN2(void *fp, u64 arg1, u64 arg2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: include/asm-x86_64/eficallwrap.h:22:
+extern efi_status_t LIN2WIN3(void *fp, u64 arg1, u64 arg2, u64 arg3);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: include/asm-x86_64/eficallwrap.h:23:
+extern efi_status_t LIN2WIN4(void *fp, u64 arg1, u64 arg2, u64 arg3, u64 arg4);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#221: FILE: include/asm-x86_64/eficallwrap.h:24:
+extern efi_status_t LIN2WIN5(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/asm-x86_64/eficallwrap.h:24:
+extern efi_status_t LIN2WIN5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#223: FILE: include/asm-x86_64/eficallwrap.h:26:
+extern efi_status_t LIN2WIN6(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/asm-x86_64/eficallwrap.h:26:
+extern efi_status_t LIN2WIN6(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#251: FILE: arch/x86_64/kernel/efi.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: arch/x86_64/kernel/efi.c:21:
+ * $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#296: FILE: arch/x86_64/kernel/efi.c:46:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#299: FILE: arch/x86_64/kernel/efi.c:49:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#301: FILE: arch/x86_64/kernel/efi.c:51:
+#include <asm/cacheflush.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: arch/x86_64/kernel/efi.c:56:
+#define PFX ^I^I"EFI: "$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#311: FILE: arch/x86_64/kernel/efi.c:61:
+extern void (*machine_emergency_restart_func)(void);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: arch/x86_64/kernel/efi.c:74:
+	return LIN2WIN2((void*)efi.systab->runtime->get_time,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: arch/x86_64/kernel/efi.c:76:
+^I^I^I^I^I(u64)tc); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: arch/x86_64/kernel/efi.c:81:
+	return LIN2WIN1((void*)efi.systab->runtime->set_time,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: arch/x86_64/kernel/efi.c:82:
+^I^I^I^I^I(u64)tm); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#335: FILE: arch/x86_64/kernel/efi.c:85:
+static efi_status_t _efi_get_wakeup_time(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#338: FILE: arch/x86_64/kernel/efi.c:88:
+	return LIN2WIN3((void*)efi.systab->runtime->get_wakeup_time,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: arch/x86_64/kernel/efi.c:91:
+^I^I^I^I^I(u64)tm); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#346: FILE: arch/x86_64/kernel/efi.c:96:
+	return LIN2WIN2((void*)efi.systab->runtime->set_wakeup_time,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: arch/x86_64/kernel/efi.c:98:
+^I^I^I^I^I(u64)tm); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#351: FILE: arch/x86_64/kernel/efi.c:101:
+static efi_status_t _efi_get_variable(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#355: FILE: arch/x86_64/kernel/efi.c:105:
+	return LIN2WIN5((void*)efi.systab->runtime->get_variable,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: arch/x86_64/kernel/efi.c:110:
+^I^I^I^I^I(u64)data); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#363: FILE: arch/x86_64/kernel/efi.c:113:
+static efi_status_t _efi_get_next_variable(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#366: FILE: arch/x86_64/kernel/efi.c:116:
+	return LIN2WIN3((void*)efi.systab->runtime->get_next_variable,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: arch/x86_64/kernel/efi.c:119:
+^I^I^I^I^I(u64)vendor); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#372: FILE: arch/x86_64/kernel/efi.c:122:
+static efi_status_t _efi_set_variable(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#376: FILE: arch/x86_64/kernel/efi.c:126:
+	return LIN2WIN5((void*)efi.systab->runtime->set_variable,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: arch/x86_64/kernel/efi.c:131:
+^I^I^I^I^I(u64)data); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#386: FILE: arch/x86_64/kernel/efi.c:136:
+	return LIN2WIN1((void*)efi.systab->runtime->get_next_high_mono_count,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: arch/x86_64/kernel/efi.c:137:
+^I^I^I^I^I(u64)count); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#390: FILE: arch/x86_64/kernel/efi.c:140:
+static efi_status_t _efi_reset_system(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#394: FILE: arch/x86_64/kernel/efi.c:144:
+	return LIN2WIN4((void*)efi.systab->runtime->reset_system,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: arch/x86_64/kernel/efi.c:148:
+^I^I^I^I^I(u64)data); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#401: FILE: arch/x86_64/kernel/efi.c:151:
+static efi_status_t _efi_set_virtual_address_map(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#406: FILE: arch/x86_64/kernel/efi.c:156:
+	return LIN2WIN4((void*)efi.systab->runtime->set_virtual_address_map,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: arch/x86_64/kernel/efi.c:160:
+^I^I^I^I^I(u64)virtual_map); $

CHECK:SPACING: No space is necessary after a cast
#413: FILE: arch/x86_64/kernel/efi.c:163:
+static void __init efi_call_phys_prelog(void) __acquires(efi_rt_lock)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: arch/x86_64/kernel/efi.c:170:
+^Ivaddress = (unsigned long)__va(0x0UL);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: arch/x86_64/kernel/efi.c:173:
+^I$

CHECK:SPACING: No space is necessary after a cast
#427: FILE: arch/x86_64/kernel/efi.c:177:
+static void __init efi_call_phys_epilog(void) __releases(efi_rt_lock)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#438: FILE: arch/x86_64/kernel/efi.c:188:
+static efi_status_t __init phys_efi_set_virtual_address_map(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: arch/x86_64/kernel/efi.c:189:
+^I^I^Iunsigned long memory_map_size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: arch/x86_64/kernel/efi.c:197:
+	status = LIN2WIN4(efi_phys.set_virtual_address_map,
+					(u64)memory_map_size,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: arch/x86_64/kernel/efi.c:199:
+^I^I^I^I^I(u64)descriptor_version, $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#457: FILE: arch/x86_64/kernel/efi.c:207:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: arch/x86_64/kernel/efi.c:212:
+	status = LIN2WIN2(efi_phys.get_time,
+					(u64)tm,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#471: FILE: arch/x86_64/kernel/efi.c:221:
+^Iefi_status_t ^Istatus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#472: FILE: arch/x86_64/kernel/efi.c:222:
+^Iefi_time_t ^Ieft;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: arch/x86_64/kernel/efi.c:223:
+^Iefi_time_cap_t ^Icap;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#479: FILE: arch/x86_64/kernel/efi.c:229:
+		printk(KERN_ERR PFX "Oops: efitime: can't read time!\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#485: FILE: arch/x86_64/kernel/efi.c:235:
+	if (((abs(real_minutes - eft.minute) + 15)/30) & 1)
 	                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#495: FILE: arch/x86_64/kernel/efi.c:245:
+		printk(KERN_ERR PFX "Oops: efitime: can't write time!\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#500: FILE: arch/x86_64/kernel/efi.c:250:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: arch/x86_64/kernel/efi.c:263:
+ ^I^Istatus = efi.get_time(&eft, &cap);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: arch/x86_64/kernel/efi.c:263:
+ ^I^Istatus = efi.get_time(&eft, &cap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: arch/x86_64/kernel/efi.c:263:
+ ^I^Istatus = efi.get_time(&eft, &cap);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#519: FILE: arch/x86_64/kernel/efi.c:269:
+		printk(KERN_ERR PFX "Oops: efitime: can't read time status: 0x%lx\n",status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: arch/x86_64/kernel/efi.c:269:
+		printk(KERN_ERR PFX "Oops: efitime: can't read time status: 0x%lx\n",status);
 		                                                                    ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#539: FILE: arch/x86_64/kernel/efi.c:289:
+			init_memory_mapping(

WARNING:RETURN_VOID: void function return statements are not generally useful
#555: FILE: arch/x86_64/kernel/efi.c:305:
+	return;
+}

ERROR:SPACING: space prohibited before that close parenthesis ')'
#565: FILE: arch/x86_64/kernel/efi.c:315:
+	memset(&efi, 0, sizeof(efi) );

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#569: FILE: arch/x86_64/kernel/efi.c:319:
+	memmap.phys_map = (void*)EFI_MEMMAP;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#570: FILE: arch/x86_64/kernel/efi.c:320:
+	memmap.nr_map = EFI_MEMMAP_SIZE/EFI_MEMDESC_SIZE;
 	                               ^

CHECK:SPACING: No space is necessary after a cast
#574: FILE: arch/x86_64/kernel/efi.c:324:
+	efi.systab = (efi_system_table_t *) early_ioremap(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#574: FILE: arch/x86_64/kernel/efi.c:324:
+	efi.systab = (efi_system_table_t *) early_ioremap(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#583: FILE: arch/x86_64/kernel/efi.c:333:
+		printk(KERN_ERR PFX "Woah! EFI system table signature incorrect\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#585: FILE: arch/x86_64/kernel/efi.c:335:
+		printk(KERN_ERR PFX

WARNING:SPLIT_STRING: quoted string split across lines
#587: FILE: arch/x86_64/kernel/efi.c:337:
+		       "Warning: EFI system table major version mismatch: "
+		       "got %d.%02d, expected %d.%02d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#601: FILE: arch/x86_64/kernel/efi.c:351:
+	c16 = (efi_char16_t *) early_ioremap(efi.systab->fw_vendor, 2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: arch/x86_64/kernel/efi.c:353:
+^I^Ifor (i = 0; i < sizeof(vendor) && *c16; ++i) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#608: FILE: arch/x86_64/kernel/efi.c:358:
+	printk(KERN_INFO PFX "EFI v%u.%.02u by %s \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#608: FILE: arch/x86_64/kernel/efi.c:358:
+	printk(KERN_INFO PFX "EFI v%u.%.02u by %s \n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#615: FILE: arch/x86_64/kernel/efi.c:365:
+	config_tables = (efi_config_table_t *)early_ioremap( efi.systab->tables,

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: arch/x86_64/kernel/efi.c:366:
+^I^I^I        efi.systab->nr_tables * sizeof(efi_config_table_t));$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!config_tables"
#617: FILE: arch/x86_64/kernel/efi.c:367:
+	if (config_tables == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#618: FILE: arch/x86_64/kernel/efi.c:368:
+		printk(KERN_ERR PFX "Could not map EFI Configuration Table!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#623: FILE: arch/x86_64/kernel/efi.c:373:
+			printk(KERN_INFO " MPS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#624: FILE: arch/x86_64/kernel/efi.c:374:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#624: FILE: arch/x86_64/kernel/efi.c:374:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#625: FILE: arch/x86_64/kernel/efi.c:375:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#627: FILE: arch/x86_64/kernel/efi.c:377:
+			printk(KERN_INFO " ACPI 2.0=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#628: FILE: arch/x86_64/kernel/efi.c:378:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#628: FILE: arch/x86_64/kernel/efi.c:378:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#629: FILE: arch/x86_64/kernel/efi.c:379:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#631: FILE: arch/x86_64/kernel/efi.c:381:
+			printk(KERN_INFO " ACPI=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#632: FILE: arch/x86_64/kernel/efi.c:382:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#632: FILE: arch/x86_64/kernel/efi.c:382:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#633: FILE: arch/x86_64/kernel/efi.c:383:
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#635: FILE: arch/x86_64/kernel/efi.c:385:
+			printk(KERN_INFO " SMBIOS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#636: FILE: arch/x86_64/kernel/efi.c:386:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#636: FILE: arch/x86_64/kernel/efi.c:386:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#637: FILE: arch/x86_64/kernel/efi.c:387:
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#639: FILE: arch/x86_64/kernel/efi.c:389:
+			printk(KERN_INFO " HCDP=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#640: FILE: arch/x86_64/kernel/efi.c:390:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#640: FILE: arch/x86_64/kernel/efi.c:390:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#641: FILE: arch/x86_64/kernel/efi.c:391:
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#643: FILE: arch/x86_64/kernel/efi.c:393:
+			printk(KERN_INFO " UGA=0x%lx ", config_tables[i].table);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#646: FILE: arch/x86_64/kernel/efi.c:396:
+	printk(KERN_INFO "\n");

CHECK:SPACING: No space is necessary after a cast
#654: FILE: arch/x86_64/kernel/efi.c:404:
+	runtime = (efi_runtime_services_t *) early_ioremap((unsigned long)

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: arch/x86_64/kernel/efi.c:406:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#656: FILE: arch/x86_64/kernel/efi.c:406:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

CHECK:BRACES: braces {} should be used on all arms of this statement
#657: FILE: arch/x86_64/kernel/efi.c:407:
+	if (runtime != NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "runtime"
#657: FILE: arch/x86_64/kernel/efi.c:407:
+	if (runtime != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: arch/x86_64/kernel/efi.c:409:
+^I ^I * We will only need *early* access to the following$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#659: FILE: arch/x86_64/kernel/efi.c:409:
+^I ^I * We will only need *early* access to the following$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: arch/x86_64/kernel/efi.c:412:
+ ^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#662: FILE: arch/x86_64/kernel/efi.c:412:
+ ^I ^I */$

CHECK:SPACING: No space is necessary after a cast
#663: FILE: arch/x86_64/kernel/efi.c:413:
+		efi_phys.get_time = (efi_get_time_t *) runtime->get_time;

CHECK:BRACES: Unbalanced braces around else statement
#666: FILE: arch/x86_64/kernel/efi.c:416:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#667: FILE: arch/x86_64/kernel/efi.c:417:
+		printk(KERN_ERR PFX "Could not map the runtime service table!\n");

CHECK:SPACING: No space is necessary after a cast
#669: FILE: arch/x86_64/kernel/efi.c:419:
+	memmap.map = (efi_memory_desc_t *) early_ioremap(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#669: FILE: arch/x86_64/kernel/efi.c:419:
+	memmap.map = (efi_memory_desc_t *) early_ioremap(

CHECK:SPACING: No space is necessary after a cast
#670: FILE: arch/x86_64/kernel/efi.c:420:
+					(unsigned long) EFI_MEMMAP,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memmap.map"
#672: FILE: arch/x86_64/kernel/efi.c:422:
+	if (memmap.map == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#673: FILE: arch/x86_64/kernel/efi.c:423:
+		printk(KERN_ERR PFX "Could not map the EFI memory map!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: arch/x86_64/kernel/efi.c:424:
+        if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: arch/x86_64/kernel/efi.c:424:
+        if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#674: FILE: arch/x86_64/kernel/efi.c:424:
+        if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: arch/x86_64/kernel/efi.c:425:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" $

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: arch/x86_64/kernel/efi.c:425:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: arch/x86_64/kernel/efi.c:425:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#675: FILE: arch/x86_64/kernel/efi.c:425:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" 

WARNING:SPLIT_STRING: quoted string split across lines
#676: FILE: arch/x86_64/kernel/efi.c:426:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" 
+			"doesn't match the one from EFI!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: arch/x86_64/kernel/efi.c:427:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: arch/x86_64/kernel/efi.c:427:
+        }$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= (unsigned long)efi_phys.systab'
#709: FILE: arch/x86_64/kernel/efi.c:459:
+		if ((md->phys_addr <= (unsigned long)efi_phys.systab) &&
+				((unsigned long)efi_phys.systab < end))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: arch/x86_64/kernel/efi.c:460:
+		if ((md->phys_addr <= (unsigned long)efi_phys.systab) &&
+				((unsigned long)efi_phys.systab < end))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: arch/x86_64/kernel/efi.c:461:
+^I^I^Iefi.systab = (efi_system_table_t *) $

CHECK:SPACING: No space is necessary after a cast
#711: FILE: arch/x86_64/kernel/efi.c:461:
+			efi.systab = (efi_system_table_t *) 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#717: FILE: arch/x86_64/kernel/efi.c:467:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#719: FILE: arch/x86_64/kernel/efi.c:469:
+	status = phys_efi_set_virtual_address_map(

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: arch/x86_64/kernel/efi.c:473:
+^I^I       ^Imemmap.phys_map);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#723: FILE: arch/x86_64/kernel/efi.c:473:
+^I^I       ^Imemmap.phys_map);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#726: FILE: arch/x86_64/kernel/efi.c:476:
+		printk (KERN_ALERT "You are screwed! "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: arch/x86_64/kernel/efi.c:476:
+		printk (KERN_ALERT "You are screwed! "

WARNING:SPLIT_STRING: quoted string split across lines
#727: FILE: arch/x86_64/kernel/efi.c:477:
+		printk (KERN_ALERT "You are screwed! "
+			"Unable to switch EFI into virtual mode "

WARNING:SPLIT_STRING: quoted string split across lines
#728: FILE: arch/x86_64/kernel/efi.c:478:
+			"Unable to switch EFI into virtual mode "
+			"(status=%lx)\n", status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#762: FILE: arch/x86_64/kernel/efi.c:512:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#763: FILE: arch/x86_64/kernel/efi.c:513:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#763: FILE: arch/x86_64/kernel/efi.c:513:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#776: FILE: arch/x86_64/kernel/efi.c:526:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT))))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#777: FILE: arch/x86_64/kernel/efi.c:527:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT))))
 			                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#786: FILE: arch/x86_64/kernel/efi_callwrap.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#789: FILE: arch/x86_64/kernel/efi_callwrap.c:4:
+ *  ^IContributed by Chandramouli Narayanan<mouli@linux.intel.com>$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#824: FILE: arch/x86_64/kernel/efi_callwrap.c:39:
+ * when stack frame is allocated. 4 > m >= n.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#826: FILE: arch/x86_64/kernel/efi_callwrap.c:41:
+#define lin2win_win_arg(m,n) "(" #m "-1-" #n ")*8(%%rsp)"
                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: arch/x86_64/kernel/efi_callwrap.c:46:
+{^I^I^I^I^I^I^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#833: FILE: arch/x86_64/kernel/efi_callwrap.c:48:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: arch/x86_64/kernel/efi_callwrap.c:52:
+^I__asm__ __volatile__(^I^I^I^I^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#837: FILE: arch/x86_64/kernel/efi_callwrap.c:52:
+	__asm__ __volatile__(					

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: arch/x86_64/kernel/efi_callwrap.c:53:
+^I^Ialloc_win_stack_frame(4)^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: arch/x86_64/kernel/efi_callwrap.c:54:
+^I^I"call *%[fptr]\n\t"^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: arch/x86_64/kernel/efi_callwrap.c:55:
+^I^Ifree_win_stack_frame(4)^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: arch/x86_64/kernel/efi_callwrap.c:56:
+^I^I: "=a" (ret), "=c" (dummy), "=d" (dummy),^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: arch/x86_64/kernel/efi_callwrap.c:57:
+^I^I  "=r" (r8), "=r" (r9), "=r" (r10), "=r" (r11)^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: arch/x86_64/kernel/efi_callwrap.c:58:
+^I^I: [fptr] "r" (func));^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: arch/x86_64/kernel/efi_callwrap.c:59:
+^Ireturn ret;^I^I^I^I^I^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#850: FILE: arch/x86_64/kernel/efi_callwrap.c:65:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#854: FILE: arch/x86_64/kernel/efi_callwrap.c:69:
+	__asm__ __volatile__(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: arch/x86_64/kernel/efi_callwrap.c:72:
+^I^Ifree_win_stack_frame(4)^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#868: FILE: arch/x86_64/kernel/efi_callwrap.c:83:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#872: FILE: arch/x86_64/kernel/efi_callwrap.c:87:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#883: FILE: arch/x86_64/kernel/efi_callwrap.c:98:
+efi_status_t LIN2WIN3(

WARNING:LINE_SPACING: Missing a blank line after declarations
#890: FILE: arch/x86_64/kernel/efi_callwrap.c:105:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8") = (u64)arg3;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#894: FILE: arch/x86_64/kernel/efi_callwrap.c:109:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#905: FILE: arch/x86_64/kernel/efi_callwrap.c:120:
+efi_status_t LIN2WIN4(

WARNING:LINE_SPACING: Missing a blank line after declarations
#913: FILE: arch/x86_64/kernel/efi_callwrap.c:128:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8") = (u64)arg3;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#917: FILE: arch/x86_64/kernel/efi_callwrap.c:132:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#928: FILE: arch/x86_64/kernel/efi_callwrap.c:143:
+efi_status_t LIN2WIN5(

WARNING:LINE_SPACING: Missing a blank line after declarations
#937: FILE: arch/x86_64/kernel/efi_callwrap.c:152:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8") = (u64)arg3;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#941: FILE: arch/x86_64/kernel/efi_callwrap.c:156:
+	__asm__ __volatile__(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#942: FILE: arch/x86_64/kernel/efi_callwrap.c:157:
+		"mov %[rarg5], " lin2win_win_arg(5,6) "\n\t"
 		                                  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#954: FILE: arch/x86_64/kernel/efi_callwrap.c:169:
+efi_status_t LIN2WIN6(

WARNING:LINE_SPACING: Missing a blank line after declarations
#964: FILE: arch/x86_64/kernel/efi_callwrap.c:179:
+	u64 ret, dummy;
+	register u64 r8 __asm__("r8") = (u64)arg3;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#968: FILE: arch/x86_64/kernel/efi_callwrap.c:183:
+	__asm__ __volatile__(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: arch/x86_64/kernel/efi_callwrap.c:184:
+		"movq %[rarg5], " lin2win_win_arg(5,6) "\n\t"
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: arch/x86_64/kernel/efi_callwrap.c:185:
+		"movq %[rarg6], " lin2win_win_arg(6,6) "\n\t"
 		                                   ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#982: FILE: arch/x86_64/kernel/efi_callwrap.c:197:
+EXPORT_SYMBOL_GPL(LIN2WIN1);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#983: FILE: arch/x86_64/kernel/efi_callwrap.c:198:
+EXPORT_SYMBOL_GPL(LIN2WIN2);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#984: FILE: arch/x86_64/kernel/efi_callwrap.c:199:
+EXPORT_SYMBOL_GPL(LIN2WIN3);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#985: FILE: arch/x86_64/kernel/efi_callwrap.c:200:
+EXPORT_SYMBOL_GPL(LIN2WIN4);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#986: FILE: arch/x86_64/kernel/efi_callwrap.c:201:
+EXPORT_SYMBOL_GPL(LIN2WIN5);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#987: FILE: arch/x86_64/kernel/efi_callwrap.c:202:
+EXPORT_SYMBOL_GPL(LIN2WIN6);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 60 errors, 74 warnings, 72 checks, 914 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
