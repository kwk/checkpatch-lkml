WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
The Maxim MAX7359 is a I2C interfaced key switch controller which provides microprocessors with management of up to 64 key switches.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/input/keyboard/Kconfig:336:
+config KEYBOARD_MAX7359
+	tristate "Maxim MAX7359 Key Switch Controller"
+	depends on I2C
+	help
+	  If you say yes here you get support for the Maxim MAX7359 Key
+	  Switch Controller chip. This providers microprocessors with
+	  management of up to 64 key switches

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/input/keyboard/max7359_keypad.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#113: FILE: drivers/input/keyboard/max7359_keypad.c:38:
+#define MAX7359_CFG_SLEEP		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#114: FILE: drivers/input/keyboard/max7359_keypad.c:39:
+#define MAX7359_CFG_INTERRUPT		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: drivers/input/keyboard/max7359_keypad.c:40:
+#define MAX7359_CFG_KEY_RELEASE		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: drivers/input/keyboard/max7359_keypad.c:41:
+#define MAX7359_CFG_WAKEUP		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: drivers/input/keyboard/max7359_keypad.c:42:
+#define MAX7359_CFG_TIMEOUT		(1 << 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: drivers/input/keyboard/max7359_keypad.c:60:
+	int ret = i2c_smbus_write_byte_data(client, reg, val);
+	if (ret >= 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/input/keyboard/max7359_keypad.c:64:
+	dev_err(&client->dev, "%s: reg 0x%x, val 0x%x, err %d\n",
+						__func__, reg, val, ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/input/keyboard/max7359_keypad.c:72:
+	int ret = i2c_smbus_read_byte_data(client, reg);
+	if (ret < 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/input/keyboard/max7359_keypad.c:74:
+		dev_err(&client->dev, "%s: reg 0x%x, err %d\n",
+						__func__, reg, ret);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#171: FILE: drivers/input/keyboard/max7359_keypad.c:96:
+static inline unsigned int max7359_lookup_matrix_keycode(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/input/keyboard/max7359_keypad.c:114:
+	input_report_key(keypad->input_dev,
+		max7359_lookup_matrix_keycode(keypad, row, col), !release);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/input/keyboard/max7359_keypad.c:120:
+	dev_dbg(&keypad->client->dev, "key[%d:%d] %s\n", row, col,
+					(release ? "release" : "press"));

CHECK:SPACING: No space is necessary after a cast
#200: FILE: drivers/input/keyboard/max7359_keypad.c:125:
+	struct max7359_keypad *keypad = (struct max7359_keypad *) dev_id;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/input/keyboard/max7359_keypad.c:132:
+		dev_err(&keypad->client->dev,
+				"Another job is currently pending \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#207: FILE: drivers/input/keyboard/max7359_keypad.c:132:
+				"Another job is currently pending \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/input/keyboard/max7359_keypad.c:141:
+	max7359_write_reg(client, MAX7359_REG_CONFIG,
+		MAX7359_CFG_INTERRUPT | /* Irq clears after host read */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#227: FILE: drivers/input/keyboard/max7359_keypad.c:152:
+static int __devinit max7359_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/input/keyboard/max7359_keypad.c:153:
+static int __devinit max7359_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*keypad)...) over kzalloc(sizeof(struct max7359_keypad)...)
#235: FILE: drivers/input/keyboard/max7359_keypad.c:160:
+	keypad = kzalloc(sizeof(struct max7359_keypad), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!keypad"
#236: FILE: drivers/input/keyboard/max7359_keypad.c:161:
+	if (keypad == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#237: FILE: drivers/input/keyboard/max7359_keypad.c:162:
+	if (keypad == NULL) {
+		dev_err(&client->dev, "failed to allocate driver data\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#242: FILE: drivers/input/keyboard/max7359_keypad.c:167:
+	pdata = keypad->pdata = client->dev.platform_data;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#252: FILE: drivers/input/keyboard/max7359_keypad.c:177:
+		dev_info(&client->dev, "keys FIFO is 0x%02x"
+				", succeeded in detecting device\n", ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/input/keyboard/max7359_keypad.c:215:
+	ret = request_irq(keypad->irq, max7359_interrupt,
+				IRQF_TRIGGER_LOW, client->name, keypad);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#382: FILE: include/linux/max7359_keypad.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000129394.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 18 checks, 346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000129394.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
