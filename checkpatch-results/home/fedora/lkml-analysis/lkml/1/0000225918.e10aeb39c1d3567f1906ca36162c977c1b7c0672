WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
    This patch uses SECTION_SIZE as size of chunk if 64bit/SPARSEMEM is enabled.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: mm/page_cgroup.c:1:
+#include <linux/mm.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#97: FILE: mm/page_cgroup.c:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#100: FILE: mm/page_cgroup.c:13:
+	spinlock_t		lock;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to false
#114: FILE: mm/page_cgroup.c:27:
+const bool chunk_vmalloc = false;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:BIT_MACRO: Prefer using the BIT macro
#132: FILE: mm/page_cgroup.c:45:
+#define PCG_HASHSIZE		(1 << pcg_hashshift)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: mm/page_cgroup.c:88:
+		int ent_size = sizeof(*ent) + mapsize;
+		ent = kmalloc_node(ent_size, GFP_KERNEL, node);

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: mm/page_cgroup.c:109:
+		unsigned long pfn = base + i;
+		pc = ent->map + pfn;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: mm/page_cgroup.c:126:
+int online_page_cgroup(unsigned long start_pfn,
+			unsigned long nr_pages,

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: mm/page_cgroup.c:138:
+		unsigned long pfn = index << ENTS_PER_CHUNK_SHIFT;
+		if (lookup_page_cgroup(pfn))

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: mm/page_cgroup.c:150:
+	int ret = 0;
+	switch (action) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: mm/page_cgroup.c:153:
+		ret = online_page_cgroup(mn->start_pfn,
+				   mn->nr_pages, mn->status_change_nid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: mm/page_cgroup.c:159:
+        case MEM_ONLINE:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: mm/page_cgroup.c:159:
+        case MEM_ONLINE:$

WARNING:TYPO_SPELLING: 'initilization' may be misspelled - perhaps 'initialization'?
#256: FILE: mm/page_cgroup.c:169:
+/* Called From mem_cgroup's initilization */
                             ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#265: FILE: mm/page_cgroup.c:178:
+	default_pcg_hash_size = (max_pfn/ENTS_PER_CHUNK);
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'calclation' may be misspelled - perhaps 'calculation'?
#267: FILE: mm/page_cgroup.c:180:
+	/* if too big, use automatic calclation */
 	                             ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: mm/page_cgroup.c:185:
+	pcg_hashtable = alloc_large_system_hash("PageCgroup Hash",
+				sizeof(struct pcg_hash_head),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: mm/page_cgroup.c:229:
+		printk("Not enough memory for memory resource controller.\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#320: FILE: mm/page_cgroup.c:233:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: mm/page_cgroup.c:235:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#355: FILE: include/linux/page_cgroup.h:1:
+#ifndef __LINUX_PAGE_CGROUP_H

CHECK:CAMELCASE: Avoid CamelCase: <Cache>
#399: FILE: include/linux/page_cgroup.h:45:
+TESTPCGFLAG(Cache, CACHE)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Used>
#401: FILE: include/linux/page_cgroup.h:47:
+TESTPCGFLAG(Used, USED)

CHECK:CAMELCASE: Avoid CamelCase: <File>
#405: FILE: include/linux/page_cgroup.h:51:
+TESTPCGFLAG(File, FILE)

CHECK:CAMELCASE: Avoid CamelCase: <Active>
#409: FILE: include/linux/page_cgroup.h:55:
+TESTPCGFLAG(Active, ACTIVE)

CHECK:CAMELCASE: Avoid CamelCase: <Unevictable>
#413: FILE: include/linux/page_cgroup.h:59:
+TESTPCGFLAG(Unevictable, UNEVICTABLE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: include/linux/page_cgroup.h:88:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#551: FILE: mm/memcontrol.c:153:
+	(1 << PCG_ACTIVE) | (1 << PCG_CACHE) | (1 << PCG_USED)|  (1 << PCG_LOCK),
 	                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#768: FILE: mm/memcontrol.c:675:
 
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225918.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 12 warnings, 16 checks, 798 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225918.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
