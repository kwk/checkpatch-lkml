WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: drivers/acpi/Kconfig:403:
+config ACPI_QUICKSTART
+       tristate "ACPI Application Quickstart Keys"
+       depends on INPUT
+       help
+         This driver adds support for the PNP0C32 application start keys
+	 found on some laptops.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/acpi/quickstart.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'disassebled' may be misspelled - perhaps 'disassembled'?
#72: FILE: drivers/acpi/quickstart.c:6:
+ *  Information gathered from disassebled dsdt and from here:
                               ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#87: FILE: drivers/acpi/quickstart.c:21:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#88: FILE: drivers/acpi/quickstart.c:22:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: drivers/acpi/quickstart.c:59:
+.btn_lst = NULL,.pressed = NULL,};
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#137: FILE: drivers/acpi/quickstart.c:71:
+};
+static int quickstart_acpi_add(struct acpi_device *device);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#164: FILE: drivers/acpi/quickstart.c:98:
+static DEVICE_ATTR(pressed_button, 0666, pressed_button_show,

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#164: FILE: drivers/acpi/quickstart.c:98:
+static DEVICE_ATTR(pressed_button, 0666, pressed_button_show,

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

ERROR:EXPORTED_WORLD_WRITABLE: Exporting writable files is usually an error. Consider more restrictive permissions.
#164: FILE: drivers/acpi/quickstart.c:98:
+static DEVICE_ATTR(pressed_button, 0666, pressed_button_show,
+		   pressed_button_store);
WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#166: FILE: drivers/acpi/quickstart.c:100:
+static DEVICE_ATTR(buttons, 0444, buttons_show, NULL);

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:TABSTOP: Statements should start on a tabstop
#172: FILE: drivers/acpi/quickstart.c:106:
+		   }

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: drivers/acpi/quickstart.c:110:
+        char type;              /* See KE_* below */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/acpi/quickstart.c:110:
+        char type;              /* See KE_* below */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/acpi/quickstart.c:111:
+        u32 code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/acpi/quickstart.c:111:
+        u32 code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/acpi/quickstart.c:112:
+        u16 keycode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/acpi/quickstart.c:112:
+        u16 keycode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/acpi/quickstart.c:123:
+        struct key_entry *key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/acpi/quickstart.c:123:
+        struct key_entry *key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/acpi/quickstart.c:125:
+        for (key = quickstart_keymap; key->type != KE_END; key++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/acpi/quickstart.c:125:
+        for (key = quickstart_keymap; key->type != KE_END; key++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/acpi/quickstart.c:126:
+                if (code == key->code)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/acpi/quickstart.c:126:
+                if (code == key->code)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/acpi/quickstart.c:127:
+                        return key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/acpi/quickstart.c:127:
+                        return key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/acpi/quickstart.c:129:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/acpi/quickstart.c:129:
+        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/acpi/quickstart.c:134:
+        struct key_entry *key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/acpi/quickstart.c:134:
+        struct key_entry *key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/acpi/quickstart.c:136:
+        for (key = quickstart_keymap; key->type != KE_END; key++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/acpi/quickstart.c:136:
+        for (key = quickstart_keymap; key->type != KE_END; key++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/acpi/quickstart.c:137:
+                if (key->type == KE_KEY && keycode == key->keycode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/acpi/quickstart.c:137:
+                if (key->type == KE_KEY && keycode == key->keycode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/acpi/quickstart.c:138:
+                        return key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/acpi/quickstart.c:138:
+                        return key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/acpi/quickstart.c:140:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/acpi/quickstart.c:140:
+        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/acpi/quickstart.c:146:
+        struct key_entry *key = quickstart_get_entry_by_scancode(scancode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/acpi/quickstart.c:146:
+        struct key_entry *key = quickstart_get_entry_by_scancode(scancode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/acpi/quickstart.c:148:
+        if (key && key->type == KE_KEY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/acpi/quickstart.c:148:
+        if (key && key->type == KE_KEY) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/acpi/quickstart.c:149:
+                *keycode = key->keycode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/acpi/quickstart.c:149:
+                *keycode = key->keycode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/acpi/quickstart.c:150:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/acpi/quickstart.c:150:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/acpi/quickstart.c:151:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/acpi/quickstart.c:151:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/acpi/quickstart.c:153:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/acpi/quickstart.c:153:
+        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/acpi/quickstart.c:159:
+        struct key_entry *key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/acpi/quickstart.c:159:
+        struct key_entry *key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/acpi/quickstart.c:160:
+        int old_keycode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/acpi/quickstart.c:160:
+        int old_keycode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/acpi/quickstart.c:162:
+        if (keycode < 0 || keycode > KEY_MAX)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/acpi/quickstart.c:162:
+        if (keycode < 0 || keycode > KEY_MAX)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/acpi/quickstart.c:163:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/acpi/quickstart.c:163:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/acpi/quickstart.c:165:
+        key = quickstart_get_entry_by_scancode(scancode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/acpi/quickstart.c:165:
+        key = quickstart_get_entry_by_scancode(scancode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/acpi/quickstart.c:166:
+        if (key && key->type == KE_KEY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/acpi/quickstart.c:166:
+        if (key && key->type == KE_KEY) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/acpi/quickstart.c:167:
+                old_keycode = key->keycode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/acpi/quickstart.c:167:
+                old_keycode = key->keycode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/acpi/quickstart.c:168:
+                key->keycode = keycode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/acpi/quickstart.c:168:
+                key->keycode = keycode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/acpi/quickstart.c:169:
+                set_bit(keycode, dev->keybit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/acpi/quickstart.c:169:
+                set_bit(keycode, dev->keybit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/acpi/quickstart.c:170:
+                if (!quickstart_get_entry_by_keycode(old_keycode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/acpi/quickstart.c:170:
+                if (!quickstart_get_entry_by_keycode(old_keycode))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/acpi/quickstart.c:171:
+                        clear_bit(old_keycode, dev->keybit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/acpi/quickstart.c:171:
+                        clear_bit(old_keycode, dev->keybit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/acpi/quickstart.c:172:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/acpi/quickstart.c:172:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/acpi/quickstart.c:173:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/acpi/quickstart.c:173:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: drivers/acpi/quickstart.c:175:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/acpi/quickstart.c:175:
+        return -EINVAL;$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'quickstart_data.pressed->name'
#275: FILE: drivers/acpi/quickstart.c:209:
+			(quickstart_data.pressed ? quickstart_data.pressed->
+			 name : "none"));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ptr)...) over kzalloc(sizeof(struct quickstart_btn_list)...)
#300: FILE: drivers/acpi/quickstart.c:234:
+	*ptr = kzalloc(sizeof(struct quickstart_btn_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#322: FILE: drivers/acpi/quickstart.c:256:
+		if (lptr->name)
+			kfree(lptr->name);

WARNING:RETURN_VOID: void function return statements are not generally useful
#327: FILE: drivers/acpi/quickstart.c:261:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/acpi/quickstart.c:264:
+static void quickstart_acpi_get_event(struct quickstart_acpi *quickstart,
+	unsigned long long *button)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/acpi/quickstart.c:269:
+	status = acpi_evaluate_integer(quickstart->device->handle,
+				      "GHID", NULL, button);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#337: FILE: drivers/acpi/quickstart.c:271:
+		printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: drivers/acpi/quickstart.c:271:
+		printk (KERN_WARNING

WARNING:RETURN_VOID: void function return statements are not generally useful
#341: FILE: drivers/acpi/quickstart.c:275:
+	return;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: drivers/acpi/quickstart.c:289:
+	 * 0x80 - A quickstart button was pressed while device was up. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#364: FILE: drivers/acpi/quickstart.c:298:
+		printk(KERN_INFO "Quickstart: Unknown key pressed - 0x%llx\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#373: FILE: drivers/acpi/quickstart.c:307:
+	return;
+}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*quickstart)...) over kzalloc(sizeof(struct quickstart_acpi)...)
#404: FILE: drivers/acpi/quickstart.c:338:
+	quickstart = kzalloc(sizeof(struct quickstart_acpi), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#423: FILE: drivers/acpi/quickstart.c:357:
+		printk("quickstart: Error installing notify handler\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: drivers/acpi/quickstart.c:364:
+	 * This works, even if the method fails. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#457: FILE: drivers/acpi/quickstart.c:391:
+		printk("quickstart: Error removing notify handler\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#482: FILE: drivers/acpi/quickstart.c:416:
+	return;
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#543: FILE: drivers/acpi/quickstart.c:477:
+	printk("quickstart: ACPI Direct App Launch ver %s\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 37 errors, 55 warnings, 5 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
