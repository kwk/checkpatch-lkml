ERROR:SPACING: space required after that ',' (ctx:VxV)
#57: FILE: arch/x86/mm/ioremap_64.c:51:
+		err = change_page_attr_addr(vaddr,npages,MAKE_GLOBAL(__PAGE_KERNEL|flags));
 		                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#57: FILE: arch/x86/mm/ioremap_64.c:51:
+		err = change_page_attr_addr(vaddr,npages,MAKE_GLOBAL(__PAGE_KERNEL|flags));
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#57: FILE: arch/x86/mm/ioremap_64.c:51:
+		err = change_page_attr_addr(vaddr,npages,MAKE_GLOBAL(__PAGE_KERNEL|flags));
 		                                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#112: FILE: arch/x86/mm/pageattr_32.c:149:
+		 & ~(_PAGE_ACCESSED|_PAGE_DIRTY));
 		                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#132: FILE: arch/x86/mm/pageattr_32.c:172:
+	if (!pgprot_match(prot, ref_prot)) {
[...]
+			if (!kpte_page)
[...]
+		if (!PageReserved(kpte_page)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: arch/x86/mm/pageattr_32.c:176:
+			BUG_ON(!pgprot_match(old_prot, ref_prot));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#154: FILE: arch/x86/mm/pageattr_32.c:184:
+		if (!PageReserved(kpte_page)
+		    && pgprot_match(old_prot, ref_prot))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: arch/x86/mm/pageattr_32.c:187:
+		BUG_ON(pte_huge(*kpte));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#160: FILE: arch/x86/mm/pageattr_32.c:190:
+			BUG_ON(page_private(kpte_page) == 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#182: FILE: arch/x86/mm/pageattr_32.c:205:
+			unsigned i;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#226: FILE: arch/x86/mm/pageattr_64.c:105:
+};
+#define kref_prot(kaddr) kref_prot[((kaddr) - __START_KERNEL_map) >> PMD_SHIFT]

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#241: FILE: arch/x86/mm/pageattr_64.c:134:
+		 & __supported_pte_mask & ~(_PAGE_ACCESSED|_PAGE_DIRTY));
 		                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#261: FILE: arch/x86/mm/pageattr_64.c:151:
+	if (!pgprot_match(prot, ref_prot)) {
[...]
+			BUG_ON(!pgprot_match(old_prot, ref_prot));
[...]
-			set_pte(kpte, mk_pte(split, ref_prot2));
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: arch/x86/mm/pageattr_64.c:155:
+			BUG_ON(!pgprot_match(old_prot, ref_prot));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#287: FILE: arch/x86/mm/pageattr_64.c:164:
+		BUG_ON(pte_huge(*kpte));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#300: FILE: arch/x86/mm/pageattr_64.c:176:
+	if (page_private(kpte_page) == PTRS_PER_PTE
+	    && address >= __START_KERNEL_map

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#301: FILE: arch/x86/mm/pageattr_64.c:177:
+	    && address >= __START_KERNEL_map
+	    && address < __START_KERNEL_map + KERNEL_TEXT_SIZE) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: arch/x86/mm/pageattr_64.c:178:
+		unsigned i;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 9 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
