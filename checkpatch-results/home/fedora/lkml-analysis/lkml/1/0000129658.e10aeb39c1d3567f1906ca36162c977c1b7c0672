ERROR:INITIALISED_STATIC: do not initialise statics to 0
#56: FILE: Documentation/perf_counter/builtin-record.c:48:
+static unsigned int		realtime_prio			= 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#57: FILE: Documentation/perf_counter/builtin-record.c:49:
+static int			system_wide			= 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#105: FILE: Documentation/perf_counter/builtin-record.c:219:
+		case 's': system_wide                   ^=             1; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#106: FILE: Documentation/perf_counter/builtin-record.c:220:
+		case 'i': inherit			^=	       1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#107: FILE: Documentation/perf_counter/builtin-record.c:221:
+		case 'n': nmi				^=	       1; break;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#152: FILE: Documentation/perf_counter/builtin-record.c:365:
+	for (counter = 0; counter < nr_counters; counter++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: Documentation/perf_counter/builtin-record.c:382:
+			int err = errno;
+			printf("kerneltop error: syscall returned with %d (%s)\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: Documentation/perf_counter/builtin-record.c:383:
+			printf("kerneltop error: syscall returned with %d (%s)\n",
+					fd[nr_cpu][counter], strerror(err));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#190: FILE: Documentation/perf_counter/builtin-record.c:403:
+		mmap_array[nr_cpu][counter].mask = mmap_pages*page_size - 1;
 		                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: Documentation/perf_counter/builtin-record.c:404:
+		mmap_array[nr_cpu][counter].base = mmap(NULL, (mmap_pages+1)*page_size,
 		                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#191: FILE: Documentation/perf_counter/builtin-record.c:404:
+		mmap_array[nr_cpu][counter].base = mmap(NULL, (mmap_pages+1)*page_size,
 		                                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: Documentation/perf_counter/builtin-record.c:405:
+		mmap_array[nr_cpu][counter].base = mmap(NULL, (mmap_pages+1)*page_size,
+				PROT_READ, MAP_SHARED, fd[nr_cpu][counter], 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: Documentation/perf_counter/builtin-record.c:408:
+			printf("kerneltop error: failed to mmap with %d (%s)\n",
+					errno, strerror(errno));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: Documentation/perf_counter/builtin-record.c:440:
+	else for (i = 0; i < nr_cpus; i++)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: Documentation/perf_counter/builtin-record.c:440:
+	else for (i = 0; i < nr_cpus; i++)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#311: FILE: Documentation/perf_counter/builtin-stat.c:270:
+	switch (sscanf(str, "%d:%llu:%2s", &type, &id, mask_str)) {
+		case 3:
[...]
+		case 2:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:NAKED_SSCANF: unchecked sscanf return value
#311: FILE: Documentation/perf_counter/builtin-stat.c:270:
+	switch (sscanf(str, "%d:%llu:%2s", &type, &id, mask_str)) {
+		case 3:
+			if (strchr(mask_str, 'u'))
+				event_mask[nr_counters] |= EVENT_MASK_USER;
+			if (strchr(mask_str, 'k'))
+				event_mask[nr_counters] |= EVENT_MASK_KERNEL;
+		case 2:
+			return EID(type, id);
+
+		default:
+			break;
+	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000129658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 2 warnings, 7 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000129658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
