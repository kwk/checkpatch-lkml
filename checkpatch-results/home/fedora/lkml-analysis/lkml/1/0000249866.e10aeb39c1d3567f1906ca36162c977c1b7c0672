CHECK:LINE_SPACING: Please don't use multiple blank lines
#205: FILE: drivers/usb/host/ehci.h:217:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: include/linux/usb/ehci_def.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#228: FILE: include/linux/usb/ehci_def.h:15:
+ * along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#229: FILE: include/linux/usb/ehci_def.h:16:
+ * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#243: FILE: include/linux/usb/ehci_def.h:30:
+#define HC_LENGTH(p)		(((p)>>00)&0x00ff)	/* bits 7:0 */
                     		     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#243: FILE: include/linux/usb/ehci_def.h:30:
+#define HC_LENGTH(p)		(((p)>>00)&0x00ff)	/* bits 7:0 */
                     		          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#244: FILE: include/linux/usb/ehci_def.h:31:
+#define HC_VERSION(p)		(((p)>>16)&0xffff)	/* bits 31:16 */
                      		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#244: FILE: include/linux/usb/ehci_def.h:31:
+#define HC_VERSION(p)		(((p)>>16)&0xffff)	/* bits 31:16 */
                      		          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#246: FILE: include/linux/usb/ehci_def.h:33:
+#define HCS_DEBUG_PORT(p)	(((p)>>20)&0xf)	/* bits 23:20, debug port? */
                          	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#246: FILE: include/linux/usb/ehci_def.h:33:
+#define HCS_DEBUG_PORT(p)	(((p)>>20)&0xf)	/* bits 23:20, debug port? */
                          	          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#247: FILE: include/linux/usb/ehci_def.h:34:
+#define HCS_INDICATOR(p)	((p)&(1 << 16))	/* true: has port indicators */
                         	    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#248: FILE: include/linux/usb/ehci_def.h:35:
+#define HCS_N_CC(p)		(((p)>>12)&0xf)	/* bits 15:12, #companion HCs */
                    		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#248: FILE: include/linux/usb/ehci_def.h:35:
+#define HCS_N_CC(p)		(((p)>>12)&0xf)	/* bits 15:12, #companion HCs */
                    		          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#249: FILE: include/linux/usb/ehci_def.h:36:
+#define HCS_N_PCC(p)		(((p)>>8)&0xf)	/* bits 11:8, ports per CC */
                     		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#249: FILE: include/linux/usb/ehci_def.h:36:
+#define HCS_N_PCC(p)		(((p)>>8)&0xf)	/* bits 11:8, ports per CC */
                     		         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#250: FILE: include/linux/usb/ehci_def.h:37:
+#define HCS_PORTROUTED(p)	((p)&(1 << 7))	/* true: port routing */
                          	    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#251: FILE: include/linux/usb/ehci_def.h:38:
+#define HCS_PPC(p)		((p)&(1 << 4))	/* true: port power control */
                   		    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#252: FILE: include/linux/usb/ehci_def.h:39:
+#define HCS_N_PORTS(p)		(((p)>>0)&0xf)	/* bits 3:0, ports on HC */
                       		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#252: FILE: include/linux/usb/ehci_def.h:39:
+#define HCS_N_PORTS(p)		(((p)>>0)&0xf)	/* bits 3:0, ports on HC */
                       		         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#255: FILE: include/linux/usb/ehci_def.h:42:
+#define HCC_EXT_CAPS(p)		(((p)>>8)&0xff)	/* for pci extended caps */
                        		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#255: FILE: include/linux/usb/ehci_def.h:42:
+#define HCC_EXT_CAPS(p)		(((p)>>8)&0xff)	/* for pci extended caps */
                        		         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#256: FILE: include/linux/usb/ehci_def.h:43:
+#define HCC_ISOC_CACHE(p)       ((p)&(1 << 7))  /* true: can cache isoc frame */
                                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#257: FILE: include/linux/usb/ehci_def.h:44:
+#define HCC_ISOC_THRES(p)       (((p)>>4)&0x7)  /* bits 6:4, uframes cached */
                                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#257: FILE: include/linux/usb/ehci_def.h:44:
+#define HCC_ISOC_THRES(p)       (((p)>>4)&0x7)  /* bits 6:4, uframes cached */
                                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#258: FILE: include/linux/usb/ehci_def.h:45:
+#define HCC_CANPARK(p)		((p)&(1 << 2))  /* true: can park on async qh */
                       		    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#259: FILE: include/linux/usb/ehci_def.h:46:
+#define HCC_PGM_FRAMELISTLEN(p) ((p)&(1 << 1))  /* true: periodic_size changes*/
                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#260: FILE: include/linux/usb/ehci_def.h:47:
+#define HCC_64BIT_ADDR(p)       ((p)&(1))       /* true: can use 64-bit addr */
                                     ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#261: FILE: include/linux/usb/ehci_def.h:48:
+	u8		portroute [8];	 /* nibbles for routing - offset 0xC */

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#262: FILE: include/linux/usb/ehci_def.h:49:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: include/linux/usb/ehci_def.h:51:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#267: FILE: include/linux/usb/ehci_def.h:54:
+struct ehci_regs {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#271: FILE: include/linux/usb/ehci_def.h:58:
+#define CMD_PARK	(1<<11)		/* enable "park" on async qh */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#271: FILE: include/linux/usb/ehci_def.h:58:
+#define CMD_PARK	(1<<11)		/* enable "park" on async qh */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#272: FILE: include/linux/usb/ehci_def.h:59:
+#define CMD_PARK_CNT(c)	(((c)>>8)&3)	/* how many transfers to park for */
                        	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#272: FILE: include/linux/usb/ehci_def.h:59:
+#define CMD_PARK_CNT(c)	(((c)>>8)&3)	/* how many transfers to park for */
                        	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#273: FILE: include/linux/usb/ehci_def.h:60:
+#define CMD_LRESET	(1<<7)		/* partial reset (no ports, etc) */
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#273: FILE: include/linux/usb/ehci_def.h:60:
+#define CMD_LRESET	(1<<7)		/* partial reset (no ports, etc) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#274: FILE: include/linux/usb/ehci_def.h:61:
+#define CMD_IAAD	(1<<6)		/* "doorbell" interrupt async advance */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#274: FILE: include/linux/usb/ehci_def.h:61:
+#define CMD_IAAD	(1<<6)		/* "doorbell" interrupt async advance */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#275: FILE: include/linux/usb/ehci_def.h:62:
+#define CMD_ASE		(1<<5)		/* async schedule enable */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#275: FILE: include/linux/usb/ehci_def.h:62:
+#define CMD_ASE		(1<<5)		/* async schedule enable */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#276: FILE: include/linux/usb/ehci_def.h:63:
+#define CMD_PSE		(1<<4)		/* periodic schedule enable */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#276: FILE: include/linux/usb/ehci_def.h:63:
+#define CMD_PSE		(1<<4)		/* periodic schedule enable */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#278: FILE: include/linux/usb/ehci_def.h:65:
+#define CMD_RESET	(1<<1)		/* reset HC not bus */
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#278: FILE: include/linux/usb/ehci_def.h:65:
+#define CMD_RESET	(1<<1)		/* reset HC not bus */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#279: FILE: include/linux/usb/ehci_def.h:66:
+#define CMD_RUN		(1<<0)		/* start/stop HC */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#279: FILE: include/linux/usb/ehci_def.h:66:
+#define CMD_RUN		(1<<0)		/* start/stop HC */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#283: FILE: include/linux/usb/ehci_def.h:70:
+#define STS_ASS		(1<<15)		/* Async Schedule Status */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#283: FILE: include/linux/usb/ehci_def.h:70:
+#define STS_ASS		(1<<15)		/* Async Schedule Status */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#284: FILE: include/linux/usb/ehci_def.h:71:
+#define STS_PSS		(1<<14)		/* Periodic Schedule Status */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#284: FILE: include/linux/usb/ehci_def.h:71:
+#define STS_PSS		(1<<14)		/* Periodic Schedule Status */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#285: FILE: include/linux/usb/ehci_def.h:72:
+#define STS_RECL	(1<<13)		/* Reclamation */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#285: FILE: include/linux/usb/ehci_def.h:72:
+#define STS_RECL	(1<<13)		/* Reclamation */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#286: FILE: include/linux/usb/ehci_def.h:73:
+#define STS_HALT	(1<<12)		/* Not running (any reason) */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#286: FILE: include/linux/usb/ehci_def.h:73:
+#define STS_HALT	(1<<12)		/* Not running (any reason) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#289: FILE: include/linux/usb/ehci_def.h:76:
+#define STS_IAA		(1<<5)		/* Interrupted on async advance */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#289: FILE: include/linux/usb/ehci_def.h:76:
+#define STS_IAA		(1<<5)		/* Interrupted on async advance */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#290: FILE: include/linux/usb/ehci_def.h:77:
+#define STS_FATAL	(1<<4)		/* such as some PCI access errors */
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#290: FILE: include/linux/usb/ehci_def.h:77:
+#define STS_FATAL	(1<<4)		/* such as some PCI access errors */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#291: FILE: include/linux/usb/ehci_def.h:78:
+#define STS_FLR		(1<<3)		/* frame list rolled over */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#291: FILE: include/linux/usb/ehci_def.h:78:
+#define STS_FLR		(1<<3)		/* frame list rolled over */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#292: FILE: include/linux/usb/ehci_def.h:79:
+#define STS_PCD		(1<<2)		/* port change detect */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#292: FILE: include/linux/usb/ehci_def.h:79:
+#define STS_PCD		(1<<2)		/* port change detect */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#293: FILE: include/linux/usb/ehci_def.h:80:
+#define STS_ERR		(1<<1)		/* "error" completion (overflow, ...) */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#293: FILE: include/linux/usb/ehci_def.h:80:
+#define STS_ERR		(1<<1)		/* "error" completion (overflow, ...) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#294: FILE: include/linux/usb/ehci_def.h:81:
+#define STS_INT		(1<<0)		/* "normal" completion (short, ...) */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#294: FILE: include/linux/usb/ehci_def.h:81:
+#define STS_INT		(1<<0)		/* "normal" completion (short, ...) */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#308: FILE: include/linux/usb/ehci_def.h:95:
+	u32		reserved [9];

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#312: FILE: include/linux/usb/ehci_def.h:99:
+#define FLAG_CF		(1<<0)		/* true: we'll support "high speed" */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#312: FILE: include/linux/usb/ehci_def.h:99:
+#define FLAG_CF		(1<<0)		/* true: we'll support "high speed" */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#315: FILE: include/linux/usb/ehci_def.h:102:
+	u32		port_status [0];	/* up to N_PORTS */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#317: FILE: include/linux/usb/ehci_def.h:104:
+#define PORT_WKOC_E	(1<<22)		/* wake on overcurrent (enable) */
                    	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#317: FILE: include/linux/usb/ehci_def.h:104:
+#define PORT_WKOC_E	(1<<22)		/* wake on overcurrent (enable) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#318: FILE: include/linux/usb/ehci_def.h:105:
+#define PORT_WKDISC_E	(1<<21)		/* wake on disconnect (enable) */
                      	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#318: FILE: include/linux/usb/ehci_def.h:105:
+#define PORT_WKDISC_E	(1<<21)		/* wake on disconnect (enable) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#319: FILE: include/linux/usb/ehci_def.h:106:
+#define PORT_WKCONN_E	(1<<20)		/* wake on connect (enable) */
                      	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#319: FILE: include/linux/usb/ehci_def.h:106:
+#define PORT_WKCONN_E	(1<<20)		/* wake on connect (enable) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#321: FILE: include/linux/usb/ehci_def.h:108:
+#define PORT_LED_OFF	(0<<14)
                     	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#322: FILE: include/linux/usb/ehci_def.h:109:
+#define PORT_LED_AMBER	(1<<14)
                       	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#322: FILE: include/linux/usb/ehci_def.h:109:
+#define PORT_LED_AMBER	(1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#323: FILE: include/linux/usb/ehci_def.h:110:
+#define PORT_LED_GREEN	(2<<14)
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#324: FILE: include/linux/usb/ehci_def.h:111:
+#define PORT_LED_MASK	(3<<14)
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#325: FILE: include/linux/usb/ehci_def.h:112:
+#define PORT_OWNER	(1<<13)		/* true: companion hc owns this port */
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#325: FILE: include/linux/usb/ehci_def.h:112:
+#define PORT_OWNER	(1<<13)		/* true: companion hc owns this port */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#326: FILE: include/linux/usb/ehci_def.h:113:
+#define PORT_POWER	(1<<12)		/* true: has power (see PPC) */
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#326: FILE: include/linux/usb/ehci_def.h:113:
+#define PORT_POWER	(1<<12)		/* true: has power (see PPC) */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#327: FILE: include/linux/usb/ehci_def.h:114:
+#define PORT_USB11(x) (((x)&(3<<10)) == (1<<10))	/* USB 1.1 device */
                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#327: FILE: include/linux/usb/ehci_def.h:114:
+#define PORT_USB11(x) (((x)&(3<<10)) == (1<<10))	/* USB 1.1 device */
                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#327: FILE: include/linux/usb/ehci_def.h:114:
+#define PORT_USB11(x) (((x)&(3<<10)) == (1<<10))	/* USB 1.1 device */
                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#330: FILE: include/linux/usb/ehci_def.h:117:
+#define PORT_RESET	(1<<8)		/* reset port */
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#330: FILE: include/linux/usb/ehci_def.h:117:
+#define PORT_RESET	(1<<8)		/* reset port */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#331: FILE: include/linux/usb/ehci_def.h:118:
+#define PORT_SUSPEND	(1<<7)		/* suspend port */
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#331: FILE: include/linux/usb/ehci_def.h:118:
+#define PORT_SUSPEND	(1<<7)		/* suspend port */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#332: FILE: include/linux/usb/ehci_def.h:119:
+#define PORT_RESUME	(1<<6)		/* resume it */
                    	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#332: FILE: include/linux/usb/ehci_def.h:119:
+#define PORT_RESUME	(1<<6)		/* resume it */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#333: FILE: include/linux/usb/ehci_def.h:120:
+#define PORT_OCC	(1<<5)		/* over current change */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#333: FILE: include/linux/usb/ehci_def.h:120:
+#define PORT_OCC	(1<<5)		/* over current change */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#334: FILE: include/linux/usb/ehci_def.h:121:
+#define PORT_OC		(1<<4)		/* over current active */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#334: FILE: include/linux/usb/ehci_def.h:121:
+#define PORT_OC		(1<<4)		/* over current active */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#335: FILE: include/linux/usb/ehci_def.h:122:
+#define PORT_PEC	(1<<3)		/* port enable change */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#335: FILE: include/linux/usb/ehci_def.h:122:
+#define PORT_PEC	(1<<3)		/* port enable change */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#336: FILE: include/linux/usb/ehci_def.h:123:
+#define PORT_PE		(1<<2)		/* port enable */
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#336: FILE: include/linux/usb/ehci_def.h:123:
+#define PORT_PE		(1<<2)		/* port enable */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#337: FILE: include/linux/usb/ehci_def.h:124:
+#define PORT_CSC	(1<<1)		/* connect status change */
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#337: FILE: include/linux/usb/ehci_def.h:124:
+#define PORT_CSC	(1<<1)		/* connect status change */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#338: FILE: include/linux/usb/ehci_def.h:125:
+#define PORT_CONNECT	(1<<0)		/* device connected */
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#338: FILE: include/linux/usb/ehci_def.h:125:
+#define PORT_CONNECT	(1<<0)		/* device connected */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#340: FILE: include/linux/usb/ehci_def.h:127:
+} __attribute__ ((packed));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#343: FILE: include/linux/usb/ehci_def.h:130:
+#define USBMODE_SDIS	(1<<3)		/* Stream disable */
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#343: FILE: include/linux/usb/ehci_def.h:130:
+#define USBMODE_SDIS	(1<<3)		/* Stream disable */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#344: FILE: include/linux/usb/ehci_def.h:131:
+#define USBMODE_BE	(1<<2)		/* BE/LE endianness select */
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#344: FILE: include/linux/usb/ehci_def.h:131:
+#define USBMODE_BE	(1<<2)		/* BE/LE endianness select */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#345: FILE: include/linux/usb/ehci_def.h:132:
+#define USBMODE_CM_HC	(3<<0)		/* host controller mode */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#346: FILE: include/linux/usb/ehci_def.h:133:
+#define USBMODE_CM_IDLE	(0<<0)		/* idle state */
                        	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#353: FILE: include/linux/usb/ehci_def.h:140:
+#define DBGP_OWNER	(1<<30)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#353: FILE: include/linux/usb/ehci_def.h:140:
+#define DBGP_OWNER	(1<<30)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#354: FILE: include/linux/usb/ehci_def.h:141:
+#define DBGP_ENABLED	(1<<28)
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#354: FILE: include/linux/usb/ehci_def.h:141:
+#define DBGP_ENABLED	(1<<28)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#355: FILE: include/linux/usb/ehci_def.h:142:
+#define DBGP_DONE	(1<<16)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#355: FILE: include/linux/usb/ehci_def.h:142:
+#define DBGP_DONE	(1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#356: FILE: include/linux/usb/ehci_def.h:143:
+#define DBGP_INUSE	(1<<10)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#356: FILE: include/linux/usb/ehci_def.h:143:
+#define DBGP_INUSE	(1<<10)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#357: FILE: include/linux/usb/ehci_def.h:144:
+#define DBGP_ERRCODE(x)	(((x)>>7)&0x07)
                        	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#357: FILE: include/linux/usb/ehci_def.h:144:
+#define DBGP_ERRCODE(x)	(((x)>>7)&0x07)
                        	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#360: FILE: include/linux/usb/ehci_def.h:147:
+#define DBGP_ERROR	(1<<6)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#360: FILE: include/linux/usb/ehci_def.h:147:
+#define DBGP_ERROR	(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: include/linux/usb/ehci_def.h:148:
+#define DBGP_GO		(1<<5)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#361: FILE: include/linux/usb/ehci_def.h:148:
+#define DBGP_GO		(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#362: FILE: include/linux/usb/ehci_def.h:149:
+#define DBGP_OUT	(1<<4)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#362: FILE: include/linux/usb/ehci_def.h:149:
+#define DBGP_OUT	(1<<4)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#363: FILE: include/linux/usb/ehci_def.h:150:
+#define DBGP_LEN(x)	(((x)>>0)&0x0f)
                    	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#363: FILE: include/linux/usb/ehci_def.h:150:
+#define DBGP_LEN(x)	(((x)>>0)&0x0f)
                    	         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#365: FILE: include/linux/usb/ehci_def.h:152:
+#define DBGP_PID_GET(x)		(((x)>>16)&0xff)
                        		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#365: FILE: include/linux/usb/ehci_def.h:152:
+#define DBGP_PID_GET(x)		(((x)>>16)&0xff)
                        		          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#366: FILE: include/linux/usb/ehci_def.h:153:
+#define DBGP_PID_SET(data, tok)	(((data)<<8)|(tok))
                                	        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#366: FILE: include/linux/usb/ehci_def.h:153:
+#define DBGP_PID_SET(data, tok)	(((data)<<8)|(tok))
                                	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#370: FILE: include/linux/usb/ehci_def.h:157:
+#define DBGP_EPADDR(dev, ep)	(((dev)<<8)|(ep))
                             	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#370: FILE: include/linux/usb/ehci_def.h:157:
+#define DBGP_EPADDR(dev, ep)	(((dev)<<8)|(ep))
                             	           ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#371: FILE: include/linux/usb/ehci_def.h:158:
+} __attribute__ ((packed));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249866.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 4 warnings, 130 checks, 308 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249866.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
