WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: fs/proc/array.c:178:
+^I       ^Itask_tgid_nr_ns(p, ns),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: fs/proc/array.c:178:
+^I       ^Itask_tgid_nr_ns(p, ns),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: fs/proc/array.c:180:
+^I       ^Ipid_alive(p) ?$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: fs/proc/array.c:180:
+^I       ^Ipid_alive(p) ?$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: fs/proc/base.c:2247:
+static struct task_struct *next_tgid(unsigned int tgid,
+		struct pid_namespace *ns)

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: fs/proc/base.c:2255:
+ ^Ipid = find_ge_pid(tgid, ns);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: fs/proc/base.c:2255:
+ ^Ipid = find_ge_pid(tgid, ns);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: fs/proc/base.c:2255:
+ ^Ipid = find_ge_pid(tgid, ns);$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#523: FILE: ipc/sem.c:1201:
+	error = try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: kernel/capability.c:71:
+     if (pid && pid != task_pid_vnr(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#590: FILE: kernel/capability.c:71:
+     if (pid && pid != task_pid_vnr(current)) {
+	     target = find_task_by_pid_ns(pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: kernel/capability.c:73:
+	     target = find_task_by_pid_ns(pid,
+			     current->nsproxy->pid_ns);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: kernel/capability.c:195:
+     if (pid && pid != task_pid_vnr(current) && !capable(CAP_SETPCAP))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#601: FILE: kernel/capability.c:195:
+     if (pid && pid != task_pid_vnr(current) && !capable(CAP_SETPCAP))
              return -EPERM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: kernel/capability.c:206:
+     if (pid > 0 && pid != task_pid_vnr(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#611: FILE: kernel/capability.c:206:
+     if (pid > 0 && pid != task_pid_vnr(current)) {
+          target = find_task_by_pid_ns(pid,

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: kernel/capability.c:207:
+          target = find_task_by_pid_ns(pid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: kernel/capability.c:207:
+          target = find_task_by_pid_ns(pid,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: kernel/capability.c:208:
+          target = find_task_by_pid_ns(pid,
+			  current->nsproxy->pid_ns);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#854: FILE: kernel/ptrace.c:444:
+	child = find_task_by_pid_ns(pid,
+			current->nsproxy->pid_ns);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: kernel/sys.c:680:
+				p = find_task_by_pid_ns(who,
+						current->nsproxy->pid_ns);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: kernel/sys.c:738:
+				p = find_task_by_pid_ns(who,
+						current->nsproxy->pid_ns);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: kernel/sys.c:1483:
+			find_task_by_pid_type_ns(PIDTYPE_PGID, pgid,
+					current->nsproxy->pid_ns);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1035: FILE: kernel/sys.c:1519:
+		p = find_task_by_pid_ns(pid,
+				current->nsproxy->pid_ns);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1068: FILE: kernel/sys.c:1552:
+		p = find_task_by_pid_ns(pid,
+				current->nsproxy->pid_ns);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1170: FILE: net/unix/af_unix.c:1169:
+	ska->sk_peercred.pid = skb->sk_peercred.pid = task_tgid_vnr(current);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409898.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 36 warnings, 10 checks, 950 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409898.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
