WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: arch/x86/mm/pgtable.c:1:
+#include <linux/mm.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#59: FILE: arch/x86/mm/pgtable.c:7:
+	return (pte_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO);
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#59: FILE: arch/x86/mm/pgtable.c:7:
+	return (pte_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO);
 	                                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#67: FILE: arch/x86/mm/pgtable.c:15:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO, 0);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#67: FILE: arch/x86/mm/pgtable.c:15:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#67: FILE: arch/x86/mm/pgtable.c:15:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#69: FILE: arch/x86/mm/pgtable.c:17:
+	pte = alloc_pages(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#69: FILE: arch/x86/mm/pgtable.c:17:
+	pte = alloc_pages(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO, 0);
 	                                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#99: FILE: arch/x86/mm/pgtable.c:47:
+	unsigned boundary;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#100: FILE: arch/x86/mm/pgtable.c:48:
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT);
 	                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: arch/x86/mm/pgtable.c:49:
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT);
+	if (!pgd)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#119: FILE: arch/x86/mm/pgtable.c:67:
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#119: FILE: arch/x86/mm/pgtable.c:67:
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: arch/x86/mm/pgtable.c:105:
+	memset(pgd, 0, USER_PTRS_PER_PGD*sizeof(pgd_t));
 	                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#162: FILE: arch/x86/mm/pgtable.c:110:
+	/* If the pgd points to a shared pagetable level (either the
+	   ptes in non-PAE, or shared PMD in PAE), then just copy the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#163: FILE: arch/x86/mm/pgtable.c:111:
+	   references from swapper_pg_dir. */

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: arch/x86/mm/pgtable.c:153:
+	for(i = 0; i < UNSHARED_PTRS_PER_PGD; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: arch/x86/mm/pgtable.c:185:
+ ^Ifor (addr = i = 0; i < UNSHARED_PTRS_PER_PGD;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: arch/x86/mm/pgtable.c:185:
+ ^Ifor (addr = i = 0; i < UNSHARED_PTRS_PER_PGD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/x86/mm/pgtable.c:185:
+ ^Ifor (addr = i = 0; i < UNSHARED_PTRS_PER_PGD;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#493: FILE: include/asm-x86/pgalloc.h:1:
+#ifndef _ASM_X86_PGALLOC_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#503: FILE: include/asm-x86/pgalloc.h:11:
+extern pgd_t *pgd_alloc(struct mm_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#504: FILE: include/asm-x86/pgalloc.h:12:
+extern void pgd_free(struct mm_struct *mm, pgd_t *pgd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#506: FILE: include/asm-x86/pgalloc.h:14:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#506: FILE: include/asm-x86/pgalloc.h:14:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#506: FILE: include/asm-x86/pgalloc.h:14:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#507: FILE: include/asm-x86/pgalloc.h:15:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#507: FILE: include/asm-x86/pgalloc.h:15:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#507: FILE: include/asm-x86/pgalloc.h:15:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 14 warnings, 14 checks, 561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
