WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Undo random white space changes. This reverts ddb53b5735793a19dc17bcd98b050f672f28f1ea

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: arch/x86/mm/pageattr_32.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: arch/x86/mm/pageattr_32.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#48: FILE: arch/x86/mm/pageattr_32.c:2:
+ * Copyright 2002 Andi Kleen, SuSE Labs. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: arch/x86/mm/pageattr_32.c:4:
+ */ $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#61: FILE: arch/x86/mm/pageattr_32.c:11:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#74: FILE: arch/x86/mm/pageattr_32.c:20:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/x86/mm/pageattr_32.c:21:
+pte_t *lookup_address(unsigned long address) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: arch/x86/mm/pageattr_32.c:22:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: arch/x86/mm/pageattr_32.c:37:
+} $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: arch/x86/mm/pageattr_32.c:40:
+static struct page *split_large_page(unsigned long address, pgprot_t prot,
+					pgprot_t ref_prot)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/x86/mm/pageattr_32.c:41:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/x86/mm/pageattr_32.c:42:
+^Iint i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/x86/mm/pageattr_32.c:50:
+^Iif (!base) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: arch/x86/mm/pageattr_32.c:61:
+^Iaddr = address & LARGE_PAGE_MASK; $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#122: FILE: arch/x86/mm/pageattr_32.c:64:
 	for (i = 0; i < PTRS_PER_PTE; i++, addr += PAGE_SIZE) {
+	       set_pte(&pbase[i], pfn_pte(addr >> PAGE_SHIFT,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: arch/x86/mm/pageattr_32.c:69:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/x86/mm/pageattr_32.c:72:
+{ $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: arch/x86/mm/pageattr_32.c:76:
+		clflush(adr+i);
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: arch/x86/mm/pageattr_32.c:86:
+		list_for_each_entry (p, lh, lru)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/x86/mm/pageattr_32.c:91:
+^I/* Flush all to work around Errata in early athlons regarding $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/x86/mm/pageattr_32.c:92:
+^I * large page flushing. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/x86/mm/pageattr_32.c:94:
+^I__flush_tlb_all();^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/x86/mm/pageattr_32.c:97:
+static void set_pmd_pte(pte_t *kpte, unsigned long address, pte_t pte) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/x86/mm/pageattr_32.c:98:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: arch/x86/mm/pageattr_32.c:119:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/x86/mm/pageattr_32.c:121:
+ * large page again. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: arch/x86/mm/pageattr_32.c:147:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: arch/x86/mm/pageattr_32.c:148:
+^Ipte_t *kpte; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: arch/x86/mm/pageattr_32.c:162:
+^Iif (pgprot_val(prot) != pgprot_val(PAGE_KERNEL)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/x86/mm/pageattr_32.c:164:
+^I^I^Iset_pte_atomic(kpte, mk_pte(page, prot)); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#248: FILE: arch/x86/mm/pageattr_32.c:175:
+			set_pmd_pte(kpte,address,mk_pte(split, ref_prot));
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#248: FILE: arch/x86/mm/pageattr_32.c:175:
+			set_pmd_pte(kpte,address,mk_pte(split, ref_prot));
 			                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: arch/x86/mm/pageattr_32.c:181:
+		BUG_ON(page_private(kpte_page) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#264: FILE: arch/x86/mm/pageattr_32.c:183:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#265: FILE: arch/x86/mm/pageattr_32.c:184:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: arch/x86/mm/pageattr_32.c:200:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: arch/x86/mm/pageattr_32.c:214:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: arch/x86/mm/pageattr_32.c:217:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: arch/x86/mm/pageattr_32.c:222:
+^Iint err = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: arch/x86/mm/pageattr_32.c:223:
+^Iint i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/x86/mm/pageattr_32.c:227:
+^Ifor (i = 0; i < numpages; i++, page++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: arch/x86/mm/pageattr_32.c:229:
+^I^Iif (err) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: arch/x86/mm/pageattr_32.c:230:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: arch/x86/mm/pageattr_32.c:231:
+^I}^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#354: FILE: arch/x86/mm/pageattr_32.c:277:
+EXPORT_SYMBOL(change_page_attr);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: arch/x86/mm/pageattr_64.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#363: FILE: arch/x86/mm/pageattr_64.c:1:
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: arch/x86/mm/pageattr_64.c:2:
+ * Copyright 2002 Andi Kleen, SuSE Labs. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: arch/x86/mm/pageattr_64.c:4:
+ */ $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#377: FILE: arch/x86/mm/pageattr_64.c:11:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: arch/x86/mm/pageattr_64.c:17:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: arch/x86/mm/pageattr_64.c:26:
+^I^Ireturn NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/x86/mm/pageattr_64.c:29:
+^I^Ireturn NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: arch/x86/mm/pageattr_64.c:34:
+^I^Ipte = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: arch/x86/mm/pageattr_64.c:36:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: arch/x86/mm/pageattr_64.c:40:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: arch/x86/mm/pageattr_64.c:41:
+^Iint i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: arch/x86/mm/pageattr_64.c:45:
+^Iif (!base) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: arch/x86/mm/pageattr_64.c:55:
+^Iaddr = address & LARGE_PAGE_MASK; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: arch/x86/mm/pageattr_64.c:58:
+^I^Ipbase[i] = pfn_pte(addr >> PAGE_SHIFT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: arch/x86/mm/pageattr_64.c:62:
+} $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: arch/x86/mm/pageattr_64.c:68:
+		clflush(adr+i);
 		           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#472: FILE: arch/x86/mm/pageattr_64.c:81:
+	else list_for_each_entry(pg, l, lru) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#474: FILE: arch/x86/mm/pageattr_64.c:83:
+		void *adr = page_address(pg);
+		clflush_cache_range(adr, PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: arch/x86/mm/pageattr_64.c:89:
+{^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: arch/x86/mm/pageattr_64.c:101:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: arch/x86/mm/pageattr_64.c:103:
+ * large page again. $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: arch/x86/mm/pageattr_64.c:115:
+	pud = pud_offset(pgd,address);
 	                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: arch/x86/mm/pageattr_64.c:123:
+}      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: arch/x86/mm/pageattr_64.c:128:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: arch/x86/mm/pageattr_64.c:129:
+^Ipte_t *kpte; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#534: FILE: arch/x86/mm/pageattr_64.c:134:
+	if (!kpte) return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: arch/x86/mm/pageattr_64.c:138:
+^Iif (pgprot_val(prot) != pgprot_val(ref_prot)) { $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#565: FILE: arch/x86/mm/pageattr_64.c:158:
+		BUG_ON(page_private(kpte_page) == 0);

CHECK:BRACES: Unbalanced braces around else statement
#567: FILE: arch/x86/mm/pageattr_64.c:160:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#568: FILE: arch/x86/mm/pageattr_64.c:161:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: arch/x86/mm/pageattr_64.c:170:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: arch/x86/mm/pageattr_64.c:179:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: arch/x86/mm/pageattr_64.c:182:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: arch/x86/mm/pageattr_64.c:188:
+^Iint i; $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#603: FILE: arch/x86/mm/pageattr_64.c:191:
+	if (address >= __START_KERNEL_map
+	    && address < __START_KERNEL_map + KERNEL_TEXT_SIZE) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: arch/x86/mm/pageattr_64.c:215:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: arch/x86/mm/pageattr_64.c:216:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: arch/x86/mm/pageattr_64.c:217:
+^Iup_write(&init_mm.mmap_sem); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: arch/x86/mm/pageattr_64.c:229:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: arch/x86/mm/pageattr_64.c:251:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: arch/x86/mm/pageattr_64.c:252:
+} $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#661: FILE: arch/x86/mm/pageattr_64.c:254:
+EXPORT_SYMBOL(change_page_attr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336786.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 68 errors, 12 warnings, 9 checks, 591 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336786.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
