ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/input/touchscreen/Makefile:29:
+obj-$(CONFIG_TOUCHSCREEN_SYNAPTICS_RMI4_I2C)^I+= rmi_core.o $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#87: FILE: drivers/input/touchscreen/Makefile:29:
rmi_app_touchpad.o rmi_function_11.o rmi_phys_i2c.o rmi_i2c_gta01.o

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#98: FILE: drivers/input/touchscreen/Makefile

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#98: 
new file mode 100755

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: drivers/input/touchscreen/rmi.h:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/input/touchscreen/rmi.h:11:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/input/touchscreen/rmi.h:19:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/input/touchscreen/rmi.h:23:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/input/touchscreen/rmi.h:29:
+/** For each function present on the RMI device, we need to get the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/input/touchscreen/rmi.h:31:
+ *  addresses for Query, Command, Control, Data and the Source Count $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/input/touchscreen/rmi.h:35:
+  unsigned char queryBaseAddr;$

CHECK:CAMELCASE: Avoid CamelCase: <queryBaseAddr>
#142: FILE: drivers/input/touchscreen/rmi.h:35:
+  unsigned char queryBaseAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/input/touchscreen/rmi.h:36:
+  unsigned char commandBaseAddr;$

CHECK:CAMELCASE: Avoid CamelCase: <commandBaseAddr>
#143: FILE: drivers/input/touchscreen/rmi.h:36:
+  unsigned char commandBaseAddr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/input/touchscreen/rmi.h:37:
+  unsigned char controlBaseAddr;$

CHECK:CAMELCASE: Avoid CamelCase: <controlBaseAddr>
#144: FILE: drivers/input/touchscreen/rmi.h:37:
+  unsigned char controlBaseAddr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/input/touchscreen/rmi.h:38:
+  unsigned char dataBaseAddr;$

CHECK:CAMELCASE: Avoid CamelCase: <dataBaseAddr>
#145: FILE: drivers/input/touchscreen/rmi.h:38:
+  unsigned char dataBaseAddr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/input/touchscreen/rmi.h:39:
+  unsigned char interruptSrcCnt;$

CHECK:CAMELCASE: Avoid CamelCase: <interruptSrcCnt>
#146: FILE: drivers/input/touchscreen/rmi.h:39:
+  unsigned char interruptSrcCnt;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/input/touchscreen/rmi.h:40:
+  unsigned char functionNum;$

CHECK:CAMELCASE: Avoid CamelCase: <functionNum>
#147: FILE: drivers/input/touchscreen/rmi.h:40:
+  unsigned char functionNum;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/input/touchscreen/rmi.h:43:
+/** For each function present on the RMI device, there will be a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/input/touchscreen/rmi.h:44:
+ * entry in the functions list of the rmi_module_info structure.  This $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: drivers/input/touchscreen/rmi.h:45:
+ * gives information about the number of data sources and the number of $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/input/touchscreen/rmi.h:50:
+  unsigned char functionNum;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/input/touchscreen/rmi.h:57:
+  unsigned char numSources;$

CHECK:CAMELCASE: Avoid CamelCase: <numSources>
#167: FILE: drivers/input/touchscreen/rmi.h:57:
+  unsigned char numSources;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: drivers/input/touchscreen/rmi.h:60:
+   *  function $11 (2D sensor) the number of data points is equal to $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/input/touchscreen/rmi.h:63:
+  unsigned char numDataPoints;$

CHECK:CAMELCASE: Avoid CamelCase: <numDataPoints>
#174: FILE: drivers/input/touchscreen/rmi.h:63:
+  unsigned char numDataPoints;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/input/touchscreen/rmi.h:67:
+  unsigned char dataRegBlockSize;$

CHECK:CAMELCASE: Avoid CamelCase: <dataRegBlockSize>
#178: FILE: drivers/input/touchscreen/rmi.h:67:
+  unsigned char dataRegBlockSize;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/input/touchscreen/rmi.h:69:
+  /** This is the interrupt register and mask - needed for enabling the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/input/touchscreen/rmi.h:72:
+  unsigned char interruptRegister;$

CHECK:CAMELCASE: Avoid CamelCase: <interruptRegister>
#184: FILE: drivers/input/touchscreen/rmi.h:72:
+  unsigned char interruptRegister;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/input/touchscreen/rmi.h:73:
+  unsigned char interruptMask;$

CHECK:CAMELCASE: Avoid CamelCase: <interruptMask>
#185: FILE: drivers/input/touchscreen/rmi.h:73:
+  unsigned char interruptMask;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/input/touchscreen/rmi.h:79:
+  struct rmi_function_descriptor funcDescriptor;$

CHECK:CAMELCASE: Avoid CamelCase: <funcDescriptor>
#191: FILE: drivers/input/touchscreen/rmi.h:79:
+  struct rmi_function_descriptor funcDescriptor;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/input/touchscreen/rmi.h:85:
+  struct list_head link;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/input/touchscreen/rmi.h:88:
+/* This struct is for creating a list of RMI4 functions that have data $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#202: FILE: drivers/input/touchscreen/rmi.h:89:
+/* This struct is for creating a list of RMI4 functions that have data 
+   associated with them. This is to facilitate adding new support for other

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/input/touchscreen/rmi.h:96:
+   The function number will be associated with this and later will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/input/touchscreen/rmi.h:97:
+   match the RMI4 function to the 4 functions for that RMI4 function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/input/touchscreen/rmi.h:100:
+   to the global list of RMI4 functions and stores the pointers to the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/input/touchscreen/rmi.h:104:
+  unsigned char functionNum;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/input/touchscreen/rmi.h:106:
+  struct input_dev *input;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/input/touchscreen/rmi.h:108:
+  /* ptrs to function specific functions for report, config, init and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#226: FILE: drivers/input/touchscreen/rmi.h:109:
+  /* ptrs to function specific functions for report, config, init and 
+  /* These ptrs. need to be filled in for every RMI4 function that has data

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/input/touchscreen/rmi.h:110:
+     source(s) associated with it - like fn $11 (2D sensors), fn $19 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: drivers/input/touchscreen/rmi.h:110:
+  /* These ptrs. need to be filled in for every RMI4 function that has data
+     source(s) associated with it - like fn $11 (2D sensors), fn $19 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/input/touchscreen/rmi.h:111:
+     etc. Each RMI4 function that has data sources will be added into a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: drivers/input/touchscreen/rmi.h:112:
+     that is used to match the function number against the number $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/input/touchscreen/rmi.h:114:
+  int  (*report)(struct rmi_application *app, struct rmi_function_info $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/input/touchscreen/rmi.h:114:
+  int  (*report)(struct rmi_application *app, struct rmi_function_info $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: drivers/input/touchscreen/rmi.h:115:
+  void (*config)(struct rmi_application *app, struct rmi_function_info $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/input/touchscreen/rmi.h:115:
+  void (*config)(struct rmi_application *app, struct rmi_function_info $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/input/touchscreen/rmi.h:116:
+  void (*init)(struct input_dev *input);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/input/touchscreen/rmi.h:117:
+  void (*detect)(struct rmi_application *app, struct rmi_function_info $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/input/touchscreen/rmi.h:117:
+  void (*detect)(struct rmi_application *app, struct rmi_function_info $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/input/touchscreen/rmi.h:123:
+  struct list_head link;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#249: FILE: drivers/input/touchscreen/rmi.h:126:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/input/touchscreen/rmi.h:127:
+/* Each time a new RMI4 function support is added the developer needs $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: drivers/input/touchscreen/rmi.h:128:
+   supported data src functions and add the info for that RMI4 function $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: drivers/input/touchscreen/rmi.h:128:
+/* Each time a new RMI4 function support is added the developer needs 
+   supported data src functions and add the info for that RMI4 function 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/input/touchscreen/rmi.h:129:
+   with pointers to the report, config, init and detect functions that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/input/touchscreen/rmi.h:130:
+   and rmi_function_xx.h - where xx is the RMI4 function number for the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/input/touchscreen/rmi.h:131:
+   The information for the RMI4 functions is obtained from the RMI4 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/input/touchscreen/rmi.h:135:
+/* add hdr files for all prototypes for RMI4 data source functions $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#265: FILE: drivers/input/touchscreen/rmi.h:136:
+/* add hdr files for all prototypes for RMI4 data source functions 
+#include "rmi_function_11.h"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/input/touchscreen/rmi.h:139:
+typedef int(*reportFuncPtr)(struct rmi_application *, struct $

CHECK:CAMELCASE: Avoid CamelCase: <reportFuncPtr>
#268: FILE: drivers/input/touchscreen/rmi.h:139:
+typedef int(*reportFuncPtr)(struct rmi_application *, struct 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/input/touchscreen/rmi.h:140:
+typedef void(*configFuncPtr)(struct rmi_application *app, struct $

CHECK:CAMELCASE: Avoid CamelCase: <configFuncPtr>
#270: FILE: drivers/input/touchscreen/rmi.h:140:
+typedef void(*configFuncPtr)(struct rmi_application *app, struct 

CHECK:CAMELCASE: Avoid CamelCase: <initFuncPtr>
#272: FILE: drivers/input/touchscreen/rmi.h:141:
+typedef void(*initFuncPtr)(struct input_dev *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/input/touchscreen/rmi.h:142:
+typedef void(*detectFuncPtr)(struct rmi_application *, struct $

CHECK:CAMELCASE: Avoid CamelCase: <detectFuncPtr>
#273: FILE: drivers/input/touchscreen/rmi.h:142:
+typedef void(*detectFuncPtr)(struct rmi_application *, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/input/touchscreen/rmi.h:145:
+  int functionNumber;$

CHECK:CAMELCASE: Avoid CamelCase: <functionNumber>
#277: FILE: drivers/input/touchscreen/rmi.h:145:
+  int functionNumber;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/input/touchscreen/rmi.h:146:
+  reportFuncPtr reportFn;$

CHECK:CAMELCASE: Avoid CamelCase: <reportFn>
#278: FILE: drivers/input/touchscreen/rmi.h:146:
+  reportFuncPtr reportFn;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/input/touchscreen/rmi.h:147:
+  configFuncPtr configFn;$

CHECK:CAMELCASE: Avoid CamelCase: <configFn>
#279: FILE: drivers/input/touchscreen/rmi.h:147:
+  configFuncPtr configFn;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/input/touchscreen/rmi.h:148:
+  initFuncPtr initFn;$

CHECK:CAMELCASE: Avoid CamelCase: <initFn>
#280: FILE: drivers/input/touchscreen/rmi.h:148:
+  initFuncPtr initFn;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/input/touchscreen/rmi.h:149:
+  detectFuncPtr detectFn;$

CHECK:CAMELCASE: Avoid CamelCase: <detectFn>
#281: FILE: drivers/input/touchscreen/rmi.h:149:
+  detectFuncPtr detectFn;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#283: FILE: drivers/input/touchscreen/rmi.h:151:
+};
+/* NOTE:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/input/touchscreen/rmi.h:152:
+   Developer - add in any new RMI4 fn data info - function number and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#284: FILE: drivers/input/touchscreen/rmi.h:152:
+/* NOTE:
+   Developer - add in any new RMI4 fn data info - function number and 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/input/touchscreen/rmi.h:153:
+   This data is used to point to the functions that need to be called $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/input/touchscreen/rmi.h:154:
+   new RMI4 function. These only need to be added for RMI4 functions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/input/touchscreen/rmi.h:155:
+   LEDs, GPIOs, etc. Refer to the RMI4 specification for information on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/input/touchscreen/rmi.h:158:
+struct rmi_functions_data $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#296: FILE: drivers/input/touchscreen/rmi.h:159:
+struct rmi_functions_data 
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/input/touchscreen/rmi.h:161:
+  {0x11, FN_11_report, FN_11_config, FN_11_init, FN_11_detect},$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#304: FILE: drivers/input/touchscreen/rmi.h:167:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: drivers/input/touchscreen/rmi.h:176:
+ *  Specific register information is provided in the comments for each $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/input/touchscreen/rmi.h:183:
+  unsigned rmi_maj_ver;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#321: FILE: drivers/input/touchscreen/rmi.h:183:
+  unsigned rmi_maj_ver;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/input/touchscreen/rmi.h:187:
+  unsigned rmi_min_ver;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#325: FILE: drivers/input/touchscreen/rmi.h:187:
+  unsigned rmi_min_ver;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/input/touchscreen/rmi.h:191:
+  unsigned char mfgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/input/touchscreen/rmi.h:195:
+  unsigned char properties;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/input/touchscreen/rmi.h:202:
+  unsigned char prod_info[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/input/touchscreen/rmi.h:206:
+  unsigned char date_code[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/input/touchscreen/rmi.h:210:
+  unsigned short tester_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/input/touchscreen/rmi.h:214:
+  unsigned short serial_num;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/input/touchscreen/rmi.h:218:
+  char prod_id[10];$

WARNING:REPEATED_WORD: Possible repeated word: 'on'
#360: FILE: drivers/input/touchscreen/rmi.h:222:
+   * Documentation on on how to use it can be found at

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/input/touchscreen/rmi.h:226:
+  struct list_head functions;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/input/touchscreen/rmi.h:230:
+  char *name;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/input/touchscreen/rmi.h:231:
+  int  (*write)(struct rmi_phys_driver *pd, unsigned short address, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/input/touchscreen/rmi.h:231:
+  int  (*write)(struct rmi_phys_driver *pd, unsigned short address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/input/touchscreen/rmi.h:232:
+  int  (*read)(struct rmi_phys_driver *pd, unsigned short address, char $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/input/touchscreen/rmi.h:232:
+  int  (*write)(struct rmi_phys_driver *pd, unsigned short address, 
+  int  (*read)(struct rmi_phys_driver *pd, unsigned short address, char 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/input/touchscreen/rmi.h:232:
+  int  (*read)(struct rmi_phys_driver *pd, unsigned short address, char $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/input/touchscreen/rmi.h:232:
+  int  (*write)(struct rmi_phys_driver *pd, unsigned short address, 
*buffer);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/input/touchscreen/rmi.h:233:
+  int  (*write_multiple)(struct rmi_phys_driver *pd, unsigned short $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/input/touchscreen/rmi.h:233:
+  int  (*write_multiple)(struct rmi_phys_driver *pd, unsigned short $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/input/touchscreen/rmi.h:234:
+  int  (*read_multiple)(struct rmi_phys_driver *pd, unsigned short $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/input/touchscreen/rmi.h:234:
+  int  (*read_multiple)(struct rmi_phys_driver *pd, unsigned short $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/input/touchscreen/rmi.h:235:
+  void (*attention)(struct rmi_phys_driver *pd, int instance);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/input/touchscreen/rmi.h:236:
+  int  (*get_attention)(struct rmi_phys_driver *pd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/input/touchscreen/rmi.h:237:
+  int  polling_required;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/input/touchscreen/rmi.h:243:
+  struct list_head drivers;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/input/touchscreen/rmi.h:244:
+  struct rmi_application *app;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/input/touchscreen/rmi.h:245:
+  struct rmi_module_info rmi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/input/touchscreen/rmi.h:246:
+  struct module *module;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: drivers/input/touchscreen/rmi.h:249:
+int rmi_read(struct rmi_application *app, unsigned short address, char $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/input/touchscreen/rmi.h:250:
+int rmi_write(struct rmi_application *app, unsigned short address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/input/touchscreen/rmi.h:251:
+int rmi_read_multiple(struct rmi_application *app, unsigned short $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: drivers/input/touchscreen/rmi.h:251:
+int rmi_write(struct rmi_application *app, unsigned short address, 
+int rmi_read_multiple(struct rmi_application *app, unsigned short 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/input/touchscreen/rmi.h:251:
+int rmi_write(struct rmi_application *app, unsigned short address, 
address, char *dest, int length);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/input/touchscreen/rmi.h:252:
+int rmi_write_multiple(struct rmi_application *app, unsigned short $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/input/touchscreen/rmi.h:257:
+struct rmi_application *rmi_register_application(const char *name,
+  void (*attention)(struct rmi_phys_driver *pd, int instance),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/input/touchscreen/rmi.h:257:
+  void (*attention)(struct rmi_phys_driver *pd, int instance),$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: drivers/input/touchscreen/rmi.h:258:
+  int (*probe)(struct rmi_application *app, const struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/input/touchscreen/rmi.h:258:
+  int (*probe)(struct rmi_application *app, const struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/input/touchscreen/rmi.h:259:
+  void (*config)(struct rmi_application *app));$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#420: FILE: drivers/input/touchscreen/rmi.h:273:
+#   define INC_ALLOC_STAT(X)   X##allocsrmi++

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: drivers/input/touchscreen/rmi.h:275:
+	do { if(X##allocsrmi) X##allocsrmi--; \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#423: FILE: drivers/input/touchscreen/rmi.h:276:
+	     else printk("Too many " #X " frees\n"); } while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#423: FILE: drivers/input/touchscreen/rmi.h:276:
+	     else printk("Too many " #X " frees\n"); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#423: FILE: drivers/input/touchscreen/rmi.h:276:
+	     else printk("Too many " #X " frees\n"); } while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#423: FILE: drivers/input/touchscreen/rmi.h:276:
+	     else printk("Too many " #X " frees\n"); } while(0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: drivers/input/touchscreen/rmi.h:278:
+	do { if(X##allocsrmi) printk("Left over " #X " buffers: %d\n", \

ERROR:SPACING: space required before the open parenthesis '('
#425: FILE: drivers/input/touchscreen/rmi.h:278:
+	do { if(X##allocsrmi) printk("Left over " #X " buffers: %d\n", \

ERROR:SPACING: space required before the open parenthesis '('
#426: FILE: drivers/input/touchscreen/rmi.h:279:
+		X##allocsrmi); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#428: FILE: drivers/input/touchscreen/rmi.h:281:
+#   define INC_ALLOC_STAT(X)   do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: drivers/input/touchscreen/rmi.h:282:
+#   define DEC_ALLOC_STAT(X)   do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#430: FILE: drivers/input/touchscreen/rmi.h:283:
+#   define CHECK_ALLOC_STAT(X) do { } while(0)

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#436: FILE: drivers/input/touchscreen/rmi.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#441: FILE: drivers/input/touchscreen/rmi.mod.c:1:
+#include <linux/module.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".gnu.linkonce.this_module") over __attribute__((section(".gnu.linkonce.this_module")))
#448: FILE: drivers/input/touchscreen/rmi.mod.c:8:
+__attribute__((section(".gnu.linkonce.this_module"))) = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/input/touchscreen/rmi.mod.c:9:
+ .name = KBUILD_MODNAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/input/touchscreen/rmi.mod.c:10:
+ .init = init_module,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/input/touchscreen/rmi.mod.c:12:
+ .exit = cleanup_module,$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".modinfo") over __attribute__((section(".modinfo")))
#458: FILE: drivers/input/touchscreen/rmi.mod.c:18:
+__attribute__((section(".modinfo"))) =

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#463: FILE: drivers/input/touchscreen/rmi.mod.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#468: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:3:
+ * Synaptics Register Mapped Interface (RMI4) TouchPad Application $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:9:
+ * polljif (Poll Jiffies) and hspolljif (High Speed Poll Jiffies).  The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:22:
+ * Note that it is the lower-level drivers that determine whether this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:23:
+ * has to do polling or interrupt-driven.  Polling can always be done, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:31:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:39:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:43:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:57:
+  static int pollallocsrmi = 0;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#531: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:57:
+  static int pollallocsrmi = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:BIT_MACRO: Prefer using the BIT macro
#534: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:60:
+#define RMI_REPORT_RATE_40 (1 << 6)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#537: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:63:
+static int polljif = HZ/20;
                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#539: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:65:
+static int hspolljif = HZ/40;
                          ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#545: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:71:
+static struct rmi_application *app = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#548: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:74:
+struct task_struct *kthread = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#549: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:75:
+static int time_to_quit = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#550: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:76:
+static struct input_dev *input = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:78:
+extern unsigned short fn01ControlBaseAddr;    /* RMI4 device control == $

CHECK:CAMELCASE: Avoid CamelCase: <fn01ControlBaseAddr>
#552: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:78:
+extern unsigned short fn01ControlBaseAddr;    /* RMI4 device control == 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#552: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:78:
+extern unsigned short fn01ControlBaseAddr;    /* RMI4 device control == 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:79:
+extern unsigned int interruptRegisterCount;   /* number of total $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#554: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:79:
+extern unsigned short fn01ControlBaseAddr;    /* RMI4 device control == 
+extern unsigned int interruptRegisterCount;   /* number of total 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#556: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:80:
+extern unsigned int interruptRegisterCount;   /* number of total 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:90:
+  complete(&touch_completion);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:94:
+ * This is the meat of the driver.  It reads in all data sources and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:95:
+ * the input subsystem.  It is used for both polling and interrupt $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:99:
+  unsigned char interruptStatus[4] = {0,0,0,0};$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:99:
+  unsigned char interruptStatus[4] = {0,0,0,0};
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:99:
+  unsigned char interruptStatus[4] = {0,0,0,0};
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:99:
+  unsigned char interruptStatus[4] = {0,0,0,0};
                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <interruptStatus>
#577: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:99:
+  unsigned char interruptStatus[4] = {0,0,0,0};

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:100:
+  int touch = 0; /* number of touch points - fingers or buttons */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:102:
+  /* Get the interrupt status from the function $01 control register+1 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#582: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:103:
+  /* Get the interrupt status from the function $01 control register+1 
+     which source(s) were interrupting so we can read the data from the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:104:
+     source(s) (2D sensor, buttons, etc.). */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:105:
+  if(rmi_read_multiple(app, fn01ControlBaseAddr + 1, interruptStatus, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:105:
+  if(rmi_read_multiple(app, fn01ControlBaseAddr + 1, interruptStatus, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#584: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:105:
+  if(rmi_read_multiple(app, fn01ControlBaseAddr + 1, interruptStatus, 
[...]
+    printk(KERN_ERR "Could not read interrupt status registers 0x%x\n", 

ERROR:SPACING: space required before the open parenthesis '('
#584: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:105:
+  if(rmi_read_multiple(app, fn01ControlBaseAddr + 1, interruptStatus, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:106:
+    printk(KERN_ERR "Could not read interrupt status registers 0x%x\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:106:
+  if(rmi_read_multiple(app, fn01ControlBaseAddr + 1, interruptStatus, 
+    printk(KERN_ERR "Could not read interrupt status registers 0x%x\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:106:
+    printk(KERN_ERR "Could not read interrupt status registers 0x%x\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#586: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:106:
+    printk(KERN_ERR "Could not read interrupt status registers 0x%x\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:106:
+  if(rmi_read_multiple(app, fn01ControlBaseAddr + 1, interruptStatus, 
fn01ControlBaseAddr + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:107:
+    printk(KERN_ERR "Could not read interrupt status registers 0x%x\n", 
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:107:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:108:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:110:
+  /* check each function that has data sources and if the interrupt for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:111:
+     then call that RMI4 functions report() function to gather data and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#593: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:111:
+  /* check each function that has data sources and if the interrupt for 
+     then call that RMI4 functions report() function to gather data and 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:114:
+  struct rmi_functions *fn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:115:
+  struct rmi_function_info *rfi;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:116:
+  struct rmi_phys_driver *rpd  = app->rpd; /* get ptr to $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:116:
+  struct rmi_phys_driver *rpd  = app->rpd; /* get ptr to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:117:
+  struct rmi_module_info *rmi  = &(rpd->rmi); /* get ptr to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#601: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:117:
+  struct rmi_phys_driver *rpd  = app->rpd; /* get ptr to 
+  struct rmi_module_info *rmi  = &(rpd->rmi); /* get ptr to 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#603: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:118:
+  struct rmi_module_info *rmi  = &(rpd->rmi); /* get ptr to 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:122:
+        bool found = false;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:123:
+        list_for_each_entry(fn, &fns_list, link) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:124:
+          if (rfi->functionNum == fn->functionNum) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:125:
+            found = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:126:
+            if (fn->report) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:127:
+              touch = fn->report(app, rfi, fn->input);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:128:
+            } else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:129:
+              /* the developer did not add in the pointer to the report $

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:129:
+              /* the developer did not add in the pointer to the report $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:130:
+              printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: no $

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:130:
+              printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: no $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#616: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:130:
+              /* the developer did not add in the pointer to the report 
+              printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: no 

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:131:
+              break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:132:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:133:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:134:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:136:
+        if (!found) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:137:
+          /* if no support found for this RMI4 function it means the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:137:
+          /* if no support found for this RMI4 function it means the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:138:
+             pointer list into the rmi4_supported_data_src_functions $

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:138:
+             pointer list into the rmi4_supported_data_src_functions $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#626: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:138:
+          /* if no support found for this RMI4 function it means the 
+             pointer list into the rmi4_supported_data_src_functions 

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:139:
+             supported RMI4 functions in rmi.h as required */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#628: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:139:
+             supported RMI4 functions in rmi.h as required */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:140:
+          printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: could $

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:140:
+          printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: could $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:140:
+          printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: could $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#629: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:140:
+          printk(KERN_ERR "rmi_app_touchpad.report_sensor_data: could 

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:141:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:141:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:142:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:143:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:144:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:146:
+  /* return the number of touch points - fingers down and/or buttons $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:146:
+  /* return the number of touch points - fingers down and/or buttons $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:147:
+  return touch;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#641: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:150:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:152:
+ * This is a kernel thread that processes packets when we receive them. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:152:
+ * This is a kernel thread that processes packets when we receive them. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:154:
+ * only used for the interrupt-driven case.  Polling may also be done $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:154:
+ * only used for the interrupt-driven case.  Polling may also be done $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:155:
+ * driver and doesn't use this thread (although I suppose it could be $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:155:
+ * driver and doesn't use this thread (although I suppose it could be $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:156:
+ * to do polling, too, instead of using timers).$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:157:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:160:
+  struct rmi_application *app = (struct rmi_application *)param;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:162:
+  daemonize("rmitouchd");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:163:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:164:
+  while (!kthread_should_stop()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:165:
+    if(time_to_quit) break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:166:
+^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:167:
+    /* wait for interrupt from ATTN line */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:168:
+    wait_for_completion_interruptible(&touch_completion);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:169:
+^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:170:
+    if (time_to_quit) break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:171:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:172:
+    try_to_freeze();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:173:
+^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:174:
+    do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:175:
+      report_sensor_data(app);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:176:
+      if(time_to_quit) break;  /* check if time to quit so we don't $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:176:
+      if(time_to_quit) break;  /* check if time to quit so we don't $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:178:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:179:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:180:
+  complete_and_exit(&thread_comp, 0);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#678: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:184:
+ * properly shut down the timers on exit. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:184:
+ * properly shut down the timers on exit. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:189:
+  struct delayed_work dw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:190:
+  struct rmi_application *app;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:191:
+  struct list_head link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:197:
+  struct delayed_work *dw = container_of(data, struct delayed_work, work);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:198:
+  struct poll_instance *pi = container_of(dw, struct poll_instance, dw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:199:
+  static int calls_with_no_data = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:200:
+  int touch = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:202:
+  if(time_to_quit) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:204:
+  touch = report_sensor_data(pi->app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:206:
+  /* This code implements a backoff.  If we have a call with data being$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:207:
+   * received, we decrease the time between polls to hspolljif.  If$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:208:
+   * there are several calls at that faster rate that do not have data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:209:
+   * we go back to slower polling.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:210:
+   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:211:
+  if(touch) calls_with_no_data = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:212:
+  if(!time_to_quit) {^I/* Don't schedule if it's time to quit. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:213:
+    if(calls_with_no_data > 5) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:214:
+      schedule_delayed_work(dw, polljif);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:215:
+    } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:216:
+      if(!touch) calls_with_no_data++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:217:
+      schedule_delayed_work(dw, hspolljif);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:218:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:219:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:223:
+ * This is the probe function passed to the RMI4 subsystem that gives us a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:224:
+ * chance to recognize an RMI4 device.  In this case, we're looking for$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:225:
+ * Synaptics devices that have data sources - such as touch screens, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:225:
+ * Synaptics devices that have data sources - such as touch screens, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:226:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#722: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:227:
+static int probe(struct rmi_application *app, const struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:229:
+  struct rmi_function_info *rfi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:230:
+  int data_sources = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:231:
+  int retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:233:
+  if(!rmi) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:234:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#730: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:234:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:235:
+      "Invalid module info: %p\n", rmi);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#731: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:235:
+      "Invalid module info: %p\n", rmi);
                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#731: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:235:
+      "Invalid module info: %p\n", rmi);
                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Invalid>
#731: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:235:
+      "Invalid module info: %p\n", rmi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:236:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:237:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:239:
+  /* Make sure this is a Synaptics device */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:240:
+  if(rmi->mfgid != 1) { /* Synaptics */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:241:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#737: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:241:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:242:
+      "Invalid mfg id: %p\n", rmi->mfgid);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#738: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:242:
+      "Invalid mfg id: %p\n", rmi->mfgid);
                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#738: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:242:
+      "Invalid mfg id: %p\n", rmi->mfgid);
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:243:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:244:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:246:
+  /* for each function entry in the list accumulate it's number of data $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:246:
+  /* for each function entry in the list accumulate it's number of data $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:247:
+  list_for_each_entry(rfi, &rmi->functions, link) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:248:
+      data_sources += rfi->numSources;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:249:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:251:
+  if (data_sources) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:252:
+    retval = 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:253:
+    /* We have detected one or more data sources such as a 2D Sensors, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:253:
+    /* We have detected one or more data sources such as a 2D Sensors, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:254:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#752: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:254:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:255:
+      "Found %d data sources for : %p\n",data_sources, rmi);$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#753: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:255:
+      "Found %d data sources for : %p\n",data_sources, rmi);
              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#753: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:255:
+      "Found %d data sources for : %p\n",data_sources, rmi);
                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Found>
#753: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:255:
+      "Found %d data sources for : %p\n",data_sources, rmi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:256:
+  } else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:257:
+    /* we don't have any data sources for this sensor - oops! - either $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:257:
+    /* we don't have any data sources for this sensor - oops! - either $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:258:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#757: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:258:
+    printk(KERN_ERR "rmi_app_touchpad.probe: "
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:259:
+      "No data sources found for : %p\n", rmi);$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#758: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:259:
+      "No data sources found for : %p\n", rmi);
                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <No>
#758: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:259:
+      "No data sources found for : %p\n", rmi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:260:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:262:
+  return retval;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:267:
+  /* For each data source we had detected print info and set up $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:267:
+  /* For each data source we had detected print info and set up $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:268:
+  unsigned char data[14];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:269:
+  struct rmi_function_info *rfi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:270:
+  struct rmi_phys_driver *rpd;;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:271:
+  struct rmi_module_info *rmi; /* module info has list of functions */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:273:
+  rpd = app->rpd; /* get ptr to rmi_physical_driver from app */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:274:
+  rmi = &(rpd->rmi); /* get ptr to rmi_module_info from physical driver */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:276:
+  list_for_each_entry(rfi, &rmi->functions, link) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:277:
+    if(rfi->numSources) /* if this function has data sources associated $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:277:
+    if(rfi->numSources) /* if this function has data sources associated $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:278:
+    {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:279:
+      /* Get and print some info about the data sources... */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:279:
+      /* Get and print some info about the data sources... */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:281:
+      struct rmi_functions *fn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:282:
+      bool found = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:284:
+      list_for_each_entry(fn, &fns_list, link) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#786: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:285:
+        /* check if function number matches - if so call that config $

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:285:
+        /* check if function number matches - if so call that config $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:285:
+        /* check if function number matches - if so call that config $

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:286:
+        if(fn->functionNum == rfi->functionNum) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:286:
+        if(fn->functionNum == rfi->functionNum) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:287:
+          found = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:287:
+          found = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:288:
+          if (fn->config) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:288:
+          if (fn->config) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:289:
+            fn->config(app, rfi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:289:
+            fn->config(app, rfi);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:290:
+          } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:290:
+          } else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:291:
+            /* the developer did not add in the pointer to the config $

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:291:
+            /* the developer did not add in the pointer to the config $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:291:
+            /* the developer did not add in the pointer to the config $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:292:
+            printk(KERN_ERR "rmi_app_touchpad.config - no config $

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:292:
+            printk(KERN_ERR "rmi_app_touchpad.config - no config $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:292:
+            printk(KERN_ERR "rmi_app_touchpad.config - no config $

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:293:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:293:
+            break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:294:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:294:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:295:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:295:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:296:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:298:
+      if (!found) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 0)
#802: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:298:
+      if (!found) {
[...]
developer did not add the appropriate function

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:299:
+        /* if no support found for this RMI4 function it means the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:299:
+        /* if no support found for this RMI4 function it means the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:300:
+           pointer list into the rmi4_supported_data_src_functions $

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:300:
+           pointer list into the rmi4_supported_data_src_functions $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#805: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:300:
+        /* if no support found for this RMI4 function it means the 
+           pointer list into the rmi4_supported_data_src_functions 

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:301:
+           supported RMI4 functions in rmi.h as required */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:301:
+           supported RMI4 functions in rmi.h as required */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:302:
+        printk(KERN_ERR "rmi_app_touchpad.config - could not find $

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:302:
+        printk(KERN_ERR "rmi_app_touchpad.config - could not find $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:302:
+        printk(KERN_ERR "rmi_app_touchpad.config - could not find $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#808: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:302:
+        printk(KERN_ERR "rmi_app_touchpad.config - could not find 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:303:
+      }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:305:
+      /* if we are not doing polling then enable the interrupts for the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:305:
+      /* if we are not doing polling then enable the interrupts for the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:306:
+      if (!rmi_polling_required(app)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:307:
+        /* Turn on interrupts for this functions data sources. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:307:
+        /* Turn on interrupts for this functions data sources. */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:308:
+        rmi_write(app, fn01ControlBaseAddr + 1 + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:308:
+        rmi_write(app, fn01ControlBaseAddr + 1 + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:308:
+        rmi_write(app, fn01ControlBaseAddr + 1 + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#818: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:309:
+        printk(KERN_INFO "rmi_app_touchpad.config -  Interrupt Driven - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:309:
+        printk(KERN_INFO "rmi_app_touchpad.config -  Interrupt Driven - $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:309:
+        printk(KERN_INFO "rmi_app_touchpad.config -  Interrupt Driven - $

CHECK:CAMELCASE: Avoid CamelCase: <Interrupt>
#818: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:309:
+        printk(KERN_INFO "rmi_app_touchpad.config -  Interrupt Driven - 

CHECK:CAMELCASE: Avoid CamelCase: <Driven>
#818: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:309:
+        printk(KERN_INFO "rmi_app_touchpad.config -  Interrupt Driven - 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:310:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:311:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:312:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:314:
+  /* if we are not polling we need to set up the interrupt thread - $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#826: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:315:
+  /* if we are not polling we need to set up the interrupt thread - 
+     set up the polling callback and worker thread. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#826: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:315:
+     set up the polling callback and worker thread. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:316:
+  if(!rmi_polling_required(app)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#827: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:316:
+  if(!rmi_polling_required(app)) {
[...]
+    kthread = kthread_run(&rmitouchd, app, "rmitouchd");

ERROR:SPACING: space required before the open parenthesis '('
#827: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:316:
+  if(!rmi_polling_required(app)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:318:
+    kthread = kthread_run(&rmitouchd, app, "rmitouchd");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:320:
+    if(HZ < 500) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#831: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:320:
+    if(HZ < 500) {
[...]
+      rmi_write(app, fn01ControlBaseAddr, RMI_REPORT_RATE_40);

ERROR:SPACING: space required before the open parenthesis '('
#831: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:320:
+    if(HZ < 500) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:326:
+      rmi_write(app, fn01ControlBaseAddr, RMI_REPORT_RATE_40);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:327:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:328:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 0)
#839: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:328:
+  } else {
[...]
thread */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:329:
+    /* We're polling driven, so set up the polling callback and worker $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#842: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:330:
+    /* We're polling driven, so set up the polling callback and worker 
+    struct poll_instance *pi;

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:335:
+        "Out of memory claiming %s\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#848: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:336:
+        rmi->prod_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:356:
+  printk(KERN_INFO "rmi_app_touchpad.mod_init: RMI4 TouchPad Driver\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#868: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:356:
+  printk(KERN_INFO "rmi_app_touchpad.mod_init: RMI4 TouchPad Driver\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mod_init', this function's name, in a string
#868: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:356:
+  printk(KERN_INFO "rmi_app_touchpad.mod_init: RMI4 TouchPad Driver\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:358:
+  INIT_LIST_HEAD(&pollers);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:360:
+  time_to_quit = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:361:
+  init_completion(&touch_completion);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:362:
+  init_completion(&thread_comp);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:364:
+  /* NOTE: we are creating only one input dev file for this but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:365:
+     you could create a separate one for each data source and store it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#878: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:365:
+  /* NOTE: we are creating only one input dev file for this but 
+     you could create a separate one for each data source and store it 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#880: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:366:
+     This will let you put 2D sensor events into one dev file, button $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:367:
+     a separate dev file, other data source event like GPIOs, etc. into $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#884: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:368:
+     third dev file. As this is being coded it will dump all events $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:371:
+  input = input_allocate_device();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:372:
+  if (input == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#889: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:372:
+  if (input == NULL) {
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to allocate 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!input"
#889: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:372:
+  if (input == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:373:
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to allocate $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:373:
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to allocate $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#890: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:373:
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to allocate 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:374:
+    return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:375:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:377:
+  input->name = "RMI4 Touchpad";$

CHECK:CAMELCASE: Avoid CamelCase: <Touchpad>
#895: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:377:
+  input->name = "RMI4 Touchpad";

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:378:
+  input->phys = "rmi_app_touchpad";$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:380:
+  /* Set input device specific params for each data source...*/ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:380:
+  /* Set input device specific params for each data source...*/ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:382:
+  struct rmi_functions *fn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:383:
+  list_for_each_entry(fn, &fns_list, link) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:384:
+    if (fn->init) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:385:
+      fn->input = input; /* store the input_dev ptr for use later */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:386:
+      fn->init(fn->input);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:387:
+    } else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#906: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:388:
+      /* the developer did not add in the pointer to the init function $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:388:
+      /* the developer did not add in the pointer to the init function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:389:
+      printk(KERN_ERR "rmi_app_touchpad.mod_init: no init function for $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:389:
+      printk(KERN_ERR "rmi_app_touchpad.mod_init: no init function for $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#908: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:389:
+      printk(KERN_ERR "rmi_app_touchpad.mod_init: no init function for 
                                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:390:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:391:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:393:
+  input_register_device(input);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:395:
+  app = rmi_register_application("rmi4_touchpad", attention, probe, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:395:
+  app = rmi_register_application("rmi4_touchpad", attention, probe, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:396:
+  app = rmi_register_application("rmi4_touchpad", attention, probe, 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:397:
+  if(!app) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#918: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:397:
+  if(!app) {
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to register 

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:397:
+  if(!app) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:398:
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to register $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:398:
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to register $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#919: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:398:
+    printk(KERN_ERR "rmi_app_touchpad.mod_init:  Failed to register 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:399:
+    input_unregister_device(input);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:400:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:401:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:403:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:407:
+ * The module exit function.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:408:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:411:
+  struct poll_instance *pi, *pi_tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:413:
+  printk(KERN_INFO "rmi_app_touchpad.mod_exit: RMI4 TouchPad Driver\n");$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#935: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:413:
+  printk(KERN_INFO "rmi_app_touchpad.mod_exit: RMI4 TouchPad Driver\n");
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <TouchPad>
#935: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:413:
+  printk(KERN_INFO "rmi_app_touchpad.mod_exit: RMI4 TouchPad Driver\n");

CHECK:CAMELCASE: Avoid CamelCase: <Driver>
#935: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:413:
+  printk(KERN_INFO "rmi_app_touchpad.mod_exit: RMI4 TouchPad Driver\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:415:
+  time_to_quit = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:417:
+  complete(&touch_completion); /* Kick the thread awake */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:418:
+  list_for_each_entry(pi, &pollers, link) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:419:
+    cancel_delayed_work(&pi->dw);^I/* Cancel any pending polls */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:420:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:421:
+  flush_scheduled_work();^I/* Make sure all pollers are stopped */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:422:
+  if(kthread) wait_for_completion(&thread_comp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:424:
+  /* Unregister everything */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:425:
+  printk(KERN_WARNING "rmi_app_touchpad.mod_exit: Unregistering app - $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:425:
+  printk(KERN_WARNING "rmi_app_touchpad.mod_exit: Unregistering app - $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#947: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:425:
+  printk(KERN_WARNING "rmi_app_touchpad.mod_exit: Unregistering app - 
                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Unregistering>
#947: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:425:
+  printk(KERN_WARNING "rmi_app_touchpad.mod_exit: Unregistering app - 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:426:
+  rmi_unregister_application(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:427:
+  input_unregister_device(input);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:430:
+  list_for_each_entry_safe(pi, pi_tmp, &pollers, link) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#953: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:430:
+  list_for_each_entry_safe(pi, pi_tmp, &pollers, link) {
+    list_del(&pi->link);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:431:
+    list_del(&pi->link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:432:
+    kfree(pi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:433:
+    DEC_ALLOC_STAT(poll);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:434:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:436:
+  CHECK_ALLOC_STAT(poll);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:442:
+/** Standard driver module information - a summary description of this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#969: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:445:
+/** Standard driver module information - the license under which this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:450:
+/** Specifies to the kernel that the mod_init() function should be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: drivers/input/touchscreen/rmi_app_touchpad.c:455:
+/** Specifies to the kernel that the mod_exit() function should be $

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#991: FILE: drivers/input/touchscreen/rmi_app_touchpad.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#996: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c:1:
+#include <linux/module.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".gnu.linkonce.this_module") over __attribute__((section(".gnu.linkonce.this_module")))
#1003: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c:8:
+__attribute__((section(".gnu.linkonce.this_module"))) = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c:9:
+ .name = KBUILD_MODNAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c:10:
+ .init = init_module,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c:12:
+ .exit = cleanup_module,$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".modinfo") over __attribute__((section(".modinfo")))
#1013: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c:18:
+__attribute__((section(".modinfo"))) =

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#1018: FILE: drivers/input/touchscreen/rmi_app_touchpad.mod.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1023: FILE: drivers/input/touchscreen/rmi_core.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1045: FILE: drivers/input/touchscreen/rmi_core.c:23:
+ *  rmi_phys_xxx.c.  Someone compiling the kernel enables CONFIG_RMI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: drivers/input/touchscreen/rmi_core.c:24:
+ *  one or more CONFIG_RMI_xxx options in the .config file.  For $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: drivers/input/touchscreen/rmi_core.c:26:
+ *  compiled.  rmi_phys_i2c.ko will depend on rmi.ko, so when $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/input/touchscreen/rmi_core.c:28:
+ *  layer drivers is a platform_driver that may handle suspend/resume, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: drivers/input/touchscreen/rmi_core.c:38:
+ *  and the application driver must do one or the other based on this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1074: FILE: drivers/input/touchscreen/rmi_core.c:47:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1083: FILE: drivers/input/touchscreen/rmi_core.c:55:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: drivers/input/touchscreen/rmi_core.c:59:
+ $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1099: FILE: drivers/input/touchscreen/rmi_core.c:69:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1104: FILE: drivers/input/touchscreen/rmi_core.c:74:
+
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1106: FILE: drivers/input/touchscreen/rmi_core.c:76:
+unsigned short fn01QueryBaseAddr = 0;     /* RMI4 device control */

CHECK:CAMELCASE: Avoid CamelCase: <fn01QueryBaseAddr>
#1106: FILE: drivers/input/touchscreen/rmi_core.c:76:
+unsigned short fn01QueryBaseAddr = 0;     /* RMI4 device control */

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1108: FILE: drivers/input/touchscreen/rmi_core.c:78:
+unsigned short fn01ControlBaseAddr = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1110: FILE: drivers/input/touchscreen/rmi_core.c:80:
+unsigned int interruptRegisterCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <interruptRegisterCount>
#1110: FILE: drivers/input/touchscreen/rmi_core.c:80:
+unsigned int interruptRegisterCount = 0;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1122: FILE: drivers/input/touchscreen/rmi_core.c:92:
+EXPORT_SYMBOL(fns_list);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1124: FILE: drivers/input/touchscreen/rmi_core.c:94:
+EXPORT_SYMBOL(fns_mutex);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1126: FILE: drivers/input/touchscreen/rmi_core.c:96:
+EXPORT_SYMBOL(rfi_mutex);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1128: FILE: drivers/input/touchscreen/rmi_core.c:98:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: drivers/input/touchscreen/rmi_core.c:100:
+  int appallocsrmi = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1131: FILE: drivers/input/touchscreen/rmi_core.c:101:
+  int appallocsrmi = 0;
+  EXPORT_SYMBOL(appallocsrmi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: drivers/input/touchscreen/rmi_core.c:101:
+  EXPORT_SYMBOL(appallocsrmi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: drivers/input/touchscreen/rmi_core.c:102:
+  int rfiallocsrmi = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1133: FILE: drivers/input/touchscreen/rmi_core.c:103:
+  int rfiallocsrmi = 0;
+  EXPORT_SYMBOL(rfiallocsrmi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: drivers/input/touchscreen/rmi_core.c:103:
+  EXPORT_SYMBOL(rfiallocsrmi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: drivers/input/touchscreen/rmi_core.c:104:
+  int fnallocsrmi = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1135: FILE: drivers/input/touchscreen/rmi_core.c:105:
+  int fnallocsrmi = 0;
+  EXPORT_SYMBOL(fnallocsrmi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1135: FILE: drivers/input/touchscreen/rmi_core.c:105:
+  EXPORT_SYMBOL(fnallocsrmi);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: drivers/input/touchscreen/rmi_core.c:108:
+int rmi_read(struct rmi_application *app, unsigned short address, char $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: drivers/input/touchscreen/rmi_core.c:110:
+  struct rmi_phys_driver *rpd = app->rpd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1142: FILE: drivers/input/touchscreen/rmi_core.c:111:
+  struct rmi_phys_driver *rpd = app->rpd;
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: drivers/input/touchscreen/rmi_core.c:111:
+  if(!app->rpd) return -ENODEV;$

ERROR:SPACING: space required before the open parenthesis '('
#1142: FILE: drivers/input/touchscreen/rmi_core.c:111:
+  if(!app->rpd) return -ENODEV;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1142: FILE: drivers/input/touchscreen/rmi_core.c:111:
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: drivers/input/touchscreen/rmi_core.c:112:
+  return rpd->read(rpd, address, dest);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1147: FILE: drivers/input/touchscreen/rmi_core.c:116:
+int rmi_write(struct rmi_application *app, unsigned short address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1149: FILE: drivers/input/touchscreen/rmi_core.c:117:
+int rmi_write(struct rmi_application *app, unsigned short address, 
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: drivers/input/touchscreen/rmi_core.c:118:
+  struct rmi_phys_driver *rpd = app->rpd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1151: FILE: drivers/input/touchscreen/rmi_core.c:119:
+  struct rmi_phys_driver *rpd = app->rpd;
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: drivers/input/touchscreen/rmi_core.c:119:
+  if(!app->rpd) return -ENODEV;$

ERROR:SPACING: space required before the open parenthesis '('
#1151: FILE: drivers/input/touchscreen/rmi_core.c:119:
+  if(!app->rpd) return -ENODEV;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1151: FILE: drivers/input/touchscreen/rmi_core.c:119:
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: drivers/input/touchscreen/rmi_core.c:120:
+  return rpd->write(rpd, address, data);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: drivers/input/touchscreen/rmi_core.c:124:
+int rmi_read_multiple(struct rmi_application *app, unsigned short $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: drivers/input/touchscreen/rmi_core.c:126:
+  struct rmi_phys_driver *rpd = app->rpd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1160: FILE: drivers/input/touchscreen/rmi_core.c:127:
+  struct rmi_phys_driver *rpd = app->rpd;
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: drivers/input/touchscreen/rmi_core.c:127:
+  if(!app->rpd) return -ENODEV;$

ERROR:SPACING: space required before the open parenthesis '('
#1160: FILE: drivers/input/touchscreen/rmi_core.c:127:
+  if(!app->rpd) return -ENODEV;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1160: FILE: drivers/input/touchscreen/rmi_core.c:127:
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: drivers/input/touchscreen/rmi_core.c:128:
+  return rpd->read_multiple(rpd, address, dest, length);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: drivers/input/touchscreen/rmi_core.c:132:
+int rmi_write_multiple(struct rmi_application *app, unsigned short $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: drivers/input/touchscreen/rmi_core.c:134:
+  struct rmi_phys_driver *rpd = app->rpd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1169: FILE: drivers/input/touchscreen/rmi_core.c:135:
+  struct rmi_phys_driver *rpd = app->rpd;
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: drivers/input/touchscreen/rmi_core.c:135:
+  if(!app->rpd) return -ENODEV;$

ERROR:SPACING: space required before the open parenthesis '('
#1169: FILE: drivers/input/touchscreen/rmi_core.c:135:
+  if(!app->rpd) return -ENODEV;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1169: FILE: drivers/input/touchscreen/rmi_core.c:135:
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: drivers/input/touchscreen/rmi_core.c:136:
+  return rpd->write_multiple(rpd, address, data, length);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: drivers/input/touchscreen/rmi_core.c:142:
+  return app->polling_required;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: drivers/input/touchscreen/rmi_core.c:148:
+  if(!app->rpd) return -ENODEV;$

ERROR:SPACING: space required before the open parenthesis '('
#1182: FILE: drivers/input/touchscreen/rmi_core.c:148:
+  if(!app->rpd) return -ENODEV;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1182: FILE: drivers/input/touchscreen/rmi_core.c:148:
+  if(!app->rpd) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: drivers/input/touchscreen/rmi_core.c:149:
+  return app->rpd->get_attention(app->rpd);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1188: FILE: drivers/input/touchscreen/rmi_core.c:154:
+/*
+   This function searches for a match between an app driver and physical

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: drivers/input/touchscreen/rmi_core.c:157:
+static void match_and_bind(struct rmi_application *app, struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: drivers/input/touchscreen/rmi_core.c:159:
+  app->polling_required = rpd->polling_required;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: drivers/input/touchscreen/rmi_core.c:160:
+  if(app->probe(app, &rpd->rmi)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1195: FILE: drivers/input/touchscreen/rmi_core.c:160:
+  if(app->probe(app, &rpd->rmi)) {
[...]
+    if(try_module_get(rpd->module)) {

ERROR:SPACING: space required before the open parenthesis '('
#1195: FILE: drivers/input/touchscreen/rmi_core.c:160:
+  if(app->probe(app, &rpd->rmi)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1201: FILE: drivers/input/touchscreen/rmi_core.c:166:
+    if(try_module_get(rpd->module)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1201: FILE: drivers/input/touchscreen/rmi_core.c:166:
+    if(try_module_get(rpd->module)) {
+      app->rpd = rpd;

ERROR:SPACING: space required before the open parenthesis '('
#1201: FILE: drivers/input/touchscreen/rmi_core.c:166:
+    if(try_module_get(rpd->module)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1202: FILE: drivers/input/touchscreen/rmi_core.c:167:
+      app->rpd = rpd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: drivers/input/touchscreen/rmi_core.c:168:
+      rpd->app = app;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: drivers/input/touchscreen/rmi_core.c:169:
+      printk(KERN_INFO "%s: %s bound to %s\n", drvname, app->name, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: drivers/input/touchscreen/rmi_core.c:169:
+      printk(KERN_INFO "%s: %s bound to %s\n", drvname, app->name, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1204: FILE: drivers/input/touchscreen/rmi_core.c:169:
+      printk(KERN_INFO "%s: %s bound to %s\n", drvname, app->name, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: drivers/input/touchscreen/rmi_core.c:170:
+      printk(KERN_INFO "%s: %s bound to %s\n", drvname, app->name, 
+      rpd->attention = app->attention;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: drivers/input/touchscreen/rmi_core.c:170:
+      rpd->attention = app->attention;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: drivers/input/touchscreen/rmi_core.c:171:
+      app->config(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: drivers/input/touchscreen/rmi_core.c:172:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: drivers/input/touchscreen/rmi_core.c:173:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1209: FILE: drivers/input/touchscreen/rmi_core.c:173:
+  } else {
+    app->polling_required = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: drivers/input/touchscreen/rmi_core.c:174:
+    app->polling_required = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: drivers/input/touchscreen/rmi_core.c:175:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: drivers/input/touchscreen/rmi_core.c:180:
+  struct rmi_application *app;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: drivers/input/touchscreen/rmi_core.c:181:
+  int retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: drivers/input/touchscreen/rmi_core.c:183:
+  if(!rpd->name) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1219: FILE: drivers/input/touchscreen/rmi_core.c:183:
+  if(!rpd->name) {
+    printk(KERN_ERR "%s: Physical driver must specify a name\n", drvname);

ERROR:SPACING: space required before the open parenthesis '('
#1219: FILE: drivers/input/touchscreen/rmi_core.c:183:
+  if(!rpd->name) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: drivers/input/touchscreen/rmi_core.c:184:
+    printk(KERN_ERR "%s: Physical driver must specify a name\n", drvname);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1220: FILE: drivers/input/touchscreen/rmi_core.c:184:
+    printk(KERN_ERR "%s: Physical driver must specify a name\n", drvname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: drivers/input/touchscreen/rmi_core.c:185:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: drivers/input/touchscreen/rmi_core.c:186:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: drivers/input/touchscreen/rmi_core.c:187:
+  if(!rpd->write) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1223: FILE: drivers/input/touchscreen/rmi_core.c:187:
+  if(!rpd->write) {
+    printk(KERN_ERR "%s: Physical driver %s must specify a writer.\n", 

ERROR:SPACING: space required before the open parenthesis '('
#1223: FILE: drivers/input/touchscreen/rmi_core.c:187:
+  if(!rpd->write) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1224: FILE: drivers/input/touchscreen/rmi_core.c:188:
+    printk(KERN_ERR "%s: Physical driver %s must specify a writer.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: drivers/input/touchscreen/rmi_core.c:188:
+    printk(KERN_ERR "%s: Physical driver %s must specify a writer.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1224: FILE: drivers/input/touchscreen/rmi_core.c:188:
+    printk(KERN_ERR "%s: Physical driver %s must specify a writer.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1225: FILE: drivers/input/touchscreen/rmi_core.c:189:
+    printk(KERN_ERR "%s: Physical driver %s must specify a writer.\n", 
  drvname, rpd->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: drivers/input/touchscreen/rmi_core.c:190:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: drivers/input/touchscreen/rmi_core.c:191:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: drivers/input/touchscreen/rmi_core.c:192:
+  if(!rpd->read) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1228: FILE: drivers/input/touchscreen/rmi_core.c:192:
+  if(!rpd->read) {
+    printk(KERN_ERR "%s: Physical driver %s must specify a reader.\n", 

ERROR:SPACING: space required before the open parenthesis '('
#1228: FILE: drivers/input/touchscreen/rmi_core.c:192:
+  if(!rpd->read) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1229: FILE: drivers/input/touchscreen/rmi_core.c:193:
+    printk(KERN_ERR "%s: Physical driver %s must specify a reader.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: drivers/input/touchscreen/rmi_core.c:193:
+    printk(KERN_ERR "%s: Physical driver %s must specify a reader.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1229: FILE: drivers/input/touchscreen/rmi_core.c:193:
+    printk(KERN_ERR "%s: Physical driver %s must specify a reader.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1231: FILE: drivers/input/touchscreen/rmi_core.c:194:
+    printk(KERN_ERR "%s: Physical driver %s must specify a reader.\n", 
+    return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: drivers/input/touchscreen/rmi_core.c:194:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: drivers/input/touchscreen/rmi_core.c:195:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: drivers/input/touchscreen/rmi_core.c:196:
+  if(!rpd->write_multiple) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1233: FILE: drivers/input/touchscreen/rmi_core.c:196:
+  if(!rpd->write_multiple) {
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple 

ERROR:SPACING: space required before the open parenthesis '('
#1233: FILE: drivers/input/touchscreen/rmi_core.c:196:
+  if(!rpd->write_multiple) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1234: FILE: drivers/input/touchscreen/rmi_core.c:197:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: drivers/input/touchscreen/rmi_core.c:197:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1234: FILE: drivers/input/touchscreen/rmi_core.c:197:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: drivers/input/touchscreen/rmi_core.c:198:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: drivers/input/touchscreen/rmi_core.c:199:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/input/touchscreen/rmi_core.c:200:
+  if(!rpd->read_multiple) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1239: FILE: drivers/input/touchscreen/rmi_core.c:201:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: drivers/input/touchscreen/rmi_core.c:201:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1239: FILE: drivers/input/touchscreen/rmi_core.c:201:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple 
                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1239: FILE: drivers/input/touchscreen/rmi_core.c:201:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple 
                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1239: FILE: drivers/input/touchscreen/rmi_core.c:201:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple 
                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <Physical>
#1239: FILE: drivers/input/touchscreen/rmi_core.c:201:
+    printk(KERN_ERR "%s: Physical driver %s must specify a multiple 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: drivers/input/touchscreen/rmi_core.c:202:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1242: FILE: drivers/input/touchscreen/rmi_core.c:203:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1243: FILE: drivers/input/touchscreen/rmi_core.c:204:
+  if(!rpd->module) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1243: FILE: drivers/input/touchscreen/rmi_core.c:204:
+  if(!rpd->module) {
+    printk(KERN_ERR "%s: Physical driver %s must specify a module.\n", 

ERROR:SPACING: space required before the open parenthesis '('
#1243: FILE: drivers/input/touchscreen/rmi_core.c:204:
+  if(!rpd->module) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1244: FILE: drivers/input/touchscreen/rmi_core.c:205:
+    printk(KERN_ERR "%s: Physical driver %s must specify a module.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: drivers/input/touchscreen/rmi_core.c:205:
+    printk(KERN_ERR "%s: Physical driver %s must specify a module.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1244: FILE: drivers/input/touchscreen/rmi_core.c:205:
+    printk(KERN_ERR "%s: Physical driver %s must specify a module.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/input/touchscreen/rmi_core.c:206:
+    printk(KERN_ERR "%s: Physical driver %s must specify a module.\n", 
  drvname, rpd->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: drivers/input/touchscreen/rmi_core.c:207:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: drivers/input/touchscreen/rmi_core.c:208:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1249: FILE: drivers/input/touchscreen/rmi_core.c:210:
+  pr_debug("%s: Registering phys driver %s\n", drvname, rpd->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: drivers/input/touchscreen/rmi_core.c:212:
+  rpd->attention = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: drivers/input/touchscreen/rmi_core.c:215:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: drivers/input/touchscreen/rmi_core.c:216:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: drivers/input/touchscreen/rmi_core.c:217:
+    unsigned char std_queries[21];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: drivers/input/touchscreen/rmi_core.c:218:
+    unsigned char interruptCount = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <interruptCount>
#1257: FILE: drivers/input/touchscreen/rmi_core.c:218:
+    unsigned char interruptCount = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: drivers/input/touchscreen/rmi_core.c:219:
+    struct rmi_function_info *rfi = NULL;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1260: FILE: drivers/input/touchscreen/rmi_core.c:221:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: drivers/input/touchscreen/rmi_core.c:222:
+    printk(KERN_INFO "%s: Functions:\n", drvname);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1261: FILE: drivers/input/touchscreen/rmi_core.c:222:
+    printk(KERN_INFO "%s: Functions:\n", drvname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: drivers/input/touchscreen/rmi_core.c:224:
+    struct rmi_function_descriptor rmi_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1266: FILE: drivers/input/touchscreen/rmi_core.c:227:
+    INIT_LIST_HEAD(&rpd->rmi.functions);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1268: FILE: drivers/input/touchscreen/rmi_core.c:229:
+    /* Read the Page Descriptor Table to determine what functions are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: drivers/input/touchscreen/rmi_core.c:230:
+    for(i = PDT_START_SCAN_LOCATION; i > PDT_END_SCAN_LOCATION; i -= $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1270: FILE: drivers/input/touchscreen/rmi_core.c:230:
+    /* Read the Page Descriptor Table to determine what functions are 
+    for(i = PDT_START_SCAN_LOCATION; i > PDT_END_SCAN_LOCATION; i -= 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1275: FILE: drivers/input/touchscreen/rmi_core.c:234:
+        rfi = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: drivers/input/touchscreen/rmi_core.c:236:
+        if(rmi_fd.functionNum)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: drivers/input/touchscreen/rmi_core.c:237:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: drivers/input/touchscreen/rmi_core.c:238:
+          switch(rmi_fd.functionNum & 0xff)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: drivers/input/touchscreen/rmi_core.c:239:
+          {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1281: FILE: drivers/input/touchscreen/rmi_core.c:240:
+            case 0x01:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1282: FILE: drivers/input/touchscreen/rmi_core.c:241:
+              printk(KERN_INFO "%s:   Fn $01 Found - RMI Device $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1282: FILE: drivers/input/touchscreen/rmi_core.c:241:
+              printk(KERN_INFO "%s:   Fn $01 Found - RMI Device $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: drivers/input/touchscreen/rmi_core.c:242:
+              /* Save Fn $01 query and control base addresses since$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1285: FILE: drivers/input/touchscreen/rmi_core.c:243:
+                 we'll need them later to get/set properties and check $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1285: FILE: drivers/input/touchscreen/rmi_core.c:243:
+                 we'll need them later to get/set properties and check $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1285: FILE: drivers/input/touchscreen/rmi_core.c:243:
+              /* Save Fn $01 query and control base addresses since
+                 we'll need them later to get/set properties and check 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1287: FILE: drivers/input/touchscreen/rmi_core.c:244:
+                 There is only one Fn $01 for the device that is used $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: drivers/input/touchscreen/rmi_core.c:244:
+                 There is only one Fn $01 for the device that is used $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: drivers/input/touchscreen/rmi_core.c:245:
+                 and query device specific info so we only need to save $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1289: FILE: drivers/input/touchscreen/rmi_core.c:245:
+                 and query device specific info so we only need to save $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: drivers/input/touchscreen/rmi_core.c:246:
+                 for later use. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1291: FILE: drivers/input/touchscreen/rmi_core.c:246:
+                 for later use. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1292: FILE: drivers/input/touchscreen/rmi_core.c:247:
+              fn01QueryBaseAddr = rmi_fd.queryBaseAddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: drivers/input/touchscreen/rmi_core.c:247:
+              fn01QueryBaseAddr = rmi_fd.queryBaseAddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1293: FILE: drivers/input/touchscreen/rmi_core.c:248:
+              fn01ControlBaseAddr = rmi_fd.controlBaseAddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: drivers/input/touchscreen/rmi_core.c:248:
+              fn01ControlBaseAddr = rmi_fd.controlBaseAddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: drivers/input/touchscreen/rmi_core.c:249:
+              break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: drivers/input/touchscreen/rmi_core.c:249:
+              break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: drivers/input/touchscreen/rmi_core.c:251:
+            default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1297: FILE: drivers/input/touchscreen/rmi_core.c:252:
+              if (rmi_fd.interruptSrcCnt) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: drivers/input/touchscreen/rmi_core.c:252:
+              if (rmi_fd.interruptSrcCnt) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1298: FILE: drivers/input/touchscreen/rmi_core.c:253:
+                rfi = kmalloc(sizeof(*rfi), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: drivers/input/touchscreen/rmi_core.c:253:
+                rfi = kmalloc(sizeof(*rfi), GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1300: FILE: drivers/input/touchscreen/rmi_core.c:255:
+                if(!rfi) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: drivers/input/touchscreen/rmi_core.c:255:
+                if(!rfi) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#1300: FILE: drivers/input/touchscreen/rmi_core.c:255:
+                if(!rfi) {
+                  printk(KERN_ERR "%s: could not allocate memory for 

ERROR:SPACING: space required before the open parenthesis '('
#1300: FILE: drivers/input/touchscreen/rmi_core.c:255:
+                if(!rfi) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1301: FILE: drivers/input/touchscreen/rmi_core.c:256:
+                  printk(KERN_ERR "%s: could not allocate memory for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1301: FILE: drivers/input/touchscreen/rmi_core.c:256:
+                  printk(KERN_ERR "%s: could not allocate memory for $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: drivers/input/touchscreen/rmi_core.c:256:
+                  printk(KERN_ERR "%s: could not allocate memory for $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1301: FILE: drivers/input/touchscreen/rmi_core.c:256:
+                  printk(KERN_ERR "%s: could not allocate memory for 

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1301: FILE: drivers/input/touchscreen/rmi_core.c:256:
+                if(!rfi) {
+                  printk(KERN_ERR "%s: could not allocate memory for 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1303: FILE: drivers/input/touchscreen/rmi_core.c:257:
+^I^I^I              drvname, rmi_fd.functionNum);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1304: FILE: drivers/input/touchscreen/rmi_core.c:258:
+                  retval = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: drivers/input/touchscreen/rmi_core.c:258:
+                  retval = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1305: FILE: drivers/input/touchscreen/rmi_core.c:259:
+                  goto exit_fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: drivers/input/touchscreen/rmi_core.c:259:
+                  goto exit_fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1306: FILE: drivers/input/touchscreen/rmi_core.c:260:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: drivers/input/touchscreen/rmi_core.c:260:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1307: FILE: drivers/input/touchscreen/rmi_core.c:261:
+                  INC_ALLOC_STAT(rfi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: drivers/input/touchscreen/rmi_core.c:261:
+                  INC_ALLOC_STAT(rfi);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: drivers/input/touchscreen/rmi_core.c:263:
+                  /* Get the ptr to the detect function based on the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1309: FILE: drivers/input/touchscreen/rmi_core.c:263:
+                  /* Get the ptr to the detect function based on the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: drivers/input/touchscreen/rmi_core.c:263:
+                  /* Get the ptr to the detect function based on the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: drivers/input/touchscreen/rmi_core.c:264:
+                  struct rmi_functions *fn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: drivers/input/touchscreen/rmi_core.c:264:
+                  struct rmi_functions *fn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1312: FILE: drivers/input/touchscreen/rmi_core.c:265:
+                  bool found = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: drivers/input/touchscreen/rmi_core.c:265:
+                  bool found = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: drivers/input/touchscreen/rmi_core.c:267:
+                  list_for_each_entry(fn, &fns_list, link) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: drivers/input/touchscreen/rmi_core.c:267:
+                  list_for_each_entry(fn, &fns_list, link) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1315: FILE: drivers/input/touchscreen/rmi_core.c:268:
+                    /* check if function number matches - if so call $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: drivers/input/touchscreen/rmi_core.c:268:
+                    /* check if function number matches - if so call $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: drivers/input/touchscreen/rmi_core.c:268:
+                    /* check if function number matches - if so call $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1317: FILE: drivers/input/touchscreen/rmi_core.c:269:
+                    if(fn->functionNum == rmi_fd.functionNum) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: drivers/input/touchscreen/rmi_core.c:269:
+                    if(fn->functionNum == rmi_fd.functionNum) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1318: FILE: drivers/input/touchscreen/rmi_core.c:270:
+                      found = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: drivers/input/touchscreen/rmi_core.c:270:
+                      found = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1319: FILE: drivers/input/touchscreen/rmi_core.c:271:
+                      fn->detect(rpd, rfi, &rmi_fd, interruptCount);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: drivers/input/touchscreen/rmi_core.c:271:
+                      fn->detect(rpd, rfi, &rmi_fd, interruptCount);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1320: FILE: drivers/input/touchscreen/rmi_core.c:272:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: drivers/input/touchscreen/rmi_core.c:272:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: drivers/input/touchscreen/rmi_core.c:273:
+                  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: drivers/input/touchscreen/rmi_core.c:273:
+                  }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/input/touchscreen/rmi_core.c:275:
+                  if (!found) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: drivers/input/touchscreen/rmi_core.c:275:
+                  if (!found) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1324: FILE: drivers/input/touchscreen/rmi_core.c:276:
+                    printk(KERN_ERR "%s: could not find support for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: drivers/input/touchscreen/rmi_core.c:276:
+                    printk(KERN_ERR "%s: could not find support for $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: drivers/input/touchscreen/rmi_core.c:276:
+                    printk(KERN_ERR "%s: could not find support for $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1324: FILE: drivers/input/touchscreen/rmi_core.c:276:
+                    printk(KERN_ERR "%s: could not find support for 
                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1324: FILE: drivers/input/touchscreen/rmi_core.c:276:
+                    printk(KERN_ERR "%s: could not find support for 
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1326: FILE: drivers/input/touchscreen/rmi_core.c:277:
+^I^I^I                drvname, rmi_fd.functionNum);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: drivers/input/touchscreen/rmi_core.c:278:
+                  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: drivers/input/touchscreen/rmi_core.c:278:
+                  }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: drivers/input/touchscreen/rmi_core.c:279:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: drivers/input/touchscreen/rmi_core.c:279:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: drivers/input/touchscreen/rmi_core.c:280:
+              } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: drivers/input/touchscreen/rmi_core.c:280:
+              } else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1330: FILE: drivers/input/touchscreen/rmi_core.c:281:
+                printk(KERN_INFO "%s:   Found Function %02x - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1330: FILE: drivers/input/touchscreen/rmi_core.c:281:
+                printk(KERN_INFO "%s:   Found Function %02x - $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: drivers/input/touchscreen/rmi_core.c:281:
+                printk(KERN_INFO "%s:   Found Function %02x - $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1330: FILE: drivers/input/touchscreen/rmi_core.c:281:
+                printk(KERN_INFO "%s:   Found Function %02x - 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1332: FILE: drivers/input/touchscreen/rmi_core.c:282:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: drivers/input/touchscreen/rmi_core.c:282:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1333: FILE: drivers/input/touchscreen/rmi_core.c:283:
+              break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: drivers/input/touchscreen/rmi_core.c:283:
+              break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: drivers/input/touchscreen/rmi_core.c:284:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: drivers/input/touchscreen/rmi_core.c:284:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: drivers/input/touchscreen/rmi_core.c:286:
+          /* bump interrupt count for next iteration */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: drivers/input/touchscreen/rmi_core.c:286:
+          /* bump interrupt count for next iteration */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: drivers/input/touchscreen/rmi_core.c:287:
+          interruptCount += (rmi_fd.interruptSrcCnt & 0x7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: drivers/input/touchscreen/rmi_core.c:287:
+          interruptCount += (rmi_fd.interruptSrcCnt & 0x7);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1339: FILE: drivers/input/touchscreen/rmi_core.c:289:
+          /* We only want to add functions to the list that have data $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1339: FILE: drivers/input/touchscreen/rmi_core.c:289:
+          /* We only want to add functions to the list that have data $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: drivers/input/touchscreen/rmi_core.c:289:
+          /* We only want to add functions to the list that have data $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1341: FILE: drivers/input/touchscreen/rmi_core.c:290:
+          if (rfi && rmi_fd.interruptSrcCnt)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: drivers/input/touchscreen/rmi_core.c:290:
+          if (rfi && rmi_fd.interruptSrcCnt)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1342: FILE: drivers/input/touchscreen/rmi_core.c:291:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: drivers/input/touchscreen/rmi_core.c:291:
+          {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. 
                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. 
                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. 
                                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. 
                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Adding>
#1343: FILE: drivers/input/touchscreen/rmi_core.c:292:
+            printk(KERN_INFO "%s: Adding function 0x%x with %d sources. 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1346: FILE: drivers/input/touchscreen/rmi_core.c:294:
+            /* link this function info to the RMI module infos list of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: drivers/input/touchscreen/rmi_core.c:294:
+            /* link this function info to the RMI module infos list of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1348: FILE: drivers/input/touchscreen/rmi_core.c:295:
+            mutex_lock(&rfi_mutex);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1348: FILE: drivers/input/touchscreen/rmi_core.c:295:
+            /* link this function info to the RMI module infos list of 
+            mutex_lock(&rfi_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1349: FILE: drivers/input/touchscreen/rmi_core.c:296:
+            list_add_tail(&rfi->link, &rpd->rmi.functions);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1350: FILE: drivers/input/touchscreen/rmi_core.c:297:
+            mutex_lock(&rfi_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1351: FILE: drivers/input/touchscreen/rmi_core.c:298:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1352: FILE: drivers/input/touchscreen/rmi_core.c:299:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1353: FILE: drivers/input/touchscreen/rmi_core.c:300:
+          /* A zero in the function number signals the end of the PDT */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1354: FILE: drivers/input/touchscreen/rmi_core.c:301:
+          printk(KERN_INFO "%s:   Found End of PDT\n", drvname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: drivers/input/touchscreen/rmi_core.c:301:
+          printk(KERN_INFO "%s:   Found End of PDT\n", drvname);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1354: FILE: drivers/input/touchscreen/rmi_core.c:301:
+          printk(KERN_INFO "%s:   Found End of PDT\n", drvname);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1355: FILE: drivers/input/touchscreen/rmi_core.c:302:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: drivers/input/touchscreen/rmi_core.c:302:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1356: FILE: drivers/input/touchscreen/rmi_core.c:303:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: drivers/input/touchscreen/rmi_core.c:303:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: drivers/input/touchscreen/rmi_core.c:304:
+      } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 0)
#1357: FILE: drivers/input/touchscreen/rmi_core.c:304:
+      } else {
[...]
result in an incomplete

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1358: FILE: drivers/input/touchscreen/rmi_core.c:305:
+        /* failed to read next PDT entry - end PDT scan - this may $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1358: FILE: drivers/input/touchscreen/rmi_core.c:305:
+        /* failed to read next PDT entry - end PDT scan - this may $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: drivers/input/touchscreen/rmi_core.c:306:
+           set of recognized functions - should probably return an $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1360: FILE: drivers/input/touchscreen/rmi_core.c:306:
+           set of recognized functions - should probably return an $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1360: FILE: drivers/input/touchscreen/rmi_core.c:306:
+        /* failed to read next PDT entry - end PDT scan - this may 
+           set of recognized functions - should probably return an 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1362: FILE: drivers/input/touchscreen/rmi_core.c:307:
+           may still be viable for diagnostics and debugging so let's $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1362: FILE: drivers/input/touchscreen/rmi_core.c:307:
+           may still be viable for diagnostics and debugging so let's $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1364: FILE: drivers/input/touchscreen/rmi_core.c:308:
+        printk(KERN_ERR "%s:   Read Error 0x%x when reading next PDT $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1364: FILE: drivers/input/touchscreen/rmi_core.c:308:
+        printk(KERN_ERR "%s:   Read Error 0x%x when reading next PDT $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: drivers/input/touchscreen/rmi_core.c:309:
+        break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: drivers/input/touchscreen/rmi_core.c:313:
+    /* calculate the interrupt register count - used in the ISR to read $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1372: FILE: drivers/input/touchscreen/rmi_core.c:314:
+    /* calculate the interrupt register count - used in the ISR to read 
+    interruptRegisterCount = (interruptCount + 7) / 8;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: drivers/input/touchscreen/rmi_core.c:316:
+    /* Function $01 will be used to query the product properties, and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: drivers/input/touchscreen/rmi_core.c:317:
+     * so we had to read the PDT above first to get the Fn $01 query $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1383: FILE: drivers/input/touchscreen/rmi_core.c:323:
+    if((retval = rpd->read_multiple(rpd, fn01QueryBaseAddr, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: drivers/input/touchscreen/rmi_core.c:323:
+    if((retval = rpd->read_multiple(rpd, fn01QueryBaseAddr, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1383: FILE: drivers/input/touchscreen/rmi_core.c:323:
+    if((retval = rpd->read_multiple(rpd, fn01QueryBaseAddr, 
[...]
+      printk(KERN_ERR "%s: Fail reading queries\n", drvname);

ERROR:SPACING: space required before the open parenthesis '('
#1383: FILE: drivers/input/touchscreen/rmi_core.c:323:
+    if((retval = rpd->read_multiple(rpd, fn01QueryBaseAddr, 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1383: FILE: drivers/input/touchscreen/rmi_core.c:323:
+    if((retval = rpd->read_multiple(rpd, fn01QueryBaseAddr, 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1385: FILE: drivers/input/touchscreen/rmi_core.c:324:
+    if((retval = rpd->read_multiple(rpd, fn01QueryBaseAddr, 
+      printk(KERN_ERR "%s: Fail reading queries\n", drvname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: drivers/input/touchscreen/rmi_core.c:324:
+      printk(KERN_ERR "%s: Fail reading queries\n", drvname);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1385: FILE: drivers/input/touchscreen/rmi_core.c:324:
+      printk(KERN_ERR "%s: Fail reading queries\n", drvname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: drivers/input/touchscreen/rmi_core.c:325:
+      retval = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: drivers/input/touchscreen/rmi_core.c:326:
+      goto exit_fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: drivers/input/touchscreen/rmi_core.c:327:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: drivers/input/touchscreen/rmi_core.c:329:
+    rpd->rmi.rmi_maj_ver  = 4; /* Currently supported RMI version is 4.0 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: drivers/input/touchscreen/rmi_core.c:330:
+    rpd->rmi.rmi_min_ver  = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: drivers/input/touchscreen/rmi_core.c:332:
+    /* get manufacturer id, properties, product info, date code, tester $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1395: FILE: drivers/input/touchscreen/rmi_core.c:333:
+    /* get manufacturer id, properties, product info, date code, tester 
+    rpd->rmi.mfgid        = std_queries[0];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1398: FILE: drivers/input/touchscreen/rmi_core.c:336:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: drivers/input/touchscreen/rmi_core.c:341:
+    rpd->rmi.date_code[1] = std_queries[5] & 0x0f; /* month - 1-12 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: drivers/input/touchscreen/rmi_core.c:342:
+    rpd->rmi.date_code[2] = std_queries[6] & 0x1f; /* day - 1-31 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: drivers/input/touchscreen/rmi_core.c:344:
+    rpd->rmi.tester_id    = ((std_queries[7] & 0x7f) << 8) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: drivers/input/touchscreen/rmi_core.c:344:
+    rpd->rmi.tester_id    = ((std_queries[7] & 0x7f) << 8) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1409: FILE: drivers/input/touchscreen/rmi_core.c:346:
+    rpd->rmi.serial_num   = ((std_queries[9] & 0x7f) << 8) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: drivers/input/touchscreen/rmi_core.c:346:
+    rpd->rmi.serial_num   = ((std_queries[9] & 0x7f) << 8) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: drivers/input/touchscreen/rmi_core.c:348:
+    for (i = 0; i < 10; i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1412: FILE: drivers/input/touchscreen/rmi_core.c:348:
+    for (i = 0; i < 10; i++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1412: FILE: drivers/input/touchscreen/rmi_core.c:348:
+    for (i = 0; i < 10; i++)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1413: FILE: drivers/input/touchscreen/rmi_core.c:349:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1414: FILE: drivers/input/touchscreen/rmi_core.c:350:
+      rpd->rmi.prod_id[i] = std_queries[11+i];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1414: FILE: drivers/input/touchscreen/rmi_core.c:350:
+      rpd->rmi.prod_id[i] = std_queries[11+i];
                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1415: FILE: drivers/input/touchscreen/rmi_core.c:351:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1416: FILE: drivers/input/touchscreen/rmi_core.c:352:
+^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: drivers/input/touchscreen/rmi_core.c:353:
+    rpd->rmi.prod_id[10] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: drivers/input/touchscreen/rmi_core.c:355:
+    printk(KERN_INFO "%s: RMI Protocol: %d.%d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1419: FILE: drivers/input/touchscreen/rmi_core.c:355:
+    printk(KERN_INFO "%s: RMI Protocol: %d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1420: FILE: drivers/input/touchscreen/rmi_core.c:356:
+    printk(KERN_INFO "%s: RMI Protocol: %d.%d\n",
+      drvname, rpd->rmi.rmi_maj_ver, rpd->rmi.rmi_min_ver);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: drivers/input/touchscreen/rmi_core.c:356:
+      drvname, rpd->rmi.rmi_maj_ver, rpd->rmi.rmi_min_ver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: drivers/input/touchscreen/rmi_core.c:357:
+    printk(KERN_INFO "%s: Manufacturer: %d", drvname,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1421: FILE: drivers/input/touchscreen/rmi_core.c:357:
+    printk(KERN_INFO "%s: Manufacturer: %d", drvname,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1422: FILE: drivers/input/touchscreen/rmi_core.c:358:
+    printk(KERN_INFO "%s: Manufacturer: %d", drvname,
+      rpd->rmi.mfgid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1422: FILE: drivers/input/touchscreen/rmi_core.c:358:
+      rpd->rmi.mfgid);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1423: FILE: drivers/input/touchscreen/rmi_core.c:359:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: drivers/input/touchscreen/rmi_core.c:360:
+    if(rpd->rmi.mfgid == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1424: FILE: drivers/input/touchscreen/rmi_core.c:360:
+    if(rpd->rmi.mfgid == 1) {
+      printk(KERN_INFO " (Synaptics)");

ERROR:SPACING: space required before the open parenthesis '('
#1424: FILE: drivers/input/touchscreen/rmi_core.c:360:
+    if(rpd->rmi.mfgid == 1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1424: FILE: drivers/input/touchscreen/rmi_core.c:360:
+    if(rpd->rmi.mfgid == 1) {
+      printk(KERN_INFO " (Synaptics)");
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: drivers/input/touchscreen/rmi_core.c:361:
+      printk(KERN_INFO " (Synaptics)");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1425: FILE: drivers/input/touchscreen/rmi_core.c:361:
+      printk(KERN_INFO " (Synaptics)");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: drivers/input/touchscreen/rmi_core.c:362:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1427: FILE: drivers/input/touchscreen/rmi_core.c:363:
+    printk(KERN_INFO "\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1427: FILE: drivers/input/touchscreen/rmi_core.c:363:
+    printk(KERN_INFO "\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: drivers/input/touchscreen/rmi_core.c:365:
+    printk(KERN_INFO "%s: Properties: 0x%x \n", drvname, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: drivers/input/touchscreen/rmi_core.c:365:
+    printk(KERN_INFO "%s: Properties: 0x%x \n", drvname, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1429: FILE: drivers/input/touchscreen/rmi_core.c:365:
+    printk(KERN_INFO "%s: Properties: 0x%x \n", drvname, 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1429: FILE: drivers/input/touchscreen/rmi_core.c:365:
+    printk(KERN_INFO "%s: Properties: 0x%x \n", drvname, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1431: FILE: drivers/input/touchscreen/rmi_core.c:366:
+    printk(KERN_INFO "%s: Properties: 0x%x \n", drvname, 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1432: FILE: drivers/input/touchscreen/rmi_core.c:367:
+    printk(KERN_INFO "%s: Product Info: 0x%x 0x%x \n", drvname, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: drivers/input/touchscreen/rmi_core.c:367:
+    printk(KERN_INFO "%s: Product Info: 0x%x 0x%x \n", drvname, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1432: FILE: drivers/input/touchscreen/rmi_core.c:367:
+    printk(KERN_INFO "%s: Product Info: 0x%x 0x%x \n", drvname, 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1432: FILE: drivers/input/touchscreen/rmi_core.c:367:
+    printk(KERN_INFO "%s: Product Info: 0x%x 0x%x \n", drvname, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1434: FILE: drivers/input/touchscreen/rmi_core.c:368:
+    printk(KERN_INFO "%s: Product Info: 0x%x 0x%x \n", drvname, 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1435: FILE: drivers/input/touchscreen/rmi_core.c:369:
+    printk(KERN_INFO "%s: Date Code: Year : %d Month: %d Day: %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: drivers/input/touchscreen/rmi_core.c:369:
+    printk(KERN_INFO "%s: Date Code: Year : %d Month: %d Day: %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1435: FILE: drivers/input/touchscreen/rmi_core.c:369:
+    printk(KERN_INFO "%s: Date Code: Year : %d Month: %d Day: %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1437: FILE: drivers/input/touchscreen/rmi_core.c:370:
+    printk(KERN_INFO "%s: Date Code: Year : %d Month: %d Day: %d\n", 
+      rpd->rmi.date_code[1], rpd->rmi.date_code[2]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: drivers/input/touchscreen/rmi_core.c:370:
+      rpd->rmi.date_code[1], rpd->rmi.date_code[2]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: drivers/input/touchscreen/rmi_core.c:372:
+    printk(KERN_INFO "%s: Tester ID: %d \n", drvname, rpd->rmi.tester_id);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1439: FILE: drivers/input/touchscreen/rmi_core.c:372:
+    printk(KERN_INFO "%s: Tester ID: %d \n", drvname, rpd->rmi.tester_id);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1439: FILE: drivers/input/touchscreen/rmi_core.c:372:
+    printk(KERN_INFO "%s: Tester ID: %d \n", drvname, rpd->rmi.tester_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1441: FILE: drivers/input/touchscreen/rmi_core.c:374:
+    printk(KERN_INFO "%s: Serial Number: 0x%x \n", drvname, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1441: FILE: drivers/input/touchscreen/rmi_core.c:374:
+    printk(KERN_INFO "%s: Serial Number: 0x%x \n", drvname, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1441: FILE: drivers/input/touchscreen/rmi_core.c:374:
+    printk(KERN_INFO "%s: Serial Number: 0x%x \n", drvname, 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1441: FILE: drivers/input/touchscreen/rmi_core.c:374:
+    printk(KERN_INFO "%s: Serial Number: 0x%x \n", drvname, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: drivers/input/touchscreen/rmi_core.c:375:
+    printk(KERN_INFO "%s: Serial Number: 0x%x \n", drvname, 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: drivers/input/touchscreen/rmi_core.c:376:
+    printk(KERN_INFO "%s: Product ID: %s\n", drvname, rpd->rmi.prod_id);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1444: FILE: drivers/input/touchscreen/rmi_core.c:376:
+    printk(KERN_INFO "%s: Product ID: %s\n", drvname, rpd->rmi.prod_id);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: drivers/input/touchscreen/rmi_core.c:377:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: drivers/input/touchscreen/rmi_core.c:380:
+  mutex_lock(&phys_drivers_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: drivers/input/touchscreen/rmi_core.c:381:
+  list_add_tail(&rpd->drivers, &phys_drivers);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: drivers/input/touchscreen/rmi_core.c:382:
+  mutex_unlock(&phys_drivers_mutex);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1452: FILE: drivers/input/touchscreen/rmi_core.c:384:
+  /* Do a probe for any applications that are registered and bind this $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1454: FILE: drivers/input/touchscreen/rmi_core.c:385:
+  /* Do a probe for any applications that are registered and bind this 
+  list_for_each_entry(app, &app_drivers, apps) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: drivers/input/touchscreen/rmi_core.c:387:
+    if(!app->rpd) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1456: FILE: drivers/input/touchscreen/rmi_core.c:387:
+    if(!app->rpd) {
+      match_and_bind(app, rpd);

ERROR:SPACING: space required before the open parenthesis '('
#1456: FILE: drivers/input/touchscreen/rmi_core.c:387:
+    if(!app->rpd) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1456: FILE: drivers/input/touchscreen/rmi_core.c:387:
+    if(!app->rpd) {
+      match_and_bind(app, rpd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: drivers/input/touchscreen/rmi_core.c:388:
+      match_and_bind(app, rpd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: drivers/input/touchscreen/rmi_core.c:389:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: drivers/input/touchscreen/rmi_core.c:390:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1461: FILE: drivers/input/touchscreen/rmi_core.c:392:
+  pr_debug("Registered phys driver %s\n", rpd->name);^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: drivers/input/touchscreen/rmi_core.c:392:
+  pr_debug("Registered phys driver %s\n", rpd->name);^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/input/touchscreen/rmi_core.c:393:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1465: FILE: drivers/input/touchscreen/rmi_core.c:396:
+  return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1471: FILE: drivers/input/touchscreen/rmi_core.c:402:
+  if(rpd->app) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1471: FILE: drivers/input/touchscreen/rmi_core.c:402:
+  if(rpd->app) {
+    printk(KERN_WARNING "%s: WARNING: unregister of %s while %s still 

ERROR:SPACING: space required before the open parenthesis '('
#1471: FILE: drivers/input/touchscreen/rmi_core.c:402:
+  if(rpd->app) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1472: FILE: drivers/input/touchscreen/rmi_core.c:403:
+    printk(KERN_WARNING "%s: WARNING: unregister of %s while %s still $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: drivers/input/touchscreen/rmi_core.c:403:
+    printk(KERN_WARNING "%s: WARNING: unregister of %s while %s still $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1472: FILE: drivers/input/touchscreen/rmi_core.c:403:
+    printk(KERN_WARNING "%s: WARNING: unregister of %s while %s still 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1474: FILE: drivers/input/touchscreen/rmi_core.c:404:
+      drvname, rpd->name, rpd->app->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1475: FILE: drivers/input/touchscreen/rmi_core.c:405:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: drivers/input/touchscreen/rmi_core.c:406:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: drivers/input/touchscreen/rmi_core.c:407:
+  pr_debug("Unregistering phys driver %s\n", rpd->name);$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1477: FILE: drivers/input/touchscreen/rmi_core.c:407:
+  pr_debug("Unregistering phys driver %s\n", rpd->name);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1478: FILE: drivers/input/touchscreen/rmi_core.c:408:
+  mutex_lock(&phys_drivers_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: drivers/input/touchscreen/rmi_core.c:409:
+  list_del(&rpd->drivers);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: drivers/input/touchscreen/rmi_core.c:410:
+  mutex_unlock(&phys_drivers_mutex);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1481: FILE: drivers/input/touchscreen/rmi_core.c:411:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1482: FILE: drivers/input/touchscreen/rmi_core.c:412:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/input/touchscreen/rmi_core.c:417:
+  void (*attention)(struct rmi_phys_driver *pd, int instance),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: drivers/input/touchscreen/rmi_core.c:418:
+  int (*probe)(struct rmi_application *app,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: drivers/input/touchscreen/rmi_core.c:419:
+  const struct rmi_module_info *rmi),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: drivers/input/touchscreen/rmi_core.c:420:
+  void (*config)(struct rmi_application *app))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: drivers/input/touchscreen/rmi_core.c:422:
+  struct rmi_application *app;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: drivers/input/touchscreen/rmi_core.c:423:
+  struct rmi_phys_driver *rpd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: drivers/input/touchscreen/rmi_core.c:425:
+  if(!name) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1496: FILE: drivers/input/touchscreen/rmi_core.c:426:
+    printk(KERN_ERR "%s: Application driver must specify a name\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: drivers/input/touchscreen/rmi_core.c:426:
+    printk(KERN_ERR "%s: Application driver must specify a name\n", $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1496: FILE: drivers/input/touchscreen/rmi_core.c:426:
+    printk(KERN_ERR "%s: Application driver must specify a name\n", 
                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1496: FILE: drivers/input/touchscreen/rmi_core.c:426:
+    printk(KERN_ERR "%s: Application driver must specify a name\n", 
                        ^

CHECK:CAMELCASE: Avoid CamelCase: <Application>
#1496: FILE: drivers/input/touchscreen/rmi_core.c:426:
+    printk(KERN_ERR "%s: Application driver must specify a name\n", 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1498: FILE: drivers/input/touchscreen/rmi_core.c:427:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: drivers/input/touchscreen/rmi_core.c:428:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: drivers/input/touchscreen/rmi_core.c:430:
+  if(!attention) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1502: FILE: drivers/input/touchscreen/rmi_core.c:431:
+    printk(KERN_ERR "%s: Application driver %s must specify attention $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: drivers/input/touchscreen/rmi_core.c:431:
+    printk(KERN_ERR "%s: Application driver %s must specify attention $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1502: FILE: drivers/input/touchscreen/rmi_core.c:431:
+    printk(KERN_ERR "%s: Application driver %s must specify attention 
                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1502: FILE: drivers/input/touchscreen/rmi_core.c:431:
+    printk(KERN_ERR "%s: Application driver %s must specify attention 
                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1502: FILE: drivers/input/touchscreen/rmi_core.c:431:
+    printk(KERN_ERR "%s: Application driver %s must specify attention 
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1504: FILE: drivers/input/touchscreen/rmi_core.c:432:
+      drvname, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: drivers/input/touchscreen/rmi_core.c:433:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: drivers/input/touchscreen/rmi_core.c:434:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1507: FILE: drivers/input/touchscreen/rmi_core.c:435:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: drivers/input/touchscreen/rmi_core.c:436:
+  if(!probe) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1508: FILE: drivers/input/touchscreen/rmi_core.c:436:
+  if(!probe) {
+    printk(KERN_ERR "%s: Application driver %s must specify a probe 

ERROR:SPACING: space required before the open parenthesis '('
#1508: FILE: drivers/input/touchscreen/rmi_core.c:436:
+  if(!probe) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1509: FILE: drivers/input/touchscreen/rmi_core.c:437:
+    printk(KERN_ERR "%s: Application driver %s must specify a probe $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: drivers/input/touchscreen/rmi_core.c:437:
+    printk(KERN_ERR "%s: Application driver %s must specify a probe $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1509: FILE: drivers/input/touchscreen/rmi_core.c:437:
+    printk(KERN_ERR "%s: Application driver %s must specify a probe 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: drivers/input/touchscreen/rmi_core.c:438:
+      drvname, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: drivers/input/touchscreen/rmi_core.c:439:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/input/touchscreen/rmi_core.c:440:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: drivers/input/touchscreen/rmi_core.c:442:
+  if(!config) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: drivers/input/touchscreen/rmi_core.c:443:
+    printk(KERN_ERR "%s: Application driver %s must specify a config $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: drivers/input/touchscreen/rmi_core.c:443:
+    printk(KERN_ERR "%s: Application driver %s must specify a config $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1516: FILE: drivers/input/touchscreen/rmi_core.c:443:
+    printk(KERN_ERR "%s: Application driver %s must specify a config 
                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1516: FILE: drivers/input/touchscreen/rmi_core.c:443:
+    printk(KERN_ERR "%s: Application driver %s must specify a config 
                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1516: FILE: drivers/input/touchscreen/rmi_core.c:443:
+    printk(KERN_ERR "%s: Application driver %s must specify a config 
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/input/touchscreen/rmi_core.c:444:
+      drvname, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/input/touchscreen/rmi_core.c:445:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: drivers/input/touchscreen/rmi_core.c:446:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: drivers/input/touchscreen/rmi_core.c:448:
+  pr_debug("Registering app driver %s\n", name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1524: FILE: drivers/input/touchscreen/rmi_core.c:450:
+  app = kmalloc(sizeof(*app), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1525: FILE: drivers/input/touchscreen/rmi_core.c:451:
+  if(!app) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1525: FILE: drivers/input/touchscreen/rmi_core.c:451:
+  if(!app) {
+    printk(KERN_ERR "%s: Out of memory\n", drvname);

ERROR:SPACING: space required before the open parenthesis '('
#1525: FILE: drivers/input/touchscreen/rmi_core.c:451:
+  if(!app) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: drivers/input/touchscreen/rmi_core.c:452:
+    printk(KERN_ERR "%s: Out of memory\n", drvname);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1526: FILE: drivers/input/touchscreen/rmi_core.c:452:
+    printk(KERN_ERR "%s: Out of memory\n", drvname);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1526: FILE: drivers/input/touchscreen/rmi_core.c:452:
+  if(!app) {
+    printk(KERN_ERR "%s: Out of memory\n", drvname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: drivers/input/touchscreen/rmi_core.c:453:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: drivers/input/touchscreen/rmi_core.c:454:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: drivers/input/touchscreen/rmi_core.c:455:
+  INC_ALLOC_STAT(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: drivers/input/touchscreen/rmi_core.c:457:
+  app->name      = name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1532: FILE: drivers/input/touchscreen/rmi_core.c:458:
+  app->attention = attention;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: drivers/input/touchscreen/rmi_core.c:459:
+  app->probe     = probe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: drivers/input/touchscreen/rmi_core.c:460:
+  app->config    = config;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: drivers/input/touchscreen/rmi_core.c:461:
+  app->rpd       = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1537: FILE: drivers/input/touchscreen/rmi_core.c:463:
+  mutex_lock(&app_drivers_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1538: FILE: drivers/input/touchscreen/rmi_core.c:464:
+  list_add_tail(&app->apps, &app_drivers);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1539: FILE: drivers/input/touchscreen/rmi_core.c:465:
+  mutex_unlock(&app_drivers_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: drivers/input/touchscreen/rmi_core.c:468:
+  list_for_each_entry(rpd, &phys_drivers, drivers) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1542: FILE: drivers/input/touchscreen/rmi_core.c:468:
+  list_for_each_entry(rpd, &phys_drivers, drivers) {
+    if(!rpd->app) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: drivers/input/touchscreen/rmi_core.c:469:
+    if(!rpd->app) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1543: FILE: drivers/input/touchscreen/rmi_core.c:469:
+    if(!rpd->app) {
+      match_and_bind(app, rpd);

ERROR:SPACING: space required before the open parenthesis '('
#1543: FILE: drivers/input/touchscreen/rmi_core.c:469:
+    if(!rpd->app) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1543: FILE: drivers/input/touchscreen/rmi_core.c:469:
+    if(!rpd->app) {
+      match_and_bind(app, rpd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: drivers/input/touchscreen/rmi_core.c:470:
+      match_and_bind(app, rpd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: drivers/input/touchscreen/rmi_core.c:471:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: drivers/input/touchscreen/rmi_core.c:472:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: drivers/input/touchscreen/rmi_core.c:474:
+  pr_debug("Registered app driver %s (%p)\n", name, app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: drivers/input/touchscreen/rmi_core.c:476:
+  return app;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: drivers/input/touchscreen/rmi_core.c:482:
+  struct rmi_application *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: drivers/input/touchscreen/rmi_core.c:483:
+  int found = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: drivers/input/touchscreen/rmi_core.c:485:
+  if(!app) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1559: FILE: drivers/input/touchscreen/rmi_core.c:485:
+  if(!app) {
+    return;

ERROR:SPACING: space required before the open parenthesis '('
#1559: FILE: drivers/input/touchscreen/rmi_core.c:485:
+  if(!app) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1559: FILE: drivers/input/touchscreen/rmi_core.c:485:
+  if(!app) {
+    return;
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: drivers/input/touchscreen/rmi_core.c:486:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: drivers/input/touchscreen/rmi_core.c:487:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: drivers/input/touchscreen/rmi_core.c:489:
+  pr_debug("Unregistering app driver %s (%p)\n", app->name, app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: drivers/input/touchscreen/rmi_core.c:491:
+  list_for_each_entry(tmp, &app_drivers, apps) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1565: FILE: drivers/input/touchscreen/rmi_core.c:491:
+  list_for_each_entry(tmp, &app_drivers, apps) {
+    if(tmp == app) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: drivers/input/touchscreen/rmi_core.c:492:
+    if(tmp == app) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1566: FILE: drivers/input/touchscreen/rmi_core.c:492:
+    if(tmp == app) {
+      found = 1;

ERROR:SPACING: space required before the open parenthesis '('
#1566: FILE: drivers/input/touchscreen/rmi_core.c:492:
+    if(tmp == app) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: drivers/input/touchscreen/rmi_core.c:493:
+      found = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: drivers/input/touchscreen/rmi_core.c:494:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: drivers/input/touchscreen/rmi_core.c:495:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/input/touchscreen/rmi_core.c:496:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1571: FILE: drivers/input/touchscreen/rmi_core.c:497:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1572: FILE: drivers/input/touchscreen/rmi_core.c:498:
+  if(!found) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1572: FILE: drivers/input/touchscreen/rmi_core.c:498:
+  if(!found) {
+    printk(KERN_ERR "%s: Removing rmi application %s: not found\n",

ERROR:SPACING: space required before the open parenthesis '('
#1572: FILE: drivers/input/touchscreen/rmi_core.c:498:
+  if(!found) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: drivers/input/touchscreen/rmi_core.c:499:
+    printk(KERN_ERR "%s: Removing rmi application %s: not found\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1573: FILE: drivers/input/touchscreen/rmi_core.c:499:
+    printk(KERN_ERR "%s: Removing rmi application %s: not found\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1574: FILE: drivers/input/touchscreen/rmi_core.c:500:
+    printk(KERN_ERR "%s: Removing rmi application %s: not found\n",
+      drvname, app->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: drivers/input/touchscreen/rmi_core.c:500:
+      drvname, app->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: drivers/input/touchscreen/rmi_core.c:501:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: drivers/input/touchscreen/rmi_core.c:502:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1577: FILE: drivers/input/touchscreen/rmi_core.c:503:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: drivers/input/touchscreen/rmi_core.c:504:
+  if(app->rpd) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1578: FILE: drivers/input/touchscreen/rmi_core.c:504:
+  if(app->rpd) {
[...]
+    module_put(app->rpd->module);

ERROR:SPACING: space required before the open parenthesis '('
#1578: FILE: drivers/input/touchscreen/rmi_core.c:504:
+  if(app->rpd) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1580: FILE: drivers/input/touchscreen/rmi_core.c:506:
+    module_put(app->rpd->module);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: drivers/input/touchscreen/rmi_core.c:507:
+    app->rpd->app = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: drivers/input/touchscreen/rmi_core.c:508:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1583: FILE: drivers/input/touchscreen/rmi_core.c:509:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: drivers/input/touchscreen/rmi_core.c:510:
+  list_del(&app->apps);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: drivers/input/touchscreen/rmi_core.c:511:
+  kfree(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: drivers/input/touchscreen/rmi_core.c:512:
+  DEC_ALLOC_STAT(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: drivers/input/touchscreen/rmi_core.c:514:
+  pr_debug("Unregistered app driver %p\n", app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: drivers/input/touchscreen/rmi_core.c:520:
+  printk(KERN_INFO "Register Mapped Interface Data Layer Driver\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1594: FILE: drivers/input/touchscreen/rmi_core.c:520:
+  printk(KERN_INFO "Register Mapped Interface Data Layer Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1597: FILE: drivers/input/touchscreen/rmi_core.c:523:
+     We need to add all new functions to this list so that we will have $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1597: FILE: drivers/input/touchscreen/rmi_core.c:523:
+  /* Initialize global list of RMI4 Functions that have data sources.
+     We need to add all new functions to this list so that we will have 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1599: FILE: drivers/input/touchscreen/rmi_core.c:524:
+     to their associated functions for init, config, report and detect. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1601: FILE: drivers/input/touchscreen/rmi_core.c:525:
+     for more details. The developer will add a new RMI4 function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1603: FILE: drivers/input/touchscreen/rmi_core.c:526:
+     array in rmi.h and then add a new file to the build (called $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1605: FILE: drivers/input/touchscreen/rmi_core.c:527:
+     where XX is the hex number for the added RMI4 function). The rest $

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#1610: FILE: drivers/input/touchscreen/rmi_core.c:531:
+  /* for each function number defined in rmi.h creat a new rmi_function 
                                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1610: FILE: drivers/input/touchscreen/rmi_core.c:531:
+  /* for each function number defined in rmi.h creat a new rmi_function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1612: FILE: drivers/input/touchscreen/rmi_core.c:532:
+     initialize the pointers to the servicing functions and then add it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1612: FILE: drivers/input/touchscreen/rmi_core.c:532:
+  /* for each function number defined in rmi.h creat a new rmi_function 
+     initialize the pointers to the servicing functions and then add it 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1616: FILE: drivers/input/touchscreen/rmi_core.c:535:
+  for (i = 0; i < rmi4_num_supported_data_src_fns; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1616: FILE: drivers/input/touchscreen/rmi_core.c:535:
+  for (i = 0; i < rmi4_num_supported_data_src_fns; i++) {
[...]
+    struct rmi_functions *fn = kmalloc(sizeof(*fn), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: drivers/input/touchscreen/rmi_core.c:537:
+    struct rmi_functions *fn = kmalloc(sizeof(*fn), GFP_KERNEL);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1619: FILE: drivers/input/touchscreen/rmi_core.c:538:
+    struct rmi_functions *fn = kmalloc(sizeof(*fn), GFP_KERNEL);
+    if(!fn) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1619: FILE: drivers/input/touchscreen/rmi_core.c:538:
+    if(!fn) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1619: FILE: drivers/input/touchscreen/rmi_core.c:538:
+    if(!fn) {
+      printk(KERN_ERR "%s mod_init: could not allocate memory for 

ERROR:SPACING: space required before the open parenthesis '('
#1619: FILE: drivers/input/touchscreen/rmi_core.c:538:
+    if(!fn) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1620: FILE: drivers/input/touchscreen/rmi_core.c:539:
+      printk(KERN_ERR "%s mod_init: could not allocate memory for $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1620: FILE: drivers/input/touchscreen/rmi_core.c:539:
+      printk(KERN_ERR "%s mod_init: could not allocate memory for $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1620: FILE: drivers/input/touchscreen/rmi_core.c:539:
+      printk(KERN_ERR "%s mod_init: could not allocate memory for 

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1620: FILE: drivers/input/touchscreen/rmi_core.c:539:
+    if(!fn) {
+      printk(KERN_ERR "%s mod_init: could not allocate memory for 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1622: FILE: drivers/input/touchscreen/rmi_core.c:540:
+        drvname, rmi4_supported_data_src_functions[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: drivers/input/touchscreen/rmi_core.c:540:
+        drvname, rmi4_supported_data_src_functions[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1623: FILE: drivers/input/touchscreen/rmi_core.c:541:
+      return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1624: FILE: drivers/input/touchscreen/rmi_core.c:542:
+    } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1626: FILE: drivers/input/touchscreen/rmi_core.c:544:
+      INC_ALLOC_STAT(fn);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1628: FILE: drivers/input/touchscreen/rmi_core.c:546:
+      struct rmi_functions_data * rmi4_fn = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: drivers/input/touchscreen/rmi_core.c:546:
+      struct rmi_functions_data * rmi4_fn = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1630: FILE: drivers/input/touchscreen/rmi_core.c:547:
+      fn->functionNum = rmi4_fn->functionNumber;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1631: FILE: drivers/input/touchscreen/rmi_core.c:548:
+      /* Fill in ptrs to functions. The functions are linked in from a $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1631: FILE: drivers/input/touchscreen/rmi_core.c:548:
+      /* Fill in ptrs to functions. The functions are linked in from a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1633: FILE: drivers/input/touchscreen/rmi_core.c:549:
+         called rmi_function_xx.c where xx is the hex number of the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1633: FILE: drivers/input/touchscreen/rmi_core.c:549:
+         called rmi_function_xx.c where xx is the hex number of the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1633: FILE: drivers/input/touchscreen/rmi_core.c:549:
+         called rmi_function_xx.c where xx is the hex number of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1635: FILE: drivers/input/touchscreen/rmi_core.c:550:
+         from the RMI4 spec. Also, the function prototypes need to be $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: drivers/input/touchscreen/rmi_core.c:550:
+         from the RMI4 spec. Also, the function prototypes need to be $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: drivers/input/touchscreen/rmi_core.c:550:
+         from the RMI4 spec. Also, the function prototypes need to be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1637: FILE: drivers/input/touchscreen/rmi_core.c:551:
+         rmi_function_xx.h - also where xx is the hex number of the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: drivers/input/touchscreen/rmi_core.c:551:
+         rmi_function_xx.h - also where xx is the hex number of the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: drivers/input/touchscreen/rmi_core.c:551:
+         rmi_function_xx.h - also where xx is the hex number of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: drivers/input/touchscreen/rmi_core.c:552:
+         So that you don't get compile errors and that new header needs $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1639: FILE: drivers/input/touchscreen/rmi_core.c:552:
+         So that you don't get compile errors and that new header needs $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1639: FILE: drivers/input/touchscreen/rmi_core.c:552:
+         So that you don't get compile errors and that new header needs $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1641: FILE: drivers/input/touchscreen/rmi_core.c:553:
+         included in the rmi.h header file.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: drivers/input/touchscreen/rmi_core.c:553:
+         included in the rmi.h header file.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: drivers/input/touchscreen/rmi_core.c:554:
+      */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: drivers/input/touchscreen/rmi_core.c:555:
+      fn->report = rmi4_fn->reportFn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1644: FILE: drivers/input/touchscreen/rmi_core.c:556:
+      fn->config = rmi4_fn->configFn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1645: FILE: drivers/input/touchscreen/rmi_core.c:557:
+      fn->init =   rmi4_fn->initFn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1646: FILE: drivers/input/touchscreen/rmi_core.c:558:
+      fn->detect = rmi4_fn->detectFn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1648: FILE: drivers/input/touchscreen/rmi_core.c:560:
+      /* Add the new fn to the global list */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1649: FILE: drivers/input/touchscreen/rmi_core.c:561:
+      mutex_lock(&fns_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: drivers/input/touchscreen/rmi_core.c:562:
+      list_add_tail(&fn->link, &fns_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1651: FILE: drivers/input/touchscreen/rmi_core.c:563:
+      mutex_unlock(&fns_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: drivers/input/touchscreen/rmi_core.c:564:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1653: FILE: drivers/input/touchscreen/rmi_core.c:565:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: drivers/input/touchscreen/rmi_core.c:567:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: drivers/input/touchscreen/rmi_core.c:572:
+  struct rmi_application *app, *apptmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: drivers/input/touchscreen/rmi_core.c:573:
+  struct rmi_function *fn, *fntmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: drivers/input/touchscreen/rmi_core.c:574:
+  struct rmi_function_info *rfi, *rfitmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: drivers/input/touchscreen/rmi_core.c:576:
+  /* These lists should be empty, but just in case . . . */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: drivers/input/touchscreen/rmi_core.c:577:
+  mutex_lock(&app_drivers_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1666: FILE: drivers/input/touchscreen/rmi_core.c:578:
+  list_for_each_entry_safe(app, apptmp, &app_drivers, apps) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1667: FILE: drivers/input/touchscreen/rmi_core.c:579:
+    list_del(&app->apps);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: drivers/input/touchscreen/rmi_core.c:580:
+    kfree(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: drivers/input/touchscreen/rmi_core.c:581:
+    DEC_ALLOC_STAT(app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: drivers/input/touchscreen/rmi_core.c:582:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1671: FILE: drivers/input/touchscreen/rmi_core.c:583:
+  mutex_unlock(&app_drivers_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1673: FILE: drivers/input/touchscreen/rmi_core.c:585:
+  mutex_lock(&fns_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1674: FILE: drivers/input/touchscreen/rmi_core.c:586:
+  list_for_each_entry_safe(fn, fntmp, &fns_list, link) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1675: FILE: drivers/input/touchscreen/rmi_core.c:587:
+    list_del(&fn->link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1676: FILE: drivers/input/touchscreen/rmi_core.c:588:
+    kfree(fn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: drivers/input/touchscreen/rmi_core.c:589:
+    DEC_ALLOC_STAT(fn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1678: FILE: drivers/input/touchscreen/rmi_core.c:590:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1679: FILE: drivers/input/touchscreen/rmi_core.c:591:
+  mutex_unlock(&fns_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1681: FILE: drivers/input/touchscreen/rmi_core.c:593:
+  mutex_lock(&rfi_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1682: FILE: drivers/input/touchscreen/rmi_core.c:594:
+  list_for_each_entry_safe(rfi, rfitmp, &rpd->rmi.functions, link) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1683: FILE: drivers/input/touchscreen/rmi_core.c:595:
+    list_del(&fn->link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1684: FILE: drivers/input/touchscreen/rmi_core.c:596:
+    kfree(fn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1685: FILE: drivers/input/touchscreen/rmi_core.c:597:
+    DEC_ALLOC_STAT(rfi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1686: FILE: drivers/input/touchscreen/rmi_core.c:598:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1687: FILE: drivers/input/touchscreen/rmi_core.c:599:
+  mutex_unlock(&rfi_mutex);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1689: FILE: drivers/input/touchscreen/rmi_core.c:601:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1690: FILE: drivers/input/touchscreen/rmi_core.c:602:
+  CHECK_ALLOC_STAT(rfi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1691: FILE: drivers/input/touchscreen/rmi_core.c:603:
+  CHECK_ALLOC_STAT(fn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: drivers/input/touchscreen/rmi_core.c:604:
+  CHECK_ALLOC_STAT(app);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1695: FILE: drivers/input/touchscreen/rmi_core.c:607:
+/** Specifies to the kernel that the mod_init() function should be $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: drivers/input/touchscreen/rmi_core.c:608:
+ * the module is loaded.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1698: FILE: drivers/input/touchscreen/rmi_core.c:609:
+ * \see mod_init()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1699: FILE: drivers/input/touchscreen/rmi_core.c:610:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1701: FILE: drivers/input/touchscreen/rmi_core.c:612:
+/** Specifies to the kernel that the mod_exit() function should be $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: drivers/input/touchscreen/rmi_core.c:613:
+ * the module is unloaded.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: drivers/input/touchscreen/rmi_core.c:614:
+ * \see mod_exit()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: drivers/input/touchscreen/rmi_core.c:615:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: drivers/input/touchscreen/rmi_core.c:619:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Synaptics>
#1710: FILE: drivers/input/touchscreen/rmi_core.c:620:
+MODULE_AUTHOR("Synaptics, Inc.");

CHECK:CAMELCASE: Avoid CamelCase: <Inc>
#1710: FILE: drivers/input/touchscreen/rmi_core.c:620:
+MODULE_AUTHOR("Synaptics, Inc.");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1711: FILE: drivers/input/touchscreen/rmi_core.c:621:
+/** Standard driver module information - a summary description of this $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: drivers/input/touchscreen/rmi_core.c:622:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1715: FILE: drivers/input/touchscreen/rmi_core.c:624:
+/** Standard driver module information - the license under which this $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1717: FILE: drivers/input/touchscreen/rmi_core.c:625:
+ * is included in the kernel.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1718: FILE: drivers/input/touchscreen/rmi_core.c:626:
+ */$

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#1724: FILE: drivers/input/touchscreen/rmi_core.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1729: FILE: drivers/input/touchscreen/rmi_core.h:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1734: FILE: drivers/input/touchscreen/rmi_core.h:6:
+ * \note YOU SHOULD NOT NEED TO INCLUDE THIS FILE FOR PHYSICAL OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1743: FILE: drivers/input/touchscreen/rmi_core.h:14:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1752: FILE: drivers/input/touchscreen/rmi_core.h:22:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1757: FILE: drivers/input/touchscreen/rmi_core.h:26:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1762: FILE: drivers/input/touchscreen/rmi_core.h:30:
+  const char *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1763: FILE: drivers/input/touchscreen/rmi_core.h:31:
+  void (*attention)(struct rmi_phys_driver *pd, int instance);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1770: FILE: drivers/input/touchscreen/rmi_core.h:38:
+  int (*probe)(struct rmi_application *app, const struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1770: FILE: drivers/input/touchscreen/rmi_core.h:38:
+  int (*probe)(struct rmi_application *app, const struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1777: FILE: drivers/input/touchscreen/rmi_core.h:44:
+  void (*config)(struct rmi_application *app);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1782: FILE: drivers/input/touchscreen/rmi_core.h:49:
+  struct list_head apps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1783: FILE: drivers/input/touchscreen/rmi_core.h:50:
+  struct rmi_phys_driver *rpd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1784: FILE: drivers/input/touchscreen/rmi_core.h:51:
+  int    polling_required;$

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#1790: FILE: drivers/input/touchscreen/rmi_core.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1795: FILE: drivers/input/touchscreen/rmi_function_11.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1800: FILE: drivers/input/touchscreen/rmi_function_11.c:6:
+ * For every RMI4 function that has a data source - like 2D sensors, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1802: FILE: drivers/input/touchscreen/rmi_function_11.c:7:
+ * GPIOs, etc. - the user will create a new rmi_function_xx.c file and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1804: FILE: drivers/input/touchscreen/rmi_function_11.c:8:
+ * functions to perform the config(), init(), report() and detect() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1806: FILE: drivers/input/touchscreen/rmi_function_11.c:9:
+ * The function pointers are then srored under the RMI function info $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1808: FILE: drivers/input/touchscreen/rmi_function_11.c:10:
+ * functions will automatically be called by the global config(), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1810: FILE: drivers/input/touchscreen/rmi_function_11.c:11:
+ * and detect() functions that will loop through all data sources and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1812: FILE: drivers/input/touchscreen/rmi_function_11.c:12:
+ * data sources functions using these functions pointed to by the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1818: FILE: drivers/input/touchscreen/rmi_function_11.c:17:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1827: FILE: drivers/input/touchscreen/rmi_function_11.c:25:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1832: FILE: drivers/input/touchscreen/rmi_function_11.c:29:
+ $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1846: FILE: drivers/input/touchscreen/rmi_function_11.c:42:
+static int sensorMaxX = 0;

CHECK:CAMELCASE: Avoid CamelCase: <sensorMaxX>
#1846: FILE: drivers/input/touchscreen/rmi_function_11.c:42:
+static int sensorMaxX = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1847: FILE: drivers/input/touchscreen/rmi_function_11.c:43:
+static int sensorMaxY = 0;

CHECK:CAMELCASE: Avoid CamelCase: <sensorMaxY>
#1847: FILE: drivers/input/touchscreen/rmi_function_11.c:43:
+static int sensorMaxY = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1850: FILE: drivers/input/touchscreen/rmi_function_11.c:46:
+ * This reads in a sample and reports the function $11 source data to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1852: FILE: drivers/input/touchscreen/rmi_function_11.c:47:
+ * It is used for both polling and interrupt driven operation. This is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1854: FILE: drivers/input/touchscreen/rmi_function_11.c:48:
+ * so don't put in any informational printks since they will slow $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1857: FILE: drivers/input/touchscreen/rmi_function_11.c:50:
+int FN_11_report(struct rmi_application *app, struct rmi_function_info $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1860: FILE: drivers/input/touchscreen/rmi_function_11.c:52:
+  unsigned char values[2] = {0,0};$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1860: FILE: drivers/input/touchscreen/rmi_function_11.c:52:
+  unsigned char values[2] = {0,0};
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/input/touchscreen/rmi_function_11.c:53:
+  unsigned char data[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1862: FILE: drivers/input/touchscreen/rmi_function_11.c:54:
+  int touch = 0; /* number of touch points - fingers in this case */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1864: FILE: drivers/input/touchscreen/rmi_function_11.c:56:
+  int X = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: drivers/input/touchscreen/rmi_function_11.c:57:
+  int Y = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1866: FILE: drivers/input/touchscreen/rmi_function_11.c:58:
+  int Z = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1867: FILE: drivers/input/touchscreen/rmi_function_11.c:59:
+  int W = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1870: FILE: drivers/input/touchscreen/rmi_function_11.c:62:
+  /* First get the finger status field - the size of the finger status $

WARNING:TYPO_SPELLING: 'supporte' may be misspelled - perhaps 'supported'?
#1872: FILE: drivers/input/touchscreen/rmi_function_11.c:63:
+     determined by the number of finger supporte - 2 bits per finger, 
                                         ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1872: FILE: drivers/input/touchscreen/rmi_function_11.c:63:
+     determined by the number of finger supporte - 2 bits per finger, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1872: FILE: drivers/input/touchscreen/rmi_function_11.c:63:
+  /* First get the finger status field - the size of the finger status 
+     determined by the number of finger supporte - 2 bits per finger, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1875: FILE: drivers/input/touchscreen/rmi_function_11.c:65:
+     Read the required number of registers and check each 2 bit field $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1877: FILE: drivers/input/touchscreen/rmi_function_11.c:66:
+     if a finger is down (00 = finger not present, 01 = finger present $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1879: FILE: drivers/input/touchscreen/rmi_function_11.c:67:
+     10 = finger present but data may not be accurate, 11 = reserved $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1882: FILE: drivers/input/touchscreen/rmi_function_11.c:69:
+  int fn11FingersSupported = rfi->numDataPoints;$

CHECK:CAMELCASE: Avoid CamelCase: <fn11FingersSupported>
#1882: FILE: drivers/input/touchscreen/rmi_function_11.c:69:
+  int fn11FingersSupported = rfi->numDataPoints;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1883: FILE: drivers/input/touchscreen/rmi_function_11.c:70:
+  int fn11FingerRegisters = (fn11FingersSupported + 3)/4;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1883: FILE: drivers/input/touchscreen/rmi_function_11.c:70:
+  int fn11FingerRegisters = (fn11FingersSupported + 3)/4;
                                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <fn11FingerRegisters>
#1883: FILE: drivers/input/touchscreen/rmi_function_11.c:70:
+  int fn11FingerRegisters = (fn11FingersSupported + 3)/4;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1885: FILE: drivers/input/touchscreen/rmi_function_11.c:72:
+  unsigned short fn11DataBaseAddr = rfi->funcDescriptor.dataBaseAddr;$

CHECK:CAMELCASE: Avoid CamelCase: <fn11DataBaseAddr>
#1885: FILE: drivers/input/touchscreen/rmi_function_11.c:72:
+  unsigned short fn11DataBaseAddr = rfi->funcDescriptor.dataBaseAddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1887: FILE: drivers/input/touchscreen/rmi_function_11.c:74:
+  if (rmi_read_multiple(app, fn11DataBaseAddr, values, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1887: FILE: drivers/input/touchscreen/rmi_function_11.c:74:
+  if (rmi_read_multiple(app, fn11DataBaseAddr, values, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1887: FILE: drivers/input/touchscreen/rmi_function_11.c:74:
+  if (rmi_read_multiple(app, fn11DataBaseAddr, values, 
[...]
+    printk(KERN_ERR "RMI4 function $11 report: Could not read finger 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1889: FILE: drivers/input/touchscreen/rmi_function_11.c:75:
+    printk(KERN_ERR "RMI4 function $11 report: Could not read finger $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1889: FILE: drivers/input/touchscreen/rmi_function_11.c:75:
+  if (rmi_read_multiple(app, fn11DataBaseAddr, values, 
+    printk(KERN_ERR "RMI4 function $11 report: Could not read finger 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1889: FILE: drivers/input/touchscreen/rmi_function_11.c:75:
+    printk(KERN_ERR "RMI4 function $11 report: Could not read finger $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1889: FILE: drivers/input/touchscreen/rmi_function_11.c:75:
+    printk(KERN_ERR "RMI4 function $11 report: Could not read finger 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1890: FILE: drivers/input/touchscreen/rmi_function_11.c:75:
+  if (rmi_read_multiple(app, fn11DataBaseAddr, values, 
status registers 0x%x\n", fn11DataBaseAddr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1891: FILE: drivers/input/touchscreen/rmi_function_11.c:76:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1892: FILE: drivers/input/touchscreen/rmi_function_11.c:77:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1894: FILE: drivers/input/touchscreen/rmi_function_11.c:79:
+  /* For each finger present, read the proper number of registers to $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1894: FILE: drivers/input/touchscreen/rmi_function_11.c:79:
+  /* For each finger present, read the proper number of registers to $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1896: FILE: drivers/input/touchscreen/rmi_function_11.c:80:
+  unsigned char fn11DataRegBlockSize = rfi->dataRegBlockSize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1897: FILE: drivers/input/touchscreen/rmi_function_11.c:81:
+  int finger;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1898: FILE: drivers/input/touchscreen/rmi_function_11.c:82:
+  for (finger = 0; finger < fn11FingersSupported; finger++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1899: FILE: drivers/input/touchscreen/rmi_function_11.c:83:
+  {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1900: FILE: drivers/input/touchscreen/rmi_function_11.c:84:
+    int reg = finger/4; /* determine which data byte the finger status $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1900: FILE: drivers/input/touchscreen/rmi_function_11.c:84:
+    int reg = finger/4; /* determine which data byte the finger status $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1902: FILE: drivers/input/touchscreen/rmi_function_11.c:85:
+    int fingerShift = (finger %4) * 2; /* determine bit shift to get $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1902: FILE: drivers/input/touchscreen/rmi_function_11.c:85:
+    int fingerShift = (finger %4) * 2; /* determine bit shift to get $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1904: FILE: drivers/input/touchscreen/rmi_function_11.c:86:
+    int fingerStatus = (values[reg] >> fingerShift) & 3;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1906: FILE: drivers/input/touchscreen/rmi_function_11.c:88:
+    /* if finger status indicates a finger is present then read the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1906: FILE: drivers/input/touchscreen/rmi_function_11.c:88:
+    /* if finger status indicates a finger is present then read the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1908: FILE: drivers/input/touchscreen/rmi_function_11.c:89:
+    if (fingerStatus == 1 || fingerStatus == 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1909: FILE: drivers/input/touchscreen/rmi_function_11.c:90:
+    {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1910: FILE: drivers/input/touchscreen/rmi_function_11.c:91:
+      touch++; /* number of active touch points not same as number of $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1910: FILE: drivers/input/touchscreen/rmi_function_11.c:91:
+      touch++; /* number of active touch points not same as number of $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1913: FILE: drivers/input/touchscreen/rmi_function_11.c:93:
+      /* Read the finger data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1914: FILE: drivers/input/touchscreen/rmi_function_11.c:94:
+      if(rmi_read_multiple(app, fn11DataBaseAddr +$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1915: FILE: drivers/input/touchscreen/rmi_function_11.c:95:
+        ((finger  * fn11DataRegBlockSize) + fn11FingerRegisters), data, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1915: FILE: drivers/input/touchscreen/rmi_function_11.c:95:
+        ((finger  * fn11DataRegBlockSize) + fn11FingerRegisters), data, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1915: FILE: drivers/input/touchscreen/rmi_function_11.c:95:
+        ((finger  * fn11DataRegBlockSize) + fn11FingerRegisters), data, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1917: FILE: drivers/input/touchscreen/rmi_function_11.c:96:
+      {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1918: FILE: drivers/input/touchscreen/rmi_function_11.c:97:
+        printk(KERN_ERR "RMI4 function $11 report: Could not read $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1918: FILE: drivers/input/touchscreen/rmi_function_11.c:97:
+        printk(KERN_ERR "RMI4 function $11 report: Could not read $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1918: FILE: drivers/input/touchscreen/rmi_function_11.c:97:
+        printk(KERN_ERR "RMI4 function $11 report: Could not read $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1918: FILE: drivers/input/touchscreen/rmi_function_11.c:97:
+        printk(KERN_ERR "RMI4 function $11 report: Could not read 
                                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <Could>
#1918: FILE: drivers/input/touchscreen/rmi_function_11.c:97:
+        printk(KERN_ERR "RMI4 function $11 report: Could not read 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1920: FILE: drivers/input/touchscreen/rmi_function_11.c:98:
+          fn11DataBaseAddr + ((finger  * fn11DataRegBlockSize) + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1920: FILE: drivers/input/touchscreen/rmi_function_11.c:98:
+          fn11DataBaseAddr + ((finger  * fn11DataRegBlockSize) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1920: FILE: drivers/input/touchscreen/rmi_function_11.c:98:
+          fn11DataBaseAddr + ((finger  * fn11DataRegBlockSize) + $

CHECK:CAMELCASE: Avoid CamelCase: <fn11DataRegBlockSize>
#1920: FILE: drivers/input/touchscreen/rmi_function_11.c:98:
+          fn11DataBaseAddr + ((finger  * fn11DataRegBlockSize) + 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1922: FILE: drivers/input/touchscreen/rmi_function_11.c:99:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1922: FILE: drivers/input/touchscreen/rmi_function_11.c:99:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1923: FILE: drivers/input/touchscreen/rmi_function_11.c:100:
+      } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1924: FILE: drivers/input/touchscreen/rmi_function_11.c:101:
+        X = (data[0] & 0x1f) << 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1924: FILE: drivers/input/touchscreen/rmi_function_11.c:101:
+        X = (data[0] & 0x1f) << 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1925: FILE: drivers/input/touchscreen/rmi_function_11.c:102:
+        X |= data[2] & 0xf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1925: FILE: drivers/input/touchscreen/rmi_function_11.c:102:
+        X |= data[2] & 0xf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1926: FILE: drivers/input/touchscreen/rmi_function_11.c:103:
+        Y = (data[1] & 0x1f) << 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1926: FILE: drivers/input/touchscreen/rmi_function_11.c:103:
+        Y = (data[1] & 0x1f) << 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1927: FILE: drivers/input/touchscreen/rmi_function_11.c:104:
+        Y |= (data[2] >> 4) & 0xf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1927: FILE: drivers/input/touchscreen/rmi_function_11.c:104:
+        Y |= (data[2] >> 4) & 0xf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1928: FILE: drivers/input/touchscreen/rmi_function_11.c:105:
+        W = data[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1928: FILE: drivers/input/touchscreen/rmi_function_11.c:105:
+        W = data[3];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1930: FILE: drivers/input/touchscreen/rmi_function_11.c:107:
+        /* upper 4 bits of W are Wy, lower 4 of W are Wx */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1931: FILE: drivers/input/touchscreen/rmi_function_11.c:108:
+        int Wy = (W >> 4) & 0x0f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1931: FILE: drivers/input/touchscreen/rmi_function_11.c:108:
+        int Wy = (W >> 4) & 0x0f;$

CHECK:CAMELCASE: Avoid CamelCase: <Wy>
#1931: FILE: drivers/input/touchscreen/rmi_function_11.c:108:
+        int Wy = (W >> 4) & 0x0f;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1932: FILE: drivers/input/touchscreen/rmi_function_11.c:109:
+        int Wx = W & 0x0f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1932: FILE: drivers/input/touchscreen/rmi_function_11.c:109:
+        int Wx = W & 0x0f;$

CHECK:CAMELCASE: Avoid CamelCase: <Wx>
#1932: FILE: drivers/input/touchscreen/rmi_function_11.c:109:
+        int Wx = W & 0x0f;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1934: FILE: drivers/input/touchscreen/rmi_function_11.c:111:
+        Z = data[4];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1934: FILE: drivers/input/touchscreen/rmi_function_11.c:111:
+        Z = data[4];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1936: FILE: drivers/input/touchscreen/rmi_function_11.c:113:
+        /* if this is the first finger report normal ABS_X, ABS_Y, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1936: FILE: drivers/input/touchscreen/rmi_function_11.c:113:
+        /* if this is the first finger report normal ABS_X, ABS_Y, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1938: FILE: drivers/input/touchscreen/rmi_function_11.c:114:
+           Apps that support Multi-touch will ignore these events and $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1938: FILE: drivers/input/touchscreen/rmi_function_11.c:114:
+           Apps that support Multi-touch will ignore these events and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1938: FILE: drivers/input/touchscreen/rmi_function_11.c:114:
+        /* if this is the first finger report normal ABS_X, ABS_Y, 
+           Apps that support Multi-touch will ignore these events and 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1940: FILE: drivers/input/touchscreen/rmi_function_11.c:115:
+           Multi-touch will still function.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1941: FILE: drivers/input/touchscreen/rmi_function_11.c:116:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1942: FILE: drivers/input/touchscreen/rmi_function_11.c:117:
+        if (touch == 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1942: FILE: drivers/input/touchscreen/rmi_function_11.c:117:
+        if (touch == 1)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1942: FILE: drivers/input/touchscreen/rmi_function_11.c:117:
+        if (touch == 1)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1942: FILE: drivers/input/touchscreen/rmi_function_11.c:117:
+        if (touch == 1)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1943: FILE: drivers/input/touchscreen/rmi_function_11.c:118:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1943: FILE: drivers/input/touchscreen/rmi_function_11.c:118:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1944: FILE: drivers/input/touchscreen/rmi_function_11.c:119:
+          input_report_abs(input, ABS_X, X);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: drivers/input/touchscreen/rmi_function_11.c:119:
+          input_report_abs(input, ABS_X, X);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1945: FILE: drivers/input/touchscreen/rmi_function_11.c:120:
+          input_report_abs(input, ABS_Y, Y);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: drivers/input/touchscreen/rmi_function_11.c:120:
+          input_report_abs(input, ABS_Y, Y);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1946: FILE: drivers/input/touchscreen/rmi_function_11.c:121:
+          input_report_abs(input, ABS_PRESSURE, Z);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1946: FILE: drivers/input/touchscreen/rmi_function_11.c:121:
+          input_report_abs(input, ABS_PRESSURE, Z);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1947: FILE: drivers/input/touchscreen/rmi_function_11.c:122:
+          input_report_abs(input, ABS_TOOL_WIDTH, max(Wx, Wy));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1947: FILE: drivers/input/touchscreen/rmi_function_11.c:122:
+          input_report_abs(input, ABS_TOOL_WIDTH, max(Wx, Wy));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1948: FILE: drivers/input/touchscreen/rmi_function_11.c:123:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1948: FILE: drivers/input/touchscreen/rmi_function_11.c:123:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1950: FILE: drivers/input/touchscreen/rmi_function_11.c:125:
+        /* Report Multi-Touch events for each finger */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1951: FILE: drivers/input/touchscreen/rmi_function_11.c:126:
+        input_report_abs(input, ABS_MT_TOUCH_MAJOR, max(Wx, Wy)); /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1951: FILE: drivers/input/touchscreen/rmi_function_11.c:126:
+        input_report_abs(input, ABS_MT_TOUCH_MAJOR, max(Wx, Wy)); /* $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1951: FILE: drivers/input/touchscreen/rmi_function_11.c:126:
+        input_report_abs(input, ABS_MT_TOUCH_MAJOR, max(Wx, Wy)); /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1953: FILE: drivers/input/touchscreen/rmi_function_11.c:127:
+        input_report_abs(input, ABS_MT_TOUCH_MINOR, min(Wx, Wy)); /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1953: FILE: drivers/input/touchscreen/rmi_function_11.c:127:
+        input_report_abs(input, ABS_MT_TOUCH_MINOR, min(Wx, Wy)); /* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1953: FILE: drivers/input/touchscreen/rmi_function_11.c:127:
+        input_report_abs(input, ABS_MT_TOUCH_MAJOR, max(Wx, Wy)); /* 
+        input_report_abs(input, ABS_MT_TOUCH_MINOR, min(Wx, Wy)); /* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1955: FILE: drivers/input/touchscreen/rmi_function_11.c:128:
+        input_report_abs(input, ABS_MT_TOUCH_ORIENTATION, (Wx > Wy ? 1 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1955: FILE: drivers/input/touchscreen/rmi_function_11.c:128:
+        input_report_abs(input, ABS_MT_TOUCH_ORIENTATION, (Wx > Wy ? 1 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1955: FILE: drivers/input/touchscreen/rmi_function_11.c:128:
+        input_report_abs(input, ABS_MT_TOUCH_MINOR, min(Wx, Wy)); /* 
+        input_report_abs(input, ABS_MT_TOUCH_ORIENTATION, (Wx > Wy ? 1 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1957: FILE: drivers/input/touchscreen/rmi_function_11.c:129:
+        input_report_abs(input, ABS_MT_POSITION_X, X);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1958: FILE: drivers/input/touchscreen/rmi_function_11.c:130:
+        input_report_abs(input, ABS_MT_POSITION_Y, Y);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1959: FILE: drivers/input/touchscreen/rmi_function_11.c:131:
+        input_report_abs(input, ABS_MT_TRACKING_ID, finger+1); /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1959: FILE: drivers/input/touchscreen/rmi_function_11.c:131:
+        input_report_abs(input, ABS_MT_TRACKING_ID, finger+1); /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1961: FILE: drivers/input/touchscreen/rmi_function_11.c:132:
+        input_mt_sync(input); /* MT sync between fingers */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1961: FILE: drivers/input/touchscreen/rmi_function_11.c:132:
+        input_report_abs(input, ABS_MT_TRACKING_ID, finger+1); /* 
+        input_mt_sync(input); /* MT sync between fingers */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1962: FILE: drivers/input/touchscreen/rmi_function_11.c:133:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1963: FILE: drivers/input/touchscreen/rmi_function_11.c:134:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1964: FILE: drivers/input/touchscreen/rmi_function_11.c:135:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1966: FILE: drivers/input/touchscreen/rmi_function_11.c:137:
+  if (touch) /* touch will be non-zero if we had any reported events */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1966: FILE: drivers/input/touchscreen/rmi_function_11.c:137:
+  if (touch) /* touch will be non-zero if we had any reported events */
+    input_sync(input); /* sync after groups of events */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: drivers/input/touchscreen/rmi_function_11.c:138:
+    input_sync(input); /* sync after groups of events */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1970: FILE: drivers/input/touchscreen/rmi_function_11.c:141:
+  return touch;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1973: FILE: drivers/input/touchscreen/rmi_function_11.c:144:
+static void FN_11_config(struct rmi_application *app, struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1976: FILE: drivers/input/touchscreen/rmi_function_11.c:146:
+  /* For the data source - print info and do any source specific $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1978: FILE: drivers/input/touchscreen/rmi_function_11.c:147:
+  /* For the data source - print info and do any source specific 
+  unsigned char data[14];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1988: FILE: drivers/input/touchscreen/rmi_function_11.c:157:
+  if(rmi_read_multiple(app, rfi->funcDescriptor.queryBaseAddr, data, 9)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1988: FILE: drivers/input/touchscreen/rmi_function_11.c:157:
+  if(rmi_read_multiple(app, rfi->funcDescriptor.queryBaseAddr, data, 9)) {
+    printk(KERN_ERR "RMI4 function $11 config: Could not read function 

ERROR:SPACING: space required before the open parenthesis '('
#1988: FILE: drivers/input/touchscreen/rmi_function_11.c:157:
+  if(rmi_read_multiple(app, rfi->funcDescriptor.queryBaseAddr, data, 9)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1989: FILE: drivers/input/touchscreen/rmi_function_11.c:158:
+    printk(KERN_ERR "RMI4 function $11 config: Could not read function $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1989: FILE: drivers/input/touchscreen/rmi_function_11.c:158:
+    printk(KERN_ERR "RMI4 function $11 config: Could not read function $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1989: FILE: drivers/input/touchscreen/rmi_function_11.c:158:
+    printk(KERN_ERR "RMI4 function $11 config: Could not read function 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1991: FILE: drivers/input/touchscreen/rmi_function_11.c:159:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1992: FILE: drivers/input/touchscreen/rmi_function_11.c:160:
+  } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1993: FILE: drivers/input/touchscreen/rmi_function_11.c:161:
+    printk(KERN_INFO "  Number of Fingers:   %d\n", data[1] & 7);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1993: FILE: drivers/input/touchscreen/rmi_function_11.c:161:
+    printk(KERN_INFO "  Number of Fingers:   %d\n", data[1] & 7);
                                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1993: FILE: drivers/input/touchscreen/rmi_function_11.c:161:
+    printk(KERN_INFO "  Number of Fingers:   %d\n", data[1] & 7);
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Number>
#1993: FILE: drivers/input/touchscreen/rmi_function_11.c:161:
+    printk(KERN_INFO "  Number of Fingers:   %d\n", data[1] & 7);

CHECK:CAMELCASE: Avoid CamelCase: <Fingers>
#1993: FILE: drivers/input/touchscreen/rmi_function_11.c:161:
+    printk(KERN_INFO "  Number of Fingers:   %d\n", data[1] & 7);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1994: FILE: drivers/input/touchscreen/rmi_function_11.c:162:
+    printk(KERN_INFO "  Is Configurable:     %d\n", data[1] & (1 << 7) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1994: FILE: drivers/input/touchscreen/rmi_function_11.c:162:
+    printk(KERN_INFO "  Is Configurable:     %d\n", data[1] & (1 << 7) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1994: FILE: drivers/input/touchscreen/rmi_function_11.c:162:
+    printk(KERN_INFO "  Is Configurable:     %d\n", data[1] & (1 << 7) 
                                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1994: FILE: drivers/input/touchscreen/rmi_function_11.c:162:
+    printk(KERN_INFO "  Is Configurable:     %d\n", data[1] & (1 << 7) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Is>
#1994: FILE: drivers/input/touchscreen/rmi_function_11.c:162:
+    printk(KERN_INFO "  Is Configurable:     %d\n", data[1] & (1 << 7) 

CHECK:CAMELCASE: Avoid CamelCase: <Configurable>
#1994: FILE: drivers/input/touchscreen/rmi_function_11.c:162:
+    printk(KERN_INFO "  Is Configurable:     %d\n", data[1] & (1 << 7) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1996: FILE: drivers/input/touchscreen/rmi_function_11.c:163:
+    printk(KERN_INFO "  Has Gestures:        %d\n", data[1] & (1 << 5) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1996: FILE: drivers/input/touchscreen/rmi_function_11.c:163:
+    printk(KERN_INFO "  Has Gestures:        %d\n", data[1] & (1 << 5) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1996: FILE: drivers/input/touchscreen/rmi_function_11.c:163:
+    printk(KERN_INFO "  Has Gestures:        %d\n", data[1] & (1 << 5) 
                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1996: FILE: drivers/input/touchscreen/rmi_function_11.c:163:
+    printk(KERN_INFO "  Has Gestures:        %d\n", data[1] & (1 << 5) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Has>
#1996: FILE: drivers/input/touchscreen/rmi_function_11.c:163:
+    printk(KERN_INFO "  Has Gestures:        %d\n", data[1] & (1 << 5) 

CHECK:CAMELCASE: Avoid CamelCase: <Gestures>
#1996: FILE: drivers/input/touchscreen/rmi_function_11.c:163:
+    printk(KERN_INFO "  Has Gestures:        %d\n", data[1] & (1 << 5) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1998: FILE: drivers/input/touchscreen/rmi_function_11.c:164:
+    printk(KERN_INFO "  Has Absolute:        %d\n", data[1] & (1 << 4) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1998: FILE: drivers/input/touchscreen/rmi_function_11.c:164:
+    printk(KERN_INFO "  Has Absolute:        %d\n", data[1] & (1 << 4) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1998: FILE: drivers/input/touchscreen/rmi_function_11.c:164:
+    printk(KERN_INFO "  Has Absolute:        %d\n", data[1] & (1 << 4) 
                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1998: FILE: drivers/input/touchscreen/rmi_function_11.c:164:
+    printk(KERN_INFO "  Has Absolute:        %d\n", data[1] & (1 << 4) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Absolute>
#1998: FILE: drivers/input/touchscreen/rmi_function_11.c:164:
+    printk(KERN_INFO "  Has Absolute:        %d\n", data[1] & (1 << 4) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2000: FILE: drivers/input/touchscreen/rmi_function_11.c:165:
+    printk(KERN_INFO "  Has Relative:        %d\n", data[1] & (1 << 3) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2000: FILE: drivers/input/touchscreen/rmi_function_11.c:165:
+    printk(KERN_INFO "  Has Relative:        %d\n", data[1] & (1 << 3) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2000: FILE: drivers/input/touchscreen/rmi_function_11.c:165:
+    printk(KERN_INFO "  Has Relative:        %d\n", data[1] & (1 << 3) 
                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2000: FILE: drivers/input/touchscreen/rmi_function_11.c:165:
+    printk(KERN_INFO "  Has Relative:        %d\n", data[1] & (1 << 3) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Relative>
#2000: FILE: drivers/input/touchscreen/rmi_function_11.c:165:
+    printk(KERN_INFO "  Has Relative:        %d\n", data[1] & (1 << 3) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2003: FILE: drivers/input/touchscreen/rmi_function_11.c:167:
+    printk(KERN_INFO "  Number X Electrodes: %d\n", data[2] & 0x1f);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2003: FILE: drivers/input/touchscreen/rmi_function_11.c:167:
+    printk(KERN_INFO "  Number X Electrodes: %d\n", data[2] & 0x1f);
                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2003: FILE: drivers/input/touchscreen/rmi_function_11.c:167:
+    printk(KERN_INFO "  Number X Electrodes: %d\n", data[2] & 0x1f);
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Electrodes>
#2003: FILE: drivers/input/touchscreen/rmi_function_11.c:167:
+    printk(KERN_INFO "  Number X Electrodes: %d\n", data[2] & 0x1f);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2004: FILE: drivers/input/touchscreen/rmi_function_11.c:168:
+    printk(KERN_INFO "  Number Y Electrodes: %d\n", data[3] & 0x1f);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2004: FILE: drivers/input/touchscreen/rmi_function_11.c:168:
+    printk(KERN_INFO "  Number Y Electrodes: %d\n", data[3] & 0x1f);
                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2004: FILE: drivers/input/touchscreen/rmi_function_11.c:168:
+    printk(KERN_INFO "  Number Y Electrodes: %d\n", data[3] & 0x1f);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2005: FILE: drivers/input/touchscreen/rmi_function_11.c:169:
+    printk(KERN_INFO "  Maximum Electrodes:  %d\n", data[4] & 0x1f);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2005: FILE: drivers/input/touchscreen/rmi_function_11.c:169:
+    printk(KERN_INFO "  Maximum Electrodes:  %d\n", data[4] & 0x1f);
                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2005: FILE: drivers/input/touchscreen/rmi_function_11.c:169:
+    printk(KERN_INFO "  Maximum Electrodes:  %d\n", data[4] & 0x1f);
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Maximum>
#2005: FILE: drivers/input/touchscreen/rmi_function_11.c:169:
+    printk(KERN_INFO "  Maximum Electrodes:  %d\n", data[4] & 0x1f);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2007: FILE: drivers/input/touchscreen/rmi_function_11.c:171:
+    printk(KERN_INFO "  Absolute Data Size:  %d\n", data[5] & 3);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2007: FILE: drivers/input/touchscreen/rmi_function_11.c:171:
+    printk(KERN_INFO "  Absolute Data Size:  %d\n", data[5] & 3);
                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2007: FILE: drivers/input/touchscreen/rmi_function_11.c:171:
+    printk(KERN_INFO "  Absolute Data Size:  %d\n", data[5] & 3);
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#2007: FILE: drivers/input/touchscreen/rmi_function_11.c:171:
+    printk(KERN_INFO "  Absolute Data Size:  %d\n", data[5] & 3);

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#2007: FILE: drivers/input/touchscreen/rmi_function_11.c:171:
+    printk(KERN_INFO "  Absolute Data Size:  %d\n", data[5] & 3);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2009: FILE: drivers/input/touchscreen/rmi_function_11.c:173:
+    printk(KERN_INFO "  Has XY Dist:         %d\n", data[7] & (1 << 7) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2009: FILE: drivers/input/touchscreen/rmi_function_11.c:173:
+    printk(KERN_INFO "  Has XY Dist:         %d\n", data[7] & (1 << 7) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2009: FILE: drivers/input/touchscreen/rmi_function_11.c:173:
+    printk(KERN_INFO "  Has XY Dist:         %d\n", data[7] & (1 << 7) 
                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2009: FILE: drivers/input/touchscreen/rmi_function_11.c:173:
+    printk(KERN_INFO "  Has XY Dist:         %d\n", data[7] & (1 << 7) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Dist>
#2009: FILE: drivers/input/touchscreen/rmi_function_11.c:173:
+    printk(KERN_INFO "  Has XY Dist:         %d\n", data[7] & (1 << 7) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2011: FILE: drivers/input/touchscreen/rmi_function_11.c:174:
+    printk(KERN_INFO "  Has Pinch:           %d\n", data[7] & (1 << 6) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2011: FILE: drivers/input/touchscreen/rmi_function_11.c:174:
+    printk(KERN_INFO "  Has Pinch:           %d\n", data[7] & (1 << 6) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2011: FILE: drivers/input/touchscreen/rmi_function_11.c:174:
+    printk(KERN_INFO "  Has Pinch:           %d\n", data[7] & (1 << 6) 
                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2011: FILE: drivers/input/touchscreen/rmi_function_11.c:174:
+    printk(KERN_INFO "  Has Pinch:           %d\n", data[7] & (1 << 6) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Pinch>
#2011: FILE: drivers/input/touchscreen/rmi_function_11.c:174:
+    printk(KERN_INFO "  Has Pinch:           %d\n", data[7] & (1 << 6) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2013: FILE: drivers/input/touchscreen/rmi_function_11.c:175:
+    printk(KERN_INFO "  Has Press:           %d\n", data[7] & (1 << 5) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2013: FILE: drivers/input/touchscreen/rmi_function_11.c:175:
+    printk(KERN_INFO "  Has Press:           %d\n", data[7] & (1 << 5) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2013: FILE: drivers/input/touchscreen/rmi_function_11.c:175:
+    printk(KERN_INFO "  Has Press:           %d\n", data[7] & (1 << 5) 
                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2013: FILE: drivers/input/touchscreen/rmi_function_11.c:175:
+    printk(KERN_INFO "  Has Press:           %d\n", data[7] & (1 << 5) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Press>
#2013: FILE: drivers/input/touchscreen/rmi_function_11.c:175:
+    printk(KERN_INFO "  Has Press:           %d\n", data[7] & (1 << 5) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2015: FILE: drivers/input/touchscreen/rmi_function_11.c:176:
+    printk(KERN_INFO "  Has Flick:           %d\n", data[7] & (1 << 4) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2015: FILE: drivers/input/touchscreen/rmi_function_11.c:176:
+    printk(KERN_INFO "  Has Flick:           %d\n", data[7] & (1 << 4) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2015: FILE: drivers/input/touchscreen/rmi_function_11.c:176:
+    printk(KERN_INFO "  Has Flick:           %d\n", data[7] & (1 << 4) 
                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2015: FILE: drivers/input/touchscreen/rmi_function_11.c:176:
+    printk(KERN_INFO "  Has Flick:           %d\n", data[7] & (1 << 4) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Flick>
#2015: FILE: drivers/input/touchscreen/rmi_function_11.c:176:
+    printk(KERN_INFO "  Has Flick:           %d\n", data[7] & (1 << 4) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2017: FILE: drivers/input/touchscreen/rmi_function_11.c:177:
+    printk(KERN_INFO "  Has Early Tap:       %d\n", data[7] & (1 << 3) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2017: FILE: drivers/input/touchscreen/rmi_function_11.c:177:
+    printk(KERN_INFO "  Has Early Tap:       %d\n", data[7] & (1 << 3) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2017: FILE: drivers/input/touchscreen/rmi_function_11.c:177:
+    printk(KERN_INFO "  Has Early Tap:       %d\n", data[7] & (1 << 3) 
                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2017: FILE: drivers/input/touchscreen/rmi_function_11.c:177:
+    printk(KERN_INFO "  Has Early Tap:       %d\n", data[7] & (1 << 3) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Early>
#2017: FILE: drivers/input/touchscreen/rmi_function_11.c:177:
+    printk(KERN_INFO "  Has Early Tap:       %d\n", data[7] & (1 << 3) 

CHECK:CAMELCASE: Avoid CamelCase: <Tap>
#2017: FILE: drivers/input/touchscreen/rmi_function_11.c:177:
+    printk(KERN_INFO "  Has Early Tap:       %d\n", data[7] & (1 << 3) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2019: FILE: drivers/input/touchscreen/rmi_function_11.c:178:
+    printk(KERN_INFO "  Has Double Tap:      %d\n", data[7] & (1 << 2) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2019: FILE: drivers/input/touchscreen/rmi_function_11.c:178:
+    printk(KERN_INFO "  Has Double Tap:      %d\n", data[7] & (1 << 2) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2019: FILE: drivers/input/touchscreen/rmi_function_11.c:178:
+    printk(KERN_INFO "  Has Double Tap:      %d\n", data[7] & (1 << 2) 
                                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2019: FILE: drivers/input/touchscreen/rmi_function_11.c:178:
+    printk(KERN_INFO "  Has Double Tap:      %d\n", data[7] & (1 << 2) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Double>
#2019: FILE: drivers/input/touchscreen/rmi_function_11.c:178:
+    printk(KERN_INFO "  Has Double Tap:      %d\n", data[7] & (1 << 2) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: drivers/input/touchscreen/rmi_function_11.c:179:
+    printk(KERN_INFO "  Has Tap and Hold:    %d\n", data[7] & (1 << 1) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2021: FILE: drivers/input/touchscreen/rmi_function_11.c:179:
+    printk(KERN_INFO "  Has Tap and Hold:    %d\n", data[7] & (1 << 1) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2021: FILE: drivers/input/touchscreen/rmi_function_11.c:179:
+    printk(KERN_INFO "  Has Tap and Hold:    %d\n", data[7] & (1 << 1) 
                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2021: FILE: drivers/input/touchscreen/rmi_function_11.c:179:
+    printk(KERN_INFO "  Has Tap and Hold:    %d\n", data[7] & (1 << 1) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Hold>
#2021: FILE: drivers/input/touchscreen/rmi_function_11.c:179:
+    printk(KERN_INFO "  Has Tap and Hold:    %d\n", data[7] & (1 << 1) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2023: FILE: drivers/input/touchscreen/rmi_function_11.c:180:
+    printk(KERN_INFO "  Has Tap:             %d\n", data[7] & 1 ? 1 : 0);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2023: FILE: drivers/input/touchscreen/rmi_function_11.c:180:
+    printk(KERN_INFO "  Has Tap:             %d\n", data[7] & 1 ? 1 : 0);
                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2023: FILE: drivers/input/touchscreen/rmi_function_11.c:180:
+    printk(KERN_INFO "  Has Tap:             %d\n", data[7] & 1 ? 1 : 0);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2024: FILE: drivers/input/touchscreen/rmi_function_11.c:181:
+    printk(KERN_INFO "  Has Palm Detect:     %d\n", data[8] & 1 ? 1 : 0);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2024: FILE: drivers/input/touchscreen/rmi_function_11.c:181:
+    printk(KERN_INFO "  Has Palm Detect:     %d\n", data[8] & 1 ? 1 : 0);
                                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2024: FILE: drivers/input/touchscreen/rmi_function_11.c:181:
+    printk(KERN_INFO "  Has Palm Detect:     %d\n", data[8] & 1 ? 1 : 0);
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Palm>
#2024: FILE: drivers/input/touchscreen/rmi_function_11.c:181:
+    printk(KERN_INFO "  Has Palm Detect:     %d\n", data[8] & 1 ? 1 : 0);

CHECK:CAMELCASE: Avoid CamelCase: <Detect>
#2024: FILE: drivers/input/touchscreen/rmi_function_11.c:181:
+    printk(KERN_INFO "  Has Palm Detect:     %d\n", data[8] & 1 ? 1 : 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2025: FILE: drivers/input/touchscreen/rmi_function_11.c:182:
+    printk(KERN_INFO "  Has Rotate:          %d\n", data[8] & (1 << 1) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2025: FILE: drivers/input/touchscreen/rmi_function_11.c:182:
+    printk(KERN_INFO "  Has Rotate:          %d\n", data[8] & (1 << 1) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2025: FILE: drivers/input/touchscreen/rmi_function_11.c:182:
+    printk(KERN_INFO "  Has Rotate:          %d\n", data[8] & (1 << 1) 
                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2025: FILE: drivers/input/touchscreen/rmi_function_11.c:182:
+    printk(KERN_INFO "  Has Rotate:          %d\n", data[8] & (1 << 1) 
                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Rotate>
#2025: FILE: drivers/input/touchscreen/rmi_function_11.c:182:
+    printk(KERN_INFO "  Has Rotate:          %d\n", data[8] & (1 << 1) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2028: FILE: drivers/input/touchscreen/rmi_function_11.c:184:
+    if(rmi_read_multiple(app, rfi->funcDescriptor.controlBaseAddr, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2028: FILE: drivers/input/touchscreen/rmi_function_11.c:184:
+    if(rmi_read_multiple(app, rfi->funcDescriptor.controlBaseAddr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2030: FILE: drivers/input/touchscreen/rmi_function_11.c:185:
+      printk(KERN_ERR "RMI4 function $11 config: Could not read $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2030: FILE: drivers/input/touchscreen/rmi_function_11.c:185:
+      printk(KERN_ERR "RMI4 function $11 config: Could not read $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2030: FILE: drivers/input/touchscreen/rmi_function_11.c:185:
+      printk(KERN_ERR "RMI4 function $11 config: Could not read 
                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2032: FILE: drivers/input/touchscreen/rmi_function_11.c:186:
+      return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2033: FILE: drivers/input/touchscreen/rmi_function_11.c:187:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2036: FILE: drivers/input/touchscreen/rmi_function_11.c:190:
+    sensorMaxX = ((data[6] & 0x1f) << 8) | ((data[7] & 0xff) << 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2037: FILE: drivers/input/touchscreen/rmi_function_11.c:191:
+    sensorMaxY = ((data[8] & 0x1f) << 8) | ((data[9] & 0xff) << 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2039: FILE: drivers/input/touchscreen/rmi_function_11.c:193:
+    printk(KERN_INFO "  Sensor Max X:  %d\n", sensorMaxX);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2039: FILE: drivers/input/touchscreen/rmi_function_11.c:193:
+    printk(KERN_INFO "  Sensor Max X:  %d\n", sensorMaxX);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2040: FILE: drivers/input/touchscreen/rmi_function_11.c:194:
+    printk(KERN_INFO "  Sensor Max Y:  %d\n", sensorMaxY);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2040: FILE: drivers/input/touchscreen/rmi_function_11.c:194:
+    printk(KERN_INFO "  Sensor Max Y:  %d\n", sensorMaxY);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2041: FILE: drivers/input/touchscreen/rmi_function_11.c:195:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2045: FILE: drivers/input/touchscreen/rmi_function_11.c:199:
+ * Initialize any function $11 specific params and settings - input $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2050: FILE: drivers/input/touchscreen/rmi_function_11.c:203:
+  printk(KERN_INFO "RMI4 function $11 init\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2050: FILE: drivers/input/touchscreen/rmi_function_11.c:203:
+  printk(KERN_INFO "RMI4 function $11 init\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2053: FILE: drivers/input/touchscreen/rmi_function_11.c:206:
+  input->evbit[0] = BIT(EV_ABS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2056: FILE: drivers/input/touchscreen/rmi_function_11.c:209:
+  input_set_abs_params(input, ABS_X, 0, sensorMaxX, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2057: FILE: drivers/input/touchscreen/rmi_function_11.c:210:
+  input_set_abs_params(input, ABS_Y, 0, sensorMaxY, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2058: FILE: drivers/input/touchscreen/rmi_function_11.c:211:
+  input_set_abs_params(input, ABS_MT_POSITION_X, 0, sensorMaxX, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2059: FILE: drivers/input/touchscreen/rmi_function_11.c:212:
+  input_set_abs_params(input, ABS_MT_POSITION_Y, 0, sensorMaxY, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2061: FILE: drivers/input/touchscreen/rmi_function_11.c:214:
+  input_set_abs_params(input, ABS_PRESSURE, 0, 255, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2062: FILE: drivers/input/touchscreen/rmi_function_11.c:215:
+  input_set_abs_params(input, ABS_TOOL_WIDTH, 0, 15, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2064: FILE: drivers/input/touchscreen/rmi_function_11.c:217:
+  input_set_abs_params(input, ABS_MT_TOUCH_MAJOR, 0, 15, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2065: FILE: drivers/input/touchscreen/rmi_function_11.c:218:
+  input_set_abs_params(input, ABS_MT_TOUCH_MINOR, 0, 15, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2066: FILE: drivers/input/touchscreen/rmi_function_11.c:219:
+  input_set_abs_params(input, ABS_MT_ORIENTATION, 0, 1, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2067: FILE: drivers/input/touchscreen/rmi_function_11.c:220:
+  input_set_abs_params(input, ABS_MT_TRACKING_ID, 1, 10, 0, 0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2070: FILE: drivers/input/touchscreen/rmi_function_11.c:223:
+static void FN_11_detect(struct rmi_application *app, struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2072: FILE: drivers/input/touchscreen/rmi_function_11.c:224:
+  struct rmi_function_descriptor *fd, unsigned int interruptCount)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2074: FILE: drivers/input/touchscreen/rmi_function_11.c:226:
+  unsigned char fn11Queries[9];$

CHECK:CAMELCASE: Avoid CamelCase: <fn11Queries>
#2074: FILE: drivers/input/touchscreen/rmi_function_11.c:226:
+  unsigned char fn11Queries[9];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2076: FILE: drivers/input/touchscreen/rmi_function_11.c:228:
+  printk(KERN_INFO "RMI4 function $11 detect\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2076: FILE: drivers/input/touchscreen/rmi_function_11.c:228:
+  printk(KERN_INFO "RMI4 function $11 detect\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2078: FILE: drivers/input/touchscreen/rmi_function_11.c:230:
+  /* Store addresses - used elsewhere to read data, control, query, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2080: FILE: drivers/input/touchscreen/rmi_function_11.c:231:
+  /* Store addresses - used elsewhere to read data, control, query, 
+  rfi->funcDescriptor.queryBaseAddr = fd->queryBaseAddr;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2090: FILE: drivers/input/touchscreen/rmi_function_11.c:241:
+  /* need to get number of fingers supported, data size, etc. -
+     to be used when getting data since the number of registers to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2091: FILE: drivers/input/touchscreen/rmi_function_11.c:242:
+     read depends on the number of fingers supported and data size. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2092: FILE: drivers/input/touchscreen/rmi_function_11.c:243:
+  if (rpd->read_multiple(app, fd->queryBaseAddr, &fn11Queries, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2092: FILE: drivers/input/touchscreen/rmi_function_11.c:243:
+  if (rpd->read_multiple(app, fd->queryBaseAddr, &fn11Queries, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2092: FILE: drivers/input/touchscreen/rmi_function_11.c:243:
+  if (rpd->read_multiple(app, fd->queryBaseAddr, &fn11Queries, 
[...]
+    printk(KERN_ERR "RMI4 function $11 detect: Could not read function 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2094: FILE: drivers/input/touchscreen/rmi_function_11.c:244:
+    printk(KERN_ERR "RMI4 function $11 detect: Could not read function $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2094: FILE: drivers/input/touchscreen/rmi_function_11.c:244:
+  if (rpd->read_multiple(app, fd->queryBaseAddr, &fn11Queries, 
+    printk(KERN_ERR "RMI4 function $11 detect: Could not read function 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2094: FILE: drivers/input/touchscreen/rmi_function_11.c:244:
+    printk(KERN_ERR "RMI4 function $11 detect: Could not read function $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2094: FILE: drivers/input/touchscreen/rmi_function_11.c:244:
+    printk(KERN_ERR "RMI4 function $11 detect: Could not read function 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2095: FILE: drivers/input/touchscreen/rmi_function_11.c:244:
+  if (rpd->read_multiple(app, fd->queryBaseAddr, &fn11Queries, 
query registers 0x%x\n", rfi->funcDescriptor.queryBaseAddr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2096: FILE: drivers/input/touchscreen/rmi_function_11.c:245:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2097: FILE: drivers/input/touchscreen/rmi_function_11.c:246:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2099: FILE: drivers/input/touchscreen/rmi_function_11.c:248:
+  /* 2D data sources have only 3 bits for the number of fingers $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2099: FILE: drivers/input/touchscreen/rmi_function_11.c:248:
+  /* 2D data sources have only 3 bits for the number of fingers $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2101: FILE: drivers/input/touchscreen/rmi_function_11.c:249:
+  rfi->numDataPoints = 2; /* default number of fingers supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2102: FILE: drivers/input/touchscreen/rmi_function_11.c:250:
+  if ((fn11Queries[1] & 0x7) <= 4)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2103: FILE: drivers/input/touchscreen/rmi_function_11.c:251:
+   rfi->numDataPoints = (fn11Queries[1] & 0x7) + 1; /* add one since $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2103: FILE: drivers/input/touchscreen/rmi_function_11.c:251:
+   rfi->numDataPoints = (fn11Queries[1] & 0x7) + 1; /* add one since $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2105: FILE: drivers/input/touchscreen/rmi_function_11.c:252:
+  else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2106: FILE: drivers/input/touchscreen/rmi_function_11.c:253:
+    if ((fn11Queries[1] & 0x7) == 5) /* a value of 5 is up to 10 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2106: FILE: drivers/input/touchscreen/rmi_function_11.c:253:
+    if ((fn11Queries[1] & 0x7) == 5) /* a value of 5 is up to 10 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2109: FILE: drivers/input/touchscreen/rmi_function_11.c:254:
+      rfi->numDataPoints = 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2110: FILE: drivers/input/touchscreen/rmi_function_11.c:255:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2112: FILE: drivers/input/touchscreen/rmi_function_11.c:257:
+  /* Need to get interrupt info to be used later when handling $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2112: FILE: drivers/input/touchscreen/rmi_function_11.c:257:
+  /* Need to get interrupt info to be used later when handling $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2114: FILE: drivers/input/touchscreen/rmi_function_11.c:258:
+  rfi->interruptRegister = (interruptCount + 7)/8;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2116: FILE: drivers/input/touchscreen/rmi_function_11.c:260:
+  /* loop through interrupts for each source in fn $11 and or in a bit $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2116: FILE: drivers/input/touchscreen/rmi_function_11.c:260:
+  /* loop through interrupts for each source in fn $11 and or in a bit $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2118: FILE: drivers/input/touchscreen/rmi_function_11.c:261:
+  unsigned short fn11InterruptOffset = interruptCount % 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2119: FILE: drivers/input/touchscreen/rmi_function_11.c:262:
+  int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2120: FILE: drivers/input/touchscreen/rmi_function_11.c:263:
+  for (i = fn11InterruptOffset; i < ((fd->interruptSrcCnt & 0x7) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2120: FILE: drivers/input/touchscreen/rmi_function_11.c:263:
+  for (i = fn11InterruptOffset; i < ((fd->interruptSrcCnt & 0x7) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2122: FILE: drivers/input/touchscreen/rmi_function_11.c:264:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2123: FILE: drivers/input/touchscreen/rmi_function_11.c:265:
+    rfi->interruptMask |= 1 << i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2124: FILE: drivers/input/touchscreen/rmi_function_11.c:266:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2126: FILE: drivers/input/touchscreen/rmi_function_11.c:268:
+  /* Size of just the absolute data for one finger */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2127: FILE: drivers/input/touchscreen/rmi_function_11.c:269:
+  unsigned char fn11AbsDataSize = fn11Queries[5] & 0x03;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2128: FILE: drivers/input/touchscreen/rmi_function_11.c:270:
+  unsigned char fn11AbsDataBlockSize = 3 + (2 * (fn11AbsDataSize == 0 ? $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2128: FILE: drivers/input/touchscreen/rmi_function_11.c:270:
+  unsigned char fn11AbsDataBlockSize = 3 + (2 * (fn11AbsDataSize == 0 ? $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2131: FILE: drivers/input/touchscreen/rmi_function_11.c:271:
+  rfi->dataRegBlockSize = fn11AbsDataBlockSize;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2133: FILE: drivers/input/touchscreen/rmi_function_11.c:273:
+  /* need to determine the size of data to read - this depends on $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2133: FILE: drivers/input/touchscreen/rmi_function_11.c:273:
+  /* need to determine the size of data to read - this depends on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2135: FILE: drivers/input/touchscreen/rmi_function_11.c:274:
+     whether Relative data is reported and if Gesture data is reported. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2135: FILE: drivers/input/touchscreen/rmi_function_11.c:274:
+     whether Relative data is reported and if Gesture data is reported. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2137: FILE: drivers/input/touchscreen/rmi_function_11.c:275:
+  unsigned char f11_egr_0 = fn11Queries[7];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2138: FILE: drivers/input/touchscreen/rmi_function_11.c:276:
+  unsigned char f11_egr_1 = fn11Queries[8];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2139: FILE: drivers/input/touchscreen/rmi_function_11.c:277:
+  int fn11HasPinch = f11_egr_0 & 0x40;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2140: FILE: drivers/input/touchscreen/rmi_function_11.c:278:
+  int fn11HasFlick = f11_egr_0 & 0x10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2141: FILE: drivers/input/touchscreen/rmi_function_11.c:279:
+  int fn11HasTap = f11_egr_0 & 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2142: FILE: drivers/input/touchscreen/rmi_function_11.c:280:
+  int fn11HasTapAndHold = f11_egr_0 & 0x02;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2143: FILE: drivers/input/touchscreen/rmi_function_11.c:281:
+  int fn11HasDoubleTap = f11_egr_0 & 0x04;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2144: FILE: drivers/input/touchscreen/rmi_function_11.c:282:
+  int fn11HasEarlyTap = f11_egr_0 & 0x08;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2145: FILE: drivers/input/touchscreen/rmi_function_11.c:283:
+  int fn11HasPress = f11_egr_0 & 0x20;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2146: FILE: drivers/input/touchscreen/rmi_function_11.c:284:
+  int fn11HasPalmDetect = f11_egr_1 & 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2147: FILE: drivers/input/touchscreen/rmi_function_11.c:285:
+  int fn11HasRotate = f11_egr_1 & 0x02;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2148: FILE: drivers/input/touchscreen/rmi_function_11.c:286:
+  int fn11HasRel = fn11Queries[1] & 0x08;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2150: FILE: drivers/input/touchscreen/rmi_function_11.c:288:
+  /* Size of all data including finger status, absolute data for each $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2150: FILE: drivers/input/touchscreen/rmi_function_11.c:288:
+  /* Size of all data including finger status, absolute data for each $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2152: FILE: drivers/input/touchscreen/rmi_function_11.c:289:
+  unsigned int fn11AllDataBlockSize =^I^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2152: FILE: drivers/input/touchscreen/rmi_function_11.c:289:
+  unsigned int fn11AllDataBlockSize =^I^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2153: FILE: drivers/input/touchscreen/rmi_function_11.c:290:
+    /* finger status, four fingers per register */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2154: FILE: drivers/input/touchscreen/rmi_function_11.c:291:
+    ((fn11FingersSupported + 3) / 4) +$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2161: FILE: drivers/input/touchscreen/rmi_function_11.c:298:
+^I  /* F11_2D_Data9 is only present if either egr_0 or egr_1 registers $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2164: FILE: drivers/input/touchscreen/rmi_function_11.c:300:
+^I^I/* F11_2D_Data10 is only present if EGR_PINCH or EGR_FLICK of egr_0 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2167: FILE: drivers/input/touchscreen/rmi_function_11.c:302:
+^I^I/* F11_2D_Data11 and F11_2D_Data12 are only present if EGR_FLICK of $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2171: FILE: drivers/input/touchscreen/rmi_function_11.c:305:
+    /* Disable Interrupts. It is up to the Application Driver to$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2172: FILE: drivers/input/touchscreen/rmi_function_11.c:306:
+     * turn them on when it's ready for them. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2172: FILE: drivers/input/touchscreen/rmi_function_11.c:306:
+     * turn them on when it's ready for them. */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2173: FILE: drivers/input/touchscreen/rmi_function_11.c:307:
+    if(!(retval = rpd->write(rpd, fn01ControlBaseAddr + 1 + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2173: FILE: drivers/input/touchscreen/rmi_function_11.c:307:
+    if(!(retval = rpd->write(rpd, fn01ControlBaseAddr + 1 + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2175: FILE: drivers/input/touchscreen/rmi_function_11.c:308:
+      printk(KERN_ERR "Function $11 Interrupt Disable Fail: %d\n", retval);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2175: FILE: drivers/input/touchscreen/rmi_function_11.c:308:
+      printk(KERN_ERR "Function $11 Interrupt Disable Fail: %d\n", retval);
                                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2175: FILE: drivers/input/touchscreen/rmi_function_11.c:308:
+      printk(KERN_ERR "Function $11 Interrupt Disable Fail: %d\n", retval);
                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Function>
#2175: FILE: drivers/input/touchscreen/rmi_function_11.c:308:
+      printk(KERN_ERR "Function $11 Interrupt Disable Fail: %d\n", retval);

CHECK:CAMELCASE: Avoid CamelCase: <Disable>
#2175: FILE: drivers/input/touchscreen/rmi_function_11.c:308:
+      printk(KERN_ERR "Function $11 Interrupt Disable Fail: %d\n", retval);

CHECK:CAMELCASE: Avoid CamelCase: <Fail>
#2175: FILE: drivers/input/touchscreen/rmi_function_11.c:308:
+      printk(KERN_ERR "Function $11 Interrupt Disable Fail: %d\n", retval);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2176: FILE: drivers/input/touchscreen/rmi_function_11.c:309:
+    }$

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#2183: FILE: drivers/input/touchscreen/rmi_function_11.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2188: FILE: drivers/input/touchscreen/rmi_function_11.h:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2193: FILE: drivers/input/touchscreen/rmi_function_11.h:6:
+ * For every RMI4 function that has a data source - like 2D sensors, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2195: FILE: drivers/input/touchscreen/rmi_function_11.h:7:
+ * GPIOs, etc. - the user will create a new rmi_function_xx.c file and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2197: FILE: drivers/input/touchscreen/rmi_function_11.h:8:
+ * functions to perform the config(), init(), report() and detect() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2199: FILE: drivers/input/touchscreen/rmi_function_11.h:9:
+ * The function pointers are then stored under the RMI function info $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2201: FILE: drivers/input/touchscreen/rmi_function_11.h:10:
+ * functions will automatically be called by the global config(), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2203: FILE: drivers/input/touchscreen/rmi_function_11.h:11:
+ * and detect() functions that will loop through all data sources and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2205: FILE: drivers/input/touchscreen/rmi_function_11.h:12:
+ * data sources functions using these functions pointed to by the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2211: FILE: drivers/input/touchscreen/rmi_function_11.h:17:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2220: FILE: drivers/input/touchscreen/rmi_function_11.h:25:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2225: FILE: drivers/input/touchscreen/rmi_function_11.h:29:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2229: FILE: drivers/input/touchscreen/rmi_function_11.h:32:
+int  FN_11_report(struct rmi_application *app, struct rmi_function_info $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2231: FILE: drivers/input/touchscreen/rmi_function_11.h:33:
+void FN_11_config(struct rmi_application *app, struct rmi_function_info $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2234: FILE: drivers/input/touchscreen/rmi_function_11.h:35:
+void FN_11_detect(struct rmi_application *app, struct rmi_function_info $

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#2240: FILE: drivers/input/touchscreen/rmi_function_11.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2245: FILE: drivers/input/touchscreen/rmi_i2c.h:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2254: FILE: drivers/input/touchscreen/rmi_i2c.h:10:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2263: FILE: drivers/input/touchscreen/rmi_i2c.h:18:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2268: FILE: drivers/input/touchscreen/rmi_i2c.h:22:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2283: FILE: drivers/input/touchscreen/rmi_i2c.h:36:
+	 * irq != 0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2287: FILE: drivers/input/touchscreen/rmi_i2c.h:40:
+	 * line. */

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#2302: FILE: drivers/input/touchscreen/rmi_i2c.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2307: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2309: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:3:
+ * Synaptics RMI4 Support for I2C the OpenMoko phone (GTA01) hardware $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2313: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:6:
+ * To support a different device - for example if the GPIOs are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2315: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:7:
+ * different hardware is being used - make a copy of this file and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2317: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:8:
+ * name to reflect the new hardware platform then modify it to support $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2325: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:15:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2334: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:23:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2339: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:27:
+ $

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#2347: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:34:
+#include <asm/gpio.h>

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2363: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:50:
+	return gpio_get_value(S3C2410_GPF3)?0:1;
 	                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2363: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:50:
+	return gpio_get_value(S3C2410_GPF3)?0:1;
 	                                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2365: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:52:
+	return gpio_get_value(S3C2410_GPF3)?1:0;
 	                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2365: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:52:
+	return gpio_get_value(S3C2410_GPF3)?1:0;
 	                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2370: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:57:
+  [0] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2371: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:58:
+    .i2c_address   = 0x20,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2372: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:59:
+    .irq           = IRQ_EINT3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2373: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:60:
+    .irq_type      = IRQ_TRIGGER,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2374: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:61:
+    .get_attention = get_attention,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2375: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:62:
+  },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2379: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:66:
+  .num_clients = ARRAY_SIZE(rmi_test_clientdata),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2380: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:67:
+  .clientdata  = rmi_test_clientdata,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2386: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:73:
+  struct platform_device *pd = container_of(dev, struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2386: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:73:
+  struct platform_device *pd = container_of(dev, struct $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2401: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:87:
+	printk(KERN_INFO "GTA01 RMI4 Platform Driver Init.\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2403: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:89:
+	gta01_rmi_device = pd = kmalloc(sizeof(*pd), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#2404: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:90:
+	if(!pd) return -ENOMEM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2404: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:90:
+	if(!pd) return -ENOMEM;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2425: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c:111:
+MODULE_DESCRIPTION("GTA01 (OpenMoko Phone) RMI4 over I2C Device $

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#2435: FILE: drivers/input/touchscreen/rmi_i2c_gta01.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2440: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c:1:
+#include <linux/module.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".gnu.linkonce.this_module") over __attribute__((section(".gnu.linkonce.this_module")))
#2447: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c:8:
+__attribute__((section(".gnu.linkonce.this_module"))) = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2448: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c:9:
+ .name = KBUILD_MODNAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2449: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c:10:
+ .init = init_module,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2451: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c:12:
+ .exit = cleanup_module,$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".modinfo") over __attribute__((section(".modinfo")))
#2457: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c:18:
+__attribute__((section(".modinfo"))) =

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#2462: FILE: drivers/input/touchscreen/rmi_i2c_gta01.mod.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2467: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2476: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:10:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2485: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:18:
+ * WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2490: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:22:
+ $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2509: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:40:
+static int num_clients = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#2510: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:41:
+static struct rmi_i2c_clientdata *clientdata = NULL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2519: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:50:
+};
+/** This list is used in definition of the I2C bus scanning parameters.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2536: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:67:
+ * always accessible by using the container_of() macro of the various $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2551: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:81:
+ * implementations (like SMBus) only have 8-bit addressing.  So RMI $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2565: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:94:
+	int retval;
+	txbuf[0] = 0xff;

ERROR:SPACING: space required before the open parenthesis '('
#2568: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:97:
+	if(retval != 2) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2569: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:98:
+		printk(KERN_ERR "rmi_i2c: Set page fail: %d\n", retval);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2582: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:111:
+ * \return xero upon success (with the byte read in valp), non-zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2586: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:114:
+rmi_i2c_read(struct rmi_phys_driver *pd, unsigned short address, char $

ERROR:SPACING: space required before the open parenthesis '('
#2597: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:124:
+	if(((address >> 8) & 0xff) != id->page) {

ERROR:SPACING: space required before the open parenthesis '('
#2600: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:127:
+		if(retval) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2600: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:127:
+		if(retval) {
+			goto exit;
+		}

ERROR:SPACING: space required before the open parenthesis '('
#2609: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:136:
+	if(retval != 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2610: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:137:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_read: Write fail: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rmi_i2c_read', this function's name, in a string
#2610: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:137:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_read: Write fail: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2611: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:138:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_read: Write fail: %d\n",
+			retval);

ERROR:SPACING: space required before the open parenthesis '('
#2616: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:143:
+	if(retval != 1) {

ERROR:SPACING: space required before the open parenthesis '('
#2617: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:144:
+		if(++retry_count == 5) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2618: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:145:
+			printk(KERN_ERR "rmi_i2c.rmi_i2c_read: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rmi_i2c_read', this function's name, in a string
#2618: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:145:
+			printk(KERN_ERR "rmi_i2c.rmi_i2c_read: "

WARNING:SPLIT_STRING: quoted string split across lines
#2619: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:146:
+			printk(KERN_ERR "rmi_i2c.rmi_i2c_read: "
+				"Read of 0x%04x fail: %d\n", address, retval);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2638: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:165:
+ * \param[out] valp Pointer to the buffer where the data will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2642: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:168:
+ * \return zero upon success (with the byte read in valp), non-zero $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2648: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:173:
+rmi_i2c_read_multiple(struct rmi_phys_driver *pd, unsigned short address,
+	char *valp, int size)

ERROR:SPACING: space required before the open parenthesis '('
#2658: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:183:
+	if(((address >> 8) & 0xff) != id->page) {

ERROR:SPACING: space required before the open parenthesis '('
#2661: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:186:
+		if(retval) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2661: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:186:
+		if(retval) {
+			goto exit;
+		}

ERROR:SPACING: space required before the open parenthesis '('
#2670: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:195:
+	if(retval != 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2671: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:196:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_read: Write fail: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2672: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:197:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_read: Write fail: %d\n",
+			retval);

ERROR:SPACING: space required before the open parenthesis '('
#2677: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:202:
+	if(retval != size) {

ERROR:SPACING: space required before the open parenthesis '('
#2678: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:203:
+		if(++retry_count == 5) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2679: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:204:
+			printk(KERN_ERR "rmi_2ic.rmi_i2c_read_multiple: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rmi_i2c_read_multiple', this function's name, in a string
#2679: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:204:
+			printk(KERN_ERR "rmi_2ic.rmi_i2c_read_multiple: "

WARNING:SPLIT_STRING: quoted string split across lines
#2680: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:205:
+			printk(KERN_ERR "rmi_2ic.rmi_i2c_read_multiple: "
+				"Read of 0x%04x size %d fail: %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2695: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:220:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2698: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:223:
+ * You can write multiple registers at once, but I made the functions $

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#2700: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:224:
+ * seperate for performance reasons.  Writing multiple requires 
    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2700: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:224:
+ * seperate for performance reasons.  Writing multiple requires $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2709: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:232:
+rmi_i2c_write(struct rmi_phys_driver *pd, unsigned short address, char $

ERROR:SPACING: space required before the open parenthesis '('
#2719: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:241:
+	if(((address >> 8) & 0xff) != id->page) {

ERROR:SPACING: space required before the open parenthesis '('
#2722: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:244:
+		if(retval) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2722: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:244:
+		if(retval) {
+			goto exit;
+		}

ERROR:SPACING: space required before the open parenthesis '('
#2731: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:253:
+	if(retval != 2) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2732: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:254:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_write: Write fail: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rmi_i2c_write', this function's name, in a string
#2732: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:254:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_write: Write fail: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2733: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:255:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_write: Write fail: %d\n",
+			retval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2751: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:273:
+rmi_i2c_write_multiple(struct rmi_phys_driver *pd, unsigned short address,
+	char *valp, int size)

ERROR:SPACING: space required before the open parenthesis '('
#2758: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:280:
+	if(size < 15) {

ERROR:SPACING: space required before the open parenthesis '('
#2763: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:285:
+		if(!txbuf) return -ENOMEM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2763: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:285:
+		if(!txbuf) return -ENOMEM;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2769: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:291:
+		int i;
+		for(i = 0; i < size; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#2769: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:291:
+		for(i = 0; i < size; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2769: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:291:
+		for(i = 0; i < size; i++) {
+			txbuf[i + 1] = valp[i];
+		}

ERROR:SPACING: space required before the open parenthesis '('
#2777: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:299:
+	if(((address >> 8) & 0xff) != id->page) {

ERROR:SPACING: space required before the open parenthesis '('
#2780: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:302:
+		if(retval) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2780: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:302:
+		if(retval) {
+			goto exit;
+		}

ERROR:SPACING: space required before the open parenthesis '('
#2788: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:310:
+	if(retval != 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2789: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:311:
+		printk(KERN_ERR "rmi_i2c.rmi_i2c_read: Write fail: %d\n", retval);

ERROR:SPACING: space required before the open parenthesis '('
#2794: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:316:
+	if(txbuf != txbuf_most) kfree(txbuf);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2794: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:316:
+	if(txbuf != txbuf_most) kfree(txbuf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2800: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:322:
+ * polarity of the ATTN signal.  If the get_attention function of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2802: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:323:
+ * is not available (probably because ATTN is not implemented), then it $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2810: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:330:
+	struct instance_data *id = container_of(rpd, struct instance_data, rpd);
+	if(id->get_attention) {

ERROR:SPACING: space required before the open parenthesis '('
#2810: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:330:
+	if(id->get_attention) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2810: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:330:
+	if(id->get_attention) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2821: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:341:
+ * This is a work in progress.  It has yet to be figured out how the $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2829: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:348:
+	struct instance_data *id = info;
+	if(id->rpd.attention) {

ERROR:SPACING: space required before the open parenthesis '('
#2829: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:348:
+	if(id->rpd.attention) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2829: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:348:
+	if(id->rpd.attention) {
+		id->rpd.attention(&id->rpd, id->instance_no);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2835: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:354:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2837: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:356:
+ * This function detects each device on the i2c bus and sets up the $

ERROR:SPACING: space required before the open parenthesis '('
#2851: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:369:
+	if(!id) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2852: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:370:
+		printk(KERN_ERR "rmi_i2c: Out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2852: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:370:
+	if(!id) {
+		printk(KERN_ERR "rmi_i2c: Out of memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2865: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:383:
+^Iid->page               = 0xffff;    /* So we set the page correctly $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2867: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:384:
+	id->page               = 0xffff;    /* So we set the page correctly 
+

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2872: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:389:
+	strlcpy(id->i2cclient.name, "rmi_i2c", I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2874: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:391:
+	if ((retval = i2c_attach_client(&id->i2cclient))) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'detect', this function's name, in a string
#2875: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:392:
+		pr_debug("rmi_i2c: detect: Failed to attach client\n");

ERROR:SPACING: space required before the open parenthesis '('
#2881: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:398:
+	for(i = 0; i < num_clients; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#2882: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:399:
+		if(address == clientdata[i].i2c_address) {

ERROR:SPACING: space required before the open parenthesis '('
#2889: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:406:
+			if(clientdata[i].irq) {

ERROR:SPACING: space required before the open parenthesis '('
#2893: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:410:
+				switch(clientdata[i].irq_type) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2907: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:424:
+					printk(KERN_WARNING "rmi_i2c: Invalid IRQ flags in "

WARNING:SPLIT_STRING: quoted string split across lines
#2908: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:425:
+					printk(KERN_WARNING "rmi_i2c: Invalid IRQ flags in "
+						"platform data\n");

ERROR:SPACING: space required before the open parenthesis '('
#2914: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:431:
+				if((retval = request_irq(id->irq, i2c_attn_isr,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2914: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:431:
+				if((retval = request_irq(id->irq, i2c_attn_isr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2915: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:432:
+				if((retval = request_irq(id->irq, i2c_attn_isr,
+				    IRQF_DISABLED | irqtype, "rmi_i2c", id))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2916: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:433:
+					printk(KERN_WARNING "rmi_i2c: Unable to get attn "

WARNING:SPLIT_STRING: quoted string split across lines
#2917: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:434:
+					printk(KERN_WARNING "rmi_i2c: Unable to get attn "
+					  "irq %d.  Reverting to polling.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2926: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:443:
+				printk(KERN_INFO "rmi_i2c: No IRQ info given. "

WARNING:SPLIT_STRING: quoted string split across lines
#2927: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:444:
+				printk(KERN_INFO "rmi_i2c: No IRQ info given. "
+					"Polling required.\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 4)
#2935: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:452:
+	if((retval = rmi_register_phys_driver(&id->rpd))) {
+    printk(KERN_ERR "rmi_i2c : Failed to Register %s phys driver\n", 

ERROR:SPACING: space required before the open parenthesis '('
#2935: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:452:
+	if((retval = rmi_register_phys_driver(&id->rpd))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2935: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:452:
+	if((retval = rmi_register_phys_driver(&id->rpd))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2936: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:453:
+    printk(KERN_ERR "rmi_i2c : Failed to Register %s phys driver\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2936: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:453:
+    printk(KERN_ERR "rmi_i2c : Failed to Register %s phys driver\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2936: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:453:
+    printk(KERN_ERR "rmi_i2c : Failed to Register %s phys driver\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2938: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:454:
+    printk(KERN_ERR "rmi_i2c : Failed to Register %s phys driver\n", 
+

ERROR:SPACING: space required before the open parenthesis '('
#2939: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:455:
+		if(id->irq) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2939: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:455:
+		if(id->irq) {
+			free_irq(id->irq, id);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2947: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:463:
+  printk(KERN_INFO "rmi_i2c : Successfully Registered %s phys $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2947: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:463:
+  printk(KERN_INFO "rmi_i2c : Successfully Registered %s phys $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2947: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:463:
+  printk(KERN_INFO "rmi_i2c : Successfully Registered %s phys 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2956: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:471:
+ * This function tears down the structures for each instance.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2957: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:472:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2967: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:482:
+	pr_debug("Unregistering phys driver %s\n", id->rpd.name);
 	                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2971: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:486:
+	pr_debug("Unregistered phys driver %s\n", id->rpd.name);
 	                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Unregistered>
#2971: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:486:
+	pr_debug("Unregistered phys driver %s\n", id->rpd.name);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2974: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:489:
+		pr_debug("i2c_detach_client failed: %d\n", err);
 		                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2974: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:489:
+		pr_debug("i2c_detach_client failed: %d\n", err);
 		                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2988: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:503:
+ * This is a i2c service function which is used to detect i2c devices $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2988: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:503:
+ * This is a i2c service function which is used to detect i2c devices $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2990: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:504:
+ * bus.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2991: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:505:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Attaching>
#2997: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:511:
+	pr_debug("i2c_rmi: Attaching Adapter\n");

CHECK:CAMELCASE: Avoid CamelCase: <Adapter>
#2997: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:511:
+	pr_debug("i2c_rmi: Attaching Adapter\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3003: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:517:
+ * This structure tells the i2c subsystem about us.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3004: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:518:
+ */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3009: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:523:
+^I.id ^I^I= 0xfefe,^I/* This ID is apparently unused. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3011: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:525:
+^I.detach_client ^I= detach_client,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3015: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:529:
+ * The Platform Driver probe function.  We just tell the i2c subsystem $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3015: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:529:
+ * The Platform Driver probe function.  We just tell the i2c subsystem $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3017: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:530:
+ * ourselves in this call.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3018: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:531:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Probing>
#3025: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:538:
+	pr_debug("Probing i2c RMI device\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3029: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:542:
+		printk(KERN_WARNING "A platform_device for \"rmi_i2c\" must contain "
+			"rmi_i2c_data\n");

ERROR:SPACING: space required before the open parenthesis '('
#3034: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:547:
+	if(num_clients > ARRAY_SIZE(normal_i2c) - 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3036: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:549:
+		printk(KERN_WARNING "Too many clients defined for %s. "

WARNING:SPLIT_STRING: quoted string split across lines
#3037: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:550:
+		printk(KERN_WARNING "Too many clients defined for %s. "
+			"Limiting to %d\n", dev->name, num_clients);

ERROR:SPACING: space required before the open parenthesis '('
#3041: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:554:
+	for(i = 0; i < ARRAY_SIZE(normal_i2c); i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3041: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:554:
+	for(i = 0; i < ARRAY_SIZE(normal_i2c); i++) {
+		normal_i2c[i] = I2C_CLIENT_END;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#3044: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:557:
+	for(i = 0; i < num_clients; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3044: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:557:
+	for(i = 0; i < num_clients; i++) {
+		normal_i2c[i] = clientdata[i].i2c_address;
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3068: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:581:
+  .driver = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3069: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:582:
+  .name = "rmi-i2c",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3070: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:583:
+  },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3071: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:584:
+  .probe  = rmi_i2c_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3072: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:585:
+  .remove = rmi_i2c_remove,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3082: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:595:
+	printk(KERN_INFO "RMI I2C Driver\n");

ERROR:SPACING: space required before the open parenthesis '('
#3083: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:596:
+	if(RMI_ALLOC_STATS) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3083: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:596:
+	if(RMI_ALLOC_STATS) {
+		printk(KERN_INFO "    Allocation Stats Enabled\n");
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3084: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:597:
+		printk(KERN_INFO "    Allocation Stats Enabled\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3101: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:614:
+/** Standard driver module information - a summary description of this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3105: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:617:
+/** Standard driver module information - the license under which this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3111: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:622:
+/** Specifies to the kernel that the mod_init() function should be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3117: FILE: drivers/input/touchscreen/rmi_phys_i2c.c:627:
+/** Specifies to the kernel that the mod_exit() function should be $

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#3127: FILE: drivers/input/touchscreen/rmi_phys_i2c.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3132: FILE: drivers/input/touchscreen/rmi_phys_i2c.mod.c:1:
+#include <linux/module.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".gnu.linkonce.this_module") over __attribute__((section(".gnu.linkonce.this_module")))
#3139: FILE: drivers/input/touchscreen/rmi_phys_i2c.mod.c:8:
+__attribute__((section(".gnu.linkonce.this_module"))) = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3140: FILE: drivers/input/touchscreen/rmi_phys_i2c.mod.c:9:
+ .name = KBUILD_MODNAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3141: FILE: drivers/input/touchscreen/rmi_phys_i2c.mod.c:10:
+ .init = init_module,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3143: FILE: drivers/input/touchscreen/rmi_phys_i2c.mod.c:12:
+ .exit = cleanup_module,$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".modinfo") over __attribute__((section(".modinfo")))
#3149: FILE: drivers/input/touchscreen/rmi_phys_i2c.mod.c:18:
+__attribute__((section(".modinfo"))) =

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031809.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 636 errors, 967 warnings, 175 checks, 3001 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031809.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
