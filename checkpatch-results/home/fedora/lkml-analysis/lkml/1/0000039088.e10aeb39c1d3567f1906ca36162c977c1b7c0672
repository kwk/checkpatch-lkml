WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
> > +                                       pm_request_resume(&nb->pci_dev->dev);

WARNING:TYPO_SPELLING: 'respose' may be misspelled - perhaps 'response'?
#59: 
> > best and always schedule a wake in respose to a resume request?
                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: drivers/pci/pci.h:58:
+extern int __pci_pme_wakeup(struct pci_dev *dev, void *ign);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: drivers/pci/pci.h:59:
+extern void pci_pme_wakeup_bus(struct pci_bus *bus);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#200: FILE: drivers/pci/pci-acpi.c:45:
+struct pci_acpi_notifier_block
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#233: FILE: drivers/pci/pci-acpi.c:78:
+			if (nb->pci_bus) {
+				pci_pme_wakeup_bus(nb->pci_bus);
+			} if (nb->pci_dev) {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line (or did you mean 'else if'?)
#235: FILE: drivers/pci/pci-acpi.c:80:
+			} if (nb->pci_dev) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/pci/pci-acpi.c:156:
+	status = acpi_install_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, nb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/pci/pci-acpi.c:206:
+	status = acpi_remove_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: drivers/pci/pci-acpi.c:257:
+	status = acpi_install_notify_handler(dev->handle, ACPI_SYSTEM_NOTIFY,
+						pci_acpi_event_fn, nb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/pci/pci-acpi.c:302:
+		acpi_unref_runtime_gpe(dev->wakeup.gpe_device,
+					dev->wakeup.gpe_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/pci/pci-acpi.c:313:
+	status = acpi_remove_notify_handler(nb->dev->handle,
+						ACPI_SYSTEM_NOTIFY,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: drivers/pci/pci-acpi.c:337:
+			acpi_ref_runtime_gpe(dev->wakeup.gpe_device,
+						dev->wakeup.gpe_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: drivers/pci/pci-acpi.c:342:
+			acpi_unref_runtime_gpe(dev->wakeup.gpe_device,
+						dev->wakeup.gpe_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: drivers/acpi/sleep.c:758:
+		dev_info(dev, "wake-up power %s by ACPI\n",
 				enable ? "enabled" : "disabled");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#796: FILE: include/linux/pci-acpi.h:14:
+extern acpi_status pci_acpi_add_hp_notifier(acpi_handle handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: include/linux/pci-acpi.h:15:
+extern acpi_status pci_acpi_add_hp_notifier(acpi_handle handle,
+					     acpi_notify_handler handler,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#799: FILE: include/linux/pci-acpi.h:17:
+extern acpi_status pci_acpi_remove_hp_notifier(acpi_handle handle,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#801: FILE: include/linux/pci-acpi.h:19:
+extern acpi_status pci_acpi_add_pm_notifier(struct acpi_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#802: FILE: include/linux/pci-acpi.h:20:
+extern acpi_status pci_acpi_add_pm_notifier(struct acpi_device *dev,
+					     struct pci_dev *pci_dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#804: FILE: include/linux/pci-acpi.h:22:
+extern acpi_status pci_acpi_remove_pm_notifier(struct acpi_device *dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: drivers/pci/hotplug/acpiphp_glue.c:242:
+		status = pci_acpi_add_hp_notifier(handle,
 					     handle_hotplug_event_func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: drivers/pci/hotplug/acpiphp_glue.c:293:
+			status = pci_acpi_remove_hp_notifier(bridge->func->handle,
 						handle_hotplug_event_func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#890: FILE: drivers/pci/hotplug/acpiphp_glue.c:298:
+		status = pci_acpi_add_hp_notifier(bridge->handle,
 					     handle_hotplug_event_bridge,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#899: FILE: drivers/pci/hotplug/acpiphp_glue.c:514:
+	status = pci_acpi_remove_hp_notifier(handle,
 					    handle_hotplug_event_bridge);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: drivers/pci/hotplug/acpiphp_glue.c:521:
+		status = pci_acpi_add_hp_notifier(bridge->func->handle,
 						handle_hotplug_event_func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: drivers/pci/hotplug/acpiphp_glue.c:539:
+				status = pci_acpi_remove_hp_notifier(func->handle,
 						handle_hotplug_event_func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: drivers/pci/hotplug/acpiphp_glue.c:601:
+		pci_acpi_remove_hp_notifier(handle,
 					   handle_hotplug_event_bridge);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: drivers/pci/hotplug/acpiphp_glue.c:1491:
+		pci_acpi_add_hp_notifier(handle,
+					handle_hotplug_event_bridge, NULL);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_device *' should also have an identifier name
#964: FILE: include/acpi/acpi_bus.h:393:
+int acpi_pm_wake_up_power(struct acpi_device *, bool);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bool' should also have an identifier name
#964: FILE: include/acpi/acpi_bus.h:393:
+int acpi_pm_wake_up_power(struct acpi_device *, bool);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#974: FILE: include/acpi/acpi_bus.h:402:
 }
+static inline int acpi_pm_wake_up_power(struct acpi_device *dev, bool enable)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 25 checks, 781 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000039088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
