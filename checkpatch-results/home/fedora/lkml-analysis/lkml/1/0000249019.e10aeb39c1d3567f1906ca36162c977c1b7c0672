WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git cpus4096

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#610: FILE: kernel/cpu.c:467:
+#define Z64 0, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#619: FILE: kernel/cpu.c:476:
+#define CMI8(n, ...)						\
+	CMI((n), __VA_ARGS__), CMI((n)+1, __VA_ARGS__),		\
+	CMI((n)+2, __VA_ARGS__), CMI((n)+3, __VA_ARGS__),	\
+	CMI((n)+4, __VA_ARGS__), CMI((n)+5, __VA_ARGS__),	\
+	CMI((n)+6, __VA_ARGS__), CMI((n)+7, __VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#619: FILE: kernel/cpu.c:476:
+#define CMI8(n, ...)						\
+	CMI((n), __VA_ARGS__), CMI((n)+1, __VA_ARGS__),		\
+	CMI((n)+2, __VA_ARGS__), CMI((n)+3, __VA_ARGS__),	\
+	CMI((n)+4, __VA_ARGS__), CMI((n)+5, __VA_ARGS__),	\
+	CMI((n)+6, __VA_ARGS__), CMI((n)+7, __VA_ARGS__)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#620: FILE: kernel/cpu.c:477:
+	CMI((n), __VA_ARGS__), CMI((n)+1, __VA_ARGS__),		\
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#621: FILE: kernel/cpu.c:478:
+	CMI((n)+2, __VA_ARGS__), CMI((n)+3, __VA_ARGS__),	\
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#621: FILE: kernel/cpu.c:478:
+	CMI((n)+2, __VA_ARGS__), CMI((n)+3, __VA_ARGS__),	\
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#622: FILE: kernel/cpu.c:479:
+	CMI((n)+4, __VA_ARGS__), CMI((n)+5, __VA_ARGS__),	\
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#622: FILE: kernel/cpu.c:479:
+	CMI((n)+4, __VA_ARGS__), CMI((n)+5, __VA_ARGS__),	\
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#623: FILE: kernel/cpu.c:480:
+	CMI((n)+6, __VA_ARGS__), CMI((n)+7, __VA_ARGS__)
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#623: FILE: kernel/cpu.c:480:
+	CMI((n)+6, __VA_ARGS__), CMI((n)+7, __VA_ARGS__)
 	                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#626: FILE: kernel/cpu.c:483:
+#define CMI64(n, ...)							\
+	CMI8((n), __VA_ARGS__), CMI8((n)+8, __VA_ARGS__),		\
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
+	CMI8((n)+32, 0, __VA_ARGS__), CMI8((n)+40, 0, __VA_ARGS__),	\
+	CMI8((n)+48, 0, __VA_ARGS__), CMI8((n)+56, 0, __VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#626: FILE: kernel/cpu.c:483:
+#define CMI64(n, ...)							\
+	CMI8((n), __VA_ARGS__), CMI8((n)+8, __VA_ARGS__),		\
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
+	CMI8((n)+32, 0, __VA_ARGS__), CMI8((n)+40, 0, __VA_ARGS__),	\
+	CMI8((n)+48, 0, __VA_ARGS__), CMI8((n)+56, 0, __VA_ARGS__)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#627: FILE: kernel/cpu.c:484:
+	CMI8((n), __VA_ARGS__), CMI8((n)+8, __VA_ARGS__),		\
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#628: FILE: kernel/cpu.c:485:
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#628: FILE: kernel/cpu.c:485:
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#629: FILE: kernel/cpu.c:486:
+	CMI8((n)+32, 0, __VA_ARGS__), CMI8((n)+40, 0, __VA_ARGS__),	\
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#629: FILE: kernel/cpu.c:486:
+	CMI8((n)+32, 0, __VA_ARGS__), CMI8((n)+40, 0, __VA_ARGS__),	\
 	                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#630: FILE: kernel/cpu.c:487:
+	CMI8((n)+48, 0, __VA_ARGS__), CMI8((n)+56, 0, __VA_ARGS__)
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#630: FILE: kernel/cpu.c:487:
+	CMI8((n)+48, 0, __VA_ARGS__), CMI8((n)+56, 0, __VA_ARGS__)
 	                                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#632: FILE: kernel/cpu.c:489:
+#define CMI64(n, ...)							\
+	CMI8((n), __VA_ARGS__), CMI8((n)+8, __VA_ARGS__),		\
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
+	CMI8((n)+32, __VA_ARGS__), CMI8((n)+40, __VA_ARGS__),	\
+	CMI8((n)+48, __VA_ARGS__), CMI8((n)+56, __VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#632: FILE: kernel/cpu.c:489:
+#define CMI64(n, ...)							\
+	CMI8((n), __VA_ARGS__), CMI8((n)+8, __VA_ARGS__),		\
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
+	CMI8((n)+32, __VA_ARGS__), CMI8((n)+40, __VA_ARGS__),	\
+	CMI8((n)+48, __VA_ARGS__), CMI8((n)+56, __VA_ARGS__)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#633: FILE: kernel/cpu.c:490:
+	CMI8((n), __VA_ARGS__), CMI8((n)+8, __VA_ARGS__),		\
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#634: FILE: kernel/cpu.c:491:
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#634: FILE: kernel/cpu.c:491:
+	CMI8((n)+16, __VA_ARGS__), CMI8((n)+24, __VA_ARGS__),		\
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#635: FILE: kernel/cpu.c:492:
+	CMI8((n)+32, __VA_ARGS__), CMI8((n)+40, __VA_ARGS__),	\
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#635: FILE: kernel/cpu.c:492:
+	CMI8((n)+32, __VA_ARGS__), CMI8((n)+40, __VA_ARGS__),	\
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#636: FILE: kernel/cpu.c:493:
+	CMI8((n)+48, __VA_ARGS__), CMI8((n)+56, __VA_ARGS__)
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#636: FILE: kernel/cpu.c:493:
+	CMI8((n)+48, __VA_ARGS__), CMI8((n)+56, __VA_ARGS__)
 	                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#639: FILE: kernel/cpu.c:496:
+#define CMI256(n, ...)							\
+	CMI64((n), __VA_ARGS__), CMI64((n)+64, Z64, __VA_ARGS__),	\
+	CMI64((n)+128, Z64, Z64, __VA_ARGS__),				\
+	CMI64((n)+192, Z64, Z64, Z64, __VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#639: FILE: kernel/cpu.c:496:
+#define CMI256(n, ...)							\
+	CMI64((n), __VA_ARGS__), CMI64((n)+64, Z64, __VA_ARGS__),	\
+	CMI64((n)+128, Z64, Z64, __VA_ARGS__),				\
+	CMI64((n)+192, Z64, Z64, Z64, __VA_ARGS__)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#640: FILE: kernel/cpu.c:497:
+	CMI64((n), __VA_ARGS__), CMI64((n)+64, Z64, __VA_ARGS__),	\
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#641: FILE: kernel/cpu.c:498:
+	CMI64((n)+128, Z64, Z64, __VA_ARGS__),				\
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#642: FILE: kernel/cpu.c:499:
+	CMI64((n)+192, Z64, Z64, Z64, __VA_ARGS__)
 	         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#643: FILE: kernel/cpu.c:500:
+#define Z256 Z64, Z64, Z64, Z64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#645: FILE: kernel/cpu.c:502:
+#define CMI1024(n, ...)					\
+	CMI256((n), __VA_ARGS__),			\
+	CMI256((n)+256, Z256, __VA_ARGS__),		\
+	CMI256((n)+512, Z256, Z256, __VA_ARGS__),	\
+	CMI256((n)+768, Z256, Z256, Z256, __VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#645: FILE: kernel/cpu.c:502:
+#define CMI1024(n, ...)					\
+	CMI256((n), __VA_ARGS__),			\
+	CMI256((n)+256, Z256, __VA_ARGS__),		\
+	CMI256((n)+512, Z256, Z256, __VA_ARGS__),	\
+	CMI256((n)+768, Z256, Z256, Z256, __VA_ARGS__)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#647: FILE: kernel/cpu.c:504:
+	CMI256((n)+256, Z256, __VA_ARGS__),		\
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#648: FILE: kernel/cpu.c:505:
+	CMI256((n)+512, Z256, Z256, __VA_ARGS__),	\
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: kernel/cpu.c:506:
+	CMI256((n)+768, Z256, Z256, Z256, __VA_ARGS__)
 	          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#650: FILE: kernel/cpu.c:507:
+#define Z1024 Z256, Z256, Z256, Z256

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#653: FILE: kernel/cpu.c:510:
+ * to waste too much space, either. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#719: FILE: kernel/cpu.c:576:
+EXPORT_SYMBOL_GPL(cpumask_of_cpu_map);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 3 warnings, 32 checks, 613 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
