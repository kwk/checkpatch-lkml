WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .6
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#184: FILE: arch/x86/kvm/mmu.c:523:
+		while (desc->shadow_ptes[RMAP_EXT-1] && desc->more) {
 		                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#408: FILE: arch/x86/kvm/svm.c:249:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'interruptibility != interruptibility_old'
#491: FILE: arch/x86/kvm/vmx.c:760:
+	if ((interruptibility != interruptibility_old))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#491: FILE: arch/x86/kvm/vmx.c:760:
+	if ((interruptibility != interruptibility_old))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#544: FILE: arch/x86/kvm/x86.c:709:
+static bool valid_pat_type(unsigned t)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#549: FILE: arch/x86/kvm/x86.c:714:
+static bool valid_mtrr_type(unsigned t)

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRdefType>
#566: FILE: arch/x86/kvm/x86.c:731:
+	} else if (msr == MSR_MTRRdefType) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix64K_00000>
#570: FILE: arch/x86/kvm/x86.c:735:
+	} else if (msr >= MSR_MTRRfix64K_00000 && msr <= MSR_MTRRfix4K_F8000) {

CHECK:CAMELCASE: Avoid CamelCase: <MSR_MTRRfix4K_F8000>
#570: FILE: arch/x86/kvm/x86.c:735:
+	} else if (msr >= MSR_MTRRfix64K_00000 && msr <= MSR_MTRRfix4K_F8000) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#820: FILE: drivers/acpi/processor_throttling.c:65:
+int acpi_processor_set_throttling(struct acpi_processor *pr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#821: FILE: drivers/acpi/processor_throttling.c:66:
+int acpi_processor_set_throttling(struct acpi_processor *pr,
+						int state, bool force);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == pr->throttling.state'
#857: FILE: drivers/acpi/processor_throttling.c:934:
+	if (!force && (state == pr->throttling.state))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == pr->throttling.state'
#875: FILE: drivers/acpi/processor_throttling.c:1006:
+	if (!force && (state == pr->throttling.state))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: drivers/acpi/processor_throttling.c:1023:
+int acpi_processor_set_throttling(struct acpi_processor *pr,
+						int state, bool force)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1014: FILE: drivers/net/wireless/iwlwifi/iwl-rfkill.c:58:
+			 * software kill switch */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1027: FILE: drivers/net/wireless/iwlwifi/iwl-rfkill.c:70:
+			 * kill switch */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1092: FILE: drivers/net/wireless/iwlwifi/iwl-sta.c:858:
+		IWL_DEBUG_WEP(priv, "Not sending REPLY_ADD_STA command because RFKILL enabled. \n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1108: FILE: drivers/net/wireless/rt2x00/rt2x00.h:817:
+	BUG_ON(word < 1 || word > rt2x00dev->ops->rf_size / sizeof(u32));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1116: FILE: drivers/net/wireless/rt2x00/rt2x00.h:824:
+	BUG_ON(word < 1 || word > rt2x00dev->ops->rf_size / sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1180: FILE: drivers/scsi/mpt2sas/mpt2sas_base.c:140:
+	snprintf(ioc->fault_reset_work_q_name,
+	    sizeof(ioc->fault_reset_work_q_name), "poll_%d_status", ioc->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1184: FILE: drivers/scsi/mpt2sas/mpt2sas_base.c:144:
+		printk(MPT2SAS_ERR_FMT "%s: failed (line=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1185: FILE: drivers/scsi/mpt2sas/mpt2sas_base.c:145:
+		printk(MPT2SAS_ERR_FMT "%s: failed (line=%d)\n",
+		    ioc->name, __func__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: drivers/scsi/mpt2sas/mpt2sas_base.c:151:
+		queue_delayed_work(ioc->fault_reset_work_q,
+		    &ioc->fault_reset_work,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1370: FILE: drivers/scsi/mpt2sas/mpt2sas_config.c:255:
+		printk(MPT2SAS_INFO_FMT "%s: attempting retry (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1371: FILE: drivers/scsi/mpt2sas/mpt2sas_config.c:256:
+		printk(MPT2SAS_INFO_FMT "%s: attempting retry (%d)\n",
+		    ioc->name, __func__, retry_count);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioc->shost_recovery'
#1408: FILE: drivers/scsi/mpt2sas/mpt2sas_config.c:306:
+		if ((ioc->shost_recovery) ||
+		    (ioc->config_cmds.status & MPT2_CMD_RESET))

CHECK:CAMELCASE: Avoid CamelCase: <IOCLogInfo>
#1804: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:2563:
+	u32 log_info = le32_to_cpu(mpi_reply->IOCLogInfo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1834: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:3311:
+		if ((mpt2sas_transport_add_expander_phy(ioc,
+		    &sas_expander->phy[i], expander_pg1,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1836: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:3313:
+			printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1837: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:3314:
+			printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",
+			    ioc->name, __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1852: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:3336:
+		mpt2sas_transport_port_remove(ioc, sas_expander->sas_address,
+		    sas_expander->parent_handle);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1863: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:3458:
+	if (sas_device->enclosure_handle && !(mpt2sas_config_get_enclosure_pg0(

CHECK:CAMELCASE: Avoid CamelCase: <Mpi2ConfigReply_t>
#1902: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4210:
+	Mpi2ConfigReply_t mpi_reply;

CHECK:CAMELCASE: Avoid CamelCase: <Mpi2SasDevicePage0_t>
#1903: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4211:
+	Mpi2SasDevicePage0_t sas_device_pg0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1918: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4223:
+	if ((mpt2sas_config_get_sas_device_pg0(ioc, &mpi_reply, &sas_device_pg0,
+	    MPI2_SAS_DEVICE_PGAD_FORM_HANDLE, handle))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1919: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4224:
+		printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1920: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4225:
+		printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",
+		    ioc->name, __FILE__, __LINE__, __func__);

CHECK:CAMELCASE: Avoid CamelCase: <IOCStatus>
#1924: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4229:
+	ioc_status = le16_to_cpu(mpi_reply.IOCStatus) &

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1927: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4232:
+		printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1928: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4233:
+		printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",
+		    ioc->name, __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1933: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4238:
+	_scsih_link_change(ioc,
+	    le16_to_cpu(sas_device_pg0.ParentDevHandle),

CHECK:CAMELCASE: Avoid CamelCase: <ParentDevHandle>
#1933: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4238:
+	    le16_to_cpu(sas_device_pg0.ParentDevHandle),

CHECK:CAMELCASE: Avoid CamelCase: <PhyNum>
#1934: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4239:
+	    handle, sas_device_pg0.PhyNum, MPI2_SAS_NEG_LINK_RATE_1_5);

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#1951: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4348:
+	foreign_config = (le32_to_cpu(event_data->Flags) &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2005: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4511:
+		if ((mpt2sas_config_get_sas_device_pg0(ioc, &mpi_reply,
+		    &sas_device_pg0, MPI2_SAS_DEVICE_PGAD_FORM_HANDLE,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2007: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4513:
+			printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4514:
+			printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",
+			    ioc->name, __FILE__, __LINE__, __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2015: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4521:
+			printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2016: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4522:
+			printk(MPT2SAS_ERR_FMT "failure at %s:%d/%s()!\n",
+			    ioc->name, __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2021: FILE: drivers/scsi/mpt2sas/mpt2sas_scsih.c:4527:
+		_scsih_link_change(ioc,
+		    le16_to_cpu(sas_device_pg0.ParentDevHandle),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct usb_hcd *' should also have an identifier name
#2058: FILE: drivers/usb/core/hcd.h:229:
+	void	(*clear_tt_buffer_complete)(struct usb_hcd *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct usb_host_endpoint *' should also have an identifier name
#2058: FILE: drivers/usb/core/hcd.h:229:
+	void	(*clear_tt_buffer_complete)(struct usb_hcd *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2059: FILE: drivers/usb/core/hcd.h:230:
+	void	(*clear_tt_buffer_complete)(struct usb_hcd *,
+				struct usb_host_endpoint *);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (drv->clear_tt_buffer_complete)
#2102: FILE: drivers/usb/core/hub.c:481:
+			(drv->clear_tt_buffer_complete)(clear->hcd, clear->ep);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2202: FILE: drivers/usb/core/hub.h:199:
+extern int usb_hub_clear_tt_buffer(struct urb *urb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2331: FILE: drivers/usb/host/ehci-q.c:145:
+static void ehci_clear_tt_buffer_complete(struct usb_hcd *hcd,
+		struct usb_host_endpoint *ep)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2340: FILE: drivers/usb/host/ehci-q.c:154:
+	if (qh->qh_state == QH_STATE_IDLE && !list_empty(&qh->qtd_list)
+			&& HC_IS_RUNNING(hcd->state))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2346: FILE: drivers/usb/host/ehci-q.c:160:
+static void ehci_clear_tt_buffer(struct ehci_hcd *ehci, struct ehci_qh *qh,
+		struct urb *urb, u32 token)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2348: FILE: drivers/usb/host/ehci-q.c:162:
+{
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2358: FILE: drivers/usb/host/ehci-q.c:172:
+		struct usb_device *tt = urb->dev->tt->hub;
+		dev_dbg(&tt->dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2364: FILE: drivers/usb/host/ehci-q.c:178:
+		if (!ehci_is_TDI(ehci)
+				|| urb->dev->tt->hub !=

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2369: FILE: drivers/usb/host/ehci-q.c:183:
+		} else {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2436: FILE: drivers/usb/host/ehci-q.c:477:
+			if (unlikely(last_status != -EINPROGRESS &&
+					last_status != -EREMOTEIO))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2538: FILE: fs/buffer.c:1170:
+			struct address_space *mapping = page_mapping(page);
+			if (mapping)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2569: FILE: fs/hugetlbfs/inode.c:938:
+struct file *hugetlb_file_setup(const char *name, size_t size, int acctflag,
+						struct user_struct **user)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2709: FILE: fs/ocfs2/aops.c:897:
+	unsigned	c_needs_zero;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2798: FILE: fs/ocfs2/aops.c:1476:
+			BUG_ON(phys == 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2923: FILE: fs/xfs/xfs_iget.c:119:
+xfs_inode_free(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2966: FILE: fs/xfs/xfs_iget.c:162:
+		ASSERT(((lip->li_flags & XFS_LI_IN_AIL) == 0) ||
+				       XFS_FORCED_SHUTDOWN(ip->i_mount));

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#2981: FILE: fs/xfs/xfs_iget.c:177:
+	ASSERT(!spin_is_locked(&ip->i_flags_lock));

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3132: FILE: include/acpi/processor.h:323:
+extern int acpi_processor_set_throttling(struct acpi_processor *pr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3146: FILE: include/linux/bitmap.h:97:
+extern int __bitmap_and(unsigned long *dst, const unsigned long *bitmap1,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3153: FILE: include/linux/bitmap.h:103:
+extern int __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3154: FILE: include/linux/bitmap.h:104:
+extern int __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,
 			const unsigned long *bitmap2, int bits);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3163: FILE: include/linux/bitmap.h:175:
+static inline int bitmap_and(unsigned long *dst, const unsigned long *src1,
 			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3180: FILE: include/linux/bitmap.h:201:
+static inline int bitmap_andnot(unsigned long *dst, const unsigned long *src1,
 			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3214: FILE: include/linux/cpumask.h:183:
+static inline int __cpus_and(cpumask_t *dstp, const cpumask_t *src1p,
 					const cpumask_t *src2p, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3227: FILE: include/linux/cpumask.h:205:
+static inline int __cpus_andnot(cpumask_t *dstp, const cpumask_t *src1p,
 					const cpumask_t *src2p, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3240: FILE: include/linux/cpumask.h:742:
+static inline int cpumask_and(struct cpumask *dstp,
 			       const struct cpumask *src1p,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3254: FILE: include/linux/cpumask.h:783:
+static inline int cpumask_andnot(struct cpumask *dstp,
 				  const struct cpumask *src1p,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3271: FILE: include/linux/fs.h:2124:
+extern int kernel_read(struct file *, loff_t, char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#3271: FILE: include/linux/fs.h:2124:
+extern int kernel_read(struct file *, loff_t, char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#3271: FILE: include/linux/fs.h:2124:
+extern int kernel_read(struct file *, loff_t, char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#3271: FILE: include/linux/fs.h:2124:
+extern int kernel_read(struct file *, loff_t, char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#3271: FILE: include/linux/fs.h:2124:
+extern int kernel_read(struct file *, loff_t, char *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3280: FILE: include/linux/fs.h:2138:
+extern int inode_init_always(struct super_block *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#3280: FILE: include/linux/fs.h:2138:
+extern int inode_init_always(struct super_block *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#3280: FILE: include/linux/fs.h:2138:
+extern int inode_init_always(struct super_block *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3288: FILE: include/linux/fs.h:2165:
+extern void __destroy_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#3288: FILE: include/linux/fs.h:2165:
+extern void __destroy_inode(struct inode *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3310: FILE: include/linux/hugetlb.h:144:
+struct file *hugetlb_file_setup(const char *name, size_t size, int acct,
+						struct user_struct **user);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3319: FILE: include/linux/hugetlb.h:166:
+#define hugetlb_file_setup(name,size,acct,user)	ERR_PTR(-ENOSYS)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3319: FILE: include/linux/hugetlb.h:166:
+#define hugetlb_file_setup(name,size,acct,user)	ERR_PTR(-ENOSYS)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3319: FILE: include/linux/hugetlb.h:166:
+#define hugetlb_file_setup(name,size,acct,user)	ERR_PTR(-ENOSYS)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3319: FILE: include/linux/hugetlb.h:166:
+#define hugetlb_file_setup(name,size,acct,user)	ERR_PTR(-ENOSYS)
                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3377: FILE: ipc/shm.c:373:
+		file = hugetlb_file_setup(name, size, acctflag,
+							&shp->mlock_user);

CHECK:SPACING: No space is necessary after a cast
#3474: FILE: kernel/signal.c:2417:
+	oss.ss_sp = (void __user *) current->sas_ss_sp;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3509: FILE: lib/bitmap.c:183:
+int __bitmap_and(unsigned long *dst, const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3528: FILE: lib/bitmap.c:218:
+int __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

WARNING:SPLIT_STRING: quoted string split across lines
#3665: FILE: net/mac80211/agg-tx.c:384:
+		 "TID %d gone but expected when splicing aggregates from"
+		 "the pending queue\n", tid))

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#3665: FILE: net/mac80211/agg-tx.c:384:
+		 "TID %d gone but expected when splicing aggregates from"
+		 "the pending queue\n", tid))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3829: FILE: sound/pci/hda/patch_realtek.c:6236:
+	HDA_BIND_MUTE   ("Speaker Playback Switch", 0x0c, 0x02, HDA_INPUT),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3831: FILE: sound/pci/hda/patch_realtek.c:6238:
+	HDA_BIND_MUTE   ("Headphone Playback Switch", 0x0e, 0x02, HDA_INPUT),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000074739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 37 warnings, 65 checks, 3306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000074739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
