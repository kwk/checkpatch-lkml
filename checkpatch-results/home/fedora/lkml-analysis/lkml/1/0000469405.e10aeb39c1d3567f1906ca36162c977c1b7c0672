ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#51: FILE: arch/i386/kernel/acpi/boot.c:75:
+int acpi_pci_disabled __initdata = 0;	/* skip ACPI PCI scan and IRQ initialization */

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#63: FILE: arch/i386/kernel/acpi/boot.c:83:
+u8 acpi_sci_flags __initdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#64: FILE: arch/i386/kernel/acpi/boot.c:84:
+int acpi_sci_override_gsi __initdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#65: FILE: arch/i386/kernel/acpi/boot.c:85:
+int acpi_skip_timer_override __initdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#66: FILE: arch/i386/kernel/acpi/boot.c:86:
+int acpi_use_timer_override __initdata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#78: FILE: arch/i386/kernel/acpi/earlyquirk.c:16:
+static int nvidia_hpet_detected __initdata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#90: FILE: arch/i386/kernel/cpu/mtrr/generic.c:29:
+static __initdata int mtrr_show = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after mtrr_show
#90: FILE: arch/i386/kernel/cpu/mtrr/generic.c:29:
+static __initdata int mtrr_show = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: arch/i386/kernel/e820.c:29:
 };
+static struct change_member change_point_list[2*E820MAX] __initdata = {{0}};

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#105: FILE: arch/i386/kernel/e820.c:29:
+static struct change_member change_point_list[2*E820MAX] __initdata = {{0}};
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#106: FILE: arch/i386/kernel/e820.c:30:
+static struct change_member *change_point[2*E820MAX] __initdata = {0};
                                            ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#120: FILE: arch/i386/kernel/io_apic.c:75:
+static int disable_timer_pin_1 __initdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#129: FILE: arch/i386/kernel/io_apic.c:1923:
+int no_timer_check __initdata = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after command_line[COMMAND_LINE_SIZE]
#141: FILE: arch/i386/kernel/setup.c:136:
+static char __initdata command_line[COMMAND_LINE_SIZE] = "";

WARNING:MISPLACED_INIT: __initdata should be placed after apicid_to_pxm[MAX_APICID]
#156: FILE: arch/i386/kernel/srat.c:58:
+static u8 __initdata apicid_to_pxm[MAX_APICID] = {0};

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#170: FILE: arch/i386/kernel/summit.c:34:
+static struct rio_table_hdr *rio_table_hdr __initdata = NULL;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#172: FILE: arch/i386/kernel/summit.c:36:
+static struct rio_detail    *rio_devs[MAX_NUMNODES*4] __initdata = {0};
                                                   ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#184: FILE: arch/i386/mach-generic/probe.c:33:
+static int cmdline_apic __initdata = 0;

CHECK:CAMELCASE: Avoid CamelCase: <xFFFF>
#196: FILE: arch/i386/mach-voyager/voyager_cat.c:564:
+static __initdata __u8 eprom_buf[0xFFFF] = {0};

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:MISPLACED_INIT: __initdata should be placed after eprom_buf[0xFFFF]
#196: FILE: arch/i386/mach-voyager/voyager_cat.c:564:
+static __initdata __u8 eprom_buf[0xFFFF] = {0};

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: arch/i386/mm/boot_ioremap.c:68:
+		       __attribute__ ((aligned (PAGE_SIZE))) = {0};

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#208: FILE: arch/i386/mm/boot_ioremap.c:68:
+		       __attribute__ ((aligned (PAGE_SIZE))) = {0};

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469405.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 6 warnings, 5 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469405.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
