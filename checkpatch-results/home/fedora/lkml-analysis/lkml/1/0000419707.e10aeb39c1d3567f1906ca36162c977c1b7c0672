WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#54: FILE: Makefile:4:
+EXTRAVERSION = .5
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#92: FILE: arch/i386/kernel/hpet.c:293:
+		printk(KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: arch/i386/oprofile/nmi_int.c:213:
+	for_each_possible_cpu (cpu) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: arch/i386/oprofile/nmi_int.c:216:
+			memcpy(cpu_msrs[cpu].counters, cpu_msrs[0].counters,
+				sizeof(struct op_msr) * model->num_counters);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: arch/i386/oprofile/nmi_int.c:219:
+			memcpy(cpu_msrs[cpu].controls, cpu_msrs[0].controls,
+				sizeof(struct op_msr) * model->num_controls);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#164: FILE: arch/i386/oprofile/nmi_int.c:222:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'entires' may be misspelled - perhaps 'entries'?
#214: FILE: arch/sparc64/kernel/head.S:690:
+	 * trap table entires which branch back to code in ktlb.S
 	              ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#350: FILE: arch/um/os-Linux/start_up.c:147:
 			non_fatal("check_ptrace : child exited with status 2. "
+				  "\nDisabling SYSEMU support.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#371: FILE: arch/um/os-Linux/start_up.c:227:
+	if(ptrace(PTRACE_GETREGS, pid, 0, regs) < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_sysemu', this function's name, in a string
#372: FILE: arch/um/os-Linux/start_up.c:228:
+		fatal_perror("check_sysemu : PTRACE_GETREGS failed");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open brace '{'
#373: FILE: arch/um/os-Linux/start_up.c:229:
+	if(PT_SYSCALL_NR(regs) != __NR_getpid){

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: arch/um/os-Linux/start_up.c:229:
+	if(PT_SYSCALL_NR(regs) != __NR_getpid){

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_sysemu', this function's name, in a string
#374: FILE: arch/um/os-Linux/start_up.c:230:
+		non_fatal("check_sysemu got system call number %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#375: FILE: arch/um/os-Linux/start_up.c:231:
+		non_fatal("check_sysemu got system call number %d, "
+			  "expected %d...", PT_SYSCALL_NR(regs), __NR_getpid);

ERROR:SPACING: space required before the open brace '{'
#380: FILE: arch/um/os-Linux/start_up.c:236:
+	if(n < 0){

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: arch/um/os-Linux/start_up.c:236:
+	if(n < 0){

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_sysemu', this function's name, in a string
#381: FILE: arch/um/os-Linux/start_up.c:237:
+		non_fatal("check_sysemu : failed to modify system call "

WARNING:SPLIT_STRING: quoted string split across lines
#382: FILE: arch/um/os-Linux/start_up.c:238:
+		non_fatal("check_sysemu : failed to modify system call "
+			  "return");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#400: FILE: arch/x86_64/mm/init.c:783:
+			SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 			                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#400: FILE: arch/x86_64/mm/init.c:783:
+			SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 			                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#400: FILE: arch/x86_64/mm/init.c:783:
+			SMP_CACHE_BYTES, (4UL*1024*1024*1024), 0);
 			                               ^

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#457: FILE: drivers/ata/ahci.c:1585:
+		dev_printk(KERN_INFO, &pdev->dev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tmp_ptr"
#483: FILE: drivers/block/cciss.c:3416:
+	if (tmp_ptr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[i]"
#486: FILE: drivers/block/cciss.c:3419:
+	if (hba[i] == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#491: FILE: drivers/block/cciss.c:3424:
+	 * To write all data in the battery backed cache to disks */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#495: FILE: drivers/block/cciss.c:3428:
+	if (return_code == IO_OK) {
[...]
+	} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#496: FILE: drivers/block/cciss.c:3429:
+		printk(KERN_INFO "Completed flushing cache on controller %d\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#498: FILE: drivers/block/cciss.c:3431:
+		printk(KERN_WARNING "Error flushing cache on controller %d\n", i);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#503: FILE: drivers/block/cciss.c:3436:
+static void __devexit cciss_remove_one(struct pci_dev *pdev)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#585: FILE: drivers/ide/pci/hpt366.c:2:
+ * linux/drivers/ide/pci/hpt366.c		Version 1.03	May 4, 2007

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#633: FILE: drivers/input/serio/i8042.c:534:
+static int __devinit i8042_toggle_aux(int on)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: drivers/input/serio/i8042.c:540:
+	if (i8042_command(&param,
+			on ? I8042_CMD_AUX_ENABLE : I8042_CMD_AUX_DISABLE))

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#644: FILE: drivers/input/serio/i8042.c:545:
+		udelay(50);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#695: FILE: drivers/md/bitmap.c:266:
 		if (test_bit(In_sync, &rdev->flags)
+		    && !test_bit(Faulty, &rdev->flags)) {

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#695: FILE: drivers/md/bitmap.c:266:
+		    && !test_bit(Faulty, &rdev->flags)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#697: FILE: drivers/md/bitmap.c:268:
+			int size = PAGE_SIZE;
+			if (page->index == bitmap->file_pages-1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#697: FILE: drivers/md/bitmap.c:268:
+			if (page->index == bitmap->file_pages-1)
 			                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#702: FILE: drivers/md/bitmap.c:272:
+				       (rdev->sb_offset<<1) + bitmap->offset
 				                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#782: FILE: drivers/net/e1000/e1000_main.c:1164:
+	if ((err = register_netdev(netdev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#819: FILE: drivers/net/wireless/zd1211rw/zd_chip.c:70:
+	i += scnprintf(buffer+i, size-i, " pa%1x %c%c%c%c%c", chip->pa_type,
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#819: FILE: drivers/net/wireless/zd1211rw/zd_chip.c:70:
+	i += scnprintf(buffer+i, size-i, " pa%1x %c%c%c%c%c", chip->pa_type,
 	                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#942: FILE: drivers/net/wireless/zd1211rw/zd_rf_al2230.c:181:
+		r = zd_iowrite16a_locked(chip, ioreqs_init_al2230s,
+			ARRAY_SIZE(ioreqs_init_al2230s));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: drivers/net/wireless/zd1211rw/zd_rf_al2230.c:319:
+		r = zd_iowrite16a_locked(chip, ioreqs_init_al2230s,
+			ARRAY_SIZE(ioreqs_init_al2230s));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1053: FILE: drivers/pci/quirks.c:1757:
 static void __devinit quirk_disable_msi(struct pci_dev *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1062: FILE: drivers/scsi/aacraid/aacraid.h:1843:
+int aac_rx_deliver_producer(struct fib * fib);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1075: FILE: drivers/scsi/aacraid/rx.c:381:
+int aac_rx_deliver_producer(struct fib * fib)

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#1135: FILE: drivers/usb/core/message.c:227:
+				ep->desc.bInterval);

CHECK:SPACING: No space is necessary after a cast
#1161: FILE: drivers/video/neofb.c:1297:
+			((u32 *) fb->pseudo_palette)[regno] =

CHECK:SPACING: No space is necessary after a cast
#1169: FILE: drivers/video/neofb.c:1302:
+			((u32 *) fb->pseudo_palette)[regno] =

CHECK:SPACING: No space is necessary after a cast
#1178: FILE: drivers/video/neofb.c:1308:
+			((u32 *) fb->pseudo_palette)[regno] =

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1213: FILE: fs/compat_ioctl.c:1194:
+^Iif (!vc_cons_allocated(vc->vc_num)) ^I/* impossible? */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1240: FILE: fs/compat_ioctl.c:1310:
+		if (!access_ok(VERIFY_WRITE, compat_ptr(tmp.entries),
+				tmp.entry_ct*sizeof(struct unipair)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1240: FILE: fs/compat_ioctl.c:1310:
+				tmp.entry_ct*sizeof(struct unipair)))
 				            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around user_ud->entry_ct
#1255: FILE: fs/compat_ioctl.c:1322:
+		return con_get_unimap(vc, tmp.entry_ct, &(user_ud->entry_ct),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1269: FILE: fs/fuse/dir.c:488:
+	if (nd && (nd->flags & LOOKUP_OPEN)) {
 	    ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1299: FILE: include/acpi/acpi_numa.h:14:
+extern int pxm_to_node(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1299: FILE: include/acpi/acpi_numa.h:14:
+extern int pxm_to_node(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1300: FILE: include/acpi/acpi_numa.h:15:
+extern int node_to_pxm(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1300: FILE: include/acpi/acpi_numa.h:15:
+extern int node_to_pxm(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1325: FILE: include/linux/bootmem.h:62:
+extern void *alloc_bootmem_high_node(pg_data_t *pgdat, unsigned long size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1445: FILE: kernel/time/tick-broadcast.c:247:
+		printk(KERN_ERR "tick-braodcast: ignoring broadcast for "

WARNING:SPLIT_STRING: quoted string split across lines
#1446: FILE: kernel/time/tick-broadcast.c:248:
+		printk(KERN_ERR "tick-braodcast: ignoring broadcast for "
+		       "offline CPU #%d\n", *oncpu);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1448: FILE: kernel/time/tick-broadcast.c:250:
+	} else {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1474: FILE: kernel/time/tick-sched.c:174:
+			printk(KERN_ERR "NOHZ: local_softirq_pending %02x\n",

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1553: FILE: kernel/time/timer_stats.c:239:
+	spinlock_t *lock;

WARNING:MEMORY_BARRIER: memory barrier without comment
#1569: FILE: kernel/time/timer_stats.c:376:
+			smp_mb();

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#1597: FILE: mm/sparse.c:212:
+__attribute__((weak))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: mm/sparse.c:228:
+  ^Imap = alloc_bootmem_high_node(NODE_DATA(nid),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1610: FILE: mm/sparse.c:228:
+  ^Imap = alloc_bootmem_high_node(NODE_DATA(nid),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: mm/sparse.c:228:
+  ^Imap = alloc_bootmem_high_node(NODE_DATA(nid),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1611: FILE: mm/sparse.c:229:
+                       sizeof(struct page) * PAGES_PER_SECTION);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: mm/sparse.c:229:
+  	map = alloc_bootmem_high_node(NODE_DATA(nid),
+                       sizeof(struct page) * PAGES_PER_SECTION);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1611: FILE: mm/sparse.c:229:
+                       sizeof(struct page) * PAGES_PER_SECTION);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around net->dev
#1693: FILE: net/core/net-sysfs.c:459:
+	struct device *dev = &(net->dev);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1713: FILE: net/core/sock.c:211:
+		static int warned = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1717: FILE: net/core/sock.c:215:
+			printk(KERN_INFO "sock_set_timeout: `%s' (pid %d) "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sock_set_timeout', this function's name, in a string
#1717: FILE: net/core/sock.c:215:
+			printk(KERN_INFO "sock_set_timeout: `%s' (pid %d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1718: FILE: net/core/sock.c:216:
+			printk(KERN_INFO "sock_set_timeout: `%s' (pid %d) "
+			       "tries to set negative timeout\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1719: FILE: net/core/sock.c:217:
+^I^I^I        current->comm, current->pid);$

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1781: FILE: net/ipv4/icmp.c:518:
+		if (rt->fl.iif && sysctl_icmp_errors_use_inbound_ifaddr)
 		           ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1782: FILE: net/ipv4/icmp.c:519:
+			dev = dev_get_by_index(rt->fl.iif);
 			                              ^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1784: FILE: net/ipv4/icmp.c:521:
+		if (dev) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1787: FILE: net/ipv4/icmp.c:524:
+		} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2322: FILE: sound/pci/hda/hda_intel.c:979:
 static int __devinit azx_codec_create(struct azx *chip, const char *model)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2336: FILE: sound/pci/hda/hda_intel.c:994:
+	codecs = audio_codecs = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2341: FILE: sound/pci/hda/hda_intel.c:998:
+			struct hda_codec *codec;
+			err = snd_hda_codec_new(chip->bus, c, &codec);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#2393: FILE: sound/usb/usbquirks.h:50:
+	.idVendor = 0x046d,

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#2394: FILE: sound/usb/usbquirks.h:51:
+	.idProduct = 0x08f0,

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#2395: FILE: sound/usb/usbquirks.h:52:
+	.bInterfaceClass = USB_CLASS_AUDIO,

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#2396: FILE: sound/usb/usbquirks.h:53:
+	.bInterfaceSubClass = USB_SUBCLASS_AUDIO_CONTROL

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 40 warnings, 39 checks, 1959 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
