WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#58: FILE: arch/x86/mm/ioremap_64.c:111:
+	/* For plain ioremap() get the existing attributes. Otherwise
+	   check against the existing ones */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#58: FILE: arch/x86/mm/ioremap_64.c:111:
+	   check against the existing ones */

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: arch/x86/mm/ioremap_64.c:195:
+^I^I           p->flags>>20);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#87: FILE: arch/x86/mm/ioremap_64.c:195:
+		           p->flags>>20);
 		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#101: FILE: arch/x86/mm/pat.c:8:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#112: FILE: arch/x86/mm/pat.c:75:
+/* The global memattr list keeps track of caching attributes for specific
+   physical memory areas. Conflicting caching attributes in different

WARNING:TYPO_SPELLING: 'represente' may be misspelled - perhaps 'represents'?
#117: FILE: arch/x86/mm/pat.c:80:
+   have the same cache attributes of course.  Zero attributes are represente
                                                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#124: FILE: arch/x86/mm/pat.c:87:
+   mattr_lock protects the whole list. */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#130: FILE: arch/x86/mm/pat.c:93:
+	struct list_head nd;
 	                 ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: arch/x86/mm/pat.c:97:
+static DEFINE_SPINLOCK(mattr_lock); ^I/* protects memattr list */$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#151: FILE: arch/x86/mm/pat.c:114:
+				return -EINVAL;
+			else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ma)...) over kmalloc(sizeof(struct memattr)...)
#158: FILE: arch/x86/mm/pat.c:121:
+	ma  = kmalloc(sizeof(struct memattr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#166: FILE: arch/x86/mm/pat.c:129:
+	list_for_each_entry(ml, &mattr_list, nd) {
 	                                     ^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#172: FILE: arch/x86/mm/pat.c:135:
+				printk(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: arch/x86/mm/pat.c:135:
+				printk(

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#173: FILE: arch/x86/mm/pat.c:136:
+	KERN_DEBUG "%s:%d conflicting cache attribute %Lx-%Lx %lx<->%lx\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#180: FILE: arch/x86/mm/pat.c:143:
+			list_add(&ma->nd, ml->nd.prev);
 			              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#180: FILE: arch/x86/mm/pat.c:143:
+			list_add(&ma->nd, ml->nd.prev);
 			                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#189: FILE: arch/x86/mm/pat.c:152:
+		list_add_tail(&ma->nd, &mattr_list);
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#204: FILE: arch/x86/mm/pat.c:167:
+	list_for_each_entry(ml, &mattr_list, nd) {
 	                                     ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#207: FILE: arch/x86/mm/pat.c:170:
+				printk(KERN_DEBUG

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#208: FILE: arch/x86/mm/pat.c:171:
+	"%s:%d conflicting cache attributes on free %Lx-%Lx %lx<->%lx\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: arch/x86/mm/pat.c:172:
+			current->comm, current->pid, start, end, attr,ml->attr);
 			                                             ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#210: FILE: arch/x86/mm/pat.c:173:
+			list_del(&ml->nd);
 			              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#218: FILE: arch/x86/mm/pat.c:181:
+		printk(KERN_DEBUG "%s:%d freeing invalid mattr %Lx-%Lx %lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#218: FILE: arch/x86/mm/pat.c:181:
+		printk(KERN_DEBUG "%s:%d freeing invalid mattr %Lx-%Lx %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: arch/x86/mm/pat.c:182:
+		printk(KERN_DEBUG "%s:%d freeing invalid mattr %Lx-%Lx %lx\n",
+			current->comm, current->pid,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: include/asm-x86/pat.h:1:
+#ifndef _ASM_PAT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/x86/mm/ioremap_32.c:35:
+ioremap_change_attr(unsigned long phys_addr, unsigned long size,
+					unsigned long flags)

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/x86/mm/ioremap_32.c:52:
+^I ^I* the page-aligned "last - first" come out right.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: arch/x86/mm/ioremap_32.c:52:
+^I ^I* the page-aligned "last - first" come out right.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#279: FILE: arch/x86/mm/ioremap_32.c:52:
+		/* .. but that's ok, because modulo-2**n arithmetic will make
+	 	* the page-aligned "last - first" come out right.

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/x86/mm/ioremap_32.c:53:
+^I ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: arch/x86/mm/ioremap_32.c:53:
+^I ^I*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: arch/x86/mm/ioremap_32.c:57:
+^I^I                       __pgprot(__PAGE_KERNEL|flags));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: arch/x86/mm/ioremap_32.c:57:
+		err = change_page_attr_addr(vaddr, npages,
+		                       __pgprot(__PAGE_KERNEL|flags));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#284: FILE: arch/x86/mm/ioremap_32.c:57:
+		                       __pgprot(__PAGE_KERNEL|flags));
 		                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/x86/mm/ioremap_32.c:136:
+^I                  flags ? NULL : &flags) < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: arch/x86/mm/ioremap_32.c:225:
+^I^I           p->flags>>20);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#372: FILE: arch/x86/mm/ioremap_32.c:225:
+		           p->flags>>20);
 		                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 24 warnings, 9 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
