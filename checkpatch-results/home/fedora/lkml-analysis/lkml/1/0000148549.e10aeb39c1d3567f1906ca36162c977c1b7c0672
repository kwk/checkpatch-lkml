WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#97: 
 drivers/ide/ide-taskfile.c  |  448 ++++++++++++++++++++-----------------------

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#727: FILE: drivers/ide/falconide.c:48:
+		printk(KERN_ERR "%s: bug\n", __func__);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#935: FILE: drivers/ide/icside.c:416:
 static int __devinit

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1043: FILE: drivers/ide/ide-atapi.c:360:
+		int uptodate;
 		    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1053: FILE: drivers/ide/ide-atapi.c:400:
+		uptodate = drive->pc_callback(drive, dsc);
 		^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1055: FILE: drivers/ide/ide-atapi.c:402:
+		if (uptodate == 0)
 		    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1062: FILE: drivers/ide/ide-atapi.c:409:
+			if (blk_fs_request(rq) == 0 && uptodate <= 0) {
 			                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1066: FILE: drivers/ide/ide-atapi.c:413:
+			ide_complete_rq(drive, uptodate ? 0 : -EIO,
 			                       ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: drivers/ide/ide-cd.c:154:
+	ide_debug_log(IDE_DBG_SENSE, "error_code: 0x%x, sense_key: 0x%x",
+				     sense->error_code, sense->sense_key);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/ide/ide-cd.c:158:
+		ide_debug_log(IDE_DBG_SENSE, "failed cmd: 0x%x",
+					     failed_command->cmd[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1281: FILE: drivers/ide/ide-cd.c:241:
+		ide_debug_log(IDE_DBG_SENSE, "failed_cmd: 0x%x",
+					     failed_command->cmd[0]);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1292: FILE: drivers/ide/ide-cd.c:253:
+	ide_debug_log(IDE_DBG_FUNC, "cmd: 0x%x, uptodate: 0x%x, nsectors: %d",
 	                                        ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1293: FILE: drivers/ide/ide-cd.c:254:
+				    rq->cmd[0], uptodate, nsectors);
 				                ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: drivers/ide/ide-cd.c:254:
+	ide_debug_log(IDE_DBG_FUNC, "cmd: 0x%x, uptodate: 0x%x, nsectors: %d",
+				    rq->cmd[0], uptodate, nsectors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1304: FILE: drivers/ide/ide-cd.c:276:
+				if (ide_end_rq(drive, failed, -EIO,
+						failed->hard_nr_sectors << 9))

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1314: FILE: drivers/ide/ide-cd.c:295:
+	ide_debug_log(IDE_DBG_FUNC, "uptodate: 0x%x, nsectors: %d",
 	                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1315: FILE: drivers/ide/ide-cd.c:296:
+				    uptodate, nsectors);
 				    ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1315: FILE: drivers/ide/ide-cd.c:296:
+	ide_debug_log(IDE_DBG_FUNC, "uptodate: 0x%x, nsectors: %d",
+				    uptodate, nsectors);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1318: FILE: drivers/ide/ide-cd.c:298:
+	if (blk_fs_request(rq) == 0 && uptodate <= 0 && rq->errors == 0)
 	                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1321: FILE: drivers/ide/ide-cd.c:301:
+	ide_complete_rq(drive, uptodate ? 0 : -EIO, nsectors << 9);
 	                       ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1333: FILE: drivers/ide/ide-cd.c:342:
+	ide_debug_log(IDE_DBG_RQ, "stat: 0x%x, good_stat: 0x%x, cmd[0]: 0x%x, "
+				  "rq->cmd_type: 0x%x, err: 0x%x",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1395: FILE: drivers/ide/ide-cd.c:688:
+	ide_debug_log(IDE_DBG_PC, "cmd[0]: 0x%x, write: 0x%x, timeout: %d, "
+				  "cmd_flags: 0x%x",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1407: FILE: drivers/ide/ide-cd.c:774:
+	ide_debug_log(IDE_DBG_PC, "cmd[0]: 0x%x, write: 0x%x",
+				  rq->cmd[0], write);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1432: FILE: drivers/ide/ide-cd.c:813:
+	ide_debug_log(IDE_DBG_PC, "DRQ: stat: 0x%x, thislen: %d",
+				  stat, thislen);

WARNING:SPLIT_STRING: quoted string split across lines
#1443: FILE: drivers/ide/ide-cd.c:879:
+	ide_debug_log(IDE_DBG_PC, "data transfer, rq->cmd_type: 0x%x, "
+				  "ireason: 0x%x",

WARNING:SPLIT_STRING: quoted string split across lines
#1466: FILE: drivers/ide/ide-cd.c:993:
+	ide_debug_log(IDE_DBG_RQ, "rq->cmd[0]: 0x%x, write: 0x%x, "
+				  "secs_per_frame: %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1479: FILE: drivers/ide/ide-cd.c:1031:
+	ide_debug_log(IDE_DBG_PC, "rq->cmd[0]: 0x%x, rq->cmd_type: 0x%x",
+				  rq->cmd[0], rq->cmd_type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: drivers/ide/ide-cd.c:1073:
+	ide_debug_log(IDE_DBG_RQ, "cmd: 0x%x, block: %llu",
+				  rq->cmd[0], (unsigned long long)block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1542: FILE: drivers/ide/ide-cd.c:1193:
+	ide_debug_log(IDE_DBG_PROBE, "cap: %lu, sectors_per_frame: %lu",
+				     *capacity, *sectors_per_frame);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1589: FILE: drivers/ide/ide-cd.c:1427:
+	ide_debug_log(IDE_DBG_PROBE, "curspeed: %u, maxspeed: %u",
+				     curspeed, maxspeed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1610: FILE: drivers/ide/ide-cd.c:1485:
+	ide_debug_log(IDE_DBG_PROBE, "media: 0x%x, atapi_flags: 0x%lx",
+				     drive->media, drive->atapi_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1657: FILE: drivers/ide/ide-cd.c:1986:
+	ide_debug_log(IDE_DBG_PROBE, "driver_req: %s, media: 0x%x",
+				     drive->driver_req, drive->media);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1757: FILE: drivers/ide/ide-disk.c:67:
+		if (drive->mult_count) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1760: FILE: drivers/ide/ide-disk.c:70:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1931: FILE: drivers/ide/ide-disk.c:390:
+	BUG_ON(cmd == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#1931: FILE: drivers/ide/ide-disk.c:390:
+	BUG_ON(cmd == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#2276: FILE: drivers/ide/ide-dma.c:144:
+	if (i == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2278: FILE: drivers/ide/ide-dma.c:146:
+	else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2347: FILE: drivers/ide/ide-eh.c:178:
+			ide_set_handler(drive, &atapi_reset_pollfunc, HZ/20);
 			                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2356: FILE: drivers/ide/ide-eh.c:240:
+			ide_set_handler(drive, &reset_pollfunc, HZ/20);
 			                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2365: FILE: drivers/ide/ide-eh.c:357:
+		__ide_set_handler(drive, &atapi_reset_pollfunc, HZ/20);
 		                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2374: FILE: drivers/ide/ide-eh.c:417:
+	__ide_set_handler(drive, &reset_pollfunc, HZ/20);
 	                                            ^

WARNING:SPLIT_STRING: quoted string split across lines
#2476: FILE: drivers/ide/ide-floppy.c:104:
 			ide_debug_log(IDE_DBG_SENSE, "sense key = %x, asc = %x,"
+				      "ascq = %x", floppy->sense_key,

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2485: FILE: drivers/ide/ide-floppy.c:112:
+		rq->errors = uptodate ? 0 : IDE_DRV_ERROR_GENERAL;
 		             ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#2487: FILE: drivers/ide/ide-floppy.c:114:
+	return uptodate;
 	       ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive->failed_pc"
#2504: FILE: drivers/ide/ide-floppy.c:139:
+	if (drive->failed_pc == NULL &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#2569: FILE: drivers/ide/ide-floppy.c:257:
+		if (drive->failed_pc) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2572: FILE: drivers/ide/ide-floppy.c:260:
+		} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2581: FILE: drivers/ide/ide-floppy.c:267:
+			return ide_stopped;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#2581: FILE: drivers/ide/ide-floppy.c:267:
+		} else

WARNING:SPLIT_STRING: quoted string split across lines
#2641: FILE: drivers/ide/ide-floppy.c:413:
 		ide_debug_log(IDE_DBG_PROBE, "Descriptor %d: %dkB, %d blocks, "
+					     "%d sector size",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2654: FILE: drivers/ide/ide-floppy.c:472:
+		ide_debug_log(IDE_DBG_PROBE, "Descriptor 0 Code: %d",
+					     pc.buf[desc_start + 4] & 0x03);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2908: FILE: drivers/ide/ide-io-std.c:6:
+    defined(CONFIG_PARISC) || defined(CONFIG_PPC) || defined(CONFIG_SPARC)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#3159: FILE: drivers/ide/ide-io.c:87:
+		if (tf->lbal != 0xc4) {
[...]
+		} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3160: FILE: drivers/ide/ide-io.c:88:
+			printk(KERN_ERR "%s: head unload failed!\n",

CHECK:BRACES: Unbalanced braces around else statement
#3163: FILE: drivers/ide/ide-io.c:91:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#3361: FILE: drivers/ide/ide-io.c:243:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3375: FILE: drivers/ide/ide-io.c:250:
+	cmd->nbytes = cmd->nleft = nr_bytes;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3433: FILE: drivers/ide/ide-io.c:308:
+		BUG();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3787: FILE: drivers/ide/ide-iops.c:465:
+			 ide_handler_t *handler, unsigned timeout)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#3843: FILE: drivers/ide/ide-lib.c:46:
+	if (cmd == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#3847: FILE: drivers/ide/ide-lib.c:49:
+		printk(KERN_CONT "0x%02x\n", cmd->tf.command);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#3847: FILE: drivers/ide/ide-lib.c:49:
+		printk(KERN_CONT "0x%02x\n", cmd->tf.command);

CHECK:BRACES: Unbalanced braces around else statement
#4223: FILE: drivers/ide/ide-probe.c:1098:
+	else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->mate"
#4277: FILE: drivers/ide/ide-probe.c:1385:
+		    hwif->mate == NULL || hwif->mate->present == 0) {

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#4431: FILE: drivers/ide/ide-tape.c:472:
+	int err = uptodate ? 0 : IDE_DRV_ERROR_GENERAL;
 	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#4460: FILE: drivers/ide/ide-tape.c:504:
+			uptodate = 0;
 			^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#4481: FILE: drivers/ide/ide-tape.c:533:
+	return uptodate;
 	       ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive->failed_pc"
#4512: FILE: drivers/ide/ide-tape.c:623:
+	if (drive->failed_pc == NULL && pc->c[0] != REQUEST_SENSE)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4686: FILE: drivers/ide/ide-taskfile.c:72:
+		printk(KERN_ERR "%s: multimode not set!\n", drive->name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->nleft == 0'
#5060: FILE: drivers/ide/ide-taskfile.c:330:
+		if (((stat & ATA_DRQ) == 0) ^ (cmd->nleft == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#5521: FILE: drivers/ide/palm_bk3710.c:378:
+	if (request_mem_region(mem->start, mem_size, "palm_bk3710") == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5529: FILE: drivers/ide/palm_bk3710.c:385:
+		printk(KERN_ERR "failed to map IO memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5637: FILE: drivers/ide/pmac.c:1521:
+		writel(pmif->timings[unit] + (write ? 0 : 0x00800000UL),
 			PMAC_IDE_REG(IDE_TIMING_CONFIG));

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#5936: FILE: drivers/ide/scc_pata.c:880:
+static const struct ide_port_info scc_chipset __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#5936: FILE: drivers/ide/scc_pata.c:880:
+static const struct ide_port_info scc_chipset __devinitdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5952: FILE: drivers/ide/scc_pata.c:902:
 static int __devinit scc_init_one(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6279: FILE: drivers/ide/tx4938ide.c:178:
+static void tx4938ide_input_data_swap(ide_drive_t *drive, struct ide_cmd *cmd,
 				void *buf, unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6288: FILE: drivers/ide/tx4938ide.c:190:
+static void tx4938ide_output_data_swap(ide_drive_t *drive, struct ide_cmd *cmd,
 				void *buf, unsigned int len)

CHECK:CAMELCASE: Avoid CamelCase: <TX4939IDE_DMA_Cmd>
#6359: FILE: drivers/ide/tx4939ide.c:306:
+	tx4939ide_writeb(rw, base, TX4939IDE_DMA_Cmd);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <TX4939IDE_Sec_Cnt>
#6369: FILE: drivers/ide/tx4939ide.c:316:
+	tx4939ide_writew(cmd->rq->nr_sectors, base, TX4939IDE_Sec_Cnt);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#6753: FILE: include/linux/ide.h:634:
+	int  (*pc_callback)(struct ide_drive_s *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#6753: FILE: include/linux/ide.h:634:
+	int  (*pc_callback)(struct ide_drive_s *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6763: FILE: include/linux/ide.h:667:
+	void	(*tf_load)(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6763: FILE: include/linux/ide.h:667:
+	void	(*tf_load)(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6764: FILE: include/linux/ide.h:668:
+	void	(*tf_read)(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6764: FILE: include/linux/ide.h:668:
+	void	(*tf_read)(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6770: FILE: include/linux/ide.h:670:
+	void	(*input_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6770: FILE: include/linux/ide.h:670:
+	void	(*input_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#6770: FILE: include/linux/ide.h:670:
+	void	(*input_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6770: FILE: include/linux/ide.h:670:
+	void	(*input_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6772: FILE: include/linux/ide.h:672:
+	void	(*output_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6772: FILE: include/linux/ide.h:672:
+	void	(*output_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#6772: FILE: include/linux/ide.h:672:
+	void	(*output_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6772: FILE: include/linux/ide.h:672:
+	void	(*output_data)(ide_drive_t *, struct ide_cmd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#6783: FILE: include/linux/ide.h:717:
+	int	(*dma_setup)(struct ide_drive_s *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6783: FILE: include/linux/ide.h:717:
+	int	(*dma_setup)(struct ide_drive_s *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#6788: FILE: include/linux/ide.h:722:
+	int	(*dma_timer_expiry)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'irq_handler_t' should also have an identifier name
#6820: FILE: include/linux/ide.h:848:
+	void		(*get_lock)(irq_handler_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#6820: FILE: include/linux/ide.h:848:
+	void		(*get_lock)(irq_handler_t, void *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#6837: FILE: include/linux/ide.h:873:
+typedef void (xfer_func_t)(ide_drive_t *, struct ide_cmd *, void *, unsigned);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lvl' may be better as '(lvl)' to avoid precedence issues
#6849: FILE: include/linux/ide.h:1049:
+#define __ide_debug_log(lvl, fmt, args...)				\
+{									\
+	if (unlikely(drive->debug_mask & lvl))				\
+		printk(KERN_INFO DRV_NAME ": %s: " fmt "\n",		\
+					  __func__, ## args);		\
 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6852: FILE: include/linux/ide.h:1052:
+		printk(KERN_INFO DRV_NAME ": %s: " fmt "\n",		\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6862: FILE: include/linux/ide.h:1092:
+void ide_complete_pm_rq(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#6862: FILE: include/linux/ide.h:1092:
+void ide_complete_pm_rq(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#6880: FILE: include/linux/ide.h:1134:
+unsigned int ide_rq_bytes(struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6881: FILE: include/linux/ide.h:1135:
+int ide_end_rq(ide_drive_t *, struct request *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#6881: FILE: include/linux/ide.h:1135:
+int ide_end_rq(ide_drive_t *, struct request *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#6881: FILE: include/linux/ide.h:1135:
+int ide_end_rq(ide_drive_t *, struct request *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6881: FILE: include/linux/ide.h:1135:
+int ide_end_rq(ide_drive_t *, struct request *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6891: FILE: include/linux/ide.h:1138:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#6891: FILE: include/linux/ide.h:1138:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6891: FILE: include/linux/ide.h:1138:
+void __ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6892: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#6892: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6892: FILE: include/linux/ide.h:1139:
+void ide_set_handler(ide_drive_t *, ide_handler_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6895: FILE: include/linux/ide.h:1141:
+void ide_execute_command(ide_drive_t *, struct ide_cmd *, ide_handler_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6895: FILE: include/linux/ide.h:1141:
+void ide_execute_command(ide_drive_t *, struct ide_cmd *, ide_handler_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_handler_t *' should also have an identifier name
#6895: FILE: include/linux/ide.h:1141:
+void ide_execute_command(ide_drive_t *, struct ide_cmd *, ide_handler_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6895: FILE: include/linux/ide.h:1141:
+void ide_execute_command(ide_drive_t *, struct ide_cmd *, ide_handler_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6905: FILE: include/linux/ide.h:1164:
+void ide_complete_cmd(ide_drive_t *, struct ide_cmd *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6905: FILE: include/linux/ide.h:1164:
+void ide_complete_cmd(ide_drive_t *, struct ide_cmd *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#6905: FILE: include/linux/ide.h:1164:
+void ide_complete_cmd(ide_drive_t *, struct ide_cmd *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#6905: FILE: include/linux/ide.h:1164:
+void ide_complete_cmd(ide_drive_t *, struct ide_cmd *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6906: FILE: include/linux/ide.h:1165:
+int ide_complete_rq(ide_drive_t *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#6906: FILE: include/linux/ide.h:1165:
+int ide_complete_rq(ide_drive_t *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6906: FILE: include/linux/ide.h:1165:
+int ide_complete_rq(ide_drive_t *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6916: FILE: include/linux/ide.h:1175:
+void ide_tf_load(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6916: FILE: include/linux/ide.h:1175:
+void ide_tf_load(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6917: FILE: include/linux/ide.h:1176:
+void ide_tf_read(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6917: FILE: include/linux/ide.h:1176:
+void ide_tf_read(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6921: FILE: include/linux/ide.h:1178:
+void ide_input_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6921: FILE: include/linux/ide.h:1178:
+void ide_input_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#6921: FILE: include/linux/ide.h:1178:
+void ide_input_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6921: FILE: include/linux/ide.h:1178:
+void ide_input_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6922: FILE: include/linux/ide.h:1179:
+void ide_output_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6922: FILE: include/linux/ide.h:1179:
+void ide_output_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#6922: FILE: include/linux/ide.h:1179:
+void ide_output_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6922: FILE: include/linux/ide.h:1179:
+void ide_output_data(ide_drive_t *, struct ide_cmd *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6931: FILE: include/linux/ide.h:1225:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6931: FILE: include/linux/ide.h:1225:
+ide_startstop_t ide_issue_pc(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6934: FILE: include/linux/ide.h:1227:
+ide_startstop_t do_rw_taskfile(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6934: FILE: include/linux/ide.h:1227:
+ide_startstop_t do_rw_taskfile(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6937: FILE: include/linux/ide.h:1229:
+void ide_finish_cmd(ide_drive_t *, struct ide_cmd *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6937: FILE: include/linux/ide.h:1229:
+void ide_finish_cmd(ide_drive_t *, struct ide_cmd *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#6937: FILE: include/linux/ide.h:1229:
+void ide_finish_cmd(ide_drive_t *, struct ide_cmd *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6941: FILE: include/linux/ide.h:1231:
+int ide_raw_taskfile(ide_drive_t *, struct ide_cmd *, u8 *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6941: FILE: include/linux/ide.h:1231:
+int ide_raw_taskfile(ide_drive_t *, struct ide_cmd *, u8 *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#6941: FILE: include/linux/ide.h:1231:
+int ide_raw_taskfile(ide_drive_t *, struct ide_cmd *, u8 *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#6941: FILE: include/linux/ide.h:1231:
+int ide_raw_taskfile(ide_drive_t *, struct ide_cmd *, u8 *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6942: FILE: include/linux/ide.h:1232:
+int ide_no_data_taskfile(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6942: FILE: include/linux/ide.h:1232:
+int ide_no_data_taskfile(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6945: FILE: include/linux/ide.h:1234:
+int ide_taskfile_ioctl(ide_drive_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#6945: FILE: include/linux/ide.h:1234:
+int ide_taskfile_ioctl(ide_drive_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'irq_handler_t' should also have an identifier name
#6967: FILE: include/linux/ide.h:1370:
+	void			(*get_lock)(irq_handler_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#6967: FILE: include/linux/ide.h:1370:
+	void			(*get_lock)(irq_handler_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6989: FILE: include/linux/ide.h:1411:
+void ide_map_sg(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6989: FILE: include/linux/ide.h:1411:
+void ide_map_sg(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6990: FILE: include/linux/ide.h:1412:
+void ide_init_sg_cmd(struct ide_cmd *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#6990: FILE: include/linux/ide.h:1412:
+void ide_init_sg_cmd(struct ide_cmd *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#6999: FILE: include/linux/ide.h:1446:
+int ide_build_sglist(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#6999: FILE: include/linux/ide.h:1446:
+int ide_build_sglist(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7005: FILE: include/linux/ide.h:1451:
+int ide_build_dmatable(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#7005: FILE: include/linux/ide.h:1451:
+int ide_build_dmatable(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7009: FILE: include/linux/ide.h:1453:
+int ide_dma_setup(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#7009: FILE: include/linux/ide.h:1453:
+int ide_dma_setup(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7013: FILE: include/linux/ide.h:1457:
+int ide_dma_sff_timer_expiry(ide_drive_t *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148549.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 122 warnings, 44 checks, 6247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148549.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
