WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#define PTR_OR_BB_ON_TYPE(x, type) (&x[sizeof(char[0 -			\

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#define kfree(x) _kfree(PTR_OR_BB_ON_TYPE((x), struct sk_buff*))

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
fixed, included in the patch below, and also increased sparse warnings, like

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#53: 
                 from /home/roel/dnld/src/kernel/git/linux-2.6/kernel/exit.c:7:

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#55: 
/home/roel/dnld/src/kernel/git/linux-2.6/include/linux/percpu.h:98: warning: dereferencing 'void *' pointer

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: include/linux/kernel.h:530:
+/* If the type of pointer x matches type, force a compilation error,
+   otherwise produce x as a result */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: include/linux/kernel.h:530:
+   otherwise produce x as a result */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#129: FILE: include/linux/kernel.h:531:
+#define PTR_OR_BB_ON_TYPE(x, type) (&x[sizeof(char[0 -			\
+			__builtin_types_compatible_p(typeof(x), type)])])

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#152: FILE: include/linux/slab.h:132:
+void _kfree(const void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 1 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
