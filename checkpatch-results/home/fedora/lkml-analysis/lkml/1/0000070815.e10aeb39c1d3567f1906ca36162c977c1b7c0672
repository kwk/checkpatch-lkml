WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#70: FILE: drivers/ata/Kconfig:258:
+config PATA_ATP867X
+	tristate "ARTOP/Acard ATP867X PATA support"
+	depends on PCI
+	help
+	  This option enables support for ARTOP/Acard ATP867X PATA
+	  controllers.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: drivers/ata/pata_amd.c:311:
+	/* PIO4, MWDMA2, UDMA2 should always be supported regardless of
+	   cable detection result */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/ata/pata_amd.c:311:
+	   cable detection result */

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#146: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: drivers/ata/pata_atp867x.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#171: FILE: drivers/ata/pata_atp867x.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#172: FILE: drivers/ata/pata_atp867x.c:22:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: drivers/ata/pata_atp867x.c:144:
+	if (dp->pci66mhz && mode > ATP867X_IO_DMAMODE_UDMA_0  &&
+	   (pdev->device == PCI_DEVICE_ID_ARTOP_ATP867B ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#323: FILE: drivers/ata/pata_atp867x.c:173:
+		printk(KERN_WARNING "ATP867X: active %dclk is invalid. "

WARNING:SPLIT_STRING: quoted string split across lines
#324: FILE: drivers/ata/pata_atp867x.c:174:
+		printk(KERN_WARNING "ATP867X: active %dclk is invalid. "
+			"Using default 8clk.\n", clk);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#350: FILE: drivers/ata/pata_atp867x.c:200:
+		printk(KERN_WARNING "ATP867X: recover %dclk is invalid. "

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: drivers/ata/pata_atp867x.c:201:
+		printk(KERN_WARNING "ATP867X: recover %dclk is invalid. "
+			"Using default 15clk.\n", clk);

WARNING:TYPO_SPELLING: 'comand' may be misspelled - perhaps 'command'?
#394: FILE: drivers/ata/pata_atp867x.c:244:
+	 * use the same value for comand timing as for PIO timimg
 	                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#415: FILE: drivers/ata/pata_atp867x.c:265:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#426: FILE: drivers/ata/pata_atp867x.c:276:
+		printk(KERN_DEBUG "ATP867X: resource start:len=%lx:%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/ata/pata_atp867x.c:277:
+		printk(KERN_DEBUG "ATP867X: resource start:len=%lx:%lx\n",
+			start, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#436: FILE: drivers/ata/pata_atp867x.c:286:
+	printk(KERN_DEBUG "ATP867X: port[%d] addresses\n"

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#486: FILE: drivers/ata/pata_atp867x.c:336:
+	dp = ap->private_data =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dp"
#488: FILE: drivers/ata/pata_atp867x.c:338:
+	if (dp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#516: FILE: drivers/ata/pata_atp867x.c:366:
+		printk(KERN_DEBUG "ATP867X: set latency timer of device %s"

WARNING:SPLIT_STRING: quoted string split across lines
#517: FILE: drivers/ata/pata_atp867x.c:367:
+		printk(KERN_DEBUG "ATP867X: set latency timer of device %s"
+			" to %d\n", pci_name(pdev), v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#569: FILE: drivers/ata/pata_atp867x.c:419:
+		printk(KERN_DEBUG "ATP867X: iomap[%d]=0x%llx\n", i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: drivers/ata/pata_atp867x.c:420:
+		printk(KERN_DEBUG "ATP867X: iomap[%d]=0x%llx\n", i,
+			(unsigned long long)(host->iomap[i]));

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#582: FILE: drivers/ata/pata_atp867x.c:432:
+		ioaddr->ctl_addr = ioaddr->altstatus_addr
+				 = ATP867X_IO_ALTSTATUS(ap, i);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/ata/pata_atp867x.c:444:
+		ata_port_desc(ap, "cmd 0x%lx ctl 0x%lx",
+			(unsigned long)ioaddr->cmd_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: drivers/ata/pata_atp867x.c:447:
+		ata_port_desc(ap, "bmdma 0x%lx",
+			(unsigned long)ioaddr->bmdma_addr);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#603: FILE: drivers/ata/pata_atp867x.c:453:
+		dev_printk(KERN_ERR, gdev, "no available native port\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: drivers/ata/pata_atp867x.c:468:
+static int atp867x_init_one(struct pci_dev *pdev,
+	const struct pci_device_id *id)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#625: FILE: drivers/ata/pata_atp867x.c:475:
+^I^I.udma_mask ^I= ATA_UDMA6,$

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#634: FILE: drivers/ata/pata_atp867x.c:484:
+		dev_printk(KERN_INFO, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#640: FILE: drivers/ata/pata_atp867x.c:490:
+	printk(KERN_INFO "ATP867X: ATP867 ATA UDMA133 controller (rev %02X)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: drivers/ata/pata_atp867x.c:491:
+	printk(KERN_INFO "ATP867X: ATP867 ATA UDMA133 controller (rev %02X)",
+		pdev->device);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#645: FILE: drivers/ata/pata_atp867x.c:495:
+		dev_printk(KERN_ERR, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: drivers/ata/pata_atp867x.c:496:
+		dev_printk(KERN_ERR, &pdev->dev,
+			"failed to allocate ATA host\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#653: FILE: drivers/ata/pata_atp867x.c:503:
+		dev_printk(KERN_ERR, &pdev->dev, "failed to init host\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/ata/pata_atp867x.c:510:
+	rc = ata_host_activate(host, pdev->irq, ata_sff_interrupt,
+				IRQF_SHARED, &atp867x_sht);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#662: FILE: drivers/ata/pata_atp867x.c:512:
+		dev_printk(KERN_ERR, &pdev->dev, "failed to activate host\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: drivers/ata/pata_atp867x.c:525:
+^I.name ^I^I= DRV_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/ata/pata_atp867x.c:526:
+^I.id_table ^I= atp867x_pci_tbl,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: drivers/ata/pata_atp867x.c:527:
+^I.probe ^I^I= atp867x_init_one,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#735: FILE: drivers/ata/sata_promise.c:210:
+/* First-generation chips need a more restrictive ->check_atapi_dma op,
+   and ->freeze/thaw that ignore the hotplug controls. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#735: FILE: drivers/ata/sata_promise.c:210:
+   and ->freeze/thaw that ignore the hotplug controls. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#757: FILE: drivers/ata/sata_promise.c:383:
+	/* It's not allowed to write to the entire FPDMA_CTLSTAT register
+	   when NCQ is running. So do a byte-sized write to bits 10 and 11. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#757: FILE: drivers/ata/sata_promise.c:383:
+	   when NCQ is running. So do a byte-sized write to bits 10 and 11. */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#772: FILE: drivers/ata/sata_promise.c:398:
+	udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#792: FILE: drivers/ata/sata_promise.c:418:
+		udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#888: FILE: drivers/ata/sata_promise.c:811:
+	udelay(100);

CHECK:BRACES: braces {} should be used on all arms of this statement
#919: FILE: drivers/ata/sata_promise.c:952:
+	if (host->ports[0]->flags & PDC_FLAG_GEN_II) {
[...]
-		writel(hotplug_status | 0xff, host_mmio + hotplug_offset);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#931: FILE: drivers/ata/sata_promise.c:958:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 30 warnings, 18 checks, 849 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
