CHECK:SPACING: No space is necessary after a cast
#56: FILE: drivers/pci/intel-iommu.h:164:
+#define DMA_GCMD_IRE (((u32) 1) << 25)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: drivers/pci/intel-iommu.h:300:
+extern int dmar_enable_qi(struct intel_iommu *iommu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: drivers/pci/intel-iommu.h:301:
+extern void qi_global_iec(struct intel_iommu *iommu);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: drivers/pci/intr_remapping.c:53:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#169: FILE: drivers/pci/intr_remapping.c:59:
+	ir_table = iommu->ir_table = kzalloc(sizeof(struct ir_table),

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*iommu->ir_table)...) over kzalloc(sizeof(struct ir_table)...)
#169: FILE: drivers/pci/intr_remapping.c:59:
+	ir_table = iommu->ir_table = kzalloc(sizeof(struct ir_table),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: drivers/pci/intr_remapping.c:68:
+		printk(KERN_ERR "failed to allocate pages of order %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#205: FILE: drivers/pci/intr_remapping.c:95:
+			printk(KERN_INFO "DRHD %Lx: EIM not supported by DRHD, "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#205: FILE: drivers/pci/intr_remapping.c:95:
+			printk(KERN_INFO "DRHD %Lx: EIM not supported by DRHD, "

WARNING:SPLIT_STRING: quoted string split across lines
#206: FILE: drivers/pci/intr_remapping.c:96:
+			printk(KERN_INFO "DRHD %Lx: EIM not supported by DRHD, "
+			       " ecap %Lx\n", drhd->reg_base_addr, iommu->ecap);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#206: FILE: drivers/pci/intr_remapping.c:96:
+			       " ecap %Lx\n", drhd->reg_base_addr, iommu->ecap);

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: drivers/pci/intr_remapping.c:107:
+		struct intel_iommu *iommu = drhd->iommu;
+		ret = dmar_enable_qi(iommu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#220: FILE: drivers/pci/intr_remapping.c:110:
+			printk(KERN_ERR "DRHD %Lx: failed to enable queued, "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#220: FILE: drivers/pci/intr_remapping.c:110:
+			printk(KERN_ERR "DRHD %Lx: failed to enable queued, "

WARNING:SPLIT_STRING: quoted string split across lines
#221: FILE: drivers/pci/intr_remapping.c:111:
+			printk(KERN_ERR "DRHD %Lx: failed to enable queued, "
+			       " invalidation, ecap %Lx, ret %d\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#221: FILE: drivers/pci/intr_remapping.c:111:
+			       " invalidation, ecap %Lx, ret %d\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: include/linux/dmar.h:35:
+^Istruct^Ipci_dev **devices; ^I/* target device array^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: include/linux/dmar.h:37:
+^Iu8^Iignored:1; ^I^I/* ignore drhd^I^I*/$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#286: FILE: include/linux/dmar.h:47:
+extern int dmar_table_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#287: FILE: include/linux/dmar.h:48:
+extern int early_dmar_detect(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: include/linux/dmar.h:49:
+extern int dmar_dev_scope_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: include/linux/dmar.h:52:
+extern void detect_intel_iommu(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#293: FILE: include/linux/dmar.h:54:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: include/linux/dmar.h:55:
+extern int parse_ioapics_under_ir(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/linux/dmar.h:56:
+extern int alloc_iommu(struct dmar_drhd_unit *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dmar_drhd_unit *' should also have an identifier name
#295: FILE: include/linux/dmar.h:56:
+extern int alloc_iommu(struct dmar_drhd_unit *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:RETURN_VOID: void function return statements are not generally useful
#300: FILE: include/linux/dmar.h:61:
+	return;
+}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/linux/dmar.h:71:
+extern int enable_intr_remapping(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#310: FILE: include/linux/dmar.h:71:
+extern int enable_intr_remapping(int);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#315: FILE: include/linux/dmar.h:76:
+^I^I^I__u64^Ipresent ^I: 1,$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#391: FILE: include/linux/dmar.h:133:
+extern int intel_iommu_init(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#510: FILE: drivers/pci/dmar.c:467:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256369.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 16 checks, 435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256369.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
