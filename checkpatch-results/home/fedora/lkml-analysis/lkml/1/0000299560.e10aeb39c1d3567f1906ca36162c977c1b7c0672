WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#27: FILE: fs/logfs/dir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#28: FILE: fs/logfs/dir.c:2:
+ * fs/logfs/dir.c	- directory-related code

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#36: FILE: fs/logfs/dir.c:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#41: FILE: fs/logfs/dir.c:15:
+ * created/removed/altered in seperate operations.  Therefore we need to do
                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: fs/logfs/dir.c:87:
+static int write_dir(struct inode *dir, struct logfs_disk_dentry *dd,
+		loff_t pos, struct logfs_transaction *ta)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#116: FILE: fs/logfs/dir.c:90:
+			WF_SYNC|WF_LOCK, ta, NULL);
 			       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#121: FILE: fs/logfs/dir.c:95:
+	return __logfs_write_inode(inode, WF_LOCK|WF_SYNC);
 	                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: fs/logfs/dir.c:106:
+static int __logfs_dir_walk(struct inode *dir, struct dentry *dentry,
+		dir_callback handler, void *arg,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#149: FILE: fs/logfs/dir.c:123:
+		BUG_ON(dd->namelen == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: fs/logfs/dir.c:138:
+static int logfs_dir_walk(struct inode *dir, struct dentry *dentry,
+		dir_callback handler, void *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: fs/logfs/dir.c:147:
+static int logfs_lookup_handler(struct inode *dir, struct dentry *dentry,
+		struct logfs_disk_dentry *dd, loff_t pos, void *arg)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#184: FILE: fs/logfs/dir.c:158:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: fs/logfs/dir.c:158:
+static struct dentry *logfs_lookup(struct inode *dir, struct dentry *dentry,
+		struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: fs/logfs/dir.c:164:
+static int logfs_unlink_handler(struct inode *dir, struct dentry *dentry,
+		struct logfs_disk_dentry *dd, loff_t pos, void *ta)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#229: FILE: fs/logfs/dir.c:203:
+	inode->i_ctime = dir->i_ctime = dir->i_mtime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#238: FILE: fs/logfs/dir.c:212:
+		printk(KERN_ERR"LOGFS: unable to delete inode\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#238: FILE: fs/logfs/dir.c:212:
+		printk(KERN_ERR"LOGFS: unable to delete inode\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: fs/logfs/dir.c:227:
+static int logfs_empty_handler(struct inode *dir, struct dentry *dentry,
+		struct logfs_disk_dentry *dd, loff_t pos, void *arg)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: fs/logfs/dir.c:248:
+ * way to combine the two copies */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#283: FILE: fs/logfs/dir.c:257:
+	BUG_ON(pos < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#295: FILE: fs/logfs/dir.c:269:
+		BUG_ON(dd.namelen == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: fs/logfs/dir.c:272:
+		if (filldir(buf, dd.name, be16_to_cpu(dd.namelen), pos,
+					be64_to_cpu(dd.ino), dd.type))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: fs/logfs/dir.c:311:
+static int logfs_write_dir(struct inode *dir, struct dentry *dentry,
+		struct inode *inode, struct logfs_transaction *ta)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#350: FILE: fs/logfs/dir.c:324:
+	dir->i_ctime = dir->i_mtime = CURRENT_TIME;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: fs/logfs/dir.c:336:
+static int __logfs_create(struct inode *dir, struct dentry *dentry,
+		struct inode *inode, const char *dest, long destlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: fs/logfs/dir.c:356:
+		ret = logfs_inode_write(inode, dest, destlen, 0,
+				WF_SYNC|WF_LOCK, ta, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#382: FILE: fs/logfs/dir.c:356:
+				WF_SYNC|WF_LOCK, ta, NULL);
 				       ^

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#386: FILE: fs/logfs/dir.c:360:
+		/* creat/mkdir/mknod */
 		   ^^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#396: FILE: fs/logfs/dir.c:370:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#414: FILE: fs/logfs/dir.c:388:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#432: FILE: fs/logfs/dir.c:406:
+	 * correct for mknod, creat, etc.?  Smells like the vfs *should*
 	                      ^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#446: FILE: fs/logfs/dir.c:420:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: fs/logfs/dir.c:420:
+static int logfs_create(struct inode *dir, struct dentry *dentry, int mode,
+		struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: fs/logfs/dir.c:436:
+static int logfs_mknod(struct inode *dir, struct dentry *dentry, int mode,
+		dev_t rdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: fs/logfs/dir.c:453:
+static int logfs_symlink(struct inode *dir, struct dentry *dentry,
+		const char *target)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#487: FILE: fs/logfs/dir.c:461:
+	inode = logfs_new_inode(dir, S_IFLNK | S_IRWXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#497: FILE: fs/logfs/dir.c:471:
+static int logfs_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                              ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: fs/logfs/dir.c:477:
+static int logfs_link(struct dentry *old_dentry, struct inode *dir,
+		struct dentry *dentry)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#510: FILE: fs/logfs/dir.c:484:
+	inode->i_ctime = dir->i_ctime = dir->i_mtime = CURRENT_TIME;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: fs/logfs/dir.c:492:
+static int logfs_nop_handler(struct inode *dir, struct dentry *dentry,
+		struct logfs_disk_dentry *dd, loff_t pos, void *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: fs/logfs/dir.c:498:
+static inline int logfs_get_dd(struct inode *dir, struct dentry *dentry,
+		struct logfs_disk_dentry *dd, loff_t *pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: fs/logfs/dir.c:508:
+static int logfs_rename_local(struct inode *dir, struct dentry *old_dentry,
+		struct dentry *new_dentry)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: fs/logfs/dir.c:523:
+static int logfs_delete_dd(struct inode *dir, struct logfs_disk_dentry *dd,
+		loff_t pos, struct logfs_transaction *ta)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#564: FILE: fs/logfs/dir.c:538:
+	dir->i_ctime = dir->i_mtime = CURRENT_TIME;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: fs/logfs/dir.c:598:
+static int logfs_replace_inode(struct inode *dir, struct dentry *dentry,
+		struct logfs_disk_dentry *dd, struct inode *inode,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#658: FILE: fs/logfs/dir.c:632:
+	BUG_ON(isdir != S_ISDIR(new_inode->i_mode));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#729: FILE: fs/logfs/dir.c:703:
+		printk(KERN_INFO"LogFS: delete unmapped inode #%llx\n", ino);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#729: FILE: fs/logfs/dir.c:703:
+		printk(KERN_INFO"LogFS: delete unmapped inode #%llx\n", ino);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#737: FILE: fs/logfs/dir.c:711:
+		iput(inode);
 		^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#747: FILE: fs/logfs/dir.c:721:
+		printk(KERN_INFO"LogFS: delete unbacked dentry (%llx, %llx)\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#747: FILE: fs/logfs/dir.c:721:
+		printk(KERN_INFO"LogFS: delete unbacked dentry (%llx, %llx)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: fs/logfs/dir.c:722:
+		printk(KERN_INFO"LogFS: delete unbacked dentry (%llx, %llx)\n",
+				ino, pos);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#756: FILE: fs/logfs/dir.c:730:
+		iput(inode);
 		^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#786: FILE: fs/logfs/dir.c:760:
+};
+const struct file_operations logfs_dir_fops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 33 checks, 765 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
