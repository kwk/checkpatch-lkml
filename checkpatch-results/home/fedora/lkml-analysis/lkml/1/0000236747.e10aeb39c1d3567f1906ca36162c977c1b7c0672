WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#169: 
Note that my v8 now implements support for readers in any execution context :

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#170: 
- preemptable
  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#183: 
Allow both preemptable and non-preemptable thread readers and writers.
           ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#184: 
Allow preemptable readers and writers to sleep using a wait queue. Use two bits
      ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#268: 
This writer biased rwlock writer subscribes to the preemptable lock, which
                                                   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#269: 
locks out the preemptable reader threads. It waits for all the preemptable
              ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#269: 
locks out the preemptable reader threads. It waits for all the preemptable
                                                               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#283: 
lock. If not, it increments the reader count for its context (preemptable
                                                              ^^^^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#358: 
#                _------=> CPU#            

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#359: 
#               / _-----=> irqs-off        

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#360: 
#              | / _----=> need-resched    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#361: 
#              || / _---=> hardirq/softirq 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#362: 
#              ||| / _--=> preempt-depth   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#363: 
#              |||| /                      

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#364: 
#              |||||     delay             

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#365: 
#  cmd     pid ||||| time  |   caller      

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#366: 
#     \   /    |||||   \   |   /           

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#383: 
#                _------=> CPU#            

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#384: 
#               / _-----=> irqs-off        

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#385: 
#              | / _----=> need-resched    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#386: 
#              || / _---=> hardirq/softirq 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#387: 
#              ||| / _--=> preempt-depth   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#388: 
#              |||| /                      

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#389: 
#              |||||     delay             

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#390: 
#  cmd     pid ||||| time  |   caller      

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#391: 
#     \   /    |||||   \   |   /           

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#415: 
Note : preemptable critical sections has been implemented after the previous
       ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#445: 
** Single preemptable reader test, no contention **
          ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#447: 
Note that wbias rwlock support preemptable readers. Standard rwlocks disables
                               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#519: 
* Preemptable writers
  ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#549: 
* Preemptable readers
  ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#623: FILE: include/linux/wbias-rwlock.h:1:
+#ifndef _LINUX_WBIAS_RWLOCK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#639: FILE: include/linux/wbias-rwlock.h:17:
+#include <asm/atomic.h>

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#660: FILE: include/linux/wbias-rwlock.h:38:
+ * PTHREAD stands for preemptable thread.
                       ^^^^^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#745: FILE: include/linux/wbias-rwlock.h:123:
+typedef struct wbias_rwlock {

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#747: FILE: include/linux/wbias-rwlock.h:125:
+	wait_queue_head_t wq_read;	/* Preemptable readers wait queue */
 	                          	   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#748: FILE: include/linux/wbias-rwlock.h:126:
+	wait_queue_head_t wq_write;	/* Preemptable writers wait queue */
 	                           	   ^^^^^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#753: FILE: include/linux/wbias-rwlock.h:131:
+#define __WBIAS_RWLOCK_UNLOCKED(x)					\
+	{								\
+		.v = __RAW_WBIAS_RWLOCK_UNLOCKED,			\
+		.wq_read = __WAIT_QUEUE_HEAD_INITIALIZER((x).wq_read),	\
+		.wq_write = __WAIT_QUEUE_HEAD_INITIALIZER((x).wq_write),\
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#760: FILE: include/linux/wbias-rwlock.h:138:
+#define DEFINE_WBIAS_RWLOCK(x)	wbias_rwlock_t x = __WBIAS_RWLOCK_UNLOCKED(x)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#765: FILE: include/linux/wbias-rwlock.h:143:
+extern int _wbias_read_lock_slow(wbias_rwlock_t *rwlock,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: include/linux/wbias-rwlock.h:144:
+extern int _wbias_read_lock_slow(wbias_rwlock_t *rwlock,
+		long v, long roffset, long rmask, long wmask, int trylock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#767: FILE: include/linux/wbias-rwlock.h:145:
+extern int _wbias_read_lock_slow_preempt(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: include/linux/wbias-rwlock.h:146:
+extern int _wbias_read_lock_slow_preempt(wbias_rwlock_t *rwlock,
+		long v, long roffset, long rmask, long wmask, int trylock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: include/linux/wbias-rwlock.h:147:
+extern void _wbias_write_lock_irq_slow(wbias_rwlock_t *rwlock, long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#770: FILE: include/linux/wbias-rwlock.h:148:
+extern int _wbias_write_trylock_irq_else_subscribe_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: include/linux/wbias-rwlock.h:149:
+extern int _wbias_write_trylock_irq_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#772: FILE: include/linux/wbias-rwlock.h:150:
+extern int _wbias_write_trylock_irq_subscribed_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: include/linux/wbias-rwlock.h:151:
+extern int _wbias_write_trylock_irq_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: include/linux/wbias-rwlock.h:152:
+extern void _wbias_write_lock_bh_slow(wbias_rwlock_t *rwlock, long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#775: FILE: include/linux/wbias-rwlock.h:153:
+extern int _wbias_write_trylock_bh_else_subscribe_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: include/linux/wbias-rwlock.h:154:
+extern int _wbias_write_trylock_bh_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#777: FILE: include/linux/wbias-rwlock.h:155:
+extern int _wbias_write_trylock_bh_subscribed_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#778: FILE: include/linux/wbias-rwlock.h:156:
+extern int _wbias_write_trylock_bh_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#779: FILE: include/linux/wbias-rwlock.h:157:
+extern void _wbias_write_lock_atomic_slow(wbias_rwlock_t *rwlock, long v);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: include/linux/wbias-rwlock.h:160:
+_wbias_write_trylock_atomic_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#783: FILE: include/linux/wbias-rwlock.h:161:
+extern int _wbias_write_trylock_atomic_subscribed_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: include/linux/wbias-rwlock.h:162:
+extern int _wbias_write_trylock_atomic_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#785: FILE: include/linux/wbias-rwlock.h:163:
+extern void _wbias_write_lock_slow(wbias_rwlock_t *rwlock, long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#786: FILE: include/linux/wbias-rwlock.h:164:
+extern int _wbias_write_trylock_else_subscribe_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: include/linux/wbias-rwlock.h:165:
+extern int _wbias_write_trylock_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#788: FILE: include/linux/wbias-rwlock.h:166:
+extern int _wbias_write_trylock_subscribed_slow(wbias_rwlock_t *rwlock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: include/linux/wbias-rwlock.h:167:
+extern int _wbias_write_trylock_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#790: FILE: include/linux/wbias-rwlock.h:168:
+extern void _wbias_rwlock_wakeup(wbias_rwlock_t *rwlock, long v);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#822: FILE: include/linux/wbias-rwlock.h:200:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#827: FILE: include/linux/wbias-rwlock.h:205:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#847: FILE: include/linux/wbias-rwlock.h:225:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#861: FILE: include/linux/wbias-rwlock.h:239:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, HARDIRQ_ROFFSET);
+	if (likely(!v))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: include/linux/wbias-rwlock.h:242:
+	_wbias_read_lock_slow(rwlock, v,
+		HARDIRQ_ROFFSET, HARDIRQ_RMASK, HARDIRQ_WMASK, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#870: FILE: include/linux/wbias-rwlock.h:248:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, HARDIRQ_ROFFSET);
+	if (likely(!v))

WARNING:LINE_SPACING: Missing a blank line after declarations
#879: FILE: include/linux/wbias-rwlock.h:257:
+	long v;
+	v = atomic_long_sub_return(HARDIRQ_ROFFSET, &rwlock->v);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#883: FILE: include/linux/wbias-rwlock.h:261:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#891: FILE: include/linux/wbias-rwlock.h:269:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, SOFTIRQ_ROFFSET);
+	if (likely(!v))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#894: FILE: include/linux/wbias-rwlock.h:272:
+	_wbias_read_lock_slow(rwlock, v,
+		SOFTIRQ_ROFFSET, SOFTIRQ_RMASK, SOFTIRQ_WMASK, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#900: FILE: include/linux/wbias-rwlock.h:278:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, SOFTIRQ_ROFFSET);
+	if (likely(!v))

WARNING:LINE_SPACING: Missing a blank line after declarations
#909: FILE: include/linux/wbias-rwlock.h:287:
+	long v;
+	v = atomic_long_sub_return(SOFTIRQ_ROFFSET, &rwlock->v);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#913: FILE: include/linux/wbias-rwlock.h:291:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#921: FILE: include/linux/wbias-rwlock.h:299:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, NPTHREAD_ROFFSET);
+	if (likely(!v))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: include/linux/wbias-rwlock.h:302:
+	_wbias_read_lock_slow(rwlock, v,
+		NPTHREAD_ROFFSET, NPTHREAD_RMASK,

WARNING:LINE_SPACING: Missing a blank line after declarations
#931: FILE: include/linux/wbias-rwlock.h:309:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, NPTHREAD_ROFFSET);
+	if (likely(!v))

WARNING:LINE_SPACING: Missing a blank line after declarations
#941: FILE: include/linux/wbias-rwlock.h:319:
+	long v;
+	v = atomic_long_sub_return(NPTHREAD_ROFFSET, &rwlock->v);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#945: FILE: include/linux/wbias-rwlock.h:323:
+
+

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#947: FILE: include/linux/wbias-rwlock.h:325:
+ * Called from preemptable thread context.
                ^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#953: FILE: include/linux/wbias-rwlock.h:331:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, PTHREAD_ROFFSET);
+	if (likely(!v))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: include/linux/wbias-rwlock.h:334:
+	_wbias_read_lock_slow_preempt(rwlock, v,
+		PTHREAD_ROFFSET, PTHREAD_RMASK,

WARNING:LINE_SPACING: Missing a blank line after declarations
#963: FILE: include/linux/wbias-rwlock.h:341:
+	long v = atomic_long_cmpxchg(&rwlock->v, 0, PTHREAD_ROFFSET);
+	if (likely(!v))

WARNING:LINE_SPACING: Missing a blank line after declarations
#973: FILE: include/linux/wbias-rwlock.h:351:
+	long v;
+	v = atomic_long_sub_return(PTHREAD_ROFFSET, &rwlock->v);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#977: FILE: include/linux/wbias-rwlock.h:355:
+
+

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#989: FILE: include/linux/wbias-rwlock.h:367:
+	else if (in_atomic())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#1001: FILE: include/linux/wbias-rwlock.h:379:
+	else if (in_atomic())

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#1013: FILE: include/linux/wbias-rwlock.h:391:
+	else if (in_atomic())

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1021: FILE: include/linux/wbias-rwlock.h:399:
+
+

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1030: FILE: include/linux/wbias-rwlock.h:408:
+ * If used in preemptable context, safe against :
               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1031: FILE: include/linux/wbias-rwlock.h:409:
+ * - irq/softirq/non-preemptable/preemptable readers.
                                  ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1082: FILE: include/linux/wbias-rwlock.h:460:
+ * If used in preemptable context, safe against :
               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1106: FILE: include/linux/wbias-rwlock.h:484:
+ * If used in preemptable context, safe against :
               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1107: FILE: include/linux/wbias-rwlock.h:485:
+ * - non-preemptable and preemptable thread readers.
                          ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1127: FILE: include/linux/wbias-rwlock.h:505:
+ * Safe against preemptable thread readers.
                 ^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1152: FILE: include/linux/wbias-rwlock.h:530:
+	long v;
+	v = atomic_long_sub_return(PTHREAD_WOFFSET | NPTHREAD_WOFFSET,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1153: FILE: include/linux/wbias-rwlock.h:531:
+	v = atomic_long_sub_return(PTHREAD_WOFFSET | NPTHREAD_WOFFSET,
+		&rwlock->v);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1166: FILE: include/linux/wbias-rwlock.h:544:
+	long v;
+	v = atomic_long_sub_return(PTHREAD_WOFFSET, &rwlock->v);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1194: FILE: lib/wbias-rwlock.c:1:
+/*

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1211: FILE: lib/wbias-rwlock.c:18:
+ * This writer biased rwlock writer subscribes to the preemptable lock, which
                                                       ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1212: FILE: lib/wbias-rwlock.c:19:
+ * locks out the preemptable reader threads. It waits for all the preemptable
                  ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1212: FILE: lib/wbias-rwlock.c:19:
+ * locks out the preemptable reader threads. It waits for all the preemptable
                                                                   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1226: FILE: lib/wbias-rwlock.c:33:
+ * lock. If not, it increments the reader count for its context (preemptable
                                                                  ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: lib/wbias-rwlock.c:57:
+static long _wbias_write_lock_ctx_wait(wbias_rwlock_t *rwlock,
+		long v, long rmask, long wmask, long woffset, long wsuboffset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: lib/wbias-rwlock.c:69:
+		newv = atomic_long_cmpxchg(&rwlock->v,
+				v, v - wsuboffset + woffset);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1265: FILE: lib/wbias-rwlock.c:72:
+			break;
+		else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1269: FILE: lib/wbias-rwlock.c:76:
+	printk_dbg("lib writer got in with v %lX, new %lX, rmask %lX\n",
+		v, v - wsuboffset + woffset, rmask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1277: FILE: lib/wbias-rwlock.c:84:
+static void rwlock_wait(wbias_rwlock_t *rwlock, long v, long mask,
+		long mask_fill, int check_mask_fill, int write)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1301: FILE: lib/wbias-rwlock.c:108:
+	wq_active = waitqueue_active(&rwlock->wq_read)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1302: FILE: lib/wbias-rwlock.c:109:
+	wq_active = waitqueue_active(&rwlock->wq_read)
+			|| waitqueue_active(&rwlock->wq_write);

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1302: FILE: lib/wbias-rwlock.c:109:
+			|| waitqueue_active(&rwlock->wq_write);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: lib/wbias-rwlock.c:115:
+		add_wait_queue_exclusive_locked(&rwlock->wq_write,
+			&wbias_rwlock_wq);

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1329: FILE: lib/wbias-rwlock.c:136:
+	wq_active = waitqueue_active(&rwlock->wq_read)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1330: FILE: lib/wbias-rwlock.c:137:
+	wq_active = waitqueue_active(&rwlock->wq_read)
+			|| waitqueue_active(&rwlock->wq_write);

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1330: FILE: lib/wbias-rwlock.c:137:
+			|| waitqueue_active(&rwlock->wq_write);

WARNING:TYPO_SPELLING: 'concurency' may be misspelled - perhaps 'concurrency'?
#1346: FILE: lib/wbias-rwlock.c:153:
+ * spin if there is concurency to win the cmpxchg. It could happen if, for
                     ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: lib/wbias-rwlock.c:165:
+int _wbias_read_lock_slow(wbias_rwlock_t *rwlock,
+		long v, long roffset, long rmask, long wmask, int trylock)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1364: FILE: lib/wbias-rwlock.c:171:
+			if (!trylock) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1369: FILE: lib/wbias-rwlock.c:176:
+			} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1376: FILE: lib/wbias-rwlock.c:183:
+			break;
+		else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1385: FILE: lib/wbias-rwlock.c:192:
+int _wbias_read_lock_slow_preempt(wbias_rwlock_t *rwlock,
+		long v, long roffset, long rmask, long wmask, int trylock)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1397: FILE: lib/wbias-rwlock.c:204:
+			if (!trylock) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1402: FILE: lib/wbias-rwlock.c:209:
+			} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1409: FILE: lib/wbias-rwlock.c:216:
+			break;
+		else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1420: FILE: lib/wbias-rwlock.c:227:
+static long _wbias_write_lock_ctx_wait_preempt(wbias_rwlock_t *rwlock,
+		long v, long rmask)

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1441: FILE: lib/wbias-rwlock.c:248:
+ * held because it expects to the the woffset bit as a one-hot.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1444: FILE: lib/wbias-rwlock.c:251:
+static void _wbias_write_lock_ctx_exclusive(wbias_rwlock_t *rwlock,
+		long rmask, long woffset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: lib/wbias-rwlock.c:262:
+	printk_dbg("lib writer got in with v %lX, woffset %lX, rmask %lX\n",
+		v, woffset, rmask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1463: FILE: lib/wbias-rwlock.c:270:
+static long _wbias_write_subscribe(wbias_rwlock_t *rwlock, long v,
+		long wmask, long woffset)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1477: FILE: lib/wbias-rwlock.c:284:
+			break;
+		else

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1491: FILE: lib/wbias-rwlock.c:298:
+	/* lock out preemptable threads */
 	            ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1495: FILE: lib/wbias-rwlock.c:302:
+	 * continue when no preemptable reader threads left, but keep
 	                    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1502: FILE: lib/wbias-rwlock.c:309:
+	 * preemptable thread lock out and subscribe for non-preemptable thread
 	   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#1503: FILE: lib/wbias-rwlock.c:310:
+	 * lock out. Preemptable threads must check for NPTHREAD_WMASK and
 	             ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1508: FILE: lib/wbias-rwlock.c:315:
+	v = _wbias_write_subscribe(rwlock, v, NPTHREAD_WMASK,
+		NPTHREAD_WOFFSET - PTHREAD_WOFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1512: FILE: lib/wbias-rwlock.c:319:
+	_wbias_write_lock_ctx_wait(rwlock, v, NPTHREAD_RMASK,
+		WRITER_MUTEX, WRITER_MUTEX, NPTHREAD_WOFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1534: FILE: lib/wbias-rwlock.c:341:
+int _wbias_write_trylock_irq_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1541: FILE: lib/wbias-rwlock.c:348:
+	/* lock out preemptable and non-preemptable threads */
 	            ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1543: FILE: lib/wbias-rwlock.c:350:
+	v = _wbias_write_subscribe(rwlock, v,
+		PTHREAD_WMASK | NPTHREAD_WMASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1551: FILE: lib/wbias-rwlock.c:358:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - (PTHREAD_WOFFSET | NPTHREAD_WOFFSET)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1562: FILE: lib/wbias-rwlock.c:369:
+int _wbias_write_trylock_irq_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1574: FILE: lib/wbias-rwlock.c:381:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - (PTHREAD_WOFFSET | NPTHREAD_WOFFSET)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1584: FILE: lib/wbias-rwlock.c:391:
+
+

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1593: FILE: lib/wbias-rwlock.c:400:
+	/* lock out preemptable threads */
 	            ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1597: FILE: lib/wbias-rwlock.c:404:
+	 * continue when no preemptable reader threads left, but keep
 	                    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1604: FILE: lib/wbias-rwlock.c:411:
+	 * preemptable thread lock out and subscribe for non-preemptable thread
 	   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#1605: FILE: lib/wbias-rwlock.c:412:
+	 * lock out. Preemptable threads must check for NPTHREAD_WMASK and
 	             ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1610: FILE: lib/wbias-rwlock.c:417:
+	v = _wbias_write_subscribe(rwlock, v, NPTHREAD_WMASK,
+		NPTHREAD_WOFFSET - PTHREAD_WOFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1614: FILE: lib/wbias-rwlock.c:421:
+	_wbias_write_lock_ctx_wait(rwlock, v, NPTHREAD_RMASK,
+		WRITER_MUTEX, WRITER_MUTEX, NPTHREAD_WOFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1632: FILE: lib/wbias-rwlock.c:439:
+int _wbias_write_trylock_bh_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1639: FILE: lib/wbias-rwlock.c:446:
+	/* lock out preemptable and non-preemptable threads */
 	            ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1641: FILE: lib/wbias-rwlock.c:448:
+	v = _wbias_write_subscribe(rwlock, v,
+		PTHREAD_WMASK | NPTHREAD_WMASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1648: FILE: lib/wbias-rwlock.c:455:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - (PTHREAD_WOFFSET | NPTHREAD_WOFFSET)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: lib/wbias-rwlock.c:465:
+int _wbias_write_trylock_bh_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1669: FILE: lib/wbias-rwlock.c:476:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - (PTHREAD_WOFFSET | NPTHREAD_WOFFSET)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1686: FILE: lib/wbias-rwlock.c:493:
+	/* lock out preemptable threads */
 	            ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1690: FILE: lib/wbias-rwlock.c:497:
+	 * continue when no preemptable reader threads left, but keep
 	                    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1697: FILE: lib/wbias-rwlock.c:504:
+	 * preemptable thread lock out and subscribe for non-preemptable thread
 	   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Preemptable' may be misspelled - perhaps 'Preemptible'?
#1698: FILE: lib/wbias-rwlock.c:505:
+	 * lock out. Preemptable threads must check for NPTHREAD_WMASK and
 	             ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1703: FILE: lib/wbias-rwlock.c:510:
+	v = _wbias_write_subscribe(rwlock, v, NPTHREAD_WMASK,
+		NPTHREAD_WOFFSET - PTHREAD_WOFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1707: FILE: lib/wbias-rwlock.c:514:
+	_wbias_write_lock_ctx_wait(rwlock, v, NPTHREAD_RMASK,
+		WRITER_MUTEX, WRITER_MUTEX, NPTHREAD_WOFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1721: FILE: lib/wbias-rwlock.c:528:
+int _wbias_write_trylock_atomic_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1727: FILE: lib/wbias-rwlock.c:534:
+	/* lock out preemptable and non-preemptable threads */
 	            ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1729: FILE: lib/wbias-rwlock.c:536:
+	v = _wbias_write_subscribe(rwlock, v,
+		PTHREAD_WMASK | NPTHREAD_WMASK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1735: FILE: lib/wbias-rwlock.c:542:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - (PTHREAD_WOFFSET | NPTHREAD_WOFFSET) + WRITER_MUTEX)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1743: FILE: lib/wbias-rwlock.c:550:
+int _wbias_write_trylock_atomic_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1752: FILE: lib/wbias-rwlock.c:559:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - (PTHREAD_WOFFSET | NPTHREAD_WOFFSET) + WRITER_MUTEX)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#1766: FILE: lib/wbias-rwlock.c:573:
+	WARN_ON_ONCE(in_atomic() || irqs_disabled());

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1769: FILE: lib/wbias-rwlock.c:576:
+	/* lock out preemptable threads */
 	            ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1772: FILE: lib/wbias-rwlock.c:579:
+	/* lock out other writers when no preemptable reader threads left */
 	                                  ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1777: FILE: lib/wbias-rwlock.c:584:
+				rwlock_wait(rwlock, v,
+					PTHREAD_RMASK | WRITER_MUTEX, 0, 0, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1786: FILE: lib/wbias-rwlock.c:593:
+		newv = atomic_long_cmpxchg(&rwlock->v,
+			v, v - PTHREAD_WOFFSET + WRITER_MUTEX);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1789: FILE: lib/wbias-rwlock.c:596:
+			break;
+		else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1803: FILE: lib/wbias-rwlock.c:610:
+int _wbias_write_trylock_else_subscribe_slow(wbias_rwlock_t *rwlock,
+		long v)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#1807: FILE: lib/wbias-rwlock.c:614:
+	WARN_ON_ONCE(in_atomic() || irqs_disabled());

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1810: FILE: lib/wbias-rwlock.c:617:
+	/* lock out preemptable threads */
 	            ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: lib/wbias-rwlock.c:623:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - PTHREAD_WOFFSET + WRITER_MUTEX) == v))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1823: FILE: lib/wbias-rwlock.c:630:
+int _wbias_write_trylock_subscribed_slow(wbias_rwlock_t *rwlock,
+		long v)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#1827: FILE: lib/wbias-rwlock.c:634:
+	WARN_ON_ONCE(in_atomic() || irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1833: FILE: lib/wbias-rwlock.c:640:
+		if (likely(atomic_long_cmpxchg(&rwlock->v, v,
+			v - PTHREAD_WOFFSET + WRITER_MUTEX) == v))

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1849: FILE: lib/wbias-rwlock.c:656:
+	 * its critical section which excludes any preemptable context anyway.
 	                                           ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1850: FILE: lib/wbias-rwlock.c:657:
+	 * The same applies to preemptable readers, which are the only ones
 	                       ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1851: FILE: lib/wbias-rwlock.c:658:
+	 * which can cause a preemptable writer to sleep.
 	                     ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1878: FILE: lib/wbias-rwlock-fastpath.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1903: FILE: lib/wbias-rwlock-fastpath.c:26:
+	v = atomic_long_cmpxchg(&rwlock->v, 0,
+			SOFTIRQ_WOFFSET | HARDIRQ_WOFFSET | WRITER_MUTEX);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1906: FILE: lib/wbias-rwlock-fastpath.c:29:
+		return;
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1923: FILE: lib/wbias-rwlock-fastpath.c:46:
+	v = atomic_long_cmpxchg(&rwlock->v, 0,
+			SOFTIRQ_WOFFSET | HARDIRQ_WOFFSET | WRITER_MUTEX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1939: FILE: lib/wbias-rwlock-fastpath.c:62:
+	v = atomic_long_cmpxchg(&rwlock->v, PTHREAD_WOFFSET | NPTHREAD_WOFFSET,
+			SOFTIRQ_WOFFSET | HARDIRQ_WOFFSET | WRITER_MUTEX);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1957: FILE: lib/wbias-rwlock-fastpath.c:80:
+		return;
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1986: FILE: lib/wbias-rwlock-fastpath.c:109:
+	v = atomic_long_cmpxchg(&rwlock->v, PTHREAD_WOFFSET | NPTHREAD_WOFFSET,
+			SOFTIRQ_WOFFSET | WRITER_MUTEX);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1994: FILE: lib/wbias-rwlock-fastpath.c:117:
+
+

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2004: FILE: lib/wbias-rwlock-fastpath.c:127:
+		return;
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2030: FILE: lib/wbias-rwlock-fastpath.c:153:
+	v = atomic_long_cmpxchg(&rwlock->v, PTHREAD_WOFFSET | NPTHREAD_WOFFSET,
+			WRITER_MUTEX);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2038: FILE: lib/wbias-rwlock-fastpath.c:161:
+
+

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2047: FILE: lib/wbias-rwlock-fastpath.c:170:
+		return;
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2075: FILE: lib/wbias-rwlock-fastpath.c:198:
+	v = atomic_long_cmpxchg(&rwlock->v, PTHREAD_WOFFSET | NPTHREAD_WOFFSET,
+			WRITER_MUTEX);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236747.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 106 warnings, 92 checks, 1461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236747.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
