WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
[VMware, Inc. is providing the following patch to you under the terms of the

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#146: FILE: arch/x86/kernel/tsc.c:17:
+#include <asm/delay.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:TYPO_SPELLING: 'slighty' may be misspelled - perhaps 'slightly'?
#189: FILE: arch/x86/kernel/tsc.c:351:
+ * is slighty behind. This delta is nowhere else observable, but in
       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#228: FILE: arch/x86/kernel/tsc.c:390:
+		printk("Marking TSC unstable due to %s\n", reason);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#237: FILE: arch/x86/kernel/tsc.c:399:
+EXPORT_SYMBOL_GPL(mark_tsc_unstable);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#241: FILE: arch/x86/kernel/tsc.c:403:
+	printk(KERN_NOTICE "%s detected: marking TSC unstable.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: arch/x86/kernel/tsc.c:404:
+	printk(KERN_NOTICE "%s detected: marking TSC unstable.\n",
+			d->ident);

WARNING:MISPLACED_INIT: __initdata should be placed after bad_tsc_dmi_table[]
#248: FILE: arch/x86/kernel/tsc.c:410:
+static struct dmi_system_id __initdata bad_tsc_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: arch/x86/kernel/tsc.c:473:
+	clocksource_tsc.mult = clocksource_khz2mult(tsc_khz,
+			clocksource_tsc.shift);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#337: FILE: arch/x86/kernel/tsc.c:499:
+	if (cpu_has(&boot_cpu_data, X86_FEATURE_CONSTANT_TSC) &&
+			(boot_cpu_data.x86_vendor == X86_VENDOR_AMD))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: arch/x86/kernel/tsc.c:500:
+	if (cpu_has(&boot_cpu_data, X86_FEATURE_CONSTANT_TSC) &&
+			(boot_cpu_data.x86_vendor == X86_VENDOR_AMD))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#346: FILE: arch/x86/kernel/tsc.c:508:
+	printk("Detected %lu.%03lu MHz processor.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: arch/x86/kernel/tsc.c:509:
+	printk("Detected %lu.%03lu MHz processor.\n",
+			(unsigned long)cpu_khz / 1000,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#377: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: include/asm-x86/apic.h:128:
+extern int apic_is_clustered_box(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#728: FILE: include/asm-x86/time.h:59:
+extern unsigned long __init calibrate_cpu(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260316.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 8 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260316.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
