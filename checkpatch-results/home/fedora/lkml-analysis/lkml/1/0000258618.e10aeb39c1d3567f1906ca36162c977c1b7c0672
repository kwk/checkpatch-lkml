WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
This will probably need modifications when META_BG resizing will be allowed.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: fs/ext4/ext4.h:1036:
+extern int ext4_mb_add_more_groupinfo(struct super_block *sb,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: fs/ext4/ext4.h:1037:
+extern int ext4_mb_add_more_groupinfo(struct super_block *sb,
+		ext4_group_t i, struct ext4_group_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: fs/ext4/ext4.h:1038:
+extern void ext4_mb_update_group_info(struct ext4_group_info *grp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: fs/ext4/ext4.h:1039:
+extern void ext4_mb_update_group_info(struct ext4_group_info *grp,
+		ext4_grpblk_t add);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#98: FILE: fs/ext4/mballoc.c:2234:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!meta_group_info"
#117: FILE: fs/ext4/mballoc.c:2253:
+		if (meta_group_info == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#118: FILE: fs/ext4/mballoc.c:2254:
+			printk(KERN_ERR "EXT4-fs: can't allocate mem for a "

WARNING:SPLIT_STRING: quoted string split across lines
#119: FILE: fs/ext4/mballoc.c:2255:
+			printk(KERN_ERR "EXT4-fs: can't allocate mem for a "
+			       "buddy group\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!meta_group_info[i]"
#138: FILE: fs/ext4/mballoc.c:2274:
+	if (meta_group_info[i] == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#139: FILE: fs/ext4/mballoc.c:2275:
+		printk(KERN_ERR "EXT4-fs: can't allocate buddy mem\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#139: FILE: fs/ext4/mballoc.c:2275:
+	if (meta_group_info[i] == NULL) {
+		printk(KERN_ERR "EXT4-fs: can't allocate buddy mem\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around meta_group_info[i]->bb_state
#143: FILE: fs/ext4/mballoc.c:2279:
+		&(meta_group_info[i]->bb_state));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: fs/ext4/mballoc.c:2298:
+		struct buffer_head *bh;
+		meta_group_info[i]->bb_bitmap =

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: fs/ext4/mballoc.c:2300:
+		BUG_ON(meta_group_info[i]->bb_bitmap == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!meta_group_info[i]->bb_bitmap"
#164: FILE: fs/ext4/mballoc.c:2300:
+		BUG_ON(meta_group_info[i]->bb_bitmap == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#166: FILE: fs/ext4/mballoc.c:2302:
+		BUG_ON(bh == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#166: FILE: fs/ext4/mballoc.c:2302:
+		BUG_ON(bh == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: fs/ext4/mballoc.c:2304:
+		memcpy(meta_group_info[i]->bb_bitmap, bh->b_data,
+			sb->s_blocksize);

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#204: FILE: fs/ext4/mballoc.c:2340:
+	 * Cache pages containing dynamic mb_alloc datas (buddy and bitmap
 	                                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#205: FILE: fs/ext4/mballoc.c:2341:
+	 * datas) are set not up to date so that they will be re-initilaized
 	   ^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#214: FILE: fs/ext4/mballoc.c:2350:
+	if (page != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#223: FILE: fs/ext4/mballoc.c:2359:
+	if (page != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#418: FILE: fs/ext4/resize.c:1092:
+		if (page != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#427: FILE: fs/ext4/resize.c:1101:
+		if (page != NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258618.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 15 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258618.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
