WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#50: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: arch/xtensa/variants/s6000/isef.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#94: FILE: arch/xtensa/variants/s6000/isef.c:40:
+#define S6_ISEF_IRAM_SIZE	(1 << 16)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#95: FILE: arch/xtensa/variants/s6000/isef.c:41:
+#define S6_ISEF_BITS_SIZE	(1 << 16)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: arch/xtensa/variants/s6000/isef.c:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: arch/xtensa/variants/s6000/isef.c:72:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#133: FILE: arch/xtensa/variants/s6000/isef.c:79:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: arch/xtensa/variants/s6000/isef.c:87:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#144: FILE: arch/xtensa/variants/s6000/isef.c:90:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#152: FILE: arch/xtensa/variants/s6000/isef.c:98:
+	asm volatile(

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: arch/xtensa/variants/s6000/isef.c:116:
+	struct s6_isef_config *c = *cfg;
+	if (c) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#181: FILE: arch/xtensa/variants/s6000/isef.c:127:
+	struct s6_isef_config **l = &isef.cfg[hex][iop];
+	drop_cfg(l, iop);

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: arch/xtensa/variants/s6000/isef.c:135:
+	int i;
+	s6_isef_invalhex_sync();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: arch/xtensa/variants/s6000/isef.c:137:
+	s6dmac_put_fifo_cache(isef.dma, isef.chan,
+			(u32)cfg->bits, isef.efi + S6_ISEF_CFGBITS, cfg->len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: arch/xtensa/variants/s6000/isef.c:142:
+		writel(~0,
+			isef.efi + S6_ISEF_EFICTRL + S6_ISEF_EFICTRL_IRAMENA);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: arch/xtensa/variants/s6000/isef.c:144:
+		s6dmac_put_fifo_cache(isef.dma, isef.chan, (u32)cfg->iram,
+			isef.efi + S6_ISEF_IRAM128, S6_ISEF_IRAM_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/xtensa/variants/s6000/isef.c:147:
+	writel(cfg->xadcfg[S6_ISEF_XADCFG_CLOCKR],
+		isef.xlmi + S6_XLMI_CLOCKRATIO);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#203: FILE: arch/xtensa/variants/s6000/isef.c:149:
+		writel(cfg->xadcfg[i], isef.xlmi + S6_XLMI_CONFIG + 4*i);
 		                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#208: FILE: arch/xtensa/variants/s6000/isef.c:154:
+	static const u32 efi_reset_value[4] __attribute__ ((aligned(16))) =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#209: FILE: arch/xtensa/variants/s6000/isef.c:155:
+	static const u32 efi_reset_value[4] __attribute__ ((aligned(16))) =
+			{63, 0, 0, 7 << 28};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#210: FILE: arch/xtensa/variants/s6000/isef.c:156:
+	u32 saved[4] __attribute__ ((aligned(16)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#213: FILE: arch/xtensa/variants/s6000/isef.c:159:
+	u32 status;
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#213: FILE: arch/xtensa/variants/s6000/isef.c:159:
+	asm volatile(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#227: FILE: arch/xtensa/variants/s6000/isef.c:173:
+		printk(KERN_ERR "s6 isef load: EFI error\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#228: FILE: arch/xtensa/variants/s6000/isef.c:174:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#238: FILE: arch/xtensa/variants/s6000/isef.c:184:
+	struct s6_isef_config *cfg;
+	hex = ((pc[4] << 8) | pc[3]) >> 4;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#242: FILE: arch/xtensa/variants/s6000/isef.c:188:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: arch/xtensa/variants/s6000/isef.c:189:
+	printk(KERN_ERR "AUTOLOAD PC=%08lx EXCC=%08lx IOP/HEX=%1x/%02x "

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: arch/xtensa/variants/s6000/isef.c:190:
+	printk(KERN_ERR "AUTOLOAD PC=%08lx EXCC=%08lx IOP/HEX=%1x/%02x "
+		"OPC=%02x%02x%02x%02x%02x%02x%02x%02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#249: FILE: arch/xtensa/variants/s6000/isef.c:195:
+		printk(KERN_ERR "s6 autoload: no config found (%1x/%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: arch/xtensa/variants/s6000/isef.c:196:
+		printk(KERN_ERR "s6 autoload: no config found (%1x/%02x)\n",
+			iop, hex);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#251: FILE: arch/xtensa/variants/s6000/isef.c:197:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/xtensa/variants/s6000/isef.c:214:
+	if (s6dmac_pendcnt_irq(isef.dma, isef.chan) &&
+			!s6dmac_pending_count(isef.dma, isef.chan)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: arch/xtensa/variants/s6000/isef.c:226:
+	unsigned long flags;
+	spin_lock_irqsave(&isef.lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: arch/xtensa/variants/s6000/isef.c:240:
+	unsigned long flags;
+	spin_lock_irqsave(&isef.lock, flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'arg == eval_hex_iop(isef.cur)'
#300: FILE: arch/xtensa/variants/s6000/isef.c:246:
+	if (isef.loading && (arg == eval_hex_iop(isef.cur)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#306: FILE: arch/xtensa/variants/s6000/isef.c:252:
+static ssize_t s6isef_write(struct file *filp, const char __user *buf,
                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: arch/xtensa/variants/s6000/isef.c:253:
+static ssize_t s6isef_write(struct file *filp, const char __user *buf,
+		size_t count, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: arch/xtensa/variants/s6000/isef.c:259:
+	u32 tmp[S6_ISEFCFG_IRAMDATA + 1];
+	if (copy_from_user(&tmp[0], buf, sizeof(tmp)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cfg)...) over kmalloc(sizeof(struct s6_isef_config)...)
#318: FILE: arch/xtensa/variants/s6000/isef.c:264:
+	cfg = kmalloc(sizeof(struct s6_isef_config) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: arch/xtensa/variants/s6000/isef.c:275:
+	memcpy(cfg->xadcfg, &tmp[S6_ISEFCFG_XADCFG],
+			S6_ISEF_XADCFG_SIZE * sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: arch/xtensa/variants/s6000/isef.c:278:
+	copy_from_user(cfg->bits, &(((u32 *)buf)[S6_ISEFCFG_CFGBITS]),
+			tmp[S6_ISEFCFG_LEN]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: arch/xtensa/variants/s6000/isef.c:281:
+		cfg->iram = PTR_ALIGN(cfg->bits + tmp[S6_ISEFCFG_LEN],
+			S6_ISEF_IRAM_ALIGN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: arch/xtensa/variants/s6000/isef.c:283:
+		copy_from_user(cfg->iram, (void *)tmp[S6_ISEFCFG_IRAMDATA],
+			S6_ISEF_IRAM_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#344: FILE: arch/xtensa/variants/s6000/isef.c:290:
+		if (cfg->xadcfg[2*iop] & 1)
 		                 ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#350: FILE: arch/xtensa/variants/s6000/isef.c:296:
+static unsigned int s6isef_poll(struct file *filp, poll_table *wait)
                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#352: FILE: arch/xtensa/variants/s6000/isef.c:298:
+	poll_wait(filp, &isef.wait, wait);
 	          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#356: FILE: arch/xtensa/variants/s6000/isef.c:302:
+static int s6isef_ioctl(struct inode *inode, struct file *filp,
                                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: arch/xtensa/variants/s6000/isef.c:303:
+static int s6isef_ioctl(struct inode *inode, struct file *filp,
+		unsigned int cmd, unsigned long arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: arch/xtensa/variants/s6000/isef.c:306:
+	struct s6_isef_config *cfg;
+	switch (cmd) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#362: FILE: arch/xtensa/variants/s6000/isef.c:308:
+		if (arg >= S6_ISEF_CFG_NB*S6_ISEF_IOP_NB)
 		                         ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#386: FILE: arch/xtensa/variants/s6000/isef.c:332:
+static int s6isef_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: arch/xtensa/variants/s6000/isef.c:335:
+	unsigned long flags;
+	spin_lock_irqsave(&isef.lock, flags);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#400: FILE: arch/xtensa/variants/s6000/isef.c:346:
+static int s6isef_release(struct inode *inode, struct file *filp)
                                                             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: arch/xtensa/variants/s6000/isef.c:350:
+	int h, i;
+	user_finish_load(isef.cur, eval_hex_iop(isef.cur));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#431: FILE: arch/xtensa/variants/s6000/isef.c:377:
+static int __devinit s6isef_probe(struct platform_device *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#441: FILE: arch/xtensa/variants/s6000/isef.c:387:
+		printk(KERN_ERR "isef: irq request failed: %d\n", isef.irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: arch/xtensa/variants/s6000/isef.c:393:
+	res = s6dmac_request_chan(isef.dma, DMA_INDEX_CHNL(i), 0,
+				-1, 1, 1, 0, 0, 0, 7, -1, 1, 0, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#449: FILE: arch/xtensa/variants/s6000/isef.c:395:
+		printk(KERN_ERR "isef: dma channel #%d not available\n", res);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#458: FILE: arch/xtensa/variants/s6000/isef.c:404:
+		printk(KERN_ERR "isef: failed to register minor device\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#470: FILE: arch/xtensa/variants/s6000/isef.c:416:
+static int __devexit s6isef_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000149714.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 33 warnings, 27 checks, 448 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000149714.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
