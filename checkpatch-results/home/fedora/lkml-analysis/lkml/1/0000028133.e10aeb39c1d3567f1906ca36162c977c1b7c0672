WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Keep 802.1Q VLAN tag on non HW vlan accelerated network card received to SOCK_DGRAM socket.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#50: FILE: af_packet.c:684:
                else if (skb->pkt_type == PACKET_OUTGOING) {
[...]
+                       int hard_header_len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: af_packet.c:685:
+                       /* Special case: outgoing packets have ll header at head$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#54: FILE: af_packet.c:686:
+                        * but we must leave 802.1Q encapsulation etc. (only for non HW vlan accelerated)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: af_packet.c:686:
+                        * but we must leave 802.1Q encapsulation etc. (only for non HW vlan accelerated)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: af_packet.c:687:
+                        * encasulation len = actual header_len minus hard_header_len$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#56: FILE: af_packet.c:688:
+                        * packet outgoing from vlan1@eth0 on eth0 have skb_network_offset=18, hard_header_len=14

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: af_packet.c:688:
+                        * packet outgoing from vlan1@eth0 on eth0 have skb_network_offset=18, hard_header_len=14$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: af_packet.c:689:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: af_packet.c:690:
+                       int hard_header_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: af_packet.c:690:
+                       int hard_header_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: af_packet.c:691:
+                       struct net_device *pdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: af_packet.c:691:
+                       struct net_device *pdev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: af_packet.c:692:
+                       hard_header_len = dev->hard_header_len;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#60: FILE: af_packet.c:692:
+                       struct net_device *pdev;
+                       hard_header_len = dev->hard_header_len;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: af_packet.c:692:
+                       hard_header_len = dev->hard_header_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: af_packet.c:693:
+                       pdev = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: af_packet.c:693:
+                       pdev = dev;$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#62: FILE: af_packet.c:694:
+                       /* if dev is vlan device, hard_header_len contains 802.1Q encap, subtract it, recursively

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: af_packet.c:694:
+                       /* if dev is vlan device, hard_header_len contains 802.1Q encap, subtract it, recursively$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: af_packet.c:695:
+                        * ie. vlan3@vlan2@vlan1@eth0$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: af_packet.c:696:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: af_packet.c:697:
+                       while (is_vlan_dev(pdev)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: af_packet.c:697:
+                       while (is_vlan_dev(pdev)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#65: FILE: af_packet.c:697:
+                       while (is_vlan_dev(pdev)) {
+                               struct net_device *real_dev = vlan_dev_info(pdev)->real_dev;

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: af_packet.c:698:
+                               struct net_device *real_dev = vlan_dev_info(pdev)->real_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: af_packet.c:698:
+                               struct net_device *real_dev = vlan_dev_info(pdev)->real_dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: af_packet.c:699:
+                               hard_header_len -= pdev->hard_header_len - real_dev->hard_header_len;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#67: FILE: af_packet.c:699:
+                               struct net_device *real_dev = vlan_dev_info(pdev)->real_dev;
+                               hard_header_len -= pdev->hard_header_len - real_dev->hard_header_len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: af_packet.c:699:
+                               hard_header_len -= pdev->hard_header_len - real_dev->hard_header_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: af_packet.c:700:
+                               pdev = real_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: af_packet.c:700:
+                               pdev = real_dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: af_packet.c:701:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: af_packet.c:701:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: af_packet.c:703:
+                       skb_pull(skb, skb_network_offset(skb) -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: af_packet.c:703:
+                       skb_pull(skb, skb_network_offset(skb) -$

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#72: FILE: af_packet.c:704:
+                            (skb_network_offset(skb) - hard_header_len>0 ? skb_network_offset(skb) - hard_header_len : 0));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: af_packet.c:704:
+                            (skb_network_offset(skb) - hard_header_len>0 ? skb_network_offset(skb) - hard_header_len : 0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: af_packet.c:704:
+                            (skb_network_offset(skb) - hard_header_len>0 ? skb_network_offset(skb) - hard_header_len : 0));$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#72: FILE: af_packet.c:704:
+                            (skb_network_offset(skb) - hard_header_len>0 ? skb_network_offset(skb) - hard_header_len : 0));
                                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 20 warnings, 0 checks, 36 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
