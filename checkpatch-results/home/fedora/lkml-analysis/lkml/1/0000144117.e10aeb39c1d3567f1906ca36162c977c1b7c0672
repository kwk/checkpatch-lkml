WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
This patch adds implict ALUA using Optimized and Non Optimized Access states

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#41: 
This patch adds implict ALUA using Optimized and Non Optimized Access states
                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: drivers/target/target_core_alua.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'assigntment' may be misspelled - perhaps 'assignment'?
#55: FILE: drivers/target/target_core_alua.c:4:
+ * This file contains SPC-3 compliant asymmetric logical unit assigntment (ALUA)
                                                               ^^^^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#73: FILE: drivers/target/target_core_alua.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: drivers/target/target_core_alua.c:23:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/target/target_core_alua.c:61:
+	list_for_each_entry(tg_pt_gp, &se_global->g_tg_pt_gps_list,
+			tg_pt_gp_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/target/target_core_alua.c:102:
+		list_for_each_entry(tg_pt_gp_mem, &tg_pt_gp->tg_pt_gp_mem_list,
+				tg_pt_gp_mem_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#188: FILE: drivers/target/target_core_alua.c:137:
+		printk(KERN_ERR "Unable to allocate t10_alua_lu_gp_t\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: drivers/target/target_core_alua.c:167:
+t10_alua_lu_gp_member_t *core_alua_allocate_lu_gp_mem(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#225: FILE: drivers/target/target_core_alua.c:174:
+		printk(KERN_ERR "Unable to allocate t10_alua_lu_gp_member_t\n");

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#259: FILE: drivers/target/target_core_alua.c:208:
+		msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/target/target_core_alua.c:215:
+	list_for_each_entry_safe(lu_gp_mem, lu_gp_mem_tmp,
+				&lu_gp->lu_gp_mem_list, lu_gp_mem_list) {

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#275: FILE: drivers/target/target_core_alua.c:224:
+		 * lu_gp_mem is assoicated with a single
 		                ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/target/target_core_alua.c:234:
+			__core_alua_attach_lu_gp_mem(lu_gp_mem,
+					se_global->default_lu_gp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#357: FILE: drivers/target/target_core_alua.c:306:
+void __core_alua_attach_lu_gp_mem(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#372: FILE: drivers/target/target_core_alua.c:321:
+void __core_alua_drop_lu_gp_mem(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#390: FILE: drivers/target/target_core_alua.c:339:
+		printk(KERN_ERR "Unable to allocate t10_alua_tg_pt_gp_t\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/target/target_core_alua.c:359:
+	list_for_each_entry(tg_pt_gp_tmp, &se_global->g_tg_pt_gps_list,
+			tg_pt_gp_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#422: FILE: drivers/target/target_core_alua.c:371:
+t10_alua_tg_pt_gp_member_t *core_alua_allocate_tg_pt_gp_mem(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/target/target_core_alua.c:377:
+	tg_pt_gp_mem = kmem_cache_zalloc(t10_alua_tg_pt_gp_mem_cache,
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: drivers/target/target_core_alua.c:379:
+		printk(KERN_ERR "Unable to allocate t10_alua_tg_pt_gp_member_t\n");

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#450: FILE: drivers/target/target_core_alua.c:399:
+	 * no assications *OR* explict ALUA via SET_TARGET_PORT_GROUPS
 	                       ^^^^^^^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#464: FILE: drivers/target/target_core_alua.c:413:
+		msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/target/target_core_alua.c:420:
+	list_for_each_entry_safe(tg_pt_gp_mem, tg_pt_gp_mem_tmp,
+			&tg_pt_gp->tg_pt_gp_mem_list, tg_pt_gp_mem_list) {

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#479: FILE: drivers/target/target_core_alua.c:428:
+		 * tg_pt_gp_mem is assoicated with a single
 		                   ^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#488: FILE: drivers/target/target_core_alua.c:437:
+		if (tg_pt_gp != se_global->default_tg_pt_gp) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: drivers/target/target_core_alua.c:439:
+			__core_alua_attach_tg_pt_gp_mem(tg_pt_gp_mem,
+					se_global->default_tg_pt_gp);

CHECK:BRACES: Unbalanced braces around else statement
#491: FILE: drivers/target/target_core_alua.c:440:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/target/target_core_alua.c:489:
+	list_for_each_entry(tg_pt_gp, &se_global->g_tg_pt_gps_list,
+			tg_pt_gp_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#563: FILE: drivers/target/target_core_alua.c:512:
+void __core_alua_attach_tg_pt_gp_mem(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: drivers/target/target_core_alua.c:520:
+	list_add_tail(&tg_pt_gp_mem->tg_pt_gp_mem_list,
+			&tg_pt_gp->tg_pt_gp_mem_list);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#579: FILE: drivers/target/target_core_alua.c:528:
+void __core_alua_drop_tg_pt_gp_mem(

WARNING:SPLIT_STRING: quoted string split across lines
#612: FILE: drivers/target/target_core_alua.c:561:
+		len += sprintf(page, "TG Port Alias: %s\nTG Port Group ID:"
+			" %hu\n", config_item_name(tg_pt_ci),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#621: FILE: drivers/target/target_core_alua.c:570:
+ssize_t core_alua_store_tg_pt_gp_info(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#638: FILE: drivers/target/target_core_alua.c:587:
+		printk(KERN_WARNING "SPC3_ALUA_EMULATED not enabled for"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#638: FILE: drivers/target/target_core_alua.c:587:
+		printk(KERN_WARNING "SPC3_ALUA_EMULATED not enabled for"
+			" %s/tpgt_%hu/%s\n", TPG_TFO(tpg)->tpg_get_wwn(tpg),
+			TPG_TFO(tpg)->tpg_get_tag(tpg),
+			config_item_name(&lun->lun_group.cg_item));

WARNING:SPLIT_STRING: quoted string split across lines
#639: FILE: drivers/target/target_core_alua.c:588:
+		printk(KERN_WARNING "SPC3_ALUA_EMULATED not enabled for"
+			" %s/tpgt_%hu/%s\n", TPG_TFO(tpg)->tpg_get_wwn(tpg),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#645: FILE: drivers/target/target_core_alua.c:594:
+		printk(KERN_ERR "ALUA Target Port Group alias too large!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#668: FILE: drivers/target/target_core_alua.c:617:
+		printk(KERN_ERR "NULL se_port_t->sep_alua_tg_pt_gp_mem pointer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#680: FILE: drivers/target/target_core_alua.c:629:
+			printk(KERN_INFO "Target_Core_ConfigFS: Releasing"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#680: FILE: drivers/target/target_core_alua.c:629:
+			printk(KERN_INFO "Target_Core_ConfigFS: Releasing"
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"
+				" core/alua/tg_pt_gps/%s, ID: %hu\n",
+				TPG_TFO(tpg)->tpg_get_wwn(tpg),
+				TPG_TFO(tpg)->tpg_get_tag(tpg),
+				config_item_name(&lun->lun_group.cg_item),
+				config_item_name(
+					&tg_pt_gp->tg_pt_gp_group.cg_item),
+				tg_pt_gp->tg_pt_gp_id);

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#680: FILE: drivers/target/target_core_alua.c:629:
+			printk(KERN_INFO "Target_Core_ConfigFS: Releasing"
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"
+				" core/alua/tg_pt_gps/%s, ID: %hu\n",
+				TPG_TFO(tpg)->tpg_get_wwn(tpg),
+				TPG_TFO(tpg)->tpg_get_tag(tpg),
+				config_item_name(&lun->lun_group.cg_item),
+				config_item_name(
+					&tg_pt_gp->tg_pt_gp_group.cg_item),
+				tg_pt_gp->tg_pt_gp_id);

WARNING:SPLIT_STRING: quoted string split across lines
#681: FILE: drivers/target/target_core_alua.c:630:
+			printk(KERN_INFO "Target_Core_ConfigFS: Releasing"
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"

WARNING:SPLIT_STRING: quoted string split across lines
#682: FILE: drivers/target/target_core_alua.c:631:
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"
+				" core/alua/tg_pt_gps/%s, ID: %hu\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#686: FILE: drivers/target/target_core_alua.c:635:
+				config_item_name(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#707: FILE: drivers/target/target_core_alua.c:656:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#707: FILE: drivers/target/target_core_alua.c:656:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"
+		" Group: core/alua/tg_pt_gps/%s, ID: %hu\n", (move) ?
+		"Moving" : "Adding", TPG_TFO(tpg)->tpg_get_wwn(tpg),
+		TPG_TFO(tpg)->tpg_get_tag(tpg),
+		config_item_name(&lun->lun_group.cg_item),
+		config_item_name(&tg_pt_gp_new->tg_pt_gp_group.cg_item),
+		tg_pt_gp_new->tg_pt_gp_id);

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#707: FILE: drivers/target/target_core_alua.c:656:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"
+		" Group: core/alua/tg_pt_gps/%s, ID: %hu\n", (move) ?
+		"Moving" : "Adding", TPG_TFO(tpg)->tpg_get_wwn(tpg),
+		TPG_TFO(tpg)->tpg_get_tag(tpg),
+		config_item_name(&lun->lun_group.cg_item),
+		config_item_name(&tg_pt_gp_new->tg_pt_gp_group.cg_item),
+		tg_pt_gp_new->tg_pt_gp_id);

WARNING:SPLIT_STRING: quoted string split across lines
#708: FILE: drivers/target/target_core_alua.c:657:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"
+		" Group: core/alua/tg_pt_gps/%s, ID: %hu\n", (move) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#734: FILE: drivers/target/target_core_alua.c:683:
+		printk(KERN_INFO "%s: Using SPC_ALUA_PASSTHROUGH, no ALUA"

WARNING:SPLIT_STRING: quoted string split across lines
#735: FILE: drivers/target/target_core_alua.c:684:
+		printk(KERN_INFO "%s: Using SPC_ALUA_PASSTHROUGH, no ALUA"
+			" emulation\n", TRANSPORT(dev)->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#743: FILE: drivers/target/target_core_alua.c:692:
+		printk(KERN_INFO "%s: Enabling ALUA Emulation for SPC-3"

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: drivers/target/target_core_alua.c:693:
+		printk(KERN_INFO "%s: Enabling ALUA Emulation for SPC-3"
+			" device\n", TRANSPORT(dev)->name);

WARNING:TYPO_SPELLING: 'Assoicate' may be misspelled - perhaps 'Associate'?
#746: FILE: drivers/target/target_core_alua.c:695:
+		 * Assoicate this se_device_t with the default ALUA
 		   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/target/target_core_alua.c:705:
+		__core_alua_attach_lu_gp_mem(lu_gp_mem,
+				se_global->default_lu_gp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#759: FILE: drivers/target/target_core_alua.c:708:
+		printk(KERN_INFO "%s: Adding to default ALUA LU Group:"

WARNING:SPLIT_STRING: quoted string split across lines
#760: FILE: drivers/target/target_core_alua.c:709:
+		printk(KERN_INFO "%s: Adding to default ALUA LU Group:"
+			" core/alua/lu_gps/default_lu_gp\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#764: FILE: drivers/target/target_core_alua.c:713:
+		printk("%s: Disabling ALUA Emulation for SPC-2 device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: drivers/target/target_core_alua.c:714:
+		printk("%s: Disabling ALUA Emulation for SPC-2 device\n",
+				TRANSPORT(dev)->name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#776: FILE: include/target/target_core_alua.h:1:
+#ifndef TARGET_CORE_ALUA_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#817: FILE: include/target/target_core_alua.h:42:
+extern int core_scsi3_emulate_report_target_port_groups(struct se_cmd_s *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#817: FILE: include/target/target_core_alua.h:42:
+extern int core_scsi3_emulate_report_target_port_groups(struct se_cmd_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#818: FILE: include/target/target_core_alua.h:43:
+extern struct t10_alua_lu_gp_s *core_alua_allocate_lu_gp(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#818: FILE: include/target/target_core_alua.h:43:
+extern struct t10_alua_lu_gp_s *core_alua_allocate_lu_gp(const char *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#819: FILE: include/target/target_core_alua.h:44:
+extern struct t10_alua_lu_gp_member_s *core_alua_allocate_lu_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#819: FILE: include/target/target_core_alua.h:44:
+extern struct t10_alua_lu_gp_member_s *core_alua_allocate_lu_gp_mem(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#819: FILE: include/target/target_core_alua.h:44:
+extern struct t10_alua_lu_gp_member_s *core_alua_allocate_lu_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#821: FILE: include/target/target_core_alua.h:46:
+extern void core_alua_free_lu_gp(struct t10_alua_lu_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#821: FILE: include/target/target_core_alua.h:46:
+extern void core_alua_free_lu_gp(struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#822: FILE: include/target/target_core_alua.h:47:
+extern void core_alua_free_lu_gp_mem(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#822: FILE: include/target/target_core_alua.h:47:
+extern void core_alua_free_lu_gp_mem(struct se_device_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: include/target/target_core_alua.h:48:
+extern struct t10_alua_lu_gp_s *core_alua_get_lu_gp_by_name(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#823: FILE: include/target/target_core_alua.h:48:
+extern struct t10_alua_lu_gp_s *core_alua_get_lu_gp_by_name(const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#824: FILE: include/target/target_core_alua.h:49:
+extern void core_alua_put_lu_gp_from_name(struct t10_alua_lu_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#824: FILE: include/target/target_core_alua.h:49:
+extern void core_alua_put_lu_gp_from_name(struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#825: FILE: include/target/target_core_alua.h:50:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_member_s *' should also have an identifier name
#825: FILE: include/target/target_core_alua.h:50:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#825: FILE: include/target/target_core_alua.h:50:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: include/target/target_core_alua.h:51:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,
+					struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#827: FILE: include/target/target_core_alua.h:52:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_member_s *' should also have an identifier name
#827: FILE: include/target/target_core_alua.h:52:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#827: FILE: include/target/target_core_alua.h:52:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: include/target/target_core_alua.h:53:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,
+					struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#829: FILE: include/target/target_core_alua.h:54:
+extern void core_alua_drop_lu_gp_dev(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#829: FILE: include/target/target_core_alua.h:54:
+extern void core_alua_drop_lu_gp_dev(struct se_device_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#830: FILE: include/target/target_core_alua.h:55:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#830: FILE: include/target/target_core_alua.h:55:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(const char *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#831: FILE: include/target/target_core_alua.h:56:
+extern struct t10_alua_tg_pt_gp_member_s *core_alua_allocate_tg_pt_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#831: FILE: include/target/target_core_alua.h:56:
+extern struct t10_alua_tg_pt_gp_member_s *core_alua_allocate_tg_pt_gp_mem(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#831: FILE: include/target/target_core_alua.h:56:
+extern struct t10_alua_tg_pt_gp_member_s *core_alua_allocate_tg_pt_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#833: FILE: include/target/target_core_alua.h:58:
+extern void core_alua_free_tg_pt_gp(struct t10_alua_tg_pt_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#833: FILE: include/target/target_core_alua.h:58:
+extern void core_alua_free_tg_pt_gp(struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#834: FILE: include/target/target_core_alua.h:59:
+extern void core_alua_free_tg_pt_gp_mem(struct se_port_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#834: FILE: include/target/target_core_alua.h:59:
+extern void core_alua_free_tg_pt_gp_mem(struct se_port_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#835: FILE: include/target/target_core_alua.h:60:
+extern struct t10_alua_tg_pt_gp_s *core_alua_get_tg_pt_gp_by_name(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#835: FILE: include/target/target_core_alua.h:60:
+extern struct t10_alua_tg_pt_gp_s *core_alua_get_tg_pt_gp_by_name(const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#836: FILE: include/target/target_core_alua.h:61:
+extern void core_alua_put_tg_pt_gp_from_name(struct t10_alua_tg_pt_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#836: FILE: include/target/target_core_alua.h:61:
+extern void core_alua_put_tg_pt_gp_from_name(struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#837: FILE: include/target/target_core_alua.h:62:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_member_s *' should also have an identifier name
#837: FILE: include/target/target_core_alua.h:62:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#837: FILE: include/target/target_core_alua.h:62:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: include/target/target_core_alua.h:63:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,
+					struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#839: FILE: include/target/target_core_alua.h:64:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_member_s *' should also have an identifier name
#839: FILE: include/target/target_core_alua.h:64:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#839: FILE: include/target/target_core_alua.h:64:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: include/target/target_core_alua.h:65:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,
+					struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#841: FILE: include/target/target_core_alua.h:66:
+extern ssize_t core_alua_show_tg_pt_gp_info(struct se_port_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#841: FILE: include/target/target_core_alua.h:66:
+extern ssize_t core_alua_show_tg_pt_gp_info(struct se_port_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#841: FILE: include/target/target_core_alua.h:66:
+extern ssize_t core_alua_show_tg_pt_gp_info(struct se_port_s *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#842: FILE: include/target/target_core_alua.h:67:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#842: FILE: include/target/target_core_alua.h:67:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#842: FILE: include/target/target_core_alua.h:67:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#842: FILE: include/target/target_core_alua.h:67:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: include/target/target_core_alua.h:68:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,
+						size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#844: FILE: include/target/target_core_alua.h:69:
+extern int core_setup_alua(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#844: FILE: include/target/target_core_alua.h:69:
+extern int core_setup_alua(struct se_device_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144117.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 66 warnings, 50 checks, 789 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144117.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
