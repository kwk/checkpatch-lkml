WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '654f4a242cac0148ffe98ce288c9116e65b08e44', maybe rebased or not pulled?
#28: 
commit 654f4a242cac0148ffe98ce288c9116e65b08e44

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#181: FILE: drivers/char/cyclades.c:1730:
+		printk(KERN_DEBUG "cyz_interrupt: board not yet loaded\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cyz_interrupt', this function's name, in a string
#181: FILE: drivers/char/cyclades.c:1730:
+		printk(KERN_DEBUG "cyz_interrupt: board not yet loaded\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited after that open parenthesis '('
#221: FILE: drivers/char/ip2/ip2main.c:1185:
+		if ( pB && (pB->i2eUsingIrq == get_irqfunc_irq()) ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#221: FILE: drivers/char/ip2/ip2main.c:1185:
+		if ( pB && (pB->i2eUsingIrq == get_irqfunc_irq()) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pB->i2eUsingIrq == get_irqfunc_irq()'
#221: FILE: drivers/char/ip2/ip2main.c:1185:
+		if ( pB && (pB->i2eUsingIrq == get_irqfunc_irq()) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <pB>
#221: FILE: drivers/char/ip2/ip2main.c:1185:
+		if ( pB && (pB->i2eUsingIrq == get_irqfunc_irq()) ) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <i2eUsingIrq>
#221: FILE: drivers/char/ip2/ip2main.c:1185:
+		if ( pB && (pB->i2eUsingIrq == get_irqfunc_irq()) ) {

CHECK:CAMELCASE: Avoid CamelCase: <UartInterrupt>
#243: FILE: drivers/char/mwave/tp3780i.c:98:
+static irqreturn_t UartInterrupt(void *dev_id)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'UartInterrupt', this function's name, in a string
#247: FILE: drivers/char/mwave/tp3780i.c:101:
+		"tp3780i::UartInterrupt entry irq %x dev_id %p\n",

CHECK:CAMELCASE: Avoid CamelCase: <DspInterrupt>
#253: FILE: drivers/char/mwave/tp3780i.c:106:
+static irqreturn_t DspInterrupt(void *dev_id)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'DspInterrupt', this function's name, in a string
#262: FILE: drivers/char/mwave/tp3780i.c:114:
+		"tp3780i::DspInterrupt entry irq %x dev_id %p\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#294: FILE: drivers/char/pcmcia/synclink_cs.c:1237:
+		printk("mgslpc_isr(%d) entry.\n", get_irqfunc_irq());

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mgslpc_isr', this function's name, in a string
#294: FILE: drivers/char/pcmcia/synclink_cs.c:1237:
+		printk("mgslpc_isr(%d) entry.\n", get_irqfunc_irq());

CHECK:CAMELCASE: Avoid CamelCase: <HostP>
#323: FILE: drivers/char/rio/rio_linux.c:371:
+	HostP = ptr;	/* &p->RIOHosts[(long)ptr]; */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rio_interrupt', this function's name, in a string
#324: FILE: drivers/char/rio/rio_linux.c:372:
+	rio_dprintk(RIO_DEBUG_IFLOW, "rio: enter rio_interrupt (%d/%d)\n",

CHECK:CAMELCASE: Avoid CamelCase: <Ivec>
#325: FILE: drivers/char/rio/rio_linux.c:373:
+		    get_irqfunc_irq(), HostP->Ivec);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rio_interrupt', this function's name, in a string
#343: FILE: drivers/char/rio/rio_linux.c:411:
+	rio_dprintk(RIO_DEBUG_IFLOW, "rio: exit rio_interrupt (%d/%d)\n",

CHECK:CAMELCASE: Avoid CamelCase: <RIOHosts>
#353: FILE: drivers/char/rio/rio_linux.c:422:
+	rio_interrupt(&p->RIOHosts[data]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: drivers/char/riscom8.c:540:
+static irqreturn_t rc_interrupt(void * dev_id)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/char/specialix.c:198:
+static irqreturn_t sx_interrupt(void * dev_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#406: FILE: drivers/char/specialix.c:895:
+		dprintk (SX_DEBUG_IRQ, "sx: False interrupt. irq %d.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sx_interrupt', this function's name, in a string
#429: FILE: drivers/char/sx.c:1251:
+	sx_dprintk(SX_DEBUG_FLOW, "sx: enter sx_interrupt (%d/%d)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sx_interrupt', this function's name, in a string
#449: FILE: drivers/char/sx.c:1342:
+	sx_dprintk(SX_DEBUG_FLOW, "sx: exit sx_interrupt (%d/%d)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slgt_interrupt', this function's name, in a string
#514: FILE: drivers/char/synclink_gt.c:2329:
+	DBGISR(("slgt_interrupt irq=%d entry\n", get_irqfunc_irq()));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slgt_interrupt', this function's name, in a string
#523: FILE: drivers/char/synclink_gt.c:2382:
+	DBGISR(("slgt_interrupt irq=%d exit\n", get_irqfunc_irq()));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: drivers/ide/ide-io.c:1536:
+static void unexpected_intr (ide_hwgroup_t *hwgroup)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#620: FILE: drivers/ide/ide-io.c:1588:
+irqreturn_t ide_intr (void *dev_id)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#664: FILE: drivers/input/serio/i8042.c:513:
 static struct completion i8042_aux_irq_delivered __devinitdata;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#665: FILE: drivers/input/serio/i8042.c:514:
 static int i8042_irq_being_tested __devinitdata;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#668: FILE: drivers/input/serio/i8042.c:516:
+static irqreturn_t __devinit i8042_aux_test_irq(void *dev_id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#829: FILE: drivers/macintosh/via-maciisi.c:86:
+static irqreturn_t maciisi_interrupt(void* arg);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#850: FILE: drivers/macintosh/via-maciisi.c:434:
+maciisi_interrupt(void* arg)

WARNING:SPLIT_STRING: quoted string split across lines
#1261: FILE: drivers/net/pcmcia/fmvj18x_cs.c:743:
         printk(KERN_NOTICE "fjn_interrupt(): irq %d for "
+	       "unknown device.\n", get_irqfunc_irq());

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1305: FILE: drivers/net/wan/sdla.c:882:
+		printk(KERN_WARNING "%s: irq %d for uninitialized device.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1306: FILE: drivers/net/wan/sdla.c:883:
+		printk(KERN_WARNING "%s: irq %d for uninitialized device.\n",
+			dev->name, get_irqfunc_irq());

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: drivers/pcmcia/i82365.c:504:
+    debug(2, "-> hit on irq %d\n", get_irqfunc_irq());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: drivers/pcmcia/i82365.c:856:
+    unsigned int irq = get_irqfunc_irq();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: drivers/pcmcia/i82365.c:858:
+    debug(4, "pcic_interrupt(%u)\n", irq);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcic_interrupt', this function's name, in a string
#1351: FILE: drivers/pcmcia/i82365.c:858:
+    debug(4, "pcic_interrupt(%u)\n", irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1360: FILE: drivers/pcmcia/i82365.c:900:
+    pcic_interrupt(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: drivers/pcmcia/tcic.c:508:
+    tcic_interrupt(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: drivers/pcmcia/tcic.c:609:
+    tcic_interrupt(NULL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1451: FILE: drivers/scsi/NCR5380.c:1161:
+static irqreturn_t NCR5380_intr(void *dev_id) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1464: FILE: drivers/scsi/NCR53C9x.c:101:
+irqreturn_t esp_intr(void *dev_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#1558: FILE: drivers/scsi/eata.c:2290:
+static irqreturn_t ihdlr(struct Scsi_Host *shost)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ihdlr', this function's name, in a string
#1571: FILE: drivers/scsi/eata.c:2300:
+		panic("%s: ihdlr, irq %d, shost->irq %d.\n", ha->board_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1572: FILE: drivers/scsi/eata.c:2301:
+		panic("%s: ihdlr, irq %d, shost->irq %d.\n", ha->board_name,
+			irq, shost->irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1582: FILE: drivers/scsi/eata.c:2310:
+		printk("%s: ihdlr, enter, irq %d, count %d.\n", ha->board_name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ihdlr', this function's name, in a string
#1582: FILE: drivers/scsi/eata.c:2310:
+		printk("%s: ihdlr, enter, irq %d, count %d.\n", ha->board_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: drivers/scsi/eata.c:2311:
+		printk("%s: ihdlr, enter, irq %d, count %d.\n", ha->board_name,
+			irq, ha->iocount);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1621: FILE: drivers/scsi/psi240i.c:253:
+static void Irq_Handler (void *dev_id)

CHECK:CAMELCASE: Avoid CamelCase: <Irq_Handler>
#1621: FILE: drivers/scsi/psi240i.c:253:
+static void Irq_Handler (void *dev_id)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1621: FILE: drivers/scsi/psi240i.c:253:
+static void Irq_Handler (void *dev_id)
 	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1638: FILE: drivers/scsi/psi240i.c:370:
+static irqreturn_t do_Irq_Handler (void *dev_id)

CHECK:CAMELCASE: Avoid CamelCase: <do_Irq_Handler>
#1638: FILE: drivers/scsi/psi240i.c:370:
+static irqreturn_t do_Irq_Handler (void *dev_id)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1688: FILE: drivers/scsi/u14-34f.c:1719:
+static irqreturn_t ihdlr(unsigned int j) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: drivers/scsi/u14-34f.c:1723:
+   unsigned int irq = get_irqfunc_irq();$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1701: FILE: drivers/scsi/u14-34f.c:1931:
+static irqreturn_t do_interrupt_handler(void *shap) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1708: FILE: drivers/scsi/u14-34f.c:1937:
+   if ((j = (unsigned int)((char *)shap - sha)) >= num_boards)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1708: FILE: drivers/scsi/u14-34f.c:1937:
+   if ((j = (unsigned int)((char *)shap - sha)) >= num_boards)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1709: FILE: drivers/scsi/u14-34f.c:1938:
+   ^Ireturn IRQ_NONE;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1709: FILE: drivers/scsi/u14-34f.c:1938:
+   ^Ireturn IRQ_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: drivers/scsi/u14-34f.c:1938:
+   ^Ireturn IRQ_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: drivers/scsi/u14-34f.c:1941:
+   ret = ihdlr(j);$

WARNING:SPLIT_STRING: quoted string split across lines
#1735: FILE: drivers/serial/8250.c:1499:
 			printk(KERN_ERR "serial8250: too much work for "
+				"irq%d\n", get_irqfunc_irq());

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1765: FILE: sound/drivers/mts64.c:860:
 static int __devinit snd_mts64_probe_port(struct parport *p)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1778: FILE: sound/drivers/portman2x4.c:652:
 static int __devinit snd_portman_probe_port(struct parport *p)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368076.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 42 warnings, 14 checks, 1334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368076.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
