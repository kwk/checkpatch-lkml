WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#114: FILE: arch/powerpc/kernel/ftrace.c:23:
+#if 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#117: FILE: arch/powerpc/kernel/ftrace.c:26:
+#define DEBUGP(fmt , ...)	do { } while (0)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#180: FILE: arch/powerpc/kernel/ftrace.c:166:
+	unsigned int *op = (unsigned *)&replaced;

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#191: FILE: arch/powerpc/kernel/ftrace.c:177:
+	/* Make sure that that this is still a 24bit jump */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#193: FILE: arch/powerpc/kernel/ftrace.c:179:
+		printk(KERN_ERR "Not expected bl: opcode is %x\n", *op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#218: FILE: arch/powerpc/kernel/ftrace.c:204:
+		printk(KERN_ERR "Failed to read %lx\n", tramp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#223: FILE: arch/powerpc/kernel/ftrace.c:209:
+	       (unsigned)(*ptr >> 32),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: arch/powerpc/kernel/ftrace.c:210:
+	       (unsigned)*ptr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: arch/powerpc/kernel/ftrace.c:212:
+	offset = (unsigned)jmp[2] << 24 |

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#227: FILE: arch/powerpc/kernel/ftrace.c:213:
+		(unsigned)jmp[3] << 16 |

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: arch/powerpc/kernel/ftrace.c:214:
+		(unsigned)jmp[6] << 8 |

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: arch/powerpc/kernel/ftrace.c:215:
+		(unsigned)jmp[7];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#238: FILE: arch/powerpc/kernel/ftrace.c:224:
+		printk(KERN_ERR "Failed to read %lx\n", tramp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#243: FILE: arch/powerpc/kernel/ftrace.c:229:
+	       (unsigned)(*ptr >> 32),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#244: FILE: arch/powerpc/kernel/ftrace.c:230:
+	       (unsigned)*ptr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#248: FILE: arch/powerpc/kernel/ftrace.c:234:
+		printk(KERN_ERR "addr does not match %lx\n", *ptr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#257: FILE: arch/powerpc/kernel/ftrace.c:243:
+	if (probe_kernel_read(replaced, (void *)(ip+4), MCOUNT_INSN_SIZE))
 	                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: arch/powerpc/kernel/ftrace.c:247:
+		printk(KERN_ERR "Next line is not ld! (%08x)\n", *op);

CHECK:BRACES: braces {} should be used on all arms of this statement
#323: FILE: arch/powerpc/kernel/ftrace.c:306:
+	if (!rec->arch.mod) {
[...]
+	} else if (mod) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#325: FILE: arch/powerpc/kernel/ftrace.c:308:
+			printk(KERN_ERR "No module loaded addr=%lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#332: FILE: arch/powerpc/kernel/ftrace.c:315:
+			printk(KERN_ERR

CHECK:BRACES: Unbalanced braces around else statement
#338: FILE: arch/powerpc/kernel/ftrace.c:321:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#344: FILE: arch/powerpc/kernel/ftrace.c:327:
+
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#351: FILE: arch/powerpc/kernel/ftrace.c:334:
+	unsigned int *op = (unsigned *)&replaced;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op[0] != 0x48000008'
#363: FILE: arch/powerpc/kernel/ftrace.c:346:
+	if (((op[0] != 0x48000008) || (op[1] != 0xe8410028)) &&
+	    ((op[0] != PPC_NOP_INSTR) || (op[1] != PPC_NOP_INSTR))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op[1] != 0xe8410028'
#363: FILE: arch/powerpc/kernel/ftrace.c:346:
+	if (((op[0] != 0x48000008) || (op[1] != 0xe8410028)) &&
+	    ((op[0] != PPC_NOP_INSTR) || (op[1] != PPC_NOP_INSTR))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op[0] != PPC_NOP_INSTR'
#363: FILE: arch/powerpc/kernel/ftrace.c:346:
+	if (((op[0] != 0x48000008) || (op[1] != 0xe8410028)) &&
+	    ((op[0] != PPC_NOP_INSTR) || (op[1] != PPC_NOP_INSTR))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op[1] != PPC_NOP_INSTR'
#363: FILE: arch/powerpc/kernel/ftrace.c:346:
+	if (((op[0] != 0x48000008) || (op[1] != 0xe8410028)) &&
+	    ((op[0] != PPC_NOP_INSTR) || (op[1] != PPC_NOP_INSTR))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#365: FILE: arch/powerpc/kernel/ftrace.c:348:
+		printk(KERN_ERR "Expected NOPs but have %x %x\n", op[0], op[1]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#371: FILE: arch/powerpc/kernel/ftrace.c:354:
+		printk(KERN_ERR "No ftrace trampoline\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#379: FILE: arch/powerpc/kernel/ftrace.c:362:
+		printk(KERN_ERR "REL24 %li out of range!\n",

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#380: FILE: arch/powerpc/kernel/ftrace.c:363:
+		       (long int)offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#433: FILE: arch/powerpc/kernel/ftrace.c:412:
+		printk(KERN_ERR "No module loaded\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 24 warnings, 8 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
