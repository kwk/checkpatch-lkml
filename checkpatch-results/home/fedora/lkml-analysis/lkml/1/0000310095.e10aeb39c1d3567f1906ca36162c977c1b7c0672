WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
I haven't tried to clean it up too much (e.g. some checkpatch warnings left)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: mm/mask-alloc-test.c:1:
+/* Simple test for the mask allocator */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#60: FILE: mm/mask-alloc-test.c:12:
+	MASKS = MASK_MAX-MASK_BASE,
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#64: FILE: mm/mask-alloc-test.c:16:
+static unsigned my_rand(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: mm/mask-alloc-test.c:26:
+	int k;
+	for (k = 0; k < length; k++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#76: FILE: mm/mask-alloc-test.c:28:
+			printk("gpm verify %d offset %d expected %x got %x mask %Lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'verify', this function's name, in a string
#76: FILE: mm/mask-alloc-test.c:28:
+			printk("gpm verify %d offset %d expected %x got %x mask %Lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#76: FILE: mm/mask-alloc-test.c:28:
+			printk("gpm verify %d offset %d expected %x got %x mask %Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: mm/mask-alloc-test.c:29:
+			printk("gpm verify %d offset %d expected %x got %x mask %Lx\n",
+				i, k, i & 0xff, m[k], mask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#85: FILE: mm/mask-alloc-test.c:37:
+	unsigned i, w;

WARNING:SPACING: space prohibited before semicolon
#86: FILE: mm/mask-alloc-test.c:38:
+	int *all_lengths[MASKS + 1] = { 0 } ;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#89: FILE: mm/mask-alloc-test.c:41:
+	unsigned *lengths;

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#91: FILE: mm/mask-alloc-test.c:43:
+	printk("testing mask alloc upto %d bits\n", MASK_MAX);
 	                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: mm/mask-alloc-test.c:43:
+	printk("testing mask alloc upto %d bits\n", MASK_MAX);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#94: FILE: mm/mask-alloc-test.c:46:
+		unsigned total = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: mm/mask-alloc-test.c:48:
+		u64 mask = (1 << bits) - 1;
+		all_lengths[w] = kmalloc(sizeof(unsigned) * NUMALLOC, GFP_KERNEL);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#96: FILE: mm/mask-alloc-test.c:48:
+		all_lengths[w] = kmalloc(sizeof(unsigned) * NUMALLOC, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: mm/mask-alloc-test.c:60:
+			mem[i] = get_pages_mask(GFP_NOWAIT|__GFP_NOWARN, lengths[i], mask);
 			                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#110: FILE: mm/mask-alloc-test.c:62:
+				printk("gpm1 %d mask %Lx size %u total %uKB failed\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#110: FILE: mm/mask-alloc-test.c:62:
+				printk("gpm1 %d mask %Lx size %u total %uKB failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: mm/mask-alloc-test.c:63:
+				printk("gpm1 %d mask %Lx size %u total %uKB failed\n",
+					i, mask, lengths[i], total >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: mm/mask-alloc-test.c:67:
+				printk("bad address mask %Lx: %p %u\n", mask, mem[i], lengths[i]);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#115: FILE: mm/mask-alloc-test.c:67:
+				printk("bad address mask %Lx: %p %u\n", mask, mem[i], lengths[i]);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#120: FILE: mm/mask-alloc-test.c:72:
+		for (i = 0; i < NUMALLOC; i += my_rand()%4) {
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#131: FILE: mm/mask-alloc-test.c:83:
+			mem[i] = get_pages_mask(GFP_NOWAIT|__GFP_NOWARN, lengths[i], mask);
 			                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: mm/mask-alloc-test.c:85:
+				printk("gpm2 %d mask %Lx size %u failed\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#133: FILE: mm/mask-alloc-test.c:85:
+				printk("gpm2 %d mask %Lx size %u failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: mm/mask-alloc-test.c:86:
+				printk("gpm2 %d mask %Lx size %u failed\n",
+					i, mask, lengths[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#138: FILE: mm/mask-alloc-test.c:90:
+				printk("bad address mask %Lx: %p %u\n", mask, mem[i], lengths[i]);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#138: FILE: mm/mask-alloc-test.c:90:
+				printk("bad address mask %Lx: %p %u\n", mask, mem[i], lengths[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: mm/mask-alloc-test.c:95:
+	printk("verify & free\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: mm/mask-alloc-test.c:98:
+		u64 mask = (1 << bits) - 1;
+		printk("mask %Lx\n", mask);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#146: FILE: mm/mask-alloc-test.c:98:
+		printk("mask %Lx\n", mask);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#146: FILE: mm/mask-alloc-test.c:98:
+		printk("mask %Lx\n", mask);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#157: FILE: mm/mask-alloc-test.c:109:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: mm/mask-alloc-test.c:119:
+	printk("done\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#191: FILE: lib/Kconfig.debug:624:
+config TEST_MASK_ALLOC
+	depends on MASK_ALLOC
+	bool "Boot time self test for mask allocator"
+	help
+	  Run a simple boot-time self test for the mask allocator.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310095.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 8 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310095.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
