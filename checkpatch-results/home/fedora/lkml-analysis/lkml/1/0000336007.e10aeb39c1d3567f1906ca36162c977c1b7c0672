CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#103: FILE: include/linux/sched.h:60:
+#define clone_arg_has(arg, member)	({ \
+		struct long_clone_arg *__carg = arg; \
+		(__carg->size >= offsetof(struct long_clone_arg, member) + \
+					sizeof(__carg->member)); })

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: kernel/fork.c:971:
+static struct long_clone_arg *get_long_clone_arg(unsigned long flags,
+		int __user *child_tidptr)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*carg)...) over kzalloc(sizeof(struct long_clone_arg)...)
#147: FILE: kernel/fork.c:985:
+	carg = kzalloc(sizeof(struct long_clone_arg), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!carg"
#148: FILE: kernel/fork.c:986:
+	if (carg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: kernel/fork.c:1036:
+	if ((clone_flags & CLONE_LONGARG) &&
+			(clone_flags & (CLONE_CHILD_SETTID |

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: kernel/fork.c:1183:
+	if ((retval = security_task_alloc(p)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#229: FILE: kernel/fork.c:1734:
+				CLONE_NEWNET|CLONE_LONGARG))
 				            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#239: FILE: kernel/fork.c:1743:
+	if ((err = unshare_thread(unshare_flags)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 0 warnings, 6 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
