WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
>    git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git cpus4096-for-linus

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#84: 
      x86: fixup_irqs() doesnt need an argument.
                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#428: FILE: arch/alpha/kernel/smp.c:71:
 static int smp_secondary_alive __devinitdata = 0;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#938: FILE: arch/ia64/include/asm/smp.h:58:
 extern char no_int_routing __devinitdata;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1127: FILE: arch/ia64/kernel/topology.c:222:
+	len = cpumask_scnprintf(buf, NR_CPUS+1, &shared_cpu_map);
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1127: FILE: arch/ia64/kernel/topology.c:222:
+	len = cpumask_scnprintf(buf, NR_CPUS+1, &shared_cpu_map);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1241: FILE: arch/mips/include/asm/irq.h:52:
+extern void plat_set_irq_affinity(unsigned int irq,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#1409: FILE: arch/mips/kernel/cevt-txx9.c:152:
+	cd->cpumask = cpumask_of(0),
 	clockevents_register_device(cd);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1470: FILE: arch/mips/kernel/smp-cmp.c:57:
+		len = cpulist_scnprintf(buf, sizeof(buf)-1, &cpu_possible_map);
 		                                        ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1518: FILE: arch/mips/kernel/smp.c:191:
 void __devinit smp_prepare_boot_cpu(void)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1956: FILE: arch/powerpc/sysdev/mpic.h:39:
+extern void mpic_set_affinity(unsigned int irq, const struct cpumask *cpumask);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2468: FILE: arch/x86/include/asm/es7000/apic.h:83:
+	printk("Enabling APIC mode:  %s. Using %d I/O APICs, target cpus %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2469: FILE: arch/x86/include/asm/es7000/apic.h:84:
+	printk("Enabling APIC mode:  %s. Using %d I/O APICs, target cpus %lx\n",
 		(apic_version[apic] == 0x14) ?

WARNING:LINE_SPACING: Missing a blank line after declarations
#2556: FILE: arch/x86/include/asm/es7000/apic.h:204:
+			int new_apicid = cpu_to_logical_apicid(cpu);
+			if (apicid_cluster(apicid) !=

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#2557: FILE: arch/x86/include/asm/es7000/apic.h:205:
+					apicid_cluster(new_apicid)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2558: FILE: arch/x86/include/asm/es7000/apic.h:206:
+				printk ("%s: Not a valid mask!\n", __func__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2558: FILE: arch/x86/include/asm/es7000/apic.h:206:
+				printk ("%s: Not a valid mask!\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2569: FILE: arch/x86/include/asm/es7000/apic.h:217:
+
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2587: FILE: arch/x86/include/asm/es7000/apic.h:235:
+	if (num_bits_set == NR_CPUS)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2761: FILE: arch/x86/include/asm/ipi.h:151:
+			__send_IPI_dest_field(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2777: FILE: arch/x86/include/asm/irq.h:36:
+extern void fixup_irqs(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2785: FILE: arch/x86/include/asm/irq.h:45:
+extern int vector_used_by_percpu_irq(unsigned int vector);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2891: FILE: arch/x86/include/asm/mach-default/mach_ipi.h:22:
 }
+void send_IPI_mask_allbutself(const struct cpumask *mask, int vector);

CHECK:SPACING: No space is necessary after a cast
#2951: FILE: arch/x86/include/asm/numaq/apic.h:127:
+	return (int) 0xF;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(int) 0xF' could be '0xF'
#2951: FILE: arch/x86/include/asm/numaq/apic.h:127:
+	return (int) 0xF;

CHECK:SPACING: No space is necessary after a cast
#3089: FILE: arch/x86/include/asm/summit/apic.h:183:
+		return (int) 0xFF;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(int) 0xFF' could be '0xFF'
#3089: FILE: arch/x86/include/asm/summit/apic.h:183:
+		return (int) 0xFF;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3107: FILE: arch/x86/include/asm/summit/apic.h:201:
+			int new_apicid = cpu_to_logical_apicid(cpu);
+			if (apicid_cluster(apicid) !=

ERROR:SPACING: space required before the open brace '{'
#3108: FILE: arch/x86/include/asm/summit/apic.h:202:
+					apicid_cluster(new_apicid)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3109: FILE: arch/x86/include/asm/summit/apic.h:203:
+				printk ("%s: Not a valid mask!\n", __func__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3109: FILE: arch/x86/include/asm/summit/apic.h:203:
+				printk ("%s: Not a valid mask!\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#3223: FILE: arch/x86/kernel/apic.c:1814:
 		pr_warning("BIOS bug, APIC version is 0 for CPU#%d! "
+			   "fixing up to 0x10. (tell your hw vendor)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3236: FILE: arch/x86/kernel/apic.c:1824:
+		pr_warning(

WARNING:SPLIT_STRING: quoted string split across lines
#3238: FILE: arch/x86/kernel/apic.c:1826:
+			"ACPI: NR_CPUS/possible_cpus limit of %i reached."
+			"  Processor %d/0x%x ignored.\n", max, thiscpu, apicid);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3326: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:564:
+	per_cpu(cpuid4_info, cpu) = kzalloc(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!per_cpu"
#3328: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:566:
+	if (per_cpu(cpuid4_info, cpu) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3342: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:626:
+			cpulist_scnprintf(buf, len-2, mask) :
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3343: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:627:
+			cpumask_scnprintf(buf, len-2, mask);
 			                          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3831: FILE: arch/x86/kernel/genx2apic_cluster.c:65:
+		__x2apic_send_IPI_dest(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3850: FILE: arch/x86/kernel/genx2apic_cluster.c:81:
+			__x2apic_send_IPI_dest(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3867: FILE: arch/x86/kernel/genx2apic_cluster.c:96:
+			__x2apic_send_IPI_dest(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3897: FILE: arch/x86/kernel/genx2apic_cluster.c:121:
+	if ((unsigned)cpu < nr_cpu_ids)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3991: FILE: arch/x86/kernel/genx2apic_phys.c:79:
+			__x2apic_send_IPI_dest(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4010: FILE: arch/x86/kernel/genx2apic_phys.c:95:
+			__x2apic_send_IPI_dest(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4039: FILE: arch/x86/kernel/genx2apic_phys.c:120:
+	if ((unsigned)cpu < nr_cpu_ids)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4377: FILE: arch/x86/kernel/io_apic.c:514:
+		unsigned int i;
+		cfg->move_cleanup_count = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4752: FILE: arch/x86/kernel/io_apic.c:2460:
 }
+static void set_ir_ioapic_affinity_irq(unsigned int irq,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5144: FILE: arch/x86/kernel/irq.c:195:
+EXPORT_SYMBOL_GPL(vector_used_by_percpu_irq);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5266: FILE: arch/x86/kernel/irqinit_32.c:162:
+	alloc_intr_gate(CALL_FUNCTION_SINGLE_VECTOR,
+				 call_function_single_interrupt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5343: FILE: arch/x86/kernel/setup_percpu.c:156:
+	printk(KERN_INFO

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#5345: FILE: arch/x86/kernel/setup_percpu.c:158:
+		NR_CPUS, nr_cpumask_bits, nr_cpu_ids, nr_node_ids);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5355: FILE: arch/x86/kernel/setup_percpu.c:176:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5365: FILE: arch/x86/kernel/setup_percpu.c:184:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5367: FILE: arch/x86/kernel/setup_percpu.c:186:
+					"per cpu data for cpu%d on node%d "
+					"at %016lx\n",

WARNING:MISPLACED_INIT: __initdata should be placed after setup_possible_cpus
#5444: FILE: arch/x86/kernel/smpboot.c:1257:
+static int __initdata setup_possible_cpus = -1;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5450: FILE: arch/x86/kernel/smpboot.c:1263:
+}
+early_param("possible_cpus", _setup_possible_cpus);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5452: FILE: arch/x86/kernel/smpboot.c:1265:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5478: FILE: arch/x86/kernel/smpboot.c:1297:
+		printk(KERN_WARNING

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5773: FILE: arch/x86/xen/mmu.c:1100:
+			if (!cpumask_test_cpu(cpu, &mm->cpu_vm_mask)
+			    && per_cpu(xen_current_cr3, cpu) != __pa(mm->pgd))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5896: FILE: arch/x86/xen/suspend.c:38:
+		BUG_ON(xen_cpu_initialized_map == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xen_cpu_initialized_map"
#5896: FILE: arch/x86/xen/suspend.c:38:
+		BUG_ON(xen_cpu_initialized_map == NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5936: FILE: drivers/base/cpu.c:112:
+	int n = cpulist_scnprintf(buf, PAGE_SIZE-2, map);
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5950: FILE: drivers/base/node.c:33:
+		cpulist_scnprintf(buf, PAGE_SIZE-2, mask) :
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5951: FILE: drivers/base/node.c:34:
+		cpumask_scnprintf(buf, PAGE_SIZE-2, mask);
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5965: FILE: drivers/base/topology.c:52:
+			cpulist_scnprintf(buf, len-2, mask) :
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5966: FILE: drivers/base/topology.c:53:
+			cpumask_scnprintf(buf, len-2, mask);
 			                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6005: FILE: drivers/lguest/interrupts_and_traps.c:228:
+			printk(KERN_ERR "lg: couldn't reserve syscall %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6006: FILE: drivers/lguest/interrupts_and_traps.c:229:
+			printk(KERN_ERR "lg: couldn't reserve syscall %u\n",
+				 syscall_vector);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6049: FILE: drivers/pci/pci-sysfs.c:77:
+	len = cpumask_scnprintf(buf, PAGE_SIZE-2, &mask);
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6058: FILE: drivers/pci/pci-sysfs.c:91:
+	len = cpulist_scnprintf(buf, PAGE_SIZE-2, &mask);
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6072: FILE: drivers/pci/probe.c:58:
+		cpulist_scnprintf(buf, PAGE_SIZE-2, &cpumask) :
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6073: FILE: drivers/pci/probe.c:59:
+		cpumask_scnprintf(buf, PAGE_SIZE-2, &cpumask);
 		                                ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#6095: FILE: drivers/xen/events.c:617:
+static void set_affinity_irq(unsigned irq, const struct cpumask *dest)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#6098: FILE: drivers/xen/events.c:619:
+	unsigned tcpu = cpumask_first(dest);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bus' - possible side-effects?
#6121: FILE: include/asm-generic/topology.h:61:
+#define cpumask_of_pcibus(bus)	(pcibus_to_node(bus) == -1 ?		\
+				 cpu_all_mask :				\
+				 cpumask_of_node(pcibus_to_node(bus)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6228: FILE: include/linux/cpumask.h:524:
+ * not all bits may be allocated. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6310: FILE: include/linux/interrupt.h:114:
+extern int irq_set_affinity(unsigned int irq, const struct cpumask *cpumask);

WARNING:TYPO_SPELLING: 'agressive' may be misspelled - perhaps 'aggressive'?
#6390: FILE: include/linux/sched.h:792:
+ * SD_BALANCE_NEWIDLE helps agressive task consolidation and power savings.
                             ^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6447: FILE: include/linux/sched.h:914:
+extern void partition_sched_domains(int ndoms_new, struct cpumask *doms_new,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6503: FILE: include/linux/sched.h:2252:
+extern long sched_setaffinity(pid_t pid, const struct cpumask *new_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6504: FILE: include/linux/sched.h:2253:
+extern long sched_getaffinity(pid_t pid, struct cpumask *mask);

WARNING:TYPO_SPELLING: 'persuing' may be misspelled - perhaps 'pursuing'?
#6547: FILE: init/Kconfig:934:
+	  and have several arch maintainers persuing me down dark alleys.
 	                                    ^^^^^^^^

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#7678: FILE: kernel/sched.c:6248:
+		if (p->mm && printk_ratelimit()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#7679: FILE: kernel/sched.c:6249:
+			printk(KERN_INFO "process %d (%s) no "

WARNING:SPLIT_STRING: quoted string split across lines
#7680: FILE: kernel/sched.c:6250:
+			printk(KERN_INFO "process %d (%s) no "
+			       "longer affine to cpu%d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#7725: FILE: kernel/sched.c:6621:
+			BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#7743: FILE: kernel/sched.c:6685:
+			BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#8411: FILE: kernel/sched.c:7534:
+				SD_NODES_PER_DOMAIN*cpumask_weight(nodemask)) {
 				                   ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*sg)...) over kmalloc_node(sizeof(struct sched_group)...)
#8560: FILE: kernel/sched.c:7660:
+		sg = kmalloc_node(sizeof(struct sched_group) + cpumask_size(),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*sg)...) over kmalloc_node(sizeof(struct sched_group)...)
#8606: FILE: kernel/sched.c:7695:
+			sg = kmalloc_node(sizeof(struct sched_group) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8658: FILE: kernel/sched.c:7743:
+		cpu_to_allnodes_group(cpumask_first(cpu_map), cpu_map, &sg,
 								tmpmask);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#8869: FILE: kernel/sched.c:7994:
+	if (sscanf(buf, "%u", &level) != 1)
+		return -EINVAL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9100: FILE: kernel/sched_fair.c:1045:
+	if (sched_mc_power_savings >= POWERSAVINGS_BALANCE_WAKEUP &&
+		idle_cpu(cpu) && idle_cpu(this_cpu) &&

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#9246: FILE: kernel/sched_rt.c:817:
+	if (p->rt.nr_cpus_allowed != 1
+	    && cpupri_find(&rq->rd->cpupri, p, mask))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#9414: FILE: kernel/time/clockevents.c:169:
+	BUG_ON(!dev->cpumask);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#9566: FILE: lib/Kconfig:162:
+config CPUMASK_OFFSTACK
+	bool "Force CPU masks off stack" if DEBUG_PER_CPU_MAPS
+	help
+	  Use dynamic allocation for cpumask_var_t, instead of putting
+	  them on the stack.  This is a bit more expensive, but avoids
+	  stack overflow.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000187355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 45 warnings, 49 checks, 7903 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000187355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
