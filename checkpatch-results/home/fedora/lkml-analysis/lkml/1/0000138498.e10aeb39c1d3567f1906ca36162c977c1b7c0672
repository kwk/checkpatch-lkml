WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
page_mkwrite() is meant to be used by filesystems to allocate blocks under a

WARNING:TYPO_SPELLING: 'happenning' may be misspelled - perhaps 'happening'?
#110: FILE: fs/buffer.c:2366:
+ * @pos is offset to which write/truncate is happenning.
                                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#123: FILE: fs/buffer.c:2379:
+	if (PAGE_CACHE_SIZE == bsize)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: fs/buffer.c:2386:
+	printk("Protecting extend (%lu->%lu)\n", (unsigned long)inode->i_size, (unsigned long)pos);

WARNING:TYPO_SPELLING: 'Noone' may be misspelled - perhaps 'No one'?
#165: FILE: fs/buffer.c:2421:
+	 * We want to clear the flag we could have set previously. Noone else
 	                                                           ^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#210: FILE: fs/buffer.c:2466:
+		printk("Waiting for extend to finish (%lu).\n", (unsigned long)pos);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#262: FILE: include/linux/fs.h:524:
+	void (*extend_i_size)(struct inode *, loff_t pos, loff_t len);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: include/linux/fs.h:1597:
+#define I_HOLE_EXTEND		(1 << __I_HOLE_EXTEND)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138498.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 1 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138498.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
