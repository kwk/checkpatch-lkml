WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
[fweisbec@gmail.com: ported to latest -tip and made it work if !CONFIG_MODULES]

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/ftrace.h:227:
+extern int __ftrace_bprintk(unsigned long ip, const char *fmt, ...)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#77: FILE: include/linux/ftrace.h:228:
+		__attribute__ ((format (printf, 2, 3)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#80: FILE: include/linux/ftrace.h:231:
+		__attribute__ ((format (printf, 1, 2)));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fmt' - possible side-effects?
#88: FILE: include/linux/ftrace.h:239:
+#define ftrace_bprintk(fmt, args...)					\
+do {									\
+	static char *__attribute__((section("__trace_bprintk_fmt")))	\
+			ftrace_bprintk_fmt = fmt;			\
+	__ftrace_bprintk_check_format(fmt, ##args);			\
+	__ftrace_bprintk(_THIS_IP_, ftrace_bprintk_fmt, ##args);	\
+} while (0)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__trace_bprintk_fmt") over __attribute__((section("__trace_bprintk_fmt")))
#90: FILE: include/linux/ftrace.h:241:
+	static char *__attribute__((section("__trace_bprintk_fmt")))	\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: kernel/module.c:2197:
+	mod->trace_bprintk_fmt_start = section_objs(hdr, sechdrs, secstrings,
+			"__trace_bprintk_fmt", sizeof(char *),

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: kernel/trace/trace_bprintk.c:57:
+	struct trace_bprintk_fmt *pos, *next;
+	list_for_each_entry_safe(pos, next, &trace_bprintk_fmt_list, list) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: kernel/trace/trace_bprintk.c:68:
+	struct trace_bprintk_fmt *pos;
+	list_for_each_entry(pos, &trace_bprintk_fmt_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: kernel/trace/trace_bprintk.c:79:
+	const char **iter;
+	lock_btrace();

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: kernel/trace/trace_bprintk.c:82:
+		struct trace_bprintk_fmt *tb_fmt = lookup_format(*iter);
+		if (tb_fmt) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#231: FILE: kernel/trace/trace_bprintk.c:90:
+		if (tb_fmt) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#236: FILE: kernel/trace/trace_bprintk.c:95:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: kernel/trace/trace_bprintk.c:105:
+	const char **iter;
+	lock_btrace();

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: kernel/trace/trace_bprintk.c:108:
+		struct trace_bprintk_fmt *tb_fmt;
+		if (!*iter)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: kernel/trace/trace_bprintk.c:122:
+static int module_trace_bprintk_format_notify(struct notifier_block *self,
+		unsigned long val, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: kernel/trace/trace_bprintk.c:125:
+	struct module *mod = data;
+	if (mod->num_trace_bprintk_fmt) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#286: FILE: kernel/trace/trace_bprintk.c:149:
+	if (!btrace_metadata_count) {
+		shrink_trace_bprintk_fmt();
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: kernel/trace/trace_bprintk.c:158:
+module_trace_bprintk_format_notify(struct notifier_block *self,
+		unsigned long val, void *data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#304: FILE: kernel/trace/trace_bprintk.c:167:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: kernel/trace/trace_bprintk.c:208:
+	int ret = register_module_notifier(&module_trace_bprintk_format_nb);
+	if (ret)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000160966.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 8 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000160966.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
