WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
v2: kosaki@jp.fujitsu.com: print the function names instead of addr, and zap

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: include/trace/events/workqueue.h:1:
+#if !defined(_TRACE_WORKQUEUE_H) || defined(TRACE_HEADER_MULTI_READ)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#76: FILE: include/trace/events/workqueue.h:11:
+TRACE_EVENT(workqueue_insertion,
+
+	TP_PROTO(struct task_struct *wq_thread, struct work_struct *work),
+
+	TP_ARGS(wq_thread, work),
+
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: include/trace/events/workqueue.h:12:
+TRACE_EVENT(workqueue_insertion,
+

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#78: FILE: include/trace/events/workqueue.h:13:
+	TP_PROTO(struct task_struct *wq_thread, struct work_struct *work),
+
+	TP_ARGS(wq_thread, work),
+
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#80: FILE: include/trace/events/workqueue.h:15:
+	TP_ARGS(wq_thread, work),
+
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#82: FILE: include/trace/events/workqueue.h:17:
+	TP_STRUCT__entry(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#82: FILE: include/trace/events/workqueue.h:17:
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#83: FILE: include/trace/events/workqueue.h:18:
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#84: FILE: include/trace/events/workqueue.h:19:
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#85: FILE: include/trace/events/workqueue.h:20:
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#86: FILE: include/trace/events/workqueue.h:21:
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#88: FILE: include/trace/events/workqueue.h:23:
+	TP_fast_assign(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#88: FILE: include/trace/events/workqueue.h:23:
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#92: FILE: include/trace/events/workqueue.h:27:
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/trace/events/workqueue.h:30:
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#98: FILE: include/trace/events/workqueue.h:33:
+TRACE_EVENT(workqueue_execution,
+
+	TP_PROTO(struct task_struct *wq_thread, struct work_struct *work),
+
+	TP_ARGS(wq_thread, work),
+
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: include/trace/events/workqueue.h:34:
+TRACE_EVENT(workqueue_execution,
+

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#100: FILE: include/trace/events/workqueue.h:35:
+	TP_PROTO(struct task_struct *wq_thread, struct work_struct *work),
+
+	TP_ARGS(wq_thread, work),
+
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#102: FILE: include/trace/events/workqueue.h:37:
+	TP_ARGS(wq_thread, work),
+
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#104: FILE: include/trace/events/workqueue.h:39:
+	TP_STRUCT__entry(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#104: FILE: include/trace/events/workqueue.h:39:
+	TP_STRUCT__entry(
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#105: FILE: include/trace/events/workqueue.h:40:
+		__array(char,		thread_comm,	TASK_COMM_LEN)
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#106: FILE: include/trace/events/workqueue.h:41:
+		__field(pid_t,		thread_pid)
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#107: FILE: include/trace/events/workqueue.h:42:
+		__field(work_func_t,	func)
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#108: FILE: include/trace/events/workqueue.h:43:
+	),
+
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#110: FILE: include/trace/events/workqueue.h:45:
+	TP_fast_assign(

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#110: FILE: include/trace/events/workqueue.h:45:
+	TP_fast_assign(
+		memcpy(__entry->thread_comm, wq_thread->comm, TASK_COMM_LEN);
+		__entry->thread_pid	= wq_thread->pid;
+		__entry->func		= work->func;
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#114: FILE: include/trace/events/workqueue.h:49:
+	),
+
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)
+);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: include/trace/events/workqueue.h:52:
+	TP_printk("thread=%s:%d func=%pF", __entry->thread_comm,
+		__entry->thread_pid, __entry->func)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: include/trace/events/workqueue.h:57:
+TRACE_EVENT(workqueue_creation,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#127: FILE: include/trace/events/workqueue.h:62:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#133: FILE: include/trace/events/workqueue.h:68:
+	TP_fast_assign(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: include/trace/events/workqueue.h:75:
+	TP_printk("thread=%s:%d cpu=%d", __entry->thread_comm,
+		__entry->thread_pid, __entry->cpu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: include/trace/events/workqueue.h:79:
+TRACE_EVENT(workqueue_destruction,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#149: FILE: include/trace/events/workqueue.h:84:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#154: FILE: include/trace/events/workqueue.h:89:
+	TP_fast_assign(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138048.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 15 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138048.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
