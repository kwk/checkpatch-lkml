WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
>  arch/x86/kernel/io_apic.c    | 3898 +++++++++++++++++++++++++++++++++++++++++++

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cfg' - possible side-effects?
#109: FILE: x86/kernel/io_apic_64.c:191:
+#define for_each_irq_cfg(cfg)		\
 	for (cfg = irq_cfgx; cfg; cfg = cfg->next)

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: x86/kernel/io_apic_64.c:387:
+        if (sis_apic_bug)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: x86/kernel/io_apic_64.c:387:
+        if (sis_apic_bug)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: x86/kernel/io_apic_64.c:388:
+                writel(reg, &io_apic->index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: x86/kernel/io_apic_64.c:388:
+                writel(reg, &io_apic->index);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#144: FILE: x86/kernel/io_apic_64.c:502:
+			io_apic_write(apic, 0x11 + pin*2, dest);
 			                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#152: FILE: x86/kernel/io_apic_64.c:509:
+		io_apic_modify(apic, 0x10 + pin*2, reg);
 		                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: x86/kernel/io_apic_64.c:709:
+static void mask_IO_APIC_irq (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: x86/kernel/io_apic_64.c:718:
+static void unmask_IO_APIC_irq (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: x86/kernel/io_apic_64.c:741:
+static void clear_IO_APIC (void)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#245: FILE: x86/kernel/io_apic_64.c:828:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#249: FILE: x86/kernel/io_apic_64.c:832:
+		early_ioapic_entries[apic] =
+			kzalloc(sizeof(struct IO_APIC_route_entry) *
+				nr_ioapic_registers[apic], GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#260: FILE: x86/kernel/io_apic_64.c:843:
+			entry = early_ioapic_entries[apic][pin] =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#300: FILE: x86/kernel/io_apic_64.c:926:
+		for(apic = 0; apic < nr_ioapics; apic++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: x86/kernel/io_apic_64.c:946:
+	apic_printk(APIC_DEBUG, "querying PCI -> IRQ mapping bus:%d, slot:%d, pin:%d.\n",
+		bus, slot, pin);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: x86/kernel/io_apic_64.c:963:
+			int irq = pin_2_irq(i,apic,mp_irqs[i].mp_dstirq);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: x86/kernel/io_apic_64.c:963:
+			int irq = pin_2_irq(i,apic,mp_irqs[i].mp_dstirq);
 			                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: x86/kernel/io_apic_64.c:1023:
+ * be read in from the ELCR */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#421: FILE: x86/kernel/io_apic_64.c:1052:
+			printk(KERN_WARNING "broken BIOS!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#432: FILE: x86/kernel/io_apic_64.c:1063:
+			printk(KERN_WARNING "broken BIOS!!\n");

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#445: FILE: x86/kernel/io_apic_64.c:1079:
+	switch ((mp_irqs[idx].mp_irqflag>>2) & 3)
 	                                ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#460: FILE: x86/kernel/io_apic_64.c:1087:
+			switch (mp_bus_id_to_type[bus]) {
+				case MP_BUS_ISA: /* ISA pin */
[...]
+				case MP_BUS_EISA: /* EISA pin */
[...]
+				case MP_BUS_PCI: /* PCI pin */
[...]
+				case MP_BUS_MCA: /* MCA pin */
[...]
+				default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#483: FILE: x86/kernel/io_apic_64.c:1110:
+					printk(KERN_WARNING "broken BIOS!!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#502: FILE: x86/kernel/io_apic_64.c:1124:
+			printk(KERN_WARNING "broken BIOS!!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: x86/kernel/io_apic_64.c:1175:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: x86/kernel/io_apic_64.c:1176:
+                 * For MPS mode, so far only needed by ES7000 platform$

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: x86/kernel/io_apic_64.c:1177:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: x86/kernel/io_apic_64.c:1178:
+                if (ioapic_renumber_irq)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: x86/kernel/io_apic_64.c:1178:
+                if (ioapic_renumber_irq)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: x86/kernel/io_apic_64.c:1179:
+                        irq = ioapic_renumber_irq(apic, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: x86/kernel/io_apic_64.c:1179:
+                        irq = ioapic_renumber_irq(apic, irq);$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#617: FILE: x86/kernel/io_apic_64.c:1230:
+	static int current_vector = FIRST_DEVICE_VECTOR, current_offset = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfg->move_in_progress'
#631: FILE: x86/kernel/io_apic_64.c:1240:
+	if ((cfg->move_in_progress) || cfg->move_cleanup_count)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#639: FILE: x86/kernel/io_apic_64.c:1246:
+		cpumask_t tmp;
+		cpus_and(tmp, cfg->domain, mask);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: x86/kernel/io_apic_64.c:1364:
+        int apic, idx, pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: x86/kernel/io_apic_64.c:1364:
+        int apic, idx, pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#769: FILE: x86/kernel/io_apic_64.c:1366:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: x86/kernel/io_apic_64.c:1366:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: x86/kernel/io_apic_64.c:1367:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: x86/kernel/io_apic_64.c:1367:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: x86/kernel/io_apic_64.c:1368:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: x86/kernel/io_apic_64.c:1368:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: x86/kernel/io_apic_64.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: x86/kernel/io_apic_64.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == pin_2_irq(idx, apic, pin)'
#772: FILE: x86/kernel/io_apic_64.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#773: FILE: x86/kernel/io_apic_64.c:1370:
+                                return irq_trigger(idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: x86/kernel/io_apic_64.c:1370:
+                                return irq_trigger(idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: x86/kernel/io_apic_64.c:1371:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: x86/kernel/io_apic_64.c:1371:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: x86/kernel/io_apic_64.c:1372:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: x86/kernel/io_apic_64.c:1372:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: x86/kernel/io_apic_64.c:1373:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#777: FILE: x86/kernel/io_apic_64.c:1374:
+         * nonexistent IRQs are edge default$

ERROR:CODE_INDENT: code indent should use tabs where possible
#778: FILE: x86/kernel/io_apic_64.c:1375:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: x86/kernel/io_apic_64.c:1376:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: x86/kernel/io_apic_64.c:1376:
+        return 0;$

CHECK:SPACING: No space is necessary after a cast
#831: FILE: x86/kernel/io_apic_64.c:1439:
+			(struct IR_IO_APIC_route_entry *) entry;

CHECK:BRACES: Unbalanced braces around else statement
#856: FILE: x86/kernel/io_apic_64.c:1464:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: x86/kernel/io_apic_64.c:1636:
+        if (reg_01.bits.version >= 0x20)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: x86/kernel/io_apic_64.c:1636:
+        if (reg_01.bits.version >= 0x20)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: x86/kernel/io_apic_64.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: x86/kernel/io_apic_64.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#927: FILE: x86/kernel/io_apic_64.c:1640:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#935: FILE: x86/kernel/io_apic_64.c:1647:
+	printk(KERN_DEBUG ".... register #01: %08X\n", *(int *)&reg_01);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#944: FILE: x86/kernel/io_apic_64.c:1684:
+		printk(KERN_DEBUG " %02x %03X ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: x86/kernel/io_apic_64.c:1685:
+		printk(KERN_DEBUG " %02x %03X ",
+			i,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#956: FILE: x86/kernel/io_apic_64.c:1706:
+		printk(KERN_DEBUG "IRQ%d ", cfg->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#966: FILE: x86/kernel/io_apic_64.c:1753:
+	printk(KERN_INFO "... APIC ID:      %08x (%01x)\n", v, read_apic_id());

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: x86/kernel/io_apic_64.c:1849:
+	outb(0x0b,0xa0);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#999: FILE: x86/kernel/io_apic_64.c:1850:
+	outb(0x0b,0x20);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1003: FILE: x86/kernel/io_apic_64.c:1852:
+	outb(0x0a,0xa0);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1004: FILE: x86/kernel/io_apic_64.c:1853:
+	outb(0x0a,0x20);
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#1035: FILE: x86/kernel/io_apic_64.c:1901:
+	for(apic = 0; apic < nr_ioapics; apic++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1116: FILE: x86/kernel/io_apic_64.c:2187:
 {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: x86/kernel/io_apic_64.c:2200:
+        send_IPI_self(irq_cfg(irq)->vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: x86/kernel/io_apic_64.c:2200:
+        send_IPI_self(irq_cfg(irq)->vector);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1147: FILE: x86/kernel/io_apic_64.c:2202:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: x86/kernel/io_apic_64.c:2202:
+        return 1;$

WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#1187: FILE: x86/kernel/io_apic_64.c:2228:
+ * For level triggered, we need to modify the io-apic RTE aswell with the update
                                                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1264: FILE: x86/kernel/io_apic_64.c:2300:
+^I ^I * Interrupt in progress. Migrating irq now will change the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1264: FILE: x86/kernel/io_apic_64.c:2300:
+^I ^I * Interrupt in progress. Migrating irq now will change the$

WARNING:TYPO_SPELLING: 'everthing' may be misspelled - perhaps 'everything'?
#1273: FILE: x86/kernel/io_apic_64.c:2309:
+	/* everthing is clear. we have right of way */
 	   ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1326: FILE: x86/kernel/io_apic_64.c:2362:
+	unsigned vector, me;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1327: FILE: x86/kernel/io_apic_64.c:2363:
+	unsigned vector, me;
+	ack_APIC_irq();

WARNING:LINE_SPACING: Missing a blank line after declarations
#1338: FILE: x86/kernel/io_apic_64.c:2374:
+		struct irq_cfg *cfg;
+		irq = __get_cpu_var(vector_irq)[vector];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector == cfg->vector'
#1349: FILE: x86/kernel/io_apic_64.c:2385:
+		if ((vector == cfg->vector) && cpu_isset(me, cfg->domain))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1364: FILE: x86/kernel/io_apic_64.c:2400:
+	unsigned vector, me;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1516: FILE: x86/kernel/io_apic_64.c:2501:
+	/*
+	* It appears there is an erratum which affects at least version 0x11

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1543: FILE: x86/kernel/io_apic_64.c:2550:
+^I.name ^I^I= "IR-IO-APIC",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1544: FILE: x86/kernel/io_apic_64.c:2551:
+^I.startup ^I= startup_ioapic_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1545: FILE: x86/kernel/io_apic_64.c:2552:
+^I.mask^I ^I= mask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1546: FILE: x86/kernel/io_apic_64.c:2553:
+^I.unmask^I ^I= unmask_IO_APIC_irq,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1547: FILE: x86/kernel/io_apic_64.c:2554:
+^I.ack ^I^I= ack_x2apic_edge,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1548: FILE: x86/kernel/io_apic_64.c:2555:
+^I.eoi ^I^I= ack_x2apic_level,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1550: FILE: x86/kernel/io_apic_64.c:2557:
+^I.set_affinity ^I= set_ir_ioapic_affinity_irq,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1569: FILE: x86/kernel/io_apic_64.c:2725:
 }
+early_param("disable_timer_pin_1", disable_timer_pin_setup);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1588: FILE: x86/kernel/io_apic_64.c:2747:
+        ver = apic_read(APIC_LVR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: x86/kernel/io_apic_64.c:2747:
+        ver = apic_read(APIC_LVR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1589: FILE: x86/kernel/io_apic_64.c:2748:
+        ver = GET_APIC_VERSION(ver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: x86/kernel/io_apic_64.c:2748:
+        ver = GET_APIC_VERSION(ver);$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1639: FILE: x86/kernel/io_apic_64.c:2921:
 {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1658: FILE: x86/kernel/io_apic_64.c:2933:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1659: FILE: x86/kernel/io_apic_64.c:2934:
+         * Set up IO-APIC IRQ routing.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1660: FILE: x86/kernel/io_apic_64.c:2935:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: x86/kernel/io_apic_64.c:2937:
+        if (!acpi_ioapic)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: x86/kernel/io_apic_64.c:2937:
+        if (!acpi_ioapic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: x86/kernel/io_apic_64.c:2938:
+                setup_ioapic_ids_from_mpc();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1663: FILE: x86/kernel/io_apic_64.c:2938:
+                setup_ioapic_ids_from_mpc();$

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#1674: FILE: x86/kernel/io_apic_64.c:2947:
+ *      Called after all the initialization is done. If we didnt find any
                                                            ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1683: FILE: x86/kernel/io_apic_64.c:2953:
+        if (sis_apic_bug == -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1683: FILE: x86/kernel/io_apic_64.c:2953:
+        if (sis_apic_bug == -1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1684: FILE: x86/kernel/io_apic_64.c:2954:
+                sis_apic_bug = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1684: FILE: x86/kernel/io_apic_64.c:2954:
+                sis_apic_bug = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1685: FILE: x86/kernel/io_apic_64.c:2955:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1685: FILE: x86/kernel/io_apic_64.c:2955:
+        return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1694: FILE: x86/kernel/io_apic_64.c:2964:
 };
+static struct sysfs_ioapic_data * mp_ioapic_data[MAX_IO_APICS];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1694: FILE: x86/kernel/io_apic_64.c:2964:
+static struct sysfs_ioapic_data * mp_ioapic_data[MAX_IO_APICS];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required one side of that '++' (ctx:WxW)
#1704: FILE: x86/kernel/io_apic_64.c:2974:
+	for (i = 0; i < nr_ioapic_registers[dev->id]; i ++, entry ++ )
 	                                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1704: FILE: x86/kernel/io_apic_64.c:2974:
+	for (i = 0; i < nr_ioapic_registers[dev->id]; i ++, entry ++ )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1715: FILE: x86/kernel/io_apic_64.c:3012:
+	struct sys_device * dev;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1723: FILE: x86/kernel/io_apic_64.c:3019:
+	for (i = 0; i < nr_ioapics; i++ ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1782: FILE: x86/kernel/io_apic_64.c:3123:
+		BUG_ON(ir_index == -1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1784: FILE: x86/kernel/io_apic_64.c:3125:
+		memset (&irte, 0, sizeof(irte));

CHECK:BRACES: Unbalanced braces around else statement
#1801: FILE: x86/kernel/io_apic_64.c:3142:
+	} else

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1808: FILE: x86/kernel/io_apic_64.c:3149:
+				MSI_ADDR_DEST_MODE_PHYSICAL:
 				                           ^

WARNING:INDENTED_LABEL: labels should not be indented
#1808: FILE: x86/kernel/io_apic_64.c:3149:
+				MSI_ADDR_DEST_MODE_PHYSICAL:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1810: FILE: x86/kernel/io_apic_64.c:3151:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#1810: FILE: x86/kernel/io_apic_64.c:3151:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1811: FILE: x86/kernel/io_apic_64.c:3152:
+				MSI_ADDR_REDIRECTION_CPU:
 				                        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1811: FILE: x86/kernel/io_apic_64.c:3152:
+				MSI_ADDR_REDIRECTION_CPU:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1818: FILE: x86/kernel/io_apic_64.c:3159:
+			((INT_DELIVERY_MODE != dest_LowestPrio) ?

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1819: FILE: x86/kernel/io_apic_64.c:3160:
+				MSI_DATA_DELIVERY_FIXED:
 				                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1819: FILE: x86/kernel/io_apic_64.c:3160:
+				MSI_DATA_DELIVERY_FIXED:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1911: FILE: x86/kernel/io_apic_64.c:3287:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1918: FILE: x86/kernel/io_apic_64.c:3294:
+		printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#1920: FILE: x86/kernel/io_apic_64.c:3296:
+^I^I        pci_name(dev));$

CHECK:BRACES: Unbalanced braces around else statement
#1942: FILE: x86/kernel/io_apic_64.c:3323:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2130: FILE: x86/kernel/io_apic_64.c:3494:
+	set_irq_chip_and_handler_name(irq, &dmar_msi_type, handle_edge_irq,
+		"edge");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2153: FILE: x86/kernel/io_apic_64.c:3595:
+                          ACPI-based IOAPIC Configuration$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2178: FILE: x86/kernel/io_apic_64.c:3688:
+int __init io_apic_get_redir_entries (int ioapic)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2187: FILE: x86/kernel/io_apic_64.c:3701:
+int io_apic_set_pci_routing (int ioapic, int pin, int irq, int triggering, int polarity)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2191: FILE: x86/kernel/io_apic_64.c:3704:
+		apic_printk(APIC_QUIET,KERN_ERR "IOAPIC[%d]: Invalid reference to IRQ 0\n",
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2192: FILE: x86/kernel/io_apic_64.c:3705:
+		apic_printk(APIC_QUIET,KERN_ERR "IOAPIC[%d]: Invalid reference to IRQ 0\n",
 			ioapic);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2199: FILE: x86/kernel/io_apic_64.c:3720:
 
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mem"
#2243: FILE: x86/kernel/io_apic_64.c:3809:
+	if (mem != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#2282: FILE: x86/kernel/io_apic_64.c:3839:
+                        if (!ioapic_phys) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2282: FILE: x86/kernel/io_apic_64.c:3839:
+                        if (!ioapic_phys) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2283: FILE: x86/kernel/io_apic_64.c:3840:
+                                printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2283: FILE: x86/kernel/io_apic_64.c:3840:
+                                printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2283: FILE: x86/kernel/io_apic_64.c:3840:
+                                printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#2284: FILE: x86/kernel/io_apic_64.c:3841:
+                                       "WARNING: bogus zero IO-APIC "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2284: FILE: x86/kernel/io_apic_64.c:3841:
+                                       "WARNING: bogus zero IO-APIC "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2285: FILE: x86/kernel/io_apic_64.c:3842:
+                                       "address found in MPTABLE, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2285: FILE: x86/kernel/io_apic_64.c:3842:
+                                       "address found in MPTABLE, "$

WARNING:SPLIT_STRING: quoted string split across lines
#2285: FILE: x86/kernel/io_apic_64.c:3842:
+                                       "WARNING: bogus zero IO-APIC "
+                                       "address found in MPTABLE, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#2286: FILE: x86/kernel/io_apic_64.c:3843:
+                                       "disabling IO/APIC support!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2286: FILE: x86/kernel/io_apic_64.c:3843:
+                                       "disabling IO/APIC support!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#2286: FILE: x86/kernel/io_apic_64.c:3843:
+                                       "address found in MPTABLE, "
+                                       "disabling IO/APIC support!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2287: FILE: x86/kernel/io_apic_64.c:3844:
+                                smp_found_config = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2287: FILE: x86/kernel/io_apic_64.c:3844:
+                                smp_found_config = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2288: FILE: x86/kernel/io_apic_64.c:3845:
+                                skip_ioapic_setup = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2288: FILE: x86/kernel/io_apic_64.c:3845:
+                                skip_ioapic_setup = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2289: FILE: x86/kernel/io_apic_64.c:3846:
+                                goto fake_ioapic_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2289: FILE: x86/kernel/io_apic_64.c:3846:
+                                goto fake_ioapic_page;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2290: FILE: x86/kernel/io_apic_64.c:3847:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2290: FILE: x86/kernel/io_apic_64.c:3847:
+                        }$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ioapic_res"
#2310: FILE: x86/kernel/io_apic_64.c:3864:
+		if (ioapic_res != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2326: FILE: x86/kernel/io_apic_64.c:3880:
+		printk(KERN_ERR

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2339: FILE: x86/kernel/io_apic_64.c:3893:
+/* Insert the IO APIC resources after PCI initialization has occured to handle
                                                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2340: FILE: x86/kernel/io_apic_64.c:3894:
+ * IO APICS that are mapped in on a BAR in PCI space. */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 64 errors, 83 warnings, 25 checks, 2186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
