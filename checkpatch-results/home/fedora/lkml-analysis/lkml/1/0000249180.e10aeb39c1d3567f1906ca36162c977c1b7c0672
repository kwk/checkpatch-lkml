WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#72: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:5:
+extern void ztdummy_extern_interrupt(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:6:
+extern void ztdummy_register_interrupt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:7:
+extern int ztdummy_unregister_interrupt(void);

WARNING:TYPO_SPELLING: 'differen' may be misspelled - perhaps 'different'?
#101: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:25:
+ *       also registers are assigned differen for HFC-4s/8s and HFC-E1
                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#105: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:29:
+/*
+#define MAX_FRAME_SIZE	2048

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:35:
+^Iint^I^Iport; ^I/* the interface port this */$

WARNING:TYPO_SPELLING: 'curren' may be misspelled - perhaps 'current'?
#127: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:51:
+	int		coeff_count; /* curren coeff block */
 	   		                ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#131: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:55:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:71:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:133:
+	void		(*HFC_outb)(struct hfc_multi *hc, u_char reg,
+				u_char val, const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:135:
+	void		(*HFC_outb_nodebug)(struct hfc_multi *hc, u_char reg,
+				u_char val, const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:137:
+	u_char		(*HFC_inb)(struct hfc_multi *hc, u_char reg,
+				const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:139:
+	u_char		(*HFC_inb_nodebug)(struct hfc_multi *hc, u_char reg,
+				const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:141:
+	u_short		(*HFC_inw)(struct hfc_multi *hc, u_char reg,
+				const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:143:
+	u_short		(*HFC_inw_nodebug)(struct hfc_multi *hc, u_char reg,
+				const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:145:
+	void		(*HFC_wait)(struct hfc_multi *hc,
+				const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:147:
+	void		(*HFC_wait_nodebug)(struct hfc_multi *hc,
+				const char *function, int line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:150:
+	void		(*HFC_outb)(struct hfc_multi *hc, u_char reg,
+				u_char val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:152:
+	void		(*HFC_outb_nodebug)(struct hfc_multi *hc, u_char reg,
+				u_char val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:161:
+	void		(*read_fifo)(struct hfc_multi *hc, u_char *data,
+				int len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:163:
+	void		(*write_fifo)(struct hfc_multi *hc, u_char *data,
+				int len);

CHECK:CAMELCASE: Avoid CamelCase: <Flen>
#250: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:174:
+	int		Flen;	/* F-buffer size */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Zlen>
#251: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:175:
+	int		Zlen;	/* Z-buffer size (must be int for calculation)*/

CHECK:CAMELCASE: Avoid CamelCase: <Zmin>
#253: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:177:
+	int		Zmin;	/* Z-buffer offset */

CHECK:CAMELCASE: Avoid CamelCase: <DTMFbase>
#254: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:178:
+	int		DTMFbase; /* base address of DTMF coefficients */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:188:
+^Iu_long^I^Iwdcount; ^I/* every 500 ms we need to */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:191:
+^Iu_int^I^Iactivity[8]; ^I/* if there is any action on this */$

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#272: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:196:
+	int		syncronized; /* keep track of existing sync interface */
 	   		^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'equvalent' may be misspelled - perhaps 'equivalent'?
#280: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:204:
+	 * the bch->channel is equvalent to the hfc-channel
 	                       ^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:223:
+#define	PLX_GPIO4		(1 << PLX_GPIO4_BIT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#300: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:224:
+#define	PLX_GPIO5		(1 << PLX_GPIO5_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#301: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:225:
+#define	PLX_GPIO6		(1 << PLX_GPIO6_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#302: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:226:
+#define	PLX_GPIO7		(1 << PLX_GPIO7_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:227:
+#define PLX_GPIO8		(1 << PLX_GPIO8_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#305: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:229:
+#define	PLX_GPIO4_DIR		(1 << PLX_GPIO4_DIR_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:230:
+#define	PLX_GPIO5_DIR		(1 << PLX_GPIO5_DIR_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:231:
+#define	PLX_GPIO6_DIR		(1 << PLX_GPIO6_DIR_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:232:
+#define	PLX_GPIO7_DIR		(1 << PLX_GPIO7_DIR_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#309: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:233:
+#define PLX_GPIO8_DIR		(1 << PLX_GPIO8_DIR_BIT)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#332: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:256:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:264:
+#define R_BRG_PCM_CFG ^I^I0x02$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#512: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:436:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#737: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:661:
+/*
+#define V_JATT_AUTO_DEL		0x20

WARNING:TYPO_SPELLING: 'contoller' may be misspelled - perhaps 'controller'?
#835: FILE: drivers/isdn/hardware/mISDN/hfc_multi.h:759:
+/* chapter 9: DTMF contoller */
                    ^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1287: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1310: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1311: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:25:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'otherwhise' may be misspelled - perhaps 'otherwise'?
#1328: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:42:
+ *	Bit 11    = 0x00800 = Force PCM bus into slave mode. (otherwhise auto)
   	                                                      ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'otherwhise' may be misspelled - perhaps 'otherwise'?
#1329: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:43:
+ * or   Bit 12    = 0x01000 = Force PCM bus into master mode. (otherwhise auto)
                                                                ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'ony' may be misspelled - perhaps 'only'?
#1344: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:58:
+ *			    (ony once per chip).
   			     ^^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#1361: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:75:
+ * or	Bit 10	  = 0x0400 = Force put clock to interface, even in TE mode.
      	      	                                                   ^^

WARNING:REPEATED_WORD: Possible repeated word: 'slots'
#1386: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:100:
+ *	common time slots slots.

WARNING:TYPO_SPELLING: 'requre' may be misspelled - perhaps 'require'?
#1406: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:120:
+ *	Some cards requre specific IO mode, so it cannot be changed.
   	           ^^^^^^

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#1407: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:121:
+ *	It may be usefull to set IO mode to register io (REGIO) to solve
   	          ^^^^^^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#1420: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:134:
+ *	of the S/T interfaces in TE mode.
   	                         ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1438: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:152:
+/*
+#define IRQCOUNT_DEBUG

CHECK:CAMELCASE: Avoid CamelCase: <HFClist>
#1450: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:164:
+static LIST_HEAD(HFClist);

CHECK:CAMELCASE: Avoid CamelCase: <HFClock>
#1451: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:165:
+static spinlock_t HFClock; /* global hfc list lock */

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#1471: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:185:
+#define	CLKDEL_TE	0x0f	/* CLKDEL in TE mode */
        	         	    	             ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1473: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:187:
+#define	CLKDEL_NT	0x6c	/* CLKDEL in NT mode
+				   (0x60 MUST be included!) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1473: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:187:
+				   (0x60 MUST be included!) */

CHECK:CAMELCASE: Avoid CamelCase: <Port_cnt>
#1495: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:209:
+static int	HFC_cnt, Port_cnt, PCM_cnt = 99;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1499: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:213:
+module_param(debug, uint, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1500: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:214:
+module_param(poll, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1501: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:215:
+module_param(timer, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1502: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:216:
+module_param(clockdelay_te, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1503: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:217:
+module_param(clockdelay_nt, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1504: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:218:
+module_param_array(type, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1505: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:219:
+module_param_array(pcm, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1506: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:220:
+module_param_array(dslot, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1507: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:221:
+module_param_array(iomode, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1508: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:222:
+module_param_array(port, uint, NULL, S_IRUGO | S_IWUSR);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1511: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:225:
+#define HFC_outb(hc, reg, val) \
+	(hc->HFC_outb(hc, reg, val, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1511: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:225:
+#define HFC_outb(hc, reg, val) \
+	(hc->HFC_outb(hc, reg, val, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1513: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:227:
+#define HFC_outb_nodebug(hc, reg, val) \
+	(hc->HFC_outb_nodebug(hc, reg, val, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1513: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:227:
+#define HFC_outb_nodebug(hc, reg, val) \
+	(hc->HFC_outb_nodebug(hc, reg, val, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1515: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:229:
+#define HFC_inb(hc, reg) \
+	(hc->HFC_inb(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1515: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:229:
+#define HFC_inb(hc, reg) \
+	(hc->HFC_inb(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1517: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:231:
+#define HFC_inb_nodebug(hc, reg) \
+	(hc->HFC_inb_nodebug(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1517: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:231:
+#define HFC_inb_nodebug(hc, reg) \
+	(hc->HFC_inb_nodebug(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1519: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:233:
+#define HFC_inw(hc, reg) \
+	(hc->HFC_inw(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1519: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:233:
+#define HFC_inw(hc, reg) \
+	(hc->HFC_inw(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1521: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:235:
+#define HFC_inw_nodebug(hc, reg) \
+	(hc->HFC_inw_nodebug(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1521: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:235:
+#define HFC_inw_nodebug(hc, reg) \
+	(hc->HFC_inw_nodebug(hc, reg, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1523: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:237:
+#define HFC_wait(hc) \
+	(hc->HFC_wait(hc, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1523: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:237:
+#define HFC_wait(hc) \
+	(hc->HFC_wait(hc, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1525: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:239:
+#define HFC_wait_nodebug(hc) \
+	(hc->HFC_wait_nodebug(hc, __func__, __LINE__))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1525: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:239:
+#define HFC_wait_nodebug(hc) \
+	(hc->HFC_wait_nodebug(hc, __func__, __LINE__))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1528: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:242:
+#define HFC_outb(hc, reg, val)		(hc->HFC_outb(hc, reg, val))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1528: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:242:
+#define HFC_outb(hc, reg, val)		(hc->HFC_outb(hc, reg, val))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1529: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:243:
+#define HFC_outb_nodebug(hc, reg, val)	(hc->HFC_outb_nodebug(hc, reg, val))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1529: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:243:
+#define HFC_outb_nodebug(hc, reg, val)	(hc->HFC_outb_nodebug(hc, reg, val))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1530: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:244:
+#define HFC_inb(hc, reg)		(hc->HFC_inb(hc, reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1530: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:244:
+#define HFC_inb(hc, reg)		(hc->HFC_inb(hc, reg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1531: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:245:
+#define HFC_inb_nodebug(hc, reg)	(hc->HFC_inb_nodebug(hc, reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1531: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:245:
+#define HFC_inb_nodebug(hc, reg)	(hc->HFC_inb_nodebug(hc, reg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1532: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:246:
+#define HFC_inw(hc, reg)		(hc->HFC_inw(hc, reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1532: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:246:
+#define HFC_inw(hc, reg)		(hc->HFC_inw(hc, reg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1533: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:247:
+#define HFC_inw_nodebug(hc, reg)	(hc->HFC_inw_nodebug(hc, reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1533: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:247:
+#define HFC_inw_nodebug(hc, reg)	(hc->HFC_inw_nodebug(hc, reg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1534: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:248:
+#define HFC_wait(hc)			(hc->HFC_wait(hc))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1534: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:248:
+#define HFC_wait(hc)			(hc->HFC_wait(hc))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hc' - possible side-effects?
#1535: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:249:
+#define HFC_wait_nodebug(hc)		(hc->HFC_wait_nodebug(hc))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hc' may be better as '(hc)' to avoid precedence issues
#1535: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:249:
+#define HFC_wait_nodebug(hc)		(hc->HFC_wait_nodebug(hc))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1547: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:261:
+	writeb(val, (hc->pci_membase)+reg);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1549: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:263:
+}
+static u_char

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1556: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:270:
+	return readb((hc->pci_membase)+reg);
 	                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1558: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:272:
+}
+static u_short

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1565: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:279:
+	return readw((hc->pci_membase)+reg);
 	                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1567: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:281:
+}
+static void

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1574: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:288:
+	while (readb((hc->pci_membase)+R_STATUS) & V_BUSY);
 	                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1574: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:288:
+	while (readb((hc->pci_membase)+R_STATUS) & V_BUSY);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1581: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:295:
+HFC_outb_regio(struct hfc_multi *hc, u_char reg, u_char val,
+	const char *function, int line)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1586: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:300:
+	outb(reg, (hc->pci_iobase)+4);
 	                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1589: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:303:
+}
+static u_char

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1596: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:310:
+	outb(reg, (hc->pci_iobase)+4);
 	                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1599: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:313:
+}
+static u_short

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1606: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:320:
+	outb(reg, (hc->pci_iobase)+4);
 	                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1609: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:323:
+}
+static void

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1616: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:330:
+	outb(R_STATUS, (hc->pci_iobase)+4);
 	                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1617: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:331:
+	while (inb(hc->pci_iobase) & V_BUSY);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1623: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:337:
+HFC_outb_debug(struct hfc_multi *hc, u_char reg, u_char val,
+		const char *function, int line)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1636: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:350:
+	bits[7] = '0'+(!!(val&1));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1636: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:350:
+	bits[7] = '0'+(!!(val&1));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1637: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:351:
+	bits[6] = '0'+(!!(val&2));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1637: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:351:
+	bits[6] = '0'+(!!(val&2));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1638: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:352:
+	bits[5] = '0'+(!!(val&4));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1638: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:352:
+	bits[5] = '0'+(!!(val&4));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1639: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:353:
+	bits[4] = '0'+(!!(val&8));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1639: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:353:
+	bits[4] = '0'+(!!(val&8));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1640: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:354:
+	bits[3] = '0'+(!!(val&16));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1640: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:354:
+	bits[3] = '0'+(!!(val&16));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1641: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:355:
+	bits[2] = '0'+(!!(val&32));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1641: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:355:
+	bits[2] = '0'+(!!(val&32));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1642: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:356:
+	bits[1] = '0'+(!!(val&64));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1642: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:356:
+	bits[1] = '0'+(!!(val&64));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1643: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:357:
+	bits[0] = '0'+(!!(val&128));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1643: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:357:
+	bits[0] = '0'+(!!(val&128));
 	                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1644: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:358:
+	printk(KERN_DEBUG

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1649: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:363:
+}
+static u_char

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1666: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:380:
+	bits[7] = '0'+(!!(val&1));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1666: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:380:
+	bits[7] = '0'+(!!(val&1));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1667: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:381:
+	bits[6] = '0'+(!!(val&2));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1667: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:381:
+	bits[6] = '0'+(!!(val&2));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1668: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:382:
+	bits[5] = '0'+(!!(val&4));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1668: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:382:
+	bits[5] = '0'+(!!(val&4));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1669: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:383:
+	bits[4] = '0'+(!!(val&8));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1669: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:383:
+	bits[4] = '0'+(!!(val&8));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1670: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:384:
+	bits[3] = '0'+(!!(val&16));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1670: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:384:
+	bits[3] = '0'+(!!(val&16));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1671: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:385:
+	bits[2] = '0'+(!!(val&32));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1671: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:385:
+	bits[2] = '0'+(!!(val&32));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1672: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:386:
+	bits[1] = '0'+(!!(val&64));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1672: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:386:
+	bits[1] = '0'+(!!(val&64));
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1673: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:387:
+	bits[0] = '0'+(!!(val&128));
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1673: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:387:
+	bits[0] = '0'+(!!(val&128));
 	                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1674: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:388:
+	printk(KERN_DEBUG

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1679: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:393:
+}
+static u_short

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1696: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:410:
+	printk(KERN_DEBUG

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1701: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:415:
+}
+static void

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1704: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:418:
+	printk(KERN_DEBUG "HFC_wait(chip %d); in %s() line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1705: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:419:
+	printk(KERN_DEBUG "HFC_wait(chip %d); in %s() line %d\n",
+	    hc->id, function, line);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1714: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:428:
+	outb(A_FIFO_DATA0, (hc->pci_iobase)+4);
 	                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1715: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:429:
+	while (len>>2) {
 	          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1720: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:434:
+	while (len>>1) {
 	          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1731: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:445:
+}
+/* write fifo data (PCIMEM) */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1735: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:449:
+	while (len>>2) {
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1736: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:450:
+		writel(*(u32 *)data, (hc->pci_membase)+A_FIFO_DATA0);
 		                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1740: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:454:
+	while (len>>1) {
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1741: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:455:
+		writew(*(u16 *)data, (hc->pci_membase)+A_FIFO_DATA0);
 		                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1746: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:460:
+		writeb(*data, (hc->pci_membase)+A_FIFO_DATA0);
 		                               ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1751: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:465:
+}
+/* read fifo data (REGIO) */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1755: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:469:
+	outb(A_FIFO_DATA0, (hc->pci_iobase)+4);
 	                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1756: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:470:
+	while (len>>2) {
 	          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1761: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:475:
+	while (len>>1) {
 	          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1777: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:491:
+	while (len>>2) {
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1779: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:493:
+			readl((hc->pci_membase)+A_FIFO_DATA0);
 			                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1783: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:497:
+	while (len>>1) {
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1785: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:499:
+			readw((hc->pci_membase)+A_FIFO_DATA0);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1790: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:504:
+		*data = readb((hc->pci_membase)+A_FIFO_DATA0);
 		                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1796: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:510:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1814: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:528:
+
+

CHECK:SPACING: No space is necessary after a cast
#1872: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:586:
+	datav = data | ((__u32) data << 8) | ((__u32) data << 16) |

CHECK:SPACING: No space is necessary after a cast
#1873: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:587:
+	    ((__u32) data << 24);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1902: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:616:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1965: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:679:
+vpm_out(struct hfc_multi *c, int which, unsigned short addr,
+    unsigned char data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1965: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:679:
+    unsigned char data)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1984: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:698:
+	unsigned char regin;
+	regin = vpm_in(c, which, addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1986: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:700:
+		printk(KERN_DEBUG "Wrote 0x%x to register 0x%x but got back "

WARNING:SPLIT_STRING: quoted string split across lines
#1987: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:701:
+		printk(KERN_DEBUG "Wrote 0x%x to register 0x%x but got back "
+			"0x%x\n", data, addr, regin);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1990: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:704:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1992: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:706:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2005: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:719:
+			printk(KERN_DEBUG "VPM: Chip %d: ver %02x\n", x, ver);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2031: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:745:
+		printk(KERN_DEBUG "VPM: A-law mode\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2034: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:748:
+		printk(KERN_DEBUG "VPM reg 0x20 is %x\n", reg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2039: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:753:
+		printk(KERN_DEBUG "NLP Thresh is set to %d (0x%x)\n", reg, reg);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2055: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:769:
+		udelay(2000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2056: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:770:
+		udelay(2000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2057: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:771:
+		udelay(2000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2058: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:772:
+		udelay(2000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2059: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:773:
+		udelay(2000);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2073: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:787:
+
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2084: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:798:
+		printk(KERN_DEBUG "Got interrupt 0x%x from VPM!\n", gpi2);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2087: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:801:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <_alloc_mISDN_skb>
#2116: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:830:
+	skb = _alloc_mISDN_skb(PH_CONTROL_IND, HFC_VOL_CHANGE_TX,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2117: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:831:
+	skb = _alloc_mISDN_skb(PH_CONTROL_IND, HFC_VOL_CHANGE_TX,
+		sizeof(int), &txadj, GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <recv_Bchannel_skb>
#2119: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:833:
+		recv_Bchannel_skb(bch, skb);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2122: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:836:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2122: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:836:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2122: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:836:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2122: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:836:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2125: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:839:
+	printk(KERN_NOTICE "vpm_echocan_on called taps [%d] on timeslot %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vpm_echocan_on', this function's name, in a string
#2125: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:839:
+	printk(KERN_NOTICE "vpm_echocan_on called taps [%d] on timeslot %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2126: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:840:
+	printk(KERN_NOTICE "vpm_echocan_on called taps [%d] on timeslot %d\n",
+	    taps, timeslot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2150: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:864:
+	skb = _alloc_mISDN_skb(PH_CONTROL_IND, HFC_VOL_CHANGE_TX,
+		sizeof(int), &txadj, GFP_ATOMIC);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2155: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:869:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2155: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:869:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2155: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:869:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2155: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:869:
+	timeslot = ((ch/4)*8) + ((ch%4)*4) + 1;
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2158: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:872:
+	printk(KERN_NOTICE "vpm_echocan_off called on timeslot %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vpm_echocan_off', this function's name, in a string
#2158: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:872:
+	printk(KERN_NOTICE "vpm_echocan_off called on timeslot %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:873:
+	printk(KERN_NOTICE "vpm_echocan_off called on timeslot %d\n",
+	    timeslot);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2164: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:878:
+
+

WARNING:TYPO_SPELLING: 'occurr' may be misspelled - perhaps 'occur'?
#2168: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:882:
+ * We must lock irqsave, so no other interrupt (other card) will occurr!
                                                                  ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2182: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:896:
+		printk(KERN_DEBUG "%s: RESYNC(syncmaster=0x%p)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2183: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:897:
+		printk(KERN_DEBUG "%s: RESYNC(syncmaster=0x%p)\n",
+			__func__, syncmaster);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2188: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:902:
+			printk(KERN_DEBUG "using provided controller\n");

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#2192: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:906:
+				if (hc->syncronized) {
 				        ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2203: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:917:
+			plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 			                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2211: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:925:
+						printk(KERN_DEBUG

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#2222: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:936:
+			printk(KERN_DEBUG "id=%d (0x%p) = syncronized with "
 			                                  ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2222: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:936:
+			printk(KERN_DEBUG "id=%d (0x%p) = syncronized with "

WARNING:SPLIT_STRING: quoted string split across lines
#2223: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:937:
+			printk(KERN_DEBUG "id=%d (0x%p) = syncronized with "
+				"interface.\n", hc->id, hc);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2225: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:939:
+		plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2232: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:946:
+				printk(KERN_DEBUG "Schedule jatt PLL\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2239: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:953:
+				printk(KERN_DEBUG

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#2240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:954:
+					"id=%d (0x%p) = PCM master syncronized "
 					                           ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2241: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:955:
+					"id=%d (0x%p) = PCM master syncronized "
+					"with QUARTZ\n", hc->id, hc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2244: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:958:
+				/* Use the crystal clock for the PCM
+				   master card */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2244: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:958:
+				   master card */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2246: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:960:
+					printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2251: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:965:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#2253: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:967:
+					    "QUARTZ is automatically "
+					    "enabled by HFC-%dS\n", hc->type);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2255: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:969:
+			plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 			                                      ^

CHECK:BRACES: Unbalanced braces around else statement
#2259: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:973:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2261: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:975:
+				printk(KERN_ERR "%s no pcm master, this MUST "

WARNING:SPLIT_STRING: quoted string split across lines
#2262: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:976:
+				printk(KERN_ERR "%s no pcm master, this MUST "
+					"not happen!\n", __func__);

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#2274: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:988:
+	if (hc->syncronized) {
 	        ^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!syncmaster"
#2275: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:989:
+		if (syncmaster == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2277: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:991:
+				printk(KERN_WARNING "%s: GOT sync on card %d"

WARNING:SPLIT_STRING: quoted string split across lines
#2278: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:992:
+				printk(KERN_WARNING "%s: GOT sync on card %d"
+					" (id=%d)\n", __func__, hc->id + 1,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2285: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:999:
+				printk(KERN_WARNING "%s: LOST sync on card %d"

WARNING:SPLIT_STRING: quoted string split across lines
#2286: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1000:
+				printk(KERN_WARNING "%s: LOST sync on card %d"
+					" (id=%d)\n", __func__, hc->id + 1,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2293: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1007:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2304: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1018:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2304: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1018:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2309: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1023:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2312: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1026:
+	udelay(1000); /* instead of 'wait' that may cause locking */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2317: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1031:
+			printk(KERN_DEBUG "%s: release PLXSD card %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2318: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1032:
+			printk(KERN_DEBUG "%s: release PLXSD card %d\n",
+			    __func__, hc->id + 1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2320: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1034:
+		plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2333: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1047:
+			printk(KERN_WARNING "%s: PCM off: PLX_GPIO=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2334: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1048:
+			printk(KERN_WARNING "%s: PCM off: PLX_GPIO=%x\n",
+				__func__, pv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2353: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1067:
+		printk(KERN_DEBUG "%s: done\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2353: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1067:
+		printk(KERN_DEBUG "%s: done\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2378: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1092:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2378: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1092:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2379: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1093:
+	val = HFC_inb(hc, R_CHIP_ID)>>4;
 	                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2381: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1095:
+		printk(KERN_INFO "HFC_multi: unknown CHIP_ID:%x\n", (u_int)val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2386: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1100:
+	printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2391: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1105:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2393: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1107:
+		    "HFC_multi: NOTE: Your chip is revision 0, "
+		    "ask Cologne Chip for update. Newer chips "

WARNING:SPLIT_STRING: quoted string split across lines
#2394: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1108:
+		    "ask Cologne Chip for update. Newer chips "
+		    "have a better FIFO handling. Old chips "

WARNING:SPLIT_STRING: quoted string split across lines
#2395: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1109:
+		    "have a better FIFO handling. Old chips "
+		    "still work but may have slightly lower "

WARNING:SPLIT_STRING: quoted string split across lines
#2396: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1110:
+		    "still work but may have slightly lower "
+		    "HDLC transmit performance.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2399: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1113:
+		printk(KERN_WARNING "HFC_multi: WARNING: This driver doesn't "

WARNING:SPLIT_STRING: quoted string split across lines
#2400: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1114:
+		printk(KERN_WARNING "HFC_multi: WARNING: This driver doesn't "
+		    "consider chip revision = %ld. The chip / "

WARNING:SPLIT_STRING: quoted string split across lines
#2401: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1115:
+		    "consider chip revision = %ld. The chip / "
+		    "bridge may not work.\n", rev);

WARNING:TYPO_SPELLING: 'extenal' may be misspelled - perhaps 'external'?
#2411: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1125:
+			printk(KERN_DEBUG "%s: changing to 128K extenal RAM\n",
 			                                        ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2411: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1125:
+			printk(KERN_DEBUG "%s: changing to 128K extenal RAM\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2412: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1126:
+			printk(KERN_DEBUG "%s: changing to 128K extenal RAM\n",
+			    __func__);

WARNING:TYPO_SPELLING: 'extenal' may be misspelled - perhaps 'external'?
#2422: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1136:
+			printk(KERN_DEBUG "%s: changing to 512K extenal RAM\n",
 			                                        ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2422: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1136:
+			printk(KERN_DEBUG "%s: changing to 512K extenal RAM\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2423: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1137:
+			printk(KERN_DEBUG "%s: changing to 512K extenal RAM\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2438: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1152:
+			printk(KERN_DEBUG "%s: initializing PLXSD card %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2439: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1153:
+			printk(KERN_DEBUG "%s: initializing PLXSD card %d\n",
+			    __func__, hc->id + 1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2441: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1155:
+		plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2455: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1169:
+			printk(KERN_WARNING "%s: slave/term: PLX_GPIO=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2456: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1170:
+			printk(KERN_WARNING "%s: slave/term: PLX_GPIO=%x\n",
+				__func__, pv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2473: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1187:
+				printk(KERN_DEBUG "%s: card %d is between, so "

WARNING:SPLIT_STRING: quoted string split across lines
#2474: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1188:
+				printk(KERN_DEBUG "%s: card %d is between, so "
+					"we disable termination\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#2483: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1197:
+			if (debug & DEBUG_HFCMULTI_INIT)
+			    printk(KERN_WARNING "%s: term off: PLX_GPIO=%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2484: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1198:
+			    printk(KERN_WARNING "%s: term off: PLX_GPIO=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2485: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1199:
+			    printk(KERN_WARNING "%s: term off: PLX_GPIO=%x\n",
+					__func__, pv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2498: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1212:
+			printk(KERN_DEBUG "%s: setting PCM into slave mode\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2499: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1213:
+			printk(KERN_DEBUG "%s: setting PCM into slave mode\n",
+			    __func__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#2500: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1214:
+	} else
+	if (test_bit(HFC_CHIP_PCM_MASTER, &hc->chip) && !plxsd_master) {

CHECK:BRACES: Unbalanced braces around else statement
#2500: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1214:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2503: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1217:
+			printk(KERN_DEBUG "%s: setting PCM into master mode\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2504: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1218:
+			printk(KERN_DEBUG "%s: setting PCM into master mode\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2508: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1222:
+			printk(KERN_DEBUG "%s: performing PCM auto detect\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2509: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1223:
+			printk(KERN_DEBUG "%s: performing PCM auto detect\n",
+			    __func__);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2518: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1232:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2521: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1235:
+	udelay(100);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2527: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1241:
+		plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2534: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1248:
+				printk(KERN_WARNING "%s: master: PLX_GPIO=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2535: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1249:
+				printk(KERN_WARNING "%s: master: PLX_GPIO=%x\n",
+					__func__, pv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2540: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1254:
+				printk(KERN_WARNING "%s: slave: PLX_GPIO=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2541: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1255:
+				printk(KERN_WARNING "%s: slave: PLX_GPIO=%x\n",
+					__func__, pv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2571: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1285:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2578: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1292:
+		printk(KERN_NOTICE "Setting GPIOs\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2581: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1295:
+		udelay(1000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2582: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1296:
+		printk(KERN_NOTICE "calling vpm_init\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2590: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1304:
+		printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2594: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1308:
+	schedule_timeout((HZ/100)?:1); /* Timeout minimum 10ms */
 	                    ^

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#2594: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1308:
+	schedule_timeout((HZ/100)?:1); /* Timeout minimum 10ms */
 	                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2599: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1313:
+		printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2602: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1316:
+	if (val2 >= val+8) { /* 1 ms */
 	               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2604: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1318:
+		if (test_bit(HFC_CHIP_PCM_MASTER, &hc->chip))
[...]
+		else
[...]
+		else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2605: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1319:
+			printk(KERN_INFO "controller is PCM bus MASTER\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2606: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1320:
+		else
+		if (test_bit(HFC_CHIP_PCM_SLAVE, &hc->chip))

CHECK:BRACES: braces {} should be used on all arms of this statement
#2607: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1321:
+		if (test_bit(HFC_CHIP_PCM_SLAVE, &hc->chip))
[...]
+		else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2608: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1322:
+			printk(KERN_INFO "controller is PCM bus SLAVE\n");

CHECK:BRACES: Unbalanced braces around else statement
#2609: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1323:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2611: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1325:
+			printk(KERN_INFO "controller is PCM bus SLAVE "

WARNING:SPLIT_STRING: quoted string split across lines
#2612: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1326:
+			printk(KERN_INFO "controller is PCM bus SLAVE "
+				"(auto detected)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2618: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1332:
+			printk(KERN_ERR "HFC_multi ERROR, getting no 125us "

WARNING:SPLIT_STRING: quoted string split across lines
#2619: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1333:
+			printk(KERN_ERR "HFC_multi ERROR, getting no 125us "
+			    "pulse. Seems that controller fails.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2624: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1338:
+			printk(KERN_INFO "controller is PCM bus SLAVE "

WARNING:SPLIT_STRING: quoted string split across lines
#2625: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1339:
+			printk(KERN_INFO "controller is PCM bus SLAVE "
+				"(ignoring missing PCM clock)\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2629: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1343:
+			if (test_bit(HFC_CHIP_PLXSD, &hc->chip)
+				&& plxsd_master) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2630: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1344:
+				printk(KERN_ERR "HFC_multi ERROR, no clock "

WARNING:SPLIT_STRING: quoted string split across lines
#2631: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1345:
+				printk(KERN_ERR "HFC_multi ERROR, no clock "
+				    "on another Speech Design card found. "

WARNING:SPLIT_STRING: quoted string split across lines
#2632: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1346:
+				    "on another Speech Design card found. "
+				    "Please be sure to connect PCM cable.\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#2646: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1360:
+				if (debug & DEBUG_HFCMULTI_INIT)
+				    printk(KERN_WARNING "%s: master: PLX_GPIO"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2647: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1361:
+				    printk(KERN_WARNING "%s: master: PLX_GPIO"

WARNING:SPLIT_STRING: quoted string split across lines
#2648: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1362:
+				    printk(KERN_WARNING "%s: master: PLX_GPIO"
+					"=%x\n", __func__, pv);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2654: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1368:
+			schedule_timeout((HZ/100)?:1); /* Timeout min. 10ms */
 			                    ^

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#2654: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1368:
+			schedule_timeout((HZ/100)?:1); /* Timeout min. 10ms */
 			                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2659: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1373:
+				printk(KERN_DEBUG "HFC_multi F0_CNT %ld after "

WARNING:SPLIT_STRING: quoted string split across lines
#2660: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1374:
+				printk(KERN_DEBUG "HFC_multi F0_CNT %ld after "
+					"10 ms (2nd try)\n", val2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2661: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1375:
+			if (val2 >= val+8) { /* 1 ms */
 			               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2661: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1375:
+			if (val2 >= val+8) { /* 1 ms */
[...]
+			} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2663: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1377:
+				test_and_set_bit(HFC_CHIP_PCM_MASTER,
+					&hc->chip);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2664: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1378:
+				printk(KERN_INFO "controller is PCM bus MASTER "

WARNING:SPLIT_STRING: quoted string split across lines
#2665: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1379:
+				printk(KERN_INFO "controller is PCM bus MASTER "
+					"(auto detected)\n");

CHECK:BRACES: Unbalanced braces around else statement
#2666: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1380:
+			} else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2676: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1390:
+		plx_acc_32 = (u_int *)(hc->plx_membase+PLX_GPIOC);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2682: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1396:
+			printk(KERN_WARNING "%s: reset off: PLX_GPIO=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2683: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1397:
+			printk(KERN_WARNING "%s: reset off: PLX_GPIO=%x\n",
+				__func__, pv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2688: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1402:
+		printk(KERN_INFO "controller has given PCM BUS ID %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2689: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1403:
+		printk(KERN_INFO "controller has given PCM BUS ID %d\n",
+			hc->pcm);

CHECK:BRACES: Unbalanced braces around else statement
#2690: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1404:
+	else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2692: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1406:
+		if (test_bit(HFC_CHIP_PCM_MASTER, &hc->chip)
+		 || test_bit(HFC_CHIP_PLXSD, &hc->chip)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2696: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1410:
+		printk(KERN_INFO "controller has PCM BUS ID %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2697: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1411:
+		printk(KERN_INFO "controller has PCM BUS ID %d "
+			"(auto selected)\n", hc->pcm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2724: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1438:
+			printk(KERN_DEBUG "%s: enabling DTMF detection "

WARNING:SPLIT_STRING: quoted string split across lines
#2725: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1439:
+			printk(KERN_DEBUG "%s: enabling DTMF detection "
+			    "for all B-channel\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2765: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1479:
+			printk(KERN_DEBUG "%s: setting ST master clock "

WARNING:SPLIT_STRING: quoted string split across lines
#2766: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1480:
+			printk(KERN_DEBUG "%s: setting ST master clock "
+			    "to port %d (0..%d)\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2767: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1481:
+			    __func__, hc->masterclk, hc->ports-1);
 			                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2775: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1489:
+		printk(KERN_DEBUG "r_irqmsk_misc.2: 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2776: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1490:
+		printk(KERN_DEBUG "r_irqmsk_misc.2: 0x%x\n",
+		    hc->hw.r_irqmsk_misc);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2784: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1498:
+		HFC_outb_nodebug(hc, R_RAM_DATA, ((i*3)&0xff));
 		                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2784: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1498:
+		HFC_outb_nodebug(hc, R_RAM_DATA, ((i*3)&0xff));
 		                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2791: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1505:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2798: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1512:
+		printk(KERN_DEBUG "aborting - %d RAM access errors\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2804: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1518:
+		printk(KERN_DEBUG "%s: done\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2804: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1518:
+		printk(KERN_DEBUG "%s: done\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2810: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1524:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2830: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1544:
+
+

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2853: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1567:
+		 * 2 red steady:   TE mode deactivate
 		                   ^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2863: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1577:
+			} else if (hc->ledcount>>11) {
 			                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2879: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1593:
+		leds = (led[0] | (led[1]<<2) | (led[2]<<1) | (led[3]<<3))^0xF;
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2879: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1593:
+		leds = (led[0] | (led[1]<<2) | (led[2]<<1) | (led[3]<<3))^0xF;
 		                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2879: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1593:
+		leds = (led[0] | (led[1]<<2) | (led[2]<<1) | (led[3]<<3))^0xF;
 		                                                    ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#2879: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1593:
+		leds = (led[0] | (led[1]<<2) | (led[2]<<1) | (led[3]<<3))^0xF;
 		                                                         ^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2889: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1603:
+		 * red steady   = PH_DEACTIVATE TE Mode
 		                                ^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2903: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1617:
+			if (state) {
[...]
+			} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2904: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1618:
+				if (state == active) {
[...]
+				} else
[...]
+					else
[...]
+						else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2906: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1620:
+				} else

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2908: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1622:
+						/* TE mode: led red */
 						   ^^

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2911: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1625:
+						if (hc->ledcount>>11)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2911: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1625:
+						if (hc->ledcount>>11)
 						                ^

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2914: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1628:
+						else

CHECK:BRACES: Unbalanced braces around else statement
#2917: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1631:
+			} else

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2950: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1664:
+		 * red steady   = PH_DEACTIVATE TE Mode
 		                                ^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2964: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1678:
+			if (state) {
[...]
+			} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2965: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1679:
+				if (state == active) {
[...]
+				} else
[...]
+					else
[...]
+						else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2967: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1681:
+				} else

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2969: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1683:
+						/* TE mode: led red */
 						   ^^

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2972: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1686:
+						if (hc->ledcount >> 11)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2975: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1689:
+						else

CHECK:BRACES: Unbalanced braces around else statement
#2978: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1692:
+			} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2982: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1696:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2983: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1697:
+		leds = (led[0] > 0) | ((led[1] > 0)<<1) | ((led[0]&1)<<2)
 		                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2983: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1697:
+		leds = (led[0] > 0) | ((led[1] > 0)<<1) | ((led[0]&1)<<2)
 		                                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2983: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1697:
+		leds = (led[0] > 0) | ((led[1] > 0)<<1) | ((led[0]&1)<<2)
 		                                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2984: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1698:
+			| ((led[1]&1)<<3);
 			          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2984: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1698:
+			| ((led[1]&1)<<3);
 			             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2987: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1701:
+			HFC_outb_nodebug(hc, R_GPIO_EN1,
+			    ((led[0] > 0) << 2) | ((led[1] > 0) << 3));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2989: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1703:
+			HFC_outb_nodebug(hc, R_GPIO_OUT1,
+			    ((led[0] & 1) << 2) | ((led[1] & 1) << 3));

CHECK:BRACES: braces {} should be used on all arms of this statement
#3007: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1721:
+			if (state) {
[...]
+			} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#3008: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1722:
+				if (state == active) {
[...]
+				} else
[...]
+					else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3010: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1724:
+				} else

CHECK:BRACES: Unbalanced braces around else statement
#3015: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1729:
+			} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3021: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1735:
+			/* HFC_outb(hc, R_BRG_PCM_CFG, 1);
+			HFC_outb(c, R_BRG_PCM_CFG, (0x0 << 6) | 0x3); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3021: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1735:
+			HFC_outb(c, R_BRG_PCM_CFG, (0x0 << 6) | 0x3); */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3032: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1746:
+}
+/*

CHECK:CAMELCASE: Avoid CamelCase: <mISDNhead>
#3048: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1762:
+	struct mISDNhead *hh;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3051: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1765:
+		printk(KERN_DEBUG "%s: dtmf detection irq\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#3059: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1773:
+		if (!test_bit(FLG_TRANSPARENT, &bch->Flags))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3062: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1776:
+			printk(KERN_DEBUG "%s: dtmf channel %d:",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3063: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1777:
+			printk(KERN_DEBUG "%s: dtmf channel %d:",
+				__func__, ch);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3068: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1782:
+			addr = hc->DTMFbase + ((co<<7) | (ch<<2));
 			                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3068: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1782:
+			addr = hc->DTMFbase + ((co<<7) | (ch<<2));
 			                                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3070: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1784:
+			HFC_outb_nodebug(hc, R_RAM_ADDR1, addr>>8);
 			                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3071: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1785:
+			HFC_outb_nodebug(hc, R_RAM_ADDR2, (addr>>16)
 			                                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3076: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1790:
+				printk(" %04x", w_float);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3082: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1796:
+			exponent = (w_float>>12) & 0x7;
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3085: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1799:
+				mantissa <<= (exponent-1);
 				                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3089: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1803:
+			coeff[co<<1] = mantissa;
 			        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3095: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1809:
+				printk(" %04x", w_float);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3101: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1815:
+			exponent = (w_float>>12) & 0x7;
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3104: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1818:
+				mantissa <<= (exponent-1);
 				                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3108: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1822:
+			coeff[(co<<1)|1] = mantissa;
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3108: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1822:
+			coeff[(co<<1)|1] = mantissa;
 			             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3111: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1825:
+			printk("%s: DTMF ready %08x %08x %08x %08x "

WARNING:SPLIT_STRING: quoted string split across lines
#3112: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1826:
+			printk("%s: DTMF ready %08x %08x %08x %08x "
+			    "%08x %08x %08x %08x\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3120: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1834:
+				printk(KERN_WARNING "%s: No memory for skb\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3121: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1835:
+				printk(KERN_WARNING "%s: No memory for skb\n",
+				    __func__);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_HEAD_P>
#3124: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1838:
+			hh = mISDN_HEAD_P(skb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3138: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1852:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Zspace>
#3147: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1861:
+	int Zspace, z1, z2; /* must be int for calculation */

CHECK:CAMELCASE: Avoid CamelCase: <Fspace>
#3148: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1862:
+	int Fspace, f1, f2;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dch'
#3158: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1872:
+	if ((!dch) && (!bch))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!bch'
#3158: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1872:
+	if ((!dch) && (!bch))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!len'
#3177: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1891:
+	if ((!len) && *txpending != 1)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].protocol == ISDN_P_B_RAW'
#3180: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1894:
+	if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+	    (hc->chan[ch].protocol == ISDN_P_B_RAW) &&
+	    (hc->chan[ch].slot_rx < 0) &&
+	    (hc->chan[ch].slot_tx < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].slot_rx < 0'
#3180: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1894:
+	if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+	    (hc->chan[ch].protocol == ISDN_P_B_RAW) &&
+	    (hc->chan[ch].slot_rx < 0) &&
+	    (hc->chan[ch].slot_tx < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].slot_tx < 0'
#3180: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1894:
+	if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+	    (hc->chan[ch].protocol == ISDN_P_B_RAW) &&
+	    (hc->chan[ch].slot_rx < 0) &&
+	    (hc->chan[ch].slot_tx < 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3202: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1916:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3235: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1949:
+			printk(KERN_DEBUG "%s(card %d): reread z2 because "

WARNING:SPLIT_STRING: quoted string split across lines
#3236: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1950:
+			printk(KERN_DEBUG "%s(card %d): reread z2 because "
+				"%d!=%d\n", __func__, hc->id + 1, temp, z2);

WARNING:TYPO_SPELLING: 'maxinum' may be misspelled - perhaps 'maximum'?
#3243: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1957:
+	/* fill transparent data only to maxinum transparent load (minus 4) */
 	                                 ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3256: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1970:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3258: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1972:
+					    "%s: reconnecting PCM due to no "
+					    "more FIFO data: channel %d "

WARNING:SPLIT_STRING: quoted string split across lines
#3259: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1973:
+					    "more FIFO data: channel %d "
+					    "slot_tx %d\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3264: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1978:
+				HFC_outb_nodebug(hc, R_FIFO, ch<<1 | 1);
 				                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3268: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1982:
+				HFC_outb_nodebug(hc, R_FIFO, ch<<1);
 				                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3278: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1992:
+	if (bch && (!test_bit(FLG_HDLC, &bch->Flags)) && (!*txpending)
+		&& slot_tx >= 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3280: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1994:
+			printk(KERN_DEBUG "%s: disconnecting PCM due to "

WARNING:SPLIT_STRING: quoted string split across lines
#3281: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1995:
+			printk(KERN_DEBUG "%s: disconnecting PCM due to "
+			    "FIFO data: channel %d slot_tx %d\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3285: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:1999:
+		HFC_outb_nodebug(hc, R_FIFO, ch<<1 | 1);
 		                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3288: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2002:
+		HFC_outb_nodebug(hc, R_FIFO, ch<<1);
 		                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3307: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2021:
+		printk(KERN_DEBUG "%s(card %d): fifo(%d) has %d bytes space "

WARNING:SPLIT_STRING: quoted string split across lines
#3308: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2022:
+		printk(KERN_DEBUG "%s(card %d): fifo(%d) has %d bytes space "
+		    "left (z1=%04x, z2=%04x) sending %d of %d bytes %s\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3309: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2023:
+			__func__, hc->id + 1, ch, Zspace, z1, z2, ii-i, len-i,
 			                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3309: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2023:
+			__func__, hc->id + 1, ch, Zspace, z1, z2, ii-i, len-i,
 			                                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#3310: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2024:
+			temp ? "HDLC":"TRANS");
 			             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3312: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2026:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <confirm_Bsend>
#3332: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2046:
+		confirm_Bsend(bch);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3354: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2068:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Zsize>
#3360: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2074:
+	int Zsize, z1, z2 = 0; /* = 0, to make GCC happy */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dch'
#3370: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2084:
+	if ((!dch) && (!bch))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!bch'
#3370: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2084:
+	if ((!dch) && (!bch))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3385: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2099:
+	/* on first AND before getting next valid frame, R_FIFO must be written
+	   to. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3385: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2099:
+	   to. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].protocol == ISDN_P_B_RAW'
#3386: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2100:
+	if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+	    (hc->chan[ch].protocol == ISDN_P_B_RAW) &&
+	    (hc->chan[ch].slot_rx < 0) &&
+	    (hc->chan[ch].slot_tx < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].slot_rx < 0'
#3386: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2100:
+	if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+	    (hc->chan[ch].protocol == ISDN_P_B_RAW) &&
+	    (hc->chan[ch].slot_rx < 0) &&
+	    (hc->chan[ch].slot_tx < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].slot_tx < 0'
#3386: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2100:
+	if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+	    (hc->chan[ch].protocol == ISDN_P_B_RAW) &&
+	    (hc->chan[ch].slot_rx < 0) &&
+	    (hc->chan[ch].slot_tx < 0))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3390: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2104:
+		HFC_outb_nodebug(hc, R_FIFO, 0x20 | (ch<<1) | 1);
 		                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3392: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2106:
+		HFC_outb_nodebug(hc, R_FIFO, (ch<<1)|1);
 		                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3392: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2106:
+		HFC_outb_nodebug(hc, R_FIFO, (ch<<1)|1);
 		                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3403: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2117:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3413: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2127:
+			printk(KERN_DEBUG "%s(card %d): reread z2 because "

WARNING:SPLIT_STRING: quoted string split across lines
#3414: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2128:
+			printk(KERN_DEBUG "%s(card %d): reread z2 because "
+				"%d!=%d\n", __func__, hc->id + 1, temp, z2);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sp"
#3428: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2142:
+	if (*sp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sp"
#3430: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2144:
+		if (*sp == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3431: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2145:
+			printk(KERN_DEBUG "%s: No mem for rx_skb\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3432: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2146:
+			printk(KERN_DEBUG "%s: No mem for rx_skb\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3442: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2156:
+			printk(KERN_DEBUG "%s(card %d): fifo(%d) reading %d "

WARNING:SPLIT_STRING: quoted string split across lines
#3443: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2157:
+			printk(KERN_DEBUG "%s(card %d): fifo(%d) reading %d "
+			    "bytes (z1=%04x, z2=%04x) HDLC %s (f1=%d, f2=%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#3444: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2158:
+			    "bytes (z1=%04x, z2=%04x) HDLC %s (f1=%d, f2=%d) "
+			    "got=%d (again %d)\n", __func__, hc->id + 1, ch,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3450: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2164:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3468: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2182:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3470: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2184:
+					    "%s(card %d): Frame below minimum "
+					    "size\n", __func__, hc->id + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3477: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2191:
+					printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3488: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2202:
+					memcpy(skb_put(*sp, skb->len),
+					    skb->data, skb->len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3491: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2205:
+					printk(KERN_DEBUG "%s: No mem\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3492: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2206:
+					printk(KERN_DEBUG "%s: No mem\n",
+					    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3500: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2214:
+				printk(KERN_DEBUG "%s(card %d):",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3501: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2215:
+				printk(KERN_DEBUG "%s(card %d):",
+					__func__, hc->id + 1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3504: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2218:
+					printk(" %02x", (*sp)->data[temp++]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3505: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2219:
+				printk("\n");

CHECK:CAMELCASE: Avoid CamelCase: <recv_Dchannel>
#3508: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2222:
+				recv_Dchannel(dch);

CHECK:CAMELCASE: Avoid CamelCase: <recv_Bchannel>
#3510: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2224:
+				recv_Bchannel(bch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3526: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2240:
+				memcpy(skb_put(*sp, skb->len),
+				    skb->data, skb->len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3529: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2243:
+				printk(KERN_DEBUG "%s: No mem\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3537: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2251:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3539: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2253:
+			    "%s(card %d): fifo(%d) reading %d bytes "
+			    "(z1=%04x, z2=%04x) TRANS\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3547: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2261:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3558: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2272:
+		printk(KERN_DEBUG "%s: %s\n", __func__, msg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3563: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2277:
+	skb = _alloc_mISDN_skb(MPH_INFORMATION_IND, id, sizeof(data), &data,
+		GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <recv_Dchannel_skb>
#3566: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2280:
+	recv_Dchannel_skb(dch, skb);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3582: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2296:
+				printk(KERN_DEBUG "Enable SYNC_I\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3590: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2304:
+				printk(KERN_DEBUG "Enable jatt PLL\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3595: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2309:
+				printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3618: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2332:
+						schedule_event(dch,
+						    FLG_PHCHANGE);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3619: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2333:
+						if (debug &

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3621: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2335:
+							printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3623: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2337:
+							    "%s: nt_timer at "
+							    "state %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3637: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2351:
+				signal_state_up(dch, L1_SIGNAL_LOS_ON,
+				    "LOS detected");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3640: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2354:
+				signal_state_up(dch, L1_SIGNAL_LOS_OFF,
+				    "LOS gone");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3648: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2362:
+				signal_state_up(dch, L1_SIGNAL_AIS_ON,
+				    "AIS detected");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3651: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2365:
+				signal_state_up(dch, L1_SIGNAL_AIS_OFF,
+				    "AIS gone");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3659: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2373:
+				signal_state_up(dch, L1_SIGNAL_SLIP_RX,
+				    " bit SLIP detected RX");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3664: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2378:
+				signal_state_up(dch, L1_SIGNAL_SLIP_TX,
+				    " bit SLIP detected TX");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3672: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2386:
+				signal_state_up(dch, L1_SIGNAL_RDI_ON,
+				    "RDI detected");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3675: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2389:
+				signal_state_up(dch, L1_SIGNAL_RDI_OFF,
+				    "RDI gone");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3683: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2397:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3685: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2399:
+					    "%s: (id=%d) E1 now "
+					    "in clock sync\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3688: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2402:
+				HFC_outb(hc, R_RX_OFF,
+				    hc->chan[hc->dslot].jitter | V_RX_INIT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3690: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2404:
+				HFC_outb(hc, R_TX_OFF,
+				    hc->chan[hc->dslot].jitter | V_RX_INIT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3698: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2412:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3700: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2414:
+					    "%s: (id=%d) E1 "
+					    "lost clock sync\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3709: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2423:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3711: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2425:
+					    "%s: (id=%d) E1 "
+					    "now in frame sync\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3719: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2433:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3721: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2435:
+					    "%s: (id=%d) E1 lost "
+					    "clock & frame sync\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3729: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2443:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#3731: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2445:
+					    "%s: (id=%d) E1 "
+					    "lost frame sync\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3760: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2474:
+				HFC_outb_nodebug(hc, R_ST_SEL,
+					hc->chan[ch].port);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3768: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2482:
+						printk(KERN_DEBUG "%s: reread "

WARNING:SPLIT_STRING: quoted string split across lines
#3769: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2483:
+						printk(KERN_DEBUG "%s: reread "
+						    "STATE because %d!=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3777: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2491:
+				if (test_bit(HFC_CHIP_PLXSD, &hc->chip) &&
+					dch->dev.D.protocol == ISDN_P_TE_S0) {

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#3779: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2493:
+						hc->syncronized |=
 						    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#3782: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2496:
+						hc->syncronized &=
 						    ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3792: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2506:
+					HFC_outb_nodebug(hc, R_FIFO,
+						(ch << 1) | 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3795: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2509:
+					HFC_outb_nodebug(hc,
+						R_INC_RES_FIFO, V_RES_F);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3801: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2515:
+					printk(KERN_DEBUG

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dch'
#3827: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2541:
+		if (((!dch) && (!bch)) || (!hc->created[hc->chan[ch].port])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!bch'
#3827: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2541:
+		if (((!dch) && (!bch)) || (!hc->created[hc->chan[ch].port])) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3878: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2592:
+		printk(KERN_ERR "HFC-multi: Spurious interrupt!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3886: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2600:
+		printk(KERN_ERR "irq for card %d during irq from "

WARNING:SPLIT_STRING: quoted string split across lines
#3887: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2601:
+		printk(KERN_ERR "irq for card %d during irq from "
+		"card %d, this is no bug.\n", hc->id + 1, irqsem);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3916: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2630:
+		printk(KERN_ERR "iq1:%x iq2:%x iq3:%x iq4:%x iq5:%x iq6:%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3917: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2631:
+		printk(KERN_ERR "iq1:%x iq2:%x iq3:%x iq4:%x iq5:%x iq6:%x\n",
+		    iq1, iq2, iq3, iq4, iq5, iq6);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3947: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2661:
+				if (test_bit(HFC_CHIP_PLXSD, &hc->chip)
+				 && hc->e1_getclock) {

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#3949: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2663:
+						hc->syncronized = 1;
 						    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#3951: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2665:
+						hc->syncronized = 0;
 						    ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3958: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2672:
+						printk(KERN_DEBUG "%s: reread "

WARNING:SPLIT_STRING: quoted string split across lines
#3959: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2673:
+						printk(KERN_DEBUG "%s: reread "
+						    "STATE because %d!=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3968: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2682:
+					printk(KERN_DEBUG

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3994: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2708:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4018: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2732:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4028: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2742:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4040: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2754:
+mode_hfcmulti(struct hfc_multi *hc, int ch, int protocol, int slot_tx,
+    int bank_tx, int slot_rx, int bank_rx)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4040: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2754:
+    int bank_tx, int slot_rx, int bank_rx)$

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#4047: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2761:
+		return EINVAL;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4053: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2767:
+		printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#4055: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2769:
+		    "%s: card %d channel %d protocol %x slot old=%d new=%d "
+		    "bank new=%d (TX) slot old=%d new=%d bank new=%d (RX)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4062: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2776:
+			printk(KERN_DEBUG "%s: remove from slot %d (TX)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4063: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2777:
+			printk(KERN_DEBUG "%s: remove from slot %d (TX)\n",
+			    __func__, oslot_tx);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4064: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2778:
+		if (hc->slot_owner[oslot_tx<<1] == ch) {
 		                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4068: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2782:
+			hc->slot_owner[oslot_tx<<1] = -1;
 			                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4071: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2785:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#4073: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2787:
+				    "%s: we are not owner of this tx slot "
+				    "anymore, channel %d is.\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4074: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2788:
+				    __func__, hc->slot_owner[oslot_tx<<1]);
 				                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4081: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2795:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4090: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2804:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#4092: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2806:
+				    "%s: we are not owner of this rx slot "
+				    "anymore, channel %d is.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4114: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2828:
+			printk(KERN_DEBUG "%s: put channel %d to slot %d bank"

WARNING:SPLIT_STRING: quoted string split across lines
#4115: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2829:
+			printk(KERN_DEBUG "%s: put channel %d to slot %d bank"
+			    " %d flow %02x routing %02x conf %d (TX)\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4119: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2833:
+		HFC_outb(hc, A_SL_CFG, (ch<<1) | routing);
 		                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4137: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2851:
+		routing = bank_rx?0x80:0xc0; /* reversed */
 		                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4137: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2851:
+		routing = bank_rx?0x80:0xc0; /* reversed */
 		                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4141: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2855:
+			printk(KERN_DEBUG "%s: put channel %d to slot %d bank"

WARNING:SPLIT_STRING: quoted string split across lines
#4142: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2856:
+			printk(KERN_DEBUG "%s: put channel %d to slot %d bank"
+			    " %d flow %02x routing %02x conf %d (RX)\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4145: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2859:
+		HFC_outb(hc, R_SLOT, (slot_rx<<1) | V_SL_DIR);
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4146: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2860:
+		HFC_outb(hc, A_SL_CFG, (ch<<1) | V_CH_DIR | routing);
 		                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4147: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2861:
+		hc->slot_owner[(slot_rx<<1)|1] = ch;
 		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4147: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2861:
+		hc->slot_owner[(slot_rx<<1)|1] = ch;
 		                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4163: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2877:
+		HFC_outb(hc, R_FIFO, (ch<<1)|1);
 		                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4163: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2877:
+		HFC_outb(hc, R_FIFO, (ch<<1)|1);
 		                            ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#4172: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2886:
+			    ((ch & 0x3) == 0)? ~V_B1_EN: ~V_B2_EN;
 			                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#4172: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2886:
+			    ((ch & 0x3) == 0)? ~V_B1_EN: ~V_B2_EN;
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4177: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2891:
+			HFC_outb(hc, A_ST_CTRL0,
+			    hc->hw.a_st_ctrl0[hc->chan[ch].port]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4182: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2896:
+			test_and_clear_bit(FLG_TRANSPARENT,
+			    &hc->chan[ch].bch->Flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].slot_rx < 0'
#4187: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2901:
+		if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+		    (hc->chan[ch].slot_rx < 0) &&
+		    (hc->chan[ch].slot_tx < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->chan[ch].slot_tx < 0'
#4187: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2901:
+		if (test_bit(HFC_CHIP_B410P, &hc->chip) &&
+		    (hc->chan[ch].slot_rx < 0) &&
+		    (hc->chan[ch].slot_tx < 0)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4190: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2904:
+		    (hc->chan[ch].slot_tx < 0)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4191: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2905:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#4193: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2907:
+			    "Setting B-channel %d to echo cancelable "
+			    "state on PCM slot %d\n", ch,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4195: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2909:
+			printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4255: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2969:
+			HFC_outb(hc, R_FIFO, (ch<<1)|1);
 			                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4255: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2969:
+			HFC_outb(hc, R_FIFO, (ch<<1)|1);
 			                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4270: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2984:
+			HFC_outb(hc, A_ST_CTRL0,
+			    hc->hw.a_st_ctrl0[hc->chan[ch].port]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4274: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2988:
+			test_and_set_bit(FLG_TRANSPARENT,
+			    &hc->chan[ch].bch->Flags);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4282: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:2996:
+		HFC_outb(hc, R_FIFO, ch<<1);
 		                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4297: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3011:
+		HFC_outb(hc, R_FIFO, (ch<<1)|1);
 		                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4297: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3011:
+		HFC_outb(hc, R_FIFO, (ch<<1)|1);
 		                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4311: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3025:
+				  ((ch&0x3) == 0) ? V_B1_EN : V_B2_EN;
 				      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4316: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3030:
+				HFC_outb(hc, A_ST_CTRL0,
+				  hc->hw.a_st_ctrl0[hc->chan[ch].port]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4321: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3035:
+		printk(KERN_DEBUG "%s: protocol not known %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4322: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3036:
+		printk(KERN_DEBUG "%s: protocol not known %x\n",
+		    __func__, protocol);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4330: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3044:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4337: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3051:
+hfcmulti_pcm(struct hfc_multi *hc, int ch, int slot_tx, int bank_tx,
+    int slot_rx, int bank_rx)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4337: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3051:
+    int slot_rx, int bank_rx)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4347: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3061:
+	mode_hfcmulti(hc, ch, hc->chan[ch].protocol, slot_tx, bank_tx,
+		slot_rx, bank_rx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4362: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3076:
+	mode_hfcmulti(hc, ch, hc->chan[ch].protocol, hc->chan[ch].slot_tx,
+	    hc->chan[ch].bank_tx, hc->chan[ch].slot_rx,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4366: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3080:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4391: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3105:
+				printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4401: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3115:
+			HFC_outb(hc, A_ST_WR_STATE, 3 | (V_ST_ACT*3));
 			                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4412: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3126:
+				printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4419: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3133:
+			HFC_outb(hc, A_ST_WR_STATE, V_ST_ACT*2);
 			                                    ^

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#4422: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3136:
+				hc->syncronized &=
 				    ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4446: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3160:
+				printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4462: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3176:
+		_queue_data(&dch->dev.D, cmd, MISDN_ID_ANY, 0, NULL,
+			GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4467: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3181:
+		_queue_data(&dch->dev.D, cmd, MISDN_ID_ANY, 0, NULL,
+			GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4471: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3185:
+			printk(KERN_DEBUG "%s: unknown command %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4472: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3186:
+			printk(KERN_DEBUG "%s: unknown command %x\n",
+			    __func__, cmd);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNchannel>
#4483: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3197:
+handle_dmsg(struct mISDNchannel *ch, struct sk_buff *skb)

CHECK:CAMELCASE: Avoid CamelCase: <mISDNdevice>
#4485: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3199:
+	struct mISDNdevice	*dev = container_of(ch, struct mISDNdevice, D);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4499: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3213:
+		if (ret > 0) { /* direct TX */
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4508: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3222:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#4512: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3226:
+		if (dch->dev.D.protocol != ISDN_P_TE_S0) {
[...]
+		} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4516: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3230:
+				printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4519: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3233:
+				    hc->ports-1);
 				             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4524: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3238:
+					printk(KERN_DEBUG

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#4525: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3239:
+					    "%s: E1 report state %x \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4529: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3243:
+				HFC_outb(hc, R_ST_SEL,
+				    hc->chan[dch->slot].port);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4537: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3251:
+				    (V_ST_ACT*3)); /* activate */
 				             ^

CHECK:BRACES: Unbalanced braces around else statement
#4541: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3255:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#4546: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3260:
+		if (dch->dev.D.protocol != ISDN_P_TE_S0) {
[...]
+		} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4549: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3263:
+				printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4552: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3266:
+				    hc->ports-1);
 				             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4556: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3270:
+					printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4561: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3275:
+				HFC_outb(hc, R_ST_SEL,
+				    hc->chan[dch->slot].port);

CHECK:BRACES: Unbalanced braces around else statement
#4587: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3301:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#4641: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3355:
+		if (ret > 0) { /* direct TX */
[...]
+		} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#4648: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3362:
+			if (!test_bit(FLG_TRANSPARENT, &bch->Flags)) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4651: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3365:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#4653: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3367:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4658: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3372:
+			printk(KERN_DEBUG "%s: PH_ACTIVATE ch %d (0..32)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4659: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3373:
+			printk(KERN_DEBUG "%s: PH_ACTIVATE ch %d (0..32)\n",
+				__func__, bch->slot);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4662: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3376:
+		if (!test_and_set_bit(FLG_ACTIVE, &bch->Flags)) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4665: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3379:
+			ret = mode_hfcmulti(hc, bch->slot,
+				ch->protocol,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4672: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3386:
+				if (ch->protocol == ISDN_P_B_RAW && !hc->dtmf
+					&& test_bit(HFC_CHIP_DTMF, &hc->chip)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4676: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3390:
+						printk(KERN_DEBUG

CHECK:BRACES: Unbalanced braces around else statement
#4683: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3397:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4688: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3402:
+			_queue_data(ch, PH_ACTIVATE_IND, MISDN_ID_ANY, 0, NULL,
+				GFP_KERNEL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#4694: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3408:
+			if (debug & DEBUG_HFCMULTI_MSG)
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4695: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3409:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4702: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3416:
+				printk(KERN_DEBUG "%s: HFC_SPL_LOOP_OFF\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4703: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3417:
+				printk(KERN_DEBUG "%s: HFC_SPL_LOOP_OFF\n",
+				    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4707: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3421:
+			printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4717: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3431:
+		_queue_data(ch, PH_DEACTIVATE_IND, MISDN_ID_ANY, 0, NULL,
+			GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_ctrl_req>
#4730: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3444:
+channel_bctrl(struct bchannel *bch, struct mISDN_ctrl_req *cq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4757: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3471:
+			printk(KERN_DEBUG "%s: RX_OFF request (nr=%d off=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4758: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3472:
+			printk(KERN_DEBUG "%s: RX_OFF request (nr=%d off=%d)\n",
+			    __func__, bch->nr, hc->chan[bch->slot].rx_off);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4762: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3476:
+			printk(KERN_DEBUG "%s: HW_FEATURE request\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4763: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3477:
+			printk(KERN_DEBUG "%s: HW_FEATURE request\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4783: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3497:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#4785: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3499:
+			    "%s: HFC_PCM_CONN slot %d bank %d (TX) "
+			    "slot %d bank %d (RX)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4791: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3505:
+			hfcmulti_pcm(hc, bch->slot,
+			    slot_tx, bank_tx, slot_rx, bank_rx);

CHECK:BRACES: Unbalanced braces around else statement
#4792: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3506:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4793: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3507:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#4795: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3509:
+			    "%s: HFC_PCM_CONN slot %d bank %d (TX) "
+			    "slot %d bank %d (RX) out of range\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4803: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3517:
+			printk(KERN_DEBUG "%s: HFC_PCM_DISC\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4804: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3518:
+			printk(KERN_DEBUG "%s: HFC_PCM_DISC\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4810: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3524:
+			printk(KERN_DEBUG "%s: HFC_CONF_JOIN conf %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4811: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3525:
+			printk(KERN_DEBUG "%s: HFC_CONF_JOIN conf %d\n",
+			    __func__, num);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4812: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3526:
+		if (num <= 7)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4814: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3528:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4815: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3529:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4823: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3537:
+			printk(KERN_DEBUG "%s: HFC_CONF_SPLIT\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4828: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3542:
+			printk(KERN_DEBUG "%s: HFC_ECHOCAN_ON\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4837: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3551:
+			printk(KERN_DEBUG "%s: HFC_ECHOCAN_OFF\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4838: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3552:
+			printk(KERN_DEBUG "%s: HFC_ECHOCAN_OFF\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4845: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3559:
+		printk(KERN_WARNING "%s: unknown Op %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4846: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3560:
+		printk(KERN_WARNING "%s: unknown Op %x\n",
+		    __func__, cq->op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4862: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3576:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4863: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3577:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",
+		    __func__, cmd, arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4880: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3594:
+		printk(KERN_WARNING "%s: unknown prim(%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4881: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3595:
+		printk(KERN_WARNING "%s: unknown prim(%x)\n",
+			__func__, cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4898: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3612:
+		printk(KERN_WARNING "%s: ERROR given dch is NULL\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4899: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3613:
+		printk(KERN_WARNING "%s: ERROR given dch is NULL\n",
+		    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4907: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3621:
+				printk(KERN_DEBUG

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4908: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3622:
+				    "%s: E1 TE (id=%d) newstate %x\n",
 				            ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4912: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3626:
+				printk(KERN_DEBUG

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#4918: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3632:
+			if (hc->e1_state != 1) {
+			    for (i = 1; i <= 31; i++) {

WARNING:TABSTOP: Statements should start on a tabstop
#4919: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3633:
+			    for (i = 1; i <= 31; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4924: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3638:
+				HFC_outb_nodebug(hc,
+					R_INC_RES_FIFO, V_RES_F);

WARNING:TABSTOP: Statements should start on a tabstop
#4926: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3640:
+			    }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4930: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3644:
+			_queue_data(&dch->dev.D, PH_ACTIVATE_IND,
+			    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4938: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3652:
+			_queue_data(&dch->dev.D, PH_DEACTIVATE_IND,
+			    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4944: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3658:
+				printk(KERN_DEBUG

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4945: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3659:
+				    "%s: S/T TE newstate %x\n",
 				             ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4967: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3681:
+				printk(KERN_DEBUG "%s: S/T NT newstate %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4968: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3682:
+				printk(KERN_DEBUG "%s: S/T NT newstate %x\n",
+				    __func__, dch->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4974: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3688:
+					HFC_outb(hc, R_ST_SEL,
+					    hc->chan[ch].port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4987: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3701:
+					HFC_outb(hc, R_ST_SEL,
+					    hc->chan[ch].port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4999: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3713:
+				_queue_data(&dch->dev.D, PH_DEACTIVATE_IND,
+				    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5008: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3722:
+				_queue_data(&dch->dev.D, PH_ACTIVATE_IND,
+				    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5027: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3741:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#5027: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3741:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5035: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3749:
+			mode_hfcmulti(hc, hc->dslot, dch->dev.D.protocol,
+				-1, 0, -1, 0);

CHECK:SPACING: No space is necessary after a cast
#5036: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3750:
+			dch->timer.function = (void *) hfcmulti_dbusy_timer;

CHECK:SPACING: No space is necessary after a cast
#5037: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3751:
+			dch->timer.data = (long) dch;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5076: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3790:
+				printk(KERN_DEBUG "%s: E1 port is NT-mode\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5077: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3791:
+				printk(KERN_DEBUG "%s: E1 port is NT-mode\n",
+				    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5082: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3796:
+				printk(KERN_DEBUG "%s: E1 port is TE-mode\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5083: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3797:
+				printk(KERN_DEBUG "%s: E1 port is TE-mode\n",
+				    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5098: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3812:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5100: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3814:
+				    "%s: E1 port is clock master "
+				    "(clock from PCM)\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5106: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3820:
+					printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5108: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3822:
+					    "%s: E1 port is clock slave "
+					    "(clock to PCM)\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5113: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3827:
+					printk(KERN_DEBUG "%s: E1 port is "

WARNING:SPLIT_STRING: quoted string split across lines
#5114: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3828:
+					printk(KERN_DEBUG "%s: E1 port is "
+					    "clock master "

WARNING:SPLIT_STRING: quoted string split across lines
#5115: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3829:
+					    "clock master "
+					    "(clock from QUARTZ)\n",

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#5131: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3845:
+			hc->syncronized = 0;
 			    ^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#5141: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3855:
+		dch->timer.data = (long) dch;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5159: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3873:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5168: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3882:
+				printk(KERN_DEBUG

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->dev.D.protocol == ISDN_P_NT_S0'
#5181: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3895:
+		if ((dch->dev.D.protocol == ISDN_P_NT_S0) ||
+		    test_bit(HFC_CFG_DIS_ECHANNEL, &hc->chan[i].cfg))

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#5197: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3911:
+			hc->syncronized &=
 			    ^^^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5203: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3917:
+		printk("%s: done\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#5203: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3917:
+		printk("%s: done\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5206: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3920:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5209: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3923:
+open_dchannel(struct hfc_multi *hc, struct dchannel *dch,
+    struct channel_req *rq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5209: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3923:
+    struct channel_req *rq)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5215: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3929:
+		printk(KERN_DEBUG "%s: dev(%d) open from %p\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5216: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3930:
+		printk(KERN_DEBUG "%s: dev(%d) open from %p\n", __func__,
+		    dch->dev.id, __builtin_return_address(0));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#5219: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3933:
+	if ((dch->dev.D.protocol != ISDN_P_NONE) &&
[...]
+	    if (debug & DEBUG_HFCMULTI_MODE)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->dev.D.protocol != ISDN_P_NONE'
#5219: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3933:
+	if ((dch->dev.D.protocol != ISDN_P_NONE) &&
+	    (dch->dev.D.protocol != rq->protocol)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->dev.D.protocol != rq->protocol'
#5219: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3933:
+	if ((dch->dev.D.protocol != ISDN_P_NONE) &&
+	    (dch->dev.D.protocol != rq->protocol)) {

WARNING:TABSTOP: Statements should start on a tabstop
#5221: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3935:
+	    if (debug & DEBUG_HFCMULTI_MODE)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5222: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3936:
+		printk(KERN_WARNING "%s: change protocol %x to %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5223: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3937:
+		printk(KERN_WARNING "%s: change protocol %x to %x\n",
+		    __func__, dch->dev.D.protocol, rq->protocol);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->dev.D.protocol == ISDN_P_TE_S0'
#5225: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3939:
+	if ((dch->dev.D.protocol == ISDN_P_TE_S0)
+	 && (rq->protocol != ISDN_P_TE_S0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->protocol != ISDN_P_TE_S0'
#5225: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3939:
+	if ((dch->dev.D.protocol == ISDN_P_TE_S0)
+	 && (rq->protocol != ISDN_P_TE_S0))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5226: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3940:
+	if ((dch->dev.D.protocol == ISDN_P_TE_S0)
+	 && (rq->protocol != ISDN_P_TE_S0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->protocol == ISDN_P_NT_S0'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->state == 3'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->protocol == ISDN_P_TE_S0'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->state == 7'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->protocol == ISDN_P_NT_E1'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->state == 1'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->protocol == ISDN_P_TE_E1'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->state == 1'
#5240: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3954:
+	if (((rq->protocol == ISDN_P_NT_S0) && (dch->state == 3)) ||
+	    ((rq->protocol == ISDN_P_TE_S0) && (dch->state == 7)) ||
+	    ((rq->protocol == ISDN_P_NT_E1) && (dch->state == 1)) ||
+	    ((rq->protocol == ISDN_P_TE_E1) && (dch->state == 1))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5245: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3959:
+		_queue_data(&dch->dev.D, PH_ACTIVATE_IND, MISDN_ID_ANY,
+		    0, NULL, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5249: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3963:
+		printk(KERN_WARNING "%s:cannot get module\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5255: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3969:
+open_bchannel(struct hfc_multi *hc, struct dchannel *dch,
+    struct channel_req *rq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5255: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3969:
+    struct channel_req *rq)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5270: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3984:
+		printk(KERN_ERR "%s:internal error ch %d has no bch\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5271: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3985:
+		printk(KERN_ERR "%s:internal error ch %d has no bch\n",
+		    __func__, ch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5280: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:3994:
+		printk(KERN_WARNING "%s:cannot get module\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5297: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4011:
+		printk(KERN_WARNING "%s: unknown Op %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5298: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4012:
+		printk(KERN_WARNING "%s: unknown Op %x\n",
+		    __func__, cq->op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5316: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4030:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5317: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4031:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",
+		    __func__, cmd, arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5346: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4060:
+			printk(KERN_DEBUG "%s: dev(%d) close from %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5347: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4061:
+			printk(KERN_DEBUG "%s: dev(%d) close from %p\n",
+			    __func__, dch->dev.id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5358: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4072:
+			printk(KERN_DEBUG "%s: unknown command %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5359: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4073:
+			printk(KERN_DEBUG "%s: unknown command %x\n",
+			    __func__, cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5382: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4096:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#5382: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4096:
+		printk(KERN_DEBUG "%s: entered\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5391: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4105:
+	if (request_irq(hc->pci_dev->irq, hfcmulti_interrupt, IRQF_SHARED,
+	    "HFC-multi", hc)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5392: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4106:
+		printk(KERN_WARNING "mISDN: Could not get interrupt %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5393: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4107:
+		printk(KERN_WARNING "mISDN: Could not get interrupt %d.\n",
+		    hc->pci_dev->irq);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5400: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4114:
+		plx_acc = (u_short *)(hc->plx_membase+PLX_INTCSR);
 		                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5402: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4116:
+		writew((PLX_INTCSR_PCIINT_ENABLE | PLX_INTCSR_LINTI1_ENABLE),
+			plx_acc); /* enable PCI & LINT1 irq */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5407: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4121:
+		printk(KERN_DEBUG "%s: IRQ %d count %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5408: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4122:
+		printk(KERN_DEBUG "%s: IRQ %d count %d\n",
+		    __func__, hc->irq, hc->irqcnt);

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#5414: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4128:
+	 * this is only allowed, if an IRQ routine is allready
 	                                              ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5422: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4136:
+	schedule_timeout((100*HZ)/1000); /* Timeout 100ms */
 	                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5422: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4136:
+	schedule_timeout((100*HZ)/1000); /* Timeout 100ms */
 	                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5428: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4142:
+		printk(KERN_DEBUG "%s: IRQ %d count %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5429: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4143:
+		printk(KERN_DEBUG "%s: IRQ %d count %d\n",
+		    __func__, hc->irq, hc->irqcnt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5432: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4146:
+			printk(KERN_DEBUG "%s: done\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#5432: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4146:
+			printk(KERN_DEBUG "%s: done\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5437: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4151:
+		printk(KERN_INFO "ignoring missing interrupts\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5441: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4155:
+	printk(KERN_ERR "HFC PCI: IRQ(%d) getting no interrupts during init.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5442: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4156:
+	printk(KERN_ERR "HFC PCI: IRQ(%d) getting no interrupts during init.\n",
+		hc->irq);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5449: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4163:
+		plx_acc = (u_short *)(hc->plx_membase+PLX_INTCSR);
 		                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5455: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4169:
+		printk(KERN_WARNING "%s: free irq %d\n", __func__, hc->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5462: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4176:
+		printk(KERN_DEBUG "%s: done (err=%d)\n", __func__, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5472: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4186:
+setup_pci(struct hfc_multi *hc, struct pci_dev *pdev,
+		const struct pci_device_id *ent)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5476: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4190:
+	printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5492: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4206:
+		printk(KERN_WARNING "HFC-multi: No IRQ for PCI card found.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5496: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4210:
+		printk(KERN_WARNING "HFC-multi: Error enabling PCI card.\n");

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#5510: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4224:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5528: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4242:
+		printk(KERN_WARNING "HFC-multi: Invalid IO mode.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5552: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4266:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5560: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4274:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#5562: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4276:
+			    "HFC-multi: failed to remap plx address space. "
+			    "(internal error)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5566: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4280:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5573: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4287:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5581: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4295:
+			printk(KERN_WARNING "HFC-multi: failed to remap io "

WARNING:SPLIT_STRING: quoted string split across lines
#5582: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4296:
+			printk(KERN_WARNING "HFC-multi: failed to remap io "
+			    "address space. (internal error)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5587: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4301:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#5589: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4303:
+		    "card %d: defined at MEMBASE %#lx (%#lx) IRQ %d HZ %d "
+		    "leds-type %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5597: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4311:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5605: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4319:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#5607: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4321:
+			    "HFC-multi: failed to remap io address space. "
+			    "(internal error)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5611: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4325:
+		printk(KERN_INFO "card %d: defined at MEMBASE %#lx (%#lx) IRQ %d "

WARNING:SPLIT_STRING: quoted string split across lines
#5612: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4326:
+		printk(KERN_INFO "card %d: defined at MEMBASE %#lx (%#lx) IRQ %d "
+		    "HZ %d leds-type %d\n", hc->id, (u_long)hc->pci_membase,

CHECK:SPACING: No space is necessary after a cast
#5617: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4331:
+		hc->pci_iobase = (u_int) hc->pci_dev->resource[0].start;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5619: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4333:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5626: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4340:
+			printk(KERN_WARNING "HFC-multi: failed to request "

WARNING:SPLIT_STRING: quoted string split across lines
#5627: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4341:
+			printk(KERN_WARNING "HFC-multi: failed to request "
+			    "address space at 0x%08lx (internal error)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5633: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4347:
+		printk(KERN_INFO

CHECK:SPACING: No space is necessary after a cast
#5635: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4349:
+		    m->vendor_name, m->card_name, (u_int) hc->pci_iobase,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5640: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4354:
+		printk(KERN_WARNING "HFC-multi: Invalid IO mode.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5652: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4366:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5668: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4382:
+		printk(KERN_DEBUG "%s: entered for port %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5669: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4383:
+		printk(KERN_DEBUG "%s: entered for port %d\n",
+			__func__, pt + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5672: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4386:
+		printk(KERN_WARNING "%s: ERROR port out of range (%d).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5673: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4387:
+		printk(KERN_WARNING "%s: ERROR port out of range (%d).\n",
+		     __func__, pt + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5678: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4392:
+		printk(KERN_DEBUG "%s: releasing port=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5679: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4393:
+		printk(KERN_DEBUG "%s: releasing port=%d\n",
+		    __func__, pt + 1);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_unregister_device>
#5688: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4402:
+		mISDN_unregister_device(&dch->dev);

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#5701: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4415:
+			hc->syncronized = 0;
 			    ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5708: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4422:
+					printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5710: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4424:
+					    __func__, hc->chan[i].port+1, i);
 					                              ^

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freebchannel>
#5714: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4428:
+				mISDN_freebchannel(pb);

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#5723: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4437:
+			hc->syncronized &=
 			    ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5730: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4444:
+				printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5732: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4446:
+				    __func__, hc->chan[ci - 2].port+1,
 				                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5744: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4458:
+				printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5746: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4460:
+				    __func__, hc->chan[ci - 1].port+1,
 				                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5761: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4475:
+		printk(KERN_DEBUG "%s: free port %d channel D\n", __func__, pt);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freedchannel>
#5762: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4476:
+	mISDN_freedchannel(dch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5766: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4480:
+		printk(KERN_DEBUG "%s: done!\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#5766: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4480:
+		printk(KERN_DEBUG "%s: done!\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5776: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4490:
+		printk(KERN_WARNING "%s: release card (%d) entered\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5777: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4491:
+		printk(KERN_WARNING "%s: release card (%d) entered\n",
+		    __func__, hc->id);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#5783: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4497:
+	udelay(1000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5791: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4505:
+		printk(KERN_DEBUG "%s: disable all channels (d and b)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5792: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4506:
+		printk(KERN_DEBUG "%s: disable all channels (d and b)\n",
+		    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5801: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4515:
+			printk(KERN_WARNING "%s: free irq %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5802: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4516:
+			printk(KERN_WARNING "%s: free irq %d\n",
+			    __func__, hc->irq);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#5806: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4520:
+
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5810: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4524:
+		printk(KERN_WARNING "%s: remove instance from list\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5811: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4525:
+		printk(KERN_WARNING "%s: remove instance from list\n",
+		     __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5815: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4529:
+		printk(KERN_WARNING "%s: delete instance\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5820: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4534:
+		printk(KERN_WARNING "%s: card successfully removed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5821: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4535:
+		printk(KERN_WARNING "%s: card successfully removed\n",
+		    __func__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dch)...) over kzalloc(sizeof(struct dchannel)...)
#5832: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4546:
+	dch = kzalloc(sizeof(struct dchannel), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initdchannel>
#5836: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4550:
+	mISDN_initdchannel(dch, MAX_DFRAME_LEN_L1, ph_state_change);

CHECK:CAMELCASE: Avoid CamelCase: <Dprotocols>
#5838: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4552:
+	dch->dev.Dprotocols = (1 << ISDN_P_TE_E1) | (1 << ISDN_P_NT_E1);

CHECK:CAMELCASE: Avoid CamelCase: <Bprotocols>
#5839: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4553:
+	dch->dev.Bprotocols = (1 << (ISDN_P_B_RAW & ISDN_P_B_MASK)) |

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#5843: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4557:
+	dch->dev.nrbchan = (hc->dslot)?30:31;
 	                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#5843: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4557:
+	dch->dev.nrbchan = (hc->dslot)?30:31;
 	                                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bch)...) over kzalloc(sizeof(struct bchannel)...)
#5851: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4565:
+		bch = kzalloc(sizeof(struct bchannel), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5853: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4567:
+			printk(KERN_ERR "%s: no memory for bchannel\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5854: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4568:
+			printk(KERN_ERR "%s: no memory for bchannel\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5860: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4574:
+			printk(KERN_ERR "%s: no memory for coeffs\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#5860: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4574:
+		if (!hc->chan[ch].coeff) {
+			printk(KERN_ERR "%s: no memory for coeffs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5861: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4575:
+			printk(KERN_ERR "%s: no memory for coeffs\n",
+			    __func__);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initbchannel>
#5868: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4582:
+		mISDN_initbchannel(bch, MAX_DATA_MEM);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5881: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4595:
+			printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#5883: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4597:
+			    "This board has no optical "
+			    "support\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5886: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4600:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5888: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4602:
+				    "%s: PORT set optical "
+				    "interfacs: card(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#5889: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4603:
+				    "interfacs: card(%d) "
+				    "port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5893: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4607:
+			test_and_set_bit(HFC_CFG_OPTICAL,
+			    &hc->chan[hc->dslot].cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5899: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4613:
+			printk(KERN_DEBUG "%s: PORT set "

WARNING:SPLIT_STRING: quoted string split across lines
#5900: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4614:
+			printk(KERN_DEBUG "%s: PORT set "
+			    "LOS report: card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5903: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4617:
+		test_and_set_bit(HFC_CFG_REPORT_LOS,
+		    &hc->chan[hc->dslot].cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5908: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4622:
+			printk(KERN_DEBUG "%s: PORT set "

WARNING:SPLIT_STRING: quoted string split across lines
#5909: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4623:
+			printk(KERN_DEBUG "%s: PORT set "
+			    "AIS report: card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5912: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4626:
+		test_and_set_bit(HFC_CFG_REPORT_AIS,
+		    &hc->chan[hc->dslot].cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5917: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4631:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5919: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4633:
+			    "%s: PORT set SLIP report: "
+			    "card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5922: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4636:
+		test_and_set_bit(HFC_CFG_REPORT_SLIP,
+		    &hc->chan[hc->dslot].cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5927: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4641:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5929: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4643:
+			    "%s: PORT set RDI report: "
+			    "card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5932: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4646:
+		test_and_set_bit(HFC_CFG_REPORT_RDI,
+		    &hc->chan[hc->dslot].cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5937: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4651:
+			printk(KERN_DEBUG "%s: PORT turn on CRC4 report:"

WARNING:SPLIT_STRING: quoted string split across lines
#5938: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4652:
+			printk(KERN_DEBUG "%s: PORT turn on CRC4 report:"
+				" card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5941: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4655:
+		test_and_set_bit(HFC_CFG_CRC4,
+		    &hc->chan[hc->dslot].cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5944: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4658:
+			printk(KERN_DEBUG "%s: PORT turn off CRC4"

WARNING:SPLIT_STRING: quoted string split across lines
#5945: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4659:
+			printk(KERN_DEBUG "%s: PORT turn off CRC4"
+				" report: card(%d) port(%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5951: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4665:
+			printk(KERN_DEBUG "%s: PORT force getting clock from "

WARNING:SPLIT_STRING: quoted string split across lines
#5952: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4666:
+			printk(KERN_DEBUG "%s: PORT force getting clock from "
+				"E1: card(%d) port(%d)\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#5955: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4669:
+	} else
+	if (port[Port_cnt] & 0x0400) {

CHECK:BRACES: Unbalanced braces around else statement
#5955: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4669:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5958: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4672:
+			printk(KERN_DEBUG "%s: PORT force putting clock to "

WARNING:SPLIT_STRING: quoted string split across lines
#5959: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4673:
+			printk(KERN_DEBUG "%s: PORT force putting clock to "
+				"E1: card(%d) port(%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5966: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4680:
+			printk(KERN_DEBUG "%s: PORT disable JATT PLL on "

WARNING:SPLIT_STRING: quoted string split across lines
#5967: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4681:
+			printk(KERN_DEBUG "%s: PORT disable JATT PLL on "
+				"E1: card(%d) port(%d)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#5972: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4686:
+	if (port[Port_cnt] & 0x3000) {
[...]
+	} else
[...]

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#5973: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4687:
+		hc->chan[hc->dslot].jitter = (port[Port_cnt]>>12) & 0x3;
 		                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5975: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4689:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#5977: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4691:
+			    "%s: PORT set elastic "
+			    "buffer to %d: card(%d) port(%d)\n",

CHECK:BRACES: Unbalanced braces around else statement
#5980: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4694:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_register_device>
#5983: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4697:
+	ret = mISDN_register_device(&dch->dev, name);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dch)...) over kzalloc(sizeof(struct dchannel)...)
#6001: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4715:
+	dch = kzalloc(sizeof(struct dchannel), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bch)...) over kzalloc(sizeof(struct bchannel)...)
#6019: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4733:
+		bch = kzalloc(sizeof(struct bchannel), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6021: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4735:
+			printk(KERN_ERR "%s: no memory for bchannel\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#6021: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4735:
+		if (!bch) {
+			printk(KERN_ERR "%s: no memory for bchannel\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6022: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4736:
+			printk(KERN_ERR "%s: no memory for bchannel\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6028: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4742:
+			printk(KERN_ERR "%s: no memory for coeffs\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#6028: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4742:
+		if (!hc->chan[i + ch].coeff) {
+			printk(KERN_ERR "%s: no memory for coeffs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6029: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4743:
+			printk(KERN_ERR "%s: no memory for coeffs\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6049: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4763:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#6051: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4765:
+			    "%s: PROTOCOL set master clock: "
+			    "card(%d) port(%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6054: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4768:
+			printk(KERN_ERR "Error: Master clock "

WARNING:SPLIT_STRING: quoted string split across lines
#6055: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4769:
+			printk(KERN_ERR "Error: Master clock "
+			    "for port(%d) of card(%d) is only"

WARNING:SPLIT_STRING: quoted string split across lines
#6056: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4770:
+			    "for port(%d) of card(%d) is only"
+			    " possible with TE-mode\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6062: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4776:
+			printk(KERN_ERR "Error: Master clock "

WARNING:SPLIT_STRING: quoted string split across lines
#6063: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4777:
+			printk(KERN_ERR "Error: Master clock "
+			    "for port(%d) of card(%d) already "

WARNING:SPLIT_STRING: quoted string split across lines
#6064: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4778:
+			    "for port(%d) of card(%d) already "
+			    "defined for port(%d)\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6065: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4779:
+			    pt + 1, HFC_cnt + 1, hc->masterclk+1);
 			                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6074: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4788:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#6076: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4790:
+			    "%s: PROTOCOL set non capacitive "
+			    "transmitter: card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6079: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4793:
+		test_and_set_bit(HFC_CFG_NONCAP_TX,
+		    &hc->chan[i + 2].cfg);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#6082: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4796:
+	if (port[Port_cnt] & 0x004) {
+	if (debug & DEBUG_HFCMULTI_INIT)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#6083: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4797:
+	if (debug & DEBUG_HFCMULTI_INIT)
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6084: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4798:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#6086: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4800:
+			    "%s: PROTOCOL disable E-channel: "
+			    "card(%d) port(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6089: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4803:
+		test_and_set_bit(HFC_CFG_DIS_ECHANNEL,
+		    &hc->chan[i + 2].cfg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6092: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4806:
+	snprintf(name, MISDN_MAX_IDLEN - 1, "hfc-%ds.%d/%d",
+		hc->type, HFC_cnt + 1, pt + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6114: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4828:
+		printk(KERN_ERR "too many cards (max=%d).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6115: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4829:
+		printk(KERN_ERR "too many cards (max=%d).\n",
+			MAX_CARDS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6119: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4833:
+		printk(KERN_WARNING "HFC-MULTI: Card '%s:%s' type %d found but "

WARNING:SPLIT_STRING: quoted string split across lines
#6120: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4834:
+		printk(KERN_WARNING "HFC-MULTI: Card '%s:%s' type %d found but "
+		    "type[%d] %d was supplied as module parameter\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6123: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4837:
+		printk(KERN_WARNING "HFC-MULTI: Load module without parameters "

WARNING:SPLIT_STRING: quoted string split across lines
#6124: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4838:
+		printk(KERN_WARNING "HFC-MULTI: Load module without parameters "
+			"first, to see cards and their types.");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6128: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4842:
+		printk(KERN_DEBUG "%s: Registering %s:%s chip type %d (0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6129: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4843:
+		printk(KERN_DEBUG "%s: Registering %s:%s chip type %d (0x%x)\n",
+		    __func__, m->vendor_name, m->card_name, m->type,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hc)...) over kzalloc(sizeof(struct hfc_multi)...)
#6133: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4847:
+	hc = kzalloc(sizeof(struct hfc_multi), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6135: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4849:
+		printk(KERN_ERR "No kmem for HFC-Multi card\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#6135: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4849:
+	if (!hc) {
+		printk(KERN_ERR "No kmem for HFC-Multi card\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6147: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4861:
+		printk(KERN_INFO "HFC-E1 card has disabled D-channel, but "

WARNING:SPLIT_STRING: quoted string split across lines
#6148: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4862:
+		printk(KERN_INFO "HFC-E1 card has disabled D-channel, but "
+			"31 B-channels\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line (or did you mean 'else if'?)
#6149: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4863:
+	} if (dslot[HFC_cnt] > 0 && dslot[HFC_cnt] < 32) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6151: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4865:
+		printk(KERN_INFO "HFC-E1 card has alternating D-channel on "

WARNING:SPLIT_STRING: quoted string split across lines
#6152: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4866:
+		printk(KERN_INFO "HFC-E1 card has alternating D-channel on "
+			"time slot %d\n", dslot[HFC_cnt]);

CHECK:BRACES: Unbalanced braces around else statement
#6153: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4867:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#6158: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4872:
+	if (type[HFC_cnt] & 0x100) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6161: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4875:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#6185: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4899:
+		printk(KERN_NOTICE "Watchdog enabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6200: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4914:
+			printk(KERN_ERR "too many ports (max=%d).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6201: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4915:
+			printk(KERN_ERR "too many ports (max=%d).\n",
+				MAX_PORTS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6210: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4924:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#6212: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4926:
+			    "%s: Registering D-channel, card(%d) port(%d)"
+			    "result %d\n",

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#6239: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4953:
+		/* Port mode (TE/NT) jumpers */
 		              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6245: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4959:
+		printk(KERN_INFO "%s: %s DIPs(0x%x) jumpers(0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6246: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4960:
+		printk(KERN_INFO "%s: %s DIPs(0x%x) jumpers(0x%x)\n",
+			m->vendor_name, m->card_name, dips, pmj);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6268: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4982:
+		printk(KERN_INFO "%s: %s DIPs(0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6269: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4983:
+		printk(KERN_INFO "%s: %s DIPs(0x%x)\n",
+		    m->vendor_name, m->card_name, dips);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#6276: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4990:
+		dips = (~HFC_inb(hc, R_GPI_IN0) & 0xF0)>>4;
 		                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6277: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4991:
+		printk(KERN_INFO "%s: %s DIPs(0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6278: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:4992:
+		printk(KERN_INFO "%s: %s DIPs(0x%x)\n",
+		    m->vendor_name, m->card_name, dips);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6290: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5004:
+		printk(KERN_ERR "init card returns %d\n", ret_err);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#6309: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5023:
+static void __devexit hfc_remove_pci(struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6315: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5029:
+		printk(KERN_INFO "removing hfc_multi card vendor:%x "

WARNING:SPLIT_STRING: quoted string split across lines
#6316: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5030:
+		printk(KERN_INFO "removing hfc_multi card vendor:%x "
+		    "device:%x subvendor:%x subdevice:%x\n",

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#6326: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5040:
+			printk(KERN_WARNING "%s: drvdata allready removed\n",
 			                                 ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6326: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5040:
+			printk(KERN_WARNING "%s: drvdata allready removed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6327: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5041:
+			printk(KERN_WARNING "%s: drvdata allready removed\n",
+			    __func__);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6381: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5095:
+static struct pci_device_id hfmultipci_ids[] __devinitdata = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#6382: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5096:
+static struct pci_device_id hfmultipci_ids[] __devinitdata = {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6432: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5146:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6462: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5176:
+};
+#undef H

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m"
#6472: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5186:
+	if (m == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6477: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5191:
+				printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#6479: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5193:
+				    "unknown HFC multiport controller "
+				    "(vendor:%x device:%x subvendor:%x "

WARNING:SPLIT_STRING: quoted string split across lines
#6480: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5194:
+				    "(vendor:%x device:%x subvendor:%x "
+				    "subdevice:%x) Please contact the "

WARNING:SPLIT_STRING: quoted string split across lines
#6481: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5195:
+				    "subdevice:%x) Please contact the "
+				    "driver maintainer for support.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6490: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5204:
+	printk(KERN_INFO "%d devices registered\n", HFC_cnt);

CHECK:CAMELCASE: Avoid CamelCase: <HFCmulti_cleanup>
#6502: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5216:
+HFCmulti_cleanup(void)

CHECK:CAMELCASE: Avoid CamelCase: <HFCmulti_init>
#6526: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5240:
+HFCmulti_init(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6531: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5245:
+	printk(KERN_ERR "%s: IRQ_DEBUG IS ENABLED!\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6538: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5252:
+		printk(KERN_DEBUG "%s: init entered\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6546: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5260:
+	printk(KERN_INFO "mISDN: HFC-multi driver %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6547: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5261:
+	printk(KERN_INFO "mISDN: HFC-multi driver %s\n",
+	    hfcmulti_revision);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6578: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5292:
+		printk(KERN_ERR

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#6583: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5297:
+
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6587: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5301:
+		printk(KERN_ERR "error registering pci driver: %x\n", err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6604: FILE: drivers/isdn/hardware/mISDN/hfcmulti.c:5318:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249180.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 456 warnings, 523 checks, 6597 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249180.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
