WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
x86: mce: Xeon75xx specific interface to get corrected memory error information

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#58: 
The code also checks explicitely for the expected CPU model
                     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: arch/x86/kernel/cpu/mcheck/mce.c:91:
+void ^I^I^I^I(*cpu_specific_poll)(struct mce *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mce *' should also have an identifier name
#81: FILE: arch/x86/kernel/cpu/mcheck/mce.c:91:
+void 				(*cpu_specific_poll)(struct mce *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mce *' should also have an identifier name
#118: FILE: arch/x86/kernel/cpu/mcheck/mce-internal.h:31:
+extern void (*cpu_specific_poll)(struct mce *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#149: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:19:
+/* #define DEBUG 1 */ ^I/* disable for production */$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#179: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:31:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#182: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:34:
+#include <asm/io.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#199: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:51:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#209: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:61:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#232: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:84:
+} __attribute__((packed));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:145:
+MODULE_PARM_DESC(memerr_max_conv_rate,
+	"Maximum number of memory error conversions each second; 0 to disable");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:148:
+MODULE_PARM_DESC(memerr_min_interval,
+	"Minimum time delta between two memory conversions; in us; default 500");

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:189:
+	int i;
+	for (i = 0; i < len; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#346: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:198:
+pfa_command(unsigned bank, unsigned socketid, unsigned command, unsigned valid)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#346: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:198:
+pfa_command(unsigned bank, unsigned socketid, unsigned command, unsigned valid)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#346: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:198:
+pfa_command(unsigned bank, unsigned socketid, unsigned command, unsigned valid)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#346: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:198:
+pfa_command(unsigned bank, unsigned socketid, unsigned command, unsigned valid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:211:
+		pr_debug("Memory PFA command %d failed: socket:%d bank:%d status:%x\n",
+			command, socketid, bank, pfa_table->status);

CHECK:CAMELCASE: Avoid CamelCase: <MSR_IA32_MCx_STATUS>
#392: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:244:
+	rdmsrl(MSR_IA32_MCx_STATUS(m->bank), status);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:256:
+		pr_debug("%d: got physical address %llx valid %x\n",
+			cpu, m->addr, valid);

CHECK:BRACES: braces {} should be used on all arms of this statement
#453: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:305:
+	if (ktime_us_delta(now, last_int) >= memerr_min_interval &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:306:
+	if (ktime_us_delta(now, last_int) >= memerr_min_interval &&
+	   ++cperm <= memerr_max_conv_rate) {

CHECK:BRACES: Unbalanced braces around else statement
#460: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:312:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:370:
+	if (!nocsum && csum((u8 *)pfa_table,
+				offsetof(struct pfa_table, command))) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#526: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:378:
+		unsigned len = roundup(pfa_table->len, PAGE_SIZE);

WARNING:LINE_SPACING: Missing a blank line after declarations
#527: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:379:
+		unsigned len = roundup(pfa_table->len, PAGE_SIZE);
+		iounmap(pfa_table);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:383:
+			pr_err("Cannot remap %u bytes PFA table at %x\n",
+				len, addr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#538: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:390:
+		int status = pfa_command(0, 0, PFA_CMD_GET_TOPOLOGY, 0);
+		if (status < 0) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#546: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:398:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#564: FILE: arch/x86/kernel/cpu/mcheck/mce-xeon75xx.c:416:
+	wmb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#585: FILE: arch/x86/kernel/e820.c:82:
+int e820_all_mapped(u64 start, u64 end, unsigned type)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#605: FILE: arch/x86/Kconfig:834:
+config X86_MCE_XEON75XX
+	tristate "Intel Xeon 7500 series corrected memory error driver"
+	depends on X86_MCE_INTEL
+	---help---
+	   Add support for a Intel Xeon 7500 series specific memory error driver.
+	   This allows to report the DIMM and physical address on a corrected
+	   memory error machine check event.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000021340.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 12 checks, 505 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000021340.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
