WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#38: FILE: security/apparmor/main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#62: FILE: security/apparmor/main.c:25:
+static const char *capability_names[] = {

WARNING:TYPO_SPELLING: 'non-existant' may be misspelled - perhaps 'non-existent'?
#68: FILE: security/apparmor/main.c:31:
+ * Used when in complain mode, to emit Permitting messages for non-existant
                                                                ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#123: FILE: security/apparmor/main.c:86:
+		denied_mask |= (l_mode & ~ AA_MAY_LINK) & ~t_mode;
 		                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: security/apparmor/main.c:120:
+		char *buf = kmalloc(size, GFP_KERNEL);
+		if (!buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#230: FILE: security/apparmor/main.c:193:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#336: FILE: security/apparmor/main.c:299:
+		  * fails */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: security/apparmor/main.c:319:
+		audit_log_format(ab, " attribute=\"%s%s%s%s%s%s%s\"",
+			iattr->ia_valid & ATTR_MODE ? "mode," : "",

WARNING:LINE_SPACING: Missing a blank line after declarations
#408: FILE: security/apparmor/main.c:371:
+	struct aa_audit sa;
+	memset(&sa, 0, sizeof(sa));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: security/apparmor/main.c:382:
+int aa_audit_message(struct aa_profile *profile, struct aa_audit *sa,
+		      int type)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#456: FILE: security/apparmor/main.c:419:
+			return 0;
+		else

WARNING:TYPO_SPELLING: 'alread' may be misspelled - perhaps 'already'?
#617: FILE: security/apparmor/main.c:580:
+	/* test if cap has alread been logged */
 	                   ^^^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#622: FILE: security/apparmor/main.c:585:
+		return error;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#622: FILE: security/apparmor/main.c:585:
+	} else

WARNING:TYPO_SPELLING: 'occurence' may be misspelled - perhaps 'occurrence'?
#624: FILE: security/apparmor/main.c:587:
+		 * caps_logged is a cache to reduce the occurence of
 		                                        ^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#721: FILE: security/apparmor/main.c:684:
+	if (profile) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#743: FILE: security/apparmor/main.c:706:
+			struct aa_audit sa;
+			memset(&sa, 0, sizeof(sa));

CHECK:BRACES: Unbalanced braces around else statement
#750: FILE: security/apparmor/main.c:713:
+	} else

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#766: FILE: security/apparmor/main.c:729:
+			 __FUNCTION__, new_profile->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#782: FILE: security/apparmor/main.c:745:
+			 __FUNCTION__,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#799: FILE: security/apparmor/main.c:762:
+	struct file *filp = bprm->file;
 	             ^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#804: FILE: security/apparmor/main.c:767:
+	AA_DEBUG("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#808: FILE: security/apparmor/main.c:771:
+		AA_ERROR("%s: Failed to get filename", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#832: FILE: security/apparmor/main.c:795:
+					 __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#839: FILE: security/apparmor/main.c:802:
+					 __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#848: FILE: security/apparmor/main.c:811:
+					 __FUNCTION__,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_profile"
#872: FILE: security/apparmor/main.c:835:
+		if (new_profile == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#910: FILE: security/apparmor/main.c:873:
+		bprm->security = (void*)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#1004: FILE: security/apparmor/main.c:967:
+	if (cxt->previous_profile) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1016: FILE: security/apparmor/main.c:979:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1052: FILE: security/apparmor/main.c:1015:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1145: FILE: security/apparmor/main.c:1108:
+		char *name, *profile_name;
+		if (previous_profile)

WARNING:TYPO_SPELLING: 'aquired' may be misspelled - perhaps 'acquired'?
#1223: FILE: security/apparmor/main.c:1186:
+ * profile are consistent once all locks are aquired.
                                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1283: FILE: security/apparmor/main.c:1246:
+		 * chance to emit its own set of cap messages */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413002.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 22 warnings, 10 checks, 1255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413002.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
