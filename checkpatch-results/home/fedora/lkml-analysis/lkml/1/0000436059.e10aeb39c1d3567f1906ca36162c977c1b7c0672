WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
From: Rafael J. Wysocki <rjw@sisk.pl>, Johannes Berg <johannes@sipsolutions.net>

CHECK:SPACING: No space is necessary after a cast
#78: FILE: include/linux/pm.h:110:
+#define PM_SUSPEND_MAX		((__force suspend_state_t) 4)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#204: FILE: kernel/power/main.c:275:
+		*(s-1) = '\n';
 		   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#242: FILE: kernel/power/disk.c:45:
+};
+#define HIBERNATION_MAX (__HIBERNATION_AFTER_LAST-1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#242: FILE: kernel/power/disk.c:45:
+#define HIBERNATION_MAX (__HIBERNATION_AFTER_LAST-1)
                                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: kernel/power/disk.c:61:
+
+

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#435: FILE: kernel/power/disk.c:350:
+ *	choose 'shutdown' or 'reboot' as alternatives, as well as one fo the
   	                                                              ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#509: FILE: kernel/power/disk.c:414:
+	if (mode != HIBERNATION_INVALID) {
[...]
-			if (pm_ops && pm_ops->enter &&
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#533: FILE: kernel/power/disk.c:428:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#688: FILE: drivers/acpi/sleep/main.c:215:
+		printk("Broken toshiba laptop -> kicking interrupts\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#839: FILE: include/linux/suspend.h:65:
+extern void hibernation_set_ops(struct hibernation_ops *ops);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#844: FILE: include/linux/suspend.h:70:
+extern int hibernate(void);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#852: FILE: include/linux/suspend.h:78:
+static inline int hibernate(void) { return -ENOSYS; }

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 9 checks, 718 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
