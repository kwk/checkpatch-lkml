WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
When do_output_char() attempts to write a carriage return/line feed sequence,

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'David VomLehn'
#47: 
Signed-off-by: David VomLehn

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: drivers/usb/serial/generic.c:284:
+static int usb_serial_generic_write_start(struct usb_serial_port *port,
+	int status)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: drivers/usb/serial/generic.c:294:
+	 * operation. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#93: FILE: drivers/usb/serial/generic.c:296:
+	if (port->write_urb_busy)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#95: FILE: drivers/usb/serial/generic.c:298:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: drivers/usb/serial/generic.c:313:
+	usb_fill_bulk_urb(port->write_urb, serial->dev,
+			   usb_sndbulkpipe(serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: drivers/usb/serial/generic.c:314:
+			   usb_sndbulkpipe(serial->dev,
+				port->bulk_out_endpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#111: FILE: drivers/usb/serial/generic.c:314:
+				port->bulk_out_endpointAddress),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#125: FILE: drivers/usb/serial/generic.c:328:
+		/* don't have to grab the lock here, as we will
+		   retry if != 0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#125: FILE: drivers/usb/serial/generic.c:328:
+		   retry if != 0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: drivers/usb/serial/generic.c:370:
+	 * This adds some complexity, is it worth it for serial I/O? */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/usb/serial/usb-serial.c:975:
+		port->write_fifo = kfifo_alloc(PAGE_SIZE, GFP_KERNEL,
+			&port->write_fifo_lock);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#299: FILE: include/linux/usb/serial.h:100:
+	spinlock_t		write_fifo_lock;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084356.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 8 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084356.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
