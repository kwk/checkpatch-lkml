ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#178: FILE: kernel/mutex.c:61:
+static void noinline __sched

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#187: FILE: kernel/mutex.c:85:
+void inline __sched mutex_lock(struct mutex *lock)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#196: FILE: kernel/mutex.c:98:
+static void noinline __sched

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#232: FILE: kernel/mutex.c:274:
+static int noinline __sched

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#250: FILE: kernel/mutex.c:297:
+static void noinline __sched

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#259: FILE: kernel/mutex.c:305:
+static int noinline __sched

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#308: FILE: kernel/pid.c:290:
+struct pid * find_pid_ns(int nr, struct pid_namespace *ns)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: kernel/pid.c:321:
+int attach_pid(struct task_struct *task, enum pid_type type,
 		struct pid *pid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: kernel/pid.c:353:
+void transfer_pid(struct task_struct *old, struct task_struct *new,
 			   enum pid_type type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#344: FILE: kernel/pid.c:360:
+struct task_struct * pid_task(struct pid *pid, enum pid_type type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: kernel/rcupdate.c:125:
+void call_rcu(struct rcu_head *head,
 				void (*func)(struct rcu_head *rcu))

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#375: FILE: kernel/rcupdate.c:159:
+void call_rcu_bh(struct rcu_head *head,

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: kernel/rcupdate.c:160:
+void call_rcu_bh(struct rcu_head *head,
 				void (*func)(struct rcu_head *rcu))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: kernel/sched.c:3810:
+void __wake_up(wait_queue_head_t *q, unsigned int mode,
 			int nr_exclusive, void *key)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: kernel/wait.c:177:
+int __sched out_of_line_wait_on_bit(void *word, int bit,
 					int (*action)(void *), unsigned mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: kernel/wait.c:205:
+int __sched out_of_line_wait_on_bit_lock(void *word, int bit,
 					int (*action)(void *), unsigned mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: kernel/workqueue.c:197:
+int queue_delayed_work(struct workqueue_struct *wq,
 			struct delayed_work *dwork, unsigned long delay)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: kernel/workqueue.c:565:
+int schedule_delayed_work(struct delayed_work *dwork,
 					unsigned long delay)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 1 warnings, 9 checks, 527 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
