WARNING:TYPO_SPELLING: 'resizeable' may be misspelled - perhaps 'resizable'?
#44: 
 * Dynamically resizeable pool of threads used for data receiving
               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'belive' may be misspelled - perhaps 'believe'?
#62: 
I belive project is completed. Consider for inclusion.
  ^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: drivers/block/dst/Kconfig:1:
+menuconfig DST
+	tristate "Distributed storage"
+	depends on NET
+	select CONNECTOR
+	select LIBCRC32C
+	---help---
+	This driver allows to create a distributed storage block device.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#119: FILE: drivers/block/dst/Kconfig:11:
+config DST_DEBUG
+	bool "DST debug"
+	depends on DST
+	---help---
+	This option will turn HEAVY debugging of the DST.
+	Turn it on ONLY if you have to debug some really obscure problem.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#142: FILE: drivers/block/dst/crypto.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/block/dst/crypto.c:37:
+		dprintk("%s: failed to allocate hash '%s', err: %d.\n",
+				__func__, ctl->hash_algo, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#186: FILE: drivers/block/dst/crypto.c:45:
+		printk("%02x ", key[err]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: drivers/block/dst/crypto.c:46:
+	printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/block/dst/crypto.c:54:
+		dprintk("%s: failed to set key for hash '%s', err: %d.\n",
+				__func__, ctl->hash_algo, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/block/dst/crypto.c:78:
+		dprintk("%s: failed to allocate cipher '%s', err: %d.\n",
+				__func__, ctl->cipher_algo, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/block/dst/crypto.c:87:
+		dprintk("%s: failed to set key for cipher '%s', err: %d.\n",
+				__func__, ctl->cipher_algo, err);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#244: FILE: drivers/block/dst/crypto.c:103:
+	for (i=0; i<e->page_num; ++i)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#244: FILE: drivers/block/dst/crypto.c:103:
+	for (i=0; i<e->page_num; ++i)
 	           ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#253: FILE: drivers/block/dst/crypto.c:112:
+	e->pages = kmalloc(num * sizeof(struct page **), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#257: FILE: drivers/block/dst/crypto.c:116:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#257: FILE: drivers/block/dst/crypto.c:116:
+	for (i=0; i<num; ++i) {
 	           ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#331: FILE: drivers/block/dst/crypto.c:190:
+struct dst_crypto_completion
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/block/dst/crypto.c:208:
+static int dst_crypto_process(struct ablkcipher_request *req,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#368: FILE: drivers/block/dst/crypto.c:227:
+	switch (err) {
+		case -EINPROGRESS:
+		case -EBUSY:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/block/dst/crypto.c:231:
+			err = wait_for_completion_interruptible_timeout(&c.complete,
+					timeout);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/block/dst/crypto.c:245:
+static int dst_trans_iter_out(struct bio *bio, struct dst_crypto_engine *e,
+		int (* iterator) (struct dst_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer name
#386: FILE: drivers/block/dst/crypto.c:245:
+		int (* iterator) (struct dst_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer arguments
#386: FILE: drivers/block/dst/crypto.c:245:
+		int (* iterator) (struct dst_crypto_engine *e,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#386: FILE: drivers/block/dst/crypto.c:245:
+		int (* iterator) (struct dst_crypto_engine *e,
 		     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/block/dst/crypto.c:251:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/block/dst/crypto.c:268:
+static int dst_trans_iter_in(struct bio *bio, struct dst_crypto_engine *e,
+		int (* iterator) (struct dst_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer name
#409: FILE: drivers/block/dst/crypto.c:268:
+		int (* iterator) (struct dst_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer arguments
#409: FILE: drivers/block/dst/crypto.c:268:
+		int (* iterator) (struct dst_crypto_engine *e,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#409: FILE: drivers/block/dst/crypto.c:268:
+		int (* iterator) (struct dst_crypto_engine *e,
 		     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: drivers/block/dst/crypto.c:274:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: drivers/block/dst/crypto.c:291:
+static int dst_crypt_iterator(struct dst_crypto_engine *e,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/block/dst/crypto.c:317:
+static int dst_hash_iterator(struct dst_crypto_engine *e,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*e)...) over kzalloc(sizeof(struct dst_crypto_engine)...)
#492: FILE: drivers/block/dst/crypto.c:351:
+	e = kzalloc(sizeof(struct dst_crypto_engine), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*e->src)...) over kzalloc(sizeof(struct scatterlist)...)
#495: FILE: drivers/block/dst/crypto.c:354:
+	e->src = kzalloc(sizeof(struct scatterlist) * 2 * n->max_pages, GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#543: FILE: drivers/block/dst/crypto.c:402:
+	for (i=0; i<ctl->thread_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#543: FILE: drivers/block/dst/crypto.c:402:
+	for (i=0; i<ctl->thread_num; ++i) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#546: FILE: drivers/block/dst/crypto.c:405:
+		err = thread_pool_add_worker(n->pool, name, i+10,
 		                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: drivers/block/dst/crypto.c:406:
+		err = thread_pool_add_worker(n->pool, name, i+10,
+			dst_crypto_thread_init, dst_crypto_thread_cleanup, n);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#556: FILE: drivers/block/dst/crypto.c:415:
+		thread_pool_del_worker_id(n->pool, i+10);
 		                                    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#587: FILE: drivers/block/dst/crypto.c:446:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#595: FILE: drivers/block/dst/crypto.c:454:
+		printk("%s: %llu/%u: size: %u, offset: %u, data: ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: drivers/block/dst/crypto.c:455:
+		printk("%s: %llu/%u: size: %u, offset: %u, data: ",
+				__func__, bio->bi_sector, bio->bi_size,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#600: FILE: drivers/block/dst/crypto.c:459:
+		for (i=0; i<bv->bv_len; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#600: FILE: drivers/block/dst/crypto.c:459:
+		for (i=0; i<bv->bv_len; ++i)
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#601: FILE: drivers/block/dst/crypto.c:460:
+			printk("%02x ", p[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#603: FILE: drivers/block/dst/crypto.c:462:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#629: FILE: drivers/block/dst/crypto.c:488:
+			printk("%s: bio: %llu/%u, rw: %lu, hash: ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: drivers/block/dst/crypto.c:489:
+			printk("%s: bio: %llu/%u, rw: %lu, hash: ",
+				__func__, bio->bi_sector, bio->bi_size, bio_data_dir(bio));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#631: FILE: drivers/block/dst/crypto.c:490:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i)
+					printk("%02x ", hash[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#631: FILE: drivers/block/dst/crypto.c:490:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i)
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#631: FILE: drivers/block/dst/crypto.c:490:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i)
 			           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#632: FILE: drivers/block/dst/crypto.c:491:
+					printk("%02x ", hash[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#633: FILE: drivers/block/dst/crypto.c:492:
+			printk("\n");

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#644: FILE: drivers/block/dst/crypto.c:503:
+static int dst_crypto_process_receiving(struct dst_crypto_engine *e, struct bio *bio, u8 *hash, u8 *recv_hash)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#659: FILE: drivers/block/dst/crypto.c:518:
+		printk("%s: bio: %llu/%u, rw: %lu, hash mismatch: %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/block/dst/crypto.c:519:
+		printk("%s: bio: %llu/%u, rw: %lu, hash mismatch: %d",
+			__func__, bio->bi_sector, bio->bi_size, bio_data_dir(bio), mismatch);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#664: FILE: drivers/block/dst/crypto.c:523:
+			printk(", recv/calc: ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#665: FILE: drivers/block/dst/crypto.c:524:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#665: FILE: drivers/block/dst/crypto.c:524:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
 			           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#665: FILE: drivers/block/dst/crypto.c:524:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
+				printk("%02x/%02x ", recv_hash[i], hash[i]);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#666: FILE: drivers/block/dst/crypto.c:525:
+				printk("%02x/%02x ", recv_hash[i], hash[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#669: FILE: drivers/block/dst/crypto.c:528:
+		printk("\n");

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#695: FILE: drivers/block/dst/crypto.c:554:
+	dprintk("%s: t: %p, gen: %llu, cipher: %p, hash: %p.\n", __func__, t, t->gen, e->cipher, e->hash);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#711: FILE: drivers/block/dst/crypto.c:570:
+		return dst_trans_send(t);
+	} else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: drivers/block/dst/crypto.c:571:
+		u8 *hash = e->data + e->size/2;
 		                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/block/dst/crypto.c:595:
+	err = thread_pool_schedule(n->pool,
+		dst_trans_crypto_setup, dst_trans_crypto_action,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#770: FILE: drivers/block/dst/crypto.c:629:
+		u8 *hash = e->data + e->size/2;
 		                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#801: FILE: drivers/block/dst/crypto.c:660:
+	err = thread_pool_schedule(n->pool,
+		dst_export_crypto_setup, dst_export_crypto_action,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#813: FILE: drivers/block/dst/crypto.c:672:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/block/dst/crypto.c:724:
+	err = wait_event_interruptible_timeout(psb->wait, (psb->flags != ~0),
+			psb->wait_on_page_timeout);

WARNING:TYPO_SPELLING: 'acceptible' may be misspelled - perhaps 'acceptable'?
#877: FILE: drivers/block/dst/crypto.c:736:
+	 * should setup superblock in a way, which is acceptible
 	                                              ^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#915: FILE: drivers/block/dst/dcore.c:1:
+/*

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#955: FILE: drivers/block/dst/dcore.c:41:
+static char dst_name[] = "Succumbed to live ant.";

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#972: FILE: drivers/block/dst/dcore.c:58:
+^I.name ^I^I= "dst",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#973: FILE: drivers/block/dst/dcore.c:59:
+^I.match ^I^I= &dst_dev_match,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#981: FILE: drivers/block/dst/dcore.c:67:
+^I.bus ^I^I= &dst_dev_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#982: FILE: drivers/block/dst/dcore.c:68:
+^I.release ^I= &dst_node_release$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: drivers/block/dst/dcore.c:76:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1012: FILE: drivers/block/dst/dcore.c:98:
+static int dst_bdev_open(struct inode *inode, struct file *filp)
                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1020: FILE: drivers/block/dst/dcore.c:106:
+static int dst_bdev_release(struct inode *inode, struct file *filp)
                                                               ^^^^

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1028: FILE: drivers/block/dst/dcore.c:114:
+static struct block_device_operations dst_blk_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1057: FILE: drivers/block/dst/dcore.c:143:
+		printk(KERN_INFO "DST node %s attached read-only.\n", n->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1068: FILE: drivers/block/dst/dcore.c:154:
+	snprintf(n->disk->disk_name, sizeof(n->disk->disk_name),
+			"dst-%s-%d", n->name, n->disk->first_minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/block/dst/dcore.c:165:
+static ssize_t dst_show_size(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1091: FILE: drivers/block/dst/dcore.c:177:
+static ssize_t dst_show_type(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1104: FILE: drivers/block/dst/dcore.c:190:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&addr;
+		return sprintf(buf, "%u.%u.%u.%u:%d\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1108: FILE: drivers/block/dst/dcore.c:194:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&addr;
+		return sprintf(buf,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1122: FILE: drivers/block/dst/dcore.c:208:
+		for (i=0; i<addrlen; ++i) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1122: FILE: drivers/block/dst/dcore.c:208:
+		for (i=0; i<addrlen; ++i) {
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1146: FILE: drivers/block/dst/dcore.c:232:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1146: FILE: drivers/block/dst/dcore.c:232:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i)
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1148: FILE: drivers/block/dst/dcore.c:234:
+		err = device_create_file(&n->device,
+				&dst_node_attrs[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1156: FILE: drivers/block/dst/dcore.c:242:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1156: FILE: drivers/block/dst/dcore.c:242:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i)
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1158: FILE: drivers/block/dst/dcore.c:244:
+		device_remove_file(&n->device,
+				&dst_node_attrs[i]);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1205: FILE: drivers/block/dst/dcore.c:291:
+	unsigned hash = dst_hash(n->name, sizeof(n->name));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1279: FILE: drivers/block/dst/dcore.c:365:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1282: FILE: drivers/block/dst/dcore.c:368:
+	err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1286: FILE: drivers/block/dst/dcore.c:372:
+	inode = nd.path.dentry->d_inode;
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1300: FILE: drivers/block/dst/dcore.c:386:
+	path_put(&nd.path);
 	          ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: drivers/block/dst/dcore.c:391:
+static int dst_setup_export(struct dst_node *n, struct dst_ctl *ctl,
+		struct dst_export_ctl *le)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1314: FILE: drivers/block/dst/dcore.c:400:
+	n->bdev = open_by_devnum(dev, FMODE_READ|FMODE_WRITE);
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: drivers/block/dst/dcore.c:435:
+static struct dst_node *dst_alloc_node(struct dst_ctl *ctl,
+		int (*start)(struct dst_node *),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n)...) over kzalloc(sizeof(struct dst_node)...)
#1355: FILE: drivers/block/dst/dcore.c:441:
+	n = kzalloc(sizeof(struct dst_node), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1388: FILE: drivers/block/dst/dcore.c:474:
+	n->pool = thread_pool_create(num, n->name, dst_thread_network_init,
+			dst_thread_network_cleanup, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1484: FILE: drivers/block/dst/dcore.c:570:
+	printk(KERN_INFO "STOPPED name: '%s', size: %llu.\n", n->name, n->size);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*s)...) over kmalloc(sizeof(struct dst_secure)...)
#1530: FILE: drivers/block/dst/dcore.c:616:
+	s = kmalloc(sizeof(struct dst_secure), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1557: FILE: drivers/block/dst/dcore.c:643:
+	printk(KERN_INFO "STARTED name: '%s', size: %llu.\n", n->name, n->size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1561: FILE: drivers/block/dst/dcore.c:647:
+
+

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1562: FILE: drivers/block/dst/dcore.c:648:
+typedef int (*dst_command_func)(struct dst_node *n, struct dst_ctl *ctl, void *data, unsigned int size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1588: FILE: drivers/block/dst/dcore.c:674:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ack)...) over kmalloc(sizeof(struct dst_ctl_ack)...)
#1617: FILE: drivers/block/dst/dcore.c:703:
+	ack = kmalloc(sizeof(struct dst_ctl_ack), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dst_hashtable)...) over kzalloc(sizeof(struct list_head)...)
#1646: FILE: drivers/block/dst/dcore.c:732:
+	dst_hashtable = kzalloc(sizeof(struct list_head) * dst_hashtable_size, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1646: FILE: drivers/block/dst/dcore.c:732:
+	dst_hashtable = kzalloc(sizeof(struct list_head) * dst_hashtable_size, GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1650: FILE: drivers/block/dst/dcore.c:736:
+	for (i=0; i<dst_hashtable_size; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1650: FILE: drivers/block/dst/dcore.c:736:
+	for (i=0; i<dst_hashtable_size; ++i)
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1660: FILE: drivers/block/dst/dcore.c:746:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1661: FILE: drivers/block/dst/dcore.c:747:
+	for (i=0; i<dst_hashtable_size; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1661: FILE: drivers/block/dst/dcore.c:747:
+	for (i=0; i<dst_hashtable_size; ++i) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1697: FILE: drivers/block/dst/dcore.c:783:
+	printk(KERN_INFO "Distributed storage, '%s' release.\n", dst_name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1736: FILE: drivers/block/dst/export.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1797: FILE: drivers/block/dst/export.c:62:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1858: FILE: drivers/block/dst/export.c:123:
+			printk("%s: revents: %x, socket: %p, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1859: FILE: drivers/block/dst/export.c:124:
+			printk("%s: revents: %x, socket: %p, err: %d.\n",
+					__func__, revents, st->socket, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1884: FILE: drivers/block/dst/export.c:149:
+	err = kernel_getpeername(sock, (struct sockaddr *)&new->ctl.addr,
+			(int *)&new->ctl.addr.sa_data_len);

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#1891: FILE: drivers/block/dst/export.c:156:
+		dst_dump_addr(sock, (struct sockaddr *)&new->ctl.addr, "Client is not allowed to connect");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1921: FILE: drivers/block/dst/export.c:186:
+			p = list_first_entry(&st->request_list, struct dst_export_priv, request_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1953: FILE: drivers/block/dst/export.c:218:
+		dprintk("%s: st: %p, refcnt: %d, list_empty: %d.\n",
+				__func__, st, atomic_read(&st->refcnt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1956: FILE: drivers/block/dst/export.c:221:
+		wait_event_timeout(st->thread_wait,
+				(atomic_read(&st->refcnt) == 1) ||

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1958: FILE: drivers/block/dst/export.c:223:
+				HZ/2);
 				  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1965: FILE: drivers/block/dst/export.c:230:
+				p = list_first_entry(&st->request_list,
+					struct dst_export_priv, request_entry);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1972: FILE: drivers/block/dst/export.c:237:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1978: FILE: drivers/block/dst/export.c:243:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1999: FILE: drivers/block/dst/export.c:264:
+				err = wait_event_interruptible_timeout(st->thread_wait,
+						!list_empty(&st->request_list) ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2023: FILE: drivers/block/dst/export.c:288:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2072: FILE: drivers/block/dst/export.c:337:
+	err = thread_pool_schedule(n->pool, dst_thread_setup,
+			dst_accept, st, MAX_SCHEDULE_TIMEOUT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2140: FILE: drivers/block/dst/export.c:405:
+		dprintk("%s: bio: %llu/%u, size: %u, err: %d.\n",
+				__func__, bio->bi_sector, bio->bi_size, size, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2254: FILE: drivers/block/dst/export.c:519:
+	dprintk("%s: bio: %llu/%u, rw: %lu, dir: %lu.\n",
+			__func__, bio->bi_sector, bio->bi_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2275: FILE: drivers/block/dst/export.c:540:
+	dprintk("%s: id: %llu, bio: %llu/%u, csize: %u, flags: %lu, rw: %lu.\n",
+			__func__, cmd->id, bio->bi_sector, bio->bi_size,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2287: FILE: drivers/block/dst/export.c:552:
+		cmd->size = cmd->csize = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2314: FILE: drivers/block/dst/state.c:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2347: FILE: drivers/block/dst/state.c:34:
+struct dst_poll_helper
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2348: FILE: drivers/block/dst/state.c:35:
+^Ipoll_table ^I^Ipt;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2352: FILE: drivers/block/dst/state.c:39:
+static int dst_queue_wake(wait_queue_t *wait, unsigned mode, int sync, void *key)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2361: FILE: drivers/block/dst/state.c:48:
+static void dst_queue_func(struct file *file, wait_queue_head_t *whead,
+				 poll_table *pt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2393: FILE: drivers/block/dst/state.c:80:
+static int dst_data_recv_header(struct socket *sock,
+		void *data, unsigned int size, int block)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2408: FILE: drivers/block/dst/state.c:95:
+	msg.msg_flags = (block)?MSG_WAITALL:MSG_DONTWAIT;
 	                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2408: FILE: drivers/block/dst/state.c:95:
+	msg.msg_flags = (block)?MSG_WAITALL:MSG_DONTWAIT;
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2411: FILE: drivers/block/dst/state.c:98:
+	err = kernel_recvmsg(sock, &msg, &iov, 1, iov.iov_len,
+			msg.msg_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2422: FILE: drivers/block/dst/state.c:109:
+int dst_data_send_header(struct socket *sock,
+		void *data, unsigned int size, int more)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2437: FILE: drivers/block/dst/state.c:124:
+	msg.msg_flags = MSG_WAITALL | (more)?MSG_MORE:0;
 	                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2437: FILE: drivers/block/dst/state.c:124:
+	msg.msg_flags = MSG_WAITALL | (more)?MSG_MORE:0;
 	                                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2471: FILE: drivers/block/dst/state.c:158:
+		printk("%s: checking result: cmd: %d, size reported: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2472: FILE: drivers/block/dst/state.c:159:
+		printk("%s: checking result: cmd: %d, size reported: %llu.\n",
+			__func__, cmd->cmd, cmd->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2485: FILE: drivers/block/dst/state.c:172:
+	dprintk("%s: n: %p, err: %d, size: %llu, permission: %x.\n",
+			__func__, n, err, n->size, st->permissions);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2501: FILE: drivers/block/dst/state.c:188:
+	sock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo = msecs_to_jiffies(DST_DEFAULT_TIMEO);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2504: FILE: drivers/block/dst/state.c:191:
+	st->socket = st->read_socket = sock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2522: FILE: drivers/block/dst/state.c:209:
+		struct sockaddr_in *sin = (struct sockaddr_in *)sa;
+		printk(KERN_INFO "%s %u.%u.%u.%u:%d.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2522: FILE: drivers/block/dst/state.c:209:
+		printk(KERN_INFO "%s %u.%u.%u.%u:%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2523: FILE: drivers/block/dst/state.c:210:
+		printk(KERN_INFO "%s %u.%u.%u.%u:%d.\n",
+			str, NIPQUAD(sin->sin_addr.s_addr), ntohs(sin->sin_port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2526: FILE: drivers/block/dst/state.c:213:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)sa;
+		printk(KERN_INFO "%s %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2526: FILE: drivers/block/dst/state.c:213:
+		printk(KERN_INFO "%s %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2527: FILE: drivers/block/dst/state.c:214:
+		printk(KERN_INFO "%s %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",
+			str, NIP6(sin->sin6_addr), ntohs(sin->sin6_port));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2552: FILE: drivers/block/dst/state.c:239:
+	err = kernel_connect(st->socket, (struct sockaddr *)&st->ctl.addr,
+			st->ctl.addr.sa_data_len, 0);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#2570: FILE: drivers/block/dst/state.c:257:
+static void __inline__ dst_state_reset_nolock(struct dst_state *st)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#2570: FILE: drivers/block/dst/state.c:257:
+static void __inline__ dst_state_reset_nolock(struct dst_state *st)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#2576: FILE: drivers/block/dst/state.c:263:
+static void __inline__ dst_state_reset(struct dst_state *st)

WARNING:INLINE: plain inline is preferred over __inline__
#2576: FILE: drivers/block/dst/state.c:263:
+static void __inline__ dst_state_reset(struct dst_state *st)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2593: FILE: drivers/block/dst/state.c:280:
+	BUG_ON(!size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2607: FILE: drivers/block/dst/state.c:294:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1, iov.iov_len,
+			msg.msg_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2609: FILE: drivers/block/dst/state.c:296:
+		printk("%s: failed to recv data: size: %llu, err: %d.\n", __func__, size, err);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'st->read_socket == st->socket'
#2655: FILE: drivers/block/dst/state.c:342:
+		if (st->socket && (st->read_socket == st->socket) && (revents & POLLIN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2665: FILE: drivers/block/dst/state.c:352:
+			printk("%s: revents: %x, socket: %p, size: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2666: FILE: drivers/block/dst/state.c:353:
+			printk("%s: revents: %x, socket: %p, size: %u, err: %d.\n",
+					__func__, revents, st->socket, size, err);

WARNING:SPLIT_STRING: quoted string split across lines
#2789: FILE: drivers/block/dst/state.c:476:
+		dprintk("%s: cmd: cmd: %u, sector: %llu, size: %u, "
+				"csize: %u != digest size %u.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#2831: FILE: drivers/block/dst/state.c:518:
+	dprintk("%s: cmd: %u, size: %u, csize: %u, id: %llu, sector: %llu, flags: %llx, rw: %llx.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2832: FILE: drivers/block/dst/state.c:519:
+	dprintk("%s: cmd: %u, size: %u, csize: %u, id: %llu, sector: %llu, flags: %llx, rw: %llx.\n",
+			__func__, cmd->cmd, cmd->size,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2845: FILE: drivers/block/dst/state.c:532:
+	switch (cmd->cmd) {
+		case DST_IO_RESPONSE:
[...]
+		case DST_IO:
[...]
+		case DST_CFG:
[...]
+		default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2868: FILE: drivers/block/dst/state.c:555:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2870: FILE: drivers/block/dst/state.c:557:
+	dprintk("%s: start st: %p, n: %p, scan: %lu, need_exit: %d.\n",
+			__func__, st, n, n->trans_scan_timeout, st->need_exit);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2892: FILE: drivers/block/dst/state.c:579:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct dst_state)...)
#2912: FILE: drivers/block/dst/state.c:599:
+	st = kzalloc(sizeof(struct dst_state), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3002: FILE: drivers/block/dst/state.c:689:
+	err = dst_data_send_header(st->socket, cmd,
+		sizeof(struct dst_cmd) + c->crypto_attached_size, bio->bi_vcnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3011: FILE: drivers/block/dst/state.c:698:
+		err = kernel_sendpage(st->socket, bv->bv_page, bv->bv_offset,
+				bv->bv_len, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3030: FILE: drivers/block/dst/state.c:717:
+^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#3038: FILE: drivers/block/dst/state.c:725:
+	if (bio_data_dir(bio) == WRITE) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3048: FILE: drivers/block/dst/state.c:735:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3062: FILE: drivers/block/dst/thread_pool.c:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3083: FILE: drivers/block/dst/thread_pool.c:22:
+struct thread_pool_worker
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3094: FILE: drivers/block/dst/thread_pool.c:33:
+^I$

WARNING:SPACING: Unnecessary space before function pointer name
#3100: FILE: drivers/block/dst/thread_pool.c:39:
+	int			(* action)(void *private, void *schedule_data);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3100: FILE: drivers/block/dst/thread_pool.c:39:
+	int			(* action)(void *private, void *schedule_data);
 	   			 ^

WARNING:SPACING: Unnecessary space before function pointer name
#3101: FILE: drivers/block/dst/thread_pool.c:40:
+	void			(* cleanup)(void *private);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3101: FILE: drivers/block/dst/thread_pool.c:40:
+	void			(* cleanup)(void *private);
 	    			 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3135: FILE: drivers/block/dst/thread_pool.c:74:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3167: FILE: drivers/block/dst/thread_pool.c:106:
+		dprintk("%s: locking list_empty: %d, thread_num: %d.\n",
+				__func__, list_empty(&p->ready_list), p->thread_num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3172: FILE: drivers/block/dst/thread_pool.c:111:
+			w = list_first_entry(&p->ready_list,
+					struct thread_pool_worker,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3176: FILE: drivers/block/dst/thread_pool.c:115:
+			dprintk("%s: deleting w: %p, thread_num: %d, list: %p [%p.%p].\n",
+					__func__, w, p->thread_num, &p->ready_list,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3214: FILE: drivers/block/dst/thread_pool.c:153:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3220: FILE: drivers/block/dst/thread_pool.c:159:
+int thread_pool_add_worker(struct thread_pool *p,
+		char *name,

WARNING:SPACING: Unnecessary space before function pointer name
#3222: FILE: drivers/block/dst/thread_pool.c:161:
+		void *(* init)(void *private),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3222: FILE: drivers/block/dst/thread_pool.c:161:
+		void *(* init)(void *private),
 		       ^

WARNING:SPACING: Unnecessary space before function pointer name
#3223: FILE: drivers/block/dst/thread_pool.c:162:
+		void (* cleanup)(void *private),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3223: FILE: drivers/block/dst/thread_pool.c:162:
+		void (* cleanup)(void *private),
 		      ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*w)...) over kzalloc(sizeof(struct thread_pool_worker)...)
#3229: FILE: drivers/block/dst/thread_pool.c:168:
+	w = kzalloc(sizeof(struct thread_pool_worker), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3274: FILE: drivers/block/dst/thread_pool.c:213:
+struct thread_pool *thread_pool_create(int num, char *name,
+		void *(* init)(void *private),

WARNING:SPACING: Unnecessary space before function pointer name
#3274: FILE: drivers/block/dst/thread_pool.c:213:
+		void *(* init)(void *private),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3274: FILE: drivers/block/dst/thread_pool.c:213:
+		void *(* init)(void *private),
 		       ^

WARNING:SPACING: Unnecessary space before function pointer name
#3275: FILE: drivers/block/dst/thread_pool.c:214:
+		void (* cleanup)(void *private),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3275: FILE: drivers/block/dst/thread_pool.c:214:
+		void (* cleanup)(void *private),
 		      ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*p)...) over kzalloc(sizeof(struct thread_pool)...)
#3283: FILE: drivers/block/dst/thread_pool.c:222:
+	p = kzalloc(sizeof(struct thread_pool), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3293: FILE: drivers/block/dst/thread_pool.c:232:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#3293: FILE: drivers/block/dst/thread_pool.c:232:
+	for (i=0; i<num; ++i) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3312: FILE: drivers/block/dst/thread_pool.c:251:
+int thread_pool_schedule_private(struct thread_pool *p,
+		int (* setup)(void *private, void *data),

WARNING:SPACING: Unnecessary space before function pointer name
#3312: FILE: drivers/block/dst/thread_pool.c:251:
+		int (* setup)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3312: FILE: drivers/block/dst/thread_pool.c:251:
+		int (* setup)(void *private, void *data),
 		     ^

WARNING:SPACING: Unnecessary space before function pointer name
#3313: FILE: drivers/block/dst/thread_pool.c:252:
+		int (* action)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3313: FILE: drivers/block/dst/thread_pool.c:252:
+		int (* action)(void *private, void *data),
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3321: FILE: drivers/block/dst/thread_pool.c:260:
+		timeout = wait_event_interruptible_timeout(p->wait,
+				!list_empty(&p->ready_list),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3358: FILE: drivers/block/dst/thread_pool.c:297:
+int thread_pool_schedule(struct thread_pool *p,
+		int (* setup)(void *private, void *data),

WARNING:SPACING: Unnecessary space before function pointer name
#3358: FILE: drivers/block/dst/thread_pool.c:297:
+		int (* setup)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3358: FILE: drivers/block/dst/thread_pool.c:297:
+		int (* setup)(void *private, void *data),
 		     ^

WARNING:SPACING: Unnecessary space before function pointer name
#3359: FILE: drivers/block/dst/thread_pool.c:298:
+		int (* action)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3359: FILE: drivers/block/dst/thread_pool.c:298:
+		int (* action)(void *private, void *data),
 		     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3370: FILE: drivers/block/dst/trans.c:1:
+/*

CHECK:BRACES: braces {} should be used on all arms of this statement
#3413: FILE: drivers/block/dst/trans.c:44:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3417: FILE: drivers/block/dst/trans.c:48:
+		else {

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#3423: FILE: drivers/block/dst/trans.c:54:
+	dprintk("%s: %s transaction: id: %llu.\n", __func__, (ret)?"found":"not found", gen);
 	                                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#3423: FILE: drivers/block/dst/trans.c:54:
+	dprintk("%s: %s transaction: id: %llu.\n", __func__, (ret)?"found":"not found", gen);
 	                                                                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#3441: FILE: drivers/block/dst/trans.c:72:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3445: FILE: drivers/block/dst/trans.c:76:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3453: FILE: drivers/block/dst/trans.c:84:
+		printk("%s: exist: old: gen: %llu, bio: %llu/%u, send_time: %lu, "

WARNING:SPLIT_STRING: quoted string split across lines
#3454: FILE: drivers/block/dst/trans.c:85:
+		printk("%s: exist: old: gen: %llu, bio: %llu/%u, send_time: %lu, "
+				"new: gen: %llu, bio: %llu/%u, send_time: %lu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3528: FILE: drivers/block/dst/trans.c:159:
+	dprintk("%s: gen: %llu, bio: %llu/%u, dir/enc: %d, need_crypto: %d.\n",
+			__func__, t->gen, bio->bi_sector, bio->bi_size, t->enc,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3554: FILE: drivers/block/dst/trans.c:185:
+^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3561: FILE: drivers/block/dst/trans.c:192:
+		if (timeout && time_after(t->send_time + timeout, jiffies)
+				&& t->retries == 0)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3563: FILE: drivers/block/dst/trans.c:194:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3612: FILE: drivers/block/dst/trans.c:243:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3633: FILE: drivers/block/dst/trans.c:264:
+	n->trans_cache = kmem_cache_create(n->name,
+			size + n->crypto.crypto_attached_size,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3680: FILE: include/linux/dst.h:1:
+/*

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#3707: FILE: include/linux/dst.h:28:
+	DST_ADD_EXPORT,		/* Add local node with given id to the storage to be exported and used by remote peers */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#3708: FILE: include/linux/dst.h:29:
+	DST_CRYPTO,		/* Crypto initialization command (hash/cipher used to protect the connection) */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#3709: FILE: include/linux/dst.h:30:
+	DST_SECURITY,		/* Security attributes for given connection (permissions for example) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3715: FILE: include/linux/dst.h:36:
+struct dst_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3726: FILE: include/linux/dst.h:47:
+struct dst_ctl_ack
+{

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#3737: FILE: include/linux/dst.h:58:
+	unsigned short		sa_data_len;			/* Number of bytes used in sa_data */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3741: FILE: include/linux/dst.h:62:
+struct dst_network_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3748: FILE: include/linux/dst.h:69:
+struct dst_crypto_ctl
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3757: FILE: include/linux/dst.h:78:
+#define DST_PERM_READ		(1<<0)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3757: FILE: include/linux/dst.h:78:
+#define DST_PERM_READ		(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3758: FILE: include/linux/dst.h:79:
+#define DST_PERM_WRITE		(1<<1)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3758: FILE: include/linux/dst.h:79:
+#define DST_PERM_WRITE		(1<<1)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3767: FILE: include/linux/dst.h:88:
+struct dst_secure_user
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3773: FILE: include/linux/dst.h:94:
+struct dst_export_ctl
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3779: FILE: include/linux/dst.h:100:
+^IDST_CFG^I= 1, ^I^I/* Request remote configuration */$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3786: FILE: include/linux/dst.h:107:
+struct dst_cmd
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3823: FILE: include/linux/dst.h:144:
+#define dprintk(f, a...) printk(KERN_NOTICE f, ##a)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3825: FILE: include/linux/dst.h:146:
+static inline void __attribute__ ((format (printf, 1, 2))) dprintk(const char * fmt, ...) {}

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#3825: FILE: include/linux/dst.h:146:
+static inline void __attribute__ ((format (printf, 1, 2))) dprintk(const char * fmt, ...) {}

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3831: FILE: include/linux/dst.h:152:
+struct dst_trans
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3852: FILE: include/linux/dst.h:173:
+struct dst_crypto_engine
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3872: FILE: include/linux/dst.h:193:
+struct dst_state
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3873: FILE: include/linux/dst.h:194:
+	struct mutex		state_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3875: FILE: include/linux/dst.h:196:
+^Iwait_queue_t ^I^Iwait;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3876: FILE: include/linux/dst.h:197:
+^Iwait_queue_head_t ^I*whead;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3877: FILE: include/linux/dst.h:198:
+^Iwait_queue_head_t ^Ithread_wait;$

WARNING:SPACING: Unnecessary space before function pointer name
#3885: FILE: include/linux/dst.h:206:
+	void			(* cleanup)(struct dst_state *st);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#3885: FILE: include/linux/dst.h:206:
+	void			(* cleanup)(struct dst_state *st);
 	    			 ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3888: FILE: include/linux/dst.h:209:
+	spinlock_t		request_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3898: FILE: include/linux/dst.h:219:
+^I$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3903: FILE: include/linux/dst.h:224:
+struct dst_node
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3908: FILE: include/linux/dst.h:229:
+^Istruct block_device ^I*bdev;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3922: FILE: include/linux/dst.h:243:
+	struct mutex		security_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3926: FILE: include/linux/dst.h:247:
+^Iint ^I^I^I(*start)(struct dst_node *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dst_node *' should also have an identifier name
#3926: FILE: include/linux/dst.h:247:
+	int 			(*start)(struct dst_node *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3940: FILE: include/linux/dst.h:261:
+	struct mutex		trans_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3944: FILE: include/linux/dst.h:265:
+^Istruct delayed_work ^Itrans_work;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3948: FILE: include/linux/dst.h:269:
+struct dst_secure
+{

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3960: FILE: include/linux/dst.h:281:
+	BUG_ON(atomic_read(&st->refcnt) == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3984: FILE: include/linux/dst.h:305:
+	BUG_ON(!mutex_is_locked(&st->state_lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4020: FILE: include/linux/dst.h:341:
+int dst_data_send_header(struct socket *sock,
+		void *data, unsigned int size, int more);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4033: FILE: include/linux/dst.h:354:
+struct dst_export_priv
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#4070: FILE: include/linux/dst.h:391:
+	struct dst_crypto_ctl *c = &n->crypto;
+	return (c->hash_algo[0] || c->cipher_algo[0]);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4077: FILE: include/linux/dst.h:398:
+struct thread_pool
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4079: FILE: include/linux/dst.h:400:
+	struct mutex		thread_lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4088: FILE: include/linux/dst.h:409:
+int thread_pool_add_worker(struct thread_pool *p,
+		char *name,

WARNING:SPACING: Unnecessary space before function pointer name
#4090: FILE: include/linux/dst.h:411:
+		void *(* init)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4090: FILE: include/linux/dst.h:411:
+		void *(* init)(void *data),
 		       ^

WARNING:SPACING: Unnecessary space before function pointer name
#4091: FILE: include/linux/dst.h:412:
+		void (* cleanup)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4091: FILE: include/linux/dst.h:412:
+		void (* cleanup)(void *data),
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4096: FILE: include/linux/dst.h:417:
+struct thread_pool *thread_pool_create(int num, char *name,
+		void *(* init)(void *data),

WARNING:SPACING: Unnecessary space before function pointer name
#4096: FILE: include/linux/dst.h:417:
+		void *(* init)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4096: FILE: include/linux/dst.h:417:
+		void *(* init)(void *data),
 		       ^

WARNING:SPACING: Unnecessary space before function pointer name
#4097: FILE: include/linux/dst.h:418:
+		void (* cleanup)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4097: FILE: include/linux/dst.h:418:
+		void (* cleanup)(void *data),
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4101: FILE: include/linux/dst.h:422:
+int thread_pool_schedule(struct thread_pool *p,
+		int (* setup)(void *stored_private, void *setup_data),

WARNING:SPACING: Unnecessary space before function pointer name
#4101: FILE: include/linux/dst.h:422:
+		int (* setup)(void *stored_private, void *setup_data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4101: FILE: include/linux/dst.h:422:
+		int (* setup)(void *stored_private, void *setup_data),
 		     ^

WARNING:SPACING: Unnecessary space before function pointer name
#4102: FILE: include/linux/dst.h:423:
+		int (* action)(void *stored_private, void *setup_data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4102: FILE: include/linux/dst.h:423:
+		int (* action)(void *stored_private, void *setup_data),
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4105: FILE: include/linux/dst.h:426:
+int thread_pool_schedule_private(struct thread_pool *p,
+		int (* setup)(void *private, void *data),

WARNING:SPACING: Unnecessary space before function pointer name
#4105: FILE: include/linux/dst.h:426:
+		int (* setup)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4105: FILE: include/linux/dst.h:426:
+		int (* setup)(void *private, void *data),
 		     ^

WARNING:SPACING: Unnecessary space before function pointer name
#4106: FILE: include/linux/dst.h:427:
+		int (* action)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#4106: FILE: include/linux/dst.h:427:
+		int (* action)(void *private, void *data),
 		     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230368.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 85 errors, 115 warnings, 106 checks, 3960 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230368.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
