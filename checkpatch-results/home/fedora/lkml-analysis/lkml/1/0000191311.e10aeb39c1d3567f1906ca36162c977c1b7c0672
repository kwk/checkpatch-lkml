WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [Target_Core_Mod]: Updates for transport_[register,deregister]_session() logic

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: drivers/lio-core/target_core_transport.c:259:
+	if (!(se_cmd_cache = kmem_cache_create("se_cmd_cache",

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/lio-core/target_core_transport.c:260:
+	if (!(se_cmd_cache = kmem_cache_create("se_cmd_cache",
+			sizeof(se_cmd_t), __alignof__(se_cmd_t), 0, NULL))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#69: FILE: drivers/lio-core/target_core_transport.c:261:
+		printk(KERN_ERR "kmem_cache_create for se_cmd_t failed\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#74: FILE: drivers/lio-core/target_core_transport.c:264:
+	if (!(se_sess_cache = kmem_cache_create("se_sess_cache",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/lio-core/target_core_transport.c:265:
+	if (!(se_sess_cache = kmem_cache_create("se_sess_cache",
+			sizeof(se_session_t), __alignof__(se_session_t),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#77: FILE: drivers/lio-core/target_core_transport.c:267:
+		printk(KERN_ERR "kmem_cache_create() for se_session_t failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/lio-core/target_core_transport.c:271:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) *$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/lio-core/target_core_transport.c:271:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) *$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#82: FILE: drivers/lio-core/target_core_transport.c:271:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) *

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/lio-core/target_core_transport.c:290:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/lio-core/target_core_transport.c:290:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) *$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: drivers/lio-core/target_core_transport.c:290:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#105: FILE: drivers/lio-core/target_core_transport.c:578:
+extern se_session_t *transport_allocate_session (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#105: FILE: drivers/lio-core/target_core_transport.c:578:
+extern se_session_t *transport_allocate_session (void)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#124: FILE: drivers/lio-core/target_core_transport.c:591:
+EXPORT_SYMBOL(transport_allocate_session);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#129: FILE: drivers/lio-core/target_core_transport.c:596:
+extern void __transport_register_session (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: drivers/lio-core/target_core_transport.c:596:
+extern void __transport_register_session (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/lio-core/target_core_transport.c:613:
+^I^Ispin_unlock_bh(&se_nacl->nacl_sess_lock);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#159: FILE: drivers/lio-core/target_core_transport.c:623:
+EXPORT_SYMBOL(__transport_register_session);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#161: FILE: drivers/lio-core/target_core_transport.c:625:
+extern void transport_register_session (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: drivers/lio-core/target_core_transport.c:625:
+extern void transport_register_session (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: drivers/lio-core/target_core_transport.c:632:
+^I__transport_register_session(se_tpg, se_nacl, se_sess, fabric_sess_ptr);^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#172: FILE: drivers/lio-core/target_core_transport.c:636:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#174: FILE: drivers/lio-core/target_core_transport.c:638:
+EXPORT_SYMBOL(transport_register_session);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/lio-core/target_core_transport.c:640:
+extern void transport_deregister_session_configfs (se_session_t *se_sess)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#183: FILE: drivers/lio-core/target_core_transport.c:647:
+	if ((se_nacl = se_sess->se_node_acl)) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#192: FILE: drivers/lio-core/target_core_transport.c:656:
+EXPORT_SYMBOL(transport_deregister_session_configfs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/lio-core/target_core_transport.c:664:
+^Ilist_del(&se_sess->sess_list);^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: drivers/lio-core/target_core_transport.c:673:
+	if ((se_nacl = se_sess->se_node_acl)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/lio-core/target_core_transport.c:678:
+				REMOVE_ENTRY_FROM_LIST(se_nacl, se_tpg->acl_node_head,
+					se_tpg->acl_node_tail);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#233: FILE: drivers/lio-core/target_core_transport.c:697:
+EXPORT_SYMBOL(transport_deregister_session);

WARNING:TYPO_SPELLING: 'Alloced' may be misspelled - perhaps 'Allocated'?
#260: FILE: drivers/lio-core/target_core_transport.c:2312:
+	printk("Alloced se_cmd: %p from se_cmd_cache\n", cmd);
 	        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: drivers/lio-core/target_core_transport.c:2312:
+	printk("Alloced se_cmd: %p from se_cmd_cache\n", cmd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#271: FILE: drivers/lio-core/target_core_transport.c:2358:
+	printk("Releasing se_cmd: %p back to se_cmd_cache\n", se_cmd);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#277: FILE: drivers/lio-core/target_core_transport.c:2364:
+EXPORT_SYMBOL(transport_free_se_cmd);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#345: FILE: drivers/lio-core/target_core_transport.c:4589:
+	if (!(cmd->se_lun = kzalloc(sizeof(se_lun_t), GFP_KERNEL))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: drivers/lio-core/target_core_transport.c:6326:
+        ret = (lun->lun_reserved_node_acl != sess->se_node_acl) ? -1 : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/lio-core/target_core_transport.c:6326:
+        ret = (lun->lun_reserved_node_acl != sess->se_node_acl) ? -1 : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: drivers/lio-core/target_core_transport.c:6346:
+        if (lun->lun_reserved_node_acl != sess->se_node_acl) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/lio-core/target_core_transport.c:6346:
+        if (lun->lun_reserved_node_acl != sess->se_node_acl) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/lio-core/target_core_transport.c:6377:
+        if (lun->lun_reserved_node_acl && (lun->lun_reserved_node_acl != sess->se_node_acl)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/lio-core/target_core_transport.c:6377:
+        if (lun->lun_reserved_node_acl && (lun->lun_reserved_node_acl != sess->se_node_acl)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_reserved_node_acl != sess->se_node_acl'
#497: FILE: drivers/lio-core/target_core_transport.c:6377:
+        if (lun->lun_reserved_node_acl && (lun->lun_reserved_node_acl != sess->se_node_acl)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: drivers/lio-core/target_core_transport.c:6384:
+                                sess->se_node_acl->initiatorname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/lio-core/target_core_transport.c:6384:
+                                sess->se_node_acl->initiatorname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: drivers/lio-core/target_core_transport.c:6389:
+        lun->lun_reserved_node_acl = sess->se_node_acl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/lio-core/target_core_transport.c:6389:
+        lun->lun_reserved_node_acl = sess->se_node_acl;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#530: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#530: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (void);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#531: FILE: drivers/lio-core/target_core_transport.h:114:
+extern void __transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#532: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_register_session (struct se_portal_group_s *, struct se_node_acl_s *, struct se_session_s *, void *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: drivers/lio-core/target_core_transport.h:116:
+extern void transport_deregister_session_configfs (struct se_session_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#533: FILE: drivers/lio-core/target_core_transport.h:116:
+extern void transport_deregister_session_configfs (struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#533: FILE: drivers/lio-core/target_core_transport.h:116:
+extern void transport_deregister_session_configfs (struct se_session_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191311.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 40 warnings, 10 checks, 449 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191311.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
