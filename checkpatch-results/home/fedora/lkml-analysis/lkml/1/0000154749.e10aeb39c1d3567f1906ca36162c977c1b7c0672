WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#36: FILE: ioctl_new.c:25:
/************************************************************************/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:CAMELCASE: Avoid CamelCase: <zfLnxGetVapId>
#67: FILE: ioctl_new.c:65:
+extern u16_t zfLnxGetVapId(zdev_t *dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#171: FILE: ioctl_new.c:114:
+		return ((freq-2412)/5) + 1;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#171: FILE: ioctl_new.c:114:
+		return ((freq-2412)/5) + 1;
 		                   ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#172: FILE: ioctl_new.c:115:
+		return ((freq-2412)/5) + 1;
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: ioctl_new.c:117:
+^I^Iu16_t num_chan = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: ioctl_new.c:121:
+				return channel_frequency_11A[ii-1];
 				                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: ioctl_new.c:142:
+^I^Iu16_t num_chan = $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#207: FILE: ioctl_new.c:146:
+				return channel_frequency_11A[ii+1];
 				                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: ioctl_new.c:162:
+	char essidbuf[IW_ESSID_MAX_SIZE+1];
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#266: FILE: ioctl_new.c:170:
+	printk(KERN_ERR "usbdrv_ioctl_setessid\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#274: FILE: ioctl_new.c:174:
+		if (erq->length > (IW_ESSID_MAX_SIZE+1))
 		                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#290: FILE: ioctl_new.c:184:
+	printk(KERN_ERR "essidbuf: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: ioctl_new.c:187:
+		printk(KERN_ERR "%02x ", essidbuf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#300: FILE: ioctl_new.c:189:
+	printk(KERN_ERR "\n");

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetSSID>
#314: FILE: ioctl_new.c:196:
+	zfiWlanSetSSID(dev, essidbuf, erq->length);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#315: FILE: ioctl_new.c:197:
+	#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: ioctl_new.c:198:
+		printk(KERN_ERR "macp->wd.ws.ssid: ");

CHECK:CAMELCASE: Avoid CamelCase: <ssidLen>
#322: FILE: ioctl_new.c:200:
+		for (i = 0; i < macp->wd.ws.ssidLen; i++)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#323: FILE: ioctl_new.c:201:
+			printk(KERN_ERR "%02x ", macp->wd.ws.ssid[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: ioctl_new.c:203:
+		printk(KERN_ERR "\n");

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDisable>
#333: FILE: ioctl_new.c:206:
+	zfiWlanDisable(dev, 0);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanEnable>
#334: FILE: ioctl_new.c:207:
+	zfiWlanEnable(dev);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: ioctl_new.c:217:
+	u8_t essidbuf[IW_ESSID_MAX_SIZE+1];
 	                               ^

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQuerySSID>
#359: FILE: ioctl_new.c:224:
+	zfiWlanQuerySSID(dev, essidbuf, &len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#365: FILE: ioctl_new.c:228:
+	printk(KERN_ERR "ESSID: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#372: FILE: ioctl_new.c:231:
+		printk(KERN_ERR "%c", essidbuf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#375: FILE: ioctl_new.c:233:
+	printk(KERN_ERR "\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#409: FILE: ioctl_new.c:256:
+u32 encode_ie(void *buf, u32 bufsize, const u8 *ie, u32 ielen,
+		const u8 *leader, u32 leader_len)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: ioctl_new.c:257:
+u32 encode_ie(void *buf, u32 bufsize, const u8 *ie, u32 ielen,
+		const u8 *leader, u32 leader_len)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#434: FILE: ioctl_new.c:270:
+	return (i == ielen ? p - (u8 *)buf:0);
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <zsBssInfo>
#447: FILE: ioctl_new.c:280:
+	char *end_buf, struct zsBssInfo *list)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#463: FILE: ioctl_new.c:288:
+		char    buf[64*2 + 30];
 		              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: ioctl_new.c:298:
+	current_ev = iwe_stream_add_event(info,	current_ev,
+					end_buf, &iwe, IW_EV_ADDR_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: ioctl_new.c:315:
+	current_ev = iwe_stream_add_point(info,	current_ev,
+					end_buf, &iwe, &list->ssid[2]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: ioctl_new.c:331:
+^I^I^Icurrent_ev = iwe_stream_add_event(info, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: ioctl_new.c:332:
+^I^I^I^I^I^Iend_buf, &iwe, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: ioctl_new.c:332:
+			current_ev = iwe_stream_add_event(info, 
+						end_buf, &iwe, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: ioctl_new.c:332:
+			current_ev = iwe_stream_add_event(info, 
IW_EV_UINT_LEN);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwe.u.freq.m <= 196'
#524: FILE: ioctl_new.c:346:
+		if ((184 <= iwe.u.freq.m) && (iwe.u.freq.m <= 196))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#524: FILE: ioctl_new.c:346:
+		if ((184 <= iwe.u.freq.m) && (iwe.u.freq.m <= 196))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: ioctl_new.c:358:
+	current_ev = iwe_stream_add_event(info, current_ev,
+					end_buf, &iwe, IW_EV_FREQ_LEN);

CHECK:CAMELCASE: Avoid CamelCase: <signalStrength>
#550: FILE: ioctl_new.c:372:
+	iwe.u.qual.level = list->signalStrength;

CHECK:CAMELCASE: Avoid CamelCase: <signalQuality>
#552: FILE: ioctl_new.c:374:
+	iwe.u.qual.qual = list->signalQuality;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: ioctl_new.c:376:
+	current_ev = iwe_stream_add_event(info,	current_ev,
+					end_buf, &iwe, IW_EV_QUAL_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: ioctl_new.c:394:
+	current_ev = iwe_stream_add_point(info,	current_ev,
+					end_buf, &iwe, list->ssid);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#581: FILE: ioctl_new.c:403:
+	/* Rate : stuffing multiple values in a single event require a bit
+	* more of magic

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#587: FILE: ioctl_new.c:409:
+	iwe.u.bitrate.fixed = iwe.u.bitrate.disabled = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <supportedRates>
#589: FILE: ioctl_new.c:411:
+	for (i = 0 ; i < list->supportedRates[1] ; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#591: FILE: ioctl_new.c:413:
+		iwe.u.bitrate.value = ((list->supportedRates[i+2] & 0x7f)
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: ioctl_new.c:417:
+^I^I^I^Icurrent_val, end_buf, &iwe, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: ioctl_new.c:417:
+		current_val = iwe_stream_add_value(info, current_ev,
+				current_val, end_buf, &iwe, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: ioctl_new.c:417:
+		current_val = iwe_stream_add_value(info, current_ev,
IW_EV_PARAM_LEN);

CHECK:CAMELCASE: Avoid CamelCase: <extSupportedRates>
#863: FILE: ioctl_new.c:426:
+	for (i = 0 ; i < list->extSupportedRates[1] ; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: ioctl_new.c:428:
+^I^Iiwe.u.bitrate.value = ((list->extSupportedRates[i+2] & $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#865: FILE: ioctl_new.c:428:
+		iwe.u.bitrate.value = ((list->extSupportedRates[i+2] & 
 		                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: ioctl_new.c:432:
+^I^I^I^Icurrent_val, end_buf, &iwe, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: ioctl_new.c:432:
+		current_val = iwe_stream_add_value(info, current_ev,
+				current_val, end_buf, &iwe, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#871: FILE: ioctl_new.c:432:
+		current_val = iwe_stream_add_value(info, current_ev,
IW_EV_PARAM_LEN);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: ioctl_new.c:448:
+^Isnprintf(buf, sizeof(buf), "bcn_int=%d", (list->beaconInterval[1] $

CHECK:CAMELCASE: Avoid CamelCase: <beaconInterval>
#887: FILE: ioctl_new.c:448:
+	snprintf(buf, sizeof(buf), "bcn_int=%d", (list->beaconInterval[1] 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#889: FILE: ioctl_new.c:449:
+^I^I^I^I^I^I+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: ioctl_new.c:452:
+	current_ev = iwe_stream_add_point(info, current_ev,
+						end_buf, &iwe, buf);

CHECK:CAMELCASE: Avoid CamelCase: <wpaIe>
#901: FILE: ioctl_new.c:460:
+	if (list->wpaIe[1] != 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: ioctl_new.c:468:
+			iwe.u.data.length = encode_ie(buf, sizeof(buf),
+					list->wpaIe, list->wpaIe[1]+2,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#909: FILE: ioctl_new.c:468:
+					list->wpaIe, list->wpaIe[1]+2,
 					                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#910: FILE: ioctl_new.c:469:
+					rsn_leader, sizeof(rsn_leader)-1);
 					                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: ioctl_new.c:472:
+			iwe.u.data.length = encode_ie(buf, sizeof(buf),
+					list->wpaIe, list->wpaIe[1]+2,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#913: FILE: ioctl_new.c:472:
+					list->wpaIe, list->wpaIe[1]+2,
 					                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#914: FILE: ioctl_new.c:473:
+					wpa_leader, sizeof(wpa_leader)-1);
 					                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: ioctl_new.c:476:
+^I^I^Icurrent_ev = iwe_stream_add_point(info, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: ioctl_new.c:477:
+^I^I^I^I^I^I^Iend_buf, &iwe, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: ioctl_new.c:477:
+			current_ev = iwe_stream_add_point(info, 
+							end_buf, &iwe, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: ioctl_new.c:477:
+			current_ev = iwe_stream_add_point(info, 
buf);

CHECK:CAMELCASE: Avoid CamelCase: <rsnIe>
#929: FILE: ioctl_new.c:486:
+	if (list->rsnIe[1] != 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#931: FILE: ioctl_new.c:488:
+		static const char rsn_leader[] = "rsn_ie=";
+		memset(&iwe, 0, sizeof(iwe));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#936: FILE: ioctl_new.c:493:
+			iwe.u.data.length = encode_ie(buf, sizeof(buf),
+			list->rsnIe, list->rsnIe[1]+2,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#936: FILE: ioctl_new.c:493:
+			list->rsnIe, list->rsnIe[1]+2,
 			                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#937: FILE: ioctl_new.c:494:
+			rsn_leader, sizeof(rsn_leader)-1);
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: ioctl_new.c:497:
+				current_ev = iwe_stream_add_point(info,
+					current_ev, end_buf,  &iwe, buf);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#951: FILE: ioctl_new.c:508:
+	/* The other data in the scan result are not really
+	* interesting, so for now drop it

CHECK:CAMELCASE: Avoid CamelCase: <FreqKHz>
#980: FILE: ioctl_new.c:528:
+	u32_t FreqKHz;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: ioctl_new.c:546:
+^I^I^I^IFreqKHz = (((FreqKHz - 4000000) / 5000) * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: ioctl_new.c:549:
+^I^I^I^IFreqKHz = (((FreqKHz - 5000000) / 5000) * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: ioctl_new.c:557:
+^I^I^I^IFreqKHz = (((FreqKHz - 2412000) / 5000) * $

CHECK:CAMELCASE: Avoid CamelCase: <DeviceOpened>
#1085: FILE: ioctl_new.c:572:
+	if (macp->DeviceOpened == 1) {

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetFrequency>
#1086: FILE: ioctl_new.c:573:
+		zfiWlanSetFrequency(dev, FreqKHz, 0); /* Immediate */

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryFrequency>
#1114: FILE: ioctl_new.c:594:
+	freq->m = zfiWlanQueryFrequency(dev);

CHECK:CAMELCASE: Avoid CamelCase: <WlanMode>
#1130: FILE: ioctl_new.c:605:
+	u8_t WlanMode;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetWlanMode>
#1177: FILE: ioctl_new.c:628:
+	zfiWlanSetWlanMode(dev, WlanMode);

CHECK:CAMELCASE: Avoid CamelCase: <irqFlag>
#1193: FILE: ioctl_new.c:639:
+	unsigned long irqFlag;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryWlanMode>
#1226: FILE: ioctl_new.c:650:
+	switch (zfiWlanQueryWlanMode(dev)) {

CHECK:SPACING: No space is necessary after a cast
#1271: FILE: ioctl_new.c:691:
+	struct iw_range *range = (struct iw_range *) extra;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryAllowChannels>
#1295: FILE: ioctl_new.c:715:
+	channel_num = zfiWlanQueryAllowChannels(dev, channels);

WARNING:TYPO_SPELLING: 'Gurantee' may be misspelled - perhaps 'Guarantee'?
#1297: FILE: ioctl_new.c:717:
+	/* Gurantee reported channel numbers is less
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1298: FILE: ioctl_new.c:718:
+	/* Gurantee reported channel numbers is less
+	* or equal to IW_MAX_FREQUENCIES

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1394: FILE: ioctl_new.c:735:
+	#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1399: FILE: ioctl_new.c:738:
+^I/* XXX need to filter against the regulatory domain &| active set $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1401: FILE: ioctl_new.c:739:
+	/* XXX need to filter against the regulatory domain &| active set 
+	val = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1408: FILE: ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1408: FILE: ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1408: FILE: ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1408: FILE: ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1418: FILE: ioctl_new.c:755:
+^I^Irange->freq[val].m = channel_frequency_11A[2 * i + 1] * $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1424: FILE: ioctl_new.c:760:
+	/* MIMO Rate Not Defined Now
+	* For 802.11a, there are too more frequency.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1451: FILE: ioctl_new.c:787:
+	/* estimated max throughput
+	* XXX need to cap it if we're running at ~2Mbps..

CHECK:CAMELCASE: Avoid CamelCase: <MacAddr>
#1463: FILE: ioctl_new.c:796:
+		struct sockaddr *MacAddr, char *extra)

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetMacAddress>
#1475: FILE: ioctl_new.c:805:
+		zfiWlanSetMacAddress(dev, (u16_t *)&MacAddr->sa_data[0]);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetBssid>
#1478: FILE: ioctl_new.c:808:
+		zfiWlanSetBssid(dev, &MacAddr->sa_data[0]);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryMacAddress>
#1538: FILE: ioctl_new.c:834:
+		zfiWlanQueryMacAddress(dev, &MacAddr->sa_data[0]);

CHECK:CAMELCASE: Avoid CamelCase: <adapterState>
#1541: FILE: ioctl_new.c:837:
+		if (macp->adapterState == ZM_STATUS_MEDIA_CONNECT) {

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryBssid>
#1542: FILE: ioctl_new.c:838:
+			zfiWlanQueryBssid(dev, &MacAddr->sa_data[0]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1545: FILE: ioctl_new.c:841:
+^I^I^I^I^I^I^I^I0x00, 0x00 $

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#1545: FILE: ioctl_new.c:841:
+								0x00, 0x00 
};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1548: FILE: ioctl_new.c:843:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1548: FILE: ioctl_new.c:843:
+			memcpy(&MacAddr->sa_data[0], zero_addr,
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: ioctl_new.c:843:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1549: FILE: ioctl_new.c:843:
+			memcpy(&MacAddr->sa_data[0], zero_addr,
sizeof(zero_addr));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1550: FILE: ioctl_new.c:844:
+ 
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1582: FILE: ioctl_new.c:867:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "CWY - usbdrvwext_siwscan\n");

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanScan>
#1585: FILE: ioctl_new.c:869:
+	zfiWlanScan(dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1651: FILE: ioctl_new.c:879:
+^I/* struct zsWlanDev* wd = (struct zsWlanDev*) zmw_wlan_dev(dev); $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1653: FILE: ioctl_new.c:880:
+	/* struct zsWlanDev* wd = (struct zsWlanDev*) zmw_wlan_dev(dev); 
+	char *current_ev = extra;

CHECK:CAMELCASE: Avoid CamelCase: <zsBssListV1>
#1657: FILE: ioctl_new.c:884:
+	struct zsBssListV1 *pBssList = kmalloc(sizeof(struct zsBssListV1),

CHECK:CAMELCASE: Avoid CamelCase: <pBssList>
#1657: FILE: ioctl_new.c:884:
+	struct zsBssListV1 *pBssList = kmalloc(sizeof(struct zsBssListV1),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pBssList)...) over kmalloc(sizeof(struct zsBssListV1)...)
#1657: FILE: ioctl_new.c:884:
+	struct zsBssListV1 *pBssList = kmalloc(sizeof(struct zsBssListV1),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1658: FILE: ioctl_new.c:885:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: ioctl_new.c:885:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1671: FILE: ioctl_new.c:897:
+^Iprintk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - Report Scan $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1671: FILE: ioctl_new.c:897:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - Report Scan 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1673: FILE: ioctl_new.c:898:
+^I/* printk("giwscan - BssList Sreucture Len : %d\n", $

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1673: FILE: ioctl_new.c:898:
+	/* printk("giwscan - BssList Sreucture Len : %d\n", 
 	                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <BssList>
#1673: FILE: ioctl_new.c:898:
+	/* printk("giwscan - BssList Sreucture Len : %d\n", 

CHECK:CAMELCASE: Avoid CamelCase: <Sreucture>
#1673: FILE: ioctl_new.c:898:
+	/* printk("giwscan - BssList Sreucture Len : %d\n", 

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#1673: FILE: ioctl_new.c:898:
+	/* printk("giwscan - BssList Sreucture Len : %d\n", 

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1675: FILE: ioctl_new.c:899:
+	* printk("giwscan - BssList Count : %d\n",
 	                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Count>
#1675: FILE: ioctl_new.c:899:
+	* printk("giwscan - BssList Count : %d\n",

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1677: FILE: ioctl_new.c:901:
+	* printk("giwscan - UpdateBssList Count : %d\n",
 	                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <UpdateBssList>
#1677: FILE: ioctl_new.c:901:
+	* printk("giwscan - UpdateBssList Count : %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1684: FILE: ioctl_new.c:908:
+^Iprintk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - pBssList->bssCount : $

CHECK:CAMELCASE: Avoid CamelCase: <bssCount>
#1684: FILE: ioctl_new.c:908:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - pBssList->bssCount : 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1687: FILE: ioctl_new.c:910:
+^I/* printk("giwscan - BssList.bssCount : %d\n", BssList.bssCount); $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1689: FILE: ioctl_new.c:911:
+	/* printk("giwscan - BssList.bssCount : %d\n", BssList.bssCount); 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1692: FILE: ioctl_new.c:914:
+^I^I* current_ev = usbdrv_translate_scan(dev, info, $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1692: FILE: ioctl_new.c:914:
+		/* Translate to WE format this entry
+		* current_ev = usbdrv_translate_scan(dev, info, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1697: FILE: ioctl_new.c:918:
+		current_ev = usbdrv_translate_scan(dev, info, current_ev,
+					end_buf, &pBssList->bssInfo[i]);

CHECK:CAMELCASE: Avoid CamelCase: <bssInfo>
#1697: FILE: ioctl_new.c:918:
+					end_buf, &pBssList->bssInfo[i]);

CHECK:CAMELCASE: Avoid CamelCase: <EssidBuf>
#1730: FILE: ioctl_new.c:942:
+	char EssidBuf[IW_ESSID_MAX_SIZE + 1];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1767: FILE: ioctl_new.c:952:
+^I^Iif (copy_from_user(&EssidBuf, essid->pointer, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1769: FILE: ioctl_new.c:953:
+		if (copy_from_user(&EssidBuf, essid->pointer, 
+			return -EFAULT;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1777: FILE: ioctl_new.c:961:
+^I^I^IzfiWlanSetFrequency(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1779: FILE: ioctl_new.c:962:
+			zfiWlanSetFrequency(dev, 
+						FALSE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1780: FILE: ioctl_new.c:963:
+^I^I^IzfiWlanSetEncryMode(dev, $

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetEncryMode>
#1780: FILE: ioctl_new.c:963:
+			zfiWlanSetEncryMode(dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1782: FILE: ioctl_new.c:964:
+			zfiWlanSetEncryMode(dev, 
+			/* u8_t wpaieLen,wpaie[50]; */

CHECK:CAMELCASE: Avoid CamelCase: <EssidLen>
#1838: FILE: ioctl_new.c:981:
+	u8_t EssidLen;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1853: FILE: ioctl_new.c:996:
+^I/* Make sure the essid length is not greater than $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1855: FILE: ioctl_new.c:997:
+	/* Make sure the essid length is not greater than 
+	if (ssid_len > IW_ESSID_MAX_SIZE)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1866: FILE: ioctl_new.c:1008:
+	/* if (essid->pointer) {
+	* if (copy_to_user(essid->pointer, EssidBuf, essid->length)) {

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateBG>
#1965: FILE: ioctl_new.c:1054:
+	u16_t zcIndextoRateBG[16] = {1000, 2000, 5500, 11000, 0, 0, 0, 0,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1966: FILE: ioctl_new.c:1055:
+^I^I^I48000, 24000, 12000, 6000, 54000, 36000, 18000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1968: FILE: ioctl_new.c:1056:
+^Iu16_t zcRateToMCS[] = {0xff, 0, 1, 2, 3, 0xb, 0xf, 0xa, 0xe, 0x9, $

CHECK:CAMELCASE: Avoid CamelCase: <zcRateToMCS>
#1968: FILE: ioctl_new.c:1056:
+	u16_t zcRateToMCS[] = {0xff, 0, 1, 2, 3, 0xb, 0xf, 0xa, 0xe, 0x9, 

CHECK:CAMELCASE: Avoid CamelCase: <RateIndex>
#1971: FILE: ioctl_new.c:1058:
+	u8_t i, RateIndex = 4;

CHECK:CAMELCASE: Avoid CamelCase: <RateKbps>
#1972: FILE: ioctl_new.c:1059:
+	u16_t RateKbps;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1993: FILE: ioctl_new.c:1080:
+^I^Iprintk(DEFAULT_MESSAGE_LOGLEVEL "RateIndex : %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1993: FILE: ioctl_new.c:1080:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "RateIndex : %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1995: FILE: ioctl_new.c:1081:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "RateIndex : %d\n", 
+	}

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetTxRate>
#1999: FILE: ioctl_new.c:1084:
+		zfiWlanSetTxRate(dev, i);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryRxRate>
#2031: FILE: ioctl_new.c:1106:
+	frq->value = zfiWlanQueryRxRate(dev) * 1000;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val < 0'
#2060: FILE: ioctl_new.c:1124:
+	if ((val < 0) || (val > 2347))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > 2347'
#2060: FILE: ioctl_new.c:1124:
+	if ((val < 0) || (val > 2347))

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetRtsThreshold>
#2064: FILE: ioctl_new.c:1127:
+	zfiWlanSetRtsThreshold(dev, val);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryRtsThreshold>
#2094: FILE: ioctl_new.c:1144:
+	rts->value = zfiWlanQueryRtsThreshold(dev);

CHECK:CAMELCASE: Avoid CamelCase: <fragThreshold>
#2110: FILE: ioctl_new.c:1156:
+	u16_t fragThreshold;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetFragThreshold>
#2127: FILE: ioctl_new.c:1166:
+	zfiWlanSetFragThreshold(dev, fragThreshold);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryFragThreshold>
#2160: FILE: ioctl_new.c:1187:
+	val = zfiWlanQueryFragThreshold(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zsKeyInfo>
#2258: FILE: ioctl_new.c:1235:
+	struct zsKeyInfo keyInfo;

CHECK:CAMELCASE: Avoid CamelCase: <keyInfo>
#2258: FILE: ioctl_new.c:1235:
+	struct zsKeyInfo keyInfo;

CHECK:CAMELCASE: Avoid CamelCase: <WepState>
#2260: FILE: ioctl_new.c:1237:
+	int WepState = ZM_ENCRYPTION_WEP_DISABLED;

CHECK:CAMELCASE: Avoid CamelCase: <keyLength>
#2268: FILE: ioctl_new.c:1245:
+		keyInfo.keyLength = erq->length;

CHECK:CAMELCASE: Avoid CamelCase: <keyIndex>
#2269: FILE: ioctl_new.c:1246:
+		keyInfo.keyIndex = (erq->flags & IW_ENCODE_INDEX) - 1;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetKey>
#2274: FILE: ioctl_new.c:1251:
+		zfiWlanSetKey(dev, keyInfo);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanRemoveKey>
#2278: FILE: ioctl_new.c:1255:
+			zfiWlanRemoveKey(dev, 0, i);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetWepStatus>
#2284: FILE: ioctl_new.c:1261:
+		zfiWlanSetWepStatus(dev, WepState);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2285: FILE: ioctl_new.c:1262:
+^I^IzfiWlanSetFrequency(dev, zfiWlanQueryFrequency(dev), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2287: FILE: ioctl_new.c:1263:
+^I^I/* zfiWlanSetEncryMode(dev, zfiWlanQueryEncryMode(dev)); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2287: FILE: ioctl_new.c:1263:
+		zfiWlanSetFrequency(dev, zfiWlanQueryFrequency(dev), 
+		/* zfiWlanSetEncryMode(dev, zfiWlanQueryEncryMode(dev)); 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2288: FILE: ioctl_new.c:1263:
+		zfiWlanSetFrequency(dev, zfiWlanQueryFrequency(dev), 
*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2289: FILE: ioctl_new.c:1264:
+		/* zfiWlanSetEncryMode(dev, zfiWlanQueryEncryMode(dev)); 
+		/* u8_t wpaieLen,wpaie[50]; */

CHECK:CAMELCASE: Avoid CamelCase: <EncryptionMode>
#2360: FILE: ioctl_new.c:1280:
+	u8_t EncryptionMode;

CHECK:CAMELCASE: Avoid CamelCase: <keyLen>
#2361: FILE: ioctl_new.c:1281:
+	u8_t keyLen = 0;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryEncryMode>
#2369: FILE: ioctl_new.c:1286:
+	EncryptionMode = zfiWlanQueryEncryMode(dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2376: FILE: ioctl_new.c:1293:
+^I/* We can't return the key, so set the proper flag and return zero $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2378: FILE: ioctl_new.c:1294:
+	/* We can't return the key, so set the proper flag and return zero 
+	erq->flags |= IW_ENCODE_NOKEY;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2409: FILE: ioctl_new.c:1325:
+		printk(KERN_ERR "Unknown EncryMode\n");

CHECK:CAMELCASE: Avoid CamelCase: <PSMode>
#2426: FILE: ioctl_new.c:1338:
+	u8_t PSMode;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetPowerSaveMode>
#2443: FILE: ioctl_new.c:1348:
+	zfiWlanSetPowerSaveMode(dev, PSMode);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryPowerSaveMode>
#3002: FILE: ioctl_new.c:1365:
+	if (zfiWlanQueryPowerSaveMode(dev) == ZM_STA_PS_NONE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3012: FILE: ioctl_new.c:1375:
+/*int usbdrvwext_setparam(struct net_device *dev, struct iw_request_info $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3014: FILE: ioctl_new.c:1376:
+*^I^I   ^I void *w, char *extra)$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3014: FILE: ioctl_new.c:1376:
+/*int usbdrvwext_setparam(struct net_device *dev, struct iw_request_info 
+*		   	 void *w, char *extra)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3054: FILE: ioctl_new.c:1416:
+*^I^I^I// both require a key so mark the PRIVACY $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3147: FILE: ioctl_new.c:1508:
+*^I^I^Ivap->iv_flags |= IEEE80211_F_WPA1 | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3222: FILE: ioctl_new.c:1582:
+*^I^I^Iretv = ENETRESET;^I// Renegotiate for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3272: FILE: ioctl_new.c:1631:
+*^I^I^Iif ((vap->iv_ath_cap ^ caps) & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3275: FILE: ioctl_new.c:1633:
+*^I^I^I^I^I^Icaps & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3292: FILE: ioctl_new.c:1649:
+*^I^I^Iretv = ENETRESET;^I^I// requires $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3304: FILE: ioctl_new.c:1660:
+*^I^I^Iretv = ENETRESET;^I^I// requires $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3315: FILE: ioctl_new.c:1670:
+*^I^Iretv = ENETRESET;^I// XXX: need something this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3323: FILE: ioctl_new.c:1677:
+*^I^I^I^I^IIEEE80211_FC0_SUBTYPE_REASSOC_REQ, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3327: FILE: ioctl_new.c:1680:
+*^I^Iretv = ieee80211_setathcap(vap, IEEE80211_ATHC_COMP, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3337: FILE: ioctl_new.c:1689:
+*^I^Iretv = ieee80211_setathcap(vap, IEEE80211_ATHC_TURBOP, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3349: FILE: ioctl_new.c:1700:
+*^I^Iretv = ieee80211_setathcap(vap, IEEE80211_ATHC_BURST, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3379: FILE: ioctl_new.c:1729:
+*^I^I^Iieee80211_cancel_scan(vap);^I// anything $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3406: FILE: ioctl_new.c:1755:
+*^I^I^I^Iieee80211_new_state(vap, IEEE80211_S_SCAN, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3465: FILE: ioctl_new.c:1813:
+*^I^I// XXX: Forced sleep for testing. Does not actually place $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3467: FILE: ioctl_new.c:1814:
+*^I^I//      HW in sleep mode yet. this only makes sense for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3509: FILE: ioctl_new.c:1855:
+*^I^I^I^Iic->ic_chanbwflag = $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3586: FILE: ioctl_new.c:1916:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#3588: FILE: ioctl_new.c:1918:
+				" 0x%08x\n", zdreq->addr, *p);
 				    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3597: FILE: ioctl_new.c:1924:
+^I^I^I^I"usbdrv : write value : 0x%08x to memory $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#3597: FILE: ioctl_new.c:1924:
+				"usbdrv : write value : 0x%08x to memory 
 				                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3609: FILE: ioctl_new.c:1933:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3613: FILE: ioctl_new.c:1937:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "IOCTL TEST\n");

WARNING:IF_1: Consider removing the #if 1 and its #endif
#3614: FILE: ioctl_new.c:1938:
+		#if 1

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3617: FILE: ioctl_new.c:1941:
+			if ((i&0x7) == 0)
 			      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3618: FILE: ioctl_new.c:1942:
+				printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3619: FILE: ioctl_new.c:1943:
+			printk(DEFAULT_MESSAGE_LOGLEVEL "%02X ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3620: FILE: ioctl_new.c:1944:
+			printk(DEFAULT_MESSAGE_LOGLEVEL "%02X ",
+					(unsigned char)zdreq->data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3622: FILE: ioctl_new.c:1946:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3734: FILE: ioctl_new.c:1950:
+		#if 0 {

CHECK:CAMELCASE: Avoid CamelCase: <zfiRecv80211>
#3746: FILE: ioctl_new.c:1962:
+			zfiRecv80211(dev, s, NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3771: FILE: ioctl_new.c:1987:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3773: FILE: ioctl_new.c:1989:
+^I^I^Izdreq->addr, key[0], key[1], key[2], key[3], $

WARNING:LINE_SPACING: Missing a blank line after declarations
#3795: FILE: ioctl_new.c:2010:
+		u8_t buffer[2];
+		zfiWlanQuerySignalInfo(dev, &buffer[0]);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQuerySignalInfo>
#3795: FILE: ioctl_new.c:2010:
+		zfiWlanQuerySignalInfo(dev, &buffer[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3796: FILE: ioctl_new.c:2011:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:LINE_SPACING: Missing a blank line after declarations
#3803: FILE: ioctl_new.c:2018:
+		u8_t buffer[2];
+		zfiWlanQuerySignalInfo(dev, &buffer[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3804: FILE: ioctl_new.c:2019:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:CAMELCASE: Avoid CamelCase: <vapId>
#4117: FILE: ioctl_new.c:2048:
+	u16_t vapId = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#4126: FILE: ioctl_new.c:2057:
+		if (zfiWlanQueryWlanMode(dev) == ZM_MODE_AP) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4129: FILE: ioctl_new.c:2060:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <initIv>
#4132: FILE: ioctl_new.c:2063:
+		keyInfo.initIv = zdparm->u.crypt.seq;

CHECK:CAMELCASE: Avoid CamelCase: <macAddr>
#4133: FILE: ioctl_new.c:2064:
+		keyInfo.macAddr = (u16_t *)zdparm->sta_addr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4136: FILE: ioctl_new.c:2067:
+^I^Iif (memcmp(zdparm->sta_addr, bc_addr, sizeof(bc_addr)) == $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4151: FILE: ioctl_new.c:2081:
+				/* if (macp->cardSetting.WPAIeLen==0)
+				* { 802.1x dynamic WEP

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#4160: FILE: ioctl_new.c:2090:
+			} else {
[...]
6)==0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4161: FILE: ioctl_new.c:2091:
+^I^I^I^I/* if (memcmp(zero_mac,zdparm->sta_addr, $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4163: FILE: ioctl_new.c:2092:
+				/* if (memcmp(zero_mac,zdparm->sta_addr, 
+				* {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4173: FILE: ioctl_new.c:2102:
+			printk(KERN_ERR "Set Encryption Type NONE\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4178: FILE: ioctl_new.c:2107:
+			/* //Linux Supplicant will inverse Tx/Rx key
+			* //So we inverse it back, CWYang(+)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4180: FILE: ioctl_new.c:2109:
+^I^I^I* zfMemoryCopy(&keyInfo.key[16], keyInfo.key[24], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4195: FILE: ioctl_new.c:2123:
+^I^I^I*     mDynKeyMode = pSetting->DynKeyMode = $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4202: FILE: ioctl_new.c:2129:
+			/* CamEncryType = ZM_AES;
+			* if (idx == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4205: FILE: ioctl_new.c:2132:
+^I^I^I*    mDynKeyMode = pSetting->DynKeyMode = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4225: FILE: ioctl_new.c:2151:
+^I* In WPA/RSN mode, the key ID range: 1-3, usually, a broadcast $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4225: FILE: ioctl_new.c:2151:
+	/* For Dynamic WEP key (Non-WPA Radius), the key ID range: 0-3
+	* In WPA/RSN mode, the key ID range: 1-3, usually, a broadcast 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4227: FILE: ioctl_new.c:2152:
+^I* For WEP key setting: we set mDynKeyMode and mKeyFormat in $

WARNING:LINE_SPACING: Missing a blank line after declarations
#4249: FILE: ioctl_new.c:2173:
+			int ii;
+			printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4249: FILE: ioctl_new.c:2173:
+			printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4252: FILE: ioctl_new.c:2176:
+				printk(DEFAULT_MESSAGE_LOGLEVEL

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4253: FILE: ioctl_new.c:2177:
+^I^I^I^I^I^I"0x%02x ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4256: FILE: ioctl_new.c:2179:
+^I^I^I^I^Iprintk(DEFAULT_MESSAGE_LOGLEVEL $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4256: FILE: ioctl_new.c:2179:
+					printk(DEFAULT_MESSAGE_LOGLEVEL 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4259: FILE: ioctl_new.c:2181:
+			printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

CHECK:CAMELCASE: Avoid CamelCase: <vapAddr>
#4270: FILE: ioctl_new.c:2192:
+		keyInfo.vapAddr[0] = keyInfo.macAddr[0];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4281: FILE: ioctl_new.c:2202:
+		printk(KERN_ERR "usbdrv_wpa_ioctl: ZD_CMD_SET_MLME\n");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#4289: FILE: ioctl_new.c:2210:
+		switch (zdparm->u.mlme.cmd) {
[...]
+	case ZD_CMD_SCAN_REQ:
[...]
+	case ZD_CMD_SET_GENERIC_ELEMENT:
[...]
+	case ZD_CMD_GET_TSC:
[...]
+	default:
[...]
+	case ZM_CMD_CENC_SETCENC:
[...]
+	case ZM_CMD_CENC_SETKEY:
[...]
+	case ZM_CMD_CENC_REKEY:
[...]
+	default:
[...]
+	case SIOCGIWNAME:
[...]
+	case SIOCGIWAP:
[...]
+	case SIOCSIWAP:
[...]
+	case SIOCGIWMODE:
[...]
+	case SIOCSIWESSID:
[...]
+	case SIOCGIWESSID:
[...]
+	case SIOCSIWRTS:
[...]
+	case SIOCIWFIRSTPRIV + 0x2: {
[...]
+	case SIOCIWFIRSTPRIV + 0x3: {
[...]
+	case ZDAPIOCTL:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4291: FILE: ioctl_new.c:2212:
+			printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:SPACING: No space is necessary after a cast
#4294: FILE: ioctl_new.c:2215:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDeauth>
#4294: FILE: ioctl_new.c:2215:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4295: FILE: ioctl_new.c:2216:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,
+				zdparm->u.mlme.reason_code) != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4296: FILE: ioctl_new.c:2217:
+^I^I^I^Iprintk(KERN_ERR "Can't deauthencate STA: $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4296: FILE: ioctl_new.c:2217:
+				printk(KERN_ERR "Can't deauthencate STA: 

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#4300: FILE: ioctl_new.c:2220:
+				printk(KERN_ERR "Deauthenticate STA: %s"
 				                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#4300: FILE: ioctl_new.c:2220:
+				printk(KERN_ERR "Deauthenticate STA: %s"
 				                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <Deauthenticate>
#4300: FILE: ioctl_new.c:2220:
+				printk(KERN_ERR "Deauthenticate STA: %s"

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#4301: FILE: ioctl_new.c:2221:
+					"with reason code: %d\n",
 					                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#4301: FILE: ioctl_new.c:2221:
+					"with reason code: %d\n",
 					                   ^

WARNING:MISSING_SPACE: break quoted strings at a space character
#4301: FILE: ioctl_new.c:2221:
+				printk(KERN_ERR "Deauthenticate STA: %s"
+					"with reason code: %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4302: FILE: ioctl_new.c:2222:
+^I^I^I^I^Imac_addr, $

CHECK:SPACING: spaces preferred around that '-' (ctx:OxV)
#4307: FILE: ioctl_new.c:2226:
+				" -------Call zfiWlanDeauth, reason:%d\n",
 				        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#4307: FILE: ioctl_new.c:2226:
+				" -------Call zfiWlanDeauth, reason:%d\n",
 				                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4307: FILE: ioctl_new.c:2226:
+				" -------Call zfiWlanDeauth, reason:%d\n",
 				                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Call>
#4307: FILE: ioctl_new.c:2226:
+				" -------Call zfiWlanDeauth, reason:%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4311: FILE: ioctl_new.c:2230:
+^I^I^I^Iprintk(KERN_ERR "Can't disassociate STA: $

CHECK:CAMELCASE: Avoid CamelCase: <Can>
#4311: FILE: ioctl_new.c:2230:
+				printk(KERN_ERR "Can't disassociate STA: 

WARNING:MISSING_SPACE: break quoted strings at a space character
#4316: FILE: ioctl_new.c:2234:
+				printk(KERN_ERR "Disassociate STA: %s"
+					"with reason code: %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4317: FILE: ioctl_new.c:2235:
+^I^I^I^I^Imac_addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4321: FILE: ioctl_new.c:2238:
+^I^I^Iprintk(KERN_ERR "MLME command: 0x%04x not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4340: FILE: ioctl_new.c:2256:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4340: FILE: ioctl_new.c:2256:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4373: FILE: ioctl_new.c:2288:
+^I^I*     memcpy(&mWPAIe, pSetting->WPAIe, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4520: FILE: ioctl_new.c:2334:
+^I^Iprintk(KERN_ERR "policy : % d\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4536: FILE: ioctl_new.c:2347:
+^I^Iprintk(KERN_ERR "Key Index : % d\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4540: FILE: ioctl_new.c:2350:
+^I^I^Iprintk(KERN_ERR "0x%02x ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4548: FILE: ioctl_new.c:2356:
+^I^I^Iprintk(KERN_ERR "0x%02x ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4558: FILE: ioctl_new.c:2363:
+^I^IkeyInfo.flag = ZM_KEY_FLAG_AUTHENTICATOR | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4757: FILE: ioctl_new.c:2505:
+^I^Iif (copy_from_user(&zdreq, ifr->ifr_data, sizeof(zdreq))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4759: FILE: ioctl_new.c:2506:
+^I^I^Iprintk(KERN_ERR "usbdrv : copy_from_user $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4791: FILE: ioctl_new.c:2522:
+^I^I^Iprintk(KERN_ERR "usbdrv : copy_from_user $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4863: FILE: ioctl_new.c:2572:
+					&wpaIe, &wpalen); */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4865: FILE: ioctl_new.c:2574:
+^I^I^I^I^IwpaIe[21], wpaIe[22], wpaIe[23]); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4868: FILE: ioctl_new.c:2576:
+^I^I^I^I^IwpaIe[17], wpaIe[18], wpaIe[19]); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4874: FILE: ioctl_new.c:2581:
+^I^I^I^I"wd->sta.authMode = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4876: FILE: ioctl_new.c:2582:
+^I^I^I^I/* wd->sta.authMode = ZM_AUTH_MODE_WPAPSK; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4878: FILE: ioctl_new.c:2583:
+^I^I^I^I/* wd->ws.authMode = ZM_AUTH_MODE_WPAPSK; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4881: FILE: ioctl_new.c:2585:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4881: FILE: ioctl_new.c:2585:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4892: FILE: ioctl_new.c:2595:
+^I^I^I^I^I} else if ((macp->supIe[17] == $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4894: FILE: ioctl_new.c:2596:
+^I^I^I^I^I^I(macp->supIe[18] == 0xac) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4903: FILE: ioctl_new.c:2600:
+^I^I^I^I"wd->sta.authMode = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4905: FILE: ioctl_new.c:2601:
+^I^I^I^I/* wd->sta.authMode = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4907: FILE: ioctl_new.c:2602:
+^I^I^I^I/* wd->ws.authMode = ZM_AUTH_MODE_WPA2PSK; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4918: FILE: ioctl_new.c:2611:
+^I^I^I^I/* wd->sta.authMode = ZM_AUTH_MODE_WPA2; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4922: FILE: ioctl_new.c:2614:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4922: FILE: ioctl_new.c:2614:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4930: FILE: ioctl_new.c:2621:
+^I^I^I^I"wd->sta.wepStatus = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4932: FILE: ioctl_new.c:2622:
+^I^I^I^I/* wd->sta.wepStatus = ZM_ENCRYPTION_TKIP; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4934: FILE: ioctl_new.c:2623:
+^I^I^I^I/* wd->ws.wepStatus = ZM_ENCRYPTION_TKIP; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4936: FILE: ioctl_new.c:2624:
+^I^I^I^IzfiWlanSetWepStatus(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4940: FILE: ioctl_new.c:2627:
+^I^I^I^I"wd->sta.wepStatus = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4942: FILE: ioctl_new.c:2628:
+^I^I^I^I/* wd->sta.wepStatus = ZM_ENCRYPTION_AES; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4944: FILE: ioctl_new.c:2629:
+^I^I^I^I/* wd->ws.wepStatus = ZM_ENCRYPTION_AES; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4946: FILE: ioctl_new.c:2630:
+^I^I^I^IzfiWlanSetWepStatus(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4955: FILE: ioctl_new.c:2638:
+^I^I^I^I"wd->sta.wepStatus = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4957: FILE: ioctl_new.c:2639:
+^I^I^I^I/* wd->sta.wepStatus = ZM_ENCRYPTION_TKIP; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4959: FILE: ioctl_new.c:2640:
+^I^I^I^I/* wd->ws.wepStatus = ZM_ENCRYPTION_TKIP; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4961: FILE: ioctl_new.c:2641:
+^I^I^I^IzfiWlanSetWepStatus(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4965: FILE: ioctl_new.c:2644:
+^I^I^I^I"wd->sta.wepStatus = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4967: FILE: ioctl_new.c:2645:
+^I^I^I^I/* wd->sta.wepStatus = ZM_ENCRYPTION_AES; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4969: FILE: ioctl_new.c:2646:
+^I^I^I^I/* wd->ws.wepStatus = ZM_ENCRYPTION_AES; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4971: FILE: ioctl_new.c:2647:
+^I^I^I^IzfiWlanSetWepStatus(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4982: FILE: ioctl_new.c:2657:
+^I^I^IzfiWlanSetAuthenticationMode(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4984: FILE: ioctl_new.c:2658:
+^I^I^IzfiWlanSetWepStatus(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4996: FILE: ioctl_new.c:2669:
+^I^I^I^I"****************ZD_PARAM_COUNTERMEASURES $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5055: FILE: ioctl_new.c:2727:
+^I^I^I^I^Isizeof(struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5057: FILE: ioctl_new.c:2728:
+^I^I^Iprintk(KERN_ERR "usbdrv : copy_from_user $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5075: FILE: ioctl_new.c:2745:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5075: FILE: ioctl_new.c:2745:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5409: FILE: ioctl_new.c:2760:
+^I^I^Iprintk(KERN_ERR "usbdrv : copy_from_user $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5415: FILE: ioctl_new.c:2765:
+^I^I^I^I(struct zydas_cenc_param $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000154749.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 122 errors, 74 warnings, 148 checks, 5381 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000154749.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
