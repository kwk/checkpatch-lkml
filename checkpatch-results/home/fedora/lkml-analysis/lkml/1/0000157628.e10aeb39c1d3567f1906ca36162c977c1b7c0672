WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#96: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#502: FILE: drivers/pci/hotplug/legacy_fakephp.c:1:
+/* Works like the fakephp driver used to, except a little better.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/pci/hotplug/legacy_fakephp.c:35:
+	struct legacy_slot *slot = container_of(kobj, typeof(*slot), kobj);
+	strcpy(buf, "1\n");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#551: FILE: drivers/pci/hotplug/legacy_fakephp.c:50:
+	if (strict_strtoul(buf, 0, &val) < 0)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: drivers/pci/hotplug/legacy_fakephp.c:57:
+^I^I                        slot->dev, THIS_MODULE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#576: FILE: drivers/pci/hotplug/legacy_fakephp.c:75:
+	.sysfs_ops = &(struct sysfs_ops){

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: drivers/pci/hotplug/legacy_fakephp.c:105:
+        struct pci_dev *pdev = to_pci_dev(data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/pci/hotplug/legacy_fakephp.c:105:
+        struct pci_dev *pdev = to_pci_dev(data);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#660: FILE: drivers/pci/hotplug/legacy_fakephp.c:159:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 1 checks, 170 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
