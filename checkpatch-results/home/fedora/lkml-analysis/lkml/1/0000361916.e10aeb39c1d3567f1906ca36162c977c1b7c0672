WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: arch/sparc64/kernel/process.c:1:
+/*  arch/sparc64/kernel/process.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#75: FILE: arch/sparc64/kernel/process.c:1:
+/*  arch/sparc64/kernel/process.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#108: FILE: arch/sparc64/kernel/process.c:398:
+} global_reg_snapshot[NR_CPUS];

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: arch/sparc64/kernel/process.c:429:
+		printk("%c CPU[%3d]: TSTATE[%016lx] TPC[%016lx] TNPC[%016lx] TASK[%s:%d]\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gp->tpc != 0UL'
#145: FILE: arch/sparc64/kernel/process.c:435:
+		if ((gp->tstate & TSTATE_PRIV) && (gp->tpc != 0UL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: arch/sparc64/kernel/process.c:437:
+			printk("             TPC[%s]\n", buffer);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#183: FILE: arch/sparc64/kernel/smp.c:897:
+extern unsigned long xcall_fetch_glob_regs;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#206: FILE: arch/sparc64/mm/ultra.S:1:
+/* ultra.S: Don't expand these all over the place...

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/asm-sparc64/smp.h:46:
+extern void smp_fetch_global_regs(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 2 checks, 189 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
