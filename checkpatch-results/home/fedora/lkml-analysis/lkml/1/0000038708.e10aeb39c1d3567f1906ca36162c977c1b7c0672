ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: arch/alpha/include/asm/spinlock.h:103:
+static inline int arch_read_trylock(arch_rwlock_t * lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: arch/alpha/include/asm/spinlock.h:125:
+static inline int arch_write_trylock(arch_rwlock_t * lock)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: arch/alpha/include/asm/spinlock.h:147:
+static inline void arch_read_unlock(arch_rwlock_t * lock)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: arch/alpha/include/asm/spinlock.h:163:
+static inline void arch_write_unlock(arch_rwlock_t * lock)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#227: FILE: arch/blackfin/include/asm/spinlock.h:20:
+asmlinkage void arch_read_lock_asm(volatile int *ptr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#228: FILE: arch/blackfin/include/asm/spinlock.h:21:
+asmlinkage int arch_read_trylock_asm(volatile int *ptr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#229: FILE: arch/blackfin/include/asm/spinlock.h:22:
+asmlinkage void arch_read_unlock_asm(volatile int *ptr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#230: FILE: arch/blackfin/include/asm/spinlock.h:23:
+asmlinkage void arch_write_lock_asm(volatile int *ptr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#231: FILE: arch/blackfin/include/asm/spinlock.h:24:
+asmlinkage int arch_write_trylock_asm(volatile int *ptr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#232: FILE: arch/blackfin/include/asm/spinlock.h:25:
+asmlinkage void arch_write_unlock_asm(volatile int *ptr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#374: FILE: arch/ia64/include/asm/spinlock.h:143:
+#define arch_read_can_lock(rw)		(*(volatile int *)(rw) >= 0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#375: FILE: arch/ia64/include/asm/spinlock.h:144:
+#define arch_write_can_lock(rw)	(*(volatile int *)(rw) == 0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#585: FILE: arch/mips/include/asm/spinlock.h:265:
+		"	.set	noreorder	# arch_read_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#594: FILE: arch/mips/include/asm/spinlock.h:278:
+		"	.set	noreorder	# arch_read_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#612: FILE: arch/mips/include/asm/spinlock.h:312:
+		"1:	ll	%1, %2		# arch_read_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#621: FILE: arch/mips/include/asm/spinlock.h:321:
+		"	.set	noreorder	# arch_read_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#637: FILE: arch/mips/include/asm/spinlock.h:344:
+		"	.set	noreorder	# arch_write_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#646: FILE: arch/mips/include/asm/spinlock.h:357:
+		"	.set	noreorder	# arch_write_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#661: FILE: arch/mips/include/asm/spinlock.h:385:
+	"				# arch_write_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#677: FILE: arch/mips/include/asm/spinlock.h:399:
+		"	.set	noreorder	# arch_read_trylock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#686: FILE: arch/mips/include/asm/spinlock.h:416:
+		"	.set	noreorder	# arch_read_trylock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#703: FILE: arch/mips/include/asm/spinlock.h:443:
+		"	.set	noreorder	# arch_write_trylock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#712: FILE: arch/mips/include/asm/spinlock.h:460:
+		"	.set	noreorder	# arch_write_trylock	\n"

WARNING:INLINE: plain inline is preferred over __inline__
#736: FILE: arch/parisc/include/asm/spinlock.h:72:
+static  __inline__ void arch_read_lock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#745: FILE: arch/parisc/include/asm/spinlock.h:84:
+static  __inline__ void arch_read_unlock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#754: FILE: arch/parisc/include/asm/spinlock.h:96:
+static __inline__ int arch_read_trylock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#763: FILE: arch/parisc/include/asm/spinlock.h:122:
+static __inline__ void arch_write_lock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#772: FILE: arch/parisc/include/asm/spinlock.h:144:
+static __inline__ void arch_write_unlock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#781: FILE: arch/parisc/include/asm/spinlock.h:152:
+static __inline__ int arch_write_trylock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#790: FILE: arch/parisc/include/asm/spinlock.h:176:
+static __inline__ int arch_read_can_lock(arch_rwlock_t *rw)

WARNING:INLINE: plain inline is preferred over __inline__
#799: FILE: arch/parisc/include/asm/spinlock.h:185:
+static __inline__ int arch_write_can_lock(arch_rwlock_t *rw)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1081: FILE: arch/sh/include/asm/spinlock.h:117:
+		"movli.l	@%1, %0	! arch_read_lock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1097: FILE: arch/sh/include/asm/spinlock.h:135:
+		"movli.l	@%1, %0	! arch_read_unlock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1113: FILE: arch/sh/include/asm/spinlock.h:151:
+		"movli.l	@%1, %0	! arch_write_lock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1126: FILE: arch/sh/include/asm/spinlock.h:166:
+		"mov.l		%1, @%0 ! arch_write_unlock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1141: FILE: arch/sh/include/asm/spinlock.h:179:
+		"movli.l	@%2, %0	! arch_read_trylock	\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1157: FILE: arch/sh/include/asm/spinlock.h:202:
+		"movli.l	@%2, %0	! arch_write_trylock	\n\t"

ERROR:SPACING: space required before the open parenthesis '('
#1255: FILE: arch/sparc/include/asm/spinlock_32.h:177:
+#define arch_write_unlock(rw)	do { (rw)->lock = 0; } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1255: FILE: arch/sparc/include/asm/spinlock_32.h:177:
+#define arch_write_unlock(rw)	do { (rw)->lock = 0; } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1394: FILE: include/linux/rwlock.h:17:
+extern int __lockfunc genericarch_read_trylock(arch_rwlock_t *lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1443: FILE: include/linux/spinlock_up.h:52:
+#define arch_read_lock(lock)		do { (void)(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1444: FILE: include/linux/spinlock_up.h:53:
+#define arch_write_lock(lock)		do { (void)(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1447: FILE: include/linux/spinlock_up.h:56:
+#define arch_read_unlock(lock)		do { (void)(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1448: FILE: include/linux/spinlock_up.h:57:
+#define arch_write_unlock(lock)	do { (void)(lock); } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 38 warnings, 1 checks, 1301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
