CHECK:CAMELCASE: Avoid CamelCase: <min_uV>
#76: FILE: drivers/regulator/core.c:730:
+		int	cmin = constraints->min_uV;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <max_uV>
#77: FILE: drivers/regulator/core.c:731:
+		int	cmax = constraints->max_uV;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/regulator/core.c:742:
+			pr_err("%s: %s '%s' voltage constraints\n",
+				       __func__, "invalid", name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: drivers/regulator/core.c:765:
+			pr_err("%s: %s '%s' voltage constraints\n",
+				       __func__, "unsupportable", name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: drivers/regulator/core.c:773:
+			pr_debug("%s: override '%s' %s, %d -> %d\n",
+				       __func__, name, "min_uV",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: drivers/regulator/core.c:779:
+			pr_debug("%s: override '%s' %s, %d -> %d\n",
+				       __func__, name, "max_uV",

WARNING:TYPO_SPELLING: 'sytem' may be misspelled - perhaps 'system'?
#160: FILE: drivers/regulator/core.c:1333:
+ * zero if this selector code can't be used on this sytem, or a
                                                     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#163: FILE: drivers/regulator/core.c:1336:
+int regulator_list_voltage(struct regulator *regulator, unsigned selector)

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#166: FILE: drivers/regulator/core.c:1339:
+	struct regulator_ops	*ops = rdev->desc->ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: include/linux/regulator/consumer.h:144:
+int regulator_list_voltage(struct regulator *regulator, unsigned selector);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: include/linux/regulator/driver.h:70:
+	int (*list_voltage) (struct regulator_dev *, unsigned selector);

WARNING:SPACING: Unnecessary space before function pointer arguments
#220: FILE: include/linux/regulator/driver.h:70:
+	int (*list_voltage) (struct regulator_dev *, unsigned selector);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct regulator_dev *' should also have an identifier name
#220: FILE: include/linux/regulator/driver.h:70:
+	int (*list_voltage) (struct regulator_dev *, unsigned selector);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: include/linux/regulator/driver.h:140:
+	unsigned n_voltages;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 6 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
