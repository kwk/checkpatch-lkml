WARNING:TYPO_SPELLING: 'wouldnt' may be misspelled - perhaps 'wouldn't'?
#127: 
policy decision is needed on that. I wouldnt mind to convert all 
                                     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#145: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git warnings/simple

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#237: FILE: arch/x86/kernel/io_apic_32.c:1539:
+	printk(KERN_DEBUG "... APIC ICR: %08x\n", (u32)icr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#238: FILE: arch/x86/kernel/io_apic_32.c:1540:
+	printk(KERN_DEBUG "... APIC ICR2: %08x\n", (u32)(icr >> 32));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#406: FILE: drivers/ide/pci/hpt366.c:1290:
 static void __devinit init_hwif_hpt366(ide_hwif_t *hwif)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#442: FILE: drivers/media/dvb/frontends/cx24116.c:204:
+cx24116_writeregN(struct cx24116_state* state, int reg, const u8 *data, u16 len)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#488: FILE: drivers/net/wireless/b43/b43.h:856:
+static inline void __attribute__ ((format(printf, 2, 3)))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'tp' should also have an identifier name
#582: FILE: fs/xfs/xfs_rtalloc.c:1875:
+	xfs_trans_t	*uninitialized_var(tp);	/* transaction pointer */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#595: FILE: include/linux/audit.h:583:
+static inline void __attribute__ ((format(printf, 2, 3)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fops"
#609: FILE: include/linux/fs.h:1600:
+	(((fops != NULL) && try_module_get((fops)->owner) ? (fops) : NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#612: FILE: include/linux/fs.h:1602:
+	do { if (fops != NULL) module_put((fops)->owner); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fops"
#612: FILE: include/linux/fs.h:1602:
+	do { if (fops != NULL) module_put((fops)->owner); } while(0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 2 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
