WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#183: FILE: drivers/net/8139cp.c:1226:
+	printk(KERN_WARNING "%s: Transmit timeout, status %2x %4x %4x %4x\n",

CHECK:CAMELCASE: Avoid CamelCase: <Cmd>
#184: FILE: drivers/net/8139cp.c:1227:
+	       dev->name, cpr8(Cmd), cpr16(CpCmd),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CpCmd>
#184: FILE: drivers/net/8139cp.c:1227:
+	       dev->name, cpr8(Cmd), cpr16(CpCmd),

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#185: FILE: drivers/net/8139cp.c:1228:
+	       cpr16(IntrStatus), cpr16(IntrMask));

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#185: FILE: drivers/net/8139cp.c:1228:
+	       cpr16(IntrStatus), cpr16(IntrMask));

WARNING:RETURN_VOID: void function return statements are not generally useful
#199: FILE: drivers/net/8139cp.c:1242:
+	return;
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#269: FILE: drivers/net/atl1/atl1.h:74:
+/*
+ * atl1_ring_header represents a single, contiguous block of DMA space

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#291: FILE: drivers/net/atl1/atl1.h:91:
+	u16 alloced;		/* 1 if skb allocated */
 	    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: drivers/net/atl1/atl1.h:163:
+				 * successfully w/ single prior collision. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#373: FILE: drivers/net/atl1/atl1.h:165:
+				 * successfully w/ multiple prior collisions. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#378: FILE: drivers/net/atl1/atl1.h:168:
+				 * FIFO underrun, or TRD FIFO underrun */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#382: FILE: drivers/net/atl1/atl1.h:172:
+				 * reflect the meaning in this case.) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#405: FILE: drivers/net/atl1/atl1.h:188:
+				 * packet will be discarded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: drivers/net/atl1/atl1.h:191:
+				 * 8-bit time */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#410: FILE: drivers/net/atl1/atl1.h:193:
+				 * The default is 96-bit time */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#413: FILE: drivers/net/atl1/atl1.h:196:
+				 * is dropped */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#419: FILE: drivers/net/atl1/atl1.h:200:
+				 * burst. Each TPD is 16 bytes long */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#421: FILE: drivers/net/atl1/atl1.h:202:
+				 * burst. Each RFD is 12 bytes long */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: drivers/net/atl1/atl1.h:205:
+				 * in a burst. Each RRD is 16 bytes long */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: drivers/net/atl1/atl1.h:210:
+				 * aligned burst. Each SRAM entry is 8 bytes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: drivers/net/atl1/atl1.h:212:
+				 * packets should add 4 bytes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#439: FILE: drivers/net/atl1/atl1.h:215:
+				 * every 512ns passes. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/net/atl1/atl1_main.c:182:
+static void mdio_write(struct net_device *netdev, int phy_id, int reg_num,
+	int val)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#577: FILE: drivers/net/atl1/atl1_main.c:190:
+/*
+ * atl1_mii_ioctl -

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#599: FILE: drivers/net/atl1/atl1_main.c:212:
+/*
+ * atl1_ioctl -

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#638: FILE: drivers/net/atl1/atl1_main.c:258:
+	ring_header->size = size =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#688: FILE: drivers/net/atl1/atl1_main.c:303:
+		((u8 *) rrd_ring->desc + (rrd_ring->size + offset));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#696: FILE: drivers/net/atl1/atl1_main.c:310:
+		((u8 *) adapter->cmb.cmb +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: drivers/net/atl1/atl1_main.c:354:
+			pci_unmap_page(pdev, buffer_info->dma,
+				buffer_info->length, PCI_DMA_FROMDEVICE);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1107: FILE: drivers/net/atl1/atl1_main.c:377:
+/*
+ * atl1_clean_tx_ring - Free Tx Buffers

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: drivers/net/atl1/atl1_main.c:393:
+			pci_unmap_page(pdev, buffer_info->dma,
+				buffer_info->length, PCI_DMA_TODEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1318: FILE: drivers/net/atl1/atl1_main.c:435:
+	pci_free_consistent(pdev, ring_header->size, ring_header->desc,
+		ring_header->dma);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1346: FILE: drivers/net/atl1/atl1_main.c:488:
+/*
+ * atl1_set_mac - Change the Ethernet Address of the NIC

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1392: FILE: drivers/net/atl1/atl1_main.c:634:
+			dev_info(&adapter->pdev->dev, "%s link is down\n",
+				netdev->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1402: FILE: drivers/net/atl1/atl1_main.c:644:
+/*
+ * atl1_set_multi - Multicast and Promiscuous mode set

CHECK:BRACES: braces {} should be used on all arms of this statement
#1420: FILE: drivers/net/atl1/atl1_main.c:662:
+	if (netdev->flags & IFF_PROMISC)
[...]
+	else if (netdev->flags & IFF_ALLMULTI) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1425: FILE: drivers/net/atl1/atl1_main.c:667:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1442: FILE: drivers/net/atl1/atl1_main.c:684:
+/*
+ * atl1_change_mtu - Change the Maximum Transfer Unit

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_frame < MINIMUM_ETHERNET_FRAME_SIZE'
#1454: FILE: drivers/net/atl1/atl1_main.c:696:
+	if ((max_frame < MINIMUM_ETHERNET_FRAME_SIZE) ||
+	    (max_frame > MAX_JUMBO_FRAME_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_frame > MAX_JUMBO_FRAME_SIZE'
#1454: FILE: drivers/net/atl1/atl1_main.c:696:
+	if ((max_frame < MINIMUM_ETHERNET_FRAME_SIZE) ||
+	    (max_frame > MAX_JUMBO_FRAME_SIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_mtu != new_mtu'
#1466: FILE: drivers/net/atl1/atl1_main.c:708:
+	if ((old_mtu != new_mtu) && netif_running(netdev)) {

CHECK:SPACING: No space is necessary after a cast
#1546: FILE: drivers/net/atl1/atl1_main.c:834:
+		(((u32) hw->min_ifg & MAC_IPG_IFG_MIFG_MASK)

CHECK:SPACING: No space is necessary after a cast
#1548: FILE: drivers/net/atl1/atl1_main.c:836:
+		(((u32) hw->ipgr1 & MAC_IPG_IFG_IPGR1_MASK)

CHECK:SPACING: No space is necessary after a cast
#1550: FILE: drivers/net/atl1/atl1_main.c:838:
+		(((u32) hw->ipgr2 & MAC_IPG_IFG_IPGR2_MASK)

CHECK:SPACING: No space is necessary after a cast
#1562: FILE: drivers/net/atl1/atl1_main.c:844:
+		(((u32) hw->max_retry & MAC_HALF_DUPLX_CTRL_RETRY_MASK)

CHECK:SPACING: No space is necessary after a cast
#1566: FILE: drivers/net/atl1/atl1_main.c:848:
+		(((u32) hw->jam_ipg & MAC_HALF_DUPLX_CTRL_JAMIPG_MASK)

CHECK:SPACING: No space is necessary after a cast
#1579: FILE: drivers/net/atl1/atl1_main.c:865:
+		(((u32) hw->rx_jumbo_lkah & RXQ_JMBO_LKAH_MASK)

CHECK:SPACING: No space is necessary after a cast
#1581: FILE: drivers/net/atl1/atl1_main.c:867:
+		(((u32) hw->rrd_ret_timer & RXQ_RRD_TIMER_MASK)

CHECK:SPACING: No space is necessary after a cast
#1594: FILE: drivers/net/atl1/atl1_main.c:887:
+		(((u32) hw->txf_burst & TXQ_CTRL_TXF_BURST_NUM_MASK)

CHECK:SPACING: No space is necessary after a cast
#1596: FILE: drivers/net/atl1/atl1_main.c:889:
+		(((u32) hw->tpd_fetch_th & TXQ_CTRL_TPD_FETCH_TH_MASK)

CHECK:SPACING: No space is necessary after a cast
#1607: FILE: drivers/net/atl1/atl1_main.c:897:
+		(((u32) hw->tpd_fetch_gap & TX_TPD_MIN_IPG_MASK)

CHECK:SPACING: No space is necessary after a cast
#1620: FILE: drivers/net/atl1/atl1_main.c:904:
+		(((u32) hw->rrd_burst & RXQ_CTRL_RRD_BURST_THRESH_MASK)

CHECK:SPACING: No space is necessary after a cast
#1622: FILE: drivers/net/atl1/atl1_main.c:906:
+		(((u32) hw->rfd_fetch_gap & RXQ_CTRL_RFD_PREF_MIN_IPG_MASK)

CHECK:SPACING: No space is necessary after a cast
#1634: FILE: drivers/net/atl1/atl1_main.c:914:
+		((((u32) hw->dmaw_block) & DMA_CTRL_DMAR_BURST_LEN_MASK)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1660: FILE: drivers/net/atl1/atl1_main.c:962:
+/*
+ * When ACPI resume on some VIA MotherBoard, the Interrupt Disable bit/0x400

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1676: FILE: drivers/net/atl1/atl1_main.c:978:
+/*
+ * atl1_irq_enable - Enable default interrupt generation settings

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1795: FILE: drivers/net/atl1/atl1_main.c:1080:
+/*
+ * atl1_get_stats - Get System Network Statistics

WARNING:LINE_SPACING: Missing a blank line after declarations
#1804: FILE: drivers/net/atl1/atl1_main.c:1089:
+	struct atl1_adapter *adapter = netdev_priv(netdev);
+	return &adapter->net_stats;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1833: FILE: drivers/net/atl1/atl1_main.c:1118:
+static void atl1_clean_alloc_flag(struct atl1_adapter *adapter,
+	struct rx_return_desc *rrd, u16 offset)

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#1838: FILE: drivers/net/atl1/atl1_main.c:1123:
+		rfd_ring->buffer_info[rfd_ring->next_to_clean].alloced = 0;
 		                                               ^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1839: FILE: drivers/net/atl1/atl1_main.c:1124:
+		if (++rfd_ring->next_to_clean == rfd_ring->count) {
+			rfd_ring->next_to_clean = 0;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1848: FILE: drivers/net/atl1/atl1_main.c:1131:
+static void atl1_update_rfd_index(struct atl1_adapter *adapter,
+	struct rx_return_desc *rrd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1861: FILE: drivers/net/atl1/atl1_main.c:1143:
+static void atl1_rx_checksum(struct atl1_adapter *adapter,
+	struct rx_return_desc *rrd, struct sk_buff *skb)

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1872: FILE: drivers/net/atl1/atl1_main.c:1153:
+			dev_printk(KERN_DEBUG, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1873: FILE: drivers/net/atl1/atl1_main.c:1154:
+			dev_printk(KERN_DEBUG, &pdev->dev,
+				"rx checksum error\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1892: FILE: drivers/net/atl1/atl1_main.c:1173:
+	dev_printk(KERN_DEBUG, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1893: FILE: drivers/net/atl1/atl1_main.c:1174:
+	dev_printk(KERN_DEBUG, &pdev->dev,
+		"hw csum wrong, pkt_flag:%x, err_flag:%x\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#1899: FILE: drivers/net/atl1/atl1_main.c:1180:
+	return;
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1902: FILE: drivers/net/atl1/atl1_main.c:1183:
+/*
+ * atl1_alloc_rx_buffers - Replace used receive buffers

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1917: FILE: drivers/net/atl1/atl1_main.c:1198:
+	next_next = rfd_next_to_use = atomic_read(&rfd_ring->next_to_use);

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#1923: FILE: drivers/net/atl1/atl1_main.c:1204:
+	while (!buffer_info->alloced && !next_info->alloced) {
 	                     ^^^^^^^

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#1923: FILE: drivers/net/atl1/atl1_main.c:1204:
+	while (!buffer_info->alloced && !next_info->alloced) {
 	                                            ^^^^^^^

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#1925: FILE: drivers/net/atl1/atl1_main.c:1206:
+			buffer_info->alloced = 1;
 			             ^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1938: FILE: drivers/net/atl1/atl1_main.c:1219:
+		/*
+		 * Make buffer alignment 2 beyond a 16 byte boundary

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#1944: FILE: drivers/net/atl1/atl1_main.c:1225:
+		buffer_info->alloced = 1;
 		             ^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1946: FILE: drivers/net/atl1/atl1_main.c:1227:
+		buffer_info->length = (u16) adapter->rx_buffer_len;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1968: FILE: drivers/net/atl1/atl1_main.c:1249:
+		/*
+		 * Force memory writes to complete before letting h/w

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2007: FILE: drivers/net/atl1/atl1_main.c:1288:
+				dev_printk(KERN_DEBUG, &adapter->pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: drivers/net/atl1/atl1_main.c:1289:
+				dev_printk(KERN_DEBUG, &adapter->pdev->dev,
+					"incomplete RRD DMA transfer\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2013: FILE: drivers/net/atl1/atl1_main.c:1294:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2014: FILE: drivers/net/atl1/atl1_main.c:1295:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,
+				"bad RRD\n");

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#2047: FILE: drivers/net/atl1/atl1_main.c:1328:
+				buffer_info->alloced = 0;
 				             ^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2065: FILE: drivers/net/atl1/atl1_main.c:1346:
+		if (adapter->vlgrp && (rrd->pkt_flg & PACKET_FLAG_VLAN_INS)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2070: FILE: drivers/net/atl1/atl1_main.c:1351:
+		} else

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#2075: FILE: drivers/net/atl1/atl1_main.c:1356:
+		buffer_info->alloced = 0;
 		             ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2100: FILE: drivers/net/atl1/atl1_main.c:1381:
+                        ((rrd_next_to_clean & MB_RRD_CONS_INDX_MASK) <<$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2100: FILE: drivers/net/atl1/atl1_main.c:1381:
+                        ((rrd_next_to_clean & MB_RRD_CONS_INDX_MASK) <<$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2102: FILE: drivers/net/atl1/atl1_main.c:1383:
+                        ((tpd_next_to_use & MB_TPD_PROD_INDX_MASK) <<$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2102: FILE: drivers/net/atl1/atl1_main.c:1383:
+                        ((tpd_next_to_use & MB_TPD_PROD_INDX_MASK) <<$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2143: FILE: drivers/net/atl1/atl1_main.c:1424:
+	if (netif_queue_stopped(adapter->netdev)
+	    && netif_carrier_ok(adapter->netdev))

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2195: FILE: drivers/net/atl1/atl1_main.c:1487:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2196: FILE: drivers/net/atl1/atl1_main.c:1488:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,
 				"payload offset not an even number\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2206: FILE: drivers/net/atl1/atl1_main.c:1503:
+static void atl1_tx_map(struct atl1_adapter *adapter, struct sk_buff *skb,
+	bool tcp_seg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2243: FILE: drivers/net/atl1/atl1_main.c:1557:
+				buffer_info->dma = pci_map_page(adapter->pdev,
+					page, offset, buffer_info->length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2279: FILE: drivers/net/atl1/atl1_main.c:1591:
+			buffer_info->dma = pci_map_page(adapter->pdev,
+				frag->page,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2290: FILE: drivers/net/atl1/atl1_main.c:1605:
+       union tpd_descr *descr)$

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2352: FILE: drivers/net/atl1/atl1_main.c:1710:
+		dev_printk(KERN_DEBUG, &adapter->pdev->dev, "tx locked\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2361: FILE: drivers/net/atl1/atl1_main.c:1718:
+		dev_printk(KERN_DEBUG, &adapter->pdev->dev, "tx busy\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2433: FILE: drivers/net/atl1/atl1_main.c:1794:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2434: FILE: drivers/net/atl1/atl1_main.c:1795:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,
+				"pcie phy link down %x\n", status);

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2447: FILE: drivers/net/atl1/atl1_main.c:1805:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2448: FILE: drivers/net/atl1/atl1_main.c:1806:
+			dev_printk(KERN_DEBUG, &adapter->pdev->dev,
+				"pcie DMA r/w error (status = 0x%x)\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#2479: FILE: drivers/net/atl1/atl1_main.c:1830:
+				dev_printk(KERN_DEBUG, &adapter->pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2480: FILE: drivers/net/atl1/atl1_main.c:1831:
+				dev_printk(KERN_DEBUG, &adapter->pdev->dev,
+					"rx exception, ISR = 0x%x\n", status);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2533: FILE: drivers/net/atl1/atl1_main.c:1858:
+/*
+ * atl1_phy_config - Timer Call-back

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2555: FILE: drivers/net/atl1/atl1_main.c:1876:
+/*
+ * atl1_tx_timeout - Respond to a Tx Hang

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2568: FILE: drivers/net/atl1/atl1_main.c:1887:
+/*
+ * Orphaned vendor comment left intact here:

WARNING:TYPO_SPELLING: 'seemes' may be misspelled - perhaps 'seems'?
#2572: FILE: drivers/net/atl1/atl1_main.c:1891:
+ * with the SPEC. BUT, it seemes that PCIE or DMA
                           ^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2605: FILE: drivers/net/atl1/atl1_main.c:1914:
+               container_of(work, struct atl1_adapter, link_chg_task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2605: FILE: drivers/net/atl1/atl1_main.c:1914:
+               container_of(work, struct atl1_adapter, link_chg_task);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2619: FILE: drivers/net/atl1/atl1_main.c:1923:
+static void atl1_vlan_rx_register(struct net_device *netdev,
+	struct vlan_group *grp)

CHECK:SPACING: No space is necessary after a cast
#2911: FILE: drivers/net/atl1/atl1_main.c:2095:
+	atl1_read_phy_reg(hw, MII_BMSR, (u16 *) & ctrl);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#2911: FILE: drivers/net/atl1/atl1_main.c:2095:
+	atl1_read_phy_reg(hw, MII_BMSR, (u16 *) & ctrl);
 	                                        ^

CHECK:SPACING: No space is necessary after a cast
#2912: FILE: drivers/net/atl1/atl1_main.c:2096:
+	atl1_read_phy_reg(hw, MII_BMSR, (u16 *) & ctrl);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#2912: FILE: drivers/net/atl1/atl1_main.c:2096:
+	atl1_read_phy_reg(hw, MII_BMSR, (u16 *) & ctrl);
 	                                        ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3038: FILE: drivers/net/atl1/atl1_main.c:2201:
 static int __devinit atl1_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3059: FILE: drivers/net/atl1/atl1_main.c:2410:
+		memcpy(adapter->hw.mac_addr, adapter->hw.perm_mac_addr,
+			ETH_ALEN);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#3249: FILE: drivers/net/ehea/ehea_main.c:83:
+u64 ehea_driver_flags = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3254: FILE: drivers/net/ehea/ehea_main.c:88:
 static int __devinit ehea_probe_adapter(struct ibmebus_dev *dev,

WARNING:SPLIT_STRING: quoted string split across lines
#3418: FILE: drivers/net/ehea/ehea_main.c:2363:
+				ehea_error("unregister MR failed - driver"
+					   " inoperable!");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#3437: FILE: drivers/net/ehea/ehea_main.c:2382:
+				ehea_error("register MR failed - driver"
+					   " inoperable!");

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3454: FILE: drivers/net/ehea/ehea_main.c:2399:
+						if (!ret) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3557: FILE: drivers/net/ehea/ehea_qmr.c:34:
 
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3559: FILE: drivers/net/ehea/ehea_qmr.c:36:
+extern u64 ehea_driver_flags;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3560: FILE: drivers/net/ehea/ehea_qmr.c:37:
+extern struct workqueue_struct *ehea_driver_wq;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3561: FILE: drivers/net/ehea/ehea_qmr.c:38:
+extern struct work_struct ehea_rereg_mr_task;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3563: FILE: drivers/net/ehea/ehea_qmr.c:40:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#3571: FILE: drivers/net/ehea/ehea_qmr.c:557:
+int ehea_create_busmap( void )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3571: FILE: drivers/net/ehea/ehea_qmr.c:557:
+int ehea_create_busmap( void )

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3579: FILE: drivers/net/ehea/ehea_qmr.c:565:
+	/*
+	 * Sections are not in ascending order -> Loop over all sections and

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3581: FILE: drivers/net/ehea/ehea_qmr.c:567:
+	 * find the highest PFN to compute the required map size.
+	*/

CHECK:BRACES: braces {} should be used on all arms of this statement
#3601: FILE: drivers/net/ehea/ehea_qmr.c:587:
+		if (pfn_valid(pfn)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3604: FILE: drivers/net/ehea/ehea_qmr.c:590:
+		} else

ERROR:SPACING: space prohibited after that open parenthesis '('
#3611: FILE: drivers/net/ehea/ehea_qmr.c:597:
+void ehea_destroy_busmap( void )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3611: FILE: drivers/net/ehea/ehea_qmr.c:597:
+void ehea_destroy_busmap( void )

CHECK:BRACES: braces {} should be used on all arms of this statement
#3621: FILE: drivers/net/ehea/ehea_qmr.c:607:
+	if (likely(index < ehea_bmap.entries)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3628: FILE: drivers/net/ehea/ehea_qmr.c:614:
+	} else

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#3655: FILE: drivers/net/ehea/ehea_qmr.c:634:
+	pt =  kzalloc(EHEA_MAX_RPAGE * sizeof(u64), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3712: FILE: drivers/net/ehea/ehea_qmr.c:659:
+			      j++) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#3722: FILE: drivers/net/ehea/ehea_qmr.c:669:
+				if ((hret != H_SUCCESS)
+				    && (hret != H_PAGE_REGISTERED)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#3722: FILE: drivers/net/ehea/ehea_qmr.c:669:
+				if ((hret != H_SUCCESS)
+				    && (hret != H_PAGE_REGISTERED)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3723: FILE: drivers/net/ehea/ehea_qmr.c:670:
+				if ((hret != H_SUCCESS)
+				    && (hret != H_PAGE_REGISTERED)) {

CHECK:BIT_MACRO: Prefer using the BIT macro
#3760: FILE: drivers/net/ehea/ehea_qmr.h:40:
+#define EHEA_PAGESIZE          (1UL << EHEA_PAGESHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#3761: FILE: drivers/net/ehea/ehea_qmr.h:41:
+#define EHEA_SECTSIZE          (1UL << 24)

ERROR:SPACING: space prohibited after that open parenthesis '('
#3774: FILE: drivers/net/ehea/ehea_qmr.h:381:
+int ehea_create_busmap( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3774: FILE: drivers/net/ehea/ehea_qmr.h:381:
+int ehea_create_busmap( void );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#3774: FILE: drivers/net/ehea/ehea_qmr.h:381:
+int ehea_create_busmap( void );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space prohibited after that open parenthesis '('
#3775: FILE: drivers/net/ehea/ehea_qmr.h:382:
+void ehea_destroy_busmap( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3775: FILE: drivers/net/ehea/ehea_qmr.h:382:
+void ehea_destroy_busmap( void );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#3775: FILE: drivers/net/ehea/ehea_qmr.h:382:
+void ehea_destroy_busmap( void );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3841: FILE: drivers/net/forcedeth.c:1127:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3845: FILE: drivers/net/forcedeth.c:1131:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3849: FILE: drivers/net/forcedeth.c:1135:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3853: FILE: drivers/net/forcedeth.c:1139:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3857: FILE: drivers/net/forcedeth.c:1143:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3895: FILE: drivers/net/forcedeth.c:1215:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3899: FILE: drivers/net/forcedeth.c:1219:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3904: FILE: drivers/net/forcedeth.c:1224:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3911: FILE: drivers/net/forcedeth.c:1231:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3915: FILE: drivers/net/forcedeth.c:1235:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3919: FILE: drivers/net/forcedeth.c:1239:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3926: FILE: drivers/net/forcedeth.c:1246:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3931: FILE: drivers/net/forcedeth.c:1251:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3935: FILE: drivers/net/forcedeth.c:1255:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3939: FILE: drivers/net/forcedeth.c:1259:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3944: FILE: drivers/net/forcedeth.c:1264:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3951: FILE: drivers/net/forcedeth.c:1271:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3955: FILE: drivers/net/forcedeth.c:1275:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3959: FILE: drivers/net/forcedeth.c:1279:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3966: FILE: drivers/net/forcedeth.c:1286:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3970: FILE: drivers/net/forcedeth.c:1290:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3974: FILE: drivers/net/forcedeth.c:1294:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3978: FILE: drivers/net/forcedeth.c:1298:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3982: FILE: drivers/net/forcedeth.c:1302:
+			printk(KERN_INFO "%s: phy init failed.\n", pci_name(np->pci_dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bp->speed != phydev->speed'
#4141: FILE: drivers/net/macb.c:142:
+		if ((bp->speed != phydev->speed) ||
+		    (bp->duplex != phydev->duplex)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bp->duplex != phydev->duplex'
#4141: FILE: drivers/net/macb.c:142:
+		if ((bp->speed != phydev->speed) ||
+		    (bp->duplex != phydev->duplex)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#4164: FILE: drivers/net/macb.c:163:
+		if (phydev->link)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4166: FILE: drivers/net/macb.c:165:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4184: FILE: drivers/net/macb.c:178:
+			printk(KERN_INFO "%s: link up (%d/%s)\n",

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4186: FILE: drivers/net/macb.c:180:
+			       DUPLEX_FULL == phydev->duplex ? "Full":"Half");
 			                                             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4186: FILE: drivers/net/macb.c:180:
+			       DUPLEX_FULL == phydev->duplex ? "Full":"Half");

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4188: FILE: drivers/net/macb.c:182:
+			printk(KERN_INFO "%s: link down\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4220: FILE: drivers/net/macb.c:203:
+		printk (KERN_ERR "%s: no PHY found\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4220: FILE: drivers/net/macb.c:203:
+		printk (KERN_ERR "%s: no PHY found\n", dev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4230: FILE: drivers/net/macb.c:213:
+		phydev = phy_connect(dev, phydev->dev.bus_id,
+			&macb_handle_link_change, 0, PHY_INTERFACE_MODE_RMII);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4233: FILE: drivers/net/macb.c:216:
+		phydev = phy_connect(dev, phydev->dev.bus_id,
+			&macb_handle_link_change, 0, PHY_INTERFACE_MODE_MII);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4237: FILE: drivers/net/macb.c:220:
+		printk(KERN_ERR "%s: Could not attach to PHY\n", dev->name);

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#4266: FILE: drivers/net/macb.c:242:
+	/* Enable managment port */
 	          ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4292: FILE: drivers/net/macb.c:257:
+	bp->mii_bus.irq = kmalloc(sizeof(int)*PHY_MAX_ADDR, GFP_KERNEL);
 	                                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4326: FILE: drivers/net/macb.c:271:
+	if (macb_mii_probe(bp->dev) != 0) {
+		goto err_out_unregister_bus;
+	}

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4386: FILE: drivers/net/macb.c:785:
+	macb_writel(bp, NCR, MACB_BIT(RE) | MACB_BIT(TE) | MACB_BIT(MPE));
 	                                             ^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4399: FILE: drivers/net/macb.c:800:
+/*
+ * The hash address register is 64 bits long and takes up two

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4440: FILE: drivers/net/macb.c:841:
+/*
+ * Return the hash index value for the specified address.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4449: FILE: drivers/net/macb.c:850:
+			bitval ^= hash_bit_value(i*6 + j, addr);
 			                          ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4458: FILE: drivers/net/macb.c:859:
+/*
+ * Add multicast addresses to the internal multicast-hash table.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4467: FILE: drivers/net/macb.c:868:
+	mc_filter[0] = mc_filter[1] = 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#4471: FILE: drivers/net/macb.c:872:
+		if (!curr) break;	/* unexpected end of list */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4482: FILE: drivers/net/macb.c:883:
+/*
+ * Enable/Disable promiscuous and multicast modes.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4706: FILE: drivers/net/macb.c:1067:
 static int __devinit macb_probe(struct platform_device *pdev)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4762: FILE: drivers/net/macb.c:1191:
+	if (macb_mii_init(bp) != 0) {
+		goto err_out_unregister_netdev;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4776: FILE: drivers/net/macb.c:1204:
+	printk(KERN_INFO "%s: attached PHY driver [%s] "

WARNING:SPLIT_STRING: quoted string split across lines
#4777: FILE: drivers/net/macb.c:1205:
+	printk(KERN_INFO "%s: attached PHY driver [%s] "
+		"(mii_bus:phy_addr=%s, irq=%d)\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4822: FILE: drivers/net/macb.h:388:
+^Iunsigned int ^I^Ilink;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4823: FILE: drivers/net/macb.h:389:
+^Iunsigned int ^I^Ispeed;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4824: FILE: drivers/net/macb.h:390:
+^Iunsigned int ^I^Iduplex;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4880: FILE: drivers/net/usb/cdc_subset.c:308:
+	USB_DEVICE (0x1286, 0x8001),    // "blob" bootloader

CHECK:SPACING: No space is necessary after a cast
#4881: FILE: drivers/net/usb/cdc_subset.c:309:
+	.driver_info =  (unsigned long) &blob_info,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4922: FILE: drivers/net/wireless/airo.c:1255:
+	printk(type DRV_NAME "(%s): " fmt "\n", name, ##args)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4933: FILE: drivers/net/wireless/airo.c:1934:
+		ai->expires = RUN_AT(3*HZ);
 		                      ^

CHECK:CAMELCASE: Avoid CamelCase: <writeConfigRid>
#4957: FILE: drivers/net/wireless/airo.c:1952:
+		writeConfigRid(ai, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4968: FILE: drivers/net/wireless/airo.c:1962:
+		rc = request_irq(dev->irq, airo_interrupt, IRQF_SHARED,
+			dev->name, dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4971: FILE: drivers/net/wireless/airo.c:1965:
+			airo_print_err(dev->name,
+				"register interrupt %d failed, rc %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5056: FILE: drivers/net/wireless/airo.c:2601:
+		airo_print_err("", "Couldn't get region %x[%x]",
+			(int)mem_start, (int)mem_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5064: FILE: drivers/net/wireless/airo.c:2606:
+		airo_print_err("", "Couldn't get region %x[%x]",
+			(int)aux_start, (int)aux_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5073: FILE: drivers/net/wireless/airo.c:2613:
+		airo_print_err("", "Couldn't map region %x[%x]",
+			(int)mem_start, (int)mem_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5081: FILE: drivers/net/wireless/airo.c:2619:
+		airo_print_err("", "Couldn't map region %x[%x]",
+			(int)aux_start, (int)aux_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5091: FILE: drivers/net/wireless/airo.c:2627:
+		airo_print_err("", "Couldn't alloc_consistent %d",
+			PCI_SHARED_LEN);

WARNING:REPEATED_WORD: Possible repeated word: 'Cmd'
#5245: FILE: drivers/net/wireless/airo.c:3543:
+	Cmd cmd;

CHECK:CAMELCASE: Avoid CamelCase: <Resp>
#5246: FILE: drivers/net/wireless/airo.c:3544:
+	Resp rsp;

WARNING:SPLIT_STRING: quoted string split across lines
#5268: FILE: drivers/net/wireless/airo.c:3573:
+		airo_print_err(ai->dev->name, "Bad MAC enable reason=%x, "
+			"rid=%x, offset=%d", rsp.rsp0, rsp.rsp1, rsp.rsp2);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#5369: FILE: drivers/net/wireless/airo.c:5287:
+	if (perm) enable_MAC(ai, lock);

CHECK:CAMELCASE: Avoid CamelCase: <penableRSN>
#5580: FILE: drivers/net/wireless/libertas/cmd.c:243:
+			penableRSN->enable = cpu_to_le16(cmd_disable_rsn);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#5597: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5740: FILE: drivers/net/wireless/zd1211rw/zd_chip.c:68:
+	i += scnprint_mac_oui(chip, buffer+i, size-i);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5740: FILE: drivers/net/wireless/zd1211rw/zd_chip.c:68:
+	i += scnprint_mac_oui(chip, buffer+i, size-i);
 	                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5991: FILE: drivers/net/wireless/zd1211rw/zd_mac.c:125:
+		 * recognise. */

WARNING:SPLIT_STRING: quoted string split across lines
#5993: FILE: drivers/net/wireless/zd1211rw/zd_mac.c:127:
+		dev_warn(zd_mac_dev(mac),  "Unrecognised regulatory domain: "
+			"%#04x. Defaulting to FCC.\n", default_regdomain);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip' - possible side-effects?
#6104: FILE: drivers/net/wireless/zd1211rw/zd_rf_al2230.c:24:
+#define IS_AL2230S(chip) ((chip)->al2230s_bit || (chip)->rf.type == AL2230S_RF)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6211: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:200:
+static char *get_fw_name(struct zd_usb *usb, char *buffer, size_t size,
 	               const char* postfix)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6223: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:210:
+static int handle_version_mismatch(struct zd_usb *usb,
 	const struct firmware *ub_fw)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6283: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:301:
+ * not require firmware to be loaded. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6290: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:308:
+	r = usb_control_msg(udev, usb_rcvctrlpipe(udev, 0),
+		USB_REQ_FIRMWARE_READ_DATA, USB_DIR_IN | 0x40, addr, 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6323: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:960:
+		dev_err(zd_usb_dev(usb),
+		       "couldn't load firmware. Error number %d\n", r);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6330: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:967:
+		dev_dbg_f(zd_usb_dev(usb),
+			"couldn't reset configuration. Error number %d\n", r);

ERROR:CODE_INDENT: code indent should use tabs where possible
#6337: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:974:
+^I^I         "couldn't initialize mac. Error number %d\n", r);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6337: FILE: drivers/net/wireless/zd1211rw/zd_usb.c:974:
+		dev_dbg_f(zd_usb_dev(usb),
+		         "couldn't initialize mac. Error number %d\n", r);

WARNING:LINE_SPACING: Missing a blank line after declarations
#6474: FILE: drivers/s390/net/qeth_main.c:2269:
+	struct page *page = virt_to_page(element->addr);
+	if (*pfrag == 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6477: FILE: drivers/s390/net/qeth_main.c:2272:
+		 * happy. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6484: FILE: drivers/s390/net/qeth_main.c:2279:
+			memcpy(skb_put(*pskb, data_len), element->addr + offset,
+				data_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6489: FILE: drivers/s390/net/qeth_main.c:2284:
+			skb_fill_page_desc(*pskb, *pfrag, page, offset + 64,
+				data_len - 64);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6533: FILE: drivers/s390/net/qeth_main.c:2328:
+	entry = list_entry(card->qdio.in_buf_pool.entry_list.next,
+			struct qeth_buffer_pool_entry, list);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#6536: FILE: drivers/s390/net/qeth_main.c:2331:
+			page = alloc_page(GFP_ATOMIC|GFP_DMA);
 			                            ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#6539: FILE: drivers/s390/net/qeth_main.c:2334:
+				return NULL;
+			} else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb_len >= card->options.rx_sg_cb'
#6572: FILE: drivers/s390/net/qeth_main.c:2383:
+	if ((skb_len >= card->options.rx_sg_cb) &&
+	    (!(card->info.type == QETH_CARD_TYPE_OSN)) &&
+	    (!atomic_read(&card->force_alloc_skb))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#6579: FILE: drivers/s390/net/qeth_main.c:2390:
+				if (!(skb = qeth_get_skb(skb_len +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#6584: FILE: drivers/s390/net/qeth_main.c:2395:
+				if (!(skb = qeth_get_skb(skb_len +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6608: FILE: drivers/s390/net/qeth_main.c:2413:
+				if (qeth_create_skb_frag(element, &skb, offset,
+				    &frag, data_len))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6612: FILE: drivers/s390/net/qeth_main.c:2417:
+				memcpy(skb_put(skb, data_len), data_ptr,
+					data_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6688: FILE: drivers/s390/net/qeth_main.c:2797:
+			if (qeth_init_input_buffer(card,
+				&queue->bufs[i % QDIO_MAX_BUFFERS_PER_Q])) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#6690: FILE: drivers/s390/net/qeth_main.c:2799:
+				break;
+			} else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6697: FILE: drivers/s390/net/qeth_main.c:2806:
+			/* we are in memory shortage so we switch back to
+			   traditional skb allocation and drop packages */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6697: FILE: drivers/s390/net/qeth_main.c:2806:
+			   traditional skb allocation and drop packages */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6699: FILE: drivers/s390/net/qeth_main.c:2808:
+				printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#6704: FILE: drivers/s390/net/qeth_main.c:2813:
+				printk(KERN_WARNING "qeth: switch to sg\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000405344.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 132 warnings, 104 checks, 6193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000405344.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
