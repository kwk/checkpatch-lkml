WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: arch/i386/boot/pm.c:1:
+/* -*- linux-c -*- ------------------------------------------------------- *

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#84: FILE: arch/i386/boot/pm.c:9:
+ * ----------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: arch/i386/boot/pm.c:12:
+ * arch/i386/boot/pm.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: arch/i386/boot/pm.c:44:
+	/* Note: rely on the compile-time option here rather than
+	   the LOADED_HIGH flag.  The Qemu kernel loader unconditionally

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: arch/i386/boot/pm.c:45:
+	   sets the loadflags to zero. */

WARNING:TYPO_SPELLING: 'seconday' may be misspelled - perhaps 'secondary'?
#158: FILE: arch/i386/boot/pm.c:83:
+	outb(0xff, 0xa1);	/* Mask all interrupts on the seconday PIC */
 	                 	                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
                             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
+	(((u64)(base & 0xff000000) << 32) |	\
+	 ((u64)flags << 40) |			\
+	 ((u64)(limit & 0x00ff0000) << 32) |	\
+	 ((u64)(base & 0x00ffff00) << 16) |	\
+	 ((u64)(limit & 0x0000ffff)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
+	(((u64)(base & 0xff000000) << 32) |	\
+	 ((u64)flags << 40) |			\
+	 ((u64)(limit & 0x00ff0000) << 32) |	\
+	 ((u64)(base & 0x00ffff00) << 16) |	\
+	 ((u64)(limit & 0x0000ffff)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
+	(((u64)(base & 0xff000000) << 32) |	\
+	 ((u64)flags << 40) |			\
+	 ((u64)(limit & 0x00ff0000) << 32) |	\
+	 ((u64)(base & 0x00ffff00) << 16) |	\
+	 ((u64)(limit & 0x0000ffff)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'limit' - possible side-effects?
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
+	(((u64)(base & 0xff000000) << 32) |	\
+	 ((u64)flags << 40) |			\
+	 ((u64)(limit & 0x00ff0000) << 32) |	\
+	 ((u64)(base & 0x00ffff00) << 16) |	\
+	 ((u64)(limit & 0x0000ffff)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'limit' may be better as '(limit)' to avoid precedence issues
#178: FILE: arch/i386/boot/pm.c:103:
+#define GDT_ENTRY(flags,base,limit)		\
+	(((u64)(base & 0xff000000) << 32) |	\
+	 ((u64)flags << 40) |			\
+	 ((u64)(limit & 0x00ff0000) << 32) |	\
+	 ((u64)(base & 0x00ffff00) << 16) |	\
+	 ((u64)(limit & 0x0000ffff)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#188: FILE: arch/i386/boot/pm.c:113:
+} __attribute__((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: arch/i386/boot/pm.c:118:
+	/* There are machines which are known to not boot with the GDT
+	   being 8-byte unaligned.  Intel recommends 16 byte alignment. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: arch/i386/boot/pm.c:118:
+	   being 8-byte unaligned.  Intel recommends 16 byte alignment. */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#194: FILE: arch/i386/boot/pm.c:119:
+	static const u64 boot_gdt[] __attribute__((aligned(16))) = {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#202: FILE: arch/i386/boot/pm.c:127:
+	gdt.len = sizeof(boot_gdt)-1;
 	                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: arch/i386/boot/pm.c:139:
+	static const struct gdt_ptr null_idt = {0, 0};
+	asm volatile("lidtl %0" : : "m" (null_idt));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#252: FILE: arch/i386/boot/pmjump.S:1:
+/* ----------------------------------------------------------------------- *

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#263: FILE: arch/i386/boot/pmjump.S:12:
+ * arch/i386/boot/pmjump.S

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 14 warnings, 6 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
