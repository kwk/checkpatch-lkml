WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Add the initcall tracer. It will be able to trace the initcalls which follow SMP initialization.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: kernel/trace/trace_initcall.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#78: FILE: kernel/trace/trace_initcall.c:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: kernel/trace/trace_initcall.c:32:
+	int cpu;
+	initcall_trace = tr;

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#116: FILE: kernel/trace/trace_initcall.c:55:
+	if (iter->ent->type == TRACE_INITCALL)
+		ret = trace_seq_printf(s, "%pF called from %i "
+				       "returned %d after %Ld msecs\n",
+				       it->func, it->caller, it->result,
+				       it->duration);

WARNING:SPLIT_STRING: quoted string split across lines
#118: FILE: kernel/trace/trace_initcall.c:57:
+		ret = trace_seq_printf(s, "%pF called from %i "
+				       "returned %d after %Ld msecs\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#118: FILE: kernel/trace/trace_initcall.c:57:
+				       "returned %d after %Ld msecs\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#127: FILE: kernel/trace/trace_initcall.c:66:
+struct tracer initcall_tracer __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: kernel/trace/trace_initcall.c:74:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/ftrace.h:218:
+^Iunsigned long long ^Iduration;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/ftrace.h:222:
+extern void trace_initcall(struct initcall_trace *it);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/linux/ftrace.h:223:
+extern void start_initcall_trace(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#230: FILE: include/linux/ftrace.h:229:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 5 checks, 157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
