WARNING:TYPO_SPELLING: 'Trasport' may be misspelled - perhaps 'Transport'?
#22: 
Subject: SCTP Trasport Loadbalancing Support for IPVS
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Please some review this code and let me know your comments. I am re-posting this

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#99: FILE: net/netfilter/ipvs/Kconfig:107:
+config  IP_VS_PROTO_SCTP
+	bool "SCTP load balancing support"
+	select LIBCRC32C
+	---help---
+	  This option enables support for load balancing SCTP transport
+	  protocol. Say Y if unsure.
+
 comment "IPVS scheduler"
 

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: net/netfilter/ipvs/ip_vs_core.c:597:
+	if (IPPROTO_TCP == ciph->protocol || IPPROTO_UDP == ciph->protocol ||
+			IPPROTO_SCTP == ciph->protocol) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#150: FILE: net/netfilter/ipvs/ip_vs_core.c:597:
+			IPPROTO_SCTP == ciph->protocol) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: net/netfilter/ipvs/ip_vs_core.c:639:
+	if (IPPROTO_TCP == ciph->nexthdr || IPPROTO_UDP == ciph->nexthdr ||
+			IPPROTO_SCTP == ciph->nexthdr) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#162: FILE: net/netfilter/ipvs/ip_vs_core.c:639:
+			IPPROTO_SCTP == ciph->nexthdr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: net/netfilter/ipvs/ip_vs_core.c:688:
+	if (IPPROTO_TCP == protocol || IPPROTO_UDP == protocol ||
+			IPPROTO_SCTP == protocol)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#172: FILE: net/netfilter/ipvs/ip_vs_core.c:688:
+			IPPROTO_SCTP == protocol)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#181: FILE: net/netfilter/ipvs/ip_vs_core.c:867:
+/*
+ * Check if sctp chunc is ABORT chunk

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: net/netfilter/ipvs/ip_vs_core.c:872:
+	sctp_chunkhdr_t *sch, schunk;
+	sch = skb_header_pointer(skb, nh_len + sizeof(sctp_sctphdr_t),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: net/netfilter/ipvs/ip_vs_core.c:873:
+	sch = skb_header_pointer(skb, nh_len + sizeof(sctp_sctphdr_t),
+			sizeof(schunk), &schunk);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sch"
#188: FILE: net/netfilter/ipvs/ip_vs_core.c:874:
+	if (sch == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: net/netfilter/ipvs/ip_vs_core.c:1040:
+				if ((iph.protocol != IPPROTO_TCP &&
+					iph.protocol != IPPROTO_SCTP)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#228: FILE: net/netfilter/ipvs/ip_vs_core.c:1041:
+					iph.protocol != IPPROTO_SCTP)
+					|| ((iph.protocol == IPPROTO_TCP

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#229: FILE: net/netfilter/ipvs/ip_vs_core.c:1042:
+					|| ((iph.protocol == IPPROTO_TCP
+						&& !is_tcp_reset(skb, iph.len))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#230: FILE: net/netfilter/ipvs/ip_vs_core.c:1043:
+						&& !is_tcp_reset(skb, iph.len))
+					|| (iph.protocol == IPPROTO_SCTP

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#231: FILE: net/netfilter/ipvs/ip_vs_core.c:1044:
+					|| (iph.protocol == IPPROTO_SCTP
+						&& !is_sctp_abort(skb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: net/netfilter/ipvs/ip_vs_core.c:1266:
+	if (IPPROTO_TCP == cih->nexthdr || IPPROTO_UDP == cih->nexthdr ||
+			IPPROTO_SCTP == cih->nexthdr)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#242: FILE: net/netfilter/ipvs/ip_vs_core.c:1266:
+			IPPROTO_SCTP == cih->nexthdr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: net/netfilter/ipvs/ip_vs_core.c:1390:
+	if (af == AF_INET && (ip_vs_sync_state & IP_VS_STATE_MASTER) &&
+			cp->protocol == IPPROTO_SCTP) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cp->state == IP_VS_SCTP_S_CLOSED'
#252: FILE: net/netfilter/ipvs/ip_vs_core.c:1391:
+		if ((cp->state == IP_VS_SCTP_S_ESTABLISHED &&
+			(atomic_read(&cp->in_pkts) %
+			 sysctl_ip_vs_sync_threshold[1]
+			 == sysctl_ip_vs_sync_threshold[0])) ||
+				(cp->old_state != cp->state &&
+				 ((cp->state == IP_VS_SCTP_S_CLOSED) ||
+				  (cp->state == IP_VS_SCTP_S_SHUT_ACK_CLI) ||
+				  (cp->state == IP_VS_SCTP_S_SHUT_ACK_SER)))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cp->state == IP_VS_SCTP_S_SHUT_ACK_CLI'
#252: FILE: net/netfilter/ipvs/ip_vs_core.c:1391:
+		if ((cp->state == IP_VS_SCTP_S_ESTABLISHED &&
+			(atomic_read(&cp->in_pkts) %
+			 sysctl_ip_vs_sync_threshold[1]
+			 == sysctl_ip_vs_sync_threshold[0])) ||
+				(cp->old_state != cp->state &&
+				 ((cp->state == IP_VS_SCTP_S_CLOSED) ||
+				  (cp->state == IP_VS_SCTP_S_SHUT_ACK_CLI) ||
+				  (cp->state == IP_VS_SCTP_S_SHUT_ACK_SER)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cp->state == IP_VS_SCTP_S_SHUT_ACK_SER'
#252: FILE: net/netfilter/ipvs/ip_vs_core.c:1391:
+		if ((cp->state == IP_VS_SCTP_S_ESTABLISHED &&
+			(atomic_read(&cp->in_pkts) %
+			 sysctl_ip_vs_sync_threshold[1]
+			 == sysctl_ip_vs_sync_threshold[0])) ||
+				(cp->old_state != cp->state &&
+				 ((cp->state == IP_VS_SCTP_S_CLOSED) ||
+				  (cp->state == IP_VS_SCTP_S_SHUT_ACK_CLI) ||
+				  (cp->state == IP_VS_SCTP_S_SHUT_ACK_SER)))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: net/netfilter/ipvs/ip_vs_core.c:1392:
+		if ((cp->state == IP_VS_SCTP_S_ESTABLISHED &&
+			(atomic_read(&cp->in_pkts) %

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: net/netfilter/ipvs/ip_vs_ctl.c:2133:
+	if (usvc.protocol != IPPROTO_TCP && usvc.protocol != IPPROTO_UDP &&
+			usvc.protocol != IPPROTO_SCTP) {

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#307: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#312: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:11:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pptr"
#333: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:22:
+	if (pptr == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pptr"
#357: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:46:
+	if (pptr == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh"
#383: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:72:
+	if (sh == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:75:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sch"
#389: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:78:
+	if (sch == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sch->type == SCTP_CID_INIT'
#392: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:81:
+	if ((sch->type == SCTP_CID_INIT) &&
+	    (svc = ip_vs_service_get(af, skb->mark, iph.protocol,
+				     &iph.daddr, sh->dest))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:81:
+	if ((sch->type == SCTP_CID_INIT) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#397: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:86:
+			/*
+			 * It seems that we are very loaded.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#405: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:94:
+		/*
+		 * Let the virtual server select a real server for the

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cp->app"
#438: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:127:
+	if (unlikely(cp->app != NULL)) {

CHECK:SPACING: No space is necessary after a cast
#448: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:137:
+	sctph = (void *) skb_network_header(skb) + sctphoff;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#453: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:142:
+	    sctp_start_cksum((u8 *) sctph, skb_headlen(skb) - sctphoff);

CHECK:SPACING: No space is necessary after a cast
#456: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:145:
+		    sctp_update_cksum((u8 *) skb->data, skb_headlen(skb),

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#468: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:157:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cp->app"
#484: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:173:
+	if (unlikely(cp->app != NULL)) {

CHECK:SPACING: No space is necessary after a cast
#494: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:183:
+	sctph = (void *) skb_network_header(skb) + sctphoff;

CHECK:SPACING: No space is necessary after a cast
#499: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:188:
+	    sctp_start_cksum((u8 *) sctph, skb_headlen(skb) - sctphoff);

CHECK:SPACING: No space is necessary after a cast
#502: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:191:
+		    sctp_update_cksum((u8 *) skb->data, skb_headlen(skb),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh"
#528: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:217:
+	if (sh == NULL)

CHECK:SPACING: No space is necessary after a cast
#533: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:222:
+	tmp = sctp_start_cksum((__u8 *) sh, skb_headlen(skb));

CHECK:SPACING: No space is necessary after a cast
#536: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:225:
+		    sctp_update_cksum((__u8 *) list->data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:233:
+		IP_VS_DBG_RL_PKT(0, pp, skb, 0,
+				"Failed checksum for");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#553: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:242:
+};
+enum ipvs_sctp_event_t {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:283:
+ sctp_states_table[IP_VS_SCTP_S_LAST][IP_VS_SCTP_EVE_LAST] = {$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#596: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:285:
+	/*
+	 * STATE : IP_VS_SCTP_S_NONE

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#619: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:308:
+	/*
+	 * STATE : IP_VS_SCTP_S_INIT_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#642: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:331:
+	/*
+	 * State : IP_VS_SCTP_S_INIT_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#665: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:354:
+	/*
+	 * State : IP_VS_SCTP_S_INIT_ACK_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#671: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:360:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#679: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:368:
+	 /*
+	  * INIT_ACK has been resent by the client, let us stay is in

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#684: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:373:
+	 /*
+	  * INIT_ACK sent by the server, close the connection

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#688: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:377:
+	 /*
+	  * ECHO by client, it should not happen, close the connection

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#692: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:381:
+	 /*
+	  * ECHO by server, this is what we are expecting, move to ECHO_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#696: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:385:
+	 /*
+	  * COOKIE ACK from client, it should not happen, close the connection

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#700: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:389:
+	 /*
+	  * Unexpected COOKIE ACK from server, staty in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#713: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:402:
+	/*
+	 * State : IP_VS_SCTP_S_INIT_ACK_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#719: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:408:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#727: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:416:
+	 /*
+	  * Unexpected INIT_ACK by the client, let us close the connection

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#731: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:420:
+	 /*
+	  * INIT_ACK resent by the server, let us move to same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#735: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:424:
+	 /*
+	  * Client send the ECHO, this is what we are expecting,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#740: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:429:
+	 /*
+	  * ECHO received from the server, Not sure what to do,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#745: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:434:
+	 /*
+	  * COOKIE ACK from client, let us stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#749: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:438:
+	 /*
+	  * COOKIE ACK from server, hmm... this should not happen, lets close

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#763: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:452:
+	/*
+	 * State : IP_VS_SCTP_S_ECHO_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#769: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:458:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#777: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:466:
+	 /*
+	  * INIT_ACK has been by the client, let us close the connection

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#781: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:470:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#788: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:477:
+	 /*
+	  * Client resent the ECHO, let us stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#792: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:481:
+	 /*
+	  * ECHO received from the server, Not sure what to do,

WARNING:TYPO_SPELLING: 'shoud' may be misspelled - perhaps 'should'?
#797: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:486:
+	  * COOKIE ACK from client, this shoud not happen, let's close the
 	                                 ^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#797: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:486:
+	 /*
+	  * COOKIE ACK from client, this shoud not happen, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#802: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:491:
+	 /*
+	  * COOKIE ACK from server, this is what we are awaiting,lets move to

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#816: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:505:
+	/*
+	 * State : IP_VS_SCTP_S_ECHO_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#822: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:511:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#830: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:519:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#837: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:526:
+	 /*
+	  * INIT_ACK has been by the server, let us close the connection

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#841: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:530:
+	 /*
+	  * Client sent the ECHO, not sure what to do, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#846: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:535:
+	 /*
+	  * ECHO resent by the server, stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#850: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:539:
+	 /*
+	  * COOKIE ACK from client, this is what we are expecting, let's move

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#855: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:544:
+	 /*
+	  * COOKIE ACK from server, this should not happen, lets close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#869: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:558:
+	/*
+	 * State : IP_VS_SCTP_S_ESTABLISHED

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#875: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:564:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#883: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:572:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#891: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:580:
+	 /*
+	  * Client sent ECHO, Spec(sec 5.2.4) says it may be handled by the

WARNING:TYPO_SPELLING: 'ESTABISHED' may be misspelled - perhaps 'ESTABLISHED'?
#892: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:581:
+	  * peer and peer shall move to the ESTABISHED. if it doesn't handle
 	                                    ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#898: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:587:
+	 /*
+	  * COOKIE ACK from client, not sure what to do stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#905: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:594:
+	 /*
+	  * SHUTDOWN from the client, move to SHUDDOWN_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#909: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:598:
+	 /*
+	  * SHUTDOWN from the server, move to SHUTDOWN_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#913: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:602:
+	 /*
+	  * client sent SHUDTDOWN_ACK, this should not happen, let's close

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#922: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:611:
+	/*
+	 * State : IP_VS_SCTP_S_SHUT_CLI

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#926: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:615:
+	 * We recieved the data chuck, keep the state unchanged. I assume
 	      ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#926: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:615:
+	/*
+	 * We recieved the data chuck, keep the state unchanged. I assume

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#927: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:616:
+	 * that still data chuncks  can be received by both the peers in
 	                   ^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#934: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:623:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#942: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:631:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#950: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:639:
+	 /*
+	  * Client sent ECHO, Spec(sec 5.2.4) says it may be handled by the

WARNING:TYPO_SPELLING: 'ESTABISHED' may be misspelled - perhaps 'ESTABLISHED'?
#951: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:640:
+	  * peer and peer shall move to the ESTABISHED. if it doesn't handle
 	                                    ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#957: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:646:
+	 /*
+	  * COOKIE ACK from client, not sure what to do stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#964: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:653:
+	 /*
+	  * SHUTDOWN resent from the client, move to SHUDDOWN_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#968: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:657:
+	 /*
+	  * SHUTDOWN from the server, move to SHUTDOWN_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#972: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:661:
+	 /*
+	  * client sent SHUDTDOWN_ACK, this should not happen, let's close

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#977: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:666:
+	 /*
+	  * Server sent SHUTDOWN ACK, this is what we are expecting, let's move

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#982: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:671:
+	 /*
+	  * SHUTDOWN COM from client, this should not happen, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#989: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:678:
+	/*
+	 * State : IP_VS_SCTP_S_SHUT_SER

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#993: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:682:
+	 * We recieved the data chuck, keep the state unchanged. I assume
 	      ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#993: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:682:
+	/*
+	 * We recieved the data chuck, keep the state unchanged. I assume

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#994: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:683:
+	 * that still data chuncks  can be received by both the peers in
 	                   ^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1001: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:690:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1009: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:698:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1017: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:706:
+	 /*
+	  * Client sent ECHO, Spec(sec 5.2.4) says it may be handled by the

WARNING:TYPO_SPELLING: 'ESTABISHED' may be misspelled - perhaps 'ESTABLISHED'?
#1018: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:707:
+	  * peer and peer shall move to the ESTABISHED. if it doesn't handle
 	                                    ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1024: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:713:
+	 /*
+	  * COOKIE ACK from client, not sure what to do stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1031: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:720:
+	 /*
+	  * SHUTDOWN resent from the client, move to SHUDDOWN_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1035: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:724:
+	 /*
+	  * SHUTDOWN resent from the server, move to SHUTDOWN_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1039: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:728:
+	 /*
+	  * client sent SHUDTDOWN_ACK, this is what we are expecting, let's

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1044: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:733:
+	 /*
+	  * Server sent SHUTDOWN ACK, this should not happen, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1049: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:738:
+	 /*
+	  * SHUTDOWN COM from client, this should not happen, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1057: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:746:
+	/*
+	 * State : IP_VS_SCTP_S_SHUT_ACK_CLI

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#1061: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:750:
+	 * We recieved the data chuck, keep the state unchanged. I assume
 	      ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1061: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:750:
+	/*
+	 * We recieved the data chuck, keep the state unchanged. I assume

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1062: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:751:
+	 * that still data chuncks  can be received by both the peers in
 	                   ^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1069: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:758:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1077: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:766:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1085: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:774:
+	 /*
+	  * Client sent ECHO, Spec(sec 5.2.4) says it may be handled by the

WARNING:TYPO_SPELLING: 'ESTABISHED' may be misspelled - perhaps 'ESTABLISHED'?
#1086: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:775:
+	  * peer and peer shall move to the ESTABISHED. if it doesn't handle
 	                                    ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1092: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:781:
+	 /*
+	  * COOKIE ACK from client, not sure what to do stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1099: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:788:
+	 /*
+	  * SHUTDOWN sent from the client, move to SHUDDOWN_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1103: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:792:
+	 /*
+	  * SHUTDOWN sent from the server, move to SHUTDOWN_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1107: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:796:
+	 /*
+	  * client resent SHUDTDOWN_ACK, let's stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1111: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:800:
+	 /*
+	  * Server sent SHUTDOWN ACK, this should not happen, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1116: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:805:
+	 /*
+	  * SHUTDOWN COM from client, this should not happen, let's close the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1121: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:810:
+	 /*
+	  * SHUTDOWN COMPLETE from server this is what we are expecting.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1127: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:816:
+	/*
+	 * State : IP_VS_SCTP_S_SHUT_ACK_SER

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#1131: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:820:
+	 * We recieved the data chuck, keep the state unchanged. I assume
 	      ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1131: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:820:
+	/*
+	 * We recieved the data chuck, keep the state unchanged. I assume

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1132: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:821:
+	 * that still data chuncks  can be received by both the peers in
 	                   ^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1139: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:828:
+	 /*
+	  * We have got an INIT from client. From the spec.“Upon receipt of

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1147: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:836:
+	 /*
+	  * INIT_ACK sent by the server, Unexpected INIT ACK, spec says,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1155: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:844:
+	 /*
+	  * Client sent ECHO, Spec(sec 5.2.4) says it may be handled by the

WARNING:TYPO_SPELLING: 'ESTABISHED' may be misspelled - perhaps 'ESTABLISHED'?
#1156: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:845:
+	  * peer and peer shall move to the ESTABISHED. if it doesn't handle
 	                                    ^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1162: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:851:
+	 /*
+	  * COOKIE ACK from client, not sure what to do stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1169: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:858:
+	 /*
+	  * SHUTDOWN sent from the client, move to SHUDDOWN_CLI

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1173: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:862:
+	 /*
+	  * SHUTDOWN sent from the server, move to SHUTDOWN_SER

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1177: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:866:
+	 /*
+	  * client sent SHUDTDOWN_ACK, this should not happen let's close

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1182: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:871:
+	 /*
+	  * Server resent SHUTDOWN ACK, stay in the same state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1186: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:875:
+	 /*
+	  * SHUTDOWN COM from client, this what we are expecting, let's close

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1191: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:880:
+	 /*
+	  * SHUTDOWN COMPLETE from server this should not happen.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1196: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:885:
+	/*
+	 * State : IP_VS_SCTP_S_CLOSED

WARNING:TABSTOP: Statements should start on a tabstop
#1216: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:905:
+	 }

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1220: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:909:
+/*
+ *      Timeout table[state]

WARNING:TYPO_SPELLING: 'ESTABISHED' may be misspelled - perhaps 'ESTABLISHED'?
#1247: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:936:
+	[IP_VS_SCTP_S_ESTABLISHED]  =    "ESTABISHED",
 	                                  ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1256: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:945:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1267: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:956:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1268: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:957:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1269: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:958:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1274: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:963:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1281: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:970:
+set_sctp_state(struct ip_vs_protocol *pp, struct ip_vs_conn *cp,
+		int direction, const struct sk_buff *skb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:984:
+	sch = skb_header_pointer(skb, ihl + sizeof(sctp_sctphdr_t),
+				sizeof(_sctpch), &_sctpch);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sch"
#1296: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:985:
+	if (sch == NULL)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1301: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:990:
+	/*
+	 * Section 3: Multiple chunks can be bundled into one SCTP packet

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sch->type == SCTP_CID_COOKIE_ECHO'
#1311: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1000:
+	if ((sch->type == SCTP_CID_COOKIE_ECHO) ||
+			(sch->type == SCTP_CID_COOKIE_ACK)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sch->type == SCTP_CID_COOKIE_ACK'
#1311: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1000:
+	if ((sch->type == SCTP_CID_COOKIE_ECHO) ||
+			(sch->type == SCTP_CID_COOKIE_ACK)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1001:
+	if ((sch->type == SCTP_CID_COOKIE_ECHO) ||
+			(sch->type == SCTP_CID_COOKIE_ACK)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1324: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1013:
+	/*
+	 *  If the direction is IP_VS_DIR_OUTPUT, this event is from server

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1329: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1018:
+	/*
+	 * get next state

WARNING:SPLIT_STRING: quoted string split across lines
#1337: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1026:
+		IP_VS_DBG_BUF(8, "%s %s  %s:%d->"
+				"%s:%d state: %s->%s conn->refcnt:%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'next_state != IP_VS_SCTP_S_ESTABLISHED'
#1349: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1038:
+			if (!(cp->flags & IP_VS_CONN_F_INACTIVE) &&
+				(next_state != IP_VS_SCTP_S_ESTABLISHED)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1350: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1039:
+			if (!(cp->flags & IP_VS_CONN_F_INACTIVE) &&
+				(next_state != IP_VS_SCTP_S_ESTABLISHED)) {

WARNING:TABSTOP: Statements should start on a tabstop
#1365: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1054:
+	 return 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1370: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1059:
+sctp_state_transition(struct ip_vs_conn *cp, int direction,
+		const struct sk_buff *skb, struct ip_vs_protocol *pp)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1382: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1071:
+/*
+ *      Hash table for SCTP application incarnations

CHECK:BIT_MACRO: Prefer using the BIT macro
#1385: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1074:
+#define SCTP_APP_TAB_SIZE        (1 << SCTP_APP_TAB_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPLIT_STRING: quoted string split across lines
#1449: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1138:
+			IP_VS_DBG_BUF(9, "%s: Binding conn %s:%u->"
+					"%s:%u to app %s on port %u\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1473: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1162:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1476: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1165:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1477: FILE: net/netfilter/ipvs/ip_vs_proto_sctp.c:1166:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state != IP_VS_SCTP_S_ESTABLISHED'
#1525: FILE: net/netfilter/ipvs/ip_vs_sync.c:445:
+			if (!(cp->flags & IP_VS_CONN_F_INACTIVE) &&
+					(state != IP_VS_SCTP_S_ESTABLISHED)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1526: FILE: net/netfilter/ipvs/ip_vs_sync.c:446:
+			if (!(cp->flags & IP_VS_CONN_F_INACTIVE) &&
+					(state != IP_VS_SCTP_S_ESTABLISHED)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012612.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 128 warnings, 58 checks, 1431 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012612.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
