WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
accounted for at the lowest speed. This results in heavily skewed statistics

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#54: FILE: drivers/cpufreq/cpufreq_stats.c:26:
+#define CPUFREQ_STATDEVICE_ATTR(_name, _mode, _show, _store) \
 static struct freq_attr _attr_##_name = {\
 	.attr = {.name = __stringify(_name), .mode = _mode, }, \
 	.show = _show,\
+	.store = _store,\
 };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: drivers/cpufreq/cpufreq_stats.c:148:
+	int input;
+	if (sscanf(buf, "%d", &input) != 1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#84: FILE: drivers/cpufreq/cpufreq_stats.c:148:
+	if (sscanf(buf, "%d", &input) != 1)
+		return -EINVAL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#114: FILE: drivers/cpufreq/cpufreq_stats.c:330:
+	struct cpufreq_stats *stat;
+	stat = per_cpu(cpufreq_stats_table, cpu);

WARNING:TYPO_SPELLING: 'initalized' may be misspelled - perhaps 'initialized'?
#116: FILE: drivers/cpufreq/cpufreq_stats.c:332:
+	/* Wait until cpu stats is initalized */
 	                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/cpufreq.h:260:
+extern void cpufreq_exit_idle(int cpu, unsigned long ticks);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024047.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 1 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024047.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
