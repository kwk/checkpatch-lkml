WARNING:TYPO_SPELLING: 'HDA' may be misspelled - perhaps 'HAD'?
#80: 
 1 [Intel          ]: HDA-Intel - HDA Intel
                                  ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'HDA' may be misspelled - perhaps 'HAD'?
#81: 
                      HDA Intel at 0xfe7f8000 irq 22
                      ^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#273: FILE: sound/core/rawmidi.c:98:
+	printk(KERN_ERR "rawmidi: about to run input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#275: FILE: sound/core/rawmidi.c:100:
+	printk(KERN_ERR "rawmidi: after running input tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: sound/core/rawmidi.c:155:
+^I        printk(KERN_ERR "rawmidi: about to run output tasklet\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#284: FILE: sound/core/rawmidi.c:155:
+	        printk(KERN_ERR "rawmidi: about to run output tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: sound/core/rawmidi.c:157:
+^I        printk(KERN_ERR "rawmidi: run output tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: sound/core/rawmidi.c:157:
+	        printk(KERN_ERR "rawmidi: run output tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: sound/core/rawmidi.c:159:
+^I        printk(KERN_ERR "rawmidi: about to kill output tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#288: FILE: sound/core/rawmidi.c:159:
+	        printk(KERN_ERR "rawmidi: about to kill output tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#291: FILE: sound/core/rawmidi.c:162:
+		printk(KERN_ERR "rawmidi: killed output tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: sound/core/rawmidi.c:168:
+        printk(KERN_ERR "rawmidi: before input ops trigger\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: sound/core/rawmidi.c:168:
+        printk(KERN_ERR "rawmidi: before input ops trigger\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: sound/core/rawmidi.c:168:
+        printk(KERN_ERR "rawmidi: before input ops trigger\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: sound/core/rawmidi.c:170:
+        printk(KERN_ERR "rawmidi: after input ops trigger\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: sound/core/rawmidi.c:170:
+        printk(KERN_ERR "rawmidi: after input ops trigger\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#300: FILE: sound/core/rawmidi.c:170:
+        printk(KERN_ERR "rawmidi: after input ops trigger\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#302: FILE: sound/core/rawmidi.c:172:
+	if (!up && substream->runtime->event) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: sound/core/rawmidi.c:173:
+^I        printk(KERN_ERR "rawmidi: about to kill input tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#303: FILE: sound/core/rawmidi.c:173:
+	        printk(KERN_ERR "rawmidi: about to kill input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: sound/core/rawmidi.c:175:
+		printk(KERN_ERR "rawmidi: killed input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#314: FILE: sound/core/rawmidi.c:877:
+	printk(KERN_ERR "rawmidi: before receive spinlock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: sound/core/rawmidi.c:879:
+	printk(KERN_ERR "rawmidi: after receive spinlock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#323: FILE: sound/core/rawmidi.c:918:
 	if (result > 0) {
+	  if (runtime->event) {

WARNING:TABSTOP: Statements should start on a tabstop
#326: FILE: sound/core/rawmidi.c:919:
+	  if (runtime->event) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#326: FILE: sound/core/rawmidi.c:919:
+	  if (runtime->event) {
+	    printk(KERN_ERR "rawmidi: about to run receive tasklet\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#326: FILE: sound/core/rawmidi.c:919:
+	  if (runtime->event) {
[...]
 		else if (snd_rawmidi_ready(substream))
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#327: FILE: sound/core/rawmidi.c:920:
+	    printk(KERN_ERR "rawmidi: about to run receive tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: sound/core/rawmidi.c:922:
+	    printk(KERN_ERR "rawmidi: run receive tasklet\n");

WARNING:TABSTOP: Statements should start on a tabstop
#330: FILE: sound/core/rawmidi.c:923:
+	  }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#334: FILE: sound/core/rawmidi.c:927:
+	printk(KERN_ERR "rawmidi: before receive spin unlock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#336: FILE: sound/core/rawmidi.c:929:
+	printk(KERN_ERR "rawmidi: after receive spin unlock\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#346: FILE: sound/core/seq/seq_midi.c:83:
+	printk(KERN_ERR "seq: snd_midi_input_event called\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#355: FILE: sound/core/seq/seq_midi.c:93:
 	while (runtime->avail > 0) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: sound/core/seq/seq_midi.c:94:
+^I        printk(KERN_ERR "seq: seq_midi_input_event loop begin\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#356: FILE: sound/core/seq/seq_midi.c:94:
+	        printk(KERN_ERR "seq: seq_midi_input_event loop begin\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#366: FILE: sound/core/seq/seq_midi.c:124:
+	printk(KERN_ERR "seq: snd_midi_input_event exiting\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: sound/core/rawmidi.c:154:
+^I        printk(KERN_ERR "rawmidi: about to kill output tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#377: FILE: sound/core/rawmidi.c:154:
+	        printk(KERN_ERR "rawmidi: about to kill output tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#380: FILE: sound/core/rawmidi.c:157:
+		printk(KERN_ERR "rawmidi: killed output tasklet\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#389: FILE: sound/core/rawmidi.c:165:
+	if (!up && substream->runtime->event) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: sound/core/rawmidi.c:166:
+^I        printk(KERN_ERR "rawmidi: about to kill input tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#390: FILE: sound/core/rawmidi.c:166:
+	        printk(KERN_ERR "rawmidi: about to kill input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#392: FILE: sound/core/rawmidi.c:168:
+		printk(KERN_ERR "rawmidi: killed input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#401: FILE: sound/core/rawmidi.c:870:
+	printk(KERN_ERR "rawmidi: before receive spinlock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#403: FILE: sound/core/rawmidi.c:872:
+	printk(KERN_ERR "rawmidi: after receive spinlock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#410: FILE: sound/core/rawmidi.c:911:
 	if (result > 0) {
+	  if (runtime->event) {

WARNING:TABSTOP: Statements should start on a tabstop
#413: FILE: sound/core/rawmidi.c:912:
+	  if (runtime->event) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#413: FILE: sound/core/rawmidi.c:912:
+	  if (runtime->event) {
+	    printk(KERN_ERR "rawmidi: about to run tasklet\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#413: FILE: sound/core/rawmidi.c:912:
+	  if (runtime->event) {
[...]
 		else if (snd_rawmidi_ready(substream))
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#414: FILE: sound/core/rawmidi.c:913:
+	    printk(KERN_ERR "rawmidi: about to run tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#416: FILE: sound/core/rawmidi.c:915:
+	    printk(KERN_ERR "rawmidi: run tasklet\n");

WARNING:TABSTOP: Statements should start on a tabstop
#417: FILE: sound/core/rawmidi.c:916:
+	  }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#421: FILE: sound/core/rawmidi.c:920:
+	printk(KERN_ERR "rawmidi: before receive spin unlock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#423: FILE: sound/core/rawmidi.c:922:
+	printk(KERN_ERR "rawmidi: after receive spin unlock\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#433: FILE: sound/core/seq/seq_midi.c:83:
+	printk(KERN_ERR "seq: snd_midi_input_event called\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#442: FILE: sound/core/seq/seq_midi.c:93:
 	while (runtime->avail > 0) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: sound/core/seq/seq_midi.c:94:
+^I        printk(KERN_ERR "seq: seq_midi_input_event loop begin\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#443: FILE: sound/core/seq/seq_midi.c:94:
+	        printk(KERN_ERR "seq: seq_midi_input_event loop begin\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#453: FILE: sound/core/seq/seq_midi.c:124:
+	printk(KERN_ERR "seq: snd_midi_input_event exiting\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#465: FILE: sound/core/rawmidi.c:98:
+	printk(KERN_ERR "rawmidi: about to run input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#467: FILE: sound/core/rawmidi.c:100:
+	printk(KERN_ERR "rawmidi: after running input tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: sound/core/rawmidi.c:155:
+^I        printk(KERN_ERR "rawmidi: about to run output tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: sound/core/rawmidi.c:155:
+	        printk(KERN_ERR "rawmidi: about to run output tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: sound/core/rawmidi.c:157:
+^I        printk(KERN_ERR "rawmidi: run output tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#478: FILE: sound/core/rawmidi.c:157:
+	        printk(KERN_ERR "rawmidi: run output tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: sound/core/rawmidi.c:159:
+^I        printk(KERN_ERR "rawmidi: about to kill output tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#480: FILE: sound/core/rawmidi.c:159:
+	        printk(KERN_ERR "rawmidi: about to kill output tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#483: FILE: sound/core/rawmidi.c:162:
+		printk(KERN_ERR "rawmidi: killed output tasklet\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: sound/core/rawmidi.c:168:
+        printk(KERN_ERR "rawmidi: before input ops trigger\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: sound/core/rawmidi.c:168:
+        printk(KERN_ERR "rawmidi: before input ops trigger\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#489: FILE: sound/core/rawmidi.c:168:
+        printk(KERN_ERR "rawmidi: before input ops trigger\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: sound/core/rawmidi.c:170:
+        printk(KERN_ERR "rawmidi: after input ops trigger\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: sound/core/rawmidi.c:170:
+        printk(KERN_ERR "rawmidi: after input ops trigger\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#492: FILE: sound/core/rawmidi.c:170:
+        printk(KERN_ERR "rawmidi: after input ops trigger\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#494: FILE: sound/core/rawmidi.c:172:
+	if (!up && substream->runtime->event) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: sound/core/rawmidi.c:173:
+^I        printk(KERN_ERR "rawmidi: about to kill input tasklet\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#495: FILE: sound/core/rawmidi.c:173:
+	        printk(KERN_ERR "rawmidi: about to kill input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#497: FILE: sound/core/rawmidi.c:175:
+		printk(KERN_ERR "rawmidi: killed input tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#506: FILE: sound/core/rawmidi.c:877:
+	printk(KERN_ERR "rawmidi: before receive spinlock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#508: FILE: sound/core/rawmidi.c:879:
+	printk(KERN_ERR "rawmidi: after receive spinlock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#515: FILE: sound/core/rawmidi.c:918:
 	if (result > 0) {
+	  if (runtime->event) {

WARNING:TABSTOP: Statements should start on a tabstop
#518: FILE: sound/core/rawmidi.c:919:
+	  if (runtime->event) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#518: FILE: sound/core/rawmidi.c:919:
+	  if (runtime->event) {
+	    printk(KERN_ERR "rawmidi: about to run receive tasklet\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#518: FILE: sound/core/rawmidi.c:919:
+	  if (runtime->event) {
[...]
 		else if (snd_rawmidi_ready(substream))
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#519: FILE: sound/core/rawmidi.c:920:
+	    printk(KERN_ERR "rawmidi: about to run receive tasklet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#521: FILE: sound/core/rawmidi.c:922:
+	    printk(KERN_ERR "rawmidi: run receive tasklet\n");

WARNING:TABSTOP: Statements should start on a tabstop
#522: FILE: sound/core/rawmidi.c:923:
+	  }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#526: FILE: sound/core/rawmidi.c:927:
+	printk(KERN_ERR "rawmidi: before receive spin unlock\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#528: FILE: sound/core/rawmidi.c:929:
+	printk(KERN_ERR "rawmidi: after receive spin unlock\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#538: FILE: sound/core/seq/seq_midi.c:83:
+	printk(KERN_ERR "seq: snd_midi_input_event called\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#547: FILE: sound/core/seq/seq_midi.c:93:
 	while (runtime->avail > 0) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: sound/core/seq/seq_midi.c:94:
+^I        printk(KERN_ERR "seq: seq_midi_input_event loop begin\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#548: FILE: sound/core/seq/seq_midi.c:94:
+	        printk(KERN_ERR "seq: seq_midi_input_event loop begin\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#558: FILE: sound/core/seq/seq_midi.c:124:
+	printk(KERN_ERR "seq: snd_midi_input_event exiting\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204357.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 75 warnings, 9 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204357.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
