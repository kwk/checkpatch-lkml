WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
        (task_post_setuid also switches between classes -- and already exists)

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Jan Engelhardt <jengelh@gmx.de>, May 01 2006', should be: 'Jan Engelhardt <jengelh@gmx.de> (, May 01 2006)'
#35: 
Signed-off-by: Jan Engelhardt <jengelh@gmx.de>, May 01 2006

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#52: FILE: include/linux/security.h:1403:
+	int (*task_post_setgid)(gid_t, gid_t, gid_t, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#52: FILE: include/linux/security.h:1403:
+	int (*task_post_setgid)(gid_t, gid_t, gid_t, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#52: FILE: include/linux/security.h:1403:
+	int (*task_post_setgid)(gid_t, gid_t, gid_t, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#52: FILE: include/linux/security.h:1403:
+	int (*task_post_setgid)(gid_t, gid_t, gid_t, unsigned int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: include/linux/security.h:2144:
+static inline int security_task_post_setgid(gid_t real, gid_t effective,
+    gid_t saved, unsigned int type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/linux/security.h:2144:
+    gid_t saved, unsigned int type)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: include/linux/security.h:2810:
+static inline int security_task_post_setgid(gid_t real, gid_t effective,
+    gid_t saved, unsigned int type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: include/linux/security.h:2810:
+    gid_t saved, unsigned int type)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: kernel/sys.c:1402:
+^I                          (gid_t)-1, LSM_SETID_FS);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: security/dummy.c:702:
+static int dummy_task_post_setgid(gid_t real, gid_t effective,
+    gid_t saved, unsigned int type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: security/dummy.c:702:
+    gid_t saved, unsigned int type)$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 3 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
