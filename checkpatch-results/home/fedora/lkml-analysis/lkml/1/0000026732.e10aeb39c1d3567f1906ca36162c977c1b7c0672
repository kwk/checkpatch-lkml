WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#50: FILE: Makefile:4:
+EXTRAVERSION = .3
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#84: FILE: arch/powerpc/kernel/align.c:661:
+	lptr = (unsigned long *) ptr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#87: FILE: arch/powerpc/kernel/align.c:664:
+		sw = elsize-1;
 		           ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#92: FILE: arch/powerpc/kernel/align.c:669:
+				ret |= __put_user(ptr[i^sw], addr + i);
 				                       ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#94: FILE: arch/powerpc/kernel/align.c:671:
+				ret |= __get_user(ptr[i^sw], addr + i);
 				                       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#104: FILE: arch/powerpc/kernel/align.c:677:
+	if (!ret) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#112: FILE: arch/powerpc/kernel/align.c:685:
+		else if (!(flags & ST) && (8 == length))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:BRACES: Unbalanced braces around else statement
#114: FILE: arch/powerpc/kernel/align.c:687:
+	} else

WARNING:TYPO_SPELLING: 'FPR' may be misspelled - perhaps 'FOR'?
#127: FILE: arch/powerpc/kernel/align.c:792:
+		/* Additional register addressing bit (64 VSX vs 32 FPR/GPR) */
 		                                                    ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: arch/powerpc/kernel/align.c:801:
+		/* Vector stores in little-endian mode swap individual
+		   elements, so process them separately */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: arch/powerpc/kernel/align.c:801:
+		   elements, so process them separately */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: arch/x86/include/asm/uv/uv_hub.h:442:
+		uv_write_global_mmr8(uv_cpu_to_pnode(cpu),
+				uv_cpu_hub_info(cpu)->scir.offset, value);

WARNING:TYPO_SPELLING: 'intialization' may be misspelled - perhaps 'initialization'?
#403: FILE: arch/x86/kernel/amd_iommu_init.c:139:
+ * Set to true if ACPI table parsing and hardware intialization went properly
                                                   ^^^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#460: FILE: arch/x86/kernel/apic/x2apic_uv_x.c:639:
+		printk(KERN_DEBUG "UV: cpu %d, apicid 0x%x, pnode %d, nid %d, lcpu %d, blade %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: arch/x86/kernel/apic/x2apic_uv_x.c:640:
+		printk(KERN_DEBUG "UV: cpu %d, apicid 0x%x, pnode %d, nid %d, lcpu %d, blade %d\n",
+			cpu, apicid, pnode, nid, lcpu, blade);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#614: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#619: FILE: arch/x86/lib/msr-smp.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: Unnecessary space before function pointer arguments
#686: FILE: arch/x86/lib/msr-smp.c:68:
+			    void (*msr_func) (void *info))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#733: FILE: arch/x86/lib/msr-smp.c:115:
+/* These "safe" variants are slower and should be used when the target MSR
+   may not actually exist. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#733: FILE: arch/x86/lib/msr-smp.c:115:
+   may not actually exist. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1092: FILE: drivers/acpi/ec.c:919:
+	printk(KERN_DEBUG PREFIX "Detected MSI hardware, enabling workarounds.\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1164: FILE: drivers/ata/pata_hpt3x2n.c:276:
+	iowrite8(ioread8(bmdma+0x70) | 0x32, bmdma+0x70);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1164: FILE: drivers/ata/pata_hpt3x2n.c:276:
+	iowrite8(ioread8(bmdma+0x70) | 0x32, bmdma+0x70);
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1165: FILE: drivers/ata/pata_hpt3x2n.c:277:
+	iowrite8(ioread8(bmdma+0x74) | 0x32, bmdma+0x74);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1165: FILE: drivers/ata/pata_hpt3x2n.c:277:
+	iowrite8(ioread8(bmdma+0x74) | 0x32, bmdma+0x74);
 	                                          ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1561: FILE: drivers/dma/ioat/dma_v3.c:1172:
 int __devinit ioat3_dma_probe(struct ioatdma_device *device, int dca)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1654: FILE: drivers/edac/amd64_edac.c:2652:
+		struct msr *reg = per_cpu_ptr(msrs, cpu);
+		nbe = reg->l & K8_MSR_MCGCTL_NBE;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1686: FILE: drivers/edac/amd64_edac.c:2684:
+	for_each_cpu(cpu, cmask) {
+

CHECK:CAMELCASE: Avoid CamelCase: <K8_NBCTL_CECCEn>
#1722: FILE: drivers/edac/amd64_edac.c:2715:
+	u32 value, mask = K8_NBCTL_CECCEn | K8_NBCTL_UECCEn;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <K8_NBCTL_UECCEn>
#1722: FILE: drivers/edac/amd64_edac.c:2715:
+	u32 value, mask = K8_NBCTL_CECCEn | K8_NBCTL_UECCEn;

WARNING:SPLIT_STRING: quoted string split across lines
#1748: FILE: drivers/edac/amd64_edac.c:2737:
+		amd64_printk(KERN_WARNING, "Error enabling ECC reporting over "
+					   "MCGCTL!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1838: FILE: drivers/edac/amd64_edac.c:2795:
+		amd64_printk(KERN_WARNING, "Error restoring ECC reporting over "
+					   "MCGCTL!\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2038: FILE: drivers/gpu/drm/radeon/radeon_test.c:45:
+	n = ((u32)(rdev->mc.gtt_size - RADEON_IB_POOL_SIZE*64*1024 - RADEON_GPU_PAGE_SIZE -
 	                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2038: FILE: drivers/gpu/drm/radeon/radeon_test.c:45:
+	n = ((u32)(rdev->mc.gtt_size - RADEON_IB_POOL_SIZE*64*1024 - RADEON_GPU_PAGE_SIZE -
 	                                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2098: FILE: drivers/md/md.c:287:
+		 * so destroy it */

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#2566: FILE: drivers/net/wireless/iwlwifi/iwl3945-base.c:565:
+	if ((iwl_queue_space(q) < q->high_mark))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2624: FILE: drivers/net/wireless/orinoco/wext.c:26:
+ * It is called under orinoco_lock so it may not sleep */

WARNING:SPLIT_STRING: quoted string split across lines
#2691: FILE: drivers/s390/block/dasd_diag.c:152:
+				 "The access mode of a DIAG device changed"
+				 " to read-only");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != 4'
#2704: FILE: drivers/s390/block/dasd_diag.c:445:
+	if (rc && (rc != 4)) {

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#2798: FILE: drivers/scsi/st.c:559:
+		mdata->page_order = STp->buffer->reserved_page_order;

CHECK:CAMELCASE: Avoid CamelCase: <STbuffer>
#2813: FILE: drivers/scsi/st.c:3723:
+		order = STbuffer->reserved_page_order;

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#3174: FILE: drivers/xen/xenbus/xenbus_probe.c:864:
+	return (xendev->state < XenbusStateConnected ||

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateUnknown>
#3194: FILE: drivers/xen/xenbus/xenbus_probe.c:889:
+		enum xenbus_state rstate = XenbusStateUnknown;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3195: FILE: drivers/xen/xenbus/xenbus_probe.c:890:
+		enum xenbus_state rstate = XenbusStateUnknown;
+		if (xendev->otherend)

WARNING:SPLIT_STRING: quoted string split across lines
#3200: FILE: drivers/xen/xenbus/xenbus_probe.c:893:
 		printk(KERN_WARNING "XENBUS: Timeout connecting "
+		       "to device: %s (local state %d, remote state %d)\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3230: FILE: drivers/xen/xenbus/xenbus_probe.c:927:
+		if (time_after(jiffies, start + (seconds_waited+5)*HZ)) {
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3230: FILE: drivers/xen/xenbus/xenbus_probe.c:927:
+		if (time_after(jiffies, start + (seconds_waited+5)*HZ)) {
 		                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3232: FILE: drivers/xen/xenbus/xenbus_probe.c:929:
+				printk(KERN_WARNING "XENBUS: Waiting for "

WARNING:SPLIT_STRING: quoted string split across lines
#3233: FILE: drivers/xen/xenbus/xenbus_probe.c:930:
+				printk(KERN_WARNING "XENBUS: Waiting for "
+				       "devices to initialise: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3235: FILE: drivers/xen/xenbus/xenbus_probe.c:932:
+			printk("%us...", 300 - seconds_waited);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3244: FILE: drivers/xen/xenbus/xenbus_probe.c:941:
+		printk("\n");

CHECK:CAMELCASE: Avoid CamelCase: <cifsSesInfo>
#3264: FILE: fs/cifs/connect.c:2293:
+	struct cifsSesInfo *pSesInfo;

CHECK:CAMELCASE: Avoid CamelCase: <pSesInfo>
#3264: FILE: fs/cifs/connect.c:2293:
+	struct cifsSesInfo *pSesInfo;

CHECK:CAMELCASE: Avoid CamelCase: <cifsTconInfo>
#3265: FILE: fs/cifs/connect.c:2294:
+	struct cifsTconInfo *tcon;

CHECK:CAMELCASE: Avoid CamelCase: <srvTcp>
#3266: FILE: fs/cifs/connect.c:2295:
+	struct TCP_Server_Info *srvTcp;

CHECK:CAMELCASE: Avoid CamelCase: <FreeXid>
#3285: FILE: fs/cifs/connect.c:2604:
+			FreeXid(xid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3309: FILE: fs/ext4/ext4.h:1439:
+extern qsize_t *ext4_get_reserved_space(struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3432: FILE: fs/quota/dquot.c:1394:
+static qsize_t *inode_reserved_space(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3435: FILE: fs/quota/dquot.c:1397:
+	 * quota reservation interface */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3436: FILE: fs/quota/dquot.c:1398:
+	BUG_ON(!inode->i_sb->dq_op->get_reserved_space);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3447: FILE: fs/quota/dquot.c:1409:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#3466: FILE: fs/quota/dquot.c:1428:
+	qsize_t ret;
+	spin_lock(&inode->i_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3473: FILE: fs/quota/dquot.c:1435:
+static void inode_incr_space(struct inode *inode, qsize_t number,
+				int reserve)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3715: FILE: fs/quota/dquot.c:1679:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <partitionReferenceNum>
#3801: FILE: fs/udf/super.c:1093:
+	ino.partitionReferenceNum = type1_index;

CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#3806: FILE: fs/udf/super.c:1098:
+		ino.logicalBlockNum = vat_block - map->s_partition_root;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3883: FILE: include/linux/quota.h:317:
+	 * quota code only */

WARNING:SPACING: Unnecessary space before function pointer arguments
#3884: FILE: include/linux/quota.h:318:
+	qsize_t *(*get_reserved_space) (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#3884: FILE: include/linux/quota.h:318:
+	qsize_t *(*get_reserved_space) (struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3964: FILE: include/net/netfilter/ipv6/nf_conntrack_ipv6.h:12:
+extern struct sk_buff *nf_ct_frag6_gather(struct sk_buff *skb, u32 user);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#4016: FILE: kernel/cpu.c:396:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#4206: FILE: kernel/sched.c:7928:
+	synchronize_sched();

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#4282: FILE: kernel/sysctl.c:1611:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4316: FILE: kernel/time/clockevents.c:262:
+				BUG_ON(dev->mode != CLOCK_EVT_MODE_UNUSED);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4377: FILE: mm/internal.h:113:
+extern void munlock_vma_page(struct page *page);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#4493: FILE: mm/vmscan.c:1482:
+		if (inactive_list_is_low(zone, sc, file))
+		    shrink_active_list(nr_to_scan, zone, sc, priority, file);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4547: FILE: net/ipv4/netfilter/nf_defrag_ipv4.c:69:
+		enum ip_defrag_users user = nf_ct_defrag_user(hooknum, skb);
+		if (nf_ct_ipv4_gather_frags(skb, user))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4580: FILE: net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c:204:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4651: FILE: net/ipv6/reassembly.c:146:
+	return (fq->id == arg->id && fq->user == arg->user &&
 			ipv6_addr_equal(&fq->saddr, arg->src) &&

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4694: FILE: net/mac80211/mlme.c:908:
+	/*
+	 * Always handle WMM once after association regardless

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4725: FILE: net/mac80211/util.c:1035:
+		/*
+		 * Upon resume hardware can sometimes be goofy due to

WARNING:TYPO_SPELLING: 'Harware' may be misspelled - perhaps 'Hardware'?
#4732: FILE: net/mac80211/util.c:1042:
+			WARN(local->suspended, "Harware became unavailable "
 			                        ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#4733: FILE: net/mac80211/util.c:1043:
+			WARN(local->suspended, "Harware became unavailable "
+			     "upon resume. This is could be a software issue"

WARNING:TYPO_SPELLING: 'harware' may be misspelled - perhaps 'hardware'?
#4734: FILE: net/mac80211/util.c:1044:
+			     "prior to suspend or a harware issue\n");
 			                            ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#4734: FILE: net/mac80211/util.c:1044:
+			     "upon resume. This is could be a software issue"
+			     "prior to suspend or a harware issue\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#4734: FILE: net/mac80211/util.c:1044:
+			     "upon resume. This is could be a software issue"
+			     "prior to suspend or a harware issue\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4750: FILE: net/wireless/mlme.c:98:
+		/*
+		 * We might be coming here because the driver reported

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000026732.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 48 warnings, 39 checks, 4140 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000026732.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
