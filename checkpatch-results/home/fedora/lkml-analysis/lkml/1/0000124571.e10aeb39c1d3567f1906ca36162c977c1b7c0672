WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/block/drbd/drbd_req.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#54: FILE: drivers/block/drbd/drbd_req.h:2:
+/*
+   drbd_req.h

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: drivers/block/drbd/drbd_req.h:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#89: FILE: drivers/block/drbd/drbd_req.h:37:
+/* The request callbacks will be called in irq context by the IDE drivers,
+   and in Softirqs/Tasklets/BH context by the SCSI drivers,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: drivers/block/drbd/drbd_req.h:39:
+   Try to get the locking right :) */

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#113: FILE: drivers/block/drbd/drbd_req.h:61:
+ *    either sucessfully or with io-error.
              ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#139: FILE: drivers/block/drbd/drbd_req.h:87:
+	 * oh, well... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: drivers/block/drbd/drbd_req.h:152:
+	 * until the corresponding barrier ack comes in */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: drivers/block/drbd/drbd_req.h:159:
+	 * no longer occur. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#220: FILE: drivers/block/drbd/drbd_req.h:168:
+	 * from a request without, regardless of what happens to it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: drivers/block/drbd/drbd_req.h:172:
+	 * basically this means the corresponding P_BARRIER_ACK was received */

CHECK:BIT_MACRO: Prefer using the BIT macro
#239: FILE: drivers/block/drbd/drbd_req.h:187:
+#define RQ_LOCAL_PENDING   (1UL << __RQ_LOCAL_PENDING)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#240: FILE: drivers/block/drbd/drbd_req.h:188:
+#define RQ_LOCAL_COMPLETED (1UL << __RQ_LOCAL_COMPLETED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#241: FILE: drivers/block/drbd/drbd_req.h:189:
+#define RQ_LOCAL_OK        (1UL << __RQ_LOCAL_OK)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#243: FILE: drivers/block/drbd/drbd_req.h:191:
+#define RQ_LOCAL_MASK      ((RQ_LOCAL_OK << 1)-1) /* 0x07 */
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#245: FILE: drivers/block/drbd/drbd_req.h:193:
+#define RQ_NET_PENDING     (1UL << __RQ_NET_PENDING)

CHECK:BIT_MACRO: Prefer using the BIT macro
#246: FILE: drivers/block/drbd/drbd_req.h:194:
+#define RQ_NET_QUEUED      (1UL << __RQ_NET_QUEUED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#247: FILE: drivers/block/drbd/drbd_req.h:195:
+#define RQ_NET_SENT        (1UL << __RQ_NET_SENT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#248: FILE: drivers/block/drbd/drbd_req.h:196:
+#define RQ_NET_DONE        (1UL << __RQ_NET_DONE)

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: drivers/block/drbd/drbd_req.h:197:
+#define RQ_NET_OK          (1UL << __RQ_NET_OK)

CHECK:BIT_MACRO: Prefer using the BIT macro
#250: FILE: drivers/block/drbd/drbd_req.h:198:
+#define RQ_NET_SIS         (1UL << __RQ_NET_SIS)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#253: FILE: drivers/block/drbd/drbd_req.h:201:
+#define RQ_NET_MASK        (((1UL << __RQ_NET_MAX)-1) & ~RQ_LOCAL_MASK)
                                                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#259: FILE: drivers/block/drbd/drbd_req.h:207:
+	BUG_ON(mdev->ee_hash_s == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#261: FILE: drivers/block/drbd/drbd_req.h:209:
+		((unsigned int)(sector>>HT_SHIFT) % mdev->ee_hash_s);
 		                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#268: FILE: drivers/block/drbd/drbd_req.h:216:
+	BUG_ON(mdev->tl_hash_s == 0);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#270: FILE: drivers/block/drbd/drbd_req.h:218:
+		((unsigned int)(sector>>HT_SHIFT) % mdev->tl_hash_s);
 		                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: drivers/block/drbd/drbd_req.h:229:
+ * verify that we actually know about it */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/block/drbd/drbd_req.h:231:
+static inline struct drbd_request *_ar_id_to_req(struct drbd_conf *mdev,
+	u64 id, sector_t sector)

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#289: FILE: drivers/block/drbd/drbd_req.h:237:
+	hlist_for_each_entry(req, n, slot, colision) {
 	                                   ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/block/drbd/drbd_req.h:247:
+static inline struct drbd_request *drbd_req_new(struct drbd_conf *mdev,
+	struct bio *bio_src)

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#315: FILE: drivers/block/drbd/drbd_req.h:263:
+		INIT_HLIST_NODE(&req->colision);
 		                      ^^^^^^^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#333: FILE: drivers/block/drbd/drbd_req.h:281:
+	return !((s1 + (l1>>9) <= s2) || (s1 >= s2 + (l2>>9)));
 	                  ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#333: FILE: drivers/block/drbd/drbd_req.h:281:
+	return !((s1 + (l1>>9) <= s2) || (s1 >= s2 + (l2>>9)));
 	                                                ^

WARNING:TYPO_SPELLING: 'aparently' may be misspelled - perhaps 'apparently'?
#336: FILE: drivers/block/drbd/drbd_req.h:284:
+/* aparently too large to be inlined...
    ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#337: FILE: drivers/block/drbd/drbd_req.h:285:
+ * moved to drbd_req.c */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: drivers/block/drbd/drbd_req.h:286:
+extern void _req_may_be_done(struct drbd_request *req, int error);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: drivers/block/drbd/drbd_req.h:287:
+extern void _req_mod(struct drbd_request *req,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/block/drbd/drbd_req.h:288:
+extern void _req_mod(struct drbd_request *req,
+		enum drbd_req_event what, int error);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/block/drbd/drbd_req.h:292:
+static inline void req_mod(struct drbd_request *req,
+		enum drbd_req_event what, int error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: drivers/block/drbd/drbd_req.h:295:
+	struct drbd_conf *mdev = req->mdev;
+	spin_lock_irq(&mdev->req_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#358: FILE: drivers/block/drbd/drbd_req.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#359: FILE: drivers/block/drbd/drbd_req.c:2:
+/*
+   drbd_req.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#379: FILE: drivers/block/drbd/drbd_req.c:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#392: FILE: drivers/block/drbd/drbd_req.c:35:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#398: FILE: drivers/block/drbd/drbd_req.c:41:
+	int cpu;
+	cpu = part_stat_lock();

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: drivers/block/drbd/drbd_req.c:54:
+	int cpu;
+	cpu = part_stat_lock();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#423: FILE: drivers/block/drbd/drbd_req.c:66:
+	 * release the reference to the activity log. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: drivers/block/drbd/drbd_req.c:73:
+		 * here unconditionally */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: drivers/block/drbd/drbd_req.c:78:
+		 * READ with local io-error */

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: drivers/block/drbd/drbd_req.c:101:
+				dev_warn(DEV, "Should have called drbd_al_complete_io(, %llu), "
+				     "but my Disk seems to have failed :(\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#459: FILE: drivers/block/drbd/drbd_req.c:102:
+				     (unsigned long long) req->sector);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/block/drbd/drbd_req.c:111:
+	 * struct, reuse the request. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: drivers/block/drbd/drbd_req.c:116:
+	 * until the next barrier ack? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#480: FILE: drivers/block/drbd/drbd_req.c:123:
+			 * probably corrupt the worker list here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#500: FILE: drivers/block/drbd/drbd_req.c:143:
+	 * and no new epoch has been created yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#509: FILE: drivers/block/drbd/drbd_req.c:152:
+	 * or (on connection loss) in tl_clear.  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/block/drbd/drbd_req.c:159:
+static void _about_to_complete_local_write(struct drbd_conf *mdev,
+	struct drbd_request *req)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#525: FILE: drivers/block/drbd/drbd_req.c:168:
+	 * we may need to close the current epoch */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: drivers/block/drbd/drbd_req.c:175:
+	 * this has been on the network */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mdev->ee_hash"
#533: FILE: drivers/block/drbd/drbd_req.c:176:
+	if ((s & RQ_NET_DONE) && mdev->ee_hash != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#539: FILE: drivers/block/drbd/drbd_req.c:182:
+		 * they must have been failed on the spot */

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#542: FILE: drivers/block/drbd/drbd_req.c:185:
+		hlist_for_each_entry(i, n, slot, colision) {
 		                                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#556: FILE: drivers/block/drbd/drbd_req.c:199:
+		 * P_DISCARD_ACK not yet sent by the asender...),
 		                                     ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#562: FILE: drivers/block/drbd/drbd_req.c:205:
+		 * we just have to do a wake_up.  */

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#566: FILE: drivers/block/drbd/drbd_req.c:209:
+		hlist_for_each_entry(e, n, slot, colision) {
 		                                 ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: drivers/block/drbd/drbd_req.c:220:
+static void _complete_master_bio(struct drbd_conf *mdev,
+	struct drbd_request *req, int error)

WARNING:TYPO_SPELLING: 'suceeded' may be misspelled - perhaps 'succeeded'?
#621: FILE: drivers/block/drbd/drbd_req.c:264:
+		 * report success when at least one of the operations suceeded.
 		                                                      ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#629: FILE: drivers/block/drbd/drbd_req.c:272:
+		int ok = (s & RQ_LOCAL_OK) || (s & RQ_NET_OK);
+		rw = bio_data_dir(req->master_bio);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#632: FILE: drivers/block/drbd/drbd_req.c:275:
+		 * respective block_id verification hash */

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#633: FILE: drivers/block/drbd/drbd_req.c:276:
+		if (!hlist_unhashed(&req->colision))
 		                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#634: FILE: drivers/block/drbd/drbd_req.c:277:
+			hlist_del(&req->colision);
 			                ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#656: FILE: drivers/block/drbd/drbd_req.c:299:
+		 * or killed from the transfer log due to connection loss. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#660: FILE: drivers/block/drbd/drbd_req.c:303:
+	 * protocol A or B, barrier ack still pending... */

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#696: FILE: drivers/block/drbd/drbd_req.c:339:
+	D_ASSERT(hlist_unhashed(&req->colision));
 	                              ^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#702: FILE: drivers/block/drbd/drbd_req.c:345:
+	ERR_IF (mdev->tl_hash_s == 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#704: FILE: drivers/block/drbd/drbd_req.c:347:
+	BUG_ON(mdev->tl_hash == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdev->tl_hash"
#704: FILE: drivers/block/drbd/drbd_req.c:347:
+	BUG_ON(mdev->tl_hash == NULL);

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#708: FILE: drivers/block/drbd/drbd_req.c:351:
+	hlist_for_each_entry(i, n, slot, colision) {
 	                                 ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#711: FILE: drivers/block/drbd/drbd_req.c:354:
+			dev_alert(DEV, "%s[%u] Concurrent local write detected! "
+			      "[DISCARD L] new: %llus +%u; "

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#722: FILE: drivers/block/drbd/drbd_req.c:365:
+		BUG_ON(mdev->ee_hash == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdev->ee_hash"
#722: FILE: drivers/block/drbd/drbd_req.c:365:
+		BUG_ON(mdev->ee_hash == NULL);

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#726: FILE: drivers/block/drbd/drbd_req.c:369:
+		hlist_for_each_entry(e, n, slot, colision) {
 		                                 ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#729: FILE: drivers/block/drbd/drbd_req.c:372:
+				dev_alert(DEV, "%s[%u] Concurrent remote write detected!"
+				      " [DISCARD L] new: %llus +%u; "

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#742: FILE: drivers/block/drbd/drbd_req.c:385:
+	 * our users do behave after all... */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_req_mod', this function's name, in a string
#768: FILE: drivers/block/drbd/drbd_req.c:411:
+		dev_err(DEV, "got an _req_mod() errno of %d\n", error);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#774: FILE: drivers/block/drbd/drbd_req.c:417:
+		dev_err(DEV, "LOGIC BUG in %s:%u\n", __FILE__ , __LINE__);
 		                                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#785: FILE: drivers/block/drbd/drbd_req.c:428:
+		 * and from w_read_retry_remote */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#799: FILE: drivers/block/drbd/drbd_req.c:442:
+			mdev->writ_cnt += req->size>>9;
 			                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#801: FILE: drivers/block/drbd/drbd_req.c:444:
+			mdev->read_cnt += req->size>>9;
 			                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#806: FILE: drivers/block/drbd/drbd_req.c:449:
+		req->rq_state |= (RQ_LOCAL_COMPLETED|RQ_LOCAL_OK);
 		                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#820: FILE: drivers/block/drbd/drbd_req.c:463:
+		dev_alert(DEV, "Local WRITE failed sec=%llus size=%u\n",
+		      (unsigned long long)req->sector, req->size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/block/drbd/drbd_req.c:487:
+		dev_alert(DEV, "Local READ failed sec=%llus size=%u\n",
+		      (unsigned long long)req->sector, req->size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#857: FILE: drivers/block/drbd/drbd_req.c:500:
+		 * needs to be done from process context */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#859: FILE: drivers/block/drbd/drbd_req.c:502:
+		/* fall through: _req_mod(req,queue_for_net_read); */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#865: FILE: drivers/block/drbd/drbd_req.c:508:
+		 * or just got an io-error. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#867: FILE: drivers/block/drbd/drbd_req.c:510:
+		 * or from bio_endio during read io-error recovery */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#870: FILE: drivers/block/drbd/drbd_req.c:513:
+		 * corresponding hlist_del is in _req_may_be_done() */

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#871: FILE: drivers/block/drbd/drbd_req.c:514:
+		hlist_add_head(&req->colision, ar_hash_slot(mdev, req->sector));
 		                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#887: FILE: drivers/block/drbd/drbd_req.c:530:
+		hlist_add_head(&req->colision, tl_hash_slot(mdev, req->sector));
 		                     ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#902: FILE: drivers/block/drbd/drbd_req.c:545:
+		 * Add req to the (now) current epoch (barrier). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#905: FILE: drivers/block/drbd/drbd_req.c:548:
+		 * just after it grabs the req_lock */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/block/drbd/drbd_req.c:553:
+		list_add_tail(&req->tl_requests,
+				&mdev->newest_tle->requests);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#931: FILE: drivers/block/drbd/drbd_req.c:574:
+		 * so it is no longer marked as on the worker queue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#934: FILE: drivers/block/drbd/drbd_req.c:577:
+		 * this, so this should not be necessary! */

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#943: FILE: drivers/block/drbd/drbd_req.c:586:
+			 * pretend it was sucessfully written on the peer. */
 			                  ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#943: FILE: drivers/block/drbd/drbd_req.c:586:
+			 * pretend it was sucessfully written on the peer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#951: FILE: drivers/block/drbd/drbd_req.c:594:
+			 * so we know what to dirty on connection loss */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#959: FILE: drivers/block/drbd/drbd_req.c:602:
+		 * whether it is done already, and end it.  */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#968: FILE: drivers/block/drbd/drbd_req.c:611:
+		req->rq_state &= ~(RQ_NET_OK|RQ_NET_PENDING);
 		                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#971: FILE: drivers/block/drbd/drbd_req.c:614:
+		 * it will be canceled soon. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#981: FILE: drivers/block/drbd/drbd_req.c:624:
+		 * node crashes are covered by the activity log. */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#983: FILE: drivers/block/drbd/drbd_req.c:626:
+		/* fall through */

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#993: FILE: drivers/block/drbd/drbd_req.c:636:
+		 * P_BARRIER_ACK, but that is an unecessary optimisation. */
 		                                 ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#993: FILE: drivers/block/drbd/drbd_req.c:636:
+		 * P_BARRIER_ACK, but that is an unecessary optimisation. */

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#997: FILE: drivers/block/drbd/drbd_req.c:640:
+		/* protocol B; pretends to be sucessfully written on peer.
 		                              ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#999: FILE: drivers/block/drbd/drbd_req.c:642:
+		 * protocol != C */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1011: FILE: drivers/block/drbd/drbd_req.c:654:
+		req->rq_state &= ~(RQ_NET_OK|RQ_NET_PENDING);
 		                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1022: FILE: drivers/block/drbd/drbd_req.c:665:
+			 * we won't be able to clean them up... */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1036: FILE: drivers/block/drbd/drbd_req.c:679:
+		req->rq_state |= (RQ_NET_OK|RQ_NET_DONE);
 		                           ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1070: FILE: drivers/block/drbd/drbd_req.c:713:
+	return 0 == drbd_bm_count_bits(mdev, sbnr, ebnr);

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#1088: FILE: drivers/block/drbd/drbd_req.c:731:
+		 * if user cannot handle io errors, thats not our business. */
 		                                    ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1088: FILE: drivers/block/drbd/drbd_req.c:731:
+		 * if user cannot handle io errors, thats not our business. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1138: FILE: drivers/block/drbd/drbd_req.c:781:
+	 * of transactional on-disk meta data updates. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1156: FILE: drivers/block/drbd/drbd_req.c:799:
+	 * if we lost that race, we retry.  */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdev->unused_spare_tle"
#1158: FILE: drivers/block/drbd/drbd_req.c:801:
+	    mdev->unused_spare_tle == NULL &&

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*b)...) over kmalloc(sizeof(struct drbd_tl_epoch)...)
#1161: FILE: drivers/block/drbd/drbd_req.c:804:
+		b = kmalloc(sizeof(struct drbd_tl_epoch), GFP_NOIO);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1163: FILE: drivers/block/drbd/drbd_req.c:806:
+		if (!b) {
+			dev_err(DEV, "Failed to alloc barrier.\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdev->unused_spare_tle"
#1185: FILE: drivers/block/drbd/drbd_req.c:828:
+	if (b && mdev->unused_spare_tle == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdev->unused_spare_tle"
#1190: FILE: drivers/block/drbd/drbd_req.c:833:
+	    mdev->unused_spare_tle == NULL &&

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1193: FILE: drivers/block/drbd/drbd_req.c:836:
+		 * while we were grabbing the spinlock */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1198: FILE: drivers/block/drbd/drbd_req.c:841:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1211: FILE: drivers/block/drbd/drbd_req.c:854:
+	 * barrier packet, this request is queued within the same spinlock. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1235: FILE: drivers/block/drbd/drbd_req.c:878:
+	 * this just sets some state flags. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1243: FILE: drivers/block/drbd/drbd_req.c:886:
+	 * THINK do we want to check reads, too? (I don't think so...) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1270: FILE: drivers/block/drbd/drbd_req.c:913:
+	 * we must register the request before start of local IO.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1298: FILE: drivers/block/drbd/drbd_req.c:941:
+	 * we plug after submit, so we won't miss an unplug event */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: drivers/block/drbd/drbd_req.c:976:
+	if (mdev->state.role != R_PRIMARY &&
+		(!allow_oos || is_write)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1337: FILE: drivers/block/drbd/drbd_req.c:980:
+			    "since we are not in Primary state, "
+			    "we cannot allow this\n",

WARNING:TYPO_SPELLING: 'somehwere' may be misspelled - perhaps 'somewhere'?
#1347: FILE: drivers/block/drbd/drbd_req.c:990:
+	 * This should have been handled (panic? suspend?) somehwere
 	                                                   ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1365: FILE: drivers/block/drbd/drbd_req.c:1008:
+	struct drbd_conf *mdev = (struct drbd_conf *) q->queuedata;

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1381: FILE: drivers/block/drbd/drbd_req.c:1024:
+		/* dev_warn(DEV, "Rejecting barrier request as underlying device does not support\n"); */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'allignment' may be misspelled - perhaps 'alignment'?
#1393: FILE: drivers/block/drbd/drbd_req.c:1036:
+	/* to make some things easier, force allignment of requests within the
 	                                     ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1394: FILE: drivers/block/drbd/drbd_req.c:1037:
+	 * granularity of our hash tables */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1396: FILE: drivers/block/drbd/drbd_req.c:1039:
+	e_enr = (bio->bi_sector+(bio->bi_size>>9)-1) >> HT_SHIFT;
 	                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1396: FILE: drivers/block/drbd/drbd_req.c:1039:
+	e_enr = (bio->bi_sector+(bio->bi_size>>9)-1) >> HT_SHIFT;
 	                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1396: FILE: drivers/block/drbd/drbd_req.c:1039:
+	e_enr = (bio->bi_sector+(bio->bi_size>>9)-1) >> HT_SHIFT;
 	                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1404: FILE: drivers/block/drbd/drbd_req.c:1047:
+	 * Maybe add our own split-arbitrary-bios function. */

WARNING:SPLIT_STRING: quoted string split across lines
#1408: FILE: drivers/block/drbd/drbd_req.c:1051:
+		dev_err(DEV, "bio would need to, but cannot, be split: "
+		    "(vcnt=%u,idx=%u,size=%u,sector=%llu)\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1427: FILE: drivers/block/drbd/drbd_req.c:1070:
+		const sector_t first_sectors = sps - (sect & mask);
+		bp = bio_split(bio,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1428: FILE: drivers/block/drbd/drbd_req.c:1071:
+		bp = bio_split(bio,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,28)

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1428: FILE: drivers/block/drbd/drbd_req.c:1071:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,28)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1428: FILE: drivers/block/drbd/drbd_req.c:1071:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,28)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1428: FILE: drivers/block/drbd/drbd_req.c:1071:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,28)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1428: FILE: drivers/block/drbd/drbd_req.c:1071:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,28)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1437: FILE: drivers/block/drbd/drbd_req.c:1080:
+		 * second one! */

WARNING:TYPO_SPELLING: 'emtpy' may be misspelled - perhaps 'empty'?
#1457: FILE: drivers/block/drbd/drbd_req.c:1100:
+ * As long as the BIO is emtpy we have to allow at least one bvec,
                          ^^^^^

CHECK:SPACING: No space is necessary after a cast
#1464: FILE: drivers/block/drbd/drbd_req.c:1107:
+	struct drbd_conf *mdev = (struct drbd_conf *) q->queuedata;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1471: FILE: drivers/block/drbd/drbd_req.c:1114:
+	      - ((bio_offset & (DRBD_MAX_SEGMENT_SIZE-1)) + bio_size);
 	                                             ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124571.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 104 warnings, 50 checks, 1429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124571.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
