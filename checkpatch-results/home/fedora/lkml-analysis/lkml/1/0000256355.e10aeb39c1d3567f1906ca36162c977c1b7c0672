WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
x2apic support.  Interrupt-remapping must be enabled before enabling x2apic,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#87: FILE: arch/x86/kernel/apic_64.c:912:
+		printk("x2apic enabled by BIOS, switching to x2apic ops\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#88: FILE: arch/x86/kernel/apic_64.c:913:
+		x2apic_preenabled = x2apic = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: arch/x86/kernel/apic_64.c:924:
+		printk("Enabling x2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#114: FILE: arch/x86/kernel/apic_64.c:939:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#116: FILE: arch/x86/kernel/apic_64.c:941:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of nox2apic\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#124: FILE: arch/x86/kernel/apic_64.c:949:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#126: FILE: arch/x86/kernel/apic_64.c:951:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of skipping io-apic setup\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#132: FILE: arch/x86/kernel/apic_64.c:957:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#138: FILE: arch/x86/kernel/apic_64.c:963:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#176: FILE: arch/x86/kernel/apic_64.c:1001:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#179: FILE: arch/x86/kernel/apic_64.c:1004:
+			printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#181: FILE: arch/x86/kernel/apic_64.c:1006:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#182: FILE: arch/x86/kernel/apic_64.c:1007:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#190: FILE: arch/x86/kernel/apic_64.c:1015:
+		panic("x2apic enabled prior OS handover,"
+		      " enable CONFIG_INTR_REMAP");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#192: FILE: arch/x86/kernel/apic_64.c:1017:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "

WARNING:SPLIT_STRING: quoted string split across lines
#193: FILE: arch/x86/kernel/apic_64.c:1018:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "
+	       " and x2apic\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#197: FILE: arch/x86/kernel/apic_64.c:1022:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#232: FILE: arch/x86/kernel/apic_64.c:1374:
+	if (!x2apic) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#237: FILE: arch/x86/kernel/apic_64.c:1379:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#253: FILE: arch/x86/kernel/apic_64.c:1527:
+}
+early_param("nox2apic", setup_nox2apic);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: arch/x86/kernel/apic_64.c:1529:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/x86/kernel/setup.c:732:
+ ^Iif (cpu_has_x2apic)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: arch/x86/kernel/setup.c:732:
+ ^Iif (cpu_has_x2apic)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/x86/kernel/setup.c:732:
+ ^Iif (cpu_has_x2apic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/x86/kernel/setup.c:733:
+ ^I^Icheck_x2apic();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: arch/x86/kernel/setup.c:733:
+ ^I^Icheck_x2apic();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/x86/kernel/setup.c:733:
+ ^I^Icheck_x2apic();$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/asm-x86/apic.h:104:
+extern void check_x2apic(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: include/asm-x86/apic.h:105:
+extern void enable_x2apic(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: include/asm-x86/apic.h:106:
+extern void enable_IR_x2apic(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#366: FILE: include/asm-x86/apic.h:107:
+extern void x2apic_icr_write(u32 low, u32 id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 10 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
