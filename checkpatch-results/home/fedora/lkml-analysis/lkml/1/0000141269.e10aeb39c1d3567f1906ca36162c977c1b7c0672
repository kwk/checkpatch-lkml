CHECK:BIT_MACRO: Prefer using the BIT macro
#88: FILE: include/linux/cr.h:260:
+#define CR_FD_FLAGS_CLOEXEC	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BRACES: braces {} should be used on all arms of this statement
#204: FILE: kernel/cr/cr-file.c:306:
+		if (cr_hdr.cr_type == CR_OBJ_FD) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#208: FILE: kernel/cr/cr-file.c:310:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: kernel/cr/cr-file.c:321:
+	printk("collect files_struct %p: rv %d\n", files, rv);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#240: FILE: kernel/cr/cr-file.c:342:
+			printk("%s: files_struct %p has external references %lu:%u\n", __func__, files, obj->o_count, cnt);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: kernel/cr/cr-file.c:342:
+			printk("%s: files_struct %p has external references %lu:%u\n", __func__, files, obj->o_count, cnt);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: kernel/cr/cr-file.c:355:
+	printk("dump fd %d, files_struct = %p, file = %p\n", fd, files, file);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: kernel/cr/cr-file.c:380:
+	printk("dump files_struct %p\n", files);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: kernel/cr/cr-file.c:459:
+	printk("restore files_struct %p, pos %lld\n", files, (long long)pos);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 3 checks, 361 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
