WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: fs/nilfs2/dat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: fs/nilfs2/dat.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: fs/nilfs2/dat.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: fs/nilfs2/dat.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#199: FILE: fs/nilfs2/dat.c:138:
+	BUG_ON(ret == -ENOENT);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#215: FILE: fs/nilfs2/dat.c:154:
+		printk(KERN_CRIT

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#221: FILE: fs/nilfs2/dat.c:160:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: fs/nilfs2/dat.c:183:
+		BUG_ON(ret == -ENOENT);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#277: FILE: fs/nilfs2/dat.c:216:
+	end = start = le64_to_cpu(entry->de_start);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#280: FILE: fs/nilfs2/dat.c:219:
+		BUG_ON(start > end);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#389: FILE: fs/nilfs2/dat.c:328:
+		printk(KERN_CRIT "%s: vbn = %llu, [%llu, %llu)\n", __func__,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#393: FILE: fs/nilfs2/dat.c:332:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#395: FILE: fs/nilfs2/dat.c:334:
+	BUG_ON(blocknr == 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "blocknrp"
#445: FILE: fs/nilfs2/dat.c:384:
+	if (blocknrp != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#479: FILE: fs/nilfs2/dat.c:418:
+			entry = nilfs_palloc_block_get_entry(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#497: FILE: fs/nilfs2/dat.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#513: FILE: fs/nilfs2/dat.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#514: FILE: fs/nilfs2/dat.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#530: FILE: fs/nilfs2/dat.h:34:
+int nilfs_dat_translate(struct inode *, __u64, sector_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#530: FILE: fs/nilfs2/dat.h:34:
+int nilfs_dat_translate(struct inode *, __u64, sector_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t *' should also have an identifier name
#530: FILE: fs/nilfs2/dat.h:34:
+int nilfs_dat_translate(struct inode *, __u64, sector_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#532: FILE: fs/nilfs2/dat.h:36:
+int nilfs_dat_prepare_alloc(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#532: FILE: fs/nilfs2/dat.h:36:
+int nilfs_dat_prepare_alloc(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#533: FILE: fs/nilfs2/dat.h:37:
+void nilfs_dat_commit_alloc(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#533: FILE: fs/nilfs2/dat.h:37:
+void nilfs_dat_commit_alloc(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#534: FILE: fs/nilfs2/dat.h:38:
+void nilfs_dat_abort_alloc(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#534: FILE: fs/nilfs2/dat.h:38:
+void nilfs_dat_abort_alloc(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#535: FILE: fs/nilfs2/dat.h:39:
+int nilfs_dat_prepare_start(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#535: FILE: fs/nilfs2/dat.h:39:
+int nilfs_dat_prepare_start(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#536: FILE: fs/nilfs2/dat.h:40:
+void nilfs_dat_commit_start(struct inode *, struct nilfs_palloc_req *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#536: FILE: fs/nilfs2/dat.h:40:
+void nilfs_dat_commit_start(struct inode *, struct nilfs_palloc_req *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#536: FILE: fs/nilfs2/dat.h:40:
+void nilfs_dat_commit_start(struct inode *, struct nilfs_palloc_req *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#538: FILE: fs/nilfs2/dat.h:42:
+void nilfs_dat_abort_start(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#538: FILE: fs/nilfs2/dat.h:42:
+void nilfs_dat_abort_start(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#539: FILE: fs/nilfs2/dat.h:43:
+int nilfs_dat_prepare_end(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#539: FILE: fs/nilfs2/dat.h:43:
+int nilfs_dat_prepare_end(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#540: FILE: fs/nilfs2/dat.h:44:
+void nilfs_dat_commit_end(struct inode *, struct nilfs_palloc_req *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#540: FILE: fs/nilfs2/dat.h:44:
+void nilfs_dat_commit_end(struct inode *, struct nilfs_palloc_req *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#540: FILE: fs/nilfs2/dat.h:44:
+void nilfs_dat_commit_end(struct inode *, struct nilfs_palloc_req *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#541: FILE: fs/nilfs2/dat.h:45:
+void nilfs_dat_abort_end(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_palloc_req *' should also have an identifier name
#541: FILE: fs/nilfs2/dat.h:45:
+void nilfs_dat_abort_end(struct inode *, struct nilfs_palloc_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#543: FILE: fs/nilfs2/dat.h:47:
+int nilfs_dat_mark_dirty(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#543: FILE: fs/nilfs2/dat.h:47:
+int nilfs_dat_mark_dirty(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#544: FILE: fs/nilfs2/dat.h:48:
+int nilfs_dat_freev(struct inode *, __u64 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64 *' should also have an identifier name
#544: FILE: fs/nilfs2/dat.h:48:
+int nilfs_dat_freev(struct inode *, __u64 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#544: FILE: fs/nilfs2/dat.h:48:
+int nilfs_dat_freev(struct inode *, __u64 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#545: FILE: fs/nilfs2/dat.h:49:
+int nilfs_dat_move(struct inode *, __u64, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#545: FILE: fs/nilfs2/dat.h:49:
+int nilfs_dat_move(struct inode *, __u64, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#545: FILE: fs/nilfs2/dat.h:49:
+int nilfs_dat_move(struct inode *, __u64, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#546: FILE: fs/nilfs2/dat.h:50:
+ssize_t nilfs_dat_get_vinfo(struct inode *, struct nilfs_vinfo *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_vinfo *' should also have an identifier name
#546: FILE: fs/nilfs2/dat.h:50:
+ssize_t nilfs_dat_get_vinfo(struct inode *, struct nilfs_vinfo *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#546: FILE: fs/nilfs2/dat.h:50:
+ssize_t nilfs_dat_get_vinfo(struct inode *, struct nilfs_vinfo *, size_t);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 45 warnings, 4 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
