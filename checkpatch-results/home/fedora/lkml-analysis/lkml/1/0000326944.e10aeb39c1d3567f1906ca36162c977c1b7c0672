CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: arch/cris/arch-v32/kernel/process.c:139:
+copy_thread(int nr, u64 clone_flags, unsigned long usp,
 	unsigned long unused,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: arch/ia64/kernel/process.c:404:
+copy_thread (int nr, u64 clone_flags,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: arch/m32r/kernel/process.c:246:
+int copy_thread(int nr, u64 clone_flags, unsigned long spu,
 	unsigned long unused, struct task_struct *tsk, struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: arch/m68k/kernel/process.c:239:
+int copy_thread(int nr, u64 clone_flags, unsigned long usp,
 		 unsigned long unused,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: arch/mips/kernel/process.c:104:
+int copy_thread(int nr, u64 clone_flags, unsigned long usp,
 	unsigned long unused, struct task_struct *p, struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: arch/s390/kernel/process.c:245:
+int copy_thread(int nr, u64 clone_flags, unsigned long new_stackp,
 	unsigned long unused,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: arch/v850/kernel/process.c:113:
+int copy_thread (int nr, u64 clone_flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: arch/x86/kernel/process_32.c:495:
+int copy_thread(int nr, u64 clone_flags, unsigned long sp,
 	unsigned long unused,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#452: FILE: include/linux/key.h:269:
+extern int copy_keys(u64 clone_flags, struct task_struct *tsk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#465: FILE: include/linux/sched.h:1759:
+extern int  copy_thread(int, u64, unsigned long, unsigned long, struct task_struct *, struct pt_regs *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#478: FILE: include/linux/security.h:1324:
+	int (*task_create) (u64 clone_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#496: FILE: include/linux/security.h:2045:
+static inline int security_task_create (u64 clone_flags)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#509: FILE: include/linux/sem.h:142:
+extern int copy_semundo(u64 clone_flags, struct task_struct *tsk);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#540: FILE: kernel/fork.c:550:
+static int copy_mm(u64 clone_flags, struct task_struct * tsk)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#558: FILE: kernel/fork.c:768:
+static int copy_files(u64 clone_flags, struct task_struct * tsk)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: security/dummy.c:496:
+static int dummy_task_create (u64 clone_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: kernel/nsproxy.c:51:
+static struct nsproxy *create_new_namespaces(u64 flags,
 			struct task_struct *tsk, struct fs_struct *new_fs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: fs/namespace.c:1962:
+struct mnt_namespace *copy_mnt_ns(u64 flags, struct mnt_namespace *ns,
 		struct fs_struct *new_fs)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#707: FILE: include/linux/ipc_namespace.h:45:
+extern struct ipc_namespace *copy_ipcs(u64 flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: include/linux/ipc_namespace.h:64:
+static inline struct ipc_namespace *copy_ipcs(u64 flags,
 		struct ipc_namespace *ns)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#729: FILE: include/linux/mnt_namespace.h:17:
+extern struct mnt_namespace *copy_mnt_ns(u64, struct mnt_namespace *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#729: FILE: include/linux/mnt_namespace.h:17:
+extern struct mnt_namespace *copy_mnt_ns(u64, struct mnt_namespace *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mnt_namespace *' should also have an identifier name
#729: FILE: include/linux/mnt_namespace.h:17:
+extern struct mnt_namespace *copy_mnt_ns(u64, struct mnt_namespace *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_struct *' should also have an identifier name
#729: FILE: include/linux/mnt_namespace.h:17:
+extern struct mnt_namespace *copy_mnt_ns(u64, struct mnt_namespace *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#730: FILE: include/linux/mnt_namespace.h:18:
+extern struct mnt_namespace *copy_mnt_ns(u64, struct mnt_namespace *,
 		struct fs_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#742: FILE: include/linux/pid_namespace.h:40:
+extern struct pid_namespace *copy_pid_ns(u64 flags, struct pid_namespace *ns);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: include/linux/user_namespace.h:29:
+extern struct user_namespace *copy_user_ns(u64 flags,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#786: FILE: include/linux/utsname.h:53:
+extern struct uts_namespace *copy_utsname(u64 flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: include/linux/utsname.h:54:
+extern struct uts_namespace *copy_utsname(u64 flags,
 					struct uts_namespace *ns);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: include/linux/utsname.h:71:
+static inline struct uts_namespace *copy_utsname(u64 flags,
 					struct uts_namespace *ns)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#808: FILE: include/net/net_namespace.h:76:
+extern struct net *copy_net_ns(u64 flags, struct net *net_ns);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#850: FILE: kernel/user_namespace.c:52:
+struct user_namespace * copy_user_ns(u64 flags, struct user_namespace *old_ns)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326944.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 21 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326944.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
