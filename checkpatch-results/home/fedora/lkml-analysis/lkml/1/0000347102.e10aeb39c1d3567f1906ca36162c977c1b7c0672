WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
The revokeat(2) system call ensures that after successful revocation you can

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: fs/revoke.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#187: FILE: fs/revoke.c:107:
+	}
+	while_each_thread(g, p);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vma"
#202: FILE: fs/revoke.c:122:
+	for (vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#269: FILE: fs/revoke.c:189:
+	}
+	while_each_thread(g, p);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: fs/revoke.c:212:
+ *^I ^I    -> spin_lock(&mapping->i_mmap_lock)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vma"
#348: FILE: fs/revoke.c:268:
+	for (vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#453: FILE: fs/revoke.c:373:
+ * ^IReturns true if revoke lock was acquired$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#515: FILE: fs/revoke.c:435:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#518: FILE: fs/revoke.c:438:
+	err = __user_walk_fd(dfd, filename, 0, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#520: FILE: fs/revoke.c:440:
+		err = do_revoke(nd.dentry->d_inode);
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#521: FILE: fs/revoke.c:441:
+		path_release(&nd);
 		              ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#539: FILE: include/linux/fs.h:1194:
+	int (*revoke) (struct file *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#539: FILE: include/linux/fs.h:1194:
+	int (*revoke) (struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: include/linux/fs.h:1830:
+extern void make_revoked_file(struct inode *, struct file *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#550: FILE: include/linux/fs.h:1831:
+extern void make_revoked_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#550: FILE: include/linux/fs.h:1831:
+extern void make_revoked_inode(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#551: FILE: include/linux/fs.h:1832:
+extern int generic_file_revoke(struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#551: FILE: include/linux/fs.h:1832:
+extern int generic_file_revoke(struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#567: FILE: include/linux/mm.h:989:
+extern void __unlink_file_vma(struct vm_area_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#567: FILE: include/linux/mm.h:989:
+extern void __unlink_file_vma(struct vm_area_struct *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347102.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 13 warnings, 6 checks, 504 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347102.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
