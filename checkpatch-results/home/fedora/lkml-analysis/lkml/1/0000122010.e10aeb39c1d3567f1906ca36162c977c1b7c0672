WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: kernel/groups.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#75: FILE: kernel/groups.c:9:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#89: FILE: kernel/groups.c:23:
+	group_info = kmalloc(sizeof(*group_info) + nblocks*sizeof(gid_t *), GFP_USER);
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#96: FILE: kernel/groups.c:30:
+	if (gidsetsize <= NGROUPS_SMALL)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#98: FILE: kernel/groups.c:32:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: kernel/groups.c:35:
+			gid_t *b;
+			b = (void *)__get_free_page(GFP_USER);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#110: FILE: kernel/groups.c:44:
+	while (--i >= 0) {
+		free_page((unsigned long)group_info->blocks[i]);
+	}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#117: FILE: kernel/groups.c:51:
+EXPORT_SYMBOL(groups_alloc);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: kernel/groups.c:57:
+		int i;
+		for (i = 0; i < group_info->nblocks; i++)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#129: FILE: kernel/groups.c:63:
+EXPORT_SYMBOL(groups_free);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: kernel/groups.c:87:
+static int groups_from_user(struct group_info *group_info,
+    gid_t __user *grouplist)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: kernel/groups.c:87:
+    gid_t __user *grouplist)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#211: FILE: kernel/groups.c:145:
+		unsigned int mid = (left+right)/2;
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#211: FILE: kernel/groups.c:145:
+		unsigned int mid = (left+right)/2;
 		                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#213: FILE: kernel/groups.c:147:
+		int cmp = grp - GROUP_AT(group_info, mid);
+		if (cmp > 0)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#246: FILE: kernel/groups.c:180:
+EXPORT_SYMBOL(set_groups);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#273: FILE: kernel/groups.c:207:
+EXPORT_SYMBOL(set_current_groups);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: kernel/groups.c:237:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/groups.c:237:
+ $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: kernel/groups.c:245:
+	if ((unsigned)gidsetsize > NGROUPS_MAX)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#342: FILE: kernel/groups.c:276:
+EXPORT_SYMBOL(in_group_p);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#354: FILE: kernel/groups.c:288:
+EXPORT_SYMBOL(in_egroup_p);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 6 checks, 584 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
