WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#133: 
 drivers/ide/ide-tape.c                  |  536 ++++++++++++++----------------

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#300: FILE: Documentation/ide/ide.txt:179:
+	insmod ide.o options="hda=nodma hdb=nodma"
 	                      ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#346: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#1354: FILE: drivers/ide/Kconfig:1109:
+	  to use "hda=noprobe hdb=noprobe" kernel parameters to prevent the new
 	          ^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1658: FILE: drivers/ide/ide-floppy.c:202:
+static int idefloppy_end_request(ide_drive_t *drive, int uptodate, int nsecs)
                                                          ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1693: FILE: drivers/ide/ide-floppy.c:272:
+static void idefloppy_update_buffers(ide_drive_t *drive,
+				struct ide_atapi_pc *pc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1710: FILE: drivers/ide/ide-floppy.c:287:
+static void idefloppy_queue_pc_head(ide_drive_t *drive, struct ide_atapi_pc *pc,
 		struct request *rq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2003: FILE: drivers/ide/ide-floppy.c:727:
+static void idefloppy_create_format_unit_cmd(struct ide_atapi_pc *pc, int b,
+		int l, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2034: FILE: drivers/ide/ide-floppy.c:749:
+static void idefloppy_create_mode_sense_cmd(struct ide_atapi_pc *pc,
+		u8 page_code, u8 type)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2080: FILE: drivers/ide/ide-floppy.c:808:
+	pc->req_xfer = pc->buf_size = blocks * floppy->block_size;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2105: FILE: drivers/ide/ide-floppy.c:829:
+	pc->req_xfer = pc->buf_size = rq->data_len;

CHECK:SPACING: No space is necessary after a cast
#2138: FILE: drivers/ide/ide-floppy.c:866:
+		pc = (struct ide_atapi_pc *) rq->buffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#2333: FILE: drivers/ide/ide-floppy.c:1222:
 		printk(KERN_ERR "ide-floppy: Device type (0x%02x) is not set "
+				"to floppy\n", device_type);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#2341: FILE: drivers/ide/ide-floppy.c:1227:
 		printk(KERN_ERR "ide-floppy: Sorry, DRQ type (0x%02x) not "
+				"supported\n", drq_type);

WARNING:SPLIT_STRING: quoted string split across lines
#2346: FILE: drivers/ide/ide-floppy.c:1230:
 		printk(KERN_ERR "ide-floppy: Packet size (0x%02x) is not 12 "
+				"bytes\n", packet_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2400: FILE: drivers/ide/ide-floppy.c:1457:
+static int ide_floppy_lockdoor(idefloppy_floppy_t *floppy,
+		struct ide_atapi_pc *pc, unsigned long arg, unsigned int cmd)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif"
#2464: FILE: drivers/ide/ide-generic.c:37:
+	if (hwif == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#2482: FILE: drivers/ide/ide-generic.c:55:
+	__ATTR(add, S_IWUSR, NULL, store_add),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:BRACES: braces {} should be used on all arms of this statement
#2524: FILE: drivers/ide/ide-generic.c:97:
+		if (hwif->chipset == ide_unknown && io_addr) {
[...]
 			idx[i] = i;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#2533: FILE: drivers/ide/ide-generic.c:104:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2540: FILE: drivers/ide/ide-generic.c:111:
+		printk(KERN_ERR DRV_NAME ": failed to create ide_generic "

WARNING:SPLIT_STRING: quoted string split across lines
#2541: FILE: drivers/ide/ide-generic.c:112:
+		printk(KERN_ERR DRV_NAME ": failed to create ide_generic "
+					 "class\n");

CHECK:BRACES: Unbalanced braces around else statement
#2668: FILE: drivers/ide/ide-iops.c:209:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#2693: FILE: drivers/ide/ide-iops.c:234:
+	} else

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2810: FILE: drivers/ide/ide-iops.c:1073:
+	hwif->OUTBSYNC(drive, drive->ctl|6, hwif->io_ports[IDE_CONTROL_OFFSET]);
 	                                ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_delete_devices' to 'delete_devices_store'
#3030: FILE: drivers/ide/ide-probe.c:1409:
+static DEVICE_ATTR(delete_devices, S_IWUSR, NULL, store_delete_devices);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#3030: FILE: drivers/ide/ide-probe.c:1409:
+static DEVICE_ATTR(delete_devices, S_IWUSR, NULL, store_delete_devices);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_scan' to 'scan_store'
#3047: FILE: drivers/ide/ide-probe.c:1426:
+static DEVICE_ATTR(scan, S_IWUSR, NULL, store_scan);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#3047: FILE: drivers/ide/ide-probe.c:1426:
+static DEVICE_ATTR(scan, S_IWUSR, NULL, store_scan);

WARNING:SPLIT_STRING: quoted string split across lines
#3644: FILE: drivers/ide/ide-tape.c:1030:
 		debug_log(DBG_SENSE, "Packet command completed, %d bytes"
+				" transferred\n", pc->xferred);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3779: FILE: drivers/ide/ide-tape.c:1224:
+static ide_startstop_t idetape_issue_pc(ide_drive_t *drive,
+		struct ide_atapi_pc *pc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3906: FILE: drivers/ide/ide-tape.c:1465:
+static void idetape_create_read_cmd(idetape_tape_t *tape,
+		struct ide_atapi_pc *pc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3931: FILE: drivers/ide/ide-tape.c:1483:
+static void idetape_create_write_cmd(idetape_tape_t *tape,
+		struct ide_atapi_pc *pc,

CHECK:SPACING: No space is necessary after a cast
#3993: FILE: drivers/ide/ide-tape.c:1593:
+		pc = (struct ide_atapi_pc *) rq->buffer;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4075: FILE: drivers/ide/ide-tape.c:1922:
+static void idetape_create_load_unload_cmd(ide_drive_t *drive,
+		struct ide_atapi_pc *pc, int cmd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4145: FILE: drivers/ide/ide-tape.c:2004:
+static void idetape_create_locate_cmd(ide_drive_t *drive,
+		struct ide_atapi_pc *pc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4162: FILE: drivers/ide/ide-tape.c:2017:
+static int idetape_create_prevent_cmd(ide_drive_t *drive,
+		struct ide_atapi_pc *pc, int prevent)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4227: FILE: drivers/ide/ide-tape.c:2182:
+static void idetape_create_rewind_cmd(ide_drive_t *drive,
+		struct ide_atapi_pc *pc)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#5092: FILE: drivers/ide/ide.c:962:
+extern int probe_4drives;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:MISPLACED_INIT: __initdata should be placed after is_chipset_set
#5095: FILE: drivers/ide/ide.c:964:
+static int __initdata is_chipset_set;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5409: FILE: drivers/ide/legacy/ide-4drives.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#5415: FILE: drivers/ide/legacy/ide-4drives.c:7:
+int probe_4drives = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5447: FILE: drivers/ide/legacy/ide-4drives.c:39:
+	hwif->serialized = mate->serialized = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5468: FILE: drivers/ide/legacy/ide-cs.c:159:
+    hwif = ide_find_port(hw.io_ports[IDE_DATA_OFFSET]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5478: FILE: drivers/ide/legacy/ide-cs.c:167:
+    else$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5662: FILE: drivers/ide/pci/cmd640.c:764:
+	printk(KERN_INFO "cmd640: buggy cmd640%c interface on %s, config=0x%02x"

WARNING:SPLIT_STRING: quoted string split across lines
#5663: FILE: drivers/ide/pci/cmd640.c:765:
+	printk(KERN_INFO "cmd640: buggy cmd640%c interface on %s, config=0x%02x"
+			 "\n", 'a' + cmd640_chip_version - 1, bus_type, cfr);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#5824: FILE: drivers/ide/pci/ns87415.c:188:
 static void __devinit init_hwif_ns87415 (ide_hwif_t *hwif)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5870: FILE: drivers/ide/pci/scc_pata.c:543:
+		printk(KERN_ERR "%s: too many IDE interfaces, "

WARNING:SPLIT_STRING: quoted string split across lines
#5871: FILE: drivers/ide/pci/scc_pata.c:544:
+		printk(KERN_ERR "%s: too many IDE interfaces, "
+				"no room in table\n", SCC_PATA_NAME);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6120: FILE: drivers/ide/pci/tc86c001.c:129:
 static u8 __devinit tc86c001_cable_detect(ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#6465: FILE: drivers/ide/ppc/pmac.c:1074:
+static void __devinit pmac_ide_init_ports(hw_regs_t *hw, unsigned long base)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6682: FILE: drivers/scsi/ide-scsi.c:135:
+static void idescsi_input_buffers(ide_drive_t *drive, struct ide_atapi_pc *pc,
+		unsigned int bcount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6697: FILE: drivers/scsi/ide-scsi.c:173:
+static void idescsi_output_buffers(ide_drive_t *drive, struct ide_atapi_pc *pc,
+		unsigned int bcount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6716: FILE: drivers/scsi/ide-scsi.c:216:
+static int idescsi_check_condition(ide_drive_t *drive,
+		struct request *failed_cmd)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pc)...) over kzalloc(sizeof(struct ide_atapi_pc)...)
#6726: FILE: drivers/scsi/ide-scsi.c:224:
+	pc = kzalloc(sizeof(struct ide_atapi_pc), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#6738: FILE: drivers/scsi/ide-scsi.c:238:
+	pc->c[4] = pc->req_xfer = pc->buf_size = SCSI_SENSE_BUFFERSIZE;

CHECK:SPACING: No space is necessary after a cast
#6744: FILE: drivers/scsi/ide-scsi.c:242:
+	rq->buffer = (void *) failed_cmd->special;

CHECK:SPACING: No space is necessary after a cast
#6745: FILE: drivers/scsi/ide-scsi.c:243:
+	pc->scsi_cmd = ((struct ide_atapi_pc *) failed_cmd->special)->scsi_cmd;

CHECK:SPACING: No space is necessary after a cast
#6768: FILE: drivers/scsi/ide-scsi.c:276:
+		((struct ide_atapi_pc *) rq->special)->scsi_cmd->serial_number);

CHECK:SPACING: No space is necessary after a cast
#6777: FILE: drivers/scsi/ide-scsi.c:289:
+	struct ide_atapi_pc *pc = (struct ide_atapi_pc *) rq->special;

CHECK:SPACING: No space is necessary after a cast
#6786: FILE: drivers/scsi/ide-scsi.c:301:
+		struct ide_atapi_pc *opc = (struct ide_atapi_pc *) rq->buffer;

CHECK:SPACING: No space is necessary after a cast
#6794: FILE: drivers/scsi/ide-scsi.c:306:
+		memcpy((void *) opc->scsi_cmd->sense_buffer, pc->buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6795: FILE: drivers/scsi/ide-scsi.c:307:
+		memcpy((void *) opc->scsi_cmd->sense_buffer, pc->buf,
+			SCSI_SENSE_BUFFERSIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6873: FILE: drivers/scsi/ide-scsi.c:405:
+			printk(KERN_INFO "Packet command completed, %d bytes"

WARNING:SPLIT_STRING: quoted string split across lines
#6874: FILE: drivers/scsi/ide-scsi.c:406:
+			printk(KERN_INFO "Packet command completed, %d bytes"
+					" transferred\n", pc->xferred);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6910: FILE: drivers/scsi/ide-scsi.c:433:
+						idescsi_input_buffers(drive, pc,
+									temp);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#6913: FILE: drivers/scsi/ide-scsi.c:435:
+						drive->hwif->atapi_input_bytes(drive, pc->cur_pos, temp);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7026: FILE: drivers/scsi/ide-scsi.c:546:
+static ide_startstop_t idescsi_issue_pc(ide_drive_t *drive,
+		struct ide_atapi_pc *pc)

CHECK:SPACING: No space is necessary after a cast
#7071: FILE: drivers/scsi/ide-scsi.c:595:
+				(struct ide_atapi_pc *) rq->special);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pc)...) over kmalloc(sizeof(struct ide_atapi_pc)...)
#7089: FILE: drivers/scsi/ide-scsi.c:760:
+	pc = kmalloc(sizeof(struct ide_atapi_pc), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rq)...) over kmalloc(sizeof(struct request)...)
#7090: FILE: drivers/scsi/ide-scsi.c:761:
+	rq = kmalloc(sizeof(struct request), GFP_ATOMIC);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#7104: FILE: drivers/scsi/ide-scsi.c:775:
+	pc->req_xfer = pc->buf_size = scsi_bufflen(cmd);

WARNING:SPACING: Unnecessary space before function pointer arguments
#7665: FILE: include/linux/ide.h:636:
+	void (*idefloppy_callback) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7665: FILE: include/linux/ide.h:636:
+	void (*idefloppy_callback) (ide_drive_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#7666: FILE: include/linux/ide.h:637:
+	ide_startstop_t (*idetape_callback) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7666: FILE: include/linux/ide.h:637:
+	ide_startstop_t (*idetape_callback) (ide_drive_t *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#7677: FILE: include/linux/ide.h:648:
+	void (*done) (struct scsi_cmnd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#7677: FILE: include/linux/ide.h:648:
+	void (*done) (struct scsi_cmnd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#7689: FILE: include/linux/ide.h:697:
+void ide_proc_unregister_device(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#7714: FILE: include/linux/ide.h:1202:
+void ide_unregister(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7722: FILE: include/linux/ide.h:1211:
+void ide_port_unregister_devices(ide_hwif_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#7723: FILE: include/linux/ide.h:1212:
+void ide_port_scan(ide_hwif_t *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7755: FILE: include/linux/ide.h:1348:
+static inline void ide_atapi_discard_data(ide_drive_t *drive, unsigned bcount)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7764: FILE: include/linux/ide.h:1357:
+static inline void ide_atapi_write_zeros(ide_drive_t *drive, unsigned bcount)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294060.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 43 warnings, 41 checks, 6720 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294060.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
