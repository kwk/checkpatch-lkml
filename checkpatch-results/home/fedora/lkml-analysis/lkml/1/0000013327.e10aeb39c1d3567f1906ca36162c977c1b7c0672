CHECK:BIT_MACRO: Prefer using the BIT macro
#179: FILE: include/linux/kvm.h:106:
+#define KVM_MEMSLOT_INVALID      (1UL << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*slots)...) over kzalloc(sizeof(struct kvm_memslots)...)
#440: FILE: virt/kvm/kvm_main.c:675:
+		slots = kzalloc(sizeof(struct kvm_memslots), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: virt/kvm/kvm_main.c:690:
+^I^I * ^I- gfn_to_hva (kvm_read_guest, gfn_to_pfn)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: virt/kvm/kvm_main.c:691:
+^I^I * ^I- kvm_is_visible_gfn (mmu_check_roots)$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*slots)...) over kzalloc(sizeof(struct kvm_memslots)...)
#481: FILE: virt/kvm/kvm_main.c:711:
+	slots = kzalloc(sizeof(struct kvm_memslots), GFP_KERNEL);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#565: FILE: virt/kvm/kvm_main.c:888:
+		if (gfn >= memslot->base_gfn
+		    && gfn < memslot->base_gfn + memslot->npages)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 4 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
