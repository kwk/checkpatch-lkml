WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/8bdbd962ecfcbdd96f9dbb02d780b4553afd2543

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#94: FILE: arch/x86/kernel/cpu/amd.c:90:
+			printk(KERN_CONT

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#94: FILE: arch/x86/kernel/cpu/amd.c:90:
+			printk(KERN_CONT

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#98: FILE: arch/x86/kernel/cpu/amd.c:93:
+			printk(KERN_CONT "probably OK (after B9730xxxx).\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#98: FILE: arch/x86/kernel/cpu/amd.c:93:
+			printk(KERN_CONT "probably OK (after B9730xxxx).\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#108: FILE: arch/x86/kernel/cpu/amd.c:223:
+			printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#110: FILE: arch/x86/kernel/cpu/amd.c:225:
+					l, ((l & 0x000fffff)|0x20000000));
 					                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#129: FILE: arch/x86/kernel/cpu/amd.c:492:
+			printk(KERN_DEBUG "tseg: %010llx\n", tseg);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#130: FILE: arch/x86/kernel/cpu/amd.c:493:
+			if ((tseg>>PMD_SHIFT) <
 			         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#133: FILE: arch/x86/kernel/cpu/amd.c:495:
+				((tseg>>PMD_SHIFT) <
 				      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#137: FILE: arch/x86/kernel/cpu/amd.c:497:
+				(tseg>>PMD_SHIFT) >= (1ULL<<(32 - PMD_SHIFT))))
 				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#137: FILE: arch/x86/kernel/cpu/amd.c:497:
+				(tseg>>PMD_SHIFT) >= (1ULL<<(32 - PMD_SHIFT))))
 				                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: arch/x86/kernel/cpu/amd.c:506:
+static unsigned int __cpuinit amd_size_cache(struct cpuinfo_x86 *c,
+							unsigned int size)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#171: FILE: arch/x86/kernel/cpu/bugs.c:84:
+		printk(KERN_WARNING "Hmm, FPU with FDIV bug.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#180: FILE: arch/x86/kernel/cpu/bugs.c:101:
+	printk(KERN_CONT "OK.\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#180: FILE: arch/x86/kernel/cpu/bugs.c:101:
+	printk(KERN_CONT "OK.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#189: FILE: arch/x86/kernel/cpu/bugs.c:125:
+		printk(KERN_CONT "Buggy.\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#189: FILE: arch/x86/kernel/cpu/bugs.c:125:
+		printk(KERN_CONT "Buggy.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#192: FILE: arch/x86/kernel/cpu/bugs.c:127:
+		printk(KERN_CONT "OK.\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#192: FILE: arch/x86/kernel/cpu/bugs.c:127:
+		printk(KERN_CONT "OK.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#201: FILE: arch/x86/kernel/cpu/bugs.c:159:
+	printk(KERN_INFO "CPU: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#214: FILE: arch/x86/kernel/cpu/bugs_64.c:18:
+	printk(KERN_INFO "CPU: ");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#281: FILE: arch/x86/kernel/cpu/cyrix.c:303:
+			if ((0x30 <= dir1 && dir1 <= 0x6f) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/x86/kernel/cpu/cyrix.c:304:
+			if ((0x30 <= dir1 && dir1 <= 0x6f) ||
+					(0x80 <= dir1 && dir1 <= 0x8f))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#282: FILE: arch/x86/kernel/cpu/cyrix.c:304:
+					(0x80 <= dir1 && dir1 <= 0x8f))

CHECK:CAMELCASE: Avoid CamelCase: <setCx86>
#294: FILE: arch/x86/kernel/cpu/cyrix.c:433:
+			setCx86(CX86_CCR3, (ccr3 & 0x0f) | 0x10);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <setCx86_old>
#296: FILE: arch/x86/kernel/cpu/cyrix.c:435:
+			setCx86_old(CX86_CCR4, getCx86_old(CX86_CCR4) | 0x80);

CHECK:CAMELCASE: Avoid CamelCase: <getCx86_old>
#296: FILE: arch/x86/kernel/cpu/cyrix.c:435:
+			setCx86_old(CX86_CCR4, getCx86_old(CX86_CCR4) | 0x80);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#408: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:35:
+/* All the cache descriptor types we care about (no TLB or
+   trace cache entries) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:35:
+   trace cache entries) */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#505: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:399:
+					index_msb = get_count_order(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#550: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:492:
+		printk(KERN_INFO "CPU: Trace cache: %dK uops", trace);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#552: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:494:
+		printk(KERN_INFO "CPU: L1 I cache: %dK", l1i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#556: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:497:
+		printk(KERN_CONT ", L1 D cache: %dK\n", l1d);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#556: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:497:
+		printk(KERN_CONT ", L1 D cache: %dK\n", l1d);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#559: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:499:
+		printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#559: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:499:
+		printk(KERN_CONT "\n");

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after cacheinfo_cpu_notifier
#680: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:985:
+static struct notifier_block __cpuinitdata cacheinfo_cpu_notifier = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#839: FILE: arch/x86/kernel/cpu/perfctr-watchdog.c:666:
+			(ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX+1)) ||
 			                                        ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#866: FILE: arch/x86/kernel/cpu/vmware.c:52:
+	uint64_t tsc_hz;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#867: FILE: arch/x86/kernel/cpu/vmware.c:53:
+	uint32_t eax, ebx, ecx, edx;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#882: FILE: arch/x86/kernel/cpu/vmware.c:61:
+	BUG_ON(tsc_hz >> 32);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000097580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 28 warnings, 14 checks, 718 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000097580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
