WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: samples/markers/test-multi.c:1:
+/* test-multi.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#76: FILE: samples/markers/test-multi.c:15:
+#include <asm/atomic.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: samples/markers/test-multi.c:26:
+void probe_subsystem_eventa(void *probe_data, void *call_data,
+	const char *format, va_list *args)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: samples/markers/test-multi.c:33:
+void probe_subsystem_eventb(void *probe_data, void *call_data,
+	const char *format, va_list *args)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: samples/markers/test-multi.c:40:
+void probe_subsystem_eventc(void *probe_data, void *call_data,
+	const char *format, va_list *args)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: samples/markers/test-multi.c:47:
+void probe_subsystem_eventd(void *probe_data, void *call_data,
+	const char *format, va_list *args)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#115: FILE: samples/markers/test-multi.c:54:
+static struct probe_data probe_array[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#118: FILE: samples/markers/test-multi.c:57:
+		.probe_func = (marker_probe_func*)0xa },

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#121: FILE: samples/markers/test-multi.c:60:
+		.probe_func = (marker_probe_func*)0xb },

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#124: FILE: samples/markers/test-multi.c:63:
+		.probe_func = (marker_probe_func*)0xc },

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#127: FILE: samples/markers/test-multi.c:66:
+		.probe_func = (marker_probe_func*)0xd },

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#130: FILE: samples/markers/test-multi.c:69:
+		.probe_func = (marker_probe_func*)0x10 },

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#133: FILE: samples/markers/test-multi.c:72:
+		.probe_func = (marker_probe_func*)0x20 },

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#136: FILE: samples/markers/test-multi.c:75:
+		.probe_func = (marker_probe_func*)0x30 },

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: samples/markers/test-multi.c:85:
+		result = marker_probe_register(probe_array[i].name,
+				probe_array[i].format,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#147: FILE: samples/markers/test-multi.c:86:
+				probe_array[i].probe_func, (void*)(long)i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#149: FILE: samples/markers/test-multi.c:88:
+			printk(KERN_INFO "Unable to register probe %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: samples/markers/test-multi.c:89:
+			printk(KERN_INFO "Unable to register probe %s\n",
+				probe_array[i].name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: samples/markers/test-multi.c:101:
+		result = marker_probe_unregister(probe_array[i].name,
+			probe_array[i].probe_func, (void*)(long)i);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#162: FILE: samples/markers/test-multi.c:101:
+			probe_array[i].probe_func, (void*)(long)i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#164: FILE: samples/markers/test-multi.c:103:
+			printk(KERN_INFO "Unable to unregister probe %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: samples/markers/test-multi.c:104:
+			printk(KERN_INFO "Unable to unregister probe %s\n",
+				probe_array[i].name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#167: FILE: samples/markers/test-multi.c:106:
+	printk(KERN_INFO "Number of event b : %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: samples/markers/test-multi.c:107:
+	printk(KERN_INFO "Number of event b : %u\n",
+		atomic_read(&eventb_count));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 6 warnings, 9 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
