WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git perf-fixes-for-linus

CHECK:BIT_MACRO: Prefer using the BIT macro
#198: FILE: arch/x86/include/asm/perf_event.h:21:
+#define ARCH_PERFMON_EVENTSEL_ENABLE			  (1 << 22)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#216: FILE: arch/x86/include/asm/perf_event.h:121:
+#define IBS_FETCH_RAND_EN		(1ULL<<57)
                          		     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#216: FILE: arch/x86/include/asm/perf_event.h:121:
+#define IBS_FETCH_RAND_EN		(1ULL<<57)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#217: FILE: arch/x86/include/asm/perf_event.h:122:
+#define IBS_FETCH_VAL			(1ULL<<49)
                      			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#217: FILE: arch/x86/include/asm/perf_event.h:122:
+#define IBS_FETCH_VAL			(1ULL<<49)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#218: FILE: arch/x86/include/asm/perf_event.h:123:
+#define IBS_FETCH_ENABLE		(1ULL<<48)
                         		     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#218: FILE: arch/x86/include/asm/perf_event.h:123:
+#define IBS_FETCH_ENABLE		(1ULL<<48)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#223: FILE: arch/x86/include/asm/perf_event.h:128:
+#define IBS_OP_CNT_CTL			(1ULL<<19)
                       			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#223: FILE: arch/x86/include/asm/perf_event.h:128:
+#define IBS_OP_CNT_CTL			(1ULL<<19)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#224: FILE: arch/x86/include/asm/perf_event.h:129:
+#define IBS_OP_VAL			(1ULL<<18)
                   			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#224: FILE: arch/x86/include/asm/perf_event.h:129:
+#define IBS_OP_VAL			(1ULL<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#225: FILE: arch/x86/include/asm/perf_event.h:130:
+#define IBS_OP_ENABLE			(1ULL<<17)
                      			     ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#225: FILE: arch/x86/include/asm/perf_event.h:130:
+#define IBS_OP_ENABLE			(1ULL<<17)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: arch/x86/kernel/cpu/perf_event.c:119:
+	EVENT_CONSTRAINT(c, (1ULL << (32+n)), INTEL_ARCH_FIXED_MASK)
 	                                ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#532: FILE: arch/x86/kernel/dumpstack_64.c:128:
+			return next;
+		else

WARNING:SPLIT_STRING: quoted string split across lines
#534: FILE: arch/x86/kernel/dumpstack_64.c:130:
+			WARN_ONCE(1, "Perf: bad frame pointer = %p in "
+				  "callchain\n", &frame->next_frame);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: include/linux/hw_breakpoint.h:76:
+extern void unregister_wide_hw_breakpoint(struct perf_event * __percpu *cpu_events);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perf_event * __percpu' should also have an identifier name
#690: FILE: include/linux/hw_breakpoint.h:76:
+extern void unregister_wide_hw_breakpoint(struct perf_event * __percpu *cpu_events);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'pevent' may be misspelled - perhaps 'prevent'?
#778: FILE: kernel/hw_breakpoint.c:420:
+	struct perf_event * __percpu *cpu_events, **pevent, *bp;
 	                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#994: FILE: tools/perf/builtin-lock.c:476:
+static u64 last_flush = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1046: FILE: tools/perf/builtin-lock.c:528:
+static void __queue_raw_event_after(struct raw_event_queue *new,
+				     struct raw_event_queue *iter)

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1110: FILE: tools/perf/builtin-lock.c:592:
+	 * If FLUSH_PERIOD is big enough, it ensures every events that occured
 	                                                               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1119: FILE: tools/perf/builtin-lock.c:601:
+	if (new->timestamp > flush_limit &&
+		new->timestamp - flush_limit > FLUSH_PERIOD) {

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1210: FILE: tools/perf/perf.h:68:
+#define rmb()		((void(*)(void))0xffff0fa0)()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1210: FILE: tools/perf/perf.h:68:
+#define rmb()		((void(*)(void))0xffff0fa0)()

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 17 checks, 927 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
