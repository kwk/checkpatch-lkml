WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#82: FILE: arch/x86/Kconfig:573:
+config LANGWELL_IPC
+       def_bool n
+       prompt "Langwell IPC Support" if (X86_32)
+       help
+         Langwell Inter Processor Communication block is used in Intel
+         Moorestown MID platform to bridge the communications between IA CPU
+         and System Controller Unit via SCU firmware.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#94: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: arch/x86/include/asm/mrst_ipcdefs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#114: FILE: arch/x86/include/asm/mrst_ipcdefs.h:16:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#115: FILE: arch/x86/include/asm/mrst_ipcdefs.h:17:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#134: FILE: arch/x86/include/asm/mrst_ipcdefs.h:36:
+ * drivers to MRST_IPCDriver
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'Thise' may be misspelled - perhaps 'These'?
#137: FILE: arch/x86/include/asm/mrst_ipcdefs.h:39:
+ * Thise commands are shared across MRST_IPCdriver
    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/x86/include/asm/mrst_ipcdefs.h:61:
+       u32 mrst_ipc_cmd_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/x86/include/asm/mrst_ipcdefs.h:72:
+       u8 cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/x86/include/asm/mrst_ipcdefs.h:73:
+       u32 data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/x86/include/asm/mrst_ipcdefs.h:74:
+       u8 value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/x86/include/asm/mrst_ipcdefs.h:75:
+       u8 ioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/x86/include/asm/mrst_ipcdefs.h:83:
+       int cca_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/x86/include/asm/mrst_ipcdefs.h:93:
+       u32 batt_value1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/x86/include/asm/mrst_ipcdefs.h:94:
+       u8 batt_value2[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/x86/include/asm/mrst_ipcdefs.h:95:
+       u32 ipc_cmd_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/x86/include/asm/mrst_ipcdefs.h:96:
+       u8 ioc;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#202: FILE: arch/x86/include/asm/mrst_ipcdefs.h:104:
+ * @u32 data - PMIC register data.
+*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/x86/include/asm/mrst_ipcdefs.h:106:
+       u8 ioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/x86/include/asm/mrst_ipcdefs.h:107:
+       u32 address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/x86/include/asm/mrst_ipcdefs.h:108:
+       u32 data;$

WARNING:TYPO_SPELLING: 'Commmand' may be misspelled - perhaps 'Command'?
#211: FILE: arch/x86/include/asm/mrst_ipcdefs.h:113:
+ * @u8 cmd - Commmand -  bit.
              ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#213: FILE: arch/x86/include/asm/mrst_ipcdefs.h:115:
+ * @u32 data - Command data.
+*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/x86/include/asm/mrst_ipcdefs.h:117:
+       u8 cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/x86/include/asm/mrst_ipcdefs.h:118:
+       u32 data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/x86/include/asm/mrst_ipcdefs.h:128:
+       u16 register_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/x86/include/asm/mrst_ipcdefs.h:129:
+       u8 value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/x86/include/asm/mrst_ipcdefs.h:130:
+       u8 bit_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/x86/include/asm/mrst_ipcdefs.h:139:
+       u16 register_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/x86/include/asm/mrst_ipcdefs.h:140:
+       u8 value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/x86/include/asm/mrst_ipcdefs.h:150:
+       bool ioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/x86/include/asm/mrst_ipcdefs.h:151:
+       struct pmicreg pmic_reg_data[MAX_PMICREGS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/x86/include/asm/mrst_ipcdefs.h:152:
+       u8 num_entries;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/x86/include/asm/mrst_ipcdefs.h:162:
+       bool ioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/x86/include/asm/mrst_ipcdefs.h:163:
+       struct pmicmodreg pmic_mod_reg_data[MAX_PMIC_MOD_REGS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/x86/include/asm/mrst_ipcdefs.h:164:
+       u8 num_entries;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#270: FILE: arch/x86/include/asm/mrst_ipcdefs.h:172:
+ * @bool ioc - MSI or IOC bit.
+*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/x86/include/asm/mrst_ipcdefs.h:174:
+       int payload1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/x86/include/asm/mrst_ipcdefs.h:175:
+       int payload2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/x86/include/asm/mrst_ipcdefs.h:176:
+       bool ioc;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#281: FILE: arch/x86/include/asm/mrst_ipcdefs.h:183:
+ * @u32 ctrl_reg_data - control register data -u32.
+*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/x86/include/asm/mrst_ipcdefs.h:185:
+       u32 ctrl_reg_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: arch/x86/include/asm/mrst_ipcdefs.h:186:
+       u32 ctrl_reg_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: arch/x86/include/asm/mrst_ipcdefs.h:194:
+                                 *p_read_mod_reg_data);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/x86/include/asm/mrst_ipcdefs.h:194:
+                                 *p_read_mod_reg_data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/x86/include/asm/mrst_ipcdefs.h:202:
+                       *p_reg_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/x86/include/asm/mrst_ipcdefs.h:202:
+                       *p_reg_data);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#322: FILE: arch/x86/kernel/mrst_ipc.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#337: FILE: arch/x86/kernel/mrst_ipc.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#338: FILE: arch/x86/kernel/mrst_ipc.c:17:
+ * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/x86/kernel/mrst_ipc.c:47:
+       unsigned long cadr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: arch/x86/kernel/mrst_ipc.c:49:
+       cadr = pci_resource_start(dev, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/x86/kernel/mrst_ipc.c:50:
+       if (!cadr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#371: FILE: arch/x86/kernel/mrst_ipc.c:50:
+       if (!cadr) {
+               dev_info(&dev->dev, "No PCI resource for IPC\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: arch/x86/kernel/mrst_ipc.c:51:
+               dev_info(&dev->dev, "No PCI resource for IPC\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/x86/kernel/mrst_ipc.c:51:
+               dev_info(&dev->dev, "No PCI resource for IPC\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: arch/x86/kernel/mrst_ipc.c:52:
+               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/x86/kernel/mrst_ipc.c:52:
+               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: arch/x86/kernel/mrst_ipc.c:53:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/x86/kernel/mrst_ipc.c:54:
+       lnw_ipc_virt_address = ioremap_nocache(cadr, 0x1000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/x86/kernel/mrst_ipc.c:55:
+       if (lnw_ipc_virt_address != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#376: FILE: arch/x86/kernel/mrst_ipc.c:55:
+       if (lnw_ipc_virt_address != NULL) {
+               dev_info(&dev->dev, "lnw ipc base found 0x%lup: 0x%p\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lnw_ipc_virt_address"
#376: FILE: arch/x86/kernel/mrst_ipc.c:55:
+       if (lnw_ipc_virt_address != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: arch/x86/kernel/mrst_ipc.c:56:
+               dev_info(&dev->dev, "lnw ipc base found 0x%lup: 0x%p\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: arch/x86/kernel/mrst_ipc.c:56:
+               dev_info(&dev->dev, "lnw ipc base found 0x%lup: 0x%p\n",$

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#377: FILE: arch/x86/kernel/mrst_ipc.c:56:
+               dev_info(&dev->dev, "lnw ipc base found 0x%lup: 0x%p\n",

Prefixing 0x with decimal output is defective and should be corrected.

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: arch/x86/kernel/mrst_ipc.c:57:
+                        cadr, lnw_ipc_virt_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/x86/kernel/mrst_ipc.c:57:
+                        cadr, lnw_ipc_virt_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/x86/kernel/mrst_ipc.c:58:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/x86/kernel/mrst_ipc.c:58:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/x86/kernel/mrst_ipc.c:59:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/x86/kernel/mrst_ipc.c:60:
+       dev_err(&dev->dev, "Failed map LNW IPC1 phy address at %lu\n", cadr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/x86/kernel/mrst_ipc.c:61:
+       return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/x86/kernel/mrst_ipc.c:66:
+       iounmap(lnw_ipc_virt_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/x86/kernel/mrst_ipc.c:67:
+       lnw_ipc_virt_address = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/x86/kernel/mrst_ipc.c:72:
+       return readl(lnw_ipc_virt_address + a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/x86/kernel/mrst_ipc.c:77:
+       writel(d, lnw_ipc_virt_address + a);$

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#408: FILE: arch/x86/kernel/mrst_ipc.c:87:
+ * SCU Firmware and recieve a response.
                     ^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/x86/kernel/mrst_ipc.c:91:
+       u32 cmdreg, stsreg, retry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/x86/kernel/mrst_ipc.c:93:
+       if (size >= 16) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#414: FILE: arch/x86/kernel/mrst_ipc.c:93:
+       if (size >= 16) {
+               WARN_ON(1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: arch/x86/kernel/mrst_ipc.c:94:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: arch/x86/kernel/mrst_ipc.c:94:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: arch/x86/kernel/mrst_ipc.c:95:
+               printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/x86/kernel/mrst_ipc.c:95:
+               printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#416: FILE: arch/x86/kernel/mrst_ipc.c:95:
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: arch/x86/kernel/mrst_ipc.c:96:
+                       "lnw_ipc_single_cmd: message size too big %d\n", size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/x86/kernel/mrst_ipc.c:96:
+                       "lnw_ipc_single_cmd: message size too big %d\n", size);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lnw_ipc_single_cmd', this function's name, in a string
#417: FILE: arch/x86/kernel/mrst_ipc.c:96:
+                       "lnw_ipc_single_cmd: message size too big %d\n", size);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/x86/kernel/mrst_ipc.c:97:
+               goto err_ipccmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/x86/kernel/mrst_ipc.c:97:
+               goto err_ipccmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/x86/kernel/mrst_ipc.c:98:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/x86/kernel/mrst_ipc.c:100:
+       WARN_ON(msi != 0 && msi != 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/x86/kernel/mrst_ipc.c:102:
+       cmdreg = cmd_id | (sub_id << 12) | (size << 16) | (msi << 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/x86/kernel/mrst_ipc.c:104:
+       lnw_ipc_writel(cmdreg, LNW_IPC_CMD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/x86/kernel/mrst_ipc.c:107:
+       retry = 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: arch/x86/kernel/mrst_ipc.c:108:
+       stsreg = lnw_ipc_readl(LNW_IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: arch/x86/kernel/mrst_ipc.c:109:
+       if (stsreg & LNW_IPC_STS_ERR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#430: FILE: arch/x86/kernel/mrst_ipc.c:109:
+       if (stsreg & LNW_IPC_STS_ERR) {
+               lnw_ipc_dbg("MRST IPC command ID %d error\n", cmd_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: arch/x86/kernel/mrst_ipc.c:110:
+               lnw_ipc_dbg("MRST IPC command ID %d error\n", cmd_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: arch/x86/kernel/mrst_ipc.c:110:
+               lnw_ipc_dbg("MRST IPC command ID %d error\n", cmd_id);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: arch/x86/kernel/mrst_ipc.c:111:
+               goto err_ipccmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: arch/x86/kernel/mrst_ipc.c:111:
+               goto err_ipccmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: arch/x86/kernel/mrst_ipc.c:112:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/x86/kernel/mrst_ipc.c:113:
+       while ((stsreg & LNW_IPC_STS_BUSY) && retry) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#434: FILE: arch/x86/kernel/mrst_ipc.c:113:
+       while ((stsreg & LNW_IPC_STS_BUSY) && retry) {
+               lnw_ipc_dbg("MRST IPC command ID %d busy\n", cmd_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: arch/x86/kernel/mrst_ipc.c:114:
+               lnw_ipc_dbg("MRST IPC command ID %d busy\n", cmd_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/x86/kernel/mrst_ipc.c:114:
+               lnw_ipc_dbg("MRST IPC command ID %d busy\n", cmd_id);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: arch/x86/kernel/mrst_ipc.c:115:
+               stsreg = lnw_ipc_readl(LNW_IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: arch/x86/kernel/mrst_ipc.c:115:
+               stsreg = lnw_ipc_readl(LNW_IPC_STS);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: arch/x86/kernel/mrst_ipc.c:116:
+               udelay(10);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: arch/x86/kernel/mrst_ipc.c:116:
+               udelay(10);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#437: FILE: arch/x86/kernel/mrst_ipc.c:116:
+               udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: arch/x86/kernel/mrst_ipc.c:117:
+               retry--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: arch/x86/kernel/mrst_ipc.c:117:
+               retry--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/x86/kernel/mrst_ipc.c:118:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/x86/kernel/mrst_ipc.c:120:
+       if (!retry)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#441: FILE: arch/x86/kernel/mrst_ipc.c:120:
+       if (!retry)
+               printk(KERN_ERR "lnw_ipc_single_cmd: cmd %d failed/timeout",

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: arch/x86/kernel/mrst_ipc.c:121:
+               printk(KERN_ERR "lnw_ipc_single_cmd: cmd %d failed/timeout",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: arch/x86/kernel/mrst_ipc.c:121:
+               printk(KERN_ERR "lnw_ipc_single_cmd: cmd %d failed/timeout",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: arch/x86/kernel/mrst_ipc.c:121:
+               printk(KERN_ERR "lnw_ipc_single_cmd: cmd %d failed/timeout",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lnw_ipc_single_cmd', this function's name, in a string
#442: FILE: arch/x86/kernel/mrst_ipc.c:121:
+               printk(KERN_ERR "lnw_ipc_single_cmd: cmd %d failed/timeout",

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: arch/x86/kernel/mrst_ipc.c:122:
+                                                               cmd_id);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: arch/x86/kernel/mrst_ipc.c:122:
+               printk(KERN_ERR "lnw_ipc_single_cmd: cmd %d failed/timeout",
+                                                               cmd_id);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: arch/x86/kernel/mrst_ipc.c:122:
+                                                               cmd_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: arch/x86/kernel/mrst_ipc.c:123:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#444: FILE: arch/x86/kernel/mrst_ipc.c:123:
+       else
+               lnw_ipc_dbg("MRST IPC command ID %d completed\n", cmd_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: arch/x86/kernel/mrst_ipc.c:124:
+               lnw_ipc_dbg("MRST IPC command ID %d completed\n", cmd_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: arch/x86/kernel/mrst_ipc.c:124:
+               lnw_ipc_dbg("MRST IPC command ID %d completed\n", cmd_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: arch/x86/kernel/mrst_ipc.c:126:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: arch/x86/kernel/mrst_ipc.c:129:
+       return -1;$

WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#458: FILE: arch/x86/kernel/mrst_ipc.c:137:
+ * new command untill it recieves an EOI from IPC driver.
                ^^^^^^

WARNING:TYPO_SPELLING: 'recieves' may be misspelled - perhaps 'receives'?
#458: FILE: arch/x86/kernel/mrst_ipc.c:137:
+ * new command untill it recieves an EOI from IPC driver.
                          ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/x86/kernel/mrst_ipc.c:141:
+       union mrst_ipc_sts ipc_sts_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/x86/kernel/mrst_ipc.c:143:
+       ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/x86/kernel/mrst_ipc.c:145:
+       if (!ipc_sts_reg.ipc_sts_parts.busy) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#466: FILE: arch/x86/kernel/mrst_ipc.c:145:
+       if (!ipc_sts_reg.ipc_sts_parts.busy) {
+               scu_cmd_completed = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/x86/kernel/mrst_ipc.c:146:
+               scu_cmd_completed = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/x86/kernel/mrst_ipc.c:146:
+               scu_cmd_completed = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/x86/kernel/mrst_ipc.c:147:
+               wake_up_interruptible(&mrst_cmd_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/x86/kernel/mrst_ipc.c:147:
+               wake_up_interruptible(&mrst_cmd_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/x86/kernel/mrst_ipc.c:148:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#469: FILE: arch/x86/kernel/mrst_ipc.c:148:
+       } else
[...]
+               dev_err(&mrst_ipc_pci_dev->dev,

CHECK:BRACES: Unbalanced braces around else statement
#469: FILE: arch/x86/kernel/mrst_ipc.c:148:
+       } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: arch/x86/kernel/mrst_ipc.c:149:
+               /*This IRQ is private.*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/x86/kernel/mrst_ipc.c:150:
+               dev_err(&mrst_ipc_pci_dev->dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/x86/kernel/mrst_ipc.c:150:
+               dev_err(&mrst_ipc_pci_dev->dev,$

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#472: FILE: arch/x86/kernel/mrst_ipc.c:151:
+                               "Spurious IPC Interrupt recieved\n");
                                                        ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: arch/x86/kernel/mrst_ipc.c:151:
+                               "Spurious IPC Interrupt recieved\n");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: arch/x86/kernel/mrst_ipc.c:151:
+               dev_err(&mrst_ipc_pci_dev->dev,
+                               "Spurious IPC Interrupt recieved\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/x86/kernel/mrst_ipc.c:151:
+                               "Spurious IPC Interrupt recieved\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/x86/kernel/mrst_ipc.c:153:
+       return IRQ_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: arch/x86/kernel/mrst_ipc.c:157:
+       .name = "MRST IPC Controller",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: arch/x86/kernel/mrst_ipc.c:159:
+        * generic hardware linkage$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/x86/kernel/mrst_ipc.c:160:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/x86/kernel/mrst_ipc.c:161:
+       .irq = mrst_ipc_irq,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: arch/x86/kernel/mrst_ipc.c:162:
+       .flags = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: arch/x86/kernel/mrst_ipc.c:166:
+                                       const struct pci_device_id *id)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: arch/x86/kernel/mrst_ipc.c:166:
+static int ipc_mrst_pci_probe(struct pci_dev *dev,
+                                       const struct pci_device_id *id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: arch/x86/kernel/mrst_ipc.c:166:
+                                       const struct pci_device_id *id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/x86/kernel/mrst_ipc.c:168:
+       int err, retval = 0, i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/x86/kernel/mrst_ipc.c:170:
+       mrst_ipc_pci_dev = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/x86/kernel/mrst_ipc.c:171:
+       lnw_ipc_dbg("Attempt to enable IPC irq 0x%x, pin %d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: arch/x86/kernel/mrst_ipc.c:172:
+               dev->irq, dev->pin);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: arch/x86/kernel/mrst_ipc.c:172:
+       lnw_ipc_dbg("Attempt to enable IPC irq 0x%x, pin %d\n",
+               dev->irq, dev->pin);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/x86/kernel/mrst_ipc.c:172:
+               dev->irq, dev->pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: arch/x86/kernel/mrst_ipc.c:173:
+       err = pci_enable_device(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/x86/kernel/mrst_ipc.c:174:
+       if (err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#495: FILE: arch/x86/kernel/mrst_ipc.c:174:
+       if (err) {
+               dev_err(&dev->dev, "Failed to enable MSRT IPC(%d)\n", err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: arch/x86/kernel/mrst_ipc.c:175:
+               dev_err(&dev->dev, "Failed to enable MSRT IPC(%d)\n", err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/x86/kernel/mrst_ipc.c:175:
+               dev_err(&dev->dev, "Failed to enable MSRT IPC(%d)\n", err);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: arch/x86/kernel/mrst_ipc.c:176:
+               goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: arch/x86/kernel/mrst_ipc.c:176:
+               goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/x86/kernel/mrst_ipc.c:177:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: arch/x86/kernel/mrst_ipc.c:178:
+       retval = pci_request_regions(dev, "ipc_mrst");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: arch/x86/kernel/mrst_ipc.c:179:
+       if (retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#500: FILE: arch/x86/kernel/mrst_ipc.c:179:
+       if (retval) {
+               dev_err(&dev->dev, "Failed to allocate resource\

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: arch/x86/kernel/mrst_ipc.c:180:
+               dev_err(&dev->dev, "Failed to allocate resource\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: arch/x86/kernel/mrst_ipc.c:180:
+               dev_err(&dev->dev, "Failed to allocate resource\$

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#501: FILE: arch/x86/kernel/mrst_ipc.c:180:
+               dev_err(&dev->dev, "Failed to allocate resource\

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: arch/x86/kernel/mrst_ipc.c:181:
+                                       for MRST IPC(%d)\n", retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/x86/kernel/mrst_ipc.c:181:
+                                       for MRST IPC(%d)\n", retval);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: arch/x86/kernel/mrst_ipc.c:182:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/x86/kernel/mrst_ipc.c:182:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/x86/kernel/mrst_ipc.c:183:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: arch/x86/kernel/mrst_ipc.c:184:
+       init_mrst_ipc_driver();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/x86/kernel/mrst_ipc.c:187:
+       cmdid_pool = 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/x86/kernel/mrst_ipc.c:189:
+       retval = lnw_ipc_set_mapping(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: arch/x86/kernel/mrst_ipc.c:190:
+       if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#511: FILE: arch/x86/kernel/mrst_ipc.c:190:
+       if (retval)
+               goto fail;

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: arch/x86/kernel/mrst_ipc.c:191:
+               goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/x86/kernel/mrst_ipc.c:191:
+               goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/x86/kernel/mrst_ipc.c:194:
+       for (i = 0; i < LNW_IPC_RWBUF_SIZE; i = i + 4) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#515: FILE: arch/x86/kernel/mrst_ipc.c:194:
+       for (i = 0; i < LNW_IPC_RWBUF_SIZE; i = i + 4) {
+               lnw_ipc_writel(0, LNW_IPC_WBUF + i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: arch/x86/kernel/mrst_ipc.c:195:
+               lnw_ipc_writel(0, LNW_IPC_WBUF + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: arch/x86/kernel/mrst_ipc.c:195:
+               lnw_ipc_writel(0, LNW_IPC_WBUF + i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: arch/x86/kernel/mrst_ipc.c:196:
+               lnw_ipc_writel(0, LNW_IPC_RBUF + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/x86/kernel/mrst_ipc.c:196:
+               lnw_ipc_writel(0, LNW_IPC_RBUF + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/x86/kernel/mrst_ipc.c:197:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: arch/x86/kernel/mrst_ipc.c:198:
+       retval = request_irq(dev->irq, mrst_ipc_irq, 0, "ipc_mrst",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: arch/x86/kernel/mrst_ipc.c:199:
+                                               (void *)&ipc_mrst_driver);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: arch/x86/kernel/mrst_ipc.c:199:
+       retval = request_irq(dev->irq, mrst_ipc_irq, 0, "ipc_mrst",
+                                               (void *)&ipc_mrst_driver);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: arch/x86/kernel/mrst_ipc.c:199:
+                                               (void *)&ipc_mrst_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/x86/kernel/mrst_ipc.c:200:
+       if (retval == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#521: FILE: arch/x86/kernel/mrst_ipc.c:200:
+       if (retval == 0)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: arch/x86/kernel/mrst_ipc.c:201:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/x86/kernel/mrst_ipc.c:201:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/x86/kernel/mrst_ipc.c:203:
+       dev_err(&dev->dev, "ipc_mrst_pci_probe: cannot register ISR %p irq %d\$

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#524: FILE: arch/x86/kernel/mrst_ipc.c:203:
+       dev_err(&dev->dev, "ipc_mrst_pci_probe: cannot register ISR %p irq %d\

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: arch/x86/kernel/mrst_ipc.c:204:
+                               ret %d\n", mrst_ipc_irq, dev->irq, retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/x86/kernel/mrst_ipc.c:204:
+                               ret %d\n", mrst_ipc_irq, dev->irq, retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/x86/kernel/mrst_ipc.c:206:
+       pci_release_regions(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/x86/kernel/mrst_ipc.c:207:
+       return retval;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#530: FILE: arch/x86/kernel/mrst_ipc.c:209:
+
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/x86/kernel/mrst_ipc.c:213:
+       pci_release_regions(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: arch/x86/kernel/mrst_ipc.c:218:
+       {PCI_DEVICE(PCI_VENDOR_ID_INTEL, 0x080e)}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: arch/x86/kernel/mrst_ipc.c:225:
+       .name = "ipc_mrst",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: arch/x86/kernel/mrst_ipc.c:226:
+       .id_table = pci_ids,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: arch/x86/kernel/mrst_ipc.c:227:
+       .probe = ipc_mrst_pci_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/x86/kernel/mrst_ipc.c:228:
+       .remove = ipc_mrst_pci_remove,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/x86/kernel/mrst_ipc.c:233:
+       int retval;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#555: FILE: arch/x86/kernel/mrst_ipc.c:234:
+       int retval;
+       retval = pci_register_driver(&ipc_mrst_pci_driver);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/x86/kernel/mrst_ipc.c:234:
+       retval = pci_register_driver(&ipc_mrst_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: arch/x86/kernel/mrst_ipc.c:235:
+       if (retval < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#556: FILE: arch/x86/kernel/mrst_ipc.c:235:
+       if (retval < 0) {
+               printk(KERN_ERR "ipc_mrst_init: Failed to register %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: arch/x86/kernel/mrst_ipc.c:236:
+               printk(KERN_ERR "ipc_mrst_init: Failed to register %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: arch/x86/kernel/mrst_ipc.c:236:
+               printk(KERN_ERR "ipc_mrst_init: Failed to register %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#557: FILE: arch/x86/kernel/mrst_ipc.c:236:
+               printk(KERN_ERR "ipc_mrst_init: Failed to register %s\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipc_mrst_init', this function's name, in a string
#557: FILE: arch/x86/kernel/mrst_ipc.c:236:
+               printk(KERN_ERR "ipc_mrst_init: Failed to register %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: arch/x86/kernel/mrst_ipc.c:237:
+                       ipc_mrst_pci_driver.name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: arch/x86/kernel/mrst_ipc.c:237:
+               printk(KERN_ERR "ipc_mrst_init: Failed to register %s\n",
+                       ipc_mrst_pci_driver.name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/x86/kernel/mrst_ipc.c:237:
+                       ipc_mrst_pci_driver.name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/x86/kernel/mrst_ipc.c:238:
+               pci_unregister_driver(&ipc_mrst_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/x86/kernel/mrst_ipc.c:238:
+               pci_unregister_driver(&ipc_mrst_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/x86/kernel/mrst_ipc.c:239:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#560: FILE: arch/x86/kernel/mrst_ipc.c:239:
+       } else {
+               printk(KERN_INFO "****Loaded %s driver version %s****\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: arch/x86/kernel/mrst_ipc.c:240:
+               printk(KERN_INFO "****Loaded %s driver version %s****\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: arch/x86/kernel/mrst_ipc.c:240:
+               printk(KERN_INFO "****Loaded %s driver version %s****\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#561: FILE: arch/x86/kernel/mrst_ipc.c:240:
+               printk(KERN_INFO "****Loaded %s driver version %s****\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: arch/x86/kernel/mrst_ipc.c:241:
+               ipc_mrst_pci_driver.name, MRST_IPC_DRIVER_VERSION);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: arch/x86/kernel/mrst_ipc.c:241:
+               printk(KERN_INFO "****Loaded %s driver version %s****\n",
+               ipc_mrst_pci_driver.name, MRST_IPC_DRIVER_VERSION);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: arch/x86/kernel/mrst_ipc.c:241:
+               ipc_mrst_pci_driver.name, MRST_IPC_DRIVER_VERSION);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: arch/x86/kernel/mrst_ipc.c:242:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/x86/kernel/mrst_ipc.c:243:
+       return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: arch/x86/kernel/mrst_ipc.c:248:
+       free_irq(mrst_ipc_pci_dev->irq, mrst_ipc_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/x86/kernel/mrst_ipc.c:249:
+       iounmap(p_mrst_ipc_base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/x86/kernel/mrst_ipc.c:250:
+       iounmap(p_mrst_i2c_ser_bus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: arch/x86/kernel/mrst_ipc.c:251:
+       pci_unregister_driver(&ipc_mrst_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/x86/kernel/mrst_ipc.c:252:
+       de_init_mrst_ipc_driver();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/x86/kernel/mrst_ipc.c:265:
+       u32 data = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: arch/x86/kernel/mrst_ipc.c:267:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/x86/kernel/mrst_ipc.c:268:
+       *err = do_mrst_ipc_battery(CCA_REG_READ, ioc, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/x86/kernel/mrst_ipc.c:269:
+       if (*err == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#590: FILE: arch/x86/kernel/mrst_ipc.c:269:
+       if (*err == 0)
+               data = readl(p_mrst_ipc_base + IPC_RBUF);

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: arch/x86/kernel/mrst_ipc.c:270:
+               data = readl(p_mrst_ipc_base + IPC_RBUF);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/x86/kernel/mrst_ipc.c:270:
+               data = readl(p_mrst_ipc_base + IPC_RBUF);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/x86/kernel/mrst_ipc.c:271:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/x86/kernel/mrst_ipc.c:273:
+       return data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: arch/x86/kernel/mrst_ipc.c:287:
+       int ret;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: arch/x86/kernel/mrst_ipc.c:288:
+       int ret;
+       mutex_lock(&mrst_ipc_mutex);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: arch/x86/kernel/mrst_ipc.c:288:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/x86/kernel/mrst_ipc.c:289:
+       ret = do_mrst_ipc_battery(CCA_REG_WRITE, ioc, &value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/x86/kernel/mrst_ipc.c:290:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/x86/kernel/mrst_ipc.c:291:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/x86/kernel/mrst_ipc.c:305:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/x86/kernel/mrst_ipc.c:306:
+       u32 rbuf_offset = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/x86/kernel/mrst_ipc.c:307:
+       u32 ipc_wbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/x86/kernel/mrst_ipc.c:308:
+       u8 cbuf[MAX_NUM_ENTRIES] = { '\0' };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/x86/kernel/mrst_ipc.c:309:
+       u32 i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/x86/kernel/mrst_ipc.c:311:
+       if (mrst_batt_prop == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#632: FILE: arch/x86/kernel/mrst_ipc.c:311:
+       if (mrst_batt_prop == NULL) {
+               mutex_unlock(&mrst_ipc_mutex);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mrst_batt_prop"
#632: FILE: arch/x86/kernel/mrst_ipc.c:311:
+       if (mrst_batt_prop == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: arch/x86/kernel/mrst_ipc.c:312:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: arch/x86/kernel/mrst_ipc.c:312:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: arch/x86/kernel/mrst_ipc.c:313:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: arch/x86/kernel/mrst_ipc.c:313:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/x86/kernel/mrst_ipc.c:314:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: arch/x86/kernel/mrst_ipc.c:315:
+       if (mrst_batt_prop->ipc_cmd_len < 4 ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#636: FILE: arch/x86/kernel/mrst_ipc.c:315:
+       if (mrst_batt_prop->ipc_cmd_len < 4 ||
[...]
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: arch/x86/kernel/mrst_ipc.c:316:
+                               mrst_batt_prop->ipc_cmd_len > 9) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: arch/x86/kernel/mrst_ipc.c:316:
+       if (mrst_batt_prop->ipc_cmd_len < 4 ||
+                               mrst_batt_prop->ipc_cmd_len > 9) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/x86/kernel/mrst_ipc.c:316:
+                               mrst_batt_prop->ipc_cmd_len > 9) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: arch/x86/kernel/mrst_ipc.c:317:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: arch/x86/kernel/mrst_ipc.c:317:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: arch/x86/kernel/mrst_ipc.c:318:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/x86/kernel/mrst_ipc.c:318:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: arch/x86/kernel/mrst_ipc.c:319:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: arch/x86/kernel/mrst_ipc.c:321:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: arch/x86/kernel/mrst_ipc.c:322:
+       ret = do_mrst_ipc_battery(CCA_REG_GET_PROP, mrst_batt_prop->ioc, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: arch/x86/kernel/mrst_ipc.c:323:
+       if (ret)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#644: FILE: arch/x86/kernel/mrst_ipc.c:323:
+       if (ret)
+               return ret; /*return error*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: arch/x86/kernel/mrst_ipc.c:324:
+               return ret; /*return error*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: arch/x86/kernel/mrst_ipc.c:324:
+               return ret; /*return error*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: arch/x86/kernel/mrst_ipc.c:327:
+       rbuf_offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: arch/x86/kernel/mrst_ipc.c:329:
+       if (mrst_batt_prop->ipc_cmd_len >= 4) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#650: FILE: arch/x86/kernel/mrst_ipc.c:329:
+       if (mrst_batt_prop->ipc_cmd_len >= 4) {
+               ipc_wbuf = readl(p_mrst_ipc_base + IPC_RBUF);

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: arch/x86/kernel/mrst_ipc.c:330:
+               ipc_wbuf = readl(p_mrst_ipc_base + IPC_RBUF);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: arch/x86/kernel/mrst_ipc.c:330:
+               ipc_wbuf = readl(p_mrst_ipc_base + IPC_RBUF);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: arch/x86/kernel/mrst_ipc.c:331:
+               rbuf_offset += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/x86/kernel/mrst_ipc.c:331:
+               rbuf_offset += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: arch/x86/kernel/mrst_ipc.c:332:
+               for (i = 0; i < (mrst_batt_prop->ipc_cmd_len - 4); i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: arch/x86/kernel/mrst_ipc.c:332:
+               for (i = 0; i < (mrst_batt_prop->ipc_cmd_len - 4); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#653: FILE: arch/x86/kernel/mrst_ipc.c:332:
+               for (i = 0; i < (mrst_batt_prop->ipc_cmd_len - 4); i++) {
+                       cbuf[i] = readb(p_mrst_ipc_base + IPC_RBUF +

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: arch/x86/kernel/mrst_ipc.c:333:
+                       cbuf[i] = readb(p_mrst_ipc_base + IPC_RBUF +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: arch/x86/kernel/mrst_ipc.c:333:
+                       cbuf[i] = readb(p_mrst_ipc_base + IPC_RBUF +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: arch/x86/kernel/mrst_ipc.c:334:
+                                                               rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: arch/x86/kernel/mrst_ipc.c:334:
+                                                               rbuf_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: arch/x86/kernel/mrst_ipc.c:335:
+                       mrst_batt_prop->batt_value2[i] = cbuf[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: arch/x86/kernel/mrst_ipc.c:335:
+                       mrst_batt_prop->batt_value2[i] = cbuf[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: arch/x86/kernel/mrst_ipc.c:336:
+                       rbuf_offset++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: arch/x86/kernel/mrst_ipc.c:336:
+                       rbuf_offset++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: arch/x86/kernel/mrst_ipc.c:337:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: arch/x86/kernel/mrst_ipc.c:337:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: arch/x86/kernel/mrst_ipc.c:338:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: arch/x86/kernel/mrst_ipc.c:339:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: arch/x86/kernel/mrst_ipc.c:340:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: arch/x86/kernel/mrst_ipc.c:346:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: arch/x86/kernel/mrst_ipc.c:347:
+       init_waitqueue_head(&mrst_cmd_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: arch/x86/kernel/mrst_ipc.c:350:
+       p_mrst_ipc_base = ioremap_nocache(IPC_BASE_ADDRESS, IPC_MAX_ADDRESS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: arch/x86/kernel/mrst_ipc.c:351:
+       if (p_mrst_ipc_base == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#672: FILE: arch/x86/kernel/mrst_ipc.c:351:
+       if (p_mrst_ipc_base == NULL) {
+               dev_err(&mrst_ipc_pci_dev->dev, "ERR:IPC Address Map Failed\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_mrst_ipc_base"
#672: FILE: arch/x86/kernel/mrst_ipc.c:351:
+       if (p_mrst_ipc_base == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: arch/x86/kernel/mrst_ipc.c:352:
+               dev_err(&mrst_ipc_pci_dev->dev, "ERR:IPC Address Map Failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: arch/x86/kernel/mrst_ipc.c:352:
+               dev_err(&mrst_ipc_pci_dev->dev, "ERR:IPC Address Map Failed\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: arch/x86/kernel/mrst_ipc.c:353:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: arch/x86/kernel/mrst_ipc.c:353:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: arch/x86/kernel/mrst_ipc.c:354:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: arch/x86/kernel/mrst_ipc.c:354:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: arch/x86/kernel/mrst_ipc.c:355:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: arch/x86/kernel/mrst_ipc.c:357:
+       p_mrst_i2c_ser_bus = ioremap_nocache(I2C_SER_BUS, I2C_MAX_ADDRESS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: arch/x86/kernel/mrst_ipc.c:358:
+       if (p_mrst_i2c_ser_bus == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#679: FILE: arch/x86/kernel/mrst_ipc.c:358:
+       if (p_mrst_i2c_ser_bus == NULL) {
+               iounmap(p_mrst_ipc_base);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_mrst_i2c_ser_bus"
#679: FILE: arch/x86/kernel/mrst_ipc.c:358:
+       if (p_mrst_i2c_ser_bus == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: arch/x86/kernel/mrst_ipc.c:359:
+               iounmap(p_mrst_ipc_base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: arch/x86/kernel/mrst_ipc.c:359:
+               iounmap(p_mrst_ipc_base);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: arch/x86/kernel/mrst_ipc.c:360:
+               dev_err(&mrst_ipc_pci_dev->dev, "ERR:IPC Address Map Failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: arch/x86/kernel/mrst_ipc.c:360:
+               dev_err(&mrst_ipc_pci_dev->dev, "ERR:IPC Address Map Failed\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: arch/x86/kernel/mrst_ipc.c:361:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: arch/x86/kernel/mrst_ipc.c:361:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: arch/x86/kernel/mrst_ipc.c:362:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: arch/x86/kernel/mrst_ipc.c:362:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: arch/x86/kernel/mrst_ipc.c:363:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: arch/x86/kernel/mrst_ipc.c:365:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: arch/x86/kernel/mrst_ipc.c:367:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: arch/x86/kernel/mrst_ipc.c:372:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/x86/kernel/mrst_ipc.c:374:
+       lnw_ipc_dbg($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#695: FILE: arch/x86/kernel/mrst_ipc.c:374:
+       lnw_ipc_dbg(

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: arch/x86/kernel/mrst_ipc.c:375:
+                       "ipc_driver: in <%s> -> <%s> file at line no = <%d>\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: arch/x86/kernel/mrst_ipc.c:375:
+                       "ipc_driver: in <%s> -> <%s> file at line no = <%d>\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: arch/x86/kernel/mrst_ipc.c:376:
+                       __func__, __FILE__, __LINE__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: arch/x86/kernel/mrst_ipc.c:376:
+                       __func__, __FILE__, __LINE__);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: arch/x86/kernel/mrst_ipc.c:377:
+               iounmap(p_mrst_ipc_base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: arch/x86/kernel/mrst_ipc.c:377:
+               iounmap(p_mrst_ipc_base);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: arch/x86/kernel/mrst_ipc.c:378:
+               iounmap(p_mrst_i2c_ser_bus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: arch/x86/kernel/mrst_ipc.c:378:
+               iounmap(p_mrst_i2c_ser_bus);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: arch/x86/kernel/mrst_ipc.c:379:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: arch/x86/kernel/mrst_ipc.c:379:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: arch/x86/kernel/mrst_ipc.c:381:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: arch/x86/kernel/mrst_ipc.c:381:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: arch/x86/kernel/mrst_ipc.c:382:
+       }$

WARNING:TYPO_SPELLING: 'speicify' may be misspelled - perhaps 'specify'?
#709: FILE: arch/x86/kernel/mrst_ipc.c:388:
+ * @bool ioc_notify: boolean_value to speicify Interrupt On Completion bit.
                                       ^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'data'
#712: FILE: arch/x86/kernel/mrst_ipc.c:391:
+ * This function reads 1byte of data data from specified PMIC register offset.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: arch/x86/kernel/mrst_ipc.c:396:
+       struct mrst_pmic_reg_data r_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: arch/x86/kernel/mrst_ipc.c:397:
+       int ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: arch/x86/kernel/mrst_ipc.c:399:
+       r_data.ioc = ioc_notify;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: arch/x86/kernel/mrst_ipc.c:400:
+       r_data.num_entries = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: arch/x86/kernel/mrst_ipc.c:401:
+       r_data.pmic_reg_data[0].register_address = addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: arch/x86/kernel/mrst_ipc.c:403:
+       ret_val = mrst_pmic_ioread(&r_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: arch/x86/kernel/mrst_ipc.c:404:
+       *err = ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: arch/x86/kernel/mrst_ipc.c:405:
+       if (ret_val) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#726: FILE: arch/x86/kernel/mrst_ipc.c:405:
+       if (ret_val) {
+               printk(KERN_ERR "mrst_pmic_ioreadb: ioreadb failed! \n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: arch/x86/kernel/mrst_ipc.c:406:
+               printk(KERN_ERR "mrst_pmic_ioreadb: ioreadb failed! \n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: arch/x86/kernel/mrst_ipc.c:406:
+               printk(KERN_ERR "mrst_pmic_ioreadb: ioreadb failed! \n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#727: FILE: arch/x86/kernel/mrst_ipc.c:406:
+               printk(KERN_ERR "mrst_pmic_ioreadb: ioreadb failed! \n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_pmic_ioreadb', this function's name, in a string
#727: FILE: arch/x86/kernel/mrst_ipc.c:406:
+               printk(KERN_ERR "mrst_pmic_ioreadb: ioreadb failed! \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#727: FILE: arch/x86/kernel/mrst_ipc.c:406:
+               printk(KERN_ERR "mrst_pmic_ioreadb: ioreadb failed! \n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: arch/x86/kernel/mrst_ipc.c:407:
+               return 0xFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: arch/x86/kernel/mrst_ipc.c:407:
+               return 0xFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: arch/x86/kernel/mrst_ipc.c:408:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: arch/x86/kernel/mrst_ipc.c:409:
+       return r_data.pmic_reg_data[0].value;$

WARNING:TYPO_SPELLING: 'speicify' may be misspelled - perhaps 'specify'?
#738: FILE: arch/x86/kernel/mrst_ipc.c:417:
+ * @bool ioc_notify: boolean_value to speicify Interrupt On Completion bit.
                                       ^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'data'
#741: FILE: arch/x86/kernel/mrst_ipc.c:420:
+ * This function reads 1byte of data data from specified PMIC register offset.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: arch/x86/kernel/mrst_ipc.c:425:
+       struct mrst_pmic_reg_data w_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: arch/x86/kernel/mrst_ipc.c:426:
+       int ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: arch/x86/kernel/mrst_ipc.c:428:
+       w_data.ioc = ioc_notify;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: arch/x86/kernel/mrst_ipc.c:429:
+       w_data.num_entries = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: arch/x86/kernel/mrst_ipc.c:430:
+       w_data.pmic_reg_data[0].register_address = addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: arch/x86/kernel/mrst_ipc.c:431:
+       w_data.pmic_reg_data[0].value = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: arch/x86/kernel/mrst_ipc.c:433:
+       ret_val = mrst_pmic_iowrite(&w_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/x86/kernel/mrst_ipc.c:434:
+       if (ret_val) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#755: FILE: arch/x86/kernel/mrst_ipc.c:434:
+       if (ret_val) {
+               printk(KERN_ERR "MRST IPC writeb failed! \n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: arch/x86/kernel/mrst_ipc.c:435:
+               printk(KERN_ERR "MRST IPC writeb failed! \n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: arch/x86/kernel/mrst_ipc.c:435:
+               printk(KERN_ERR "MRST IPC writeb failed! \n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#756: FILE: arch/x86/kernel/mrst_ipc.c:435:
+               printk(KERN_ERR "MRST IPC writeb failed! \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#756: FILE: arch/x86/kernel/mrst_ipc.c:435:
+               printk(KERN_ERR "MRST IPC writeb failed! \n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: arch/x86/kernel/mrst_ipc.c:436:
+               return ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: arch/x86/kernel/mrst_ipc.c:436:
+               return ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: arch/x86/kernel/mrst_ipc.c:437:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: arch/x86/kernel/mrst_ipc.c:438:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: arch/x86/kernel/mrst_ipc.c:454:
+       union mrst_ipc_fw_cmd ipc_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: arch/x86/kernel/mrst_ipc.c:455:
+       u32 *ipc_wbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: arch/x86/kernel/mrst_ipc.c:456:
+       u8 cbuf[IPC_BUF_LEN] = { '\0' };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: arch/x86/kernel/mrst_ipc.c:457:
+       u32 cnt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: arch/x86/kernel/mrst_ipc.c:458:
+       u32 i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: arch/x86/kernel/mrst_ipc.c:459:
+       u32 rbuf_offset = 2;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#781: FILE: arch/x86/kernel/mrst_ipc.c:460:
+       u32 rbuf_offset = 2;
+       ipc_wbuf = (u32 *)&cbuf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: arch/x86/kernel/mrst_ipc.c:460:
+       ipc_wbuf = (u32 *)&cbuf;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#783: FILE: arch/x86/kernel/mrst_ipc.c:462:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: arch/x86/kernel/mrst_ipc.c:463:
+       if (p_read_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#784: FILE: arch/x86/kernel/mrst_ipc.c:463:
+       if (p_read_reg_data == NULL) {
+               printk(KERN_ERR "mrst_pmic_ioread: No reg data\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_read_reg_data"
#784: FILE: arch/x86/kernel/mrst_ipc.c:463:
+       if (p_read_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: arch/x86/kernel/mrst_ipc.c:464:
+               printk(KERN_ERR "mrst_pmic_ioread: No reg data\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: arch/x86/kernel/mrst_ipc.c:464:
+               printk(KERN_ERR "mrst_pmic_ioread: No reg data\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#785: FILE: arch/x86/kernel/mrst_ipc.c:464:
+               printk(KERN_ERR "mrst_pmic_ioread: No reg data\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_pmic_ioread', this function's name, in a string
#785: FILE: arch/x86/kernel/mrst_ipc.c:464:
+               printk(KERN_ERR "mrst_pmic_ioread: No reg data\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: arch/x86/kernel/mrst_ipc.c:465:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: arch/x86/kernel/mrst_ipc.c:465:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: arch/x86/kernel/mrst_ipc.c:466:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: arch/x86/kernel/mrst_ipc.c:466:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: arch/x86/kernel/mrst_ipc.c:467:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: arch/x86/kernel/mrst_ipc.c:468:
+       if (p_read_reg_data->num_entries > MAX_NUM_ENTRIES) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#789: FILE: arch/x86/kernel/mrst_ipc.c:468:
+       if (p_read_reg_data->num_entries > MAX_NUM_ENTRIES) {
+               printk(KERN_ERR "mrst_pmic_ioread: num_entries too high\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: arch/x86/kernel/mrst_ipc.c:469:
+               printk(KERN_ERR "mrst_pmic_ioread: num_entries too high\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: arch/x86/kernel/mrst_ipc.c:469:
+               printk(KERN_ERR "mrst_pmic_ioread: num_entries too high\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#790: FILE: arch/x86/kernel/mrst_ipc.c:469:
+               printk(KERN_ERR "mrst_pmic_ioread: num_entries too high\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_pmic_ioread', this function's name, in a string
#790: FILE: arch/x86/kernel/mrst_ipc.c:469:
+               printk(KERN_ERR "mrst_pmic_ioread: num_entries too high\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: arch/x86/kernel/mrst_ipc.c:470:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: arch/x86/kernel/mrst_ipc.c:470:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: arch/x86/kernel/mrst_ipc.c:471:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: arch/x86/kernel/mrst_ipc.c:471:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: arch/x86/kernel/mrst_ipc.c:472:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: arch/x86/kernel/mrst_ipc.c:474:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: arch/x86/kernel/mrst_ipc.c:476:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_read_reg_data->ioc,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: arch/x86/kernel/mrst_ipc.c:477:
+                               3*p_read_reg_data->num_entries, PMIC_REG_READ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: arch/x86/kernel/mrst_ipc.c:477:
+                               3*p_read_reg_data->num_entries, PMIC_REG_READ);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#798: FILE: arch/x86/kernel/mrst_ipc.c:477:
+                               3*p_read_reg_data->num_entries, PMIC_REG_READ);
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: arch/x86/kernel/mrst_ipc.c:479:
+       for (i = 0; i < p_read_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#800: FILE: arch/x86/kernel/mrst_ipc.c:479:
+       for (i = 0; i < p_read_reg_data->num_entries; i++) {
+               cbuf[cnt] = p_read_reg_data->pmic_reg_data[i].register_address;

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: arch/x86/kernel/mrst_ipc.c:480:
+               cbuf[cnt] = p_read_reg_data->pmic_reg_data[i].register_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: arch/x86/kernel/mrst_ipc.c:480:
+               cbuf[cnt] = p_read_reg_data->pmic_reg_data[i].register_address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: arch/x86/kernel/mrst_ipc.c:481:
+               cbuf[cnt + 1] =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: arch/x86/kernel/mrst_ipc.c:481:
+               cbuf[cnt + 1] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: arch/x86/kernel/mrst_ipc.c:482:
+               p_read_reg_data->pmic_reg_data[i].register_address >> 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: arch/x86/kernel/mrst_ipc.c:482:
+               p_read_reg_data->pmic_reg_data[i].register_address >> 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: arch/x86/kernel/mrst_ipc.c:483:
+               cbuf[cnt + 2] = p_read_reg_data->pmic_reg_data[i].value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: arch/x86/kernel/mrst_ipc.c:483:
+               cbuf[cnt + 2] = p_read_reg_data->pmic_reg_data[i].value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: arch/x86/kernel/mrst_ipc.c:484:
+               cnt = cnt + 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: arch/x86/kernel/mrst_ipc.c:484:
+               cnt = cnt + 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: arch/x86/kernel/mrst_ipc.c:485:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: arch/x86/kernel/mrst_ipc.c:488:
+       if (is_mrst_scu_busy()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#809: FILE: arch/x86/kernel/mrst_ipc.c:488:
+       if (is_mrst_scu_busy()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: arch/x86/kernel/mrst_ipc.c:489:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: arch/x86/kernel/mrst_ipc.c:489:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: arch/x86/kernel/mrst_ipc.c:490:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: arch/x86/kernel/mrst_ipc.c:490:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: arch/x86/kernel/mrst_ipc.c:491:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: arch/x86/kernel/mrst_ipc.c:492:
+       rbuf_offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: arch/x86/kernel/mrst_ipc.c:493:
+       for (i = 0; i < p_read_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#814: FILE: arch/x86/kernel/mrst_ipc.c:493:
+       for (i = 0; i < p_read_reg_data->num_entries; i++) {
+               writel(ipc_wbuf[i], p_mrst_ipc_base + IPC_WBUF + rbuf_offset);

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: arch/x86/kernel/mrst_ipc.c:494:
+               writel(ipc_wbuf[i], p_mrst_ipc_base + IPC_WBUF + rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: arch/x86/kernel/mrst_ipc.c:494:
+               writel(ipc_wbuf[i], p_mrst_ipc_base + IPC_WBUF + rbuf_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: arch/x86/kernel/mrst_ipc.c:495:
+               rbuf_offset += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: arch/x86/kernel/mrst_ipc.c:495:
+               rbuf_offset += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: arch/x86/kernel/mrst_ipc.c:496:
+               if (i >= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: arch/x86/kernel/mrst_ipc.c:496:
+               if (i >= 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#817: FILE: arch/x86/kernel/mrst_ipc.c:496:
+               if (i >= 3)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: arch/x86/kernel/mrst_ipc.c:497:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: arch/x86/kernel/mrst_ipc.c:497:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: arch/x86/kernel/mrst_ipc.c:498:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: arch/x86/kernel/mrst_ipc.c:500:
+       mrst_ipc_send_cmd(ipc_cmd.cmd_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: arch/x86/kernel/mrst_ipc.c:503:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#824: FILE: arch/x86/kernel/mrst_ipc.c:503:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: arch/x86/kernel/mrst_ipc.c:504:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: arch/x86/kernel/mrst_ipc.c:504:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: arch/x86/kernel/mrst_ipc.c:505:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: arch/x86/kernel/mrst_ipc.c:505:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: arch/x86/kernel/mrst_ipc.c:506:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: arch/x86/kernel/mrst_ipc.c:509:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#830: FILE: arch/x86/kernel/mrst_ipc.c:509:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {
+               printk(KERN_ERR "mrst_pmic: No interrupt on timeout\n");

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#830: FILE: arch/x86/kernel/mrst_ipc.c:509:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: arch/x86/kernel/mrst_ipc.c:510:
+               printk(KERN_ERR "mrst_pmic: No interrupt on timeout\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: arch/x86/kernel/mrst_ipc.c:510:
+               printk(KERN_ERR "mrst_pmic: No interrupt on timeout\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#831: FILE: arch/x86/kernel/mrst_ipc.c:510:
+               printk(KERN_ERR "mrst_pmic: No interrupt on timeout\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: arch/x86/kernel/mrst_ipc.c:511:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: arch/x86/kernel/mrst_ipc.c:511:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: arch/x86/kernel/mrst_ipc.c:512:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: arch/x86/kernel/mrst_ipc.c:512:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: arch/x86/kernel/mrst_ipc.c:513:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: arch/x86/kernel/mrst_ipc.c:515:
+       if (is_mrst_scu_error()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#836: FILE: arch/x86/kernel/mrst_ipc.c:515:
+       if (is_mrst_scu_error()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: arch/x86/kernel/mrst_ipc.c:516:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: arch/x86/kernel/mrst_ipc.c:516:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: arch/x86/kernel/mrst_ipc.c:517:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: arch/x86/kernel/mrst_ipc.c:517:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: arch/x86/kernel/mrst_ipc.c:518:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: arch/x86/kernel/mrst_ipc.c:520:
+       rbuf_offset = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: arch/x86/kernel/mrst_ipc.c:521:
+       for (i = 0; i < p_read_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#842: FILE: arch/x86/kernel/mrst_ipc.c:521:
+       for (i = 0; i < p_read_reg_data->num_entries; i++) {
+               p_read_reg_data->pmic_reg_data[i].value =

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: arch/x86/kernel/mrst_ipc.c:522:
+               p_read_reg_data->pmic_reg_data[i].value =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/x86/kernel/mrst_ipc.c:522:
+               p_read_reg_data->pmic_reg_data[i].value =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: arch/x86/kernel/mrst_ipc.c:523:
+               readb(p_mrst_ipc_base + IPC_RBUF + rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: arch/x86/kernel/mrst_ipc.c:523:
+               readb(p_mrst_ipc_base + IPC_RBUF + rbuf_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: arch/x86/kernel/mrst_ipc.c:524:
+               rbuf_offset += 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: arch/x86/kernel/mrst_ipc.c:524:
+               rbuf_offset += 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: arch/x86/kernel/mrst_ipc.c:525:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: arch/x86/kernel/mrst_ipc.c:527:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: arch/x86/kernel/mrst_ipc.c:529:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: arch/x86/kernel/mrst_ipc.c:544:
+       union mrst_ipc_fw_cmd ipc_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: arch/x86/kernel/mrst_ipc.c:545:
+       u32 *ipc_wbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: arch/x86/kernel/mrst_ipc.c:546:
+       u8 cbuf[IPC_BUF_LEN] = { '\0' };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: arch/x86/kernel/mrst_ipc.c:547:
+       u32 cnt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: arch/x86/kernel/mrst_ipc.c:548:
+       u32 i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: arch/x86/kernel/mrst_ipc.c:549:
+       u32 rbuf_offset = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: arch/x86/kernel/mrst_ipc.c:551:
+       ipc_wbuf = (u32 *)&cbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: arch/x86/kernel/mrst_ipc.c:553:
+       if (p_write_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#874: FILE: arch/x86/kernel/mrst_ipc.c:553:
+       if (p_write_reg_data == NULL) {
+               printk(KERN_ERR "mrst_pmic_write: write_reg_data is NULL\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_write_reg_data"
#874: FILE: arch/x86/kernel/mrst_ipc.c:553:
+       if (p_write_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: arch/x86/kernel/mrst_ipc.c:554:
+               printk(KERN_ERR "mrst_pmic_write: write_reg_data is NULL\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: arch/x86/kernel/mrst_ipc.c:554:
+               printk(KERN_ERR "mrst_pmic_write: write_reg_data is NULL\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#875: FILE: arch/x86/kernel/mrst_ipc.c:554:
+               printk(KERN_ERR "mrst_pmic_write: write_reg_data is NULL\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: arch/x86/kernel/mrst_ipc.c:555:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: arch/x86/kernel/mrst_ipc.c:555:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: arch/x86/kernel/mrst_ipc.c:556:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: arch/x86/kernel/mrst_ipc.c:556:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: arch/x86/kernel/mrst_ipc.c:557:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: arch/x86/kernel/mrst_ipc.c:558:
+       if (p_write_reg_data->num_entries > MAX_NUM_ENTRIES) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#879: FILE: arch/x86/kernel/mrst_ipc.c:558:
+       if (p_write_reg_data->num_entries > MAX_NUM_ENTRIES) {
+               printk(KERN_ERR "mrst_pmic_write: num entries too high\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#880: FILE: arch/x86/kernel/mrst_ipc.c:559:
+               printk(KERN_ERR "mrst_pmic_write: num entries too high\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: arch/x86/kernel/mrst_ipc.c:559:
+               printk(KERN_ERR "mrst_pmic_write: num entries too high\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#880: FILE: arch/x86/kernel/mrst_ipc.c:559:
+               printk(KERN_ERR "mrst_pmic_write: num entries too high\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: arch/x86/kernel/mrst_ipc.c:560:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: arch/x86/kernel/mrst_ipc.c:560:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: arch/x86/kernel/mrst_ipc.c:561:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: arch/x86/kernel/mrst_ipc.c:561:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: arch/x86/kernel/mrst_ipc.c:562:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: arch/x86/kernel/mrst_ipc.c:564:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: arch/x86/kernel/mrst_ipc.c:566:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_write_reg_data->ioc,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: arch/x86/kernel/mrst_ipc.c:567:
+                       3*p_write_reg_data->num_entries, PMIC_REG_WRITE);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: arch/x86/kernel/mrst_ipc.c:567:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_write_reg_data->ioc,
+                       3*p_write_reg_data->num_entries, PMIC_REG_WRITE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: arch/x86/kernel/mrst_ipc.c:567:
+                       3*p_write_reg_data->num_entries, PMIC_REG_WRITE);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#888: FILE: arch/x86/kernel/mrst_ipc.c:567:
+                       3*p_write_reg_data->num_entries, PMIC_REG_WRITE);
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: arch/x86/kernel/mrst_ipc.c:569:
+       for (i = 0; i < p_write_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#890: FILE: arch/x86/kernel/mrst_ipc.c:569:
+       for (i = 0; i < p_write_reg_data->num_entries; i++) {
+               cbuf[cnt] = p_write_reg_data->pmic_reg_data[i].register_address;

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: arch/x86/kernel/mrst_ipc.c:570:
+               cbuf[cnt] = p_write_reg_data->pmic_reg_data[i].register_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: arch/x86/kernel/mrst_ipc.c:570:
+               cbuf[cnt] = p_write_reg_data->pmic_reg_data[i].register_address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: arch/x86/kernel/mrst_ipc.c:571:
+               cbuf[cnt + 1] =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: arch/x86/kernel/mrst_ipc.c:571:
+               cbuf[cnt + 1] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: arch/x86/kernel/mrst_ipc.c:572:
+               p_write_reg_data->pmic_reg_data[i].register_address >> 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: arch/x86/kernel/mrst_ipc.c:572:
+               p_write_reg_data->pmic_reg_data[i].register_address >> 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: arch/x86/kernel/mrst_ipc.c:573:
+               cbuf[cnt + 2] = p_write_reg_data->pmic_reg_data[i].value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: arch/x86/kernel/mrst_ipc.c:573:
+               cbuf[cnt + 2] = p_write_reg_data->pmic_reg_data[i].value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: arch/x86/kernel/mrst_ipc.c:574:
+               cnt = cnt + 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: arch/x86/kernel/mrst_ipc.c:574:
+               cnt = cnt + 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: arch/x86/kernel/mrst_ipc.c:575:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: arch/x86/kernel/mrst_ipc.c:577:
+       if (is_mrst_scu_busy()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#898: FILE: arch/x86/kernel/mrst_ipc.c:577:
+       if (is_mrst_scu_busy()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#899: FILE: arch/x86/kernel/mrst_ipc.c:578:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: arch/x86/kernel/mrst_ipc.c:578:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#900: FILE: arch/x86/kernel/mrst_ipc.c:579:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: arch/x86/kernel/mrst_ipc.c:579:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: arch/x86/kernel/mrst_ipc.c:580:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: arch/x86/kernel/mrst_ipc.c:582:
+       rbuf_offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: arch/x86/kernel/mrst_ipc.c:583:
+       for (i = 0; i < p_write_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#904: FILE: arch/x86/kernel/mrst_ipc.c:583:
+       for (i = 0; i < p_write_reg_data->num_entries; i++) {
+               writel(ipc_wbuf[i], p_mrst_ipc_base + IPC_WBUF

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: arch/x86/kernel/mrst_ipc.c:584:
+               writel(ipc_wbuf[i], p_mrst_ipc_base + IPC_WBUF$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: arch/x86/kernel/mrst_ipc.c:584:
+               writel(ipc_wbuf[i], p_mrst_ipc_base + IPC_WBUF$

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: arch/x86/kernel/mrst_ipc.c:585:
+                                                        + rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: arch/x86/kernel/mrst_ipc.c:585:
+                                                        + rbuf_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: arch/x86/kernel/mrst_ipc.c:586:
+               rbuf_offset += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: arch/x86/kernel/mrst_ipc.c:586:
+               rbuf_offset += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: arch/x86/kernel/mrst_ipc.c:587:
+               if (i >= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: arch/x86/kernel/mrst_ipc.c:587:
+               if (i >= 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#908: FILE: arch/x86/kernel/mrst_ipc.c:587:
+               if (i >= 3)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: arch/x86/kernel/mrst_ipc.c:588:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: arch/x86/kernel/mrst_ipc.c:588:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: arch/x86/kernel/mrst_ipc.c:589:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: arch/x86/kernel/mrst_ipc.c:590:
+       mrst_ipc_send_cmd(ipc_cmd.cmd_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: arch/x86/kernel/mrst_ipc.c:593:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#914: FILE: arch/x86/kernel/mrst_ipc.c:593:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: arch/x86/kernel/mrst_ipc.c:594:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: arch/x86/kernel/mrst_ipc.c:594:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: arch/x86/kernel/mrst_ipc.c:595:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: arch/x86/kernel/mrst_ipc.c:595:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: arch/x86/kernel/mrst_ipc.c:596:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: arch/x86/kernel/mrst_ipc.c:599:
+       if (is_mrst_scu_error()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#920: FILE: arch/x86/kernel/mrst_ipc.c:599:
+       if (is_mrst_scu_error()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: arch/x86/kernel/mrst_ipc.c:600:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: arch/x86/kernel/mrst_ipc.c:600:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: arch/x86/kernel/mrst_ipc.c:601:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: arch/x86/kernel/mrst_ipc.c:601:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: arch/x86/kernel/mrst_ipc.c:602:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: arch/x86/kernel/mrst_ipc.c:603:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: arch/x86/kernel/mrst_ipc.c:604:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: arch/x86/kernel/mrst_ipc.c:618:
+                               *p_read_mod_reg_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: arch/x86/kernel/mrst_ipc.c:618:
+                               *p_read_mod_reg_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: arch/x86/kernel/mrst_ipc.c:620:
+       union mrst_ipc_fw_cmd ipc_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: arch/x86/kernel/mrst_ipc.c:621:
+       u32 *ipc_wbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: arch/x86/kernel/mrst_ipc.c:622:
+       u8 cbuf[IPC_BUF_LEN] = { '\0' };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: arch/x86/kernel/mrst_ipc.c:623:
+       u32 cnt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: arch/x86/kernel/mrst_ipc.c:624:
+       u32 i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: arch/x86/kernel/mrst_ipc.c:625:
+       u32 rbuf_offset = 2;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#947: FILE: arch/x86/kernel/mrst_ipc.c:626:
+       u32 rbuf_offset = 2;
+       ipc_wbuf = (u32 *)&cbuf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: arch/x86/kernel/mrst_ipc.c:626:
+       ipc_wbuf = (u32 *)&cbuf;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#949: FILE: arch/x86/kernel/mrst_ipc.c:628:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: arch/x86/kernel/mrst_ipc.c:629:
+       if (p_read_mod_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#950: FILE: arch/x86/kernel/mrst_ipc.c:629:
+       if (p_read_mod_reg_data == NULL) {
+               printk(KERN_ERR "mrst_pmic_ioread_modify: reg_data is NULL\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_read_mod_reg_data"
#950: FILE: arch/x86/kernel/mrst_ipc.c:629:
+       if (p_read_mod_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: arch/x86/kernel/mrst_ipc.c:630:
+               printk(KERN_ERR "mrst_pmic_ioread_modify: reg_data is NULL\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: arch/x86/kernel/mrst_ipc.c:630:
+               printk(KERN_ERR "mrst_pmic_ioread_modify: reg_data is NULL\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#951: FILE: arch/x86/kernel/mrst_ipc.c:630:
+               printk(KERN_ERR "mrst_pmic_ioread_modify: reg_data is NULL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_pmic_ioread_modify', this function's name, in a string
#951: FILE: arch/x86/kernel/mrst_ipc.c:630:
+               printk(KERN_ERR "mrst_pmic_ioread_modify: reg_data is NULL\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: arch/x86/kernel/mrst_ipc.c:631:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: arch/x86/kernel/mrst_ipc.c:631:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#953: FILE: arch/x86/kernel/mrst_ipc.c:632:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: arch/x86/kernel/mrst_ipc.c:632:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: arch/x86/kernel/mrst_ipc.c:633:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: arch/x86/kernel/mrst_ipc.c:634:
+       if (p_read_mod_reg_data->num_entries > MAX_NUM_RMW_ENTRIES) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#955: FILE: arch/x86/kernel/mrst_ipc.c:634:
+       if (p_read_mod_reg_data->num_entries > MAX_NUM_RMW_ENTRIES) {
+               printk(KERN_ERR "mrst_pic_ioread_modify: num_entries too high\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: arch/x86/kernel/mrst_ipc.c:635:
+               printk(KERN_ERR "mrst_pic_ioread_modify: num_entries too high\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: arch/x86/kernel/mrst_ipc.c:635:
+               printk(KERN_ERR "mrst_pic_ioread_modify: num_entries too high\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#956: FILE: arch/x86/kernel/mrst_ipc.c:635:
+               printk(KERN_ERR "mrst_pic_ioread_modify: num_entries too high\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: arch/x86/kernel/mrst_ipc.c:636:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: arch/x86/kernel/mrst_ipc.c:636:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: arch/x86/kernel/mrst_ipc.c:637:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: arch/x86/kernel/mrst_ipc.c:637:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: arch/x86/kernel/mrst_ipc.c:638:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: arch/x86/kernel/mrst_ipc.c:640:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: arch/x86/kernel/mrst_ipc.c:642:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_read_mod_reg_data->ioc,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: arch/x86/kernel/mrst_ipc.c:643:
+                       4*p_read_mod_reg_data->num_entries,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: arch/x86/kernel/mrst_ipc.c:643:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_read_mod_reg_data->ioc,
+                       4*p_read_mod_reg_data->num_entries,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: arch/x86/kernel/mrst_ipc.c:643:
+                       4*p_read_mod_reg_data->num_entries,$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#964: FILE: arch/x86/kernel/mrst_ipc.c:643:
+                       4*p_read_mod_reg_data->num_entries,
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: arch/x86/kernel/mrst_ipc.c:644:
+                                       PMIC_REG_READ_MODIFY);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: arch/x86/kernel/mrst_ipc.c:644:
+                                       PMIC_REG_READ_MODIFY);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: arch/x86/kernel/mrst_ipc.c:646:
+       for (i = 0; i < p_read_mod_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#967: FILE: arch/x86/kernel/mrst_ipc.c:646:
+       for (i = 0; i < p_read_mod_reg_data->num_entries; i++) {
+               cbuf[cnt] =

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: arch/x86/kernel/mrst_ipc.c:647:
+               cbuf[cnt] =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: arch/x86/kernel/mrst_ipc.c:647:
+               cbuf[cnt] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: arch/x86/kernel/mrst_ipc.c:648:
+               p_read_mod_reg_data->pmic_mod_reg_data[i].register_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: arch/x86/kernel/mrst_ipc.c:648:
+               p_read_mod_reg_data->pmic_mod_reg_data[i].register_address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: arch/x86/kernel/mrst_ipc.c:649:
+               cbuf[cnt + 1] = p_read_mod_reg_data->$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: arch/x86/kernel/mrst_ipc.c:649:
+               cbuf[cnt + 1] = p_read_mod_reg_data->$

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: arch/x86/kernel/mrst_ipc.c:650:
+                               pmic_mod_reg_data[i].register_address >> 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: arch/x86/kernel/mrst_ipc.c:650:
+                               pmic_mod_reg_data[i].register_address >> 8;$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'p_read_mod_reg_data->pmic_mod_reg_data[i].register_address'
#971: FILE: arch/x86/kernel/mrst_ipc.c:650:
+               cbuf[cnt + 1] = p_read_mod_reg_data->
+                               pmic_mod_reg_data[i].register_address >> 8;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: arch/x86/kernel/mrst_ipc.c:651:
+               cbuf[cnt + 2] = p_read_mod_reg_data->$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: arch/x86/kernel/mrst_ipc.c:651:
+               cbuf[cnt + 2] = p_read_mod_reg_data->$

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: arch/x86/kernel/mrst_ipc.c:652:
+                               pmic_mod_reg_data[i].value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: arch/x86/kernel/mrst_ipc.c:652:
+                               pmic_mod_reg_data[i].value;$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'p_read_mod_reg_data->pmic_mod_reg_data[i].value'
#973: FILE: arch/x86/kernel/mrst_ipc.c:652:
+               cbuf[cnt + 2] = p_read_mod_reg_data->
+                               pmic_mod_reg_data[i].value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: arch/x86/kernel/mrst_ipc.c:653:
+               cbuf[cnt + 3] = p_read_mod_reg_data->$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: arch/x86/kernel/mrst_ipc.c:653:
+               cbuf[cnt + 3] = p_read_mod_reg_data->$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: arch/x86/kernel/mrst_ipc.c:654:
+                               pmic_mod_reg_data[i].bit_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: arch/x86/kernel/mrst_ipc.c:654:
+                               pmic_mod_reg_data[i].bit_map;$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'p_read_mod_reg_data->pmic_mod_reg_data[i].bit_map'
#975: FILE: arch/x86/kernel/mrst_ipc.c:654:
+               cbuf[cnt + 3] = p_read_mod_reg_data->
+                               pmic_mod_reg_data[i].bit_map;

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: arch/x86/kernel/mrst_ipc.c:655:
+               cnt = cnt + 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: arch/x86/kernel/mrst_ipc.c:655:
+               cnt = cnt + 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: arch/x86/kernel/mrst_ipc.c:656:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: arch/x86/kernel/mrst_ipc.c:659:
+       if (is_mrst_scu_busy()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#980: FILE: arch/x86/kernel/mrst_ipc.c:659:
+       if (is_mrst_scu_busy()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: arch/x86/kernel/mrst_ipc.c:660:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: arch/x86/kernel/mrst_ipc.c:660:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: arch/x86/kernel/mrst_ipc.c:661:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: arch/x86/kernel/mrst_ipc.c:661:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: arch/x86/kernel/mrst_ipc.c:662:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: arch/x86/kernel/mrst_ipc.c:664:
+       rbuf_offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: arch/x86/kernel/mrst_ipc.c:665:
+       for (i = 0; i < p_read_mod_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#986: FILE: arch/x86/kernel/mrst_ipc.c:665:
+       for (i = 0; i < p_read_mod_reg_data->num_entries; i++) {
+               writel(ipc_wbuf[i],

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: arch/x86/kernel/mrst_ipc.c:666:
+               writel(ipc_wbuf[i],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: arch/x86/kernel/mrst_ipc.c:666:
+               writel(ipc_wbuf[i],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: arch/x86/kernel/mrst_ipc.c:667:
+                       p_mrst_ipc_base + IPC_WBUF + rbuf_offset);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: arch/x86/kernel/mrst_ipc.c:667:
+               writel(ipc_wbuf[i],
+                       p_mrst_ipc_base + IPC_WBUF + rbuf_offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: arch/x86/kernel/mrst_ipc.c:667:
+                       p_mrst_ipc_base + IPC_WBUF + rbuf_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: arch/x86/kernel/mrst_ipc.c:668:
+               if (i >= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: arch/x86/kernel/mrst_ipc.c:668:
+               if (i >= 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#989: FILE: arch/x86/kernel/mrst_ipc.c:668:
+               if (i >= 3)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#990: FILE: arch/x86/kernel/mrst_ipc.c:669:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: arch/x86/kernel/mrst_ipc.c:669:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: arch/x86/kernel/mrst_ipc.c:670:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: arch/x86/kernel/mrst_ipc.c:671:
+       mrst_ipc_send_cmd(ipc_cmd.cmd_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: arch/x86/kernel/mrst_ipc.c:674:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#995: FILE: arch/x86/kernel/mrst_ipc.c:674:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: arch/x86/kernel/mrst_ipc.c:675:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: arch/x86/kernel/mrst_ipc.c:675:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: arch/x86/kernel/mrst_ipc.c:676:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: arch/x86/kernel/mrst_ipc.c:676:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: arch/x86/kernel/mrst_ipc.c:677:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: arch/x86/kernel/mrst_ipc.c:680:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1001: FILE: arch/x86/kernel/mrst_ipc.c:680:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {
+               mutex_unlock(&mrst_ipc_mutex);

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#1001: FILE: arch/x86/kernel/mrst_ipc.c:680:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: arch/x86/kernel/mrst_ipc.c:681:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: arch/x86/kernel/mrst_ipc.c:681:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: arch/x86/kernel/mrst_ipc.c:682:
+               printk(KERN_ERR "ERROR! IPC: No Interrupt got on Timeout\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: arch/x86/kernel/mrst_ipc.c:682:
+               printk(KERN_ERR "ERROR! IPC: No Interrupt got on Timeout\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1003: FILE: arch/x86/kernel/mrst_ipc.c:682:
+               printk(KERN_ERR "ERROR! IPC: No Interrupt got on Timeout\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: arch/x86/kernel/mrst_ipc.c:683:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: arch/x86/kernel/mrst_ipc.c:683:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: arch/x86/kernel/mrst_ipc.c:684:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: arch/x86/kernel/mrst_ipc.c:687:
+       if (is_mrst_scu_error()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1008: FILE: arch/x86/kernel/mrst_ipc.c:687:
+       if (is_mrst_scu_error()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: arch/x86/kernel/mrst_ipc.c:688:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: arch/x86/kernel/mrst_ipc.c:688:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1010: FILE: arch/x86/kernel/mrst_ipc.c:689:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: arch/x86/kernel/mrst_ipc.c:689:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: arch/x86/kernel/mrst_ipc.c:690:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: arch/x86/kernel/mrst_ipc.c:693:
+       rbuf_offset = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: arch/x86/kernel/mrst_ipc.c:694:
+       for (i = 0; i < p_read_mod_reg_data->num_entries; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1015: FILE: arch/x86/kernel/mrst_ipc.c:694:
+       for (i = 0; i < p_read_mod_reg_data->num_entries; i++) {
+               p_read_mod_reg_data->pmic_mod_reg_data[i].value =

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: arch/x86/kernel/mrst_ipc.c:695:
+               p_read_mod_reg_data->pmic_mod_reg_data[i].value =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: arch/x86/kernel/mrst_ipc.c:695:
+               p_read_mod_reg_data->pmic_mod_reg_data[i].value =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: arch/x86/kernel/mrst_ipc.c:696:
+                       readb(p_mrst_ipc_base + IPC_RBUF + rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: arch/x86/kernel/mrst_ipc.c:696:
+                       readb(p_mrst_ipc_base + IPC_RBUF + rbuf_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: arch/x86/kernel/mrst_ipc.c:697:
+               rbuf_offset += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: arch/x86/kernel/mrst_ipc.c:697:
+               rbuf_offset += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: arch/x86/kernel/mrst_ipc.c:698:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: arch/x86/kernel/mrst_ipc.c:699:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: arch/x86/kernel/mrst_ipc.c:700:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: arch/x86/kernel/mrst_ipc.c:715:
+       union mrst_ipc_fw_cmd ipc_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: arch/x86/kernel/mrst_ipc.c:717:
+       if (p_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1038: FILE: arch/x86/kernel/mrst_ipc.c:717:
+       if (p_reg_data == NULL) {
+               printk(KERN_ERR "mrst_ipc_read32: p_reg_data is NULL\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_reg_data"
#1038: FILE: arch/x86/kernel/mrst_ipc.c:717:
+       if (p_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: arch/x86/kernel/mrst_ipc.c:718:
+               printk(KERN_ERR "mrst_ipc_read32: p_reg_data is NULL\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: arch/x86/kernel/mrst_ipc.c:718:
+               printk(KERN_ERR "mrst_ipc_read32: p_reg_data is NULL\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1039: FILE: arch/x86/kernel/mrst_ipc.c:718:
+               printk(KERN_ERR "mrst_ipc_read32: p_reg_data is NULL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_ipc_read32', this function's name, in a string
#1039: FILE: arch/x86/kernel/mrst_ipc.c:718:
+               printk(KERN_ERR "mrst_ipc_read32: p_reg_data is NULL\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1040: FILE: arch/x86/kernel/mrst_ipc.c:719:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: arch/x86/kernel/mrst_ipc.c:719:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: arch/x86/kernel/mrst_ipc.c:720:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: arch/x86/kernel/mrst_ipc.c:720:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: arch/x86/kernel/mrst_ipc.c:721:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: arch/x86/kernel/mrst_ipc.c:723:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: arch/x86/kernel/mrst_ipc.c:725:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_reg_data->ioc, 4, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: arch/x86/kernel/mrst_ipc.c:727:
+       ipc_cmd.cmd_parts.cmd = INDIRECT_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: arch/x86/kernel/mrst_ipc.c:730:
+       if (is_mrst_scu_busy()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1051: FILE: arch/x86/kernel/mrst_ipc.c:730:
+       if (is_mrst_scu_busy()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: arch/x86/kernel/mrst_ipc.c:731:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: arch/x86/kernel/mrst_ipc.c:731:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: arch/x86/kernel/mrst_ipc.c:732:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: arch/x86/kernel/mrst_ipc.c:732:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: arch/x86/kernel/mrst_ipc.c:733:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: arch/x86/kernel/mrst_ipc.c:734:
+       writel(p_reg_data->address, (p_mrst_ipc_base + IPC_SPTR));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: arch/x86/kernel/mrst_ipc.c:735:
+       mrst_ipc_send_cmd(ipc_cmd.cmd_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: arch/x86/kernel/mrst_ipc.c:738:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1059: FILE: arch/x86/kernel/mrst_ipc.c:738:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: arch/x86/kernel/mrst_ipc.c:739:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: arch/x86/kernel/mrst_ipc.c:739:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: arch/x86/kernel/mrst_ipc.c:740:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: arch/x86/kernel/mrst_ipc.c:740:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: arch/x86/kernel/mrst_ipc.c:741:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: arch/x86/kernel/mrst_ipc.c:744:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1065: FILE: arch/x86/kernel/mrst_ipc.c:744:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {
+               mutex_unlock(&mrst_ipc_mutex);

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#1065: FILE: arch/x86/kernel/mrst_ipc.c:744:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1066: FILE: arch/x86/kernel/mrst_ipc.c:745:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: arch/x86/kernel/mrst_ipc.c:745:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: arch/x86/kernel/mrst_ipc.c:746:
+               printk(KERN_ERR "mrst_ipc_read32: No Interrupt on Timeout\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: arch/x86/kernel/mrst_ipc.c:746:
+               printk(KERN_ERR "mrst_ipc_read32: No Interrupt on Timeout\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1067: FILE: arch/x86/kernel/mrst_ipc.c:746:
+               printk(KERN_ERR "mrst_ipc_read32: No Interrupt on Timeout\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_ipc_read32', this function's name, in a string
#1067: FILE: arch/x86/kernel/mrst_ipc.c:746:
+               printk(KERN_ERR "mrst_ipc_read32: No Interrupt on Timeout\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1068: FILE: arch/x86/kernel/mrst_ipc.c:747:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: arch/x86/kernel/mrst_ipc.c:747:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: arch/x86/kernel/mrst_ipc.c:748:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: arch/x86/kernel/mrst_ipc.c:751:
+       if (is_mrst_scu_error()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1072: FILE: arch/x86/kernel/mrst_ipc.c:751:
+       if (is_mrst_scu_error()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: arch/x86/kernel/mrst_ipc.c:752:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: arch/x86/kernel/mrst_ipc.c:752:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: arch/x86/kernel/mrst_ipc.c:753:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: arch/x86/kernel/mrst_ipc.c:753:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: arch/x86/kernel/mrst_ipc.c:754:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: arch/x86/kernel/mrst_ipc.c:756:
+       p_reg_data->data = readl(p_mrst_ipc_base + IPC_RBUF);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: arch/x86/kernel/mrst_ipc.c:758:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: arch/x86/kernel/mrst_ipc.c:759:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: arch/x86/kernel/mrst_ipc.c:774:
+       union mrst_ipc_fw_cmd ipc_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: arch/x86/kernel/mrst_ipc.c:776:
+       if (p_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1097: FILE: arch/x86/kernel/mrst_ipc.c:776:
+       if (p_reg_data == NULL) {
+               printk(KERN_ERR "mrst_ipc_write32: p_reg_data is NULL\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_reg_data"
#1097: FILE: arch/x86/kernel/mrst_ipc.c:776:
+       if (p_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1098: FILE: arch/x86/kernel/mrst_ipc.c:777:
+               printk(KERN_ERR "mrst_ipc_write32: p_reg_data is NULL\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: arch/x86/kernel/mrst_ipc.c:777:
+               printk(KERN_ERR "mrst_ipc_write32: p_reg_data is NULL\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1098: FILE: arch/x86/kernel/mrst_ipc.c:777:
+               printk(KERN_ERR "mrst_ipc_write32: p_reg_data is NULL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_ipc_write32', this function's name, in a string
#1098: FILE: arch/x86/kernel/mrst_ipc.c:777:
+               printk(KERN_ERR "mrst_ipc_write32: p_reg_data is NULL\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1099: FILE: arch/x86/kernel/mrst_ipc.c:778:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: arch/x86/kernel/mrst_ipc.c:778:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1100: FILE: arch/x86/kernel/mrst_ipc.c:779:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: arch/x86/kernel/mrst_ipc.c:779:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: arch/x86/kernel/mrst_ipc.c:780:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: arch/x86/kernel/mrst_ipc.c:782:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: arch/x86/kernel/mrst_ipc.c:784:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_reg_data->ioc, 4, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: arch/x86/kernel/mrst_ipc.c:786:
+       ipc_cmd.cmd_parts.cmd = INDIRECT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: arch/x86/kernel/mrst_ipc.c:789:
+       if (is_mrst_scu_busy()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1110: FILE: arch/x86/kernel/mrst_ipc.c:789:
+       if (is_mrst_scu_busy()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1111: FILE: arch/x86/kernel/mrst_ipc.c:790:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: arch/x86/kernel/mrst_ipc.c:790:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: arch/x86/kernel/mrst_ipc.c:791:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: arch/x86/kernel/mrst_ipc.c:791:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: arch/x86/kernel/mrst_ipc.c:792:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1114: FILE: arch/x86/kernel/mrst_ipc.c:793:
+       writel(p_reg_data->address, (p_mrst_ipc_base + IPC_DPTR));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: arch/x86/kernel/mrst_ipc.c:794:
+       writel(p_reg_data->data, (p_mrst_ipc_base + IPC_WBUF));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: arch/x86/kernel/mrst_ipc.c:795:
+       mrst_ipc_send_cmd(ipc_cmd.cmd_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: arch/x86/kernel/mrst_ipc.c:798:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1119: FILE: arch/x86/kernel/mrst_ipc.c:798:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: arch/x86/kernel/mrst_ipc.c:799:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: arch/x86/kernel/mrst_ipc.c:799:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1121: FILE: arch/x86/kernel/mrst_ipc.c:800:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: arch/x86/kernel/mrst_ipc.c:800:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: arch/x86/kernel/mrst_ipc.c:801:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: arch/x86/kernel/mrst_ipc.c:804:
+       if (is_mrst_scu_error()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1125: FILE: arch/x86/kernel/mrst_ipc.c:804:
+       if (is_mrst_scu_error()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: arch/x86/kernel/mrst_ipc.c:805:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: arch/x86/kernel/mrst_ipc.c:805:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: arch/x86/kernel/mrst_ipc.c:806:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: arch/x86/kernel/mrst_ipc.c:806:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: arch/x86/kernel/mrst_ipc.c:807:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: arch/x86/kernel/mrst_ipc.c:808:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: arch/x86/kernel/mrst_ipc.c:809:
+       return 0;$

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#1140: FILE: arch/x86/kernel/mrst_ipc.c:819:
+ * This function provides and interface to to set kernel watch-dog

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: arch/x86/kernel/mrst_ipc.c:824:
+       union mrst_ipc_fw_cmd ipc_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: arch/x86/kernel/mrst_ipc.c:825:
+       u32 *ipc_wbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: arch/x86/kernel/mrst_ipc.c:826:
+       u8 cbuf[16] = { '\0' };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: arch/x86/kernel/mrst_ipc.c:827:
+       u32 rbuf_offset = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: arch/x86/kernel/mrst_ipc.c:829:
+       ipc_wbuf = (u32 *)&cbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: arch/x86/kernel/mrst_ipc.c:831:
+       if (p_watchdog_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1152: FILE: arch/x86/kernel/mrst_ipc.c:831:
+       if (p_watchdog_reg_data == NULL) {
+               printk(KERN_ERR "mrst_ipc_set_watchdog: reg_data is NULL\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_watchdog_reg_data"
#1152: FILE: arch/x86/kernel/mrst_ipc.c:831:
+       if (p_watchdog_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: arch/x86/kernel/mrst_ipc.c:832:
+               printk(KERN_ERR "mrst_ipc_set_watchdog: reg_data is NULL\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: arch/x86/kernel/mrst_ipc.c:832:
+               printk(KERN_ERR "mrst_ipc_set_watchdog: reg_data is NULL\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1153: FILE: arch/x86/kernel/mrst_ipc.c:832:
+               printk(KERN_ERR "mrst_ipc_set_watchdog: reg_data is NULL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_ipc_set_watchdog', this function's name, in a string
#1153: FILE: arch/x86/kernel/mrst_ipc.c:832:
+               printk(KERN_ERR "mrst_ipc_set_watchdog: reg_data is NULL\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1154: FILE: arch/x86/kernel/mrst_ipc.c:833:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: arch/x86/kernel/mrst_ipc.c:833:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1155: FILE: arch/x86/kernel/mrst_ipc.c:834:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: arch/x86/kernel/mrst_ipc.c:834:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: arch/x86/kernel/mrst_ipc.c:835:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: arch/x86/kernel/mrst_ipc.c:837:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: arch/x86/kernel/mrst_ipc.c:839:
+       mrst_set_ipc_cmd_fields(&ipc_cmd, p_watchdog_reg_data->ioc, 2, 0x0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: arch/x86/kernel/mrst_ipc.c:841:
+       ipc_cmd.cmd_parts.cmd = IPC_SET_WATCHDOG_TIMER;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: arch/x86/kernel/mrst_ipc.c:844:
+       if (is_mrst_scu_busy()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1165: FILE: arch/x86/kernel/mrst_ipc.c:844:
+       if (is_mrst_scu_busy()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1166: FILE: arch/x86/kernel/mrst_ipc.c:845:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: arch/x86/kernel/mrst_ipc.c:845:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: arch/x86/kernel/mrst_ipc.c:846:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: arch/x86/kernel/mrst_ipc.c:846:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: arch/x86/kernel/mrst_ipc.c:847:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: arch/x86/kernel/mrst_ipc.c:848:
+       ipc_wbuf[0] = p_watchdog_reg_data->payload1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: arch/x86/kernel/mrst_ipc.c:849:
+       writel(ipc_wbuf[0], p_mrst_ipc_base + IPC_WBUF + rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: arch/x86/kernel/mrst_ipc.c:851:
+       ipc_wbuf[1] = p_watchdog_reg_data->payload2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1173: FILE: arch/x86/kernel/mrst_ipc.c:852:
+       writel(ipc_wbuf[1], p_mrst_ipc_base + IPC_WBUF + rbuf_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: arch/x86/kernel/mrst_ipc.c:855:
+       mrst_ipc_send_cmd(ipc_cmd.cmd_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: arch/x86/kernel/mrst_ipc.c:858:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1179: FILE: arch/x86/kernel/mrst_ipc.c:858:
+       if (wait_for_scu_cmd_completion(ipc_cmd.cmd_parts.ioc)) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1180: FILE: arch/x86/kernel/mrst_ipc.c:859:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: arch/x86/kernel/mrst_ipc.c:859:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1181: FILE: arch/x86/kernel/mrst_ipc.c:860:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: arch/x86/kernel/mrst_ipc.c:860:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: arch/x86/kernel/mrst_ipc.c:861:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: arch/x86/kernel/mrst_ipc.c:864:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1185: FILE: arch/x86/kernel/mrst_ipc.c:864:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {
+               mutex_unlock(&mrst_ipc_mutex);

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#1185: FILE: arch/x86/kernel/mrst_ipc.c:864:
+       if (ipc_cmd.cmd_parts.ioc == 1 && scu_cmd_completed == false) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1186: FILE: arch/x86/kernel/mrst_ipc.c:865:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: arch/x86/kernel/mrst_ipc.c:865:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1187: FILE: arch/x86/kernel/mrst_ipc.c:866:
+               printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: arch/x86/kernel/mrst_ipc.c:866:
+               printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1187: FILE: arch/x86/kernel/mrst_ipc.c:866:
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: arch/x86/kernel/mrst_ipc.c:867:
+                       "mrst_ipc_set_watchdog: No Interrupt on timeout\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: arch/x86/kernel/mrst_ipc.c:867:
+                       "mrst_ipc_set_watchdog: No Interrupt on timeout\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_ipc_set_watchdog', this function's name, in a string
#1188: FILE: arch/x86/kernel/mrst_ipc.c:867:
+                       "mrst_ipc_set_watchdog: No Interrupt on timeout\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: arch/x86/kernel/mrst_ipc.c:868:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: arch/x86/kernel/mrst_ipc.c:868:
+               return -ETIMEDOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: arch/x86/kernel/mrst_ipc.c:869:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1193: FILE: arch/x86/kernel/mrst_ipc.c:872:
+       if (is_mrst_scu_error()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1193: FILE: arch/x86/kernel/mrst_ipc.c:872:
+       if (is_mrst_scu_error()) {
+               mutex_unlock(&mrst_ipc_mutex);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1194: FILE: arch/x86/kernel/mrst_ipc.c:873:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: arch/x86/kernel/mrst_ipc.c:873:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1195: FILE: arch/x86/kernel/mrst_ipc.c:874:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: arch/x86/kernel/mrst_ipc.c:874:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1196: FILE: arch/x86/kernel/mrst_ipc.c:875:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: arch/x86/kernel/mrst_ipc.c:876:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: arch/x86/kernel/mrst_ipc.c:877:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: arch/x86/kernel/mrst_ipc.c:891:
+                                                               *p_reg_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: arch/x86/kernel/mrst_ipc.c:891:
+                                                               *p_reg_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: arch/x86/kernel/mrst_ipc.c:893:
+       u32 io_bus_master_cmd = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: arch/x86/kernel/mrst_ipc.c:895:
+       if (p_reg_data == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1216: FILE: arch/x86/kernel/mrst_ipc.c:895:
+       if (p_reg_data == NULL) {
+               printk(KERN_ERR

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_reg_data"
#1216: FILE: arch/x86/kernel/mrst_ipc.c:895:
+       if (p_reg_data == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1217: FILE: arch/x86/kernel/mrst_ipc.c:896:
+               printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: arch/x86/kernel/mrst_ipc.c:896:
+               printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1217: FILE: arch/x86/kernel/mrst_ipc.c:896:
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#1218: FILE: arch/x86/kernel/mrst_ipc.c:897:
+               "mrst_ipc_program_io_bus_master: p_reg_data is NULL\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: arch/x86/kernel/mrst_ipc.c:897:
+               "mrst_ipc_program_io_bus_master: p_reg_data is NULL\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mrst_ipc_program_io_bus_master', this function's name, in a string
#1218: FILE: arch/x86/kernel/mrst_ipc.c:897:
+               "mrst_ipc_program_io_bus_master: p_reg_data is NULL\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1219: FILE: arch/x86/kernel/mrst_ipc.c:898:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: arch/x86/kernel/mrst_ipc.c:898:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1220: FILE: arch/x86/kernel/mrst_ipc.c:899:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: arch/x86/kernel/mrst_ipc.c:899:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: arch/x86/kernel/mrst_ipc.c:900:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: arch/x86/kernel/mrst_ipc.c:902:
+       mutex_lock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: arch/x86/kernel/mrst_ipc.c:904:
+       io_bus_master_cmd = (p_reg_data->ctrl_reg_addr)&(0xFF000000);$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1225: FILE: arch/x86/kernel/mrst_ipc.c:904:
+       io_bus_master_cmd = (p_reg_data->ctrl_reg_addr)&(0xFF000000);
                                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: arch/x86/kernel/mrst_ipc.c:905:
+       io_bus_master_cmd = (io_bus_master_cmd >> 24);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: arch/x86/kernel/mrst_ipc.c:907:
+       if (io_bus_master_cmd == NOP_CMD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1228: FILE: arch/x86/kernel/mrst_ipc.c:907:
+       if (io_bus_master_cmd == NOP_CMD) {
+               lnw_ipc_dbg("NOP_CMD = 0x%x\n", io_bus_master_cmd);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1229: FILE: arch/x86/kernel/mrst_ipc.c:908:
+               lnw_ipc_dbg("NOP_CMD = 0x%x\n", io_bus_master_cmd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: arch/x86/kernel/mrst_ipc.c:908:
+               lnw_ipc_dbg("NOP_CMD = 0x%x\n", io_bus_master_cmd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: arch/x86/kernel/mrst_ipc.c:909:
+       } else if (io_bus_master_cmd == READ_CMD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1230: FILE: arch/x86/kernel/mrst_ipc.c:909:
+       } else if (io_bus_master_cmd == READ_CMD) {
+               lnw_ipc_dbg("Address %#xp = data = %#x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1231: FILE: arch/x86/kernel/mrst_ipc.c:910:
+               lnw_ipc_dbg("Address %#xp = data = %#x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: arch/x86/kernel/mrst_ipc.c:910:
+               lnw_ipc_dbg("Address %#xp = data = %#x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1232: FILE: arch/x86/kernel/mrst_ipc.c:911:
+                       (unsigned int)(p_mrst_i2c_ser_bus + CTRL_REG_ADDR),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1232: FILE: arch/x86/kernel/mrst_ipc.c:911:
+               lnw_ipc_dbg("Address %#xp = data = %#x\n",
+                       (unsigned int)(p_mrst_i2c_ser_bus + CTRL_REG_ADDR),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: arch/x86/kernel/mrst_ipc.c:911:
+                       (unsigned int)(p_mrst_i2c_ser_bus + CTRL_REG_ADDR),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: arch/x86/kernel/mrst_ipc.c:912:
+                                               p_reg_data->ctrl_reg_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: arch/x86/kernel/mrst_ipc.c:912:
+                                               p_reg_data->ctrl_reg_addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1234: FILE: arch/x86/kernel/mrst_ipc.c:913:
+               writel(p_reg_data->ctrl_reg_addr, (p_mrst_i2c_ser_bus$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: arch/x86/kernel/mrst_ipc.c:913:
+               writel(p_reg_data->ctrl_reg_addr, (p_mrst_i2c_ser_bus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1235: FILE: arch/x86/kernel/mrst_ipc.c:914:
+                                                       + CTRL_REG_ADDR));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: arch/x86/kernel/mrst_ipc.c:914:
+                                                       + CTRL_REG_ADDR));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1236: FILE: arch/x86/kernel/mrst_ipc.c:915:
+               p_reg_data->ctrl_reg_data =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: arch/x86/kernel/mrst_ipc.c:915:
+               p_reg_data->ctrl_reg_data =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1237: FILE: arch/x86/kernel/mrst_ipc.c:916:
+                       readl(p_mrst_i2c_ser_bus + CTRL_REG_DATA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: arch/x86/kernel/mrst_ipc.c:916:
+                       readl(p_mrst_i2c_ser_bus + CTRL_REG_DATA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: arch/x86/kernel/mrst_ipc.c:917:
+       } else if (io_bus_master_cmd == WRITE_CMD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1238: FILE: arch/x86/kernel/mrst_ipc.c:917:
+       } else if (io_bus_master_cmd == WRITE_CMD) {
+               writel(p_reg_data->ctrl_reg_data, (p_mrst_i2c_ser_bus

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: arch/x86/kernel/mrst_ipc.c:918:
+               writel(p_reg_data->ctrl_reg_data, (p_mrst_i2c_ser_bus$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: arch/x86/kernel/mrst_ipc.c:918:
+               writel(p_reg_data->ctrl_reg_data, (p_mrst_i2c_ser_bus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1240: FILE: arch/x86/kernel/mrst_ipc.c:919:
+                                                       + CTRL_REG_DATA));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1240: FILE: arch/x86/kernel/mrst_ipc.c:919:
+                                                       + CTRL_REG_DATA));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1241: FILE: arch/x86/kernel/mrst_ipc.c:920:
+               writel(p_reg_data->ctrl_reg_addr, p_mrst_i2c_ser_bus$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: arch/x86/kernel/mrst_ipc.c:920:
+               writel(p_reg_data->ctrl_reg_addr, p_mrst_i2c_ser_bus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1242: FILE: arch/x86/kernel/mrst_ipc.c:921:
+                                                       + CTRL_REG_ADDR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1242: FILE: arch/x86/kernel/mrst_ipc.c:921:
+                                                       + CTRL_REG_ADDR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1243: FILE: arch/x86/kernel/mrst_ipc.c:922:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1243: FILE: arch/x86/kernel/mrst_ipc.c:922:
+       } else {
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#1244: FILE: arch/x86/kernel/mrst_ipc.c:923:
+               printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: arch/x86/kernel/mrst_ipc.c:923:
+               printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1244: FILE: arch/x86/kernel/mrst_ipc.c:923:
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#1245: FILE: arch/x86/kernel/mrst_ipc.c:924:
+                       "mrst_program_io_bus_master: invalid cmd = 0x%x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: arch/x86/kernel/mrst_ipc.c:924:
+                       "mrst_program_io_bus_master: invalid cmd = 0x%x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1246: FILE: arch/x86/kernel/mrst_ipc.c:925:
+                                                       io_bus_master_cmd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: arch/x86/kernel/mrst_ipc.c:925:
+                                                       io_bus_master_cmd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: arch/x86/kernel/mrst_ipc.c:926:
+               mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: arch/x86/kernel/mrst_ipc.c:926:
+               mutex_unlock(&mrst_ipc_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1248: FILE: arch/x86/kernel/mrst_ipc.c:927:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: arch/x86/kernel/mrst_ipc.c:927:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1249: FILE: arch/x86/kernel/mrst_ipc.c:928:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1249: FILE: arch/x86/kernel/mrst_ipc.c:928:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: arch/x86/kernel/mrst_ipc.c:929:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: arch/x86/kernel/mrst_ipc.c:930:
+       mutex_unlock(&mrst_ipc_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: arch/x86/kernel/mrst_ipc.c:931:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1258: FILE: arch/x86/kernel/mrst_ipc.c:937:
+                                       u8 ioc, u32 size, u8 cmd_id)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: arch/x86/kernel/mrst_ipc.c:937:
+static inline int mrst_set_ipc_cmd_fields(union mrst_ipc_fw_cmd *ipc_cmd,
+                                       u8 ioc, u32 size, u8 cmd_id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: arch/x86/kernel/mrst_ipc.c:937:
+                                       u8 ioc, u32 size, u8 cmd_id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1260: FILE: arch/x86/kernel/mrst_ipc.c:939:
+       ipc_cmd->cmd_parts.cmd = IPC_PMIC_CMD_READ_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: arch/x86/kernel/mrst_ipc.c:940:
+       ipc_cmd->cmd_parts.ioc = ioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: arch/x86/kernel/mrst_ipc.c:941:
+       ipc_cmd->cmd_parts.rfu1 = 0x0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: arch/x86/kernel/mrst_ipc.c:942:
+       ipc_cmd->cmd_parts.cmd_ID = cmd_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1264: FILE: arch/x86/kernel/mrst_ipc.c:943:
+       ipc_cmd->cmd_parts.size = size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: arch/x86/kernel/mrst_ipc.c:944:
+       return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1267: FILE: arch/x86/kernel/mrst_ipc.c:946:
+}
+/* Wait for command completion from SCU firmware */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1270: FILE: arch/x86/kernel/mrst_ipc.c:949:
+       union mrst_ipc_sts ipc_sts_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1271: FILE: arch/x86/kernel/mrst_ipc.c:950:
+       u64 time_to_wait = 0xFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: arch/x86/kernel/mrst_ipc.c:952:
+       if (mrst_ipc_ioc_bit) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1273: FILE: arch/x86/kernel/mrst_ipc.c:952:
+       if (mrst_ipc_ioc_bit) {
[...]
+               time_to_wait = msecs_to_jiffies(IPC_TIMEOUT);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1274: FILE: arch/x86/kernel/mrst_ipc.c:953:
+               /*wait for 10ms do not tie to kernel timer_ticks*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1275: FILE: arch/x86/kernel/mrst_ipc.c:954:
+               time_to_wait = msecs_to_jiffies(IPC_TIMEOUT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: arch/x86/kernel/mrst_ipc.c:954:
+               time_to_wait = msecs_to_jiffies(IPC_TIMEOUT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1276: FILE: arch/x86/kernel/mrst_ipc.c:955:
+               /* Wait for command completion from SCU firmware */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: arch/x86/kernel/mrst_ipc.c:956:
+               wait_event_interruptible_timeout(mrst_cmd_wait,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: arch/x86/kernel/mrst_ipc.c:956:
+               wait_event_interruptible_timeout(mrst_cmd_wait,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: arch/x86/kernel/mrst_ipc.c:957:
+                               scu_cmd_completed, time_to_wait);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1278: FILE: arch/x86/kernel/mrst_ipc.c:957:
+               wait_event_interruptible_timeout(mrst_cmd_wait,
+                               scu_cmd_completed, time_to_wait);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: arch/x86/kernel/mrst_ipc.c:957:
+                               scu_cmd_completed, time_to_wait);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: arch/x86/kernel/mrst_ipc.c:958:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: arch/x86/kernel/mrst_ipc.c:958:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: arch/x86/kernel/mrst_ipc.c:959:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1280: FILE: arch/x86/kernel/mrst_ipc.c:959:
+       } else {
+               udelay(IPC_WAIT_TIME);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1281: FILE: arch/x86/kernel/mrst_ipc.c:960:
+               udelay(IPC_WAIT_TIME);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: arch/x86/kernel/mrst_ipc.c:960:
+               udelay(IPC_WAIT_TIME);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1282: FILE: arch/x86/kernel/mrst_ipc.c:961:
+               ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: arch/x86/kernel/mrst_ipc.c:961:
+               ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: arch/x86/kernel/mrst_ipc.c:962:
+               if (ipc_sts_reg.ipc_sts_parts.busy) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: arch/x86/kernel/mrst_ipc.c:962:
+               if (ipc_sts_reg.ipc_sts_parts.busy) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1283: FILE: arch/x86/kernel/mrst_ipc.c:962:
+               if (ipc_sts_reg.ipc_sts_parts.busy) {
+                       printk(KERN_ERR "wait_for_scu_cmd_completion:\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: arch/x86/kernel/mrst_ipc.c:963:
+                       printk(KERN_ERR "wait_for_scu_cmd_completion:\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: arch/x86/kernel/mrst_ipc.c:963:
+                       printk(KERN_ERR "wait_for_scu_cmd_completion:\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1284: FILE: arch/x86/kernel/mrst_ipc.c:963:
+                       printk(KERN_ERR "wait_for_scu_cmd_completion:\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1284: FILE: arch/x86/kernel/mrst_ipc.c:963:
+                       printk(KERN_ERR "wait_for_scu_cmd_completion:\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1285: FILE: arch/x86/kernel/mrst_ipc.c:964:
+                                       Timeout ioc = 0 and SCU is busy%d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: arch/x86/kernel/mrst_ipc.c:964:
+                                       Timeout ioc = 0 and SCU is busy%d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: arch/x86/kernel/mrst_ipc.c:965:
+                                       ipc_sts_reg.ipc_sts_parts.busy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: arch/x86/kernel/mrst_ipc.c:965:
+                                       ipc_sts_reg.ipc_sts_parts.busy);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: arch/x86/kernel/mrst_ipc.c:966:
+                       return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: arch/x86/kernel/mrst_ipc.c:966:
+                       return -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1288: FILE: arch/x86/kernel/mrst_ipc.c:967:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: arch/x86/kernel/mrst_ipc.c:967:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: arch/x86/kernel/mrst_ipc.c:968:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: arch/x86/kernel/mrst_ipc.c:969:
+       return 0; /*SCU Not busy*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: arch/x86/kernel/mrst_ipc.c:975:
+       union mrst_ipc_sts ipc_sts_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: arch/x86/kernel/mrst_ipc.c:977:
+       ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: arch/x86/kernel/mrst_ipc.c:978:
+       if (ipc_sts_reg.ipc_sts_parts.error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1299: FILE: arch/x86/kernel/mrst_ipc.c:978:
+       if (ipc_sts_reg.ipc_sts_parts.error) {
+               printk(KERN_ERR "is_mrst_scu_error: Command failed Error\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1300: FILE: arch/x86/kernel/mrst_ipc.c:979:
+               printk(KERN_ERR "is_mrst_scu_error: Command failed Error\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: arch/x86/kernel/mrst_ipc.c:979:
+               printk(KERN_ERR "is_mrst_scu_error: Command failed Error\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1300: FILE: arch/x86/kernel/mrst_ipc.c:979:
+               printk(KERN_ERR "is_mrst_scu_error: Command failed Error\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1300: FILE: arch/x86/kernel/mrst_ipc.c:979:
+               printk(KERN_ERR "is_mrst_scu_error: Command failed Error\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1301: FILE: arch/x86/kernel/mrst_ipc.c:980:
+                       code = %#x\n", ipc_sts_reg.ipc_sts_parts.error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: arch/x86/kernel/mrst_ipc.c:980:
+                       code = %#x\n", ipc_sts_reg.ipc_sts_parts.error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1302: FILE: arch/x86/kernel/mrst_ipc.c:981:
+               WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: arch/x86/kernel/mrst_ipc.c:981:
+               WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1303: FILE: arch/x86/kernel/mrst_ipc.c:982:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: arch/x86/kernel/mrst_ipc.c:982:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: arch/x86/kernel/mrst_ipc.c:983:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: arch/x86/kernel/mrst_ipc.c:984:
+       return 0; /*No error*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: arch/x86/kernel/mrst_ipc.c:990:
+       union mrst_ipc_sts ipc_sts_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: arch/x86/kernel/mrst_ipc.c:991:
+       u32 retry = MAX_RETRY_CNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: arch/x86/kernel/mrst_ipc.c:993:
+       while (retry--) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1314: FILE: arch/x86/kernel/mrst_ipc.c:993:
+       while (retry--) {
+               ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: arch/x86/kernel/mrst_ipc.c:994:
+               ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: arch/x86/kernel/mrst_ipc.c:994:
+               ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1316: FILE: arch/x86/kernel/mrst_ipc.c:995:
+               if (!ipc_sts_reg.ipc_sts_parts.busy)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: arch/x86/kernel/mrst_ipc.c:995:
+               if (!ipc_sts_reg.ipc_sts_parts.busy)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1316: FILE: arch/x86/kernel/mrst_ipc.c:995:
+               if (!ipc_sts_reg.ipc_sts_parts.busy)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1317: FILE: arch/x86/kernel/mrst_ipc.c:996:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: arch/x86/kernel/mrst_ipc.c:996:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1318: FILE: arch/x86/kernel/mrst_ipc.c:997:
+               udelay(USLEEP_STS_TIMEOUT); /*10usec*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: arch/x86/kernel/mrst_ipc.c:997:
+               udelay(USLEEP_STS_TIMEOUT); /*10usec*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: arch/x86/kernel/mrst_ipc.c:998:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: arch/x86/kernel/mrst_ipc.c:999:
+       if (ipc_sts_reg.ipc_sts_parts.busy) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1320: FILE: arch/x86/kernel/mrst_ipc.c:999:
+       if (ipc_sts_reg.ipc_sts_parts.busy) {
+               printk(KERN_DEBUG "is_mrst_scu_busy: SCU is busy %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: arch/x86/kernel/mrst_ipc.c:1000:
+               printk(KERN_DEBUG "is_mrst_scu_busy: SCU is busy %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: arch/x86/kernel/mrst_ipc.c:1000:
+               printk(KERN_DEBUG "is_mrst_scu_busy: SCU is busy %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1321: FILE: arch/x86/kernel/mrst_ipc.c:1000:
+               printk(KERN_DEBUG "is_mrst_scu_busy: SCU is busy %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'is_mrst_scu_busy', this function's name, in a string
#1321: FILE: arch/x86/kernel/mrst_ipc.c:1000:
+               printk(KERN_DEBUG "is_mrst_scu_busy: SCU is busy %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: arch/x86/kernel/mrst_ipc.c:1001:
+                                       ipc_sts_reg.ipc_sts_parts.busy);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1322: FILE: arch/x86/kernel/mrst_ipc.c:1001:
+               printk(KERN_DEBUG "is_mrst_scu_busy: SCU is busy %d\n",
+                                       ipc_sts_reg.ipc_sts_parts.busy);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: arch/x86/kernel/mrst_ipc.c:1001:
+                                       ipc_sts_reg.ipc_sts_parts.busy);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: arch/x86/kernel/mrst_ipc.c:1002:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: arch/x86/kernel/mrst_ipc.c:1002:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: arch/x86/kernel/mrst_ipc.c:1003:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: arch/x86/kernel/mrst_ipc.c:1004:
+       return 0; /*SCU Not busy*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: arch/x86/kernel/mrst_ipc.c:1010:
+       scu_cmd_completed = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: arch/x86/kernel/mrst_ipc.c:1011:
+       writel(cmd_data, p_mrst_ipc_base + IPC_CMD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: arch/x86/kernel/mrst_ipc.c:1016:
+       union mrst_ipc_fw_cmd ipc_cca_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: arch/x86/kernel/mrst_ipc.c:1017:
+       union mrst_ipc_sts ipc_sts_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: arch/x86/kernel/mrst_ipc.c:1020:
+       ipc_cca_cmd.cmd_parts.cmd = IPC_CCA_CMD_READ_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: arch/x86/kernel/mrst_ipc.c:1021:
+       ipc_cca_cmd.cmd_parts.rfu1 = 0x0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: arch/x86/kernel/mrst_ipc.c:1022:
+       ipc_cca_cmd.cmd_parts.size = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: arch/x86/kernel/mrst_ipc.c:1023:
+       ipc_cca_cmd.cmd_parts.rfu2 = 0x0;$

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1346: FILE: arch/x86/kernel/mrst_ipc.c:1025:
+       /* Caller dependant fields */
                  ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: arch/x86/kernel/mrst_ipc.c:1026:
+       ipc_cca_cmd.cmd_parts.ioc = ioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: arch/x86/kernel/mrst_ipc.c:1027:
+       ipc_cca_cmd.cmd_parts.cmd_ID = cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: arch/x86/kernel/mrst_ipc.c:1030:
+       if (is_mrst_scu_busy())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1351: FILE: arch/x86/kernel/mrst_ipc.c:1030:
+       if (is_mrst_scu_busy())
+               return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1352: FILE: arch/x86/kernel/mrst_ipc.c:1031:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: arch/x86/kernel/mrst_ipc.c:1031:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: arch/x86/kernel/mrst_ipc.c:1033:
+       scu_cmd_completed = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: arch/x86/kernel/mrst_ipc.c:1036:
+       if (data)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1357: FILE: arch/x86/kernel/mrst_ipc.c:1036:
+       if (data)
+               writel(*data, p_mrst_ipc_base + IPC_WBUF + 4);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1358: FILE: arch/x86/kernel/mrst_ipc.c:1037:
+               writel(*data, p_mrst_ipc_base + IPC_WBUF + 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: arch/x86/kernel/mrst_ipc.c:1037:
+               writel(*data, p_mrst_ipc_base + IPC_WBUF + 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1360: FILE: arch/x86/kernel/mrst_ipc.c:1039:
+       writel(ipc_cca_cmd.cmd_data, p_mrst_ipc_base + IPC_CMD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: arch/x86/kernel/mrst_ipc.c:1042:
+       if (wait_for_scu_cmd_completion(ioc))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1363: FILE: arch/x86/kernel/mrst_ipc.c:1042:
+       if (wait_for_scu_cmd_completion(ioc))
+               return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1364: FILE: arch/x86/kernel/mrst_ipc.c:1043:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: arch/x86/kernel/mrst_ipc.c:1043:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: arch/x86/kernel/mrst_ipc.c:1046:
+       ipc_sts_reg.ipc_sts_data = readl(p_mrst_ipc_base + IPC_STS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: arch/x86/kernel/mrst_ipc.c:1047:
+       if (is_mrst_scu_error())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1368: FILE: arch/x86/kernel/mrst_ipc.c:1047:
+       if (is_mrst_scu_error())
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1369: FILE: arch/x86/kernel/mrst_ipc.c:1048:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: arch/x86/kernel/mrst_ipc.c:1048:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: arch/x86/kernel/mrst_ipc.c:1050:
+       return 0;$

WARNING:MODULE_LICENSE: unknown module license "GPL V2"
#1376: FILE: arch/x86/kernel/mrst_ipc.c:1055:
+MODULE_LICENSE("GPL V2");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1386: FILE: arch/x86/kernel/mrst_ipc.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1401: FILE: arch/x86/kernel/mrst_ipc.h:16:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1402: FILE: arch/x86/kernel/mrst_ipc.h:17:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1417: FILE: arch/x86/kernel/mrst_ipc.h:32:
+#define lnw_ipc_dbg(fmt, args...) \
+       do { printk(KERN_INFO fmt, ## args); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: arch/x86/kernel/mrst_ipc.h:33:
+       do { printk(KERN_INFO fmt, ## args); } while (0)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1418: FILE: arch/x86/kernel/mrst_ipc.h:33:
+       do { printk(KERN_INFO fmt, ## args); } while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1445: FILE: arch/x86/kernel/mrst_ipc.h:60:
+#define LNW_IPC_STS_BUSY       (1<<0)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1445: FILE: arch/x86/kernel/mrst_ipc.h:60:
+#define LNW_IPC_STS_BUSY       (1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1446: FILE: arch/x86/kernel/mrst_ipc.h:61:
+#define LNW_IPC_STS_ERR                (1<<1)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1446: FILE: arch/x86/kernel/mrst_ipc.h:61:
+#define LNW_IPC_STS_ERR                (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1447: FILE: arch/x86/kernel/mrst_ipc.h:62:
+#define LNW_IPC_STS_CMDID      (0xF<<4)
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1448: FILE: arch/x86/kernel/mrst_ipc.h:63:
+#define LNW_IPC_STS_INITID     (0xFF<<8)
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1449: FILE: arch/x86/kernel/mrst_ipc.h:64:
+#define LNW_IPC_STS_ERR_CODE   (0xFF<<16)
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1452: FILE: arch/x86/kernel/mrst_ipc.h:67:
+#define LNW_IPC_CMD_CMD                (0xFF<<0)
                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1453: FILE: arch/x86/kernel/mrst_ipc.h:68:
+#define LNW_IPC_CMD_MSI                (1<<8)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1453: FILE: arch/x86/kernel/mrst_ipc.h:68:
+#define LNW_IPC_CMD_MSI                (1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1454: FILE: arch/x86/kernel/mrst_ipc.h:69:
+#define LNW_IPC_CMD_ID         (0xF<<12)
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1455: FILE: arch/x86/kernel/mrst_ipc.h:70:
+#define LNW_IPC_CMD_SIZE       (0xFF<<16)
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: arch/x86/kernel/mrst_ipc.h:73:
+       NORMAL_WRITE,           /*0x00 Normal Write */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: arch/x86/kernel/mrst_ipc.h:74:
+       MSG_WRITE,              /*0x01 Message Write */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: arch/x86/kernel/mrst_ipc.h:75:
+       INDIRECT_READ,          /*0x02 Indirect Read */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: arch/x86/kernel/mrst_ipc.h:76:
+       RSVD,                   /*0x03 Reserved */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: arch/x86/kernel/mrst_ipc.h:77:
+       READ_DMA,               /*0x04 Read DMA */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: arch/x86/kernel/mrst_ipc.h:78:
+       INDIRECT_WRITE,         /*0x05 Indirect write */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1475: FILE: arch/x86/kernel/mrst_ipc.h:90:
+       const char *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1476: FILE: arch/x86/kernel/mrst_ipc.h:91:
+       irqreturn_t(*irq) (int irq, void *ipc);$

WARNING:SPACING: missing space after return type
#1476: FILE: arch/x86/kernel/mrst_ipc.h:91:
+       irqreturn_t(*irq) (int irq, void *ipc);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1476: FILE: arch/x86/kernel/mrst_ipc.h:91:
+       irqreturn_t(*irq) (int irq, void *ipc);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: arch/x86/kernel/mrst_ipc.h:92:
+       int flags;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1513: FILE: arch/x86/kernel/mrst_ipc.h:128:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: arch/x86/kernel/mrst_ipc.h:174:
+       struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1560: FILE: arch/x86/kernel/mrst_ipc.h:175:
+               u32 busy:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: arch/x86/kernel/mrst_ipc.h:175:
+               u32 busy:1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1561: FILE: arch/x86/kernel/mrst_ipc.h:176:
+               u32 error:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: arch/x86/kernel/mrst_ipc.h:176:
+               u32 error:1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1562: FILE: arch/x86/kernel/mrst_ipc.h:177:
+               u32 rfu1:2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: arch/x86/kernel/mrst_ipc.h:177:
+               u32 rfu1:2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1563: FILE: arch/x86/kernel/mrst_ipc.h:178:
+               u32 cmd_id:4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: arch/x86/kernel/mrst_ipc.h:178:
+               u32 cmd_id:4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1564: FILE: arch/x86/kernel/mrst_ipc.h:179:
+               u32 initiator_id:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: arch/x86/kernel/mrst_ipc.h:179:
+               u32 initiator_id:8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1565: FILE: arch/x86/kernel/mrst_ipc.h:180:
+               u32 error_code:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: arch/x86/kernel/mrst_ipc.h:180:
+               u32 error_code:8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1566: FILE: arch/x86/kernel/mrst_ipc.h:181:
+               u32 rfu3:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: arch/x86/kernel/mrst_ipc.h:181:
+               u32 rfu3:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: arch/x86/kernel/mrst_ipc.h:182:
+       } ipc_sts_parts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: arch/x86/kernel/mrst_ipc.h:183:
+       u32 ipc_sts_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: arch/x86/kernel/mrst_ipc.h:196:
+       struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1582: FILE: arch/x86/kernel/mrst_ipc.h:197:
+               u32 cmd:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: arch/x86/kernel/mrst_ipc.h:197:
+               u32 cmd:8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1583: FILE: arch/x86/kernel/mrst_ipc.h:198:
+               u32 ioc:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: arch/x86/kernel/mrst_ipc.h:198:
+               u32 ioc:1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1584: FILE: arch/x86/kernel/mrst_ipc.h:199:
+               u32 rfu1:3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: arch/x86/kernel/mrst_ipc.h:199:
+               u32 rfu1:3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1585: FILE: arch/x86/kernel/mrst_ipc.h:200:
+               u32 cmd_ID:4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: arch/x86/kernel/mrst_ipc.h:200:
+               u32 cmd_ID:4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1586: FILE: arch/x86/kernel/mrst_ipc.h:201:
+               u32 size:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: arch/x86/kernel/mrst_ipc.h:201:
+               u32 size:8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1587: FILE: arch/x86/kernel/mrst_ipc.h:202:
+               u32 rfu2:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: arch/x86/kernel/mrst_ipc.h:202:
+               u32 rfu2:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: arch/x86/kernel/mrst_ipc.h:203:
+       } cmd_parts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: arch/x86/kernel/mrst_ipc.h:204:
+       u32 cmd_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: arch/x86/kernel/mrst_ipc.h:213:
+       u8 cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1599: FILE: arch/x86/kernel/mrst_ipc.h:214:
+       u32 data;$

WARNING:SPACING: missing space after struct definition
#1608: FILE: arch/x86/kernel/mrst_ipc.h:223:
+struct mrst_ipc_work_struct{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1609: FILE: arch/x86/kernel/mrst_ipc.h:224:
+       struct work_struct ipc_work;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: arch/x86/kernel/mrst_ipc.h:225:
+       u32 cmd_id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1616: FILE: arch/x86/kernel/mrst_ipc.h:231:
+                                       u8 ioc, u32 size, u8 cmd_id);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1616: FILE: arch/x86/kernel/mrst_ipc.h:231:
+static inline int mrst_set_ipc_cmd_fields(union mrst_ipc_fw_cmd *ipc_cmd,
+                                       u8 ioc, u32 size, u8 cmd_id);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1616: FILE: arch/x86/kernel/mrst_ipc.h:231:
+                                       u8 ioc, u32 size, u8 cmd_id);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 270 errors, 814 warnings, 55 checks, 1524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
