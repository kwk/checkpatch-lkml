WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#60: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:301:
+ * -------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#62: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:303:
+#if defined(CONFIG_MMC_ATMELMCI) || defined(CONFIG_MMC_ATMELMCI_MODULE)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#119: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:360:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*slave)...) over kzalloc(sizeof(struct mci_dma_data)...)
#131: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:372:
+	slave = kzalloc(sizeof(struct mci_dma_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:392:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#212: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:453:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#218: FILE: arch/arm/mach-at91/at91sam9g45_devices.c:459:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after mci0_data
#241: FILE: arch/arm/mach-at91/board-sam9m10g45ek.c:105:
+static struct mci_platform_data __initdata mci0_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after mci1_data
#249: FILE: arch/arm/mach-at91/board-sam9m10g45ek.c:113:
+static struct mci_platform_data __initdata mci1_data = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#257: FILE: arch/arm/mach-at91/board-sam9m10g45ek.c:121:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 6 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
