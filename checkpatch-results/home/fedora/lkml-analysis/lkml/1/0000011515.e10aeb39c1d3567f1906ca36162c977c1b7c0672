WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#44: FILE: drivers/net/tehuti.c:69:
+static struct pci_device_id __devinitdata bdx_pci_tbl[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after bdx_pci_tbl[]
#44: FILE: drivers/net/tehuti.c:69:
+static struct pci_device_id __devinitdata bdx_pci_tbl[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#165: FILE: drivers/net/tehuti.c:649:
+			pr_err("cant copy from user\n");
 			        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#214: FILE: drivers/net/tehuti.c:1339:
+	DBG("ERROR: rxdd bc %d rxfq %d to %d type %d err %d rxp %d pkt_id %d vtag %d len %d vlan_id %d cfi %d prio %d va_lo %d va_hi %d\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <regionSize>
#248: FILE: drivers/net/tehuti.c:1965:
+		pr_err("MMIO resource (%x) too small\n", regionSize);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'eneble' may be misspelled - perhaps 'enable'?
#272: FILE: drivers/net/tehuti.c:1996:
+			pr_err("Can't eneble msi. error is %d\n", err);
 			              ^^^^^^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#341: FILE: drivers/net/tehuti.h:544:
+#define RET(args...)					 \
+do {							 \
+	pr_err("%s:%-5d: RETURN\n", __func__, __LINE__); \
+	return args;					 \
+} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011515.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 1 checks, 302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011515.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
