WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
This patch fills in platform_setup functions for Moorestown. The abstraction

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: arch/x86/include/asm/setup.h:53:
+extern void mrst_early_detect(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: arch/x86/include/asm/setup.h:54:
+extern void setup_mrst_default_feature(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#96: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: arch/x86/kernel/mrst.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#132: FILE: arch/x86/kernel/mrst.c:32:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:BRACES: braces {} should be used on all arms of this statement
#148: FILE: arch/x86/kernel/mrst.c:48:
+	if (disable_apbt_percpu)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#150: FILE: arch/x86/kernel/mrst.c:50:
+		return setup_secondary_APIC_clock();
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#150: FILE: arch/x86/kernel/mrst.c:50:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#153: FILE: arch/x86/kernel/mrst.c:53:
+		/*
+		  * TBD:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#154: FILE: arch/x86/kernel/mrst.c:54:
+		  * TBD:
+		 * this is to avoid false stack corruption panic since

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#156: FILE: arch/x86/kernel/mrst.c:56:
+		 * request_irq will be called early for secondary apbt clock.
+		*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#166: FILE: arch/x86/kernel/mrst.c:66:
+		printk(KERN_INFO "APB timer works\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: arch/x86/kernel/mrst.c:104:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#216: FILE: arch/x86/kernel/mrst.c:116:
+	platform_setup.irqs.pci_enable_irq = mrst_pirq_enable_irq,
+
+	platform_setup.timers.timer_init = apbt_time_init;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: arch/x86/kernel/mrst.c:125:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#234: FILE: arch/x86/kernel/mrst.c:134:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'subarch_id >= 0'
#240: FILE: arch/x86/kernel/mrst.c:140:
+	if ((subarch_id >= 0) && (subarch_id < N_X86_SUBARCHS)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'subarch_id < N_X86_SUBARCHS'
#240: FILE: arch/x86/kernel/mrst.c:140:
+	if ((subarch_id >= 0) && (subarch_id < N_X86_SUBARCHS)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#246: FILE: arch/x86/kernel/mrst.c:146:
+		printk(KERN_INFO "Use default X86 platform feature set\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078445.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 10 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078445.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
