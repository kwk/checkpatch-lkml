WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#66: 
The "fd" parameter must ba a signalfd file descriptor. The "info" parameter
                        ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#69: 
The signalfd_dequeue function returns 0 if successfull.
                                           ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: fs/signalfd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#86: FILE: fs/signalfd.c:2:
+ *  fs/signalfd.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#108: FILE: fs/signalfd.c:24:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: fs/signalfd.c:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: fs/signalfd.c:30:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: fs/signalfd.c:48:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#136: FILE: fs/signalfd.c:52:
+static unsigned int signalfd_poll(struct file *filp, poll_table *wait);
                                                ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: fs/signalfd.c:55:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#145: FILE: fs/signalfd.c:61:
+};
+static struct kmem_cache *signalfd_ctx_cachep;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: fs/signalfd.c:64:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#166: FILE: fs/signalfd.c:82:
+		if (sig < 0)
[...]
+		else if (sigismember(&ctx->sigmask, sig) &&
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#172: FILE: fs/signalfd.c:88:
+			if (sq) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#175: FILE: fs/signalfd.c:91:
+			} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#185: FILE: fs/signalfd.c:101:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#275: FILE: fs/signalfd.c:191:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#300: FILE: fs/signalfd.c:216:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: fs/signalfd.c:223:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#308: FILE: fs/signalfd.c:224:
+static unsigned int signalfd_poll(struct file *filp, poll_table *wait)
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#315: FILE: fs/signalfd.c:231:
+	poll_wait(filp, &ctx->wqh, wait);
 	          ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#332: FILE: fs/signalfd.c:248:
+	return i == _NSIG_WORDS ? events: events | POLLIN;
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#335: FILE: fs/signalfd.c:251:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#346: FILE: fs/signalfd.c:262:
+		if ((isig = *pending & *mask) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#349: FILE: fs/signalfd.c:265:
+			BUG_ON(list_empty(&ctx->squeue[sig]));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#361: FILE: fs/signalfd.c:277:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#383: FILE: fs/signalfd.c:299:
+		MAX_SCHEDULE_TIMEOUT: (timeo * HZ + 999) / 1000;
 		                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#383: FILE: fs/signalfd.c:299:
+		MAX_SCHEDULE_TIMEOUT: (timeo * HZ + 999) / 1000;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#387: FILE: fs/signalfd.c:303:
+	if ((sq = signalfd_fetchsig(ctx)) == NULL && jtimeo) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#391: FILE: fs/signalfd.c:307:
+			if ((sq = signalfd_fetchsig(ctx)) != NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#417: FILE: fs/signalfd.c:333:
+		if (unlikely(res)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#422: FILE: fs/signalfd.c:338:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: fs/signalfd.c:347:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#443: FILE: fs/signalfd.c:359:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#525: FILE: include/linux/signalfd.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#526: FILE: include/linux/signalfd.h:2:
+ *  include/linux/signalfd.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#535: FILE: include/linux/signalfd.h:11:
+
+

CHECK:SPACING: No space is necessary after a cast
#570: FILE: kernel/signal.c:715:
+	switch ((unsigned long) sinfo) {

CHECK:SPACING: No space is necessary after a cast
#571: FILE: kernel/signal.c:716:
+	case (unsigned long) SEND_SIG_NOINFO:

CHECK:SPACING: No space is necessary after a cast
#578: FILE: kernel/signal.c:723:
+	case (unsigned long) SEND_SIG_PRIV:

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#708: FILE: include/linux/signal.h:236:
+extern void signal_fill_info(struct siginfo *dinfo, int sig, struct siginfo *sinfo);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 12 warnings, 24 checks, 571 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
