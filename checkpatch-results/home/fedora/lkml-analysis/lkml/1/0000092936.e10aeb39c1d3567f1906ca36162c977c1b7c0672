WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#87: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/watchdog/w90p910_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/watchdog/w90p910_wdt.c:51:
+MODULE_PARM_DESC(nowayout,
+		"Watchdog cannot be stopped once started (default="

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#154: FILE: drivers/watchdog/w90p910_wdt.c:63:
+	spinlock_t       wdt_lock;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#208: FILE: drivers/watchdog/w90p910_wdt.c:117:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_time_level < 0'
#229: FILE: drivers/watchdog/w90p910_wdt.c:138:
+	if ((new_time_level < 0) || (new_time_level > WDT_MAX_TIME_LEVEL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_time_level > WDT_MAX_TIME_LEVEL'
#229: FILE: drivers/watchdog/w90p910_wdt.c:138:
+	if ((new_time_level < 0) || (new_time_level > WDT_MAX_TIME_LEVEL))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/watchdog/w90p910_wdt.c:156:
+static long w90p910_wdt_ioctl(struct file *file,
+					unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/watchdog/w90p910_wdt.c:197:
+static ssize_t w90p910_wdt_write(struct file *file, const char *data,
+						size_t len, loff_t *ppos)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#309: FILE: drivers/watchdog/w90p910_wdt.c:218:
+static int __devinit w90p910wdt_probe(struct platform_device *pdev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*w90p910_wdt)...) over kzalloc(sizeof(struct w90p910_wdt)...)
#313: FILE: drivers/watchdog/w90p910_wdt.c:222:
+	w90p910_wdt = kzalloc(sizeof(struct w90p910_wdt), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!w90p910_wdt->res"
#320: FILE: drivers/watchdog/w90p910_wdt.c:229:
+	if (w90p910_wdt->res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!w90p910_wdt->wdt_base"
#335: FILE: drivers/watchdog/w90p910_wdt.c:244:
+	if (w90p910_wdt->wdt_base == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/watchdog/w90p910_wdt.c:252:
+	ret = request_irq(w90p910_wdt->wdt_irq,
+				w90p910_wdt_irq, 0, pdev->name, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/watchdog/w90p910_wdt.c:284:
+	release_mem_region(w90p910_wdt->res->start,
+					resource_size(w90p910_wdt->res));

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#381: FILE: drivers/watchdog/w90p910_wdt.c:290:
+static int __devexit w90p910wdt_remove(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/watchdog/w90p910_wdt.c:300:
+	release_mem_region(w90p910_wdt->res->start,
+					resource_size(w90p910_wdt->res));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092936.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 13 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092936.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
