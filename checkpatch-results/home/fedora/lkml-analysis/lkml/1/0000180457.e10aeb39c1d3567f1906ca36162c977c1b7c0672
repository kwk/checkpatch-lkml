WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
Assigning CSS ID for each memcg and use css_get_next() for scanning hierarchy.

WARNING:TYPO_SPELLING: 'folloing' may be misspelled - perhaps 'following'?
#44: 
	Assume folloing tree.
	       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#235: FILE: mm/memcontrol.c:694:
+		if (!css) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#239: FILE: mm/memcontrol.c:698:
+		} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: mm/memcontrol.c:731:
+ ^I * Assume a scan starting from somewhere 1,2,3,4,..$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: mm/memcontrol.c:731:
+ ^I * Assume a scan starting from somewhere 1,2,3,4,..$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: mm/memcontrol.c:732:
+ ^I * ...->1->2->3->4->1->2->3->4->1->2->3->4->.....$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: mm/memcontrol.c:732:
+ ^I * ...->1->2->3->4->1->2->3->4->1->2->3->4->.....$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: mm/memcontrol.c:733:
+ ^I * check that "1" is visited twice is enough for checking whether$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: mm/memcontrol.c:733:
+ ^I * check that "1" is visited twice is enough for checking whether$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: mm/memcontrol.c:734:
+ ^I * all IDs are scanned. So, here, checking scan_age is updated by 2.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: mm/memcontrol.c:734:
+ ^I * all IDs are scanned. So, here, checking scan_age is updated by 2.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: mm/memcontrol.c:737:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: mm/memcontrol.c:737:
+ ^I */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000180457.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 7 warnings, 2 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000180457.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
