WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/input/keyboard/Kconfig:386:
+config KEYBOARD_ADP5588
+	tristate "ADP5588 I2C QWERTY Keypad and IO Expander"
+	depends on I2C
+	help
+	  Say Y here if you want to use a ADP5588 attached to your system I2C bus
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called adp5588-keys.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#76: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/input/keyboard/adp5588-keys.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#105: FILE: drivers/input/keyboard/adp5588-keys.c:25:
+#define AUTO_INC	(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#106: FILE: drivers/input/keyboard/adp5588-keys.c:26:
+#define GPIEM_CFG	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: drivers/input/keyboard/adp5588-keys.c:27:
+#define OVR_FLOW_M	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#108: FILE: drivers/input/keyboard/adp5588-keys.c:28:
+#define INT_CFG		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#109: FILE: drivers/input/keyboard/adp5588-keys.c:29:
+#define OVR_FLOW_IEN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#110: FILE: drivers/input/keyboard/adp5588-keys.c:30:
+#define K_LCK_IM	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: drivers/input/keyboard/adp5588-keys.c:31:
+#define GPI_IEN		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#112: FILE: drivers/input/keyboard/adp5588-keys.c:32:
+#define KE_IEN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: drivers/input/keyboard/adp5588-keys.c:35:
+#define CMP2_INT	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: drivers/input/keyboard/adp5588-keys.c:36:
+#define CMP1_INT	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: drivers/input/keyboard/adp5588-keys.c:37:
+#define OVR_FLOW_INT	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#118: FILE: drivers/input/keyboard/adp5588-keys.c:38:
+#define K_LCK_INT	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#119: FILE: drivers/input/keyboard/adp5588-keys.c:39:
+#define GPI_INT		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#120: FILE: drivers/input/keyboard/adp5588-keys.c:40:
+#define KE_INT		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#123: FILE: drivers/input/keyboard/adp5588-keys.c:43:
+#define K_LCK_EN	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#128: FILE: drivers/input/keyboard/adp5588-keys.c:48:
+#define KEY_EV_PRESSED		(1 << 7)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#131: FILE: drivers/input/keyboard/adp5588-keys.c:51:
+#define KP_SEL(x)		(0xFFFF >> (16 - x))	/* 2^x-1 */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTA>
#181: FILE: drivers/input/keyboard/adp5588-keys.c:101:
+				key = adp5588_read(client, Key_EVENTA + i);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/input/keyboard/adp5588-keys.c:103:
+				input_report_key(kpad->input,
+					kpad->keycode[(key & KEY_EV_MASK) - 1],

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#207: FILE: drivers/input/keyboard/adp5588-keys.c:127:
+static int __devinit adp5588_setup(struct i2c_client *client)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#239: FILE: drivers/input/keyboard/adp5588-keys.c:159:
+static int __devinit adp5588_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/input/keyboard/adp5588-keys.c:160:
+static int __devinit adp5588_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/input/keyboard/adp5588-keys.c:170:
+	if (!i2c_check_functionality(client->adapter,
+					I2C_FUNC_SMBUS_BYTE_DATA)) {

CHECK:SPACING: No space is necessary after a cast
#292: FILE: drivers/input/keyboard/adp5588-keys.c:212:
+	revid = (u8) ret & ADP5588_DEVICE_ID_MASK;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/input/keyboard/adp5588-keys.c:232:
+	memcpy(kpad->keycode, pdata->keymap,
+		pdata->keymapsize * input->keycodesize);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#360: FILE: drivers/input/keyboard/adp5588-keys.c:280:
+static int __devexit adp5588_remove(struct i2c_client *client)

WARNING:CONST_STRUCT: struct dev_pm_ops should normally be const
#402: FILE: drivers/input/keyboard/adp5588-keys.c:322:
+static struct dev_pm_ops adp5588_dev_pm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#448: FILE: include/linux/i2c/adp5588.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTB>
#464: FILE: include/linux/i2c/adp5588.h:17:
+#define Key_EVENTB 0x05		/* Key Event Register B */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTC>
#465: FILE: include/linux/i2c/adp5588.h:18:
+#define Key_EVENTC 0x06		/* Key Event Register C */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTD>
#466: FILE: include/linux/i2c/adp5588.h:19:
+#define Key_EVENTD 0x07		/* Key Event Register D */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTE>
#467: FILE: include/linux/i2c/adp5588.h:20:
+#define Key_EVENTE 0x08		/* Key Event Register E */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTF>
#468: FILE: include/linux/i2c/adp5588.h:21:
+#define Key_EVENTF 0x09		/* Key Event Register F */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTG>
#469: FILE: include/linux/i2c/adp5588.h:22:
+#define Key_EVENTG 0x0A		/* Key Event Register G */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTH>
#470: FILE: include/linux/i2c/adp5588.h:23:
+#define Key_EVENTH 0x0B		/* Key Event Register H */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTI>
#471: FILE: include/linux/i2c/adp5588.h:24:
+#define Key_EVENTI 0x0C		/* Key Event Register I */

CHECK:CAMELCASE: Avoid CamelCase: <Key_EVENTJ>
#472: FILE: include/linux/i2c/adp5588.h:25:
+#define Key_EVENTJ 0x0D		/* Key Event Register J */

CHECK:CAMELCASE: Avoid CamelCase: <Debounce_DIS1>
#500: FILE: include/linux/i2c/adp5588.h:53:
+#define Debounce_DIS1 0x29	/* Debounce Disable */

CHECK:CAMELCASE: Avoid CamelCase: <Debounce_DIS2>
#501: FILE: include/linux/i2c/adp5588.h:54:
+#define Debounce_DIS2 0x2A	/* Debounce Disable */

CHECK:CAMELCASE: Avoid CamelCase: <Debounce_DIS3>
#502: FILE: include/linux/i2c/adp5588.h:55:
+#define Debounce_DIS3 0x2B	/* Debounce Disable */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#509: FILE: include/linux/i2c/adp5588.h:62:
+#define CMP1_LVL2_TRIP 0x33	/* L2 Light Sensor Hysteresis (Active when Output Rising) for Sensor 1 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#511: FILE: include/linux/i2c/adp5588.h:64:
+#define CMP1_LVL3_TRIP 0x35	/* L3 Light Sensor Hysteresis (Active when Output Rising) For Sensor 1 */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#514: FILE: include/linux/i2c/adp5588.h:67:
+#define CMP2_LVL2_HYS 0x38	/* L2 Light Sensor Hysteresis (Active when Output Rising) for Sensor 2 */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#516: FILE: include/linux/i2c/adp5588.h:69:
+#define CMP2_LVL3_HYS 0x3A	/* L3 Light Sensor Hysteresis (Active when Output Rising) For Sensor 2 */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071481.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 35 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000071481.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
