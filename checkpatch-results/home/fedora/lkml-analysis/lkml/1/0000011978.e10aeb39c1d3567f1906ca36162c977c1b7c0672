WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Reset, sleep, external clock functions are not mandatory, so not implemented.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/misc/s371_qr999.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#101: FILE: drivers/misc/s371_qr999.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/misc/s371_qr999.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:TYPO_SPELLING: 'youself' may be misspelled - perhaps 'yourself'?
#108: FILE: drivers/misc/s371_qr999.c:24:
+ * implement it youself by using gpio.
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/misc/s371_qr999.c:35:
+ * ^I# cat /sys/devices/platform/s371_qr999/trim_get$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#198: FILE: drivers/misc/s371_qr999.c:114:
+	struct mutex mutex;

WARNING:SPACING: Unnecessary space before function pointer arguments
#199: FILE: drivers/misc/s371_qr999.c:115:
+	int (*write_byte) (struct s371_qr999 *s371, int reg, u8 val);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#200: FILE: drivers/misc/s371_qr999.c:116:
+	int (*read_byte) (struct s371_qr999 *s371, int reg, u8 *val);

WARNING:SPACING: Unnecessary space before function pointer arguments
#201: FILE: drivers/misc/s371_qr999.c:117:
+	int (*write_word) (struct s371_qr999 *s371, int reg, u16 val);

WARNING:SPACING: Unnecessary space before function pointer arguments
#202: FILE: drivers/misc/s371_qr999.c:118:
+	int (*read_word) (struct s371_qr999 *s371, int reg, u16 *val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/misc/s371_qr999.c:136:
+	struct i2c_client *c = s371->client;
+	return i2c_smbus_write_byte_data(c, reg, val);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: drivers/misc/s371_qr999.c:153:
+	struct i2c_client *c = s371->client;
+	return i2c_smbus_write_word_data(c, reg, val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/misc/s371_qr999.c:248:
+static void s371_qr999_trim_get(struct s371_qr999 *s371,
+				 int *r, int *g, int *b, int *c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/misc/s371_qr999.c:275:
+static ssize_t s371_qr999_raw_color_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/misc/s371_qr999.c:287:
+static ssize_t s371_qr999_trim_color_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/misc/s371_qr999.c:299:
+static ssize_t s371_qr999_trim_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_raw_color_show' to 'raw_color_show'
#390: FILE: drivers/misc/s371_qr999.c:306:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#392: FILE: drivers/misc/s371_qr999.c:308:
+static DEVICE_ATTR(raw_color, S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_trim_color_show' to 'trim_color_show'
#394: FILE: drivers/misc/s371_qr999.c:310:
+static DEVICE_ATTR(trim_color, S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#394: FILE: drivers/misc/s371_qr999.c:310:
+static DEVICE_ATTR(trim_color, S_IRUGO,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_trim_show' to 'trim_get_show'
#396: FILE: drivers/misc/s371_qr999.c:312:
+static DEVICE_ATTR(trim_get, S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#396: FILE: drivers/misc/s371_qr999.c:312:
+static DEVICE_ATTR(trim_get, S_IRUGO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/misc/s371_qr999.c:329:
+static ssize_t s371_qr999_int_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: drivers/misc/s371_qr999.c:348:
+static ssize_t s371_qr999_int_store(struct device *dev,
+				  struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#447: FILE: drivers/misc/s371_qr999.c:363:
+	if (strict_strtoul(buf, 0, &res))

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_int_show' to 'red_int_show' 's371_qr999_int_store' to 'red_int_store'
#457: FILE: drivers/misc/s371_qr999.c:373:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#459: FILE: drivers/misc/s371_qr999.c:375:
+static DEVICE_ATTR(red_int, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_int_show' to 'green_int_show' 's371_qr999_int_store' to 'green_int_store'
#461: FILE: drivers/misc/s371_qr999.c:377:
+static DEVICE_ATTR(green_int, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#461: FILE: drivers/misc/s371_qr999.c:377:
+static DEVICE_ATTR(green_int, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_int_show' to 'blue_int_show' 's371_qr999_int_store' to 'blue_int_store'
#463: FILE: drivers/misc/s371_qr999.c:379:
+static DEVICE_ATTR(blue_int, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#463: FILE: drivers/misc/s371_qr999.c:379:
+static DEVICE_ATTR(blue_int, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_int_show' to 'clear_int_show' 's371_qr999_int_store' to 'clear_int_store'
#465: FILE: drivers/misc/s371_qr999.c:381:
+static DEVICE_ATTR(clear_int, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#465: FILE: drivers/misc/s371_qr999.c:381:
+static DEVICE_ATTR(clear_int, S_IRUGO | S_IWUSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/misc/s371_qr999.c:400:
+static ssize_t s371_qr999_cap_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/misc/s371_qr999.c:417:
+static ssize_t s371_qr999_cap_store(struct device *dev,
+				  struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#515: FILE: drivers/misc/s371_qr999.c:431:
+	if (strict_strtoul(buf, 0, &res))

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_cap_show' to 'red_cap_show' 's371_qr999_cap_store' to 'red_cap_store'
#525: FILE: drivers/misc/s371_qr999.c:441:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#527: FILE: drivers/misc/s371_qr999.c:443:
+static DEVICE_ATTR(red_cap, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_cap_show' to 'green_cap_show' 's371_qr999_cap_store' to 'green_cap_store'
#529: FILE: drivers/misc/s371_qr999.c:445:
+static DEVICE_ATTR(green_cap, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#529: FILE: drivers/misc/s371_qr999.c:445:
+static DEVICE_ATTR(green_cap, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_cap_show' to 'blue_cap_show' 's371_qr999_cap_store' to 'blue_cap_store'
#531: FILE: drivers/misc/s371_qr999.c:447:
+static DEVICE_ATTR(blue_cap, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#531: FILE: drivers/misc/s371_qr999.c:447:
+static DEVICE_ATTR(blue_cap, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 's371_qr999_cap_show' to 'clear_cap_show' 's371_qr999_cap_store' to 'clear_cap_store'
#533: FILE: drivers/misc/s371_qr999.c:449:
+static DEVICE_ATTR(clear_cap, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#533: FILE: drivers/misc/s371_qr999.c:449:
+static DEVICE_ATTR(clear_cap, S_IRUGO | S_IWUSR,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#589: FILE: drivers/misc/s371_qr999.c:505:
+static int __devinit s371_qr999_i2c_probe(struct i2c_client *client,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#606: FILE: drivers/misc/s371_qr999.c:522:
+	printk(KERN_INFO DRIVER_NAME

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#612: FILE: drivers/misc/s371_qr999.c:528:
+static int __devexit s371_qr999_i2c_remove(struct i2c_client *client)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 38 warnings, 9 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
