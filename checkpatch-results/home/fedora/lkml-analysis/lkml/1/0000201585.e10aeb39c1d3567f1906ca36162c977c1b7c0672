WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#127: FILE: fs/exec.c:133:
+	error = integrity_path_check(&nd.path, MAY_READ | MAY_EXEC | MAY_OPEN);
 	                              ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#265: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#270: FILE: include/linux/integrity.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#297: FILE: include/linux/integrity.h:28:
+ * ^IReturn 0 if operation was successful.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: include/linux/integrity.h:34:
+ * ^IReturn 0 if operation was successful.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: include/linux/integrity.h:44:
+ * ^Idecision.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: include/linux/integrity.h:45:
+ * ^IReturn 0 if operation was successful.$

WARNING:SPACING: Unnecessary space before function pointer arguments
#324: FILE: include/linux/integrity.h:55:
+	int (*collect_measurement) (void *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#324: FILE: include/linux/integrity.h:55:
+	int (*collect_measurement) (void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#325: FILE: include/linux/integrity.h:56:
+	int (*appraise_measurement) (void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#325: FILE: include/linux/integrity.h:56:
+	int (*appraise_measurement) (void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#326: FILE: include/linux/integrity.h:57:
+	void (*store_measurement) (void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#326: FILE: include/linux/integrity.h:57:
+	void (*store_measurement) (void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#327: FILE: include/linux/integrity.h:58:
+	int (*must_measure) (void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#327: FILE: include/linux/integrity.h:58:
+	int (*must_measure) (void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#328: FILE: include/linux/integrity.h:59:
+	void (*display_template) (struct seq_file *m, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#328: FILE: include/linux/integrity.h:59:
+	void (*display_template) (struct seq_file *m, void *,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#331: FILE: include/linux/integrity.h:62:
+};
+extern int integrity_register_template(const char *template_name,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: include/linux/integrity.h:62:
+extern int integrity_register_template(const char *template_name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: include/linux/integrity.h:64:
+extern int integrity_unregister_template(const char *template_name);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: include/linux/integrity.h:70:
+ * ^IThis hook mediates the point when a search for a binary handler^Iwill$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: include/linux/integrity.h:71:
+ * ^Ibegin.  At this point, the OS protects against an executable file,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: include/linux/integrity.h:72:
+ * ^Ialready open for write, from being executed; and an executable file$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: include/linux/integrity.h:73:
+ * ^Ialready open for execute, from being modified. So we can be certain$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#344: FILE: include/linux/integrity.h:75:
+ * ^Ithe file being executed.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#345: FILE: include/linux/integrity.h:76:
+ * ^I@bprm contains the linux_binprm structure.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: include/linux/integrity.h:81:
+ * ^I@inode contains the inode structure.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: include/linux/integrity.h:82:
+ * ^IReturn 0 if operation was successful.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: include/linux/integrity.h:86:
+ * ^IDeallocate the integrity structure associated with the inode$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#368: FILE: include/linux/integrity.h:99:
+ * ^I@file contains the file structure being closed.$

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#371: FILE: include/linux/integrity.h:102:
+ *	Measurements(collect, appraise, store) of files mmaped for EXEC
   	                                                ^^^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#381: FILE: include/linux/integrity.h:112:
+	int (*bprm_check_integrity) (struct linux_binprm *bprm);

WARNING:SPACING: Unnecessary space before function pointer arguments
#382: FILE: include/linux/integrity.h:113:
+	int (*inode_alloc_integrity) (struct inode *inode);

WARNING:SPACING: Unnecessary space before function pointer arguments
#383: FILE: include/linux/integrity.h:114:
+	void (*inode_free_integrity) (struct inode *inode);

WARNING:SPACING: Unnecessary space before function pointer arguments
#384: FILE: include/linux/integrity.h:115:
+	int (*path_check_integrity) (struct path *path, int mask);

WARNING:SPACING: Unnecessary space before function pointer arguments
#385: FILE: include/linux/integrity.h:116:
+	void (*file_free_integrity) (struct file *file);

WARNING:SPACING: Unnecessary space before function pointer arguments
#386: FILE: include/linux/integrity.h:117:
+	int (*file_mmap) (struct file *file, unsigned long prot);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#388: FILE: include/linux/integrity.h:119:
+};
+extern int register_integrity(const struct integrity_operations *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/integrity.h:119:
+extern int register_integrity(const struct integrity_operations *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: include/linux/integrity.h:120:
+extern int unregister_integrity(const struct integrity_operations *ops);

WARNING:RETURN_VOID: void function return statements are not generally useful
#418: FILE: include/linux/integrity.h:149:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#428: FILE: include/linux/integrity.h:159:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#530: FILE: security/integrity/integrity.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#539: FILE: security/integrity/integrity.c:10:
+ * ^Iregister integrity subsystem$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#540: FILE: security/integrity/integrity.c:11:
+ * ^Iregister integrity template$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#543: FILE: security/integrity/integrity.c:14:
+#include <asm/atomic.h>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "integrity_ops"
#566: FILE: security/integrity/integrity.c:37:
+	if (integrity_ops != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#849: FILE: security/integrity/integrity.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#877: FILE: security/integrity/integrity.h:29:
+extern int integrity_find_template(const char *,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#885: FILE: security/integrity/integrity_audit.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#894: FILE: security/integrity/integrity_audit.c:10:
+ * ^IAudit calls for the integrity subsystem$

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#910: FILE: security/integrity/integrity_audit.c:26:
+	rc = strict_strtoul(str, 0, &audit);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#912: FILE: security/integrity/integrity_audit.c:28:
+		printk(KERN_INFO "integrity: invalid integrity_audit value\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#922: FILE: security/integrity/integrity_audit.c:38:
+__setup("integrity_audit=", integrity_audit_setup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201585.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 45 warnings, 9 checks, 787 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201585.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
