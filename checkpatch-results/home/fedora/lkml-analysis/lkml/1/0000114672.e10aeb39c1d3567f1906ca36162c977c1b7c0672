WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Subject: [PATCH] First submission of Intel Moorestown platform NAND flash driver

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#117: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#123: FILE: drivers/staging/mrst_nand/Kconfig:2:
+menuconfig MRST_NAND
+	tristate "Moorestown NAND Flash controller"
+	depends on BLOCK
+	default n
+	---help---
+	  Enable the driver for the NAND Flash controller in Intel Moorestown
+	  Platform
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#131: FILE: drivers/staging/mrst_nand/Kconfig:10:
+choice
+	prompt "Compile for"
+	depends on MRST_NAND
+	default MRST_NAND_HW
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: drivers/staging/mrst_nand/NAND_Regs_4.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#182: FILE: drivers/staging/mrst_nand/NAND_Regs_4.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#183: FILE: drivers/staging/mrst_nand/NAND_Regs_4.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/staging/mrst_nand/NAND_Regs_4.h:84:
+#define ACC_CLKS    ^I^I^I^I0x130$

WARNING:TYPO_SPELLING: 'build-in' may be misspelled - perhaps 'built-in'?
#801: FILE: drivers/staging/mrst_nand/README:9:
+This driver can be build as modules or build-in.
                                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#828: FILE: drivers/staging/mrst_nand/ffsdefs.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#842: FILE: drivers/staging/mrst_nand/ffsdefs.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#843: FILE: drivers/staging/mrst_nand/ffsdefs.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#892: FILE: drivers/staging/mrst_nand/ffsport.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#906: FILE: drivers/staging/mrst_nand/ffsport.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#907: FILE: drivers/staging/mrst_nand/ffsport.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#926: FILE: drivers/staging/mrst_nand/ffsport.c:35:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_Calc_Used_Bits

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#931: FILE: drivers/staging/mrst_nand/ffsport.c:40:
+*               Number can be upto 32 bit
                               ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#932: FILE: drivers/staging/mrst_nand/ffsport.c:41:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#964: FILE: drivers/staging/mrst_nand/ffsport.c:73:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_u64_Div

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#969: FILE: drivers/staging/mrst_nand/ffsport.c:78:
+*               (essentially without explicitely using "/").
                                      ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#971: FILE: drivers/staging/mrst_nand/ffsport.c:80:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <GLOB_u64_Div>
#972: FILE: drivers/staging/mrst_nand/ffsport.c:81:
+u64 GLOB_u64_Div(u64 addr, u32 divisor)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#978: FILE: drivers/staging/mrst_nand/ffsport.c:87:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_u64_Remainder

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#984: FILE: drivers/staging/mrst_nand/ffsport.c:93:
+*               operation(essentially without explicitely using "/").
                                               ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#985: FILE: drivers/staging/mrst_nand/ffsport.c:94:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <GLOB_u64_Remainder>
#986: FILE: drivers/staging/mrst_nand/ffsport.c:95:
+u64 GLOB_u64_Remainder(u64 addr, u32 divisor_type)

CHECK:CAMELCASE: Avoid CamelCase: <DeviceInfo>
#991: FILE: drivers/staging/mrst_nand/ffsport.c:100:
+		result = (addr >> DeviceInfo.nBitsInPageDataSize);

CHECK:CAMELCASE: Avoid CamelCase: <nBitsInPageDataSize>
#991: FILE: drivers/staging/mrst_nand/ffsport.c:100:
+		result = (addr >> DeviceInfo.nBitsInPageDataSize);

CHECK:CAMELCASE: Avoid CamelCase: <wPageDataSize>
#992: FILE: drivers/staging/mrst_nand/ffsport.c:101:
+		result = result * DeviceInfo.wPageDataSize;

CHECK:CAMELCASE: Avoid CamelCase: <nBitsInBlockDataSize>
#994: FILE: drivers/staging/mrst_nand/ffsport.c:103:
+		result = (addr >> DeviceInfo.nBitsInBlockDataSize);

CHECK:CAMELCASE: Avoid CamelCase: <wBlockDataSize>
#995: FILE: drivers/staging/mrst_nand/ffsport.c:104:
+		result = result * DeviceInfo.wBlockDataSize;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1003: FILE: drivers/staging/mrst_nand/ffsport.c:112:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: drivers/staging/mrst_nand/ffsport.c:126:
+    return (u32 *)ioremap_nocache(addr, (size+0xfff)&(~0xfff));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1017: FILE: drivers/staging/mrst_nand/ffsport.c:126:
+    return (u32 *)ioremap_nocache(addr, (size+0xfff)&(~0xfff));
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1017: FILE: drivers/staging/mrst_nand/ffsport.c:126:
+    return (u32 *)ioremap_nocache(addr, (size+0xfff)&(~0xfff));
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: drivers/staging/mrst_nand/ffsport.c:128:
+    return (u32 *)addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: drivers/staging/mrst_nand/ffsport.c:135:
+    return (u32 *)virt_to_bus(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: drivers/staging/mrst_nand/ffsport.c:137:
+    return ptr;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1032: FILE: drivers/staging/mrst_nand/ffsport.c:141:
+
+

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1037: FILE: drivers/staging/mrst_nand/ffsport.c:146:
+#define GLOB_SBD_NAME          "nd"
                                 ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1052: FILE: drivers/staging/mrst_nand/ffsport.c:161:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1065: FILE: drivers/staging/mrst_nand/ffsport.c:174:
+	spinlock_t qlock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1077: FILE: drivers/staging/mrst_nand/ffsport.c:186:
+
+

WARNING:TYPO_SPELLING: 'allocat' may be misspelled - perhaps 'allocate'?
#1085: FILE: drivers/staging/mrst_nand/ffsport.c:194:
+/* allocat memory more than 4M bytes, here we use static array as */
    ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1091: FILE: drivers/staging/mrst_nand/ffsport.c:200:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <IdentifyDeviceData>
#1098: FILE: drivers/staging/mrst_nand/ffsport.c:207:
+struct spectra_indentfy_dev_tag IdentifyDeviceData;

CHECK:CAMELCASE: Avoid CamelCase: <PageDataSize>
#1100: FILE: drivers/staging/mrst_nand/ffsport.c:209:
+#define SBD_SECTOR_SIZE         (IdentifyDeviceData.PageDataSize)

CHECK:CAMELCASE: Avoid CamelCase: <PagesPerBlock>
#1102: FILE: drivers/staging/mrst_nand/ffsport.c:211:
+				IdentifyDeviceData.PagesPerBlock)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1124: FILE: drivers/staging/mrst_nand/ffsport.c:233:
+	if (ERR == GLOB_FTL_Flush_Cache()) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1125: FILE: drivers/staging/mrst_nand/ffsport.c:234:
+		printk(KERN_ERR "Fail to Flush FTL Cache!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1148: FILE: drivers/staging/mrst_nand/ffsport.c:257:
+		printk(KERN_ERR "ioctl_read_page_data: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_read_page_data', this function's name, in a string
#1148: FILE: drivers/staging/mrst_nand/ffsport.c:257:
+		printk(KERN_ERR "ioctl_read_page_data: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1148: FILE: drivers/staging/mrst_nand/ffsport.c:257:
+	if (!buf) {
+		printk(KERN_ERR "ioctl_read_page_data: "

WARNING:SPLIT_STRING: quoted string split across lines
#1149: FILE: drivers/staging/mrst_nand/ffsport.c:258:
+		printk(KERN_ERR "ioctl_read_page_data: "
+		       "failed to allocate memory\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: drivers/staging/mrst_nand/ffsport.c:264:
+	result = GLOB_FTL_Page_Read(buf,
+		(u64)info.page * IdentifyDeviceData.PageDataSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: drivers/staging/mrst_nand/ffsport.c:268:
+	if (copy_to_user((void __user *)info.data, buf,
+			   IdentifyDeviceData.PageDataSize)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1160: FILE: drivers/staging/mrst_nand/ffsport.c:269:
+		printk(KERN_ERR "ioctl_read_page_data: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_read_page_data', this function's name, in a string
#1160: FILE: drivers/staging/mrst_nand/ffsport.c:269:
+		printk(KERN_ERR "ioctl_read_page_data: "

WARNING:SPLIT_STRING: quoted string split across lines
#1161: FILE: drivers/staging/mrst_nand/ffsport.c:270:
+		printk(KERN_ERR "ioctl_read_page_data: "
+		       "failed to copy user data\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1166: FILE: drivers/staging/mrst_nand/ffsport.c:275:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1182: FILE: drivers/staging/mrst_nand/ffsport.c:291:
+		printk(KERN_ERR "ioctl_write_page_data: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_write_page_data', this function's name, in a string
#1182: FILE: drivers/staging/mrst_nand/ffsport.c:291:
+		printk(KERN_ERR "ioctl_write_page_data: "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1182: FILE: drivers/staging/mrst_nand/ffsport.c:291:
+	if (!buf) {
+		printk(KERN_ERR "ioctl_write_page_data: "

WARNING:SPLIT_STRING: quoted string split across lines
#1183: FILE: drivers/staging/mrst_nand/ffsport.c:292:
+		printk(KERN_ERR "ioctl_write_page_data: "
+		       "failed to allocate memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1189: FILE: drivers/staging/mrst_nand/ffsport.c:298:
+		printk(KERN_ERR "ioctl_write_page_data: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_write_page_data', this function's name, in a string
#1189: FILE: drivers/staging/mrst_nand/ffsport.c:298:
+		printk(KERN_ERR "ioctl_write_page_data: "

WARNING:SPLIT_STRING: quoted string split across lines
#1190: FILE: drivers/staging/mrst_nand/ffsport.c:299:
+		printk(KERN_ERR "ioctl_write_page_data: "
+		       "failed to copy user data\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1197: FILE: drivers/staging/mrst_nand/ffsport.c:306:
+	result = GLOB_FTL_Page_Write(buf,
+		(u64)info.page * IdentifyDeviceData.PageDataSize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1204: FILE: drivers/staging/mrst_nand/ffsport.c:313:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <wDataBlockNum>
#1211: FILE: drivers/staging/mrst_nand/ffsport.c:320:
+	return IdentifyDeviceData.wDataBlockNum / 10;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1226: FILE: drivers/staging/mrst_nand/ffsport.c:335:
+		printk(KERN_ERR "Too many reserved blocks (%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1227: FILE: drivers/staging/mrst_nand/ffsport.c:336:
+		printk(KERN_ERR "Too many reserved blocks (%d) "
+			"for OS image. Will use default value 1\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1254: FILE: drivers/staging/mrst_nand/ffsport.c:363:
+	*  being accessed or damaged by file system */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1254: FILE: drivers/staging/mrst_nand/ffsport.c:363:
+	/* Add a big enough offset to prevent the OS Image from
+	*  being accessed or damaged by file system */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/staging/mrst_nand/ffsport.c:367:
+	if (req->cmd_type == REQ_TYPE_LINUX_BLOCK &&
+			req->cmd[0] == REQ_LB_OP_FLUSH) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1269: FILE: drivers/staging/mrst_nand/ffsport.c:378:
+		printk(KERN_ERR "Spectra error: request over the NAND "

WARNING:SPLIT_STRING: quoted string split across lines
#1270: FILE: drivers/staging/mrst_nand/ffsport.c:379:
+		printk(KERN_ERR "Spectra error: request over the NAND "
+			"capacity!sector %d, current_nr_sectors %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1271: FILE: drivers/staging/mrst_nand/ffsport.c:380:
+			"capacity!sector %d, current_nr_sectors %d, "
+			"while capacity is %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1294: FILE: drivers/staging/mrst_nand/ffsport.c:403:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/staging/mrst_nand/ffsport.c:404:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1307: FILE: drivers/staging/mrst_nand/ffsport.c:416:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: drivers/staging/mrst_nand/ffsport.c:417:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1318: FILE: drivers/staging/mrst_nand/ffsport.c:427:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1319: FILE: drivers/staging/mrst_nand/ffsport.c:428:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1330: FILE: drivers/staging/mrst_nand/ffsport.c:439:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1331: FILE: drivers/staging/mrst_nand/ffsport.c:440:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1336: FILE: drivers/staging/mrst_nand/ffsport.c:445:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1337: FILE: drivers/staging/mrst_nand/ffsport.c:446:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1348: FILE: drivers/staging/mrst_nand/ffsport.c:457:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: drivers/staging/mrst_nand/ffsport.c:458:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1359: FILE: drivers/staging/mrst_nand/ffsport.c:468:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: drivers/staging/mrst_nand/ffsport.c:469:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1365: FILE: drivers/staging/mrst_nand/ffsport.c:474:
+				printk(KERN_ERR "Error in %s, Line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/staging/mrst_nand/ffsport.c:475:
+				printk(KERN_ERR "Error in %s, Line %d\n",
+					__FILE__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1373: FILE: drivers/staging/mrst_nand/ffsport.c:482:
+		printk(KERN_NOTICE "Unknown request %u\n", rq_data_dir(req));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1417: FILE: drivers/staging/mrst_nand/ffsport.c:526:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1422: FILE: drivers/staging/mrst_nand/ffsport.c:531:
+	struct spectra_nand_dev *pdev = rq->queuedata;
+	wake_up_process(pdev->thread);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1425: FILE: drivers/staging/mrst_nand/ffsport.c:534:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1483: FILE: drivers/staging/mrst_nand/ffsport.c:592:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"heads: %d, sectors: %d, cylinders: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1490: FILE: drivers/staging/mrst_nand/ffsport.c:599:
+int GLOB_SBD_ioctl(struct block_device *bdev, fmode_t mode,
+		unsigned int cmd, unsigned long arg)

WARNING:SPLIT_STRING: quoted string split across lines
#1504: FILE: drivers/staging/mrst_nand/ffsport.c:613:
+			       "Spectra IOCTL: Garbage Collection "
+			       "being performed\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1505: FILE: drivers/staging/mrst_nand/ffsport.c:614:
+		if (PASS != GLOB_FTL_Garbage_Collection())

WARNING:SPLIT_STRING: quoted string split across lines
#1512: FILE: drivers/staging/mrst_nand/ffsport.c:621:
+			       "Spectra IOCTL: Static Wear Leveling "
+			       "being performed\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1513: FILE: drivers/staging/mrst_nand/ffsport.c:622:
+		if (PASS != GLOB_FTL_Wear_Leveling())

WARNING:SPLIT_STRING: quoted string split across lines
#1519: FILE: drivers/staging/mrst_nand/ffsport.c:628:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: Flash format "
+			       "being performed\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1520: FILE: drivers/staging/mrst_nand/ffsport.c:629:
+		if (PASS != GLOB_FTL_Flash_Format())

WARNING:SPLIT_STRING: quoted string split across lines
#1526: FILE: drivers/staging/mrst_nand/ffsport.c:635:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: Cache flush "
+			       "being performed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1543: FILE: drivers/staging/mrst_nand/ffsport.c:652:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: "
+			       "Copy block table\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1545: FILE: drivers/staging/mrst_nand/ffsport.c:654:
+		if (copy_to_user((void __user *)arg,
+			get_blk_table_start_addr(),

WARNING:SPLIT_STRING: quoted string split across lines
#1552: FILE: drivers/staging/mrst_nand/ffsport.c:661:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: "
+			       "Copy wear leveling table\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1554: FILE: drivers/staging/mrst_nand/ffsport.c:663:
+		if (copy_to_user((void __user *)arg,
+			get_wear_leveling_table_start_addr(),

WARNING:SPLIT_STRING: quoted string split across lines
#1561: FILE: drivers/staging/mrst_nand/ffsport.c:670:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: "
+			       "Get NAND info\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1563: FILE: drivers/staging/mrst_nand/ffsport.c:672:
+		if (copy_to_user((void __user *)arg, &IdentifyDeviceData,
+			sizeof(IdentifyDeviceData)))

WARNING:SPLIT_STRING: quoted string split across lines
#1569: FILE: drivers/staging/mrst_nand/ffsport.c:678:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: "
+			       "Write one page data\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1574: FILE: drivers/staging/mrst_nand/ffsport.c:683:
+		nand_dbg_print(NAND_DBG_DEBUG, "Spectra IOCTL: "
+			       "Read one page data\n");

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1581: FILE: drivers/staging/mrst_nand/ffsport.c:690:
+static struct block_device_operations GLOB_SBD_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPLIT_STRING: quoted string split across lines
#1600: FILE: drivers/staging/mrst_nand/ffsport.c:709:
+	nand_dbg_print(NAND_DBG_WARN, "Reserved %d blocks "
+		"for OS image, %d blocks for bad block replacement.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1616: FILE: drivers/staging/mrst_nand/ffsport.c:725:
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1616: FILE: drivers/staging/mrst_nand/ffsport.c:725:
+	if (!dev->tmp_buf) {
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1617: FILE: drivers/staging/mrst_nand/ffsport.c:726:
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",
+			__FILE__, __LINE__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->queue"
#1622: FILE: drivers/staging/mrst_nand/ffsport.c:731:
+	if (dev->queue == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1623: FILE: drivers/staging/mrst_nand/ffsport.c:732:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1625: FILE: drivers/staging/mrst_nand/ffsport.c:734:
+		       "Spectra: Request queue could not be initialized."
+			" Aborting\n ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1633: FILE: drivers/staging/mrst_nand/ffsport.c:742:
+	blk_queue_ordered(dev->queue, QUEUE_ORDERED_DRAIN_FLUSH,
+						SBD_prepare_flush);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1644: FILE: drivers/staging/mrst_nand/ffsport.c:753:
+		printk(KERN_ERR

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1645: FILE: drivers/staging/mrst_nand/ffsport.c:754:
+		       "Spectra: Could not allocate disk. Aborting \n ");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1674: FILE: drivers/staging/mrst_nand/ffsport.c:783:
+/*
+static ssize_t show_nand_block_num(struct device *dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1719: FILE: drivers/staging/mrst_nand/ffsport.c:828:
+	printk(KERN_ALERT "Spectra: %s\n", GLOB_version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1725: FILE: drivers/staging/mrst_nand/ffsport.c:834:
+		printk(KERN_ERR "Unable to get the major %d for Spectra",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1730: FILE: drivers/staging/mrst_nand/ffsport.c:839:
+	if (PASS != GLOB_FTL_Flash_Init()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1731: FILE: drivers/staging/mrst_nand/ffsport.c:840:
+		printk(KERN_ERR "Spectra: Unable to Initialize Flash Device. "

WARNING:SPLIT_STRING: quoted string split across lines
#1732: FILE: drivers/staging/mrst_nand/ffsport.c:841:
+		printk(KERN_ERR "Spectra: Unable to Initialize Flash Device. "
+		       "Aborting\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1738: FILE: drivers/staging/mrst_nand/ffsport.c:847:
+	if (PASS != GLOB_FTL_IdentifyDevice(&IdentifyDeviceData)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1739: FILE: drivers/staging/mrst_nand/ffsport.c:848:
+		printk(KERN_ERR "Spectra: Unable to Read Flash Device. "

WARNING:SPLIT_STRING: quoted string split across lines
#1740: FILE: drivers/staging/mrst_nand/ffsport.c:849:
+		printk(KERN_ERR "Spectra: Unable to Read Flash Device. "
+		       "Aborting\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_SBD_init', this function's name, in a string
#1743: FILE: drivers/staging/mrst_nand/ffsport.c:852:
+		nand_dbg_print(NAND_DBG_WARN, "In GLOB_SBD_init: "

WARNING:SPLIT_STRING: quoted string split across lines
#1744: FILE: drivers/staging/mrst_nand/ffsport.c:853:
+		nand_dbg_print(NAND_DBG_WARN, "In GLOB_SBD_init: "
+			       "Num blocks=%d, pagesperblock=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1745: FILE: drivers/staging/mrst_nand/ffsport.c:854:
+			       "Num blocks=%d, pagesperblock=%d, "
+			       "pagedatasize=%d, ECCBytesPerSector=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1746: FILE: drivers/staging/mrst_nand/ffsport.c:855:
+			       "pagedatasize=%d, ECCBytesPerSector=%d, "
+			       "SizeofGlobalMem=%d\n",

CHECK:CAMELCASE: Avoid CamelCase: <NumBlocks>
#1747: FILE: drivers/staging/mrst_nand/ffsport.c:856:
+		       (int)IdentifyDeviceData.NumBlocks,

CHECK:CAMELCASE: Avoid CamelCase: <wECCBytesPerSector>
#1750: FILE: drivers/staging/mrst_nand/ffsport.c:859:
+		       (int)IdentifyDeviceData.wECCBytesPerSector,

CHECK:CAMELCASE: Avoid CamelCase: <SizeOfGlobalMem>
#1751: FILE: drivers/staging/mrst_nand/ffsport.c:860:
+		       (int)IdentifyDeviceData.SizeOfGlobalMem);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1755: FILE: drivers/staging/mrst_nand/ffsport.c:864:
+		printk(KERN_ERR "Spectra: Unable to Initialize Memory Pool. "

WARNING:SPLIT_STRING: quoted string split across lines
#1756: FILE: drivers/staging/mrst_nand/ffsport.c:865:
+		printk(KERN_ERR "Spectra: Unable to Initialize Memory Pool. "
+		       "Aborting\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1771: FILE: drivers/staging/mrst_nand/ffsport.c:880:
+	if (PASS != GLOB_FTL_Mem_Config(mem_pool_ptr)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1772: FILE: drivers/staging/mrst_nand/ffsport.c:881:
+		printk(KERN_ERR "Spectra: Unable to Read Flash Device. "

WARNING:SPLIT_STRING: quoted string split across lines
#1773: FILE: drivers/staging/mrst_nand/ffsport.c:882:
+		printk(KERN_ERR "Spectra: Unable to Read Flash Device. "
+		       "Aborting\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1777: FILE: drivers/staging/mrst_nand/ffsport.c:886:
+	printk(KERN_ALERT "Spectra: searching block table, please wait ...\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1779: FILE: drivers/staging/mrst_nand/ffsport.c:888:
+		printk(KERN_ERR "Spectra: Unable to Initialize FTL Layer. "

WARNING:SPLIT_STRING: quoted string split across lines
#1780: FILE: drivers/staging/mrst_nand/ffsport.c:889:
+		printk(KERN_ERR "Spectra: Unable to Initialize FTL Layer. "
+		       "Aborting\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1804: FILE: drivers/staging/mrst_nand/ffsport.c:913:
+	printk(KERN_ERR "Spectra: Module load failed.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1817: FILE: drivers/staging/mrst_nand/ffsport.c:926:
+		struct spectra_nand_dev *dev = &nand_device[i];
+		if (dev->gd) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1851: FILE: drivers/staging/mrst_nand/ffsport.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1865: FILE: drivers/staging/mrst_nand/ffsport.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1866: FILE: drivers/staging/mrst_nand/ffsport.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1877: FILE: drivers/staging/mrst_nand/ffsport.h:27:
+#define PACKED_GNU __attribute__ ((packed))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1877: FILE: drivers/staging/mrst_nand/ffsport.h:27:
+#define PACKED_GNU __attribute__ ((packed))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#1908: FILE: drivers/staging/mrst_nand/ffsport.h:58:
+#define nand_dbg_print(level, args...)			\
+	do {						\
+		if (level <= nand_debug_level)		\
+			printk(KERN_ALERT args);	\
+	} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1911: FILE: drivers/staging/mrst_nand/ffsport.h:61:
+			printk(KERN_ALERT args);	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#1918: FILE: drivers/staging/mrst_nand/ffsport.h:68:
+#define INVERTUINT16(w)   ((u16)(((u16)(w)) << 8) | \
+			   (u16)((u16)(w) >> 8))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dw' - possible side-effects?
#1921: FILE: drivers/staging/mrst_nand/ffsport.h:71:
+#define INVERTUINT32(dw)  (((u32)(dw) << 24) | \
+			   (((u32)(dw) << 8) & 0x00ff0000) | \
+			   (((u32)(dw) >> 8) & 0x0000ff00) | \
+			   ((u32)(dw) >> 24))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1930: FILE: drivers/staging/mrst_nand/ffsport.h:80:
+extern int GLOB_Calc_Used_Bits(u32 n);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1931: FILE: drivers/staging/mrst_nand/ffsport.h:81:
+extern u64 GLOB_u64_Div(u64 addr, u32 divisor);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1932: FILE: drivers/staging/mrst_nand/ffsport.h:82:
+extern u64 GLOB_u64_Remainder(u64 addr, u32 divisor_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1934: FILE: drivers/staging/mrst_nand/ffsport.h:84:
+extern void glob_udelay(unsigned long usecs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1935: FILE: drivers/staging/mrst_nand/ffsport.h:85:
+extern void glob_mdelay(unsigned long msecs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1936: FILE: drivers/staging/mrst_nand/ffsport.h:86:
+extern u32 *GLOB_MEMMAP_NOCACHE(unsigned long addr, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1937: FILE: drivers/staging/mrst_nand/ffsport.h:87:
+extern u32 *GLOB_MEMMAP_TOBUS(u32 *ptr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1946: FILE: drivers/staging/mrst_nand/flash.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1960: FILE: drivers/staging/mrst_nand/flash.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1961: FILE: drivers/staging/mrst_nand/flash.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#1974: FILE: drivers/staging/mrst_nand/flash.c:29:
+#define BLK_FROM_ADDR(addr)  ((u32)(addr >> DeviceInfo.nBitsInBlockDataSize))

CHECK:CAMELCASE: Avoid CamelCase: <Block>
#1975: FILE: drivers/staging/mrst_nand/flash.c:30:
+#define PAGE_FROM_ADDR(addr, Block)  ((u16)((addr - (u64)Block * \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#1975: FILE: drivers/staging/mrst_nand/flash.c:30:
+#define PAGE_FROM_ADDR(addr, Block)  ((u16)((addr - (u64)Block * \
+	DeviceInfo.wBlockDataSize) >> DeviceInfo.nBitsInPageDataSize))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Block' may be better as '(Block)' to avoid precedence issues
#1975: FILE: drivers/staging/mrst_nand/flash.c:30:
+#define PAGE_FROM_ADDR(addr, Block)  ((u16)((addr - (u64)Block * \
+	DeviceInfo.wBlockDataSize) >> DeviceInfo.nBitsInPageDataSize))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'blk' - possible side-effects?
#1978: FILE: drivers/staging/mrst_nand/flash.c:33:
+#define IS_SPARE_BLOCK(blk)     (BAD_BLOCK != (pbt[blk] &\
+	BAD_BLOCK) && SPARE_BLOCK == (pbt[blk] & SPARE_BLOCK))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'blk' - possible side-effects?
#1983: FILE: drivers/staging/mrst_nand/flash.c:38:
+#define IS_DISCARDED_BLOCK(blk) (BAD_BLOCK != (pbt[blk] &\
+	BAD_BLOCK) && DISCARD_BLOCK == (pbt[blk] & DISCARD_BLOCK))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1992: FILE: drivers/staging/mrst_nand/flash.c:47:
+void debug_boundary_lineno_error(int chnl, int limit, int no,
+				int lineno, char *filename)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1995: FILE: drivers/staging/mrst_nand/flash.c:50:
+		printk(KERN_ERR "Boundary Check Fail value %d >= limit %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1996: FILE: drivers/staging/mrst_nand/flash.c:51:
+		printk(KERN_ERR "Boundary Check Fail value %d >= limit %d, "
+		"at  %s:%d. Other info:%d. Aborting...\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1999: FILE: drivers/staging/mrst_nand/flash.c:54:
+}
+/* static int globalmemsize; */

CHECK:CAMELCASE: Avoid CamelCase: <dwPageAddr>
#2002: FILE: drivers/staging/mrst_nand/flash.c:57:
+static u8 FTL_Cache_If_Hit(u64 dwPageAddr);

CHECK:CAMELCASE: Avoid CamelCase: <pData>
#2004: FILE: drivers/staging/mrst_nand/flash.c:59:
+static void FTL_Cache_Read_Page(u8 *pData, u64 dwPageAddr,

CHECK:CAMELCASE: Avoid CamelCase: <wBlockNum>
#2011: FILE: drivers/staging/mrst_nand/flash.c:66:
+static u32 FTL_Get_Block_Index(u32 wBlockNum);

CHECK:CAMELCASE: Avoid CamelCase: <Page>
#2014: FILE: drivers/staging/mrst_nand/flash.c:69:
+					   u8 BT_Tag, u16 *Page);

CHECK:CAMELCASE: Avoid CamelCase: <wForce>
#2016: FILE: drivers/staging/mrst_nand/flash.c:71:
+static int FTL_Write_Block_Table(int wForce);

CHECK:CAMELCASE: Avoid CamelCase: <wOldTable>
#2018: FILE: drivers/staging/mrst_nand/flash.c:73:
+static int FTL_Check_Block_Table(int wOldTable);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2027: FILE: drivers/staging/mrst_nand/flash.c:82:
+static u32 FTL_Replace_OneBlock(u32 wBlockNum,
+				      u32 wReplaceNum);

CHECK:CAMELCASE: Avoid CamelCase: <wReplaceNum>
#2027: FILE: drivers/staging/mrst_nand/flash.c:82:
+				      u32 wReplaceNum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2029: FILE: drivers/staging/mrst_nand/flash.c:84:
+static u32 FTL_Replace_LWBlock(u32 wBlockNum,
+				     int *pGarbageCollect);

CHECK:CAMELCASE: Avoid CamelCase: <pGarbageCollect>
#2029: FILE: drivers/staging/mrst_nand/flash.c:84:
+				     int *pGarbageCollect);

CHECK:CAMELCASE: Avoid CamelCase: <Index_of_MAX>
#2032: FILE: drivers/staging/mrst_nand/flash.c:87:
+static int FTL_Adjust_Relative_Erase_Count(u32 Index_of_MAX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2035: FILE: drivers/staging/mrst_nand/flash.c:90:
+static int FTL_Flash_Error_Handle(u8 *pData,
+	u64 old_page_addr, u64 blk_addr);

CHECK:CAMELCASE: Avoid CamelCase: <g_pTempBuf>
#2038: FILE: drivers/staging/mrst_nand/flash.c:93:
+static u8 *g_pTempBuf;

CHECK:CAMELCASE: Avoid CamelCase: <g_pBlockTable>
#2039: FILE: drivers/staging/mrst_nand/flash.c:94:
+u8 *g_pBlockTable;

CHECK:CAMELCASE: Avoid CamelCase: <g_pWearCounter>
#2040: FILE: drivers/staging/mrst_nand/flash.c:95:
+u8 *g_pWearCounter;

CHECK:CAMELCASE: Avoid CamelCase: <g_pReadCounter>
#2041: FILE: drivers/staging/mrst_nand/flash.c:96:
+u16 *g_pReadCounter;

CHECK:CAMELCASE: Avoid CamelCase: <g_wBlockTableOffset>
#2042: FILE: drivers/staging/mrst_nand/flash.c:97:
+static u16 g_wBlockTableOffset;

CHECK:CAMELCASE: Avoid CamelCase: <g_wBlockTableIndex>
#2043: FILE: drivers/staging/mrst_nand/flash.c:98:
+static u32 g_wBlockTableIndex;

CHECK:CAMELCASE: Avoid CamelCase: <g_cBlockTableStatus>
#2044: FILE: drivers/staging/mrst_nand/flash.c:99:
+static u8 g_cBlockTableStatus;

CHECK:CAMELCASE: Avoid CamelCase: <g_pBTBlocks>
#2045: FILE: drivers/staging/mrst_nand/flash.c:100:
+u32 *g_pBTBlocks;

CHECK:CAMELCASE: Avoid CamelCase: <Cache>
#2046: FILE: drivers/staging/mrst_nand/flash.c:101:
+struct flash_cache_tag Cache;

CHECK:CAMELCASE: Avoid CamelCase: <g_wNumFreeBlocks>
#2048: FILE: drivers/staging/mrst_nand/flash.c:103:
+int g_wNumFreeBlocks;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2050: FILE: drivers/staging/mrst_nand/flash.c:105:
+   u8 g_SBDCmdIndex = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <g_SBDCmdIndex>
#2050: FILE: drivers/staging/mrst_nand/flash.c:105:
+   u8 g_SBDCmdIndex = 0;

CHECK:CAMELCASE: Avoid CamelCase: <g_pIPF>
#2052: FILE: drivers/staging/mrst_nand/flash.c:107:
+static u8 *g_pIPF;

CHECK:CAMELCASE: Avoid CamelCase: <g_pCheckBuf>
#2057: FILE: drivers/staging/mrst_nand/flash.c:112:
+static u8 *g_pCheckBuf;

CHECK:CAMELCASE: Avoid CamelCase: <g_pMemPool>
#2063: FILE: drivers/staging/mrst_nand/flash.c:118:
+static u8 *g_pMemPool;

CHECK:CAMELCASE: Avoid CamelCase: <g_pMemPoolFree>
#2064: FILE: drivers/staging/mrst_nand/flash.c:119:
+static u8 *g_pMemPoolFree;

CHECK:CAMELCASE: Avoid CamelCase: <globalMemSize>
#2067: FILE: drivers/staging/mrst_nand/flash.c:122:
+static int globalMemSize;

CHECK:CAMELCASE: Avoid CamelCase: <FTLCommandCount>
#2073: FILE: drivers/staging/mrst_nand/flash.c:128:
+static u8 FTLCommandCount;  /* Init value is 0 */

CHECK:CAMELCASE: Avoid CamelCase: <g_pBTDelta>
#2074: FILE: drivers/staging/mrst_nand/flash.c:129:
+u8 *g_pBTDelta;

CHECK:CAMELCASE: Avoid CamelCase: <g_pBTDelta_Free>
#2075: FILE: drivers/staging/mrst_nand/flash.c:130:
+u8 *g_pBTDelta_Free;

CHECK:CAMELCASE: Avoid CamelCase: <g_pBTStartingCopy>
#2076: FILE: drivers/staging/mrst_nand/flash.c:131:
+u8 *g_pBTStartingCopy;

CHECK:CAMELCASE: Avoid CamelCase: <g_pWearCounterCopy>
#2077: FILE: drivers/staging/mrst_nand/flash.c:132:
+u8 *g_pWearCounterCopy;

CHECK:CAMELCASE: Avoid CamelCase: <g_pReadCounterCopy>
#2078: FILE: drivers/staging/mrst_nand/flash.c:133:
+u16 *g_pReadCounterCopy;

CHECK:CAMELCASE: Avoid CamelCase: <g_pBlockTableCopies>
#2079: FILE: drivers/staging/mrst_nand/flash.c:134:
+u8 *g_pBlockTableCopies;

CHECK:CAMELCASE: Avoid CamelCase: <g_pNextBlockTable>
#2080: FILE: drivers/staging/mrst_nand/flash.c:135:
+u8 *g_pNextBlockTable;

CHECK:CAMELCASE: Avoid CamelCase: <g_pCopyBackBufferCopies>
#2081: FILE: drivers/staging/mrst_nand/flash.c:136:
+u8 *g_pCopyBackBufferCopies;

CHECK:CAMELCASE: Avoid CamelCase: <g_pCopyBackBufferStart>
#2082: FILE: drivers/staging/mrst_nand/flash.c:137:
+u8 *g_pCopyBackBufferStart;

CHECK:CAMELCASE: Avoid CamelCase: <BTableChangesDelta>
#2086: FILE: drivers/staging/mrst_nand/flash.c:141:
+struct BTableChangesDelta {

CHECK:CAMELCASE: Avoid CamelCase: <ValidFields>
#2088: FILE: drivers/staging/mrst_nand/flash.c:143:
+	u8 ValidFields;

CHECK:CAMELCASE: Avoid CamelCase: <p_BTableChangesDelta>
#2101: FILE: drivers/staging/mrst_nand/flash.c:156:
+struct BTableChangesDelta *p_BTableChangesDelta;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2104: FILE: drivers/staging/mrst_nand/flash.c:159:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'blocknode' may be better as '(blocknode)' to avoid precedence issues
#2105: FILE: drivers/staging/mrst_nand/flash.c:160:
+#define MARK_BLOCK_AS_BAD(blocknode)      (blocknode |= BAD_BLOCK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'blk' - possible side-effects?
#2106: FILE: drivers/staging/mrst_nand/flash.c:161:
+#define MARK_BLK_AS_DISCARD(blk)  (blk = (blk & ~SPARE_BLOCK) | DISCARD_BLOCK)

CHECK:CAMELCASE: Avoid CamelCase: <MLCDevice>
#2130: FILE: drivers/staging/mrst_nand/flash.c:185:
+	if (DeviceInfo.MLCDevice) {

CHECK:CAMELCASE: Avoid CamelCase: <flashBuf>
#2149: FILE: drivers/staging/mrst_nand/flash.c:204:
+static int FTL_Copy_Block_Table_To_Flash(u8 *flashBuf, u32 sizeToTx,

CHECK:CAMELCASE: Avoid CamelCase: <sizeToTx>
#2149: FILE: drivers/staging/mrst_nand/flash.c:204:
+static int FTL_Copy_Block_Table_To_Flash(u8 *flashBuf, u32 sizeToTx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2150: FILE: drivers/staging/mrst_nand/flash.c:205:
+static int FTL_Copy_Block_Table_To_Flash(u8 *flashBuf, u32 sizeToTx,
+					u32 sizeTxed)

CHECK:CAMELCASE: Avoid CamelCase: <sizeTxed>
#2150: FILE: drivers/staging/mrst_nand/flash.c:205:
+					u32 sizeTxed)

CHECK:CAMELCASE: Avoid CamelCase: <wBytesCopied>
#2152: FILE: drivers/staging/mrst_nand/flash.c:207:
+	u32 wBytesCopied, blk_tbl_size, wBytes;

CHECK:CAMELCASE: Avoid CamelCase: <wBytes>
#2152: FILE: drivers/staging/mrst_nand/flash.c:207:
+	u32 wBytesCopied, blk_tbl_size, wBytes;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2182: FILE: drivers/staging/mrst_nand/flash.c:237:
+		for (wBytes = 0; ((wBytes + wBytesCopied) < sizeToTx) &&
+			((wBytes + sizeTxed) < blk_tbl_size); wBytes++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2192: FILE: drivers/staging/mrst_nand/flash.c:247:
+static int FTL_Copy_Block_Table_From_Flash(u8 *flashBuf,
+				u32 sizeToTx, u32 sizeTxed)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2199: FILE: drivers/staging/mrst_nand/flash.c:254:
+	for (wBytes = 0; (wBytes < sizeToTx) &&
+		((wBytes + sizeTxed) < blk_tbl_size); wBytes++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2227: FILE: drivers/staging/mrst_nand/flash.c:282:
+		for (wBytes = 0; ((wBytes + wBytesCopied) < sizeToTx) &&
+			((wBytes + sizeTxed) < blk_tbl_size); wBytes++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2236: FILE: drivers/staging/mrst_nand/flash.c:291:
+	return wBytesCopied+wBytes;
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2246: FILE: drivers/staging/mrst_nand/flash.c:301:
+		(1 + LAST_BT_ID-FIRST_BT_ID)) + FIRST_BT_ID;
 		               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2261: FILE: drivers/staging/mrst_nand/flash.c:316:
+		for (j = i + 1; (j < BTSIG_BYTES) &&
+			(tagi < (BTSIG_BYTES >> 1)); j++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2287: FILE: drivers/staging/mrst_nand/flash.c:342:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2295: FILE: drivers/staging/mrst_nand/flash.c:350:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+				__FILE__, __LINE__, __func__);

CHECK:CAMELCASE: Avoid CamelCase: <wSpectraEndBlock>
#2297: FILE: drivers/staging/mrst_nand/flash.c:352:
+	blks = DeviceInfo.wSpectraEndBlock - DeviceInfo.wSpectraStartBlock;

CHECK:CAMELCASE: Avoid CamelCase: <wSpectraStartBlock>
#2297: FILE: drivers/staging/mrst_nand/flash.c:352:
+	blks = DeviceInfo.wSpectraEndBlock - DeviceInfo.wSpectraStartBlock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2301: FILE: drivers/staging/mrst_nand/flash.c:356:
+		if (((block & BAD_BLOCK) != BAD_BLOCK) &&
+			((block & SPARE_BLOCK) == SPARE_BLOCK)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2304: FILE: drivers/staging/mrst_nand/flash.c:359:
+			ret =  GLOB_LLD_Erase_Block(block & ~BAD_BLOCK,
+			FTLCommandCount, LLD_CMD_FLAG_MODE_POLL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2308: FILE: drivers/staging/mrst_nand/flash.c:363:
+			if (FAIL == ret) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2310: FILE: drivers/staging/mrst_nand/flash.c:365:
+				nand_dbg_print(NAND_DBG_WARN,
+					"NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#2311: FILE: drivers/staging/mrst_nand/flash.c:366:
+					"NAND Program fail in %s, Line %d, "
+					"Function: %s, new Bad Block %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2312: FILE: drivers/staging/mrst_nand/flash.c:367:
+					"Function: %s, new Bad Block %d "
+					"generated!\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2324: FILE: drivers/staging/mrst_nand/flash.c:379:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_IdentifyDevice

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2329: FILE: drivers/staging/mrst_nand/flash.c:384:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <bufMem>
#2333: FILE: drivers/staging/mrst_nand/flash.c:388:
+	int bufMem;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2336: FILE: drivers/staging/mrst_nand/flash.c:391:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+				__FILE__, __LINE__, __func__);

CHECK:CAMELCASE: Avoid CamelCase: <wTotalBlocks>
#2345: FILE: drivers/staging/mrst_nand/flash.c:400:
+	dev_data->NumBlocks = DeviceInfo.wTotalBlocks;

CHECK:CAMELCASE: Avoid CamelCase: <wPagesPerBlock>
#2346: FILE: drivers/staging/mrst_nand/flash.c:401:
+	dev_data->PagesPerBlock = DeviceInfo.wPagesPerBlock;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2358: FILE: drivers/staging/mrst_nand/flash.c:413:
+	      * (1+1+1)
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2358: FILE: drivers/staging/mrst_nand/flash.c:413:
+	      * (1+1+1)
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2365: FILE: drivers/staging/mrst_nand/flash.c:420:
+	((CACHE_BLOCK_NUMBER+1) * DeviceInfo.wPagesPerBlock *
 	                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2368: FILE: drivers/staging/mrst_nand/flash.c:423:
+	(DeviceInfo.wPageSize*sizeof(u8)) +
 	                     ^

CHECK:CAMELCASE: Avoid CamelCase: <wPageSize>
#2368: FILE: drivers/staging/mrst_nand/flash.c:423:
+	(DeviceInfo.wPageSize*sizeof(u8)) +

CHECK:SPACING: space preferred before that '+' (ctx:ExE)
#2370: FILE: drivers/staging/mrst_nand/flash.c:425:
+	+
 	^

CHECK:CAMELCASE: Avoid CamelCase: <wBlockSize>
#2390: FILE: drivers/staging/mrst_nand/flash.c:445:
+	DeviceInfo.wBlockSize + GLOB_LLD_Memory_Pool_Size() +

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2397: FILE: drivers/staging/mrst_nand/flash.c:452:
+}
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2398: FILE: drivers/staging/mrst_nand/flash.c:453:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:        GLOB_FTL_Mem_Config

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#2407: FILE: drivers/staging/mrst_nand/flash.c:462:
+*                  becomes neccessary, an additioanl parameter will
                            ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2409: FILE: drivers/staging/mrst_nand/flash.c:464:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <pMem>
#2410: FILE: drivers/staging/mrst_nand/flash.c:465:
+int GLOB_FTL_Mem_Config(u8 *pMem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2415: FILE: drivers/staging/mrst_nand/flash.c:470:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pMem"
#2417: FILE: drivers/staging/mrst_nand/flash.c:472:
+	if (pMem != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2427: FILE: drivers/staging/mrst_nand/flash.c:482:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Init

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2434: FILE: drivers/staging/mrst_nand/flash.c:489:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2441: FILE: drivers/staging/mrst_nand/flash.c:496:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:CAMELCASE: Avoid CamelCase: <wCachePageNum>
#2444: FILE: drivers/staging/mrst_nand/flash.c:499:
+	Cache.wCachePageNum = PAGES_PER_CACHE_BLOCK;

CHECK:CAMELCASE: Avoid CamelCase: <dwCacheDataSize>
#2448: FILE: drivers/staging/mrst_nand/flash.c:503:
+	Cache.dwCacheDataSize = (u32)Cache.wCachePageNum *

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2467: FILE: drivers/staging/mrst_nand/flash.c:522:
+		memset(g_pReadCounter, 0,
+			DeviceInfo.wDataBlockNum * sizeof(u16));

CHECK:CAMELCASE: Avoid CamelCase: <ItemArray>
#2472: FILE: drivers/staging/mrst_nand/flash.c:527:
+		Cache.ItemArray[i].dwAddress = NAND_CACHE_INIT_ADDR;

CHECK:CAMELCASE: Avoid CamelCase: <dwAddress>
#2472: FILE: drivers/staging/mrst_nand/flash.c:527:
+		Cache.ItemArray[i].dwAddress = NAND_CACHE_INIT_ADDR;

CHECK:CAMELCASE: Avoid CamelCase: <bLRUCount>
#2473: FILE: drivers/staging/mrst_nand/flash.c:528:
+		Cache.ItemArray[i].bLRUCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <bChanged>
#2474: FILE: drivers/staging/mrst_nand/flash.c:529:
+		Cache.ItemArray[i].bChanged = CLEAR;

CHECK:CAMELCASE: Avoid CamelCase: <pContent>
#2475: FILE: drivers/staging/mrst_nand/flash.c:530:
+		Cache.ItemArray[i].pContent = (u8 *)g_pMemPoolFree;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2493: FILE: drivers/staging/mrst_nand/flash.c:548:
+	memset(g_temp_buf, 0xFF,
+		DeviceInfo.wPagesPerBlock * DeviceInfo.wPageDataSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2511: FILE: drivers/staging/mrst_nand/flash.c:566:
+		memset(g_pReadCounterCopy, 0,
+			DeviceInfo.wDataBlockNum * sizeof(u16));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2547: FILE: drivers/staging/mrst_nand/flash.c:602:
+	memset(g_pBTBlocks, 0xFF,
+		(1 + LAST_BT_ID - FIRST_BT_ID) * sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2549: FILE: drivers/staging/mrst_nand/flash.c:604:
+	debug_boundary_error(((int)g_pMemPoolFree - (int)g_pMemPool) - 1,
+		globalMemSize, 0);

CHECK:CAMELCASE: Avoid CamelCase: <PendingCMD>
#2573: FILE: drivers/staging/mrst_nand/flash.c:628:
+	while (ftl_cmd <= PendingCMD[idx].Tag) {

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#2573: FILE: drivers/staging/mrst_nand/flash.c:628:
+	while (ftl_cmd <= PendingCMD[idx].Tag) {

CHECK:CAMELCASE: Avoid CamelCase: <BT_Index>
#2578: FILE: drivers/staging/mrst_nand/flash.c:633:
+			pbt[p_BTableChangesDelta->BT_Index] =

CHECK:CAMELCASE: Avoid CamelCase: <BT_Entry_Value>
#2579: FILE: drivers/staging/mrst_nand/flash.c:634:
+				p_BTableChangesDelta->BT_Entry_Value;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2580: FILE: drivers/staging/mrst_nand/flash.c:635:
+			debug_boundary_error(((

CHECK:CAMELCASE: Avoid CamelCase: <WC_Index>
#2589: FILE: drivers/staging/mrst_nand/flash.c:644:
+			g_pWearCounterCopy[p_BTableChangesDelta->WC_Index] =

CHECK:CAMELCASE: Avoid CamelCase: <WC_Entry_Value>
#2590: FILE: drivers/staging/mrst_nand/flash.c:645:
+				p_BTableChangesDelta->WC_Entry_Value;

CHECK:CAMELCASE: Avoid CamelCase: <RC_Index>
#2593: FILE: drivers/staging/mrst_nand/flash.c:648:
+			g_pReadCounterCopy[p_BTableChangesDelta->RC_Index] =

CHECK:CAMELCASE: Avoid CamelCase: <RC_Entry_Value>
#2594: FILE: drivers/staging/mrst_nand/flash.c:649:
+				p_BTableChangesDelta->RC_Entry_Value;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2596: FILE: drivers/staging/mrst_nand/flash.c:651:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"In event status setting read counter "

WARNING:SPLIT_STRING: quoted string split across lines
#2597: FILE: drivers/staging/mrst_nand/flash.c:652:
+				"In event status setting read counter "
+				"GLOB_FTLCommandCount %u Count %u Index %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2603: FILE: drivers/staging/mrst_nand/flash.c:658:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"This should never occur \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2603: FILE: drivers/staging/mrst_nand/flash.c:658:
+				"This should never occur \n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[n].CMD == WRITE_MAIN_CMD'
#2616: FILE: drivers/staging/mrst_nand/flash.c:671:
+	if ((PendingCMD[n].CMD == WRITE_MAIN_CMD) ||
+		(PendingCMD[n].CMD == WRITE_MAIN_SPARE_CMD)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[n].CMD == WRITE_MAIN_SPARE_CMD'
#2616: FILE: drivers/staging/mrst_nand/flash.c:671:
+	if ((PendingCMD[n].CMD == WRITE_MAIN_CMD) ||
+		(PendingCMD[n].CMD == WRITE_MAIN_SPARE_CMD)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2617: FILE: drivers/staging/mrst_nand/flash.c:672:
+	if ((PendingCMD[n].CMD == WRITE_MAIN_CMD) ||
+		(PendingCMD[n].CMD == WRITE_MAIN_SPARE_CMD)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '~BAD_BLOCK'
#2619: FILE: drivers/staging/mrst_nand/flash.c:674:
+			if (PendingCMD[n].Block == (pbt[k] & (~BAD_BLOCK)))

CHECK:CAMELCASE: Avoid CamelCase: <DataAddr>
#2632: FILE: drivers/staging/mrst_nand/flash.c:687:
+		if (PendingCMD[n].DataAddr == Cache.ItemArray[k].pContent) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2653: FILE: drivers/staging/mrst_nand/flash.c:708:
+	if (0 == *first_failed_cmd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2660: FILE: drivers/staging/mrst_nand/flash.c:715:
+static void process_cmd_fail_abort(int *first_failed_cmd,
+				u16 idx, int event)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2667: FILE: drivers/staging/mrst_nand/flash.c:722:
+	if (0 == *first_failed_cmd)

CHECK:CAMELCASE: Avoid CamelCase: <SBDCmdIndex>
#2668: FILE: drivers/staging/mrst_nand/flash.c:723:
+		*first_failed_cmd = PendingCMD[idx].SBDCmdIndex;

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2670: FILE: drivers/staging/mrst_nand/flash.c:725:
+	nand_dbg_print(NAND_DBG_DEBUG, "Uncorrectable error has occured "
 	                                                        ^^^^^^^

WARNING:TYPO_SPELLING: 'accesing' may be misspelled - perhaps 'accessing'?
#2671: FILE: drivers/staging/mrst_nand/flash.c:726:
+		"while executing %u Command %u accesing Block %u\n",
 		                               ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2671: FILE: drivers/staging/mrst_nand/flash.c:726:
+	nand_dbg_print(NAND_DBG_DEBUG, "Uncorrectable error has occured "
+		"while executing %u Command %u accesing Block %u\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[idx].CMD == READ_MAIN_CMD'
#2682: FILE: drivers/staging/mrst_nand/flash.c:737:
+	if ((PendingCMD[idx].CMD == READ_MAIN_CMD) ||
+		(PendingCMD[idx].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[idx].CMD == READ_MAIN_SPARE_CMD'
#2682: FILE: drivers/staging/mrst_nand/flash.c:737:
+	if ((PendingCMD[idx].CMD == READ_MAIN_CMD) ||
+		(PendingCMD[idx].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2683: FILE: drivers/staging/mrst_nand/flash.c:738:
+	if ((PendingCMD[idx].CMD == READ_MAIN_CMD) ||
+		(PendingCMD[idx].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '~BAD_BLOCK'
#2693: FILE: drivers/staging/mrst_nand/flash.c:748:
+			if (PendingCMD[idx].Block == (pbt[k] & (~BAD_BLOCK))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '~BAD_BLOCK'
#2723: FILE: drivers/staging/mrst_nand/flash.c:778:
+			if (PendingCMD[idx].Block ==
+				(pbt[i] & (~BAD_BLOCK)))

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#2738: FILE: drivers/staging/mrst_nand/flash.c:793:
+	if (PendingCMD[idx].Status == CMD_PASS) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2746: FILE: drivers/staging/mrst_nand/flash.c:801:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			" Command no. %hu is not executed\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2757: FILE: drivers/staging/mrst_nand/flash.c:812:
+* Function:    ^IGLOB_FTL_Event_Status$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2757: FILE: drivers/staging/mrst_nand/flash.c:812:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:    	GLOB_FTL_Event_Status

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2769: FILE: drivers/staging/mrst_nand/flash.c:824:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2776: FILE: drivers/staging/mrst_nand/flash.c:831:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2782: FILE: drivers/staging/mrst_nand/flash.c:837:
+	nand_dbg_print(NAND_DBG_DEBUG, "Event Code got from lld %d\n",
+		event_code);

WARNING:SPLIT_STRING: quoted string split across lines
#2790: FILE: drivers/staging/mrst_nand/flash.c:845:
+		nand_dbg_print(NAND_DBG_DEBUG, "Handling "
+			       "EVENT_CORRECTABLE_DATA_ERROR_FIXED");

WARNING:SPLIT_STRING: quoted string split across lines
#2797: FILE: drivers/staging/mrst_nand/flash.c:852:
+		nand_dbg_print(NAND_DBG_DEBUG, "UNCORRECTABLE "
+			       "DATA ERROR HAS HAPPENED\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2804: FILE: drivers/staging/mrst_nand/flash.c:859:
+		memcpy(g_pBlockTable, g_pBTStartingCopy,
+			DeviceInfo.wDataBlockNum * sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2806: FILE: drivers/staging/mrst_nand/flash.c:861:
+		memcpy(g_pWearCounter, g_pWearCounterCopy,
+			DeviceInfo.wDataBlockNum * sizeof(u8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2809: FILE: drivers/staging/mrst_nand/flash.c:864:
+			memcpy(g_pReadCounter, g_pReadCounterCopy,
+				DeviceInfo.wDataBlockNum * sizeof(u16));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2819: FILE: drivers/staging/mrst_nand/flash.c:874:
+	memcpy(g_pBTStartingCopy, g_pBlockTable,
+		DeviceInfo.wDataBlockNum * sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2821: FILE: drivers/staging/mrst_nand/flash.c:876:
+	memcpy(g_pWearCounterCopy, g_pWearCounter,
+		DeviceInfo.wDataBlockNum * sizeof(u8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2824: FILE: drivers/staging/mrst_nand/flash.c:879:
+		memcpy(g_pReadCounterCopy, g_pReadCounter,
+			DeviceInfo.wDataBlockNum * sizeof(u16));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2835: FILE: drivers/staging/mrst_nand/flash.c:890:
+* Function:    ^IGLOB_FTL_Enable_Disable_Interrupts$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2835: FILE: drivers/staging/mrst_nand/flash.c:890:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:    	GLOB_FTL_Enable_Disable_Interrupts

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2843: FILE: drivers/staging/mrst_nand/flash.c:898:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2849: FILE: drivers/staging/mrst_nand/flash.c:904:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Execute_CMDS

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2857: FILE: drivers/staging/mrst_nand/flash.c:912:
+	nand_dbg_print(NAND_DBG_TRACE,
+		"GLOB_FTL_Execute_CMDS: FTLCommandCount %u\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_FTL_Execute_CMDS', this function's name, in a string
#2857: FILE: drivers/staging/mrst_nand/flash.c:912:
+		"GLOB_FTL_Execute_CMDS: FTLCommandCount %u\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2867: FILE: drivers/staging/mrst_nand/flash.c:922:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Read Immediate

CHECK:CAMELCASE: Avoid CamelCase: <wResult>
#2877: FILE: drivers/staging/mrst_nand/flash.c:932:
+	int wResult = FAIL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2884: FILE: drivers/staging/mrst_nand/flash.c:939:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2912: FILE: drivers/staging/mrst_nand/flash.c:967:
+/*********************************************************************
+* Function:     FTL_Invert_Block_Table

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2924: FILE: drivers/staging/mrst_nand/flash.c:979:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2941: FILE: drivers/staging/mrst_nand/flash.c:996:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Flash_Init

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2949: FILE: drivers/staging/mrst_nand/flash.c:1004:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2955: FILE: drivers/staging/mrst_nand/flash.c:1010:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2968: FILE: drivers/staging/mrst_nand/flash.c:1023:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Inputs:       none

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2971: FILE: drivers/staging/mrst_nand/flash.c:1026:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2975: FILE: drivers/staging/mrst_nand/flash.c:1030:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2980: FILE: drivers/staging/mrst_nand/flash.c:1035:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2982: FILE: drivers/staging/mrst_nand/flash.c:1037:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Cache_Release

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2987: FILE: drivers/staging/mrst_nand/flash.c:1042:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2991: FILE: drivers/staging/mrst_nand/flash.c:1046:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#2993: FILE: drivers/staging/mrst_nand/flash.c:1048:
+	return;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2996: FILE: drivers/staging/mrst_nand/flash.c:1051:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_If_Hit

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3000: FILE: drivers/staging/mrst_nand/flash.c:1055:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3007: FILE: drivers/staging/mrst_nand/flash.c:1062:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= page_addr'
#3012: FILE: drivers/staging/mrst_nand/flash.c:1067:
+		if ((addr <= page_addr) &&
+			(addr + Cache.dwCacheDataSize > page_addr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3013: FILE: drivers/staging/mrst_nand/flash.c:1068:
+		if ((addr <= page_addr) &&
+			(addr + Cache.dwCacheDataSize > page_addr)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3023: FILE: drivers/staging/mrst_nand/flash.c:1078:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Calculate_LRU

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3028: FILE: drivers/staging/mrst_nand/flash.c:1083:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <bCurrentLRU>
#3031: FILE: drivers/staging/mrst_nand/flash.c:1086:
+	u8 i, bCurrentLRU, bTempCount;

CHECK:CAMELCASE: Avoid CamelCase: <bTempCount>
#3031: FILE: drivers/staging/mrst_nand/flash.c:1086:
+	u8 i, bCurrentLRU, bTempCount;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3034: FILE: drivers/staging/mrst_nand/flash.c:1089:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:CAMELCASE: Avoid CamelCase: <bLRU>
#3046: FILE: drivers/staging/mrst_nand/flash.c:1101:
+	Cache.bLRU = bCurrentLRU;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3050: FILE: drivers/staging/mrst_nand/flash.c:1105:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Read_Page

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3054: FILE: drivers/staging/mrst_nand/flash.c:1109:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3056: FILE: drivers/staging/mrst_nand/flash.c:1111:
+static void FTL_Cache_Read_Page(u8 *pData, u64 dwPageAddr,
+					u8 cache_blk)

CHECK:CAMELCASE: Avoid CamelCase: <pSrc>
#3058: FILE: drivers/staging/mrst_nand/flash.c:1113:
+	u8 *pSrc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3062: FILE: drivers/staging/mrst_nand/flash.c:1117:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3071: FILE: drivers/staging/mrst_nand/flash.c:1126:
+	GLOB_LLD_MemCopy_CMD(FTLCommandCount, pData, pSrc,
+			DeviceInfo.wPageDataSize, 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3082: FILE: drivers/staging/mrst_nand/flash.c:1137:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Read_All

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3086: FILE: drivers/staging/mrst_nand/flash.c:1141:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3098: FILE: drivers/staging/mrst_nand/flash.c:1153:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3108: FILE: drivers/staging/mrst_nand/flash.c:1163:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"FTL_Cache_Read_All: Reading Block %u\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Cache_Read_All', this function's name, in a string
#3108: FILE: drivers/staging/mrst_nand/flash.c:1163:
+		"FTL_Cache_Read_All: Reading Block %u\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '~BAD_BLOCK'
#3112: FILE: drivers/staging/mrst_nand/flash.c:1167:
+		if (Block == (pbt[i] & (~BAD_BLOCK))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3115: FILE: drivers/staging/mrst_nand/flash.c:1170:
+			if (IS_SPARE_BLOCK(i) || IS_BAD_BLOCK(i) ||
+				IS_DISCARDED_BLOCK(i)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3119: FILE: drivers/staging/mrst_nand/flash.c:1174:
+				GLOB_LLD_MemCopy_CMD(FTLCommandCount,
+				pData, g_temp_buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3124: FILE: drivers/staging/mrst_nand/flash.c:1179:
+				memset(pData, 0xFF,
+					PageCount * DeviceInfo.wPageDataSize);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3127: FILE: drivers/staging/mrst_nand/flash.c:1182:
+				return wResult;
+			} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3134: FILE: drivers/staging/mrst_nand/flash.c:1189:
+		printk(KERN_ERR "FTL_Cache_Read_All: Block is not found in BT\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Cache_Read_All', this function's name, in a string
#3134: FILE: drivers/staging/mrst_nand/flash.c:1189:
+		printk(KERN_ERR "FTL_Cache_Read_All: Block is not found in BT\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3138: FILE: drivers/staging/mrst_nand/flash.c:1193:
+	wResult = GLOB_LLD_Read_Page_Main(pData, Block, Page, PageCount,
+					    FTLCommandCount,

WARNING:SPLIT_STRING: quoted string split across lines
#3144: FILE: drivers/staging/mrst_nand/flash.c:1199:
+			       "Read Counter modified in FTLCommandCount %u"
+				" Block %u Counter%u\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3191: FILE: drivers/staging/mrst_nand/flash.c:1246:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Write_All

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3202: FILE: drivers/staging/mrst_nand/flash.c:1257:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3211: FILE: drivers/staging/mrst_nand/flash.c:1266:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#3214: FILE: drivers/staging/mrst_nand/flash.c:1269:
+	nand_dbg_print(NAND_DBG_DEBUG, "This block %d going to be written "
+		"on %d\n", cache_block_to_write,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3222: FILE: drivers/staging/mrst_nand/flash.c:1277:
+	if (FAIL == GLOB_LLD_Write_Page_Main(pData, Block, Page, PageCount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3225: FILE: drivers/staging/mrst_nand/flash.c:1280:
+		nand_dbg_print(NAND_DBG_WARN,
+			"NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#3226: FILE: drivers/staging/mrst_nand/flash.c:1281:
+			"NAND Program fail in %s, Line %d, "
+			"Function: %s, new Bad Block %d generated! "

WARNING:SPLIT_STRING: quoted string split across lines
#3227: FILE: drivers/staging/mrst_nand/flash.c:1282:
+			"Function: %s, new Bad Block %d generated! "
+			"Need Bad Block replacing.\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3233: FILE: drivers/staging/mrst_nand/flash.c:1288:
+	if (FAIL == GLOB_LLD_Write_Page_Main(pData, Block, Page, PageCount)) {

WARNING:SPLIT_STRING: quoted string split across lines
#3235: FILE: drivers/staging/mrst_nand/flash.c:1290:
+		nand_dbg_print(NAND_DBG_WARN, "NAND Program fail in %s,"
+			" Line %d, Function %s, new Bad Block %d generated!"

WARNING:SPLIT_STRING: quoted string split across lines
#3236: FILE: drivers/staging/mrst_nand/flash.c:1291:
+			" Line %d, Function %s, new Bad Block %d generated!"
+			"Need Bad Block replacing.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3245: FILE: drivers/staging/mrst_nand/flash.c:1300:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Update_Block

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3249: FILE: drivers/staging/mrst_nand/flash.c:1304:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3251: FILE: drivers/staging/mrst_nand/flash.c:1306:
+static int FTL_Cache_Update_Block(u8 *pData,
+			u64 old_page_addr, u64 blk_addr)

CHECK:CAMELCASE: Avoid CamelCase: <wFoundInCache>
#3256: FILE: drivers/staging/mrst_nand/flash.c:1311:
+	int wFoundInCache;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3263: FILE: drivers/staging/mrst_nand/flash.c:1318:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+				__FILE__, __LINE__, __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= page_addr'
#3278: FILE: drivers/staging/mrst_nand/flash.c:1333:
+				if ((addr >= page_addr) && addr <
+					(page_addr + Cache.dwCacheDataSize)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3286: FILE: drivers/staging/mrst_nand/flash.c:1341:
+			if (FAIL == wFoundInCache) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3287: FILE: drivers/staging/mrst_nand/flash.c:1342:
+				if (ERR == FTL_Cache_Read_All(g_pTempBuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3288: FILE: drivers/staging/mrst_nand/flash.c:1343:
+				if (ERR == FTL_Cache_Read_All(g_pTempBuf,
+					page_addr)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3298: FILE: drivers/staging/mrst_nand/flash.c:1353:
+		if (FAIL == FTL_Cache_Write_All(buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3299: FILE: drivers/staging/mrst_nand/flash.c:1354:
+		if (FAIL == FTL_Cache_Write_All(buf,
+			blk_addr + (page_addr - old_blk_addr))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3309: FILE: drivers/staging/mrst_nand/flash.c:1364:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Copy_Block

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3315: FILE: drivers/staging/mrst_nand/flash.c:1370:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3321: FILE: drivers/staging/mrst_nand/flash.c:1376:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ERR == r1'
#3328: FILE: drivers/staging/mrst_nand/flash.c:1383:
+		if ((ERR == r1) || (FAIL == r2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'FAIL == r2'
#3328: FILE: drivers/staging/mrst_nand/flash.c:1383:
+		if ((ERR == r1) || (FAIL == r2)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3328: FILE: drivers/staging/mrst_nand/flash.c:1383:
+		if ((ERR == r1) || (FAIL == r2)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3338: FILE: drivers/staging/mrst_nand/flash.c:1393:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Write_Back

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3344: FILE: drivers/staging/mrst_nand/flash.c:1399:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <iErase>
#3347: FILE: drivers/staging/mrst_nand/flash.c:1402:
+	int i, j, iErase;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3353: FILE: drivers/staging/mrst_nand/flash.c:1408:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3358: FILE: drivers/staging/mrst_nand/flash.c:1413:
+	iErase = (FAIL == FTL_Replace_Block(blk_addr)) ? PASS : FAIL;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3374: FILE: drivers/staging/mrst_nand/flash.c:1429:
+	if (IN_PROGRESS_BLOCK_TABLE != g_cBlockTableStatus) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3380: FILE: drivers/staging/mrst_nand/flash.c:1435:
+		if (PASS == iErase) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3382: FILE: drivers/staging/mrst_nand/flash.c:1437:
+			if (FAIL == GLOB_FTL_Block_Erase(phy_addr)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= blk_addr'
#3392: FILE: drivers/staging/mrst_nand/flash.c:1447:
+			if ((addr <= blk_addr) &&
+				((addr + Cache.dwCacheDataSize) > blk_addr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3393: FILE: drivers/staging/mrst_nand/flash.c:1448:
+			if ((addr <= blk_addr) &&
+				((addr + Cache.dwCacheDataSize) > blk_addr))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3398: FILE: drivers/staging/mrst_nand/flash.c:1453:
+		if (PASS == FTL_Cache_Update_Block(pData,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3399: FILE: drivers/staging/mrst_nand/flash.c:1454:
+		if (PASS == FTL_Cache_Update_Block(pData,
+					old_page_addr, phy_addr)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3402: FILE: drivers/staging/mrst_nand/flash.c:1457:
+			break;
+		} else {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3408: FILE: drivers/staging/mrst_nand/flash.c:1463:
+		if (ERR == FTL_Flash_Error_Handle(pData,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3409: FILE: drivers/staging/mrst_nand/flash.c:1464:
+		if (ERR == FTL_Flash_Error_Handle(pData,
+					old_page_addr, blk_addr))

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#3410: FILE: drivers/staging/mrst_nand/flash.c:1465:
+			return ERR;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3419: FILE: drivers/staging/mrst_nand/flash.c:1474:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Write_Page

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3423: FILE: drivers/staging/mrst_nand/flash.c:1478:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3425: FILE: drivers/staging/mrst_nand/flash.c:1480:
+static void FTL_Cache_Write_Page(u8 *pData, u64 page_addr,
+				u8 cache_blk, u16 flag)

CHECK:CAMELCASE: Avoid CamelCase: <pDest>
#3427: FILE: drivers/staging/mrst_nand/flash.c:1482:
+	u8 *pDest;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3431: FILE: drivers/staging/mrst_nand/flash.c:1486:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3440: FILE: drivers/staging/mrst_nand/flash.c:1495:
+	GLOB_LLD_MemCopy_CMD(FTLCommandCount, pDest, pData,
+			DeviceInfo.wPageDataSize, flag);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3450: FILE: drivers/staging/mrst_nand/flash.c:1505:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Write

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3455: FILE: drivers/staging/mrst_nand/flash.c:1510:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <bResult>
#3458: FILE: drivers/staging/mrst_nand/flash.c:1513:
+	int i, bResult = PASS;

CHECK:CAMELCASE: Avoid CamelCase: <bNO>
#3459: FILE: drivers/staging/mrst_nand/flash.c:1514:
+	u8 bNO, least_count = 0xFF;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3462: FILE: drivers/staging/mrst_nand/flash.c:1517:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Cache_Write', this function's name, in a string
#3467: FILE: drivers/staging/mrst_nand/flash.c:1522:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Cache_Write: "

WARNING:SPLIT_STRING: quoted string split across lines
#3468: FILE: drivers/staging/mrst_nand/flash.c:1523:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Cache_Write: "
+		"Least used cache block is %d\n", bNO);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3470: FILE: drivers/staging/mrst_nand/flash.c:1525:
+	if (SET == Cache.ItemArray[bNO].bChanged) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Cache_Write', this function's name, in a string
#3471: FILE: drivers/staging/mrst_nand/flash.c:1526:
+		nand_dbg_print(NAND_DBG_DEBUG, "FTL_Cache_Write: Cache"

WARNING:SPLIT_STRING: quoted string split across lines
#3472: FILE: drivers/staging/mrst_nand/flash.c:1527:
+		nand_dbg_print(NAND_DBG_DEBUG, "FTL_Cache_Write: Cache"
+			" Block %d containing logical block %d is dirty\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3477: FILE: drivers/staging/mrst_nand/flash.c:1532:
+		bResult = FTL_Cache_Write_Back(Cache.ItemArray[bNO].pContent,
+				Cache.ItemArray[bNO].dwAddress);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3495: FILE: drivers/staging/mrst_nand/flash.c:1550:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Cache_Read

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3501: FILE: drivers/staging/mrst_nand/flash.c:1556:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3508: FILE: drivers/staging/mrst_nand/flash.c:1563:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Cache_Read', this function's name, in a string
#3516: FILE: drivers/staging/mrst_nand/flash.c:1571:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Cache_Read: Logical Block %d "

WARNING:SPLIT_STRING: quoted string split across lines
#3517: FILE: drivers/staging/mrst_nand/flash.c:1572:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Cache_Read: Logical Block %d "
+		"is read into cache block no. %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3528: FILE: drivers/staging/mrst_nand/flash.c:1583:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Check_Block_Table

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3532: FILE: drivers/staging/mrst_nand/flash.c:1587:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <pFlag>
#3540: FILE: drivers/staging/mrst_nand/flash.c:1595:
+	u8 *pFlag = g_pMemPoolFree;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3541: FILE: drivers/staging/mrst_nand/flash.c:1596:
+	u8 *pFlag = g_pMemPoolFree;
+	g_pMemPoolFree += (DeviceInfo.wDataBlockNum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3544: FILE: drivers/staging/mrst_nand/flash.c:1599:
+	debug_boundary_error(((int)g_pMemPoolFree - (int)g_pMemPool) - 1,
+		globalMemSize, 0);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3549: FILE: drivers/staging/mrst_nand/flash.c:1604:
+	if (NULL != pFlag) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'blk_idx > DeviceInfo.wSpectraEndBlock'
#3564: FILE: drivers/staging/mrst_nand/flash.c:1619:
+			if ((blk_idx > DeviceInfo.wSpectraEndBlock) ||
+				PASS == pFlag[i]) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3565: FILE: drivers/staging/mrst_nand/flash.c:1620:
+			if ((blk_idx > DeviceInfo.wSpectraEndBlock) ||
+				PASS == pFlag[i]) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3565: FILE: drivers/staging/mrst_nand/flash.c:1620:
+				PASS == pFlag[i]) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3568: FILE: drivers/staging/mrst_nand/flash.c:1623:
+				break;
+			} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3578: FILE: drivers/staging/mrst_nand/flash.c:1633:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3580: FILE: drivers/staging/mrst_nand/flash.c:1635:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Write_Block_Table

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3587: FILE: drivers/staging/mrst_nand/flash.c:1642:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <wSuccess>
#3591: FILE: drivers/staging/mrst_nand/flash.c:1646:
+	int wSuccess = PASS;

CHECK:CAMELCASE: Avoid CamelCase: <wTempBlockTableIndex>
#3592: FILE: drivers/staging/mrst_nand/flash.c:1647:
+	u32 wTempBlockTableIndex;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3597: FILE: drivers/staging/mrst_nand/flash.c:1652:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3601: FILE: drivers/staging/mrst_nand/flash.c:1656:
+	if (IN_PROGRESS_BLOCK_TABLE != g_cBlockTableStatus)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3604: FILE: drivers/staging/mrst_nand/flash.c:1659:
+	if (PASS == wForce) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3620: FILE: drivers/staging/mrst_nand/flash.c:1675:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"Inside FTL_Write_Block_Table: block %d Page:%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Write_Block_Table', this function's name, in a string
#3620: FILE: drivers/staging/mrst_nand/flash.c:1675:
+		"Inside FTL_Write_Block_Table: block %d Page:%d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_bt_offset > DeviceInfo.wPagesPerBlock'
#3625: FILE: drivers/staging/mrst_nand/flash.c:1680:
+		if ((0 == (new_bt_offset % DeviceInfo.wPagesPerBlock)) ||
+			(new_bt_offset > DeviceInfo.wPagesPerBlock) ||
+			(FAIL == wSuccess)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'FAIL == wSuccess'
#3625: FILE: drivers/staging/mrst_nand/flash.c:1680:
+		if ((0 == (new_bt_offset % DeviceInfo.wPagesPerBlock)) ||
+			(new_bt_offset > DeviceInfo.wPagesPerBlock) ||
+			(FAIL == wSuccess)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3626: FILE: drivers/staging/mrst_nand/flash.c:1681:
+		if ((0 == (new_bt_offset % DeviceInfo.wPagesPerBlock)) ||
+			(new_bt_offset > DeviceInfo.wPagesPerBlock) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3627: FILE: drivers/staging/mrst_nand/flash.c:1682:
+			(FAIL == wSuccess)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3629: FILE: drivers/staging/mrst_nand/flash.c:1684:
+			if (BAD_BLOCK == wTempBlockTableIndex)

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#3630: FILE: drivers/staging/mrst_nand/flash.c:1685:
+				return ERR;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3668: FILE: drivers/staging/mrst_nand/flash.c:1723:
+		if (FAIL == wSuccess)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3670: FILE: drivers/staging/mrst_nand/flash.c:1725:
+	} while (FAIL == wSuccess);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3678: FILE: drivers/staging/mrst_nand/flash.c:1733:
+/******************************************************************
+* Function:     GLOB_FTL_Flash_Format

CHECK:CAMELCASE: Avoid CamelCase: <tempNode>
#3704: FILE: drivers/staging/mrst_nand/flash.c:1759:
+	u32 tempNode;

CHECK:CAMELCASE: Avoid CamelCase: <pbtStartingCopy>
#3708: FILE: drivers/staging/mrst_nand/flash.c:1763:
+	u32 *pbtStartingCopy = (u32 *)g_pBTStartingCopy;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3709: FILE: drivers/staging/mrst_nand/flash.c:1764:
+	u32 *pbtStartingCopy = (u32 *)g_pBTStartingCopy;
+	if (FTLCommandCount)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3713: FILE: drivers/staging/mrst_nand/flash.c:1768:
+	if (FAIL == FTL_Check_Block_Table(FAIL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'k == DeviceInfo.wSpectraEndBlock'
#3737: FILE: drivers/staging/mrst_nand/flash.c:1792:
+		if ((k == DeviceInfo.wSpectraEndBlock) && switched)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3743: FILE: drivers/staging/mrst_nand/flash.c:1798:
+		memset(g_pBlockTable, 0,
+			DeviceInfo.wDataBlockNum * sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3745: FILE: drivers/staging/mrst_nand/flash.c:1800:
+		memset(g_pWearCounter, 0,
+			DeviceInfo.wDataBlockNum * sizeof(u8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3748: FILE: drivers/staging/mrst_nand/flash.c:1803:
+			memset(g_pReadCounter, 0,
+				DeviceInfo.wDataBlockNum * sizeof(u16));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3751: FILE: drivers/staging/mrst_nand/flash.c:1806:
+		memset(g_pBTStartingCopy, 0,
+			DeviceInfo.wDataBlockNum * sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3753: FILE: drivers/staging/mrst_nand/flash.c:1808:
+		memset(g_pWearCounterCopy, 0,
+				DeviceInfo.wDataBlockNum * sizeof(u8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3756: FILE: drivers/staging/mrst_nand/flash.c:1811:
+			memset(g_pReadCounterCopy, 0,
+				DeviceInfo.wDataBlockNum * sizeof(u16));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3777: FILE: drivers/staging/mrst_nand/flash.c:1832:
+			ret = GLOB_LLD_Erase_Block(j, FTLCommandCount,
+						LLD_CMD_FLAG_MODE_POLL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3781: FILE: drivers/staging/mrst_nand/flash.c:1836:
+			if (FAIL == ret) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3785: FILE: drivers/staging/mrst_nand/flash.c:1840:
+				nand_dbg_print(NAND_DBG_WARN,
+			       "NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#3786: FILE: drivers/staging/mrst_nand/flash.c:1841:
+			       "NAND Program fail in %s, Line %d, "
+			       "Function: %s, new Bad Block %d generated!\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3800: FILE: drivers/staging/mrst_nand/flash.c:1855:
+			DeviceInfo.wSpectraStartBlock))
+			&& ((pbt[i] & BAD_BLOCK) == BAD_BLOCK); i++)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3803: FILE: drivers/staging/mrst_nand/flash.c:1858:
+		printk(KERN_ERR "All blocks bad!\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3805: FILE: drivers/staging/mrst_nand/flash.c:1860:
+		return FAIL;
+	} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3821: FILE: drivers/staging/mrst_nand/flash.c:1876:
+	memset(g_pBTBlocks, 0xFF,
+			(1 + LAST_BT_ID - FIRST_BT_ID) * sizeof(u32));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3822: FILE: drivers/staging/mrst_nand/flash.c:1877:
+	g_pBTBlocks[FIRST_BT_ID-FIRST_BT_ID] = g_wBlockTableIndex;
 	                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#3840: FILE: drivers/staging/mrst_nand/flash.c:1895:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Search_Block_Table_IN_Block

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3848: FILE: drivers/staging/mrst_nand/flash.c:1903:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3850: FILE: drivers/staging/mrst_nand/flash.c:1905:
+static int FTL_Search_Block_Table_IN_Block(u32 BT_Block,
+						u8 BT_Tag, u16 *Page)

CHECK:CAMELCASE: Avoid CamelCase: <Result>
#3853: FILE: drivers/staging/mrst_nand/flash.c:1908:
+	u16 Result = PASS;

CHECK:CAMELCASE: Avoid CamelCase: <Last_IPF>
#3854: FILE: drivers/staging/mrst_nand/flash.c:1909:
+	u16 Last_IPF = 0;

CHECK:CAMELCASE: Avoid CamelCase: <pSpareBuf>
#3857: FILE: drivers/staging/mrst_nand/flash.c:1912:
+	u8 *pSpareBuf;

CHECK:CAMELCASE: Avoid CamelCase: <pSpareBufBTLastPage>
#3858: FILE: drivers/staging/mrst_nand/flash.c:1913:
+	u8 *pSpareBufBTLastPage;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3864: FILE: drivers/staging/mrst_nand/flash.c:1919:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3869: FILE: drivers/staging/mrst_nand/flash.c:1924:
+	g_pMemPoolFree += (DeviceInfo.wPageDataSize*sizeof(u8));
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3880: FILE: drivers/staging/mrst_nand/flash.c:1935:
+	debug_boundary_error(((int)g_pMemPoolFree - (int)g_pMemPool) - 1,
+		globalMemSize, 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Search_Block_Table_IN_Block', this function's name, in a string
#3883: FILE: drivers/staging/mrst_nand/flash.c:1938:
+		       "FTL_Search_Block_Table_IN_Block: "

WARNING:SPLIT_STRING: quoted string split across lines
#3884: FILE: drivers/staging/mrst_nand/flash.c:1939:
+		       "FTL_Search_Block_Table_IN_Block: "
+		       "Searching block table in %u block\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3893: FILE: drivers/staging/mrst_nand/flash.c:1948:
+		Result = GLOB_LLD_Read_Page_Main(tempbuf,
+			BT_Block, i, 1, FTLCommandCount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3899: FILE: drivers/staging/mrst_nand/flash.c:1954:
+		Result = GLOB_LLD_Read_Page_Main_Polling(tempbuf,
+							BT_Block, i, 1);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3901: FILE: drivers/staging/mrst_nand/flash.c:1956:
+		if (0 == memcmp(tempbuf, g_pIPF, DeviceInfo.wPageDataSize)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3917: FILE: drivers/staging/mrst_nand/flash.c:1972:
+		if (0 == Last_IPF)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3923: FILE: drivers/staging/mrst_nand/flash.c:1978:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"Reading the spare area of Block %u Page %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3926: FILE: drivers/staging/mrst_nand/flash.c:1981:
+			Result = GLOB_LLD_Read_Page_Spare(pSpareBuf,
+							BT_Block, i, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3928: FILE: drivers/staging/mrst_nand/flash.c:1983:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"Reading the spare area of Block %u Page %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3931: FILE: drivers/staging/mrst_nand/flash.c:1986:
+			Result = GLOB_LLD_Read_Page_Spare(pSpareBufBTLastPage,
+				BT_Block, i + bt_pages - 1, 1);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3949: FILE: drivers/staging/mrst_nand/flash.c:2004:
+				j = FTL_Extract_Block_Table_Tag(

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3953: FILE: drivers/staging/mrst_nand/flash.c:2008:
+						if (tagarray[k] == BT_Tag)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3966: FILE: drivers/staging/mrst_nand/flash.c:2021:
+						nand_dbg_print(NAND_DBG_DEBUG,
+							"Block table is found"

WARNING:SPLIT_STRING: quoted string split across lines
#3967: FILE: drivers/staging/mrst_nand/flash.c:2022:
+							"Block table is found"
+							" in page after IPF "

WARNING:SPLIT_STRING: quoted string split across lines
#3968: FILE: drivers/staging/mrst_nand/flash.c:2023:
+							" in page after IPF "
+							"at block %d "

WARNING:SPLIT_STRING: quoted string split across lines
#3969: FILE: drivers/staging/mrst_nand/flash.c:2024:
+							"at block %d "
+							"page %d\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3976: FILE: drivers/staging/mrst_nand/flash.c:2031:
+						break;
+					} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3991: FILE: drivers/staging/mrst_nand/flash.c:2046:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Reading the spare area of Block %d Page %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3996: FILE: drivers/staging/mrst_nand/flash.c:2051:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Reading the spare area of Block %u Page %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4000: FILE: drivers/staging/mrst_nand/flash.c:2055:
+		Result = GLOB_LLD_Read_Page_Spare(pSpareBufBTLastPage,
+					BT_Block, i + bt_pages - 1, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4019: FILE: drivers/staging/mrst_nand/flash.c:2074:
+			j = FTL_Extract_Block_Table_Tag(pSpareBufBTLastPage,
+						&tagarray);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4037: FILE: drivers/staging/mrst_nand/flash.c:2092:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"Block table is found "

WARNING:SPLIT_STRING: quoted string split across lines
#4038: FILE: drivers/staging/mrst_nand/flash.c:2093:
+						"Block table is found "
+						"in page prior to IPF "

WARNING:SPLIT_STRING: quoted string split across lines
#4039: FILE: drivers/staging/mrst_nand/flash.c:2094:
+						"in page prior to IPF "
+						"at block %u page %d\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4046: FILE: drivers/staging/mrst_nand/flash.c:2101:
+					break;
+				} else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'Last_IPF > bt_pages'
#4055: FILE: drivers/staging/mrst_nand/flash.c:2110:
+		if ((Last_IPF > bt_pages) && (i < Last_IPF) && (!BT_Found)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < Last_IPF'
#4055: FILE: drivers/staging/mrst_nand/flash.c:2110:
+		if ((Last_IPF > bt_pages) && (i < Last_IPF) && (!BT_Found)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!BT_Found'
#4055: FILE: drivers/staging/mrst_nand/flash.c:2110:
+		if ((Last_IPF > bt_pages) && (i < Last_IPF) && (!BT_Found)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'Last_IPF == bt_pages'
#4059: FILE: drivers/staging/mrst_nand/flash.c:2114:
+		if ((Last_IPF == bt_pages) && (i < Last_IPF) && (!BT_Found))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < Last_IPF'
#4059: FILE: drivers/staging/mrst_nand/flash.c:2114:
+		if ((Last_IPF == bt_pages) && (i < Last_IPF) && (!BT_Found))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!BT_Found'
#4059: FILE: drivers/staging/mrst_nand/flash.c:2114:
+		if ((Last_IPF == bt_pages) && (i < Last_IPF) && (!BT_Found))

WARNING:SPLIT_STRING: quoted string split across lines
#4067: FILE: drivers/staging/mrst_nand/flash.c:2122:
+		nand_dbg_print(NAND_DBG_DEBUG, "Reading the spare area of "
+			"Block %u Page %u", (unsigned int)BT_Block, i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4071: FILE: drivers/staging/mrst_nand/flash.c:2126:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Reading the spare area of Block %u Page %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4074: FILE: drivers/staging/mrst_nand/flash.c:2129:
+		Result = GLOB_LLD_Read_Page_Spare(pSpareBufBTLastPage,
+					BT_Block, i + bt_pages - 1, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4109: FILE: drivers/staging/mrst_nand/flash.c:2164:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"Block table is found "

WARNING:SPLIT_STRING: quoted string split across lines
#4110: FILE: drivers/staging/mrst_nand/flash.c:2165:
+						"Block table is found "
+						"in page after IPF at "

WARNING:SPLIT_STRING: quoted string split across lines
#4111: FILE: drivers/staging/mrst_nand/flash.c:2166:
+						"in page after IPF at "
+						"block %u page %u\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4164: FILE: drivers/staging/mrst_nand/flash.c:2219:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Read_Block_Table

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4179: FILE: drivers/staging/mrst_nand/flash.c:2234:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <tempBuf>
#4185: FILE: drivers/staging/mrst_nand/flash.c:2240:
+	u8 *tempBuf, *tagarray;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4197: FILE: drivers/staging/mrst_nand/flash.c:2252:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4205: FILE: drivers/staging/mrst_nand/flash.c:2260:
+	debug_boundary_error(((int)g_pMemPoolFree - (int)g_pMemPool) - 1,
+		globalMemSize, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4216: FILE: drivers/staging/mrst_nand/flash.c:2271:
+			status = GLOB_LLD_Read_Page_Main(tempBuf, j, 0, 1,
+				FTLCommandCount, LLD_CMD_FLAG_MODE_POLL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4219: FILE: drivers/staging/mrst_nand/flash.c:2274:
+			status  = GLOB_LLD_Read_Page_Main_Polling(tempBuf,
+								j, 0, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4233: FILE: drivers/staging/mrst_nand/flash.c:2288:
+		nand_dbg_print(NAND_DBG_DEBUG,
+				"Block table is contained in Block %d %d\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4236: FILE: drivers/staging/mrst_nand/flash.c:2291:
+		if (g_pBTBlocks[k-FIRST_BT_ID] == BTBLOCK_INVAL) {
 		                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4237: FILE: drivers/staging/mrst_nand/flash.c:2292:
+			g_pBTBlocks[k-FIRST_BT_ID] = j;
 			             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4240: FILE: drivers/staging/mrst_nand/flash.c:2295:
+			printk(KERN_ERR "FTL_Read_Block_Table -"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Read_Block_Table', this function's name, in a string
#4240: FILE: drivers/staging/mrst_nand/flash.c:2295:
+			printk(KERN_ERR "FTL_Read_Block_Table -"

WARNING:SPLIT_STRING: quoted string split across lines
#4241: FILE: drivers/staging/mrst_nand/flash.c:2296:
+			printk(KERN_ERR "FTL_Read_Block_Table -"
+				"This should never happens. "

WARNING:SPLIT_STRING: quoted string split across lines
#4242: FILE: drivers/staging/mrst_nand/flash.c:2297:
+				"This should never happens. "
+				"Two block table have same counter %u!\n", k);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4251: FILE: drivers/staging/mrst_nand/flash.c:2306:
+		if (g_pBTBlocks[FIRST_BT_ID - FIRST_BT_ID] != BTBLOCK_INVAL &&
+		g_pBTBlocks[LAST_BT_ID - FIRST_BT_ID] != BTBLOCK_INVAL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4254: FILE: drivers/staging/mrst_nand/flash.c:2309:
+			while ((j > FIRST_BT_ID) &&
+			(g_pBTBlocks[j - FIRST_BT_ID] != BTBLOCK_INVAL))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4273: FILE: drivers/staging/mrst_nand/flash.c:2328:
+			if (g_pBTBlocks[j-FIRST_BT_ID] == BTBLOCK_INVAL)
 			                 ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4280: FILE: drivers/staging/mrst_nand/flash.c:2335:
+		for (; (j >= last_erased) && (FAIL == wResult); j--) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4285: FILE: drivers/staging/mrst_nand/flash.c:2340:
+			FTL_Search_Block_Table_IN_Block(g_pBTBlocks[i],
+						i + FIRST_BT_ID, &Page);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4289: FILE: drivers/staging/mrst_nand/flash.c:2344:
+			while ((search_result == PASS) && (FAIL == wResult)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4291: FILE: drivers/staging/mrst_nand/flash.c:2346:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"FTL_Read_Block_Table:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Read_Block_Table', this function's name, in a string
#4291: FILE: drivers/staging/mrst_nand/flash.c:2346:
+					"FTL_Read_Block_Table:"

WARNING:SPLIT_STRING: quoted string split across lines
#4292: FILE: drivers/staging/mrst_nand/flash.c:2347:
+					"FTL_Read_Block_Table:"
+					"Block: %u Page: %u "

WARNING:SPLIT_STRING: quoted string split across lines
#4293: FILE: drivers/staging/mrst_nand/flash.c:2348:
+					"Block: %u Page: %u "
+					"contains block table\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4309: FILE: drivers/staging/mrst_nand/flash.c:2364:
+					status  = GLOB_LLD_Read_Page_Main(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4315: FILE: drivers/staging/mrst_nand/flash.c:2370:
+					GLOB_LLD_Read_Page_Main_Polling(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4321: FILE: drivers/staging/mrst_nand/flash.c:2376:
+					FTL_Copy_Block_Table_From_Flash(

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4334: FILE: drivers/staging/mrst_nand/flash.c:2389:
+				if (FAIL == wResult) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4337: FILE: drivers/staging/mrst_nand/flash.c:2392:
+						Page -= ((bt_pages<<1) + 1);
 						                  ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4345: FILE: drivers/staging/mrst_nand/flash.c:2400:
+	if (PASS == wResult) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4359: FILE: drivers/staging/mrst_nand/flash.c:2414:
+			memcpy(g_pBTStartingCopy, g_pBlockTable,
+				DeviceInfo.wDataBlockNum * sizeof(u32)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4364: FILE: drivers/staging/mrst_nand/flash.c:2419:
+			memcpy(g_pBTStartingCopy, g_pBlockTable,
+				DeviceInfo.wDataBlockNum * sizeof(u32)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4369: FILE: drivers/staging/mrst_nand/flash.c:2424:
+	if (FAIL == wResult)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4370: FILE: drivers/staging/mrst_nand/flash.c:2425:
+		printk(KERN_ERR "Yunpeng - "

WARNING:SPLIT_STRING: quoted string split across lines
#4371: FILE: drivers/staging/mrst_nand/flash.c:2426:
+		printk(KERN_ERR "Yunpeng - "
+		"Can not find valid spectra block table!\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4378: FILE: drivers/staging/mrst_nand/flash.c:2433:
+	if (FAIL == wResult) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4387: FILE: drivers/staging/mrst_nand/flash.c:2442:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4389: FILE: drivers/staging/mrst_nand/flash.c:2444:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Flash_Error_Handle

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#4394: FILE: drivers/staging/mrst_nand/flash.c:2449:
+* Description:  It handles any error occured during Spectra operation
                                      ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4395: FILE: drivers/staging/mrst_nand/flash.c:2450:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4397: FILE: drivers/staging/mrst_nand/flash.c:2452:
+static int FTL_Flash_Error_Handle(u8 *pData, u64 old_page_addr,
+				u64 blk_addr)

CHECK:CAMELCASE: Avoid CamelCase: <wErase>
#4403: FILE: drivers/staging/mrst_nand/flash.c:2458:
+	int wErase = FAIL;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4410: FILE: drivers/staging/mrst_nand/flash.c:2465:
+	if (ERR == GLOB_FTL_Garbage_Collection())

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#4411: FILE: drivers/staging/mrst_nand/flash.c:2466:
+		return ERR;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4455: FILE: drivers/staging/mrst_nand/flash.c:2510:
+		if (FAIL == wResult) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4456: FILE: drivers/staging/mrst_nand/flash.c:2511:
+			if (FAIL == GLOB_FTL_Garbage_Collection())

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4458: FILE: drivers/staging/mrst_nand/flash.c:2513:
+				break;
+			else

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4462: FILE: drivers/staging/mrst_nand/flash.c:2517:
+		if (IN_PROGRESS_BLOCK_TABLE != g_cBlockTableStatus) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4470: FILE: drivers/staging/mrst_nand/flash.c:2525:
+			if (PASS == wErase) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4471: FILE: drivers/staging/mrst_nand/flash.c:2526:
+				if (FAIL == GLOB_FTL_Block_Erase(phy_addr)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4476: FILE: drivers/staging/mrst_nand/flash.c:2531:
+			if (PASS == FTL_Cache_Update_Block(pData,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4481: FILE: drivers/staging/mrst_nand/flash.c:2536:
+				break;
+			} else {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4486: FILE: drivers/staging/mrst_nand/flash.c:2541:
+	} while (FAIL == wResult);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4494: FILE: drivers/staging/mrst_nand/flash.c:2549:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Get_Page_Num

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4498: FILE: drivers/staging/mrst_nand/flash.c:2553:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#4502: FILE: drivers/staging/mrst_nand/flash.c:2557:
+		(GLOB_u64_Remainder(length , 1) > 0 ? 1 : 0));
 		                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4506: FILE: drivers/staging/mrst_nand/flash.c:2561:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Get_Physical_Block_Addr

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4511: FILE: drivers/staging/mrst_nand/flash.c:2566:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4518: FILE: drivers/staging/mrst_nand/flash.c:2573:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:SPACING: No space is necessary after a cast
#4521: FILE: drivers/staging/mrst_nand/flash.c:2576:
+	physical_addr = (u64) DeviceInfo.wBlockDataSize *

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4528: FILE: drivers/staging/mrst_nand/flash.c:2583:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Get_Block_Index

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4532: FILE: drivers/staging/mrst_nand/flash.c:2587:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '~BAD_BLOCK'
#4542: FILE: drivers/staging/mrst_nand/flash.c:2597:
+		if (wBlockNum == (pbt[i] & (~BAD_BLOCK)))

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4549: FILE: drivers/staging/mrst_nand/flash.c:2604:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Wear_Leveling

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4555: FILE: drivers/staging/mrst_nand/flash.c:2610:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4559: FILE: drivers/staging/mrst_nand/flash.c:2614:
+	nand_dbg_print(NAND_DBG_WARN, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4568: FILE: drivers/staging/mrst_nand/flash.c:2623:
+static void find_least_most_worn(u8 *chg,
+	u32 *least_idx, u8 *least_cnt,

CHECK:SPACING: No space is necessary after a cast
#4580: FILE: drivers/staging/mrst_nand/flash.c:2635:
+		idx = (u32) ((~BAD_BLOCK) & pbt[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4599: FILE: drivers/staging/mrst_nand/flash.c:2654:
+			debug_boundary_error(*most_idx,
+				DeviceInfo.wDataBlockNum, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4601: FILE: drivers/staging/mrst_nand/flash.c:2656:
+			debug_boundary_error(*least_idx,
+				DeviceInfo.wDataBlockNum, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4608: FILE: drivers/staging/mrst_nand/flash.c:2663:
+static int move_blks_for_wear_leveling(u8 *chg,
+	u32 *least_idx, u32 *rep_blk_num, int *result)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4621: FILE: drivers/staging/mrst_nand/flash.c:2676:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"More than two spare blocks exist so do it\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4623: FILE: drivers/staging/mrst_nand/flash.c:2678:
+		nand_dbg_print(NAND_DBG_DEBUG, "Block Replaced is %d\n",
+				rep_blk);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4627: FILE: drivers/staging/mrst_nand/flash.c:2682:
+		if (IN_PROGRESS_BLOCK_TABLE != g_cBlockTableStatus) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4636: FILE: drivers/staging/mrst_nand/flash.c:2691:
+			if (FAIL == ret_cp_blk) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4639: FILE: drivers/staging/mrst_nand/flash.c:2694:
+				if (FAIL == ret_erase)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4643: FILE: drivers/staging/mrst_nand/flash.c:2698:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"FTL_Copy_Block == OK\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#4652: FILE: drivers/staging/mrst_nand/flash.c:2707:
+			u32 rep_idx = FTL_Get_Block_Index(rep_blk);
+			tmp = (u32)(DISCARD_BLOCK | pbt[old_idx]);

CHECK:CAMELCASE: Avoid CamelCase: <FTL_Get_Block_Index>
#4677: FILE: drivers/staging/mrst_nand/flash.c:2732:
+			pbt[FTL_Get_Block_Index(rep_blk)] |= BAD_BLOCK;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4698: FILE: drivers/staging/mrst_nand/flash.c:2753:
+		printk(KERN_ERR "Less than 3 spare blocks exist so quit\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4706: FILE: drivers/staging/mrst_nand/flash.c:2761:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Static_Wear_Leveling

WARNING:TYPO_SPELLING: 'exhange' may be misspelled - perhaps 'exchange'?
#4712: FILE: drivers/staging/mrst_nand/flash.c:2767:
+*                   update the block table with exhange
                                                 ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4716: FILE: drivers/staging/mrst_nand/flash.c:2771:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4743: FILE: drivers/staging/mrst_nand/flash.c:2798:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"starting static wear leveling\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4750: FILE: drivers/staging/mrst_nand/flash.c:2805:
+		find_least_most_worn(chang_flag, &least_worn_idx,
+			&least_worn_cnt, &most_worn_idx, &most_worn_cnt);

WARNING:TYPO_SPELLING: 'whos' may be misspelled - perhaps 'whose'?
#4753: FILE: drivers/staging/mrst_nand/flash.c:2808:
+			"Used and least worn is block %u, whos count is %u\n",
 			                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4753: FILE: drivers/staging/mrst_nand/flash.c:2808:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Used and least worn is block %u, whos count is %u\n",

WARNING:TYPO_SPELLING: 'whos' may be misspelled - perhaps 'whose'?
#4758: FILE: drivers/staging/mrst_nand/flash.c:2813:
+			"Free and  most worn is block %u, whos count is %u\n",
 			                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4758: FILE: drivers/staging/mrst_nand/flash.c:2813:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Free and  most worn is block %u, whos count is %u\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'most_worn_cnt > least_worn_cnt'
#4762: FILE: drivers/staging/mrst_nand/flash.c:2817:
+		if ((most_worn_cnt > least_worn_cnt) &&
+			(most_worn_cnt - least_worn_cnt > WEAR_LEVELING_GATE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4763: FILE: drivers/staging/mrst_nand/flash.c:2818:
+		if ((most_worn_cnt > least_worn_cnt) &&
+			(most_worn_cnt - least_worn_cnt > WEAR_LEVELING_GATE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4765: FILE: drivers/staging/mrst_nand/flash.c:2820:
+			go_on = move_blks_for_wear_leveling(chang_flag,
+				&least_worn_idx, &replaced_blks, &result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4785: FILE: drivers/staging/mrst_nand/flash.c:2840:
+	while ((i < DeviceInfo.wDataBlockNum) && (discard_cnt > 0) &&
+			((FTLCommandCount + 28) < 256)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4787: FILE: drivers/staging/mrst_nand/flash.c:2842:
+		if (((pbt[i] & BAD_BLOCK) != BAD_BLOCK) &&
+				(pbt[i] & DISCARD_BLOCK)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4788: FILE: drivers/staging/mrst_nand/flash.c:2843:
+			if (IN_PROGRESS_BLOCK_TABLE != g_cBlockTableStatus) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4800: FILE: drivers/staging/mrst_nand/flash.c:2855:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"GC will erase BT block %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4817: FILE: drivers/staging/mrst_nand/flash.c:2872:
+			if (PASS == GLOB_FTL_Block_Erase(addr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4855: FILE: drivers/staging/mrst_nand/flash.c:2910:
+		if (((pbt[i] & BAD_BLOCK) != BAD_BLOCK) &&
+				(pbt[i] & DISCARD_BLOCK)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4856: FILE: drivers/staging/mrst_nand/flash.c:2911:
+			if (IN_PROGRESS_BLOCK_TABLE != g_cBlockTableStatus) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4868: FILE: drivers/staging/mrst_nand/flash.c:2923:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"GC will erase BT block %d\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4885: FILE: drivers/staging/mrst_nand/flash.c:2940:
+			if (PASS == GLOB_FTL_Block_Erase(addr)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4903: FILE: drivers/staging/mrst_nand/flash.c:2958:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Garbage_Collection

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4912: FILE: drivers/staging/mrst_nand/flash.c:2967:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <wDiscard>
#4916: FILE: drivers/staging/mrst_nand/flash.c:2971:
+	u32 wDiscard = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4921: FILE: drivers/staging/mrst_nand/flash.c:2976:
+	nand_dbg_print(NAND_DBG_WARN, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#4924: FILE: drivers/staging/mrst_nand/flash.c:2979:
+		printk(KERN_ALERT "GLOB_FTL_Garbage_Collection() "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_FTL_Garbage_Collection', this function's name, in a string
#4924: FILE: drivers/staging/mrst_nand/flash.c:2979:
+		printk(KERN_ALERT "GLOB_FTL_Garbage_Collection() "

WARNING:SPLIT_STRING: quoted string split across lines
#4925: FILE: drivers/staging/mrst_nand/flash.c:2980:
+		printk(KERN_ALERT "GLOB_FTL_Garbage_Collection() "
+			"has been re-entered! Exit.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4944: FILE: drivers/staging/mrst_nand/flash.c:2999:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"Found %d discarded blocks\n", wDiscard);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4957: FILE: drivers/staging/mrst_nand/flash.c:3012:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <pBTBlocksNode>
#4963: FILE: drivers/staging/mrst_nand/flash.c:3018:
+	u32 *pBTBlocksNode = (u32 *)g_pBTBlocks;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4968: FILE: drivers/staging/mrst_nand/flash.c:3023:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4976: FILE: drivers/staging/mrst_nand/flash.c:3031:
+	for (i = last_erased; (i <= LAST_BT_ID) &&
+		(g_pBTBlocks[((i + 2) % (1 + LAST_BT_ID - FIRST_BT_ID)) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4982: FILE: drivers/staging/mrst_nand/flash.c:3037:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"do_bt_garbage_collection: pba %d, lba %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_bt_garbage_collection', this function's name, in a string
#4982: FILE: drivers/staging/mrst_nand/flash.c:3037:
+			"do_bt_garbage_collection: pba %d, lba %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4985: FILE: drivers/staging/mrst_nand/flash.c:3040:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Block Table Entry: %d", pbt[lba]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4988: FILE: drivers/staging/mrst_nand/flash.c:3043:
+		if (((pbt[lba] & BAD_BLOCK) != BAD_BLOCK) &&
+			(pbt[lba] & DISCARD_BLOCK)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4990: FILE: drivers/staging/mrst_nand/flash.c:3045:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"do_bt_garbage_collection_cdma: "

WARNING:SPLIT_STRING: quoted string split across lines
#4991: FILE: drivers/staging/mrst_nand/flash.c:3046:
+				"do_bt_garbage_collection_cdma: "
+				"Erasing Block tables present in block %d\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4995: FILE: drivers/staging/mrst_nand/flash.c:3050:
+			if (PASS == GLOB_FTL_Block_Erase(addr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5017: FILE: drivers/staging/mrst_nand/flash.c:3072:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"resetting bt entry at index %d "

WARNING:SPLIT_STRING: quoted string split across lines
#5018: FILE: drivers/staging/mrst_nand/flash.c:3073:
+					"resetting bt entry at index %d "
+					"value %d\n", i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5045: FILE: drivers/staging/mrst_nand/flash.c:3100:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5053: FILE: drivers/staging/mrst_nand/flash.c:3108:
+	for (i = last_erased; (i <= LAST_BT_ID) &&
+		(g_pBTBlocks[((i + 2) % (1 + LAST_BT_ID - FIRST_BT_ID)) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5058: FILE: drivers/staging/mrst_nand/flash.c:3113:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"do_bt_garbage_collection_cdma: pba %d, lba %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5061: FILE: drivers/staging/mrst_nand/flash.c:3116:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Block Table Entry: %d", pbt[lba]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5064: FILE: drivers/staging/mrst_nand/flash.c:3119:
+		if (((pbt[lba] & BAD_BLOCK) != BAD_BLOCK) &&
+			(pbt[lba] & DISCARD_BLOCK)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5066: FILE: drivers/staging/mrst_nand/flash.c:3121:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"do_bt_garbage_collection: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_bt_garbage_collection', this function's name, in a string
#5066: FILE: drivers/staging/mrst_nand/flash.c:3121:
+				"do_bt_garbage_collection: "

WARNING:SPLIT_STRING: quoted string split across lines
#5067: FILE: drivers/staging/mrst_nand/flash.c:3122:
+				"do_bt_garbage_collection: "
+				"Erasing Block tables present in block %d\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5071: FILE: drivers/staging/mrst_nand/flash.c:3126:
+			if (PASS == GLOB_FTL_Block_Erase(addr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5078: FILE: drivers/staging/mrst_nand/flash.c:3133:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"resetting bt entry at index %d "

WARNING:SPLIT_STRING: quoted string split across lines
#5079: FILE: drivers/staging/mrst_nand/flash.c:3134:
+					"resetting bt entry at index %d "
+					"value %d\n", i,

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5099: FILE: drivers/staging/mrst_nand/flash.c:3154:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_BT_Garbage_Collection

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5104: FILE: drivers/staging/mrst_nand/flash.c:3159:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5111: FILE: drivers/staging/mrst_nand/flash.c:3166:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Replace_OneBlock

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5117: FILE: drivers/staging/mrst_nand/flash.c:3172:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5125: FILE: drivers/staging/mrst_nand/flash.c:3180:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:SPACING: No space is necessary after a cast
#5133: FILE: drivers/staging/mrst_nand/flash.c:3188:
+		replace_node = (u32) ((~SPARE_BLOCK) & pbt[rep_blk]);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5163: FILE: drivers/staging/mrst_nand/flash.c:3218:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Write_Block_Table_Data

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5173: FILE: drivers/staging/mrst_nand/flash.c:3228:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <dwBlockTableAddr>
#5176: FILE: drivers/staging/mrst_nand/flash.c:3231:
+	u64 dwBlockTableAddr, pTempAddr;

CHECK:CAMELCASE: Avoid CamelCase: <pTempAddr>
#5176: FILE: drivers/staging/mrst_nand/flash.c:3231:
+	u64 dwBlockTableAddr, pTempAddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5184: FILE: drivers/staging/mrst_nand/flash.c:3239:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Write_Block_Table_Data', this function's name, in a string
#5193: FILE: drivers/staging/mrst_nand/flash.c:3248:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Write_Block_Table_Data: "

WARNING:SPLIT_STRING: quoted string split across lines
#5194: FILE: drivers/staging/mrst_nand/flash.c:3249:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Write_Block_Table_Data: "
+			       "page= %d BlockTableIndex= %d "

WARNING:SPLIT_STRING: quoted string split across lines
#5195: FILE: drivers/staging/mrst_nand/flash.c:3250:
+			       "page= %d BlockTableIndex= %d "
+			       "BlockTableOffset=%d\n", bt_pages,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5211: FILE: drivers/staging/mrst_nand/flash.c:3266:
+		if ((bt_flag > (LAST_BT_ID-4)) &&
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5212: FILE: drivers/staging/mrst_nand/flash.c:3267:
+		if ((bt_flag > (LAST_BT_ID-4)) &&
+			g_pBTBlocks[FIRST_BT_ID - FIRST_BT_ID] !=

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5220: FILE: drivers/staging/mrst_nand/flash.c:3275:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Block Table Counter is %u Block %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5235: FILE: drivers/staging/mrst_nand/flash.c:3290:
+	wBytesCopied = FTL_Copy_Block_Table_To_Flash(tempBuf + 4,
+			DeviceInfo.wPageDataSize - 4, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5237: FILE: drivers/staging/mrst_nand/flash.c:3292:
+	memset(&tempBuf[wBytesCopied + 4], 0xff,
+		DeviceInfo.wPageSize - (wBytesCopied + 4));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5239: FILE: drivers/staging/mrst_nand/flash.c:3294:
+	FTL_Insert_Block_Table_Signature(&tempBuf[DeviceInfo.wPageDataSize],
+					bt_flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5243: FILE: drivers/staging/mrst_nand/flash.c:3298:
+	memcpy(g_pNextBlockTable, tempBuf,
+		DeviceInfo.wPageSize * sizeof(u8));

WARNING:SPLIT_STRING: quoted string split across lines
#5245: FILE: drivers/staging/mrst_nand/flash.c:3300:
+	nand_dbg_print(NAND_DBG_DEBUG, "Writing First Page of Block Table "
+		"Block %u Page %u\n", (unsigned int)Block, Page);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5246: FILE: drivers/staging/mrst_nand/flash.c:3301:
+	if (FAIL == GLOB_LLD_Write_Page_Main_Spare(g_pNextBlockTable,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5247: FILE: drivers/staging/mrst_nand/flash.c:3302:
+	if (FAIL == GLOB_LLD_Write_Page_Main_Spare(g_pNextBlockTable,
+		Block, Page, 1, FTLCommandCount,

WARNING:SPLIT_STRING: quoted string split across lines
#5250: FILE: drivers/staging/mrst_nand/flash.c:3305:
+		nand_dbg_print(NAND_DBG_WARN, "NAND Program fail in "
+			"%s, Line %d, Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#5251: FILE: drivers/staging/mrst_nand/flash.c:3306:
+			"%s, Line %d, Function: %s, "
+			"new Bad Block %d generated!\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5259: FILE: drivers/staging/mrst_nand/flash.c:3314:
+	if (FAIL == GLOB_LLD_Write_Page_Main_Spare(tempBuf, Block, Page, 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5261: FILE: drivers/staging/mrst_nand/flash.c:3316:
+		nand_dbg_print(NAND_DBG_WARN,
+			"NAND Program fail in %s, Line %d, Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#5262: FILE: drivers/staging/mrst_nand/flash.c:3317:
+			"NAND Program fail in %s, Line %d, Function: %s, "
+			"new Bad Block %d generated!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5277: FILE: drivers/staging/mrst_nand/flash.c:3332:
+			memcpy(g_pNextBlockTable, tempBuf,
+				(PageCount - 1) * DeviceInfo.wPageDataSize);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#5278: FILE: drivers/staging/mrst_nand/flash.c:3333:
+			if (FAIL == GLOB_LLD_Write_Page_Main(

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5278: FILE: drivers/staging/mrst_nand/flash.c:3333:
+			if (FAIL == GLOB_LLD_Write_Page_Main(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5282: FILE: drivers/staging/mrst_nand/flash.c:3337:
+				nand_dbg_print(NAND_DBG_WARN,
+					"NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#5283: FILE: drivers/staging/mrst_nand/flash.c:3338:
+					"NAND Program fail in %s, Line %d, "
+					"Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#5284: FILE: drivers/staging/mrst_nand/flash.c:3339:
+					"Function: %s, "
+					"new Bad Block %d generated!\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5294: FILE: drivers/staging/mrst_nand/flash.c:3349:
+			if (FAIL == GLOB_LLD_Write_Page_Main(tempBuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5295: FILE: drivers/staging/mrst_nand/flash.c:3350:
+			if (FAIL == GLOB_LLD_Write_Page_Main(tempBuf,
+					Block, Page + 1, PageCount - 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5297: FILE: drivers/staging/mrst_nand/flash.c:3352:
+				nand_dbg_print(NAND_DBG_WARN,
+					"NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#5298: FILE: drivers/staging/mrst_nand/flash.c:3353:
+					"NAND Program fail in %s, Line %d, "
+					"Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#5299: FILE: drivers/staging/mrst_nand/flash.c:3354:
+					"Function: %s, "
+					"new Bad Block %d generated!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5308: FILE: drivers/staging/mrst_nand/flash.c:3363:
+		wBytesCopied = FTL_Copy_Block_Table_To_Flash(tempBuf,
+				DeviceInfo.wPageDataSize, wBytesCopied);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5310: FILE: drivers/staging/mrst_nand/flash.c:3365:
+		memset(&tempBuf[wBytesCopied], 0xff,
+			DeviceInfo.wPageSize-wBytesCopied);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5310: FILE: drivers/staging/mrst_nand/flash.c:3365:
+			DeviceInfo.wPageSize-wBytesCopied);
 			                    ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#5311: FILE: drivers/staging/mrst_nand/flash.c:3366:
+		FTL_Insert_Block_Table_Signature(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5315: FILE: drivers/staging/mrst_nand/flash.c:3370:
+		memcpy(g_pNextBlockTable, tempBuf,
+				DeviceInfo.wPageSize * sizeof(u8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5317: FILE: drivers/staging/mrst_nand/flash.c:3372:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Writing the last Page of Block Table "

WARNING:SPLIT_STRING: quoted string split across lines
#5318: FILE: drivers/staging/mrst_nand/flash.c:3373:
+			"Writing the last Page of Block Table "
+			"Block %u Page %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5320: FILE: drivers/staging/mrst_nand/flash.c:3375:
+		if (FAIL == GLOB_LLD_Write_Page_Main_Spare(g_pNextBlockTable,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5321: FILE: drivers/staging/mrst_nand/flash.c:3376:
+		if (FAIL == GLOB_LLD_Write_Page_Main_Spare(g_pNextBlockTable,
+			Block, Page + bt_pages - 1, 1, FTLCommandCount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5325: FILE: drivers/staging/mrst_nand/flash.c:3380:
+			nand_dbg_print(NAND_DBG_WARN,
+				"NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#5326: FILE: drivers/staging/mrst_nand/flash.c:3381:
+				"NAND Program fail in %s, Line %d, "
+				"Function: %s, new Bad Block %d generated!\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5332: FILE: drivers/staging/mrst_nand/flash.c:3387:
+		if (FAIL == GLOB_LLD_Write_Page_Main_Spare(tempBuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5333: FILE: drivers/staging/mrst_nand/flash.c:3388:
+		if (FAIL == GLOB_LLD_Write_Page_Main_Spare(tempBuf,
+					Block, Page+bt_pages - 1, 1)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5333: FILE: drivers/staging/mrst_nand/flash.c:3388:
+					Block, Page+bt_pages - 1, 1)) {
 					           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5335: FILE: drivers/staging/mrst_nand/flash.c:3390:
+			nand_dbg_print(NAND_DBG_WARN,
+				"NAND Program fail in %s, Line %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#5336: FILE: drivers/staging/mrst_nand/flash.c:3391:
+				"NAND Program fail in %s, Line %d, "
+				"Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#5337: FILE: drivers/staging/mrst_nand/flash.c:3392:
+				"Function: %s, "
+				"new Bad Block %d generated!\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Write_Block_Table_Data', this function's name, in a string
#5344: FILE: drivers/staging/mrst_nand/flash.c:3399:
+	nand_dbg_print(NAND_DBG_DEBUG, "FTL_Write_Block_Table_Data: done\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5356: FILE: drivers/staging/mrst_nand/flash.c:3411:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Replace_Block_Table

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5360: FILE: drivers/staging/mrst_nand/flash.c:3415:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5367: FILE: drivers/staging/mrst_nand/flash.c:3422:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'BAD_BLOCK == blk'
#5371: FILE: drivers/staging/mrst_nand/flash.c:3426:
+	if ((BAD_BLOCK == blk) && (PASS == gc)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PASS == gc'
#5371: FILE: drivers/staging/mrst_nand/flash.c:3426:
+	if ((BAD_BLOCK == blk) && (PASS == gc)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5371: FILE: drivers/staging/mrst_nand/flash.c:3426:
+	if ((BAD_BLOCK == blk) && (PASS == gc)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5375: FILE: drivers/staging/mrst_nand/flash.c:3430:
+	if (BAD_BLOCK == blk)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5376: FILE: drivers/staging/mrst_nand/flash.c:3431:
+		printk(KERN_ERR "%s, %s: There is no spare block. "

WARNING:SPLIT_STRING: quoted string split across lines
#5377: FILE: drivers/staging/mrst_nand/flash.c:3432:
+		printk(KERN_ERR "%s, %s: There is no spare block. "
+			"It should never happen\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5386: FILE: drivers/staging/mrst_nand/flash.c:3441:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Replace_LWBlock

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5396: FILE: drivers/staging/mrst_nand/flash.c:3451:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <wLeastWornCounter>
#5401: FILE: drivers/staging/mrst_nand/flash.c:3456:
+	u8 wLeastWornCounter = 0xFF;

CHECK:CAMELCASE: Avoid CamelCase: <wLeastWornIndex>
#5402: FILE: drivers/staging/mrst_nand/flash.c:3457:
+	u32 wLeastWornIndex = BAD_BLOCK;

CHECK:CAMELCASE: Avoid CamelCase: <wSpareBlockNum>
#5403: FILE: drivers/staging/mrst_nand/flash.c:3458:
+	u32 wSpareBlockNum = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wDiscardBlockNum>
#5404: FILE: drivers/staging/mrst_nand/flash.c:3459:
+	u32 wDiscardBlockNum = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5407: FILE: drivers/staging/mrst_nand/flash.c:3462:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:CAMELCASE: Avoid CamelCase: <wPhysicalIndex>
#5430: FILE: drivers/staging/mrst_nand/flash.c:3485:
+			u32 wPhysicalIndex = (u32)((~BAD_BLOCK) & pbt[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5431: FILE: drivers/staging/mrst_nand/flash.c:3486:
+			u32 wPhysicalIndex = (u32)((~BAD_BLOCK) & pbt[i]);
+			if (wPhysicalIndex > DeviceInfo.wSpectraEndBlock)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5432: FILE: drivers/staging/mrst_nand/flash.c:3487:
+				printk(KERN_ERR "FTL_Replace_LWBlock: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Replace_LWBlock', this function's name, in a string
#5432: FILE: drivers/staging/mrst_nand/flash.c:3487:
+				printk(KERN_ERR "FTL_Replace_LWBlock: "

WARNING:SPLIT_STRING: quoted string split across lines
#5433: FILE: drivers/staging/mrst_nand/flash.c:3488:
+				printk(KERN_ERR "FTL_Replace_LWBlock: "
+					"This should never occur!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5447: FILE: drivers/staging/mrst_nand/flash.c:3502:
+	nand_dbg_print(NAND_DBG_WARN,
+		"FTL_Replace_LWBlock: Least Worn Counter %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Replace_LWBlock', this function's name, in a string
#5447: FILE: drivers/staging/mrst_nand/flash.c:3502:
+		"FTL_Replace_LWBlock: Least Worn Counter %d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wDiscardBlockNum >= NUM_FREE_BLOCKS_GATE'
#5450: FILE: drivers/staging/mrst_nand/flash.c:3505:
+	if ((wDiscardBlockNum >= NUM_FREE_BLOCKS_GATE) ||
+		(wSpareBlockNum <= NUM_FREE_BLOCKS_GATE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wSpareBlockNum <= NUM_FREE_BLOCKS_GATE'
#5450: FILE: drivers/staging/mrst_nand/flash.c:3505:
+	if ((wDiscardBlockNum >= NUM_FREE_BLOCKS_GATE) ||
+		(wSpareBlockNum <= NUM_FREE_BLOCKS_GATE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5451: FILE: drivers/staging/mrst_nand/flash.c:3506:
+	if ((wDiscardBlockNum >= NUM_FREE_BLOCKS_GATE) ||
+		(wSpareBlockNum <= NUM_FREE_BLOCKS_GATE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5457: FILE: drivers/staging/mrst_nand/flash.c:3512:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"FTL_Replace_LWBlock: Discarded Blocks %u Spare"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Replace_LWBlock', this function's name, in a string
#5457: FILE: drivers/staging/mrst_nand/flash.c:3512:
+		"FTL_Replace_LWBlock: Discarded Blocks %u Spare"

WARNING:SPLIT_STRING: quoted string split across lines
#5458: FILE: drivers/staging/mrst_nand/flash.c:3513:
+		"FTL_Replace_LWBlock: Discarded Blocks %u Spare"
+		" Blocks %u\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5466: FILE: drivers/staging/mrst_nand/flash.c:3521:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Replace_MWBlock

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5470: FILE: drivers/staging/mrst_nand/flash.c:3525:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <wMostWornCounter>
#5475: FILE: drivers/staging/mrst_nand/flash.c:3530:
+	u8 wMostWornCounter = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wMostWornIndex>
#5476: FILE: drivers/staging/mrst_nand/flash.c:3531:
+	u32 wMostWornIndex = BAD_BLOCK;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5485: FILE: drivers/staging/mrst_nand/flash.c:3540:
+			u32 wPhysicalIndex = (u32)((~SPARE_BLOCK) & pbt[i]);
+			if (g_pWearCounter[wPhysicalIndex -

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5504: FILE: drivers/staging/mrst_nand/flash.c:3559:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Replace_Block

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5509: FILE: drivers/staging/mrst_nand/flash.c:3564:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <GarbageCollect>
#5515: FILE: drivers/staging/mrst_nand/flash.c:3570:
+	int GarbageCollect = FAIL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5518: FILE: drivers/staging/mrst_nand/flash.c:3573:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:SPACING: space prohibited before semicolon
#5530: FILE: drivers/staging/mrst_nand/flash.c:3585:
+		p_BTableChangesDelta->ValidFields = 0x0C ;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5537: FILE: drivers/staging/mrst_nand/flash.c:3592:
+	if (PASS == GarbageCollect)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5544: FILE: drivers/staging/mrst_nand/flash.c:3599:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Is_BadBlock

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5548: FILE: drivers/staging/mrst_nand/flash.c:3603:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5554: FILE: drivers/staging/mrst_nand/flash.c:3609:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5557: FILE: drivers/staging/mrst_nand/flash.c:3612:
+	if (wBlockNum >= DeviceInfo.wSpectraStartBlock
+		&& BAD_BLOCK == (pbt[wBlockNum] & BAD_BLOCK))

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5564: FILE: drivers/staging/mrst_nand/flash.c:3619:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Flush_Cache

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5572: FILE: drivers/staging/mrst_nand/flash.c:3627:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5581: FILE: drivers/staging/mrst_nand/flash.c:3636:
+		if (SET == Cache.ItemArray[i].bChanged) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5583: FILE: drivers/staging/mrst_nand/flash.c:3638:
+			if (FTL_Cache_Write_Back(Cache.ItemArray[i].pContent,
+					Cache.ItemArray[i].dwAddress) != ERR)

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#5586: FILE: drivers/staging/mrst_nand/flash.c:3641:
+				return ERR;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5594: FILE: drivers/staging/mrst_nand/flash.c:3649:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Page_Read

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5600: FILE: drivers/staging/mrst_nand/flash.c:3655:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_FTL_Page_Read', this function's name, in a string
#5606: FILE: drivers/staging/mrst_nand/flash.c:3661:
+	nand_dbg_print(NAND_DBG_DEBUG, "GLOB_FTL_Page_Read - "

WARNING:SPLIT_STRING: quoted string split across lines
#5607: FILE: drivers/staging/mrst_nand/flash.c:3662:
+	nand_dbg_print(NAND_DBG_DEBUG, "GLOB_FTL_Page_Read - "
+		"dwPageAddr: %llu\n", dwPageAddr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5610: FILE: drivers/staging/mrst_nand/flash.c:3665:
+    g_SBDCmdIndex++;$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5615: FILE: drivers/staging/mrst_nand/flash.c:3670:
+	if (UNHIT_BLOCK == cache_blk) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_FTL_Page_Read', this function's name, in a string
#5617: FILE: drivers/staging/mrst_nand/flash.c:3672:
+			       "GLOB_FTL_Page_Read: Cache not hit\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5619: FILE: drivers/staging/mrst_nand/flash.c:3674:
+		if (ERR == FTL_Cache_Read(dwPageAddr))

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5630: FILE: drivers/staging/mrst_nand/flash.c:3685:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Page_Write

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5638: FILE: drivers/staging/mrst_nand/flash.c:3693:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_FTL_Page_Write', this function's name, in a string
#5645: FILE: drivers/staging/mrst_nand/flash.c:3700:
+	nand_dbg_print(NAND_DBG_DEBUG, "GLOB_FTL_Page_Write - "

WARNING:SPLIT_STRING: quoted string split across lines
#5646: FILE: drivers/staging/mrst_nand/flash.c:3701:
+	nand_dbg_print(NAND_DBG_DEBUG, "GLOB_FTL_Page_Write - "
+		"dwPageAddr: %llu\n", dwPageAddr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5649: FILE: drivers/staging/mrst_nand/flash.c:3704:
+    g_SBDCmdIndex++;$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5654: FILE: drivers/staging/mrst_nand/flash.c:3709:
+	if (UNHIT_BLOCK == cache_blk) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5657: FILE: drivers/staging/mrst_nand/flash.c:3712:
+			if (FAIL == FTL_Replace_Block(dwPageAddr))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5660: FILE: drivers/staging/mrst_nand/flash.c:3715:
+		if (ERR == FTL_Cache_Read(dwPageAddr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5667: FILE: drivers/staging/mrst_nand/flash.c:3722:
+		FTL_Cache_Write_Page(pData, dwPageAddr, cache_blk,
+				LLD_CMD_FLAG_ORDER_BEFORE_REST);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5677: FILE: drivers/staging/mrst_nand/flash.c:3732:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     GLOB_FTL_Block_Erase

WARNING:TYPO_SPELLING: 'ajustment' may be misspelled - perhaps 'adjustment'?
#5684: FILE: drivers/staging/mrst_nand/flash.c:3739:
+*               do the ajustment as per the relative erase count values
                        ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5685: FILE: drivers/staging/mrst_nand/flash.c:3740:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <BlkIdx>
#5689: FILE: drivers/staging/mrst_nand/flash.c:3744:
+	u32 BlkIdx;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5692: FILE: drivers/staging/mrst_nand/flash.c:3747:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5697: FILE: drivers/staging/mrst_nand/flash.c:3752:
+		printk(KERN_ERR "GLOB_FTL_Block_Erase: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'GLOB_FTL_Block_Erase', this function's name, in a string
#5697: FILE: drivers/staging/mrst_nand/flash.c:3752:
+		printk(KERN_ERR "GLOB_FTL_Block_Erase: "

WARNING:SPLIT_STRING: quoted string split across lines
#5698: FILE: drivers/staging/mrst_nand/flash.c:3753:
+		printk(KERN_ERR "GLOB_FTL_Block_Erase: "
+			"This should never occur\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5704: FILE: drivers/staging/mrst_nand/flash.c:3759:
+	status = GLOB_LLD_Erase_Block(BlkIdx,
+		FTLCommandCount, LLD_CMD_FLAG_MODE_CDMA);

WARNING:SPLIT_STRING: quoted string split across lines
#5708: FILE: drivers/staging/mrst_nand/flash.c:3763:
+			       "NAND Program fail in %s, Line %d, "
+			       "Function: %s, new Bad Block %d generated!\n",

WARNING:SPLIT_STRING: quoted string split across lines
#5715: FILE: drivers/staging/mrst_nand/flash.c:3770:
+			       "NAND Program fail in %s, Line %d, "
+			       "Function: %s, new Bad Block %d generated!\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5765: FILE: drivers/staging/mrst_nand/flash.c:3820:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5767: FILE: drivers/staging/mrst_nand/flash.c:3822:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Adjust_Relative_Erase_Count

WARNING:TYPO_SPELLING: 'substracting' may be misspelled - perhaps 'subtracting'?
#5771: FILE: drivers/staging/mrst_nand/flash.c:3826:
+*               block by substracting least worn
                          ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5773: FILE: drivers/staging/mrst_nand/flash.c:3828:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <wWearCounter>
#5777: FILE: drivers/staging/mrst_nand/flash.c:3832:
+	u8 wWearCounter;

CHECK:CAMELCASE: Avoid CamelCase: <wWearIndex>
#5778: FILE: drivers/staging/mrst_nand/flash.c:3833:
+	u32 i, wWearIndex;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5783: FILE: drivers/staging/mrst_nand/flash.c:3838:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+		__FILE__, __LINE__, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5791: FILE: drivers/staging/mrst_nand/flash.c:3846:
+			printk(KERN_ERR "FTL_Adjust_Relative_Erase_Count:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'FTL_Adjust_Relative_Erase_Count', this function's name, in a string
#5791: FILE: drivers/staging/mrst_nand/flash.c:3846:
+			printk(KERN_ERR "FTL_Adjust_Relative_Erase_Count:"

WARNING:SPLIT_STRING: quoted string split across lines
#5792: FILE: drivers/staging/mrst_nand/flash.c:3847:
+			printk(KERN_ERR "FTL_Adjust_Relative_Erase_Count:"
+					"This should never occur\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5801: FILE: drivers/staging/mrst_nand/flash.c:3856:
+		nand_dbg_print(NAND_DBG_WARN,
+			"Adjusting Wear Levelling Counters: Special Case\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5849: FILE: drivers/staging/mrst_nand/flash.c:3904:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Write_IN_Progress_Block_Table_Page

CHECK:CAMELCASE: Avoid CamelCase: <dwIPFPageAddr>
#5859: FILE: drivers/staging/mrst_nand/flash.c:3914:
+	u16 dwIPFPageAddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5867: FILE: drivers/staging/mrst_nand/flash.c:3922:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#5874: FILE: drivers/staging/mrst_nand/flash.c:3929:
+	nand_dbg_print(NAND_DBG_DEBUG, "Writing IPF at "
+			       "Block %d Page %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5879: FILE: drivers/staging/mrst_nand/flash.c:3934:
+	wResult = GLOB_LLD_Write_Page_Main_Spare(g_pIPF,
+		g_wBlockTableIndex, dwIPFPageAddr, 1, FTLCommandCount,

WARNING:SPLIT_STRING: quoted string split across lines
#5885: FILE: drivers/staging/mrst_nand/flash.c:3940:
+			       "NAND Program fail in %s, Line %d, "
+			       "Function: %s, new Bad Block %d generated!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5898: FILE: drivers/staging/mrst_nand/flash.c:3953:
+	wResult = GLOB_LLD_Write_Page_Main_Spare(g_pIPF,
+		g_wBlockTableIndex, dwIPFPageAddr, 1);

WARNING:SPLIT_STRING: quoted string split across lines
#5902: FILE: drivers/staging/mrst_nand/flash.c:3957:
+			       "NAND Program fail in %s, Line %d, "
+			       "Function: %s, new Bad Block %d generated!\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5908: FILE: drivers/staging/mrst_nand/flash.c:3963:
+		if (BAD_BLOCK == wTempBlockTableIndex)

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#5909: FILE: drivers/staging/mrst_nand/flash.c:3964:
+			return ERR;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5921: FILE: drivers/staging/mrst_nand/flash.c:3976:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     FTL_Read_Disturbance

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5926: FILE: drivers/staging/mrst_nand/flash.c:3981:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:SPACING: No space is necessary after a cast
#5930: FILE: drivers/staging/mrst_nand/flash.c:3985:
+	u32 *pbt = (u32 *) g_pBlockTable;

CHECK:CAMELCASE: Avoid CamelCase: <dwOldBlockAddr>
#5931: FILE: drivers/staging/mrst_nand/flash.c:3986:
+	u32 dwOldBlockAddr = blk_addr;

CHECK:CAMELCASE: Avoid CamelCase: <wLeastReadCounter>
#5934: FILE: drivers/staging/mrst_nand/flash.c:3989:
+	u32 wLeastReadCounter = 0xFFFF;

CHECK:CAMELCASE: Avoid CamelCase: <wLeastReadIndex>
#5935: FILE: drivers/staging/mrst_nand/flash.c:3990:
+	u32 wLeastReadIndex = BAD_BLOCK;

CHECK:CAMELCASE: Avoid CamelCase: <wTempNode>
#5937: FILE: drivers/staging/mrst_nand/flash.c:3992:
+	u32 wTempNode;

CHECK:CAMELCASE: Avoid CamelCase: <wReplacedNode>
#5938: FILE: drivers/staging/mrst_nand/flash.c:3993:
+	u32 wReplacedNode;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5942: FILE: drivers/staging/mrst_nand/flash.c:3997:
+	nand_dbg_print(NAND_DBG_TRACE, "%s, Line %d, Function: %s\n",
+			       __FILE__, __LINE__, __func__);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5982: FILE: drivers/staging/mrst_nand/flash.c:4037:
+			if (PASS == wResult)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6015: FILE: drivers/staging/mrst_nand/flash.c:4070:
+			wResult = GLOB_LLD_Read_Page_Main(g_pTempBuf,
+				dwOldBlockAddr, 0, DeviceInfo.wPagesPerBlock,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6023: FILE: drivers/staging/mrst_nand/flash.c:4078:
+				if (FAIL == GLOB_LLD_Write_Page_Main(

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#6023: FILE: drivers/staging/mrst_nand/flash.c:4078:
+				if (FAIL == GLOB_LLD_Write_Page_Main(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6028: FILE: drivers/staging/mrst_nand/flash.c:4083:
+					nand_dbg_print(NAND_DBG_WARN,
+						"NAND Program fail in "

WARNING:SPLIT_STRING: quoted string split across lines
#6029: FILE: drivers/staging/mrst_nand/flash.c:4084:
+						"NAND Program fail in "
+						"%s, Line %d, Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#6030: FILE: drivers/staging/mrst_nand/flash.c:4085:
+						"%s, Line %d, Function: %s, "
+						"new Bad Block %d "

WARNING:SPLIT_STRING: quoted string split across lines
#6031: FILE: drivers/staging/mrst_nand/flash.c:4086:
+						"new Bad Block %d "
+						"generated!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6041: FILE: drivers/staging/mrst_nand/flash.c:4096:
+			wResult = GLOB_LLD_Read_Page_Main(g_pTempBuf,
+				dwOldBlockAddr, 0, DeviceInfo.wPagesPerBlock);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6052: FILE: drivers/staging/mrst_nand/flash.c:4107:
+				/* This is a bug. At this time, pbt[wBlockNum]
+				is still the physical address of

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6058: FILE: drivers/staging/mrst_nand/flash.c:4113:
+				wResult = GLOB_LLD_Write_Page_Main(g_pTempBuf,
+					wReplacedNode, 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6062: FILE: drivers/staging/mrst_nand/flash.c:4117:
+					nand_dbg_print(NAND_DBG_WARN,
+						"NAND Program fail in "

WARNING:SPLIT_STRING: quoted string split across lines
#6063: FILE: drivers/staging/mrst_nand/flash.c:4118:
+						"NAND Program fail in "
+						"%s, Line %d, Function: %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#6064: FILE: drivers/staging/mrst_nand/flash.c:4119:
+						"%s, Line %d, Function: %s, "
+						"new Bad Block %d "

WARNING:SPLIT_STRING: quoted string split across lines
#6065: FILE: drivers/staging/mrst_nand/flash.c:4120:
+						"new Bad Block %d "
+						"generated!\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wResult == PASS'
#6075: FILE: drivers/staging/mrst_nand/flash.c:4130:
+			if ((wResult == PASS) && (g_cBlockTableStatus !=
+				IN_PROGRESS_BLOCK_TABLE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'g_cBlockTableStatus !=
 				IN_PROGRESS_BLOCK_TABLE'
#6075: FILE: drivers/staging/mrst_nand/flash.c:4130:
+			if ((wResult == PASS) && (g_cBlockTableStatus !=
+				IN_PROGRESS_BLOCK_TABLE)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6102: FILE: drivers/staging/mrst_nand/flash.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6116: FILE: drivers/staging/mrst_nand/flash.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6117: FILE: drivers/staging/mrst_nand/flash.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6138: FILE: drivers/staging/mrst_nand/flash.h:37:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#6148: FILE: drivers/staging/mrst_nand/flash.h:47:
+#define BTBLOCK_INVAL  (u32)(0xFFFFFFFF)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6150: FILE: drivers/staging/mrst_nand/flash.h:49:
+#define ALIGN_DWORD_FWD(ptr)  (ptr = (u8 *)((unsigned long)(ptr+3) & ~0x3))
                                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#6150: FILE: drivers/staging/mrst_nand/flash.h:49:
+#define ALIGN_DWORD_FWD(ptr)  (ptr = (u8 *)((unsigned long)(ptr+3) & ~0x3))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#6151: FILE: drivers/staging/mrst_nand/flash.h:50:
+#define ALIGN_DWORD_BWD(ptr)  (ptr = (u8 *)((unsigned long)ptr & ~0x3))

CHECK:CAMELCASE: Avoid CamelCase: <wDeviceMaker>
#6154: FILE: drivers/staging/mrst_nand/flash.h:53:
+	u16 wDeviceMaker;

CHECK:CAMELCASE: Avoid CamelCase: <wDeviceType>
#6155: FILE: drivers/staging/mrst_nand/flash.h:54:
+	u32 wDeviceType;

CHECK:CAMELCASE: Avoid CamelCase: <wPageSpareSize>
#6162: FILE: drivers/staging/mrst_nand/flash.h:61:
+	u16 wPageSpareSize;

CHECK:CAMELCASE: Avoid CamelCase: <wNumPageSpareFlag>
#6163: FILE: drivers/staging/mrst_nand/flash.h:62:
+	u16 wNumPageSpareFlag;

CHECK:CAMELCASE: Avoid CamelCase: <bPlaneNum>
#6168: FILE: drivers/staging/mrst_nand/flash.h:67:
+	u8 bPlaneNum;

CHECK:CAMELCASE: Avoid CamelCase: <wDeviceMainAreaSize>
#6169: FILE: drivers/staging/mrst_nand/flash.h:68:
+	u16 wDeviceMainAreaSize;

CHECK:CAMELCASE: Avoid CamelCase: <wDeviceSpareAreaSize>
#6170: FILE: drivers/staging/mrst_nand/flash.h:69:
+	u16 wDeviceSpareAreaSize;

CHECK:CAMELCASE: Avoid CamelCase: <wDevicesConnected>
#6171: FILE: drivers/staging/mrst_nand/flash.h:70:
+	u16 wDevicesConnected;

CHECK:CAMELCASE: Avoid CamelCase: <wDeviceWidth>
#6172: FILE: drivers/staging/mrst_nand/flash.h:71:
+	u16 wDeviceWidth;

CHECK:CAMELCASE: Avoid CamelCase: <wHWRevision>
#6173: FILE: drivers/staging/mrst_nand/flash.h:72:
+	u16 wHWRevision;

CHECK:CAMELCASE: Avoid CamelCase: <wHWFeatures>
#6174: FILE: drivers/staging/mrst_nand/flash.h:73:
+	u16 wHWFeatures;

CHECK:CAMELCASE: Avoid CamelCase: <wONFIDevFeatures>
#6176: FILE: drivers/staging/mrst_nand/flash.h:75:
+	u16 wONFIDevFeatures;

CHECK:CAMELCASE: Avoid CamelCase: <wONFIOptCommands>
#6177: FILE: drivers/staging/mrst_nand/flash.h:76:
+	u16 wONFIOptCommands;

CHECK:CAMELCASE: Avoid CamelCase: <wONFITimingMode>
#6178: FILE: drivers/staging/mrst_nand/flash.h:77:
+	u16 wONFITimingMode;

CHECK:CAMELCASE: Avoid CamelCase: <wONFIPgmCacheTimingMode>
#6179: FILE: drivers/staging/mrst_nand/flash.h:78:
+	u16 wONFIPgmCacheTimingMode;

CHECK:CAMELCASE: Avoid CamelCase: <wSpareSkipBytes>
#6182: FILE: drivers/staging/mrst_nand/flash.h:81:
+	u16 wSpareSkipBytes;

CHECK:CAMELCASE: Avoid CamelCase: <nBitsInPageNumber>
#6184: FILE: drivers/staging/mrst_nand/flash.h:83:
+	u8 nBitsInPageNumber;

WARNING:TYPO_SPELLING: 'struture' may be misspelled - perhaps 'structure'?
#6208: FILE: drivers/staging/mrst_nand/flash.h:107:
+/* struture used for IndentfyDevice function */
    ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <IdentfyDeviceData>
#6223: FILE: drivers/staging/mrst_nand/flash.h:122:
+int GLOB_FTL_IdentifyDevice(struct spectra_indentfy_dev_tag *IdentfyDeviceData);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#6226: FILE: drivers/staging/mrst_nand/flash.h:125:
+int GLOB_FTL_Event_Status(int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:CAMELCASE: Avoid CamelCase: <dwBlockAddr>
#6233: FILE: drivers/staging/mrst_nand/flash.h:132:
+int FTL_Read_Disturbance(u32 dwBlockAddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6252: FILE: drivers/staging/mrst_nand/flash.h:151:
+void debug_boundary_lineno_error(int chnl, int limit, int no, int lineno,
+				char *filename);

WARNING:SPACING: space prohibited before semicolon
#6256: FILE: drivers/staging/mrst_nand/flash.h:155:
+#define debug_boundary_error(chnl, limit, no) ;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#6256: FILE: drivers/staging/mrst_nand/flash.h:155:
+#define debug_boundary_error(chnl, limit, no) ;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#6256: FILE: drivers/staging/mrst_nand/flash.h:155:
+#define debug_boundary_error(chnl, limit, no) ;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6266: FILE: drivers/staging/mrst_nand/lld.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6280: FILE: drivers/staging/mrst_nand/lld.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6281: FILE: drivers/staging/mrst_nand/lld.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:CAMELCASE: Avoid CamelCase: <emu_Flash_Reset>
#6308: FILE: drivers/staging/mrst_nand/lld.c:43:
+	return emu_Flash_Reset();

CHECK:CAMELCASE: Avoid CamelCase: <emu_Read_Device_ID>
#6313: FILE: drivers/staging/mrst_nand/lld.c:48:
+	return emu_Read_Device_ID();

CHECK:CAMELCASE: Avoid CamelCase: <emu_Flash_Release>
#6318: FILE: drivers/staging/mrst_nand/lld.c:53:
+	return emu_Flash_Release();

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#6322: FILE: drivers/staging/mrst_nand/lld.c:57:
+u16 GLOB_LLD_Flash_Init(u16 Flags)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Flash_Init>
#6325: FILE: drivers/staging/mrst_nand/lld.c:60:
+		return emu_Flash_Init();

CHECK:CAMELCASE: Avoid CamelCase: <emu_CDMA_Flash_Init>
#6327: FILE: drivers/staging/mrst_nand/lld.c:62:
+		return emu_CDMA_Flash_Init();

CHECK:CAMELCASE: Avoid CamelCase: <TagCount>
#6330: FILE: drivers/staging/mrst_nand/lld.c:65:
+u16 GLOB_LLD_Erase_Block(u32 block, u8 TagCount, u16 Flags)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Erase_Block>
#6333: FILE: drivers/staging/mrst_nand/lld.c:68:
+		return emu_Erase_Block(block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6340: FILE: drivers/staging/mrst_nand/lld.c:75:
+u16 GLOB_LLD_Write_Page_Main(u8 *data, u32 block, u16 page,
+				u16 count, u8 TagCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6347: FILE: drivers/staging/mrst_nand/lld.c:82:
+u16 GLOB_LLD_Read_Page_Main(u8 *data, u32 block, u16 page,
+			       u16 count, u8 TagCount, u16 Flags)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Read_Page_Main>
#6350: FILE: drivers/staging/mrst_nand/lld.c:85:
+		return emu_Read_Page_Main(data, block, page, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6357: FILE: drivers/staging/mrst_nand/lld.c:92:
+u16 GLOB_LLD_MemCopy_CMD(u8 TagCount, u8 *dest, u8 *src,
+			u16 ByteCount, u16 flag)

CHECK:CAMELCASE: Avoid CamelCase: <ByteCount>
#6357: FILE: drivers/staging/mrst_nand/lld.c:92:
+			u16 ByteCount, u16 flag)

CHECK:CAMELCASE: Avoid CamelCase: <emu_CDMA_Execute_CMDs>
#6364: FILE: drivers/staging/mrst_nand/lld.c:99:
+	return emu_CDMA_Execute_CMDs(count);

CHECK:CAMELCASE: Avoid CamelCase: <emu_CDMA_Event_Status>
#6369: FILE: drivers/staging/mrst_nand/lld.c:104:
+	return emu_CDMA_Event_Status();

CHECK:CAMELCASE: Avoid CamelCase: <emu_Enable_Disable_Interrupts>
#6375: FILE: drivers/staging/mrst_nand/lld.c:110:
+	emu_Enable_Disable_Interrupts(INT_ENABLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6379: FILE: drivers/staging/mrst_nand/lld.c:114:
+u16 GLOB_LLD_Write_Page_Main_Spare(u8 *write_data, u32 block,
+				      u16 Page, u16 PageCount,

CHECK:CAMELCASE: Avoid CamelCase: <emu_Write_Page_Main_Spare>
#6383: FILE: drivers/staging/mrst_nand/lld.c:118:
+		return emu_Write_Page_Main_Spare(write_data, block, Page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6391: FILE: drivers/staging/mrst_nand/lld.c:126:
+u16 GLOB_LLD_Read_Page_Main_Spare(u8 *read_data, u32 Block,
+				     u16 Page, u16 PageCount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6400: FILE: drivers/staging/mrst_nand/lld.c:135:
+u16 GLOB_LLD_Write_Page_Spare(u8 *write_data, u32 Block, u16 Page,
+				 u16 PageCount)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Write_Page_Spare>
#6402: FILE: drivers/staging/mrst_nand/lld.c:137:
+	return emu_Write_Page_Spare(write_data, Block, Page, PageCount);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6406: FILE: drivers/staging/mrst_nand/lld.c:141:
+u16 GLOB_LLD_Read_Page_Spare(u8 *read_data, u32 Block, u16 Page,
+				u16 PageCount)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Read_Page_Spare>
#6408: FILE: drivers/staging/mrst_nand/lld.c:143:
+	return emu_Read_Page_Spare(read_data, Block, Page, PageCount);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6413: FILE: drivers/staging/mrst_nand/lld.c:148:
+    return CDMA_Memory_Pool_Size();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6418: FILE: drivers/staging/mrst_nand/lld.c:153:
+    return CDMA_Mem_Config(pMem);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6434: FILE: drivers/staging/mrst_nand/lld.c:169:
+u16 GLOB_LLD_Write_Page_Main(u8 *write_data, u32 block, u16 Page,
+				u16 PageCount)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Write_Page_Main>
#6436: FILE: drivers/staging/mrst_nand/lld.c:171:
+	return emu_Write_Page_Main(write_data, block, Page, PageCount);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6440: FILE: drivers/staging/mrst_nand/lld.c:175:
+u16 GLOB_LLD_Read_Page_Main(u8 *read_data, u32 block, u16 Page,
+			       u16 PageCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6446: FILE: drivers/staging/mrst_nand/lld.c:181:
+u16 GLOB_LLD_Read_Page_Main_Polling(u8 *read_data,
+			u32 block, u16 page, u16 page_count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6450: FILE: drivers/staging/mrst_nand/lld.c:185:
+}
+#ifndef ELDORA

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6457: FILE: drivers/staging/mrst_nand/lld.c:192:
+u16 GLOB_LLD_Write_Page_Main_Spare(u8 *write_data, u32 block,
+				      u16 Page, u16 PageCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6463: FILE: drivers/staging/mrst_nand/lld.c:198:
+u16 GLOB_LLD_Read_Page_Main_Spare(u8 *read_data, u32 block,
+				     u16 Page, u16 PageCount)

CHECK:CAMELCASE: Avoid CamelCase: <emu_Read_Page_Main_Spare>
#6465: FILE: drivers/staging/mrst_nand/lld.c:200:
+	return emu_Read_Page_Main_Spare(read_data, block, Page, PageCount);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6469: FILE: drivers/staging/mrst_nand/lld.c:204:
+u16 GLOB_LLD_Write_Page_Spare(u8 *write_data, u32 block, u16 Page,
+				 u16 PageCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6475: FILE: drivers/staging/mrst_nand/lld.c:210:
+u16 GLOB_LLD_Read_Page_Spare(u8 *read_data, u32 block, u16 Page,
+				u16 PageCount)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6482: FILE: drivers/staging/mrst_nand/lld.c:217:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6487: FILE: drivers/staging/mrst_nand/lld.c:222:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6496: FILE: drivers/staging/mrst_nand/lld.c:231:
+    return  emu_Get_Bad_Block(block);$

CHECK:CAMELCASE: Avoid CamelCase: <emu_Get_Bad_Block>
#6496: FILE: drivers/staging/mrst_nand/lld.c:231:
+    return  emu_Get_Bad_Block(block);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6503: FILE: drivers/staging/mrst_nand/lld.c:238:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6558: FILE: drivers/staging/mrst_nand/lld.c:293:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6560: FILE: drivers/staging/mrst_nand/lld.c:295:
+u16 GLOB_LLD_Write_Page_Main(u8 *write_data, u32 block, u16 Page,
+				u16 PageCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6566: FILE: drivers/staging/mrst_nand/lld.c:301:
+u16 GLOB_LLD_Read_Page_Main(u8 *read_data, u32 block, u16 page,
+			       u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6572: FILE: drivers/staging/mrst_nand/lld.c:307:
+u16 GLOB_LLD_Read_Page_Main_Polling(u8 *read_data,
+			u32 block, u16 page, u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6580: FILE: drivers/staging/mrst_nand/lld.c:315:
+u16 GLOB_LLD_Write_Page_Main_Spare(u8 *write_data, u32 block,
+				      u16 Page, u16 PageCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6586: FILE: drivers/staging/mrst_nand/lld.c:321:
+u16 GLOB_LLD_Write_Page_Spare(u8 *write_data, u32 block, u16 Page,
+				 u16 PageCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6592: FILE: drivers/staging/mrst_nand/lld.c:327:
+u16 GLOB_LLD_Read_Page_Main_Spare(u8 *read_data, u32 block,
+				     u16 page, u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6598: FILE: drivers/staging/mrst_nand/lld.c:333:
+u16 GLOB_LLD_Read_Page_Spare(u8 *read_data, u32 block, u16 Page,
+				u16 PageCount)

CHECK:SPACING: No space is necessary after a cast
#6652: FILE: drivers/staging/mrst_nand/lld.c:387:
+u16 GLOB_LLD_Flash_Release(void)	/* not used; NOP */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6676: FILE: drivers/staging/mrst_nand/lld.c:411:
+u16 GLOB_LLD_MemCopy_CMD(u8 TagCount, u8 *dest, u8 *src,
+			u16 ByteCount, u16 flag)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6696: FILE: drivers/staging/mrst_nand/lld.c:431:
+u16 GLOB_LLD_Write_Page_Main(u8 *data, u32 block, u16 page,
+				u16 count, u8 TagCount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6703: FILE: drivers/staging/mrst_nand/lld.c:438:
+u16 GLOB_LLD_Read_Page_Main(u8 *data, u32 block, u16 page,
+			       u16 count, u8 TagCount, u16 Flags)

CHECK:BRACES: braces {} should be used on all arms of this statement
#6705: FILE: drivers/staging/mrst_nand/lld.c:440:
+	if (Flags & LLD_CMD_FLAG_MODE_POLL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#6707: FILE: drivers/staging/mrst_nand/lld.c:442:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6713: FILE: drivers/staging/mrst_nand/lld.c:448:
+u16 GLOB_LLD_Write_Page_Spare(u8 *data, u32 block, u16 page,
+				 u16 count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6719: FILE: drivers/staging/mrst_nand/lld.c:454:
+u16 GLOB_LLD_Read_Page_Spare(u8 *data, u32 block, u16 page,
+				u16 count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6725: FILE: drivers/staging/mrst_nand/lld.c:460:
+u16 GLOB_LLD_Write_Page_Main_Spare(u8 *data, u32 block, u16 page,
+				      u16 count, u8 TagCount, u16 Flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6732: FILE: drivers/staging/mrst_nand/lld.c:467:
+u16 GLOB_LLD_Read_Page_Main_Spare(u8 *data, u32 block, u16 page,
+				     u16 count, u8 TagCount)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6740: FILE: drivers/staging/mrst_nand/lld.c:475:
+    return  NAND_Get_Bad_Block(block);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6745: FILE: drivers/staging/mrst_nand/lld.c:480:
+    return CDMA_Memory_Pool_Size();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6750: FILE: drivers/staging/mrst_nand/lld.c:485:
+    return CDMA_Mem_Config(pMem);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6764: FILE: drivers/staging/mrst_nand/lld.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6778: FILE: drivers/staging/mrst_nand/lld.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6779: FILE: drivers/staging/mrst_nand/lld.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6783: FILE: drivers/staging/mrst_nand/lld.h:20:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6808: FILE: drivers/staging/mrst_nand/lld.h:45:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6814: FILE: drivers/staging/mrst_nand/lld.h:51:
+ * ^I^I^I  MemCopy$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6815: FILE: drivers/staging/mrst_nand/lld.h:52:
+ * ^I^I^I  Read_Page_Main_Spare$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6821: FILE: drivers/staging/mrst_nand/lld.h:58:
+ extern void GLOB_LLD_ECC_Control(int enable);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6821: FILE: drivers/staging/mrst_nand/lld.h:58:
+ extern void GLOB_LLD_ECC_Control(int enable);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6822: FILE: drivers/staging/mrst_nand/lld.h:59:
+extern u16   GLOB_LLD_Flash_Release(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6823: FILE: drivers/staging/mrst_nand/lld.h:60:
+extern u16   GLOB_LLD_Flash_Reset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6824: FILE: drivers/staging/mrst_nand/lld.h:61:
+extern u16   GLOB_LLD_Read_Device_ID(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6826: FILE: drivers/staging/mrst_nand/lld.h:63:
+extern u16   GLOB_LLD_Flash_Init(u16 Flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6827: FILE: drivers/staging/mrst_nand/lld.h:64:
+extern u16   GLOB_LLD_Execute_CMDs(u16 count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6828: FILE: drivers/staging/mrst_nand/lld.h:65:
+extern u16   GLOB_LLD_Erase_Block(u32 block, u8 TagCount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6829: FILE: drivers/staging/mrst_nand/lld.h:66:
+extern u16   GLOB_LLD_Erase_Block(u32 block, u8 TagCount,
+					u16 Flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6830: FILE: drivers/staging/mrst_nand/lld.h:67:
+extern u16   GLOB_LLD_Write_Page_Main(u8 *write_data, u32 block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6831: FILE: drivers/staging/mrst_nand/lld.h:68:
+extern u16   GLOB_LLD_Write_Page_Main(u8 *write_data, u32 block,
+					u16 Page, u16

WARNING:LINE_SPACING: Missing a blank line after declarations
#6832: FILE: drivers/staging/mrst_nand/lld.h:69:
+					u16 Page, u16
+					PageCount, u8 CommandCount);

CHECK:CAMELCASE: Avoid CamelCase: <CommandCount>
#6832: FILE: drivers/staging/mrst_nand/lld.h:69:
+					PageCount, u8 CommandCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6833: FILE: drivers/staging/mrst_nand/lld.h:70:
+extern u16   GLOB_LLD_Read_Page_Main(u8 *read_data, u32 block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6834: FILE: drivers/staging/mrst_nand/lld.h:71:
+extern u16   GLOB_LLD_Read_Page_Main(u8 *read_data, u32 block,
+					u16 Page, u16

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6836: FILE: drivers/staging/mrst_nand/lld.h:73:
+extern u16  GLOB_LLD_MemCopy_CMD(u8 tag, u8 *dest, u8 *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6837: FILE: drivers/staging/mrst_nand/lld.h:74:
+extern u16  GLOB_LLD_MemCopy_CMD(u8 tag, u8 *dest, u8 *src,
+				u16 ByteCount, u16 flag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6839: FILE: drivers/staging/mrst_nand/lld.h:76:
+extern u16   GLOB_LLD_Flash_Init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6840: FILE: drivers/staging/mrst_nand/lld.h:77:
+extern u16   GLOB_LLD_Erase_Block(u32 block_add);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6841: FILE: drivers/staging/mrst_nand/lld.h:78:
+extern u16   GLOB_LLD_Write_Page_Main(u8 *write_data, u32 block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6842: FILE: drivers/staging/mrst_nand/lld.h:79:
+extern u16   GLOB_LLD_Write_Page_Main(u8 *write_data, u32 block,
+					u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6843: FILE: drivers/staging/mrst_nand/lld.h:80:
+extern u16   GLOB_LLD_Read_Page_Main(u8 *read_data, u32 block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6844: FILE: drivers/staging/mrst_nand/lld.h:81:
+extern u16   GLOB_LLD_Read_Page_Main(u8 *read_data, u32 block,
+					u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6845: FILE: drivers/staging/mrst_nand/lld.h:82:
+extern u16 GLOB_LLD_Read_Page_Main_Polling(u8 *read_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6846: FILE: drivers/staging/mrst_nand/lld.h:83:
+extern u16 GLOB_LLD_Read_Page_Main_Polling(u8 *read_data,
+			u32 block, u16 page, u16 page_count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6849: FILE: drivers/staging/mrst_nand/lld.h:86:
+extern int GLOB_LLD_is_cdma_int(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6850: FILE: drivers/staging/mrst_nand/lld.h:87:
+extern u16   GLOB_LLD_Event_Status(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6851: FILE: drivers/staging/mrst_nand/lld.h:88:
+extern void     GLOB_LLD_Enable_Disable_Interrupts(u16 INT_ENABLE);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6853: FILE: drivers/staging/mrst_nand/lld.h:90:
+extern u16   GLOB_LLD_UnlockArrayAll(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6854: FILE: drivers/staging/mrst_nand/lld.h:91:
+extern u16   GLOB_LLD_Read_Page_Spare(u8 *read_data, u32 block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6855: FILE: drivers/staging/mrst_nand/lld.h:92:
+extern u16   GLOB_LLD_Read_Page_Spare(u8 *read_data, u32 block,
+					u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6856: FILE: drivers/staging/mrst_nand/lld.h:93:
+extern u16   GLOB_LLD_Write_Page_Spare(u8 *write_data, u32 block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6857: FILE: drivers/staging/mrst_nand/lld.h:94:
+extern u16   GLOB_LLD_Write_Page_Spare(u8 *write_data, u32 block,
+					u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6858: FILE: drivers/staging/mrst_nand/lld.h:95:
+extern u16   GLOB_LLD_Get_Bad_Block(u32 block);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6860: FILE: drivers/staging/mrst_nand/lld.h:97:
+extern u16   GLOB_LLD_Write_Page_Main_Spare(u8 *write_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6861: FILE: drivers/staging/mrst_nand/lld.h:98:
+extern u16   GLOB_LLD_Write_Page_Main_Spare(u8 *write_data,
+					u32 block, u16 Page, u16

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6863: FILE: drivers/staging/mrst_nand/lld.h:100:
+extern u16   GLOB_LLD_Read_Page_Main_Spare(u8 *read_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6864: FILE: drivers/staging/mrst_nand/lld.h:101:
+extern u16   GLOB_LLD_Read_Page_Main_Spare(u8 *read_data,
+					u32 block, u16 Page, u16

WARNING:LINE_SPACING: Missing a blank line after declarations
#6865: FILE: drivers/staging/mrst_nand/lld.h:102:
+					u32 block, u16 Page, u16
+					PageCount, u8 CommandCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6867: FILE: drivers/staging/mrst_nand/lld.h:104:
+extern u16   GLOB_LLD_Write_Page_Main_Spare(u8 *write_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6868: FILE: drivers/staging/mrst_nand/lld.h:105:
+extern u16   GLOB_LLD_Write_Page_Main_Spare(u8 *write_data,
+			u32 block, u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6869: FILE: drivers/staging/mrst_nand/lld.h:106:
+extern u16   GLOB_LLD_Read_Page_Main_Spare(u8 *read_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6870: FILE: drivers/staging/mrst_nand/lld.h:107:
+extern u16   GLOB_LLD_Read_Page_Main_Spare(u8 *read_data,
+					u32 block, u16 Page, u16

WARNING:LINE_SPACING: Missing a blank line after declarations
#6871: FILE: drivers/staging/mrst_nand/lld.h:108:
+					u32 block, u16 Page, u16
+					PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6874: FILE: drivers/staging/mrst_nand/lld.h:111:
+extern u32  GLOB_LLD_Memory_Pool_Size(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6875: FILE: drivers/staging/mrst_nand/lld.h:112:
+extern int GLOB_LLD_Mem_Config(u8 *pMem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6883: FILE: drivers/staging/mrst_nand/lld.h:120:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6886: FILE: drivers/staging/mrst_nand/lld.h:123:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6893: FILE: drivers/staging/mrst_nand/lld_cdma.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6907: FILE: drivers/staging/mrst_nand/lld_cdma.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6908: FILE: drivers/staging/mrst_nand/lld_cdma.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6912: FILE: drivers/staging/mrst_nand/lld_cdma.c:20:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <ResetSyncModule>
#6929: FILE: drivers/staging/mrst_nand/lld_cdma.c:37:
+static void ResetSyncModule(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6940: FILE: drivers/staging/mrst_nand/lld_cdma.c:48:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#6942: FILE: drivers/staging/mrst_nand/lld_cdma.c:50:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_Data_Cmd

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6954: FILE: drivers/staging/mrst_nand/lld_cdma.c:62:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6956: FILE: drivers/staging/mrst_nand/lld_cdma.c:64:
+u16 CDMA_Data_CMD(u8 tag, u8 CMD, u8 *data,
+	u32 block, u16 page, u16 count, u16 flags)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6961: FILE: drivers/staging/mrst_nand/lld_cdma.c:69:
+	debug_boundary_error(count, DeviceInfo.wPagesPerBlock+1, tag);
 	                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <PageCount>
#6970: FILE: drivers/staging/mrst_nand/lld_cdma.c:78:
+	PendingCMD[tag].PageCount = count;

CHECK:CAMELCASE: Avoid CamelCase: <DataDestAddr>
#6971: FILE: drivers/staging/mrst_nand/lld_cdma.c:79:
+	PendingCMD[tag].DataDestAddr = 0;

CHECK:CAMELCASE: Avoid CamelCase: <DataSrcAddr>
#6972: FILE: drivers/staging/mrst_nand/lld_cdma.c:80:
+	PendingCMD[tag].DataSrcAddr = 0;

CHECK:CAMELCASE: Avoid CamelCase: <MemCopyByteCnt>
#6973: FILE: drivers/staging/mrst_nand/lld_cdma.c:81:
+	PendingCMD[tag].MemCopyByteCnt = 0;

CHECK:CAMELCASE: Avoid CamelCase: <ChanSync>
#6978: FILE: drivers/staging/mrst_nand/lld_cdma.c:86:
+		PendingCMD[tag].ChanSync[i] = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#6998: FILE: drivers/staging/mrst_nand/lld_cdma.c:106:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_MemCopy_CMD

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7008: FILE: drivers/staging/mrst_nand/lld_cdma.c:116:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7010: FILE: drivers/staging/mrst_nand/lld_cdma.c:118:
+u16 CDMA_MemCopy_CMD(u8 tag, u8 *dest, u8 *src,
+			u16 ByteCount, u16 flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7015: FILE: drivers/staging/mrst_nand/lld_cdma.c:123:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"CDMA MemC Command called tag=%u\n", tag);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7040: FILE: drivers/staging/mrst_nand/lld_cdma.c:148:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7044: FILE: drivers/staging/mrst_nand/lld_cdma.c:152:
+static void pcmd_per_ch(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+		u16 tag_count, int *chIndexes)

CHECK:CAMELCASE: Avoid CamelCase: <chIndexes>
#7044: FILE: drivers/staging/mrst_nand/lld_cdma.c:152:
+		u16 tag_count, int *chIndexes)

CHECK:CAMELCASE: Avoid CamelCase: <totalUsedBanks>
#7053: FILE: drivers/staging/mrst_nand/lld_cdma.c:161:
+			(DeviceInfo.wTotalBlocks / totalUsedBanks);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7088: FILE: drivers/staging/mrst_nand/lld_cdma.c:196:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     PrintPendingCMDs

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7094: FILE: drivers/staging/mrst_nand/lld_cdma.c:202:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <PrintPendingCMDs>
#7095: FILE: drivers/staging/mrst_nand/lld_cdma.c:203:
+void PrintPendingCMDs(u16 tag_count)

WARNING:SPLIT_STRING: quoted string split across lines
#7102: FILE: drivers/staging/mrst_nand/lld_cdma.c:210:
+	nand_dbg_print(NAND_DBG_DEBUG, "-------------------------------"
+		"------------------------------------------|\n");

WARNING:SPLIT_STRING: quoted string split across lines
#7104: FILE: drivers/staging/mrst_nand/lld_cdma.c:212:
+	nand_dbg_print(NAND_DBG_DEBUG, "           | Cache  |     Flash      "
+		"|        MemCopy       |        |    |\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7106: FILE: drivers/staging/mrst_nand/lld_cdma.c:214:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"Tag Command DataAddr Block Page PgCnt DestAddr SrcAddr  "

WARNING:SPLIT_STRING: quoted string split across lines
#7107: FILE: drivers/staging/mrst_nand/lld_cdma.c:215:
+		"Tag Command DataAddr Block Page PgCnt DestAddr SrcAddr  "
+		"BCnt ChanSync Stat|\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7115: FILE: drivers/staging/mrst_nand/lld_cdma.c:223:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7120: FILE: drivers/staging/mrst_nand/lld_cdma.c:228:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7125: FILE: drivers/staging/mrst_nand/lld_cdma.c:233:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7127: FILE: drivers/staging/mrst_nand/lld_cdma.c:235:
+			nand_dbg_print(NAND_DBG_DEBUG,
+					" WRITE MAIN+SPARE  ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7131: FILE: drivers/staging/mrst_nand/lld_cdma.c:239:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7133: FILE: drivers/staging/mrst_nand/lld_cdma.c:241:
+			nand_dbg_print(NAND_DBG_DEBUG,
+					" WRITE MAIN+SPARE  ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7137: FILE: drivers/staging/mrst_nand/lld_cdma.c:245:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7142: FILE: drivers/staging/mrst_nand/lld_cdma.c:250:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7147: FILE: drivers/staging/mrst_nand/lld_cdma.c:255:
+			nand_dbg_print(NAND_DBG_DEBUG, "%03d",
+					PendingCMD[i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7157: FILE: drivers/staging/mrst_nand/lld_cdma.c:265:
+			nand_dbg_print(NAND_DBG_DEBUG, " %p",
+					PendingCMD[i].DataAddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7159: FILE: drivers/staging/mrst_nand/lld_cdma.c:267:
+			nand_dbg_print(NAND_DBG_DEBUG, "  %04X",
+					(unsigned int)PendingCMD[i].Block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7161: FILE: drivers/staging/mrst_nand/lld_cdma.c:269:
+			nand_dbg_print(NAND_DBG_DEBUG, " %04X",
+					PendingCMD[i].Page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7163: FILE: drivers/staging/mrst_nand/lld_cdma.c:271:
+			nand_dbg_print(NAND_DBG_DEBUG, " %04X",
+					PendingCMD[i].PageCount);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7165: FILE: drivers/staging/mrst_nand/lld_cdma.c:273:
+			nand_dbg_print(NAND_DBG_DEBUG, "  %p",
+					PendingCMD[i].DataDestAddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7167: FILE: drivers/staging/mrst_nand/lld_cdma.c:275:
+			nand_dbg_print(NAND_DBG_DEBUG, " %p",
+					PendingCMD[i].DataSrcAddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7169: FILE: drivers/staging/mrst_nand/lld_cdma.c:277:
+			nand_dbg_print(NAND_DBG_DEBUG, " %04X",
+					PendingCMD[i].MemCopyByteCnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7171: FILE: drivers/staging/mrst_nand/lld_cdma.c:279:
+			nand_dbg_print(NAND_DBG_DEBUG, " %04X",
+					PendingCMD[i].ChanSync[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7173: FILE: drivers/staging/mrst_nand/lld_cdma.c:281:
+			nand_dbg_print(NAND_DBG_DEBUG, " %04X",
+					PendingCMD[i].Status);

WARNING:SPLIT_STRING: quoted string split across lines
#7179: FILE: drivers/staging/mrst_nand/lld_cdma.c:287:
+	nand_dbg_print(NAND_DBG_DEBUG, " ----------------------------"
+		"---------------------------------------------|\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7183: FILE: drivers/staging/mrst_nand/lld_cdma.c:291:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     PrintPendingCMDsPerChannel

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7189: FILE: drivers/staging/mrst_nand/lld_cdma.c:297:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <PrintPendingCMDsPerChannel>
#7190: FILE: drivers/staging/mrst_nand/lld_cdma.c:298:
+void PrintPendingCMDsPerChannel(u16 tag_count)

CHECK:CAMELCASE: Avoid CamelCase: <maxChIndexes>
#7195: FILE: drivers/staging/mrst_nand/lld_cdma.c:303:
+	int chIndexes[MAX_CHANS], maxChIndexes;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7199: FILE: drivers/staging/mrst_nand/lld_cdma.c:307:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"Printing PendingCMDsPerChannel Table\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7203: FILE: drivers/staging/mrst_nand/lld_cdma.c:311:
+		nand_dbg_print(NAND_DBG_DEBUG,
+		" -------------------------------------|");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7208: FILE: drivers/staging/mrst_nand/lld_cdma.c:316:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			" Ch%1d                                  |", i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7214: FILE: drivers/staging/mrst_nand/lld_cdma.c:322:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Tag Command  FromAddr   DestAddr  Sync|");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7227: FILE: drivers/staging/mrst_nand/lld_cdma.c:335:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"%03d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7230: FILE: drivers/staging/mrst_nand/lld_cdma.c:338:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  ERASE ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7232: FILE: drivers/staging/mrst_nand/lld_cdma.c:340:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"         ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7234: FILE: drivers/staging/mrst_nand/lld_cdma.c:342:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"   %04X:0000",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7240: FILE: drivers/staging/mrst_nand/lld_cdma.c:348:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"%03d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7243: FILE: drivers/staging/mrst_nand/lld_cdma.c:351:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  WR_MN ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7245: FILE: drivers/staging/mrst_nand/lld_cdma.c:353:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7248: FILE: drivers/staging/mrst_nand/lld_cdma.c:356:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  %04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7252: FILE: drivers/staging/mrst_nand/lld_cdma.c:360:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						":%04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7257: FILE: drivers/staging/mrst_nand/lld_cdma.c:365:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"%03d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7260: FILE: drivers/staging/mrst_nand/lld_cdma.c:368:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						" WR_M+S ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7262: FILE: drivers/staging/mrst_nand/lld_cdma.c:370:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7265: FILE: drivers/staging/mrst_nand/lld_cdma.c:373:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  %04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7269: FILE: drivers/staging/mrst_nand/lld_cdma.c:377:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						":%04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7274: FILE: drivers/staging/mrst_nand/lld_cdma.c:382:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"%03d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7277: FILE: drivers/staging/mrst_nand/lld_cdma.c:385:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						" RD_M+S ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7279: FILE: drivers/staging/mrst_nand/lld_cdma.c:387:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  %04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7283: FILE: drivers/staging/mrst_nand/lld_cdma.c:391:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						":%04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7286: FILE: drivers/staging/mrst_nand/lld_cdma.c:394:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"  %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7291: FILE: drivers/staging/mrst_nand/lld_cdma.c:399:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"%03d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7294: FILE: drivers/staging/mrst_nand/lld_cdma.c:402:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"   READ ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7296: FILE: drivers/staging/mrst_nand/lld_cdma.c:404:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						" %04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7300: FILE: drivers/staging/mrst_nand/lld_cdma.c:408:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						":%04X",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7303: FILE: drivers/staging/mrst_nand/lld_cdma.c:411:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"   %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7308: FILE: drivers/staging/mrst_nand/lld_cdma.c:416:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					"%03d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7311: FILE: drivers/staging/mrst_nand/lld_cdma.c:419:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					" MemCpy ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7313: FILE: drivers/staging/mrst_nand/lld_cdma.c:421:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					"  %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7316: FILE: drivers/staging/mrst_nand/lld_cdma.c:424:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					"  %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7321: FILE: drivers/staging/mrst_nand/lld_cdma.c:429:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					"%03d", p_cmd_ch[chnl][i].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7323: FILE: drivers/staging/mrst_nand/lld_cdma.c:431:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					"  DUMMY ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7325: FILE: drivers/staging/mrst_nand/lld_cdma.c:433:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					"            %04X:0000",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7338: FILE: drivers/staging/mrst_nand/lld_cdma.c:446:
+				nand_dbg_print(NAND_DBG_DEBUG,
+				"  %04X|",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7342: FILE: drivers/staging/mrst_nand/lld_cdma.c:450:
+				nand_dbg_print(NAND_DBG_DEBUG,
+				"                                      |");

WARNING:SPLIT_STRING: quoted string split across lines
#7350: FILE: drivers/staging/mrst_nand/lld_cdma.c:458:
+	nand_dbg_print(NAND_DBG_DEBUG, " ----------------------------"
+		"---------------------------------------------|\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7354: FILE: drivers/staging/mrst_nand/lld_cdma.c:462:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     PrintCDMA_Descriptors

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7360: FILE: drivers/staging/mrst_nand/lld_cdma.c:468:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <PrintCDMA_Descriptors>
#7361: FILE: drivers/staging/mrst_nand/lld_cdma.c:469:
+void PrintCDMA_Descriptors(void)

CHECK:CAMELCASE: Avoid CamelCase: <pchTotal>
#7365: FILE: drivers/staging/mrst_nand/lld_cdma.c:473:
+	struct cdma_descriptor *pchTotal = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <mcpyPtr>
#7366: FILE: drivers/staging/mrst_nand/lld_cdma.c:474:
+	struct memcpy_descriptor *mcpyPtr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cdma_desc[i][0]
#7372: FILE: drivers/staging/mrst_nand/lld_cdma.c:480:
+		pch[i] = &(cdma_desc[i][0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7377: FILE: drivers/staging/mrst_nand/lld_cdma.c:485:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		" Printing CDMA_Descriptors Table \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7377: FILE: drivers/staging/mrst_nand/lld_cdma.c:485:
+		" Printing CDMA_Descriptors Table \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7379: FILE: drivers/staging/mrst_nand/lld_cdma.c:487:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"----------------------------------------------------"

WARNING:SPLIT_STRING: quoted string split across lines
#7380: FILE: drivers/staging/mrst_nand/lld_cdma.c:488:
+		"----------------------------------------------------"
+		"----------------------------------------------------"

WARNING:SPLIT_STRING: quoted string split across lines
#7381: FILE: drivers/staging/mrst_nand/lld_cdma.c:489:
+		"----------------------------------------------------"
+		"----------------------------------------------------"

WARNING:SPLIT_STRING: quoted string split across lines
#7382: FILE: drivers/staging/mrst_nand/lld_cdma.c:490:
+		"----------------------------------------------------"
+		"-----------------\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7384: FILE: drivers/staging/mrst_nand/lld_cdma.c:492:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		" CMD | FromAddr |   ToAddr | Siz | Channel | CMD | "

WARNING:SPLIT_STRING: quoted string split across lines
#7385: FILE: drivers/staging/mrst_nand/lld_cdma.c:493:
+		" CMD | FromAddr |   ToAddr | Siz | Channel | CMD | "
+		"FromAddr |   ToAddr | Siz | Channel | CMD | FromAddr |   "

WARNING:SPLIT_STRING: quoted string split across lines
#7386: FILE: drivers/staging/mrst_nand/lld_cdma.c:494:
+		"FromAddr |   ToAddr | Siz | Channel | CMD | FromAddr |   "
+		"ToAddr | Siz | Channel | CMD | FromAddr |   ToAddr "

WARNING:SPLIT_STRING: quoted string split across lines
#7387: FILE: drivers/staging/mrst_nand/lld_cdma.c:495:
+		"ToAddr | Siz | Channel | CMD | FromAddr |   ToAddr "
+		"| Siz | Channel\n");

CHECK:CAMELCASE: Avoid CamelCase: <CommandType>
#7394: FILE: drivers/staging/mrst_nand/lld_cdma.c:502:
+				switch ((pch[i]->CommandType) >> 8) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7399: FILE: drivers/staging/mrst_nand/lld_cdma.c:507:
+						(unsigned)pch[i]->MemAddrHi,

CHECK:CAMELCASE: Avoid CamelCase: <MemAddrHi>
#7399: FILE: drivers/staging/mrst_nand/lld_cdma.c:507:
+						(unsigned)pch[i]->MemAddrHi,

CHECK:CAMELCASE: Avoid CamelCase: <MemAddrLo>
#7400: FILE: drivers/staging/mrst_nand/lld_cdma.c:508:
+						(u16)pch[i]->MemAddrLo);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7403: FILE: drivers/staging/mrst_nand/lld_cdma.c:511:
+						(unsigned)

CHECK:CAMELCASE: Avoid CamelCase: <FlashPointerHi>
#7404: FILE: drivers/staging/mrst_nand/lld_cdma.c:512:
+						pch[i]->FlashPointerHi,

CHECK:CAMELCASE: Avoid CamelCase: <FlashPointerLo>
#7406: FILE: drivers/staging/mrst_nand/lld_cdma.c:514:
+						pch[i]->FlashPointerLo);

CHECK:CAMELCASE: Avoid CamelCase: <CommandFlags>
#7410: FILE: drivers/staging/mrst_nand/lld_cdma.c:518:
+					if ((pch[i]->CommandFlags >> 10)) {

CHECK:CAMELCASE: Avoid CamelCase: <MemCopyPointerHi>
#7415: FILE: drivers/staging/mrst_nand/lld_cdma.c:523:
+					((pch[i]->MemCopyPointerHi << 16) |

CHECK:CAMELCASE: Avoid CamelCase: <MemCopyPointerLo>
#7416: FILE: drivers/staging/mrst_nand/lld_cdma.c:524:
+					pch[i]->MemCopyPointerLo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7418: FILE: drivers/staging/mrst_nand/lld_cdma.c:526:
+						sprintf(strp, " 0x%04x%04x",
+						(unsigned)mcpyPtr->SrcAddrHi,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7418: FILE: drivers/staging/mrst_nand/lld_cdma.c:526:
+						(unsigned)mcpyPtr->SrcAddrHi,

CHECK:CAMELCASE: Avoid CamelCase: <SrcAddrHi>
#7418: FILE: drivers/staging/mrst_nand/lld_cdma.c:526:
+						(unsigned)mcpyPtr->SrcAddrHi,

CHECK:CAMELCASE: Avoid CamelCase: <SrcAddrLo>
#7419: FILE: drivers/staging/mrst_nand/lld_cdma.c:527:
+						(u16)mcpyPtr->SrcAddrLo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7422: FILE: drivers/staging/mrst_nand/lld_cdma.c:530:
+						sprintf(strp, " 0x%04x%04x",
+						(unsigned)mcpyPtr->DestAddrHi,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7422: FILE: drivers/staging/mrst_nand/lld_cdma.c:530:
+						(unsigned)mcpyPtr->DestAddrHi,

CHECK:CAMELCASE: Avoid CamelCase: <DestAddrHi>
#7422: FILE: drivers/staging/mrst_nand/lld_cdma.c:530:
+						(unsigned)mcpyPtr->DestAddrHi,

CHECK:CAMELCASE: Avoid CamelCase: <DestAddrLo>
#7423: FILE: drivers/staging/mrst_nand/lld_cdma.c:531:
+						(u16)mcpyPtr->DestAddrLo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7429: FILE: drivers/staging/mrst_nand/lld_cdma.c:537:
+						sprintf(strp, " 0x%04x%04x",
+						(unsigned)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7429: FILE: drivers/staging/mrst_nand/lld_cdma.c:537:
+						(unsigned)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7435: FILE: drivers/staging/mrst_nand/lld_cdma.c:543:
+						sprintf(strp, " 0x%04x%04x",
+						(unsigned)pch[i]->MemAddrHi,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7435: FILE: drivers/staging/mrst_nand/lld_cdma.c:543:
+						(unsigned)pch[i]->MemAddrHi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7449: FILE: drivers/staging/mrst_nand/lld_cdma.c:557:
+					sprintf(strp,
+					"                          ");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#7458: FILE: drivers/staging/mrst_nand/lld_cdma.c:566:
+					(unsigned)pch[i]->Channel);

CHECK:CAMELCASE: Avoid CamelCase: <Channel>
#7458: FILE: drivers/staging/mrst_nand/lld_cdma.c:566:
+					(unsigned)pch[i]->Channel);

CHECK:CAMELCASE: Avoid CamelCase: <NxtPointerHi>
#7462: FILE: drivers/staging/mrst_nand/lld_cdma.c:570:
+					((pch[i]->NxtPointerHi << 16) |

CHECK:CAMELCASE: Avoid CamelCase: <NxtPointerLo>
#7463: FILE: drivers/staging/mrst_nand/lld_cdma.c:571:
+					pch[i]->NxtPointerLo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7467: FILE: drivers/staging/mrst_nand/lld_cdma.c:575:
+				sprintf(strp,
+				"                                       |");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7476: FILE: drivers/staging/mrst_nand/lld_cdma.c:584:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		" ---------------------------------------------------"

WARNING:SPLIT_STRING: quoted string split across lines
#7477: FILE: drivers/staging/mrst_nand/lld_cdma.c:585:
+		" ---------------------------------------------------"
+		"----------------------|\n");

WARNING:SPACING: space prohibited before semicolon
#7494: FILE: drivers/staging/mrst_nand/lld_cdma.c:602:
+	u32 offset, addr ;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7521: FILE: drivers/staging/mrst_nand/lld_cdma.c:629:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_AddDummyDesc

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7526: FILE: drivers/staging/mrst_nand/lld_cdma.c:634:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:RETURN_VOID: void function return statements are not generally useful
#7559: FILE: drivers/staging/mrst_nand/lld_cdma.c:667:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7561: FILE: drivers/staging/mrst_nand/lld_cdma.c:669:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7565: FILE: drivers/staging/mrst_nand/lld_cdma.c:673:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_AddDummyDescAtEnd

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7572: FILE: drivers/staging/mrst_nand/lld_cdma.c:680:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:RETURN_VOID: void function return statements are not generally useful
#7606: FILE: drivers/staging/mrst_nand/lld_cdma.c:714:
+	return;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7630: FILE: drivers/staging/mrst_nand/lld_cdma.c:738:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_Flash_Init

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7639: FILE: drivers/staging/mrst_nand/lld_cdma.c:747:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7649: FILE: drivers/staging/mrst_nand/lld_cdma.c:757:
+	 * that are supported */

CHECK:CAMELCASE: Avoid CamelCase: <FlashReg>
#7661: FILE: drivers/staging/mrst_nand/lld_cdma.c:769:
+	iowrite32(0, FlashReg + GLOBAL_INT_ENABLE);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#7719: FILE: drivers/staging/mrst_nand/lld_cdma.c:827:
+			break;
+		} else {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7730: FILE: drivers/staging/mrst_nand/lld_cdma.c:838:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_AbortChannels

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7735: FILE: drivers/staging/mrst_nand/lld_cdma.c:843:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <DescB4Abort>
#7740: FILE: drivers/staging/mrst_nand/lld_cdma.c:848:
+	u16  DescB4Abort[MAX_CHANS];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c != chan'
#7750: FILE: drivers/staging/mrst_nand/lld_cdma.c:858:
+		if ((c != chan) && (1 == GLOB_valid_banks[c])) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7750: FILE: drivers/staging/mrst_nand/lld_cdma.c:858:
+		if ((c != chan) && (1 == GLOB_valid_banks[c])) {

CHECK:CAMELCASE: Avoid CamelCase: <FlashMem>
#7756: FILE: drivers/staging/mrst_nand/lld_cdma.c:864:
+				iowrite32(MODE_02 | (0 << 4), FlashMem);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DescB4Abort[c] != 0xFF'
#7766: FILE: drivers/staging/mrst_nand/lld_cdma.c:874:
+			if ((DescB4Abort[c] != 0xFF) && (c != chan)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c != chan'
#7766: FILE: drivers/staging/mrst_nand/lld_cdma.c:874:
+			if ((DescB4Abort[c] != 0xFF) && (c != chan)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7767: FILE: drivers/staging/mrst_nand/lld_cdma.c:875:
+				if (0 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7769: FILE: drivers/staging/mrst_nand/lld_cdma.c:877:
+				else if (1 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7771: FILE: drivers/staging/mrst_nand/lld_cdma.c:879:
+				else if (2 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7773: FILE: drivers/staging/mrst_nand/lld_cdma.c:881:
+				else if (3 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7784: FILE: drivers/staging/mrst_nand/lld_cdma.c:892:
+		if (1 == aborts_comp)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7794: FILE: drivers/staging/mrst_nand/lld_cdma.c:902:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_UpdateEventStatus

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7799: FILE: drivers/staging/mrst_nand/lld_cdma.c:907:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7812: FILE: drivers/staging/mrst_nand/lld_cdma.c:920:
+			* (not just desc_complete) */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7812: FILE: drivers/staging/mrst_nand/lld_cdma.c:920:
+			/* Check for the descriptor with failure
+			* (not just desc_complete) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7817: FILE: drivers/staging/mrst_nand/lld_cdma.c:925:
+			* must be good (no errors reported) */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7817: FILE: drivers/staging/mrst_nand/lld_cdma.c:925:
+			/* All the previous command's status for this channel
+			* must be good (no errors reported) */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#7821: FILE: drivers/staging/mrst_nand/lld_cdma.c:929:
+					PendingCMD[cdma_desc[c][i].Tag].Status
+							= CMD_PASS;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7834: FILE: drivers/staging/mrst_nand/lld_cdma.c:942:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#7855: FILE: drivers/staging/mrst_nand/lld_cdma.c:963:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_Execute_CMDs (for use with CMD_DMA)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7860: FILE: drivers/staging/mrst_nand/lld_cdma.c:968:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= totalUsedBanks'
#7905: FILE: drivers/staging/mrst_nand/lld_cdma.c:1013:
+		if ((i >= totalUsedBanks) && (i < MAX_CHANS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < MAX_CHANS'
#7905: FILE: drivers/staging/mrst_nand/lld_cdma.c:1013:
+		if ((i >= totalUsedBanks) && (i < MAX_CHANS))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7919: FILE: drivers/staging/mrst_nand/lld_cdma.c:1027:
+		if (0 == tmp_c) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#7925: FILE: drivers/staging/mrst_nand/lld_cdma.c:1033:
+					if (0 == tmp_c) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD'
#7963: FILE: drivers/staging/mrst_nand/lld_cdma.c:1071:
+		if ((PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD) ||
+			(PendingCMD[i].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[i].CMD == READ_MAIN_SPARE_CMD'
#7963: FILE: drivers/staging/mrst_nand/lld_cdma.c:1071:
+		if ((PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD) ||
+			(PendingCMD[i].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7964: FILE: drivers/staging/mrst_nand/lld_cdma.c:1072:
+		if ((PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD) ||
+			(PendingCMD[i].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:CAMELCASE: Avoid CamelCase: <XferSize>
#8066: FILE: drivers/staging/mrst_nand/lld_cdma.c:1174:
+			memcp_desc[c][d].XferSize =

CHECK:CAMELCASE: Avoid CamelCase: <MemCopyFlags>
#8068: FILE: drivers/staging/mrst_nand/lld_cdma.c:1176:
+			memcp_desc[c][d].MemCopyFlags =

CHECK:CAMELCASE: Avoid CamelCase: <MemCopyStatus>
#8070: FILE: drivers/staging/mrst_nand/lld_cdma.c:1178:
+			memcp_desc[c][d].MemCopyStatus = 0;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8089: FILE: drivers/staging/mrst_nand/lld_cdma.c:1197:
+				if (1 == GLOB_valid_banks[c]) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD'
#8098: FILE: drivers/staging/mrst_nand/lld_cdma.c:1206:
+		if ((PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD) ||
+			(PendingCMD[i].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[i].CMD == READ_MAIN_SPARE_CMD'
#8098: FILE: drivers/staging/mrst_nand/lld_cdma.c:1206:
+		if ((PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD) ||
+			(PendingCMD[i].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8099: FILE: drivers/staging/mrst_nand/lld_cdma.c:1207:
+		if ((PendingCMD[i].CMD == WRITE_MAIN_SPARE_CMD) ||
+			(PendingCMD[i].CMD == READ_MAIN_SPARE_CMD)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8144: FILE: drivers/staging/mrst_nand/lld_cdma.c:1252:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#8219: FILE: drivers/staging/mrst_nand/lld_cdma.c:1327:
+	 * that are supported */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#8242: FILE: drivers/staging/mrst_nand/lld_cdma.c:1350:
+		return 1;
+	} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8244: FILE: drivers/staging/mrst_nand/lld_cdma.c:1352:
+		nand_dbg_print(NAND_DBG_DEBUG,
+				"Not a NAND controller interrupt!\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#8260: FILE: drivers/staging/mrst_nand/lld_cdma.c:1368:
+					PendingCMD[cdma_desc[c][i].Tag].Status
+							= CMD_PASS;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdma_desc[c][i].CommandType == 0x41'
#8262: FILE: drivers/staging/mrst_nand/lld_cdma.c:1370:
+				if ((cdma_desc[c][i].CommandType == 0x41) ||
+				(cdma_desc[c][i].CommandType == 0x42) ||
+				(cdma_desc[c][i].CommandType == 0x43))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdma_desc[c][i].CommandType == 0x42'
#8262: FILE: drivers/staging/mrst_nand/lld_cdma.c:1370:
+				if ((cdma_desc[c][i].CommandType == 0x41) ||
+				(cdma_desc[c][i].CommandType == 0x42) ||
+				(cdma_desc[c][i].CommandType == 0x43))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdma_desc[c][i].CommandType == 0x43'
#8262: FILE: drivers/staging/mrst_nand/lld_cdma.c:1370:
+				if ((cdma_desc[c][i].CommandType == 0x41) ||
+				(cdma_desc[c][i].CommandType == 0x42) ||
+				(cdma_desc[c][i].CommandType == 0x43))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8263: FILE: drivers/staging/mrst_nand/lld_cdma.c:1371:
+				if ((cdma_desc[c][i].CommandType == 0x41) ||
+				(cdma_desc[c][i].CommandType == 0x42) ||

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8269: FILE: drivers/staging/mrst_nand/lld_cdma.c:1377:
+					Conv_Main_Spare_Data_Phy2Log_Format(

CHECK:CAMELCASE: Avoid CamelCase: <Conv_Main_Spare_Data_Phy2Log_Format>
#8269: FILE: drivers/staging/mrst_nand/lld_cdma.c:1377:
+					Conv_Main_Spare_Data_Phy2Log_Format(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#8270: FILE: drivers/staging/mrst_nand/lld_cdma.c:1378:
+						PendingCMD[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#8272: FILE: drivers/staging/mrst_nand/lld_cdma.c:1380:
+						PendingCMD[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8277: FILE: drivers/staging/mrst_nand/lld_cdma.c:1385:
+					Conv_Spare_Data_Phy2Log_Format(

CHECK:CAMELCASE: Avoid CamelCase: <Conv_Spare_Data_Phy2Log_Format>
#8277: FILE: drivers/staging/mrst_nand/lld_cdma.c:1385:
+					Conv_Spare_Data_Phy2Log_Format(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#8278: FILE: drivers/staging/mrst_nand/lld_cdma.c:1386:
+						PendingCMD[

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8292: FILE: drivers/staging/mrst_nand/lld_cdma.c:1400:
+static u16 do_ecc_for_desc(u16 c, u8 *buf,
+				u16 page)

CHECK:CAMELCASE: Avoid CamelCase: <eccSectorSize>
#8301: FILE: drivers/staging/mrst_nand/lld_cdma.c:1409:
+	u32 eccSectorSize;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8307: FILE: drivers/staging/mrst_nand/lld_cdma.c:1415:
+		if (0 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8309: FILE: drivers/staging/mrst_nand/lld_cdma.c:1417:
+		else if (1 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8311: FILE: drivers/staging/mrst_nand/lld_cdma.c:1419:
+		else if (2 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8313: FILE: drivers/staging/mrst_nand/lld_cdma.c:1421:
+		else if (3 == c)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#8327: FILE: drivers/staging/mrst_nand/lld_cdma.c:1435:
+			return EVENT_UNCORRECTABLE_DATA_ERROR;
+		} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8347: FILE: drivers/staging/mrst_nand/lld_cdma.c:1455:
+static u16 process_ecc_int(u16 c,
+	u16 *fiqs, u16 *i)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8368: FILE: drivers/staging/mrst_nand/lld_cdma.c:1476:
+	event = do_ecc_for_desc(c, PendingCMD[cdma_desc[c][j].Tag].DataAddr,
+			PendingCMD[cdma_desc[c][j].Tag].Page);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8370: FILE: drivers/staging/mrst_nand/lld_cdma.c:1478:
+	if (EVENT_UNCORRECTABLE_DATA_ERROR == event) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8396: FILE: drivers/staging/mrst_nand/lld_cdma.c:1504:
+	if (0 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8398: FILE: drivers/staging/mrst_nand/lld_cdma.c:1506:
+	else if (1 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8400: FILE: drivers/staging/mrst_nand/lld_cdma.c:1508:
+	else if (2 == c)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8402: FILE: drivers/staging/mrst_nand/lld_cdma.c:1510:
+	else if (3 == c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8409: FILE: drivers/staging/mrst_nand/lld_cdma.c:1517:
+static void process_prog_fail_int(u16 c,
+	u16 *fiqs, u16 *i)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8439: FILE: drivers/staging/mrst_nand/lld_cdma.c:1547:
+static void process_erase_fail_int(u16 c,
+	u16 *fiqs, u16 *i)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#8469: FILE: drivers/staging/mrst_nand/lld_cdma.c:1577:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_Event_Status (for use with CMD_DMA)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#8475: FILE: drivers/staging/mrst_nand/lld_cdma.c:1583:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <FIQstatus>
#8478: FILE: drivers/staging/mrst_nand/lld_cdma.c:1586:
+	u16 FIQstatus[MAX_CHANS];

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#8487: FILE: drivers/staging/mrst_nand/lld_cdma.c:1595:
+	 * that are supported */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8507: FILE: drivers/staging/mrst_nand/lld_cdma.c:1615:
+		if ((int_status & DMA_INTR__DESC_COMP_CHANNEL0) ||
+		(int_status & DMA_INTR__DESC_COMP_CHANNEL1) ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#8510: FILE: drivers/staging/mrst_nand/lld_cdma.c:1618:
+		(int_status & DMA_INTR__DESC_COMP_CHANNEL3)) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#8515: FILE: drivers/staging/mrst_nand/lld_cdma.c:1623:
+			* reported back to FTL in PendindCMD? */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#8515: FILE: drivers/staging/mrst_nand/lld_cdma.c:1623:
+			/* TODO -- What kind of status can be
+			* reported back to FTL in PendindCMD? */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8529: FILE: drivers/staging/mrst_nand/lld_cdma.c:1637:
+			if ((FIQstatus[c] & INTR_STATUS0__ECC_ERR) &&
+				ioread32(FlashReg + ECC_ENABLE)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8531: FILE: drivers/staging/mrst_nand/lld_cdma.c:1639:
+				if (EVENT_UNCORRECTABLE_DATA_ERROR == event)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#8543: FILE: drivers/staging/mrst_nand/lld_cdma.c:1651:
+				return EVENT_ERASE_FAILURE;
+			} else {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8544: FILE: drivers/staging/mrst_nand/lld_cdma.c:1652:
+				if (0 == c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8546: FILE: drivers/staging/mrst_nand/lld_cdma.c:1654:
+					iowrite32(FIQstatus[0],
+						FlashReg + INTR_STATUS0);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8547: FILE: drivers/staging/mrst_nand/lld_cdma.c:1655:
+				else if (1 == c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8549: FILE: drivers/staging/mrst_nand/lld_cdma.c:1657:
+					iowrite32(FIQstatus[1],
+						FlashReg + INTR_STATUS1);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8550: FILE: drivers/staging/mrst_nand/lld_cdma.c:1658:
+				else if (2 == c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8552: FILE: drivers/staging/mrst_nand/lld_cdma.c:1660:
+					iowrite32(FIQstatus[2],
+						FlashReg + INTR_STATUS2);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8553: FILE: drivers/staging/mrst_nand/lld_cdma.c:1661:
+				else if (3 == c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8555: FILE: drivers/staging/mrst_nand/lld_cdma.c:1663:
+					iowrite32(FIQstatus[3],
+						FlashReg + INTR_STATUS3);

CHECK:CAMELCASE: Avoid CamelCase: <isFlashReadCMD>
#8576: FILE: drivers/staging/mrst_nand/lld_cdma.c:1684:
+static u32 isFlashReadCMD(u8 CMD)

CHECK:CAMELCASE: Avoid CamelCase: <isFlashWriteCMD>
#8588: FILE: drivers/staging/mrst_nand/lld_cdma.c:1696:
+static u32 isFlashWriteCMD(u8 CMD)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#8601: FILE: drivers/staging/mrst_nand/lld_cdma.c:1709:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     generateSyncNum

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#8608: FILE: drivers/staging/mrst_nand/lld_cdma.c:1716:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <generateSyncNum>
#8609: FILE: drivers/staging/mrst_nand/lld_cdma.c:1717:
+static u32 generateSyncNum(u32 *sync_usage, u32 *newSyncNum,

CHECK:CAMELCASE: Avoid CamelCase: <newSyncNum>
#8609: FILE: drivers/staging/mrst_nand/lld_cdma.c:1717:
+static u32 generateSyncNum(u32 *sync_usage, u32 *newSyncNum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8610: FILE: drivers/staging/mrst_nand/lld_cdma.c:1718:
+static u32 generateSyncNum(u32 *sync_usage, u32 *newSyncNum,
+			u32 syncedChans, u32 lastid)

CHECK:CAMELCASE: Avoid CamelCase: <syncedChans>
#8610: FILE: drivers/staging/mrst_nand/lld_cdma.c:1718:
+			u32 syncedChans, u32 lastid)

CHECK:CAMELCASE: Avoid CamelCase: <toUseSyncNum>
#8612: FILE: drivers/staging/mrst_nand/lld_cdma.c:1720:
+	u32 synci, toUseSyncNum = 0;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#8617: FILE: drivers/staging/mrst_nand/lld_cdma.c:1725:
+		if (((sync_usage[synci] >> SNUS_CHAN_OFFSET) == syncedChans)
+			&& ((sync_usage[synci] & SNUS_LASTID_MASK)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8628: FILE: drivers/staging/mrst_nand/lld_cdma.c:1736:
+/*
+    The rest is to find another sync point which has at least

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8646: FILE: drivers/staging/mrst_nand/lld_cdma.c:1754:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <getChannelPendingCMD>
#8647: FILE: drivers/staging/mrst_nand/lld_cdma.c:1755:
+#define getChannelPendingCMD(idx)  (PendingCMD[idx].Block /\

CHECK:CAMELCASE: Avoid CamelCase: <isOrderedPendingCMD>
#8650: FILE: drivers/staging/mrst_nand/lld_cdma.c:1758:
+#define isOrderedPendingCMD(idx)  ((PendingCMD[idx].Flags &\

CHECK:CAMELCASE: Avoid CamelCase: <getSyncFromChannel>
#8653: FILE: drivers/staging/mrst_nand/lld_cdma.c:1761:
+#define getSyncFromChannel(c)                   ((c & CHANNEL_SYNC_MASK) >>\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8653: FILE: drivers/staging/mrst_nand/lld_cdma.c:1761:
+#define getSyncFromChannel(c)                   ((c & CHANNEL_SYNC_MASK) >>\
+	CHANNEL_SYNC_OFFSET)

CHECK:CAMELCASE: Avoid CamelCase: <getIdFromChannel>
#8655: FILE: drivers/staging/mrst_nand/lld_cdma.c:1763:
+#define getIdFromChannel(c)                     ((c & CHANNEL_ID_MASK) >>\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8655: FILE: drivers/staging/mrst_nand/lld_cdma.c:1763:
+#define getIdFromChannel(c)                     ((c & CHANNEL_ID_MASK) >>\
+	CHANNEL_ID_OFFSET)

CHECK:CAMELCASE: Avoid CamelCase: <getContFromChannel>
#8657: FILE: drivers/staging/mrst_nand/lld_cdma.c:1765:
+#define getContFromChannel(c)                   ((c & CHANNEL_CONT_MASK) >>\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8657: FILE: drivers/staging/mrst_nand/lld_cdma.c:1765:
+#define getContFromChannel(c)                   ((c & CHANNEL_CONT_MASK) >>\
+	CHANNEL_CONT_OFFSET)

CHECK:CAMELCASE: Avoid CamelCase: <getIntrFromChannel>
#8659: FILE: drivers/staging/mrst_nand/lld_cdma.c:1767:
+#define getIntrFromChannel(c)                   ((c & CHANNEL_INTR_MASK) >>\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8659: FILE: drivers/staging/mrst_nand/lld_cdma.c:1767:
+#define getIntrFromChannel(c)                   ((c & CHANNEL_INTR_MASK) >>\
+	CHANNEL_INTR_OFFSET)

CHECK:CAMELCASE: Avoid CamelCase: <getChanFromChannel>
#8661: FILE: drivers/staging/mrst_nand/lld_cdma.c:1769:
+#define getChanFromChannel(c)                   ((c & CHANNEL_DMA_MASK) >>\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8661: FILE: drivers/staging/mrst_nand/lld_cdma.c:1769:
+#define getChanFromChannel(c)                   ((c & CHANNEL_DMA_MASK) >>\
+	CHANNEL_DMA_OFFSET)

CHECK:CAMELCASE: Avoid CamelCase: <putSyncInChannel>
#8664: FILE: drivers/staging/mrst_nand/lld_cdma.c:1772:
+#define putSyncInChannel(c, v)    (c |= ((v << CHANNEL_SYNC_OFFSET) &\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8664: FILE: drivers/staging/mrst_nand/lld_cdma.c:1772:
+#define putSyncInChannel(c, v)    (c |= ((v << CHANNEL_SYNC_OFFSET) &\
+	CHANNEL_SYNC_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#8664: FILE: drivers/staging/mrst_nand/lld_cdma.c:1772:
+#define putSyncInChannel(c, v)    (c |= ((v << CHANNEL_SYNC_OFFSET) &\
+	CHANNEL_SYNC_MASK))

CHECK:CAMELCASE: Avoid CamelCase: <putIdInChannel>
#8666: FILE: drivers/staging/mrst_nand/lld_cdma.c:1774:
+#define putIdInChannel(c, v)        (c |= ((v << CHANNEL_ID_OFFSET) &\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8666: FILE: drivers/staging/mrst_nand/lld_cdma.c:1774:
+#define putIdInChannel(c, v)        (c |= ((v << CHANNEL_ID_OFFSET) &\
+	CHANNEL_ID_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#8666: FILE: drivers/staging/mrst_nand/lld_cdma.c:1774:
+#define putIdInChannel(c, v)        (c |= ((v << CHANNEL_ID_OFFSET) &\
+	CHANNEL_ID_MASK))

CHECK:CAMELCASE: Avoid CamelCase: <putContInChannel>
#8668: FILE: drivers/staging/mrst_nand/lld_cdma.c:1776:
+#define putContInChannel(c, v)    (c |= ((v << CHANNEL_CONT_OFFSET) &\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8668: FILE: drivers/staging/mrst_nand/lld_cdma.c:1776:
+#define putContInChannel(c, v)    (c |= ((v << CHANNEL_CONT_OFFSET) &\
+	CHANNEL_CONT_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#8668: FILE: drivers/staging/mrst_nand/lld_cdma.c:1776:
+#define putContInChannel(c, v)    (c |= ((v << CHANNEL_CONT_OFFSET) &\
+	CHANNEL_CONT_MASK))

CHECK:CAMELCASE: Avoid CamelCase: <putIntrInChannel>
#8670: FILE: drivers/staging/mrst_nand/lld_cdma.c:1778:
+#define putIntrInChannel(c, v)    (c |= ((v << CHANNEL_INTR_OFFSET) &\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8670: FILE: drivers/staging/mrst_nand/lld_cdma.c:1778:
+#define putIntrInChannel(c, v)    (c |= ((v << CHANNEL_INTR_OFFSET) &\
+	CHANNEL_INTR_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#8670: FILE: drivers/staging/mrst_nand/lld_cdma.c:1778:
+#define putIntrInChannel(c, v)    (c |= ((v << CHANNEL_INTR_OFFSET) &\
+	CHANNEL_INTR_MASK))

CHECK:CAMELCASE: Avoid CamelCase: <putChanInChannel>
#8672: FILE: drivers/staging/mrst_nand/lld_cdma.c:1780:
+#define putChanInChannel(c, v)    (c |= ((v << CHANNEL_DMA_OFFSET) &\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8672: FILE: drivers/staging/mrst_nand/lld_cdma.c:1780:
+#define putChanInChannel(c, v)    (c |= ((v << CHANNEL_DMA_OFFSET) &\
+	CHANNEL_DMA_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#8672: FILE: drivers/staging/mrst_nand/lld_cdma.c:1780:
+#define putChanInChannel(c, v)    (c |= ((v << CHANNEL_DMA_OFFSET) &\
+	CHANNEL_DMA_MASK))

CHECK:CAMELCASE: Avoid CamelCase: <addChanToChannel>
#8675: FILE: drivers/staging/mrst_nand/lld_cdma.c:1783:
+#define addChanToChannel(c, v)    (c |= ((1 << CHANNEL_DMA_OFFSET) << v))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#8675: FILE: drivers/staging/mrst_nand/lld_cdma.c:1783:
+#define addChanToChannel(c, v)    (c |= ((1 << CHANNEL_DMA_OFFSET) << v))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#8675: FILE: drivers/staging/mrst_nand/lld_cdma.c:1783:
+#define addChanToChannel(c, v)    (c |= ((1 << CHANNEL_DMA_OFFSET) << v))

CHECK:CAMELCASE: Avoid CamelCase: <isWithinRange>
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\

CHECK:CAMELCASE: Avoid CamelCase: <toChk>
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\

CHECK:CAMELCASE: Avoid CamelCase: <Bytes>
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'toChk' - possible side-effects?
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\
+	(toChk < (Addr + Bytes)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'toChk' may be better as '(toChk)' to avoid precedence issues
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\
+	(toChk < (Addr + Bytes)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Addr' - possible side-effects?
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\
+	(toChk < (Addr + Bytes)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Addr' may be better as '(Addr)' to avoid precedence issues
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\
+	(toChk < (Addr + Bytes)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Bytes' may be better as '(Bytes)' to avoid precedence issues
#8677: FILE: drivers/staging/mrst_nand/lld_cdma.c:1785:
+#define isWithinRange(toChk, Addr, Bytes)    ((toChk >= Addr) &&\
+	(toChk < (Addr + Bytes)))

CHECK:CAMELCASE: Avoid CamelCase: <fromAddr>
#8681: FILE: drivers/staging/mrst_nand/lld_cdma.c:1789:
+	u8 *fromAddr, *toAddr;

CHECK:CAMELCASE: Avoid CamelCase: <toAddr>
#8681: FILE: drivers/staging/mrst_nand/lld_cdma.c:1789:
+	u8 *fromAddr, *toAddr;

CHECK:CAMELCASE: Avoid CamelCase: <numSync>
#8684: FILE: drivers/staging/mrst_nand/lld_cdma.c:1792:
+	u32 numSync, numSyncOther;

CHECK:CAMELCASE: Avoid CamelCase: <numSyncOther>
#8684: FILE: drivers/staging/mrst_nand/lld_cdma.c:1792:
+	u32 numSync, numSyncOther;

CHECK:CAMELCASE: Avoid CamelCase: <chnlOther>
#8685: FILE: drivers/staging/mrst_nand/lld_cdma.c:1793:
+	u32 chnl, chnlOther;

CHECK:CAMELCASE: Avoid CamelCase: <writeOpSyncPlaced>
#8686: FILE: drivers/staging/mrst_nand/lld_cdma.c:1794:
+	u32 newSyncNum, writeOpSyncPlaced;

CHECK:CAMELCASE: Avoid CamelCase: <stopLoop>
#8694: FILE: drivers/staging/mrst_nand/lld_cdma.c:1802:
+	int i, stopLoop, within1, within2, condition;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8715: FILE: drivers/staging/mrst_nand/lld_cdma.c:1823:
+			debug_boundary_error(ptr->chnl, totalUsedBanks,
+				ptr->idx);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l != m'
#8734: FILE: drivers/staging/mrst_nand/lld_cdma.c:1842:
+		if ((l != m) && (l != n)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l != n'
#8734: FILE: drivers/staging/mrst_nand/lld_cdma.c:1842:
+		if ((l != m) && (l != n)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8756: FILE: drivers/staging/mrst_nand/lld_cdma.c:1864:
+static void check_synced_debug_sync(struct add_sync_points_struct *ptr,
+	unsigned long toUseSyncNum, unsigned long syncedChans, int j, int k)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8762: FILE: drivers/staging/mrst_nand/lld_cdma.c:1870:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"ADDSYNC: Placed Sync point 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#8763: FILE: drivers/staging/mrst_nand/lld_cdma.c:1871:
+			"ADDSYNC: Placed Sync point 0x%x "
+			"with chanvectors 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#8764: FILE: drivers/staging/mrst_nand/lld_cdma.c:1872:
+			"with chanvectors 0x%x "
+			"betn tags %d & prev(%d)=%d\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#8765: FILE: drivers/staging/mrst_nand/lld_cdma.c:1873:
+			(unsigned)toUseSyncNum,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#8766: FILE: drivers/staging/mrst_nand/lld_cdma.c:1874:
+			(unsigned)syncedChans,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8772: FILE: drivers/staging/mrst_nand/lld_cdma.c:1880:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"ADDSYNC: ch:%d ->", m);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#8774: FILE: drivers/staging/mrst_nand/lld_cdma.c:1882:
+				if (255 == PendingCMD[ptr->namb[m][n]].Tag)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8776: FILE: drivers/staging/mrst_nand/lld_cdma.c:1884:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					" (ch:%d tag: -1)", n);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8779: FILE: drivers/staging/mrst_nand/lld_cdma.c:1887:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					" (ch:%d tag:%3d)", n,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr->numSync > MAX_CHANS'
#8803: FILE: drivers/staging/mrst_nand/lld_cdma.c:1911:
+	if ((ptr->numSync > MAX_CHANS) ||
+		(ptr->numSyncOther > MAX_CHANS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr->numSyncOther > MAX_CHANS'
#8803: FILE: drivers/staging/mrst_nand/lld_cdma.c:1911:
+	if ((ptr->numSync > MAX_CHANS) ||
+		(ptr->numSyncOther > MAX_CHANS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8804: FILE: drivers/staging/mrst_nand/lld_cdma.c:1912:
+	if ((ptr->numSync > MAX_CHANS) ||
+		(ptr->numSyncOther > MAX_CHANS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8806: FILE: drivers/staging/mrst_nand/lld_cdma.c:1914:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"LLD_CDMA: Sync Algorithm failed to place a Sync "

WARNING:SPLIT_STRING: quoted string split across lines
#8807: FILE: drivers/staging/mrst_nand/lld_cdma.c:1915:
+			"LLD_CDMA: Sync Algorithm failed to place a Sync "
+			"between command tags %d and %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8814: FILE: drivers/staging/mrst_nand/lld_cdma.c:1922:
+		toUseSyncNum = generateSyncNum(&ptr->sync_usage[0],
+			&ptr->newSyncNum, syncedChans, (j < k ? j : k));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8817: FILE: drivers/staging/mrst_nand/lld_cdma.c:1925:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"LLD_CDMA: Sync Algorithm ran out of Syncs "

WARNING:SPLIT_STRING: quoted string split across lines
#8818: FILE: drivers/staging/mrst_nand/lld_cdma.c:1926:
+				"LLD_CDMA: Sync Algorithm ran out of Syncs "
+				"during syncing command tags %d and %d\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8822: FILE: drivers/staging/mrst_nand/lld_cdma.c:1930:
+			putSyncInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8825: FILE: drivers/staging/mrst_nand/lld_cdma.c:1933:
+			putContInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8828: FILE: drivers/staging/mrst_nand/lld_cdma.c:1936:
+			putIdInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8831: FILE: drivers/staging/mrst_nand/lld_cdma.c:1939:
+			putSyncInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8834: FILE: drivers/staging/mrst_nand/lld_cdma.c:1942:
+			putContInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8837: FILE: drivers/staging/mrst_nand/lld_cdma.c:1945:
+			putIdInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8840: FILE: drivers/staging/mrst_nand/lld_cdma.c:1948:
+			putChanInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8843: FILE: drivers/staging/mrst_nand/lld_cdma.c:1951:
+			putChanInChannel(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8855: FILE: drivers/staging/mrst_nand/lld_cdma.c:1963:
+				nand_dbg_print(NAND_DBG_DEBUG,
+				"LLD_CDMA: Sync Algorithm detected "

WARNING:SPLIT_STRING: quoted string split across lines
#8856: FILE: drivers/staging/mrst_nand/lld_cdma.c:1964:
+				"LLD_CDMA: Sync Algorithm detected "
+				"a possible deadlock in its assignments.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8864: FILE: drivers/staging/mrst_nand/lld_cdma.c:1972:
+			check_synced_debug_sync(ptr, toUseSyncNum,
+					syncedChans, j, k);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8884: FILE: drivers/staging/mrst_nand/lld_cdma.c:1992:
+		within1 = isWithinRange(PendingCMD[j].DataDestAddr,
+				ptr->fromAddr, offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8886: FILE: drivers/staging/mrst_nand/lld_cdma.c:1994:
+		within2 = isWithinRange(PendingCMD[j].DataSrcAddr,
+				ptr->fromAddr, offset);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#8897: FILE: drivers/staging/mrst_nand/lld_cdma.c:2005:
+					((PendingCMD[j].CMD == MEMCOPY_CMD)
+					&& within1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#8904: FILE: drivers/staging/mrst_nand/lld_cdma.c:2012:
+					((PendingCMD[j].CMD == MEMCOPY_CMD)
+					&& within1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'PendingCMD[j].CMD ==
 						MEMCOPY_CMD'
#8906: FILE: drivers/staging/mrst_nand/lld_cdma.c:2014:
+					if (isFlashReadCMD(PendingCMD[j].CMD)
+						|| ((PendingCMD[j].CMD ==
+						MEMCOPY_CMD) && within1)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#8907: FILE: drivers/staging/mrst_nand/lld_cdma.c:2015:
+					if (isFlashReadCMD(PendingCMD[j].CMD)
+						|| ((PendingCMD[j].CMD ==

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#8910: FILE: drivers/staging/mrst_nand/lld_cdma.c:2018:
+						if (ptr->writeOpSyncPlaced)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8925: FILE: drivers/staging/mrst_nand/lld_cdma.c:2033:
+static void process_force_ordering_helper(struct add_sync_points_struct *ptr,
+				unsigned long *syncNums, int k)

CHECK:CAMELCASE: Avoid CamelCase: <syncNums>
#8925: FILE: drivers/staging/mrst_nand/lld_cdma.c:2033:
+				unsigned long *syncNums, int k)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'syncNums[ptr->chnlOther] > MAX_CHANS'
#8930: FILE: drivers/staging/mrst_nand/lld_cdma.c:2038:
+	if ((syncNums[ptr->chnlOther] > MAX_CHANS)) {

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#8930: FILE: drivers/staging/mrst_nand/lld_cdma.c:2038:
+	if ((syncNums[ptr->chnlOther] > MAX_CHANS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8932: FILE: drivers/staging/mrst_nand/lld_cdma.c:2040:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"LLD_CDMA: Sync Algorithm failed "

WARNING:SPLIT_STRING: quoted string split across lines
#8933: FILE: drivers/staging/mrst_nand/lld_cdma.c:2041:
+			"LLD_CDMA: Sync Algorithm failed "
+			"find previously placed Forced Sync "

WARNING:SPLIT_STRING: quoted string split across lines
#8934: FILE: drivers/staging/mrst_nand/lld_cdma.c:2042:
+			"find previously placed Forced Sync "
+			"at command tag %d, chnl %d\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8938: FILE: drivers/staging/mrst_nand/lld_cdma.c:2046:
+			syncedChans = getChanFromChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8941: FILE: drivers/staging/mrst_nand/lld_cdma.c:2049:
+			l = getIntrFromChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8946: FILE: drivers/staging/mrst_nand/lld_cdma.c:2054:
+			putIntrInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8949: FILE: drivers/staging/mrst_nand/lld_cdma.c:2057:
+			putSyncInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8953: FILE: drivers/staging/mrst_nand/lld_cdma.c:2061:
+			putContInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8957: FILE: drivers/staging/mrst_nand/lld_cdma.c:2065:
+			putIdInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8961: FILE: drivers/staging/mrst_nand/lld_cdma.c:2069:
+			putChanInChannel(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8972: FILE: drivers/staging/mrst_nand/lld_cdma.c:2080:
+				nand_dbg_print(NAND_DBG_DEBUG,
+				"ADDSYNC: Moved Forced Sync point "

WARNING:SPLIT_STRING: quoted string split across lines
#8973: FILE: drivers/staging/mrst_nand/lld_cdma.c:2081:
+				"ADDSYNC: Moved Forced Sync point "
+				"in chnl %d from tag %d to %d\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#9001: FILE: drivers/staging/mrst_nand/lld_cdma.c:2109:
+		(syncNums[ptr->chnl] <= MAX_CHANS)
+		&& (PendingCMD[ptr->idx].ChanSync[syncNums[ptr->chnl]]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9007: FILE: drivers/staging/mrst_nand/lld_cdma.c:2115:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"LLD_CDMA: Sync Algorithm failed to place "

WARNING:SPLIT_STRING: quoted string split across lines
#9008: FILE: drivers/staging/mrst_nand/lld_cdma.c:2116:
+				"LLD_CDMA: Sync Algorithm failed to place "
+				"a Forced Sync at command tag %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9011: FILE: drivers/staging/mrst_nand/lld_cdma.c:2119:
+			ptr->chnlOther = (ptr->chnl+1) % totalUsedBanks;
 			                           ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#9014: FILE: drivers/staging/mrst_nand/lld_cdma.c:2122:
+			     (syncNums[ptr->chnlOther] <= MAX_CHANS)
+			     && (getSyncFromChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9014: FILE: drivers/staging/mrst_nand/lld_cdma.c:2122:
+			     && (getSyncFromChannel(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'syncNums[j] > MAX_CHANS'
#9031: FILE: drivers/staging/mrst_nand/lld_cdma.c:2139:
+			if ((syncNums[j] > MAX_CHANS)) {

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#9031: FILE: drivers/staging/mrst_nand/lld_cdma.c:2139:
+			if ((syncNums[j] > MAX_CHANS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9034: FILE: drivers/staging/mrst_nand/lld_cdma.c:2142:
+				nand_dbg_print(NAND_DBG_DEBUG,
+				"LLD_CDMA: Sync Algorithm failed to place "

WARNING:SPLIT_STRING: quoted string split across lines
#9035: FILE: drivers/staging/mrst_nand/lld_cdma.c:2143:
+				"LLD_CDMA: Sync Algorithm failed to place "
+				"a Forced Sync at command tag %d\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9045: FILE: drivers/staging/mrst_nand/lld_cdma.c:2153:
+				putSyncInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9048: FILE: drivers/staging/mrst_nand/lld_cdma.c:2156:
+				putContInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9051: FILE: drivers/staging/mrst_nand/lld_cdma.c:2159:
+				putIdInChannel(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9054: FILE: drivers/staging/mrst_nand/lld_cdma.c:2162:
+				putChanInChannel(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9065: FILE: drivers/staging/mrst_nand/lld_cdma.c:2173:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"ADDSYNC: Placed Forced Sync point "

WARNING:SPLIT_STRING: quoted string split across lines
#9066: FILE: drivers/staging/mrst_nand/lld_cdma.c:2174:
+					"ADDSYNC: Placed Forced Sync point "
+					"for tag %d in tags",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9071: FILE: drivers/staging/mrst_nand/lld_cdma.c:2179:
+						nand_dbg_print(NAND_DBG_DEBUG,
+						" %d",

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#9083: FILE: drivers/staging/mrst_nand/lld_cdma.c:2191:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_AddSyncPoints

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9103: FILE: drivers/staging/mrst_nand/lld_cdma.c:2211:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#9125: FILE: drivers/staging/mrst_nand/lld_cdma.c:2233:
+		vars.idx++) {
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#9143: FILE: drivers/staging/mrst_nand/lld_cdma.c:2251:
+
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#9148: FILE: drivers/staging/mrst_nand/lld_cdma.c:2256:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_SyncCheck

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9157: FILE: drivers/staging/mrst_nand/lld_cdma.c:2265:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:CAMELCASE: Avoid CamelCase: <chMaxIndexes>
#9161: FILE: drivers/staging/mrst_nand/lld_cdma.c:2269:
+#define EOLIST(i)   (chis[i] >= chMaxIndexes[i])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#9161: FILE: drivers/staging/mrst_nand/lld_cdma.c:2269:
+#define EOLIST(i)   (chis[i] >= chMaxIndexes[i])

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9164: FILE: drivers/staging/mrst_nand/lld_cdma.c:2272:
+static void print_ops(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+		u32 rwop, u32 i, u32 chisi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9168: FILE: drivers/staging/mrst_nand/lld_cdma.c:2276:
+		nand_dbg_print(NAND_DBG_DEBUG,
+		"one or more read operations(indx:%d, tag:%d)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9172: FILE: drivers/staging/mrst_nand/lld_cdma.c:2280:
+		nand_dbg_print(NAND_DBG_DEBUG,
+		" one or more write operations(indx:%d, tag:%d)",

CHECK:CAMELCASE: Avoid CamelCase: <xFFFF>
#9173: FILE: drivers/staging/mrst_nand/lld_cdma.c:2281:
+		chisi & 0xFFFF, p[i][chisi & 0xFFFF].Tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9178: FILE: drivers/staging/mrst_nand/lld_cdma.c:2286:
+static u8 get_sync_ch_pcmd(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+		int i, int chisi, int *syncNum, int *i2)

CHECK:CAMELCASE: Avoid CamelCase: <syncNum>
#9178: FILE: drivers/staging/mrst_nand/lld_cdma.c:2286:
+		int i, int chisi, int *syncNum, int *i2)

CHECK:CAMELCASE: Avoid CamelCase: <syncVal>
#9180: FILE: drivers/staging/mrst_nand/lld_cdma.c:2288:
+	u32 syncVal;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9187: FILE: drivers/staging/mrst_nand/lld_cdma.c:2295:
+		if ((*i2 != 1) && (*i2 != 2) && (*i2 != 4) && (*i2 != 8) &&
+				(*syncNum != FORCED_ORDERED_SYNC))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9189: FILE: drivers/staging/mrst_nand/lld_cdma.c:2297:
+			nand_dbg_print(NAND_DBG_DEBUG,
+			"SYNCCHECK: ASSERT FAIL: "

WARNING:SPLIT_STRING: quoted string split across lines
#9190: FILE: drivers/staging/mrst_nand/lld_cdma.c:2298:
+			"SYNCCHECK: ASSERT FAIL: "
+			"second channel of sync(%d) got from sync val of "

WARNING:SPLIT_STRING: quoted string split across lines
#9191: FILE: drivers/staging/mrst_nand/lld_cdma.c:2299:
+			"second channel of sync(%d) got from sync val of "
+			"(ch:%d, indx:%d, tag:%d) is not a valid one!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9201: FILE: drivers/staging/mrst_nand/lld_cdma.c:2309:
+static u32 check_ordering(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+		u32 ch1, u32 ch1_fromi, u32 ch1_toi,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p[ch][i].DataAddr ==
 					Cache.ItemArray[j].pContent'
#9227: FILE: drivers/staging/mrst_nand/lld_cdma.c:2335:
+				if ((isFlashReadCMD(p[ch][i].CMD) &&
+					(p[ch][i].DataAddr ==
+					Cache.ItemArray[j].pContent)) ||
+					((p[ch][i].CMD == MEMCOPY_CMD) &&
+					isWithinRange(p[ch][i].DataDestAddr,
+					Cache.ItemArray[j].pContent,
+					DeviceInfo.wBlockDataSize)
+					)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p[ch][i].CMD == MEMCOPY_CMD'
#9227: FILE: drivers/staging/mrst_nand/lld_cdma.c:2335:
+				if ((isFlashReadCMD(p[ch][i].CMD) &&
+					(p[ch][i].DataAddr ==
+					Cache.ItemArray[j].pContent)) ||
+					((p[ch][i].CMD == MEMCOPY_CMD) &&
+					isWithinRange(p[ch][i].DataDestAddr,
+					Cache.ItemArray[j].pContent,
+					DeviceInfo.wBlockDataSize)
+					)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9228: FILE: drivers/staging/mrst_nand/lld_cdma.c:2336:
+				if ((isFlashReadCMD(p[ch][i].CMD) &&
+					(p[ch][i].DataAddr ==

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9232: FILE: drivers/staging/mrst_nand/lld_cdma.c:2340:
+					isWithinRange(p[ch][i].DataDestAddr,
+					Cache.ItemArray[j].pContent,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p[ch][i].DataAddr ==
 					Cache.ItemArray[j].pContent'
#9239: FILE: drivers/staging/mrst_nand/lld_cdma.c:2347:
+				if ((isFlashWriteCMD(p[ch][i].CMD) &&
+					(p[ch][i].DataAddr ==
+					Cache.ItemArray[j].pContent)) ||
+					((p[ch][i].CMD == MEMCOPY_CMD) &&
+					isWithinRange(p[ch][i].DataSrcAddr,
+					Cache.ItemArray[j].pContent,
+					DeviceInfo.wBlockDataSize))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p[ch][i].CMD == MEMCOPY_CMD'
#9239: FILE: drivers/staging/mrst_nand/lld_cdma.c:2347:
+				if ((isFlashWriteCMD(p[ch][i].CMD) &&
+					(p[ch][i].DataAddr ==
+					Cache.ItemArray[j].pContent)) ||
+					((p[ch][i].CMD == MEMCOPY_CMD) &&
+					isWithinRange(p[ch][i].DataSrcAddr,
+					Cache.ItemArray[j].pContent,
+					DeviceInfo.wBlockDataSize))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9240: FILE: drivers/staging/mrst_nand/lld_cdma.c:2348:
+				if ((isFlashWriteCMD(p[ch][i].CMD) &&
+					(p[ch][i].DataAddr ==

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9244: FILE: drivers/staging/mrst_nand/lld_cdma.c:2352:
+					isWithinRange(p[ch][i].DataSrcAddr,
+					Cache.ItemArray[j].pContent,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9261: FILE: drivers/staging/mrst_nand/lld_cdma.c:2369:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"SYNCCHECK: ORDERING PROBLEM "

WARNING:SPLIT_STRING: quoted string split across lines
#9262: FILE: drivers/staging/mrst_nand/lld_cdma.c:2370:
+				"SYNCCHECK: ORDERING PROBLEM "
+				"in cache buffer %d: Between "

WARNING:SPLIT_STRING: quoted string split across lines
#9263: FILE: drivers/staging/mrst_nand/lld_cdma.c:2371:
+				"in cache buffer %d: Between "
+				"(ch:%d, indx:%d, tag:%d) & "

WARNING:SPLIT_STRING: quoted string split across lines
#9264: FILE: drivers/staging/mrst_nand/lld_cdma.c:2372:
+				"(ch:%d, indx:%d, tag:%d) & "
+				"(ch:%d, indx:%d, tag:%d), "

WARNING:SPLIT_STRING: quoted string split across lines
#9265: FILE: drivers/staging/mrst_nand/lld_cdma.c:2373:
+				"(ch:%d, indx:%d, tag:%d), "
+				"there has been\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9271: FILE: drivers/staging/mrst_nand/lld_cdma.c:2379:
+			print_ops(p, rwop1, ch1,
+					lastcmd[0][j]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9273: FILE: drivers/staging/mrst_nand/lld_cdma.c:2381:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				".\nWhich are not ordered w.r.t to ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9275: FILE: drivers/staging/mrst_nand/lld_cdma.c:2383:
+			print_ops(p, rwop2, ch2,
+					lastcmd[1][j]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9277: FILE: drivers/staging/mrst_nand/lld_cdma.c:2385:
+			nand_dbg_print(NAND_DBG_DEBUG,
+				"\nbetween (ch:%d, indx:%d, tag:%d) & "

WARNING:SPLIT_STRING: quoted string split across lines
#9278: FILE: drivers/staging/mrst_nand/lld_cdma.c:2386:
+				"\nbetween (ch:%d, indx:%d, tag:%d) & "
+				"(ch:%d, indx:%d, tag:%d).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9291: FILE: drivers/staging/mrst_nand/lld_cdma.c:2399:
+static int lookfor_deadlocks(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+			int *chis, int *chMaxIndexes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9298: FILE: drivers/staging/mrst_nand/lld_cdma.c:2406:
+		if (!EOLIST(i) &&
+			get_sync_ch_pcmd(p, i, chis[i], &snum, &ch1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9305: FILE: drivers/staging/mrst_nand/lld_cdma.c:2413:
+			while ((snum != snum2) && (j <= totalUsedBanks) &&
+				!EOLIST(ch2) && (ch2 != i) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9311: FILE: drivers/staging/mrst_nand/lld_cdma.c:2419:
+				get_sync_ch_pcmd(p, ch1, chis[ch1],
+					&snum2, &ch2);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'j <= totalUsedBanks'
#9314: FILE: drivers/staging/mrst_nand/lld_cdma.c:2422:
+			if ((j <= totalUsedBanks) && (snum != snum2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'snum != snum2'
#9314: FILE: drivers/staging/mrst_nand/lld_cdma.c:2422:
+			if ((j <= totalUsedBanks) && (snum != snum2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9316: FILE: drivers/staging/mrst_nand/lld_cdma.c:2424:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"SYNCCHECK: DEADLOCK:\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9320: FILE: drivers/staging/mrst_nand/lld_cdma.c:2428:
+				get_sync_ch_pcmd(p, ch1, chis[ch1],
+						&snum2, &ch2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9323: FILE: drivers/staging/mrst_nand/lld_cdma.c:2431:
+				while (!EOLIST(ch2) && (ch2 != i) &&
+					((snum == 0xFF) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9326: FILE: drivers/staging/mrst_nand/lld_cdma.c:2434:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"Channel %d, cmdindx %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9327: FILE: drivers/staging/mrst_nand/lld_cdma.c:2435:
+						"Channel %d, cmdindx %d, "
+						"tag %d is waiting for "

WARNING:SPLIT_STRING: quoted string split across lines
#9328: FILE: drivers/staging/mrst_nand/lld_cdma.c:2436:
+						"tag %d is waiting for "
+						"sync number %d "

WARNING:SPLIT_STRING: quoted string split across lines
#9329: FILE: drivers/staging/mrst_nand/lld_cdma.c:2437:
+						"sync number %d "
+						"from channel %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9336: FILE: drivers/staging/mrst_nand/lld_cdma.c:2444:
+					get_sync_ch_pcmd(p, ch1, chis[ch1],
+							&snum2, &ch2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9338: FILE: drivers/staging/mrst_nand/lld_cdma.c:2446:
+					debug_boundary_error(ch2,
+							totalUsedBanks, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9341: FILE: drivers/staging/mrst_nand/lld_cdma.c:2449:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"Channel %d, cmdindx %d, tag %d "

WARNING:SPLIT_STRING: quoted string split across lines
#9342: FILE: drivers/staging/mrst_nand/lld_cdma.c:2450:
+					"Channel %d, cmdindx %d, tag %d "
+					"is waiting for sync number %d "

WARNING:SPLIT_STRING: quoted string split across lines
#9343: FILE: drivers/staging/mrst_nand/lld_cdma.c:2451:
+					"is waiting for sync number %d "
+					"from channel %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9349: FILE: drivers/staging/mrst_nand/lld_cdma.c:2457:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					", which is the initial channel!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9352: FILE: drivers/staging/mrst_nand/lld_cdma.c:2460:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					" which does not have that "

WARNING:SPLIT_STRING: quoted string split across lines
#9353: FILE: drivers/staging/mrst_nand/lld_cdma.c:2461:
+					" which does not have that "
+					"sync number!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9356: FILE: drivers/staging/mrst_nand/lld_cdma.c:2464:
+					nand_dbg_print(NAND_DBG_DEBUG,
+					" which is th forced ordered "

WARNING:SPLIT_STRING: quoted string split across lines
#9357: FILE: drivers/staging/mrst_nand/lld_cdma.c:2465:
+					" which is th forced ordered "
+					"sync number that cannot proceed "

WARNING:SPLIT_STRING: quoted string split across lines
#9358: FILE: drivers/staging/mrst_nand/lld_cdma.c:2466:
+					"sync number that cannot proceed "
+					"until all channels reach it!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9360: FILE: drivers/staging/mrst_nand/lld_cdma.c:2468:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"Sync checking is aborting.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9365: FILE: drivers/staging/mrst_nand/lld_cdma.c:2473:
+				nand_dbg_print(NAND_DBG_DEBUG,
+					"SYNCCHECK: DEADLOCK: "

WARNING:SPLIT_STRING: quoted string split across lines
#9366: FILE: drivers/staging/mrst_nand/lld_cdma.c:2474:
+					"SYNCCHECK: DEADLOCK: "
+					"Unknown case. "

WARNING:SPLIT_STRING: quoted string split across lines
#9367: FILE: drivers/staging/mrst_nand/lld_cdma.c:2475:
+					"Unknown case. "
+					"Infinite loop in deadlock check. "

WARNING:SPLIT_STRING: quoted string split across lines
#9368: FILE: drivers/staging/mrst_nand/lld_cdma.c:2476:
+					"Infinite loop in deadlock check. "
+					"Aborting.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9378: FILE: drivers/staging/mrst_nand/lld_cdma.c:2486:
+static void cfo_helper_1(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+	int *chis, int *chMaxIndexes, int (*namb)[MAX_CHANS],

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'k != i'
#9384: FILE: drivers/staging/mrst_nand/lld_cdma.c:2492:
+		if ((k != i) && (k != ch1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'k != ch1'
#9384: FILE: drivers/staging/mrst_nand/lld_cdma.c:2492:
+		if ((k != i) && (k != ch1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9387: FILE: drivers/staging/mrst_nand/lld_cdma.c:2495:
+				if (!check_ordering(p, i, namb[k][i] + 1,
+					chis[i], k, namb[i][k] + 1,

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#9390: FILE: drivers/staging/mrst_nand/lld_cdma.c:2498:
+						"Above problem occured when "
 						               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9390: FILE: drivers/staging/mrst_nand/lld_cdma.c:2498:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"Above problem occured when "

WARNING:SPLIT_STRING: quoted string split across lines
#9391: FILE: drivers/staging/mrst_nand/lld_cdma.c:2499:
+						"Above problem occured when "
+						"analyzing sync %d between "

WARNING:SPLIT_STRING: quoted string split across lines
#9392: FILE: drivers/staging/mrst_nand/lld_cdma.c:2500:
+						"analyzing sync %d between "
+						"(ch:%d, indx:%d, tag:%d) & "

WARNING:SPLIT_STRING: quoted string split across lines
#9393: FILE: drivers/staging/mrst_nand/lld_cdma.c:2501:
+						"(ch:%d, indx:%d, tag:%d) & "
+						"(ch:%d, indx:%d, tag:%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9401: FILE: drivers/staging/mrst_nand/lld_cdma.c:2509:
+				if (!check_ordering(p, ch1,
+					namb[k][ch1] + 1,

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#9406: FILE: drivers/staging/mrst_nand/lld_cdma.c:2514:
+						"Above problem occured when "
 						               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9406: FILE: drivers/staging/mrst_nand/lld_cdma.c:2514:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"Above problem occured when "

WARNING:SPLIT_STRING: quoted string split across lines
#9407: FILE: drivers/staging/mrst_nand/lld_cdma.c:2515:
+						"Above problem occured when "
+						"analyzing sync %d between "

WARNING:SPLIT_STRING: quoted string split across lines
#9408: FILE: drivers/staging/mrst_nand/lld_cdma.c:2516:
+						"analyzing sync %d between "
+						"(ch:%d, indx:%d, tag:%d) & "

WARNING:SPLIT_STRING: quoted string split across lines
#9409: FILE: drivers/staging/mrst_nand/lld_cdma.c:2517:
+						"(ch:%d, indx:%d, tag:%d) & "
+						"(ch:%d, indx:%d, tag:%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9421: FILE: drivers/staging/mrst_nand/lld_cdma.c:2529:
+static void cfo_helper_2(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+	int *chis, int *chMaxIndexes, int (*namb)[MAX_CHANS],

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'k != i'
#9428: FILE: drivers/staging/mrst_nand/lld_cdma.c:2536:
+		if ((k != i) && (k != ch1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'k != ch1'
#9428: FILE: drivers/staging/mrst_nand/lld_cdma.c:2536:
+		if ((k != i) && (k != ch1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9430: FILE: drivers/staging/mrst_nand/lld_cdma.c:2538:
+			if (!EOLIST(k) && get_sync_ch_pcmd(p, k,
+					chis[k], &sync_num, &ch2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9441: FILE: drivers/staging/mrst_nand/lld_cdma.c:2549:
+				if (!check_ordering(p, m, namb[n][m] + 1,
+					chis[m], n, namb[m][n] + 1, chis[n]))

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#9443: FILE: drivers/staging/mrst_nand/lld_cdma.c:2551:
+						"Above problem occured when "
 						               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9443: FILE: drivers/staging/mrst_nand/lld_cdma.c:2551:
+					nand_dbg_print(NAND_DBG_DEBUG,
+						"Above problem occured when "

WARNING:SPLIT_STRING: quoted string split across lines
#9444: FILE: drivers/staging/mrst_nand/lld_cdma.c:2552:
+						"Above problem occured when "
+						"analyzing sync %d between "

WARNING:SPLIT_STRING: quoted string split across lines
#9445: FILE: drivers/staging/mrst_nand/lld_cdma.c:2553:
+						"analyzing sync %d between "
+						"(ch:%d, indx:%d, tag:%d) & "

WARNING:SPLIT_STRING: quoted string split across lines
#9446: FILE: drivers/staging/mrst_nand/lld_cdma.c:2554:
+						"(ch:%d, indx:%d, tag:%d) & "
+						"(ch:%d, indx:%d, tag:%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9462: FILE: drivers/staging/mrst_nand/lld_cdma.c:2570:
+static int check_for_ording(struct pending_cmd (*p)[MAX_CHANS + MAX_DESCS],
+	int *chis, int *chMaxIndexes, int (*namb)[MAX_CHANS])

CHECK:CAMELCASE: Avoid CamelCase: <syncNum2>
#9464: FILE: drivers/staging/mrst_nand/lld_cdma.c:2572:
+	int i, done, ch1, ch2, syncNum, syncNum2;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9470: FILE: drivers/staging/mrst_nand/lld_cdma.c:2578:
+		if (!EOLIST(i) &&
+			get_sync_ch_pcmd(p, i, chis[i], &syncNum, &ch1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9473: FILE: drivers/staging/mrst_nand/lld_cdma.c:2581:
+			if (!EOLIST(ch1) && get_sync_ch_pcmd(p, ch1,
+					chis[ch1], &syncNum2, &ch2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'syncNum == syncNum2'
#9475: FILE: drivers/staging/mrst_nand/lld_cdma.c:2583:
+				if ((syncNum == syncNum2) &&
+					(syncNum != FORCED_ORDERED_SYNC)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'syncNum != FORCED_ORDERED_SYNC'
#9475: FILE: drivers/staging/mrst_nand/lld_cdma.c:2583:
+				if ((syncNum == syncNum2) &&
+					(syncNum != FORCED_ORDERED_SYNC)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9476: FILE: drivers/staging/mrst_nand/lld_cdma.c:2584:
+				if ((syncNum == syncNum2) &&
+					(syncNum != FORCED_ORDERED_SYNC)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9479: FILE: drivers/staging/mrst_nand/lld_cdma.c:2587:
+						nand_dbg_print(NAND_DBG_DEBUG,
+						"SYNCCHECK: ILLEGAL CASE: "

WARNING:SPLIT_STRING: quoted string split across lines
#9480: FILE: drivers/staging/mrst_nand/lld_cdma.c:2588:
+						"SYNCCHECK: ILLEGAL CASE: "
+						"Channel %d, cmdindx %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9481: FILE: drivers/staging/mrst_nand/lld_cdma.c:2589:
+						"Channel %d, cmdindx %d, "
+						"tag %d is waiting for "

WARNING:SPLIT_STRING: quoted string split across lines
#9482: FILE: drivers/staging/mrst_nand/lld_cdma.c:2590:
+						"tag %d is waiting for "
+						"sync number %d "

WARNING:SPLIT_STRING: quoted string split across lines
#9483: FILE: drivers/staging/mrst_nand/lld_cdma.c:2591:
+						"sync number %d "
+						"from channel %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9484: FILE: drivers/staging/mrst_nand/lld_cdma.c:2592:
+						"from channel %d, "
+						"which is waiting for "

WARNING:SPLIT_STRING: quoted string split across lines
#9485: FILE: drivers/staging/mrst_nand/lld_cdma.c:2593:
+						"which is waiting for "
+						"the same sync number "

WARNING:SPLIT_STRING: quoted string split across lines
#9486: FILE: drivers/staging/mrst_nand/lld_cdma.c:2594:
+						"the same sync number "
+						"from channel %d. "

WARNING:SPLIT_STRING: quoted string split across lines
#9487: FILE: drivers/staging/mrst_nand/lld_cdma.c:2595:
+						"from channel %d. "
+						"Sync checking is aborting\n",

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#9493: FILE: drivers/staging/mrst_nand/lld_cdma.c:2601:
+						if (!(debug_sync_cnt %

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9495: FILE: drivers/staging/mrst_nand/lld_cdma.c:2603:
+							nand_dbg_print(

WARNING:SPLIT_STRING: quoted string split across lines
#9498: FILE: drivers/staging/mrst_nand/lld_cdma.c:2606:
+							"SYNCCHECK: "
+							"syncnum %d "

WARNING:SPLIT_STRING: quoted string split across lines
#9499: FILE: drivers/staging/mrst_nand/lld_cdma.c:2607:
+							"syncnum %d "
+							"betn Ch %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9500: FILE: drivers/staging/mrst_nand/lld_cdma.c:2608:
+							"betn Ch %d, "
+							"cmdindx %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9501: FILE: drivers/staging/mrst_nand/lld_cdma.c:2609:
+							"cmdindx %d, "
+							"tag %d & Ch %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9502: FILE: drivers/staging/mrst_nand/lld_cdma.c:2610:
+							"tag %d & Ch %d, "
+							"cmdindx %d, tag %d. "

WARNING:SPLIT_STRING: quoted string split across lines
#9503: FILE: drivers/staging/mrst_nand/lld_cdma.c:2611:
+							"cmdindx %d, tag %d. "
+							"chis="

WARNING:SPLIT_STRING: quoted string split across lines
#9504: FILE: drivers/staging/mrst_nand/lld_cdma.c:2612:
+							"chis="
+							"{%d, %d, %d, %d}\n",

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#9513: FILE: drivers/staging/mrst_nand/lld_cdma.c:2621:
+						if (!check_ordering(p, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9514: FILE: drivers/staging/mrst_nand/lld_cdma.c:2622:
+						if (!check_ordering(p, i,
+							namb[ch1][i]+1,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9514: FILE: drivers/staging/mrst_nand/lld_cdma.c:2622:
+							namb[ch1][i]+1,
 							            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9516: FILE: drivers/staging/mrst_nand/lld_cdma.c:2624:
+							namb[i][ch1]+1,
 							            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9518: FILE: drivers/staging/mrst_nand/lld_cdma.c:2626:
+							nand_dbg_print(

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#9521: FILE: drivers/staging/mrst_nand/lld_cdma.c:2629:
+							"occured when "
 							 ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#9521: FILE: drivers/staging/mrst_nand/lld_cdma.c:2629:
+							"Above problem "
+							"occured when "

WARNING:SPLIT_STRING: quoted string split across lines
#9522: FILE: drivers/staging/mrst_nand/lld_cdma.c:2630:
+							"occured when "
+							"analyzing "

WARNING:SPLIT_STRING: quoted string split across lines
#9523: FILE: drivers/staging/mrst_nand/lld_cdma.c:2631:
+							"analyzing "
+							"sync %d "

WARNING:SPLIT_STRING: quoted string split across lines
#9524: FILE: drivers/staging/mrst_nand/lld_cdma.c:2632:
+							"sync %d "
+							"between "

WARNING:SPLIT_STRING: quoted string split across lines
#9525: FILE: drivers/staging/mrst_nand/lld_cdma.c:2633:
+							"between "
+							"(ch:%d, indx:%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9526: FILE: drivers/staging/mrst_nand/lld_cdma.c:2634:
+							"(ch:%d, indx:%d, "
+							"tag:%d) & "

WARNING:SPLIT_STRING: quoted string split across lines
#9527: FILE: drivers/staging/mrst_nand/lld_cdma.c:2635:
+							"tag:%d) & "
+							"(ch:%d, indx:%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#9528: FILE: drivers/staging/mrst_nand/lld_cdma.c:2636:
+							"(ch:%d, indx:%d, "
+							"tag:%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9538: FILE: drivers/staging/mrst_nand/lld_cdma.c:2646:
+						cfo_helper_1(p, chis,
+							chMaxIndexes,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9549: FILE: drivers/staging/mrst_nand/lld_cdma.c:2657:
+					cfo_helper_2(p, chis, chMaxIndexes,
+						namb, i, ch1, &indexchgd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9569: FILE: drivers/staging/mrst_nand/lld_cdma.c:2677:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"SYNCCHECK: INIT FAILED: SyncCheck can only "

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#9570: FILE: drivers/staging/mrst_nand/lld_cdma.c:2678:
+			"work with upto 16 cache blocks \n");
 			           ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#9570: FILE: drivers/staging/mrst_nand/lld_cdma.c:2678:
+			"SYNCCHECK: INIT FAILED: SyncCheck can only "
+			"work with upto 16 cache blocks \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9570: FILE: drivers/staging/mrst_nand/lld_cdma.c:2678:
+			"work with upto 16 cache blocks \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9587: FILE: drivers/staging/mrst_nand/lld_cdma.c:2695:
+			nand_dbg_print(NAND_DBG_DEBUG, " %p",
+				Cache.ItemArray[j].pContent);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9603: FILE: drivers/staging/mrst_nand/lld_cdma.c:2711:
+		alldone = check_for_ording(p_cmd_ch, chis, chMaxIndexes,
+					namb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9616: FILE: drivers/staging/mrst_nand/lld_cdma.c:2724:
+			if (!check_ordering(p_cmd_ch, i, namb[k][i] + 1,
+				chMaxIndexes[i] - 1, k, namb[i][k] + 1,

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#9619: FILE: drivers/staging/mrst_nand/lld_cdma.c:2727:
+				"Above problem occured when doing "
 				               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9619: FILE: drivers/staging/mrst_nand/lld_cdma.c:2727:
+				nand_dbg_print(NAND_DBG_DEBUG,
+				"Above problem occured when doing "

WARNING:SPLIT_STRING: quoted string split across lines
#9620: FILE: drivers/staging/mrst_nand/lld_cdma.c:2728:
+				"Above problem occured when doing "
+				"end of list checks on channels %d & %d\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9635: FILE: drivers/staging/mrst_nand/lld_cdma.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#9649: FILE: drivers/staging/mrst_nand/lld_cdma.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#9650: FILE: drivers/staging/mrst_nand/lld_cdma.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9682: FILE: drivers/staging/mrst_nand/lld_cdma.h:48:
+u16 CDMA_Data_CMD(u8 tag, u8 CMD, u8 *data, u32 block,
+			u16 page, u16 count, u16 flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9684: FILE: drivers/staging/mrst_nand/lld_cdma.h:50:
+u16 CDMA_MemCopy_CMD(u8 tag, u8 *dest, u8 *src, u16 ByteCount,
+			u16 flags);

CHECK:CAMELCASE: Avoid CamelCase: <Reserved12>
#9719: FILE: drivers/staging/mrst_nand/lld_cdma.h:85:
+	u32 Reserved12;

CHECK:CAMELCASE: Avoid CamelCase: <Reserved13>
#9720: FILE: drivers/staging/mrst_nand/lld_cdma.h:86:
+	u32 Reserved13;

CHECK:CAMELCASE: Avoid CamelCase: <Reserved14>
#9721: FILE: drivers/staging/mrst_nand/lld_cdma.h:87:
+	u32 Reserved14;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9779: FILE: drivers/staging/mrst_nand/lld_emu.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#9793: FILE: drivers/staging/mrst_nand/lld_emu.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#9794: FILE: drivers/staging/mrst_nand/lld_emu.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9809: FILE: drivers/staging/mrst_nand/lld_emu.c:31:
+#define GLOB_LLD_PAGE_SIZE       (512+16)
                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9842: FILE: drivers/staging/mrst_nand/lld_emu.c:64:
+		printk(KERN_ERR "filp_open error: "

WARNING:SPLIT_STRING: quoted string split across lines
#9843: FILE: drivers/staging/mrst_nand/lld_emu.c:65:
+		printk(KERN_ERR "filp_open error: "
+		       "Unable to open nand emu file!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9850: FILE: drivers/staging/mrst_nand/lld_emu.c:72:
+		printk(KERN_ERR "Can not get valid inode!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9856: FILE: drivers/staging/mrst_nand/lld_emu.c:78:
+		printk(KERN_ERR "Invalid nand emu file size: "

WARNING:SPLIT_STRING: quoted string split across lines
#9857: FILE: drivers/staging/mrst_nand/lld_emu.c:79:
+		printk(KERN_ERR "Invalid nand emu file size: "
+		       "0x%llx\n", nef_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9871: FILE: drivers/staging/mrst_nand/lld_emu.c:93:
+			printk(KERN_ERR "%s, Line %d - "

WARNING:SPLIT_STRING: quoted string split across lines
#9872: FILE: drivers/staging/mrst_nand/lld_emu.c:94:
+			printk(KERN_ERR "%s, Line %d - "
+			       "nand emu file partial read: "

WARNING:SPLIT_STRING: quoted string split across lines
#9873: FILE: drivers/staging/mrst_nand/lld_emu.c:95:
+			       "nand emu file partial read: "
+			       "%d bytes\n", __FILE__, __LINE__, (int)nread);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9905: FILE: drivers/staging/mrst_nand/lld_emu.c:127:
+		printk(KERN_ERR "filp_open error: "

WARNING:SPLIT_STRING: quoted string split across lines
#9906: FILE: drivers/staging/mrst_nand/lld_emu.c:128:
+		printk(KERN_ERR "filp_open error: "
+		       "Unable to open nand emu file!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9913: FILE: drivers/staging/mrst_nand/lld_emu.c:135:
+		printk(KERN_ERR "Invalid " "nef_filp->f_path.dentry value!\n");

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#9913: FILE: drivers/staging/mrst_nand/lld_emu.c:135:
+		printk(KERN_ERR "Invalid " "nef_filp->f_path.dentry value!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9919: FILE: drivers/staging/mrst_nand/lld_emu.c:141:
+		printk(KERN_ERR "Invalid "

WARNING:SPLIT_STRING: quoted string split across lines
#9920: FILE: drivers/staging/mrst_nand/lld_emu.c:142:
+		printk(KERN_ERR "Invalid "
+		       "nand emu file size: 0x%llx\n", nef_size);

WARNING:SPLIT_STRING: quoted string split across lines
#9924: FILE: drivers/staging/mrst_nand/lld_emu.c:146:
+		nand_dbg_print(NAND_DBG_DEBUG, "nand emu file size: "
+			       "%lld\n", nef_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9934: FILE: drivers/staging/mrst_nand/lld_emu.c:156:
+			printk(KERN_ERR "%s, Line %d - "

WARNING:SPLIT_STRING: quoted string split across lines
#9935: FILE: drivers/staging/mrst_nand/lld_emu.c:157:
+			printk(KERN_ERR "%s, Line %d - "
+			       "nand emu file partial write: "

WARNING:SPLIT_STRING: quoted string split across lines
#9936: FILE: drivers/staging/mrst_nand/lld_emu.c:158:
+			       "nand emu file partial write: "
+			       "%d bytes\n", __FILE__, __LINE__, (int)nwritten);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#9950: FILE: drivers/staging/mrst_nand/lld_emu.c:172:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Flash_Init

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9955: FILE: drivers/staging/mrst_nand/lld_emu.c:177:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#9963: FILE: drivers/staging/mrst_nand/lld_emu.c:185:
+	flash_memory[0] = (u8 *)vmalloc(GLOB_LLD_PAGE_SIZE *

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#9968: FILE: drivers/staging/mrst_nand/lld_emu.c:190:
+		printk(KERN_ERR "Fail to allocate memory "

WARNING:SPLIT_STRING: quoted string split across lines
#9969: FILE: drivers/staging/mrst_nand/lld_emu.c:191:
+		printk(KERN_ERR "Fail to allocate memory "
+		       "for nand emulator!\n");

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#9970: FILE: drivers/staging/mrst_nand/lld_emu.c:192:
+		return ERR;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#9986: FILE: drivers/staging/mrst_nand/lld_emu.c:208:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Flash_Release

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9991: FILE: drivers/staging/mrst_nand/lld_emu.c:213:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - u16 emu_Flash_Release() should probably be u16 emu_Flash_Release(void)
#9992: FILE: drivers/staging/mrst_nand/lld_emu.c:214:
+u16 emu_Flash_Release()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10004: FILE: drivers/staging/mrst_nand/lld_emu.c:226:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Read_Device_ID

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10009: FILE: drivers/staging/mrst_nand/lld_emu.c:231:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:SPACING: No space is necessary after a cast
#10028: FILE: drivers/staging/mrst_nand/lld_emu.c:250:
+	DeviceInfo.wDataBlockNum = (u32) (DeviceInfo.wSpectraEndBlock -

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10051: FILE: drivers/staging/mrst_nand/lld_emu.c:273:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Flash_Reset

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10056: FILE: drivers/staging/mrst_nand/lld_emu.c:278:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10066: FILE: drivers/staging/mrst_nand/lld_emu.c:288:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Erase_Block

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10071: FILE: drivers/staging/mrst_nand/lld_emu.c:293:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10080: FILE: drivers/staging/mrst_nand/lld_emu.c:302:
+		printk(KERN_ERR "emu_Erase_Block error! "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emu_Erase_Block', this function's name, in a string
#10080: FILE: drivers/staging/mrst_nand/lld_emu.c:302:
+		printk(KERN_ERR "emu_Erase_Block error! "

WARNING:SPLIT_STRING: quoted string split across lines
#10081: FILE: drivers/staging/mrst_nand/lld_emu.c:303:
+		printk(KERN_ERR "emu_Erase_Block error! "
+		       "Too big block address: %d\n", block_add);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10086: FILE: drivers/staging/mrst_nand/lld_emu.c:308:
+	nand_dbg_print(NAND_DBG_DEBUG, "Erasing block %d\n",
+		(int)block_add);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10100: FILE: drivers/staging/mrst_nand/lld_emu.c:322:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Write_Page_Main

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10108: FILE: drivers/staging/mrst_nand/lld_emu.c:330:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10110: FILE: drivers/staging/mrst_nand/lld_emu.c:332:
+u16 emu_Write_Page_Main(u8 *write_data, u32 Block,
+			   u16 Page, u16 PageCount)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emu_Write_Page_Main', this function's name, in a string
#10123: FILE: drivers/staging/mrst_nand/lld_emu.c:345:
+	nand_dbg_print(NAND_DBG_DEBUG, "emu_Write_Page_Main: "

WARNING:SPLIT_STRING: quoted string split across lines
#10124: FILE: drivers/staging/mrst_nand/lld_emu.c:346:
+	nand_dbg_print(NAND_DBG_DEBUG, "emu_Write_Page_Main: "
+		       "lba %u Page %u PageCount %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#10129: FILE: drivers/staging/mrst_nand/lld_emu.c:351:
+		if (NULL == flash_memory[Block * GLOB_LLD_PAGES + Page]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10130: FILE: drivers/staging/mrst_nand/lld_emu.c:352:
+			printk(KERN_ERR "Run out of memory\n");

CHECK:SPACING: No space is necessary after a cast
#10133: FILE: drivers/staging/mrst_nand/lld_emu.c:355:
+		memcpy((u8 *) (flash_memory[Block * GLOB_LLD_PAGES + Page]),

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10143: FILE: drivers/staging/mrst_nand/lld_emu.c:365:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Read_Page_Main

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10151: FILE: drivers/staging/mrst_nand/lld_emu.c:373:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10153: FILE: drivers/staging/mrst_nand/lld_emu.c:375:
+u16 emu_Read_Page_Main(u8 *read_data, u32 Block,
+			  u16 Page, u16 PageCount)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emu_Read_Page_Main', this function's name, in a string
#10166: FILE: drivers/staging/mrst_nand/lld_emu.c:388:
+	nand_dbg_print(NAND_DBG_DEBUG, "emu_Read_Page_Main: "

WARNING:SPLIT_STRING: quoted string split across lines
#10167: FILE: drivers/staging/mrst_nand/lld_emu.c:389:
+	nand_dbg_print(NAND_DBG_DEBUG, "emu_Read_Page_Main: "
+		       "lba %u Page %u PageCount %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#10172: FILE: drivers/staging/mrst_nand/lld_emu.c:394:
+		if (NULL == flash_memory[Block * GLOB_LLD_PAGES + Page]) {

CHECK:SPACING: No space is necessary after a cast
#10176: FILE: drivers/staging/mrst_nand/lld_emu.c:398:
+			       (u8 *) (flash_memory[Block * GLOB_LLD_PAGES

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10189: FILE: drivers/staging/mrst_nand/lld_emu.c:411:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Read_Page_Main_Spare

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10196: FILE: drivers/staging/mrst_nand/lld_emu.c:418:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10198: FILE: drivers/staging/mrst_nand/lld_emu.c:420:
+u16 emu_Read_Page_Main_Spare(u8 *read_data, u32 Block,
+				u16 Page, u16 PageCount)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10206: FILE: drivers/staging/mrst_nand/lld_emu.c:428:
+		printk(KERN_ERR "Read Page Main+Spare "

WARNING:SPLIT_STRING: quoted string split across lines
#10207: FILE: drivers/staging/mrst_nand/lld_emu.c:429:
+		printk(KERN_ERR "Read Page Main+Spare "
+		       "Error: Block Address too big\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10212: FILE: drivers/staging/mrst_nand/lld_emu.c:434:
+		printk(KERN_ERR "Read Page Main+Spare "

WARNING:SPLIT_STRING: quoted string split across lines
#10213: FILE: drivers/staging/mrst_nand/lld_emu.c:435:
+		printk(KERN_ERR "Read Page Main+Spare "
+		       "Error: Page number too big\n");

WARNING:SPLIT_STRING: quoted string split across lines
#10218: FILE: drivers/staging/mrst_nand/lld_emu.c:440:
+	nand_dbg_print(NAND_DBG_DEBUG, "Read Page Main + Spare - "
+		       "No. of pages %u block %u start page %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#10223: FILE: drivers/staging/mrst_nand/lld_emu.c:445:
+		if (NULL == flash_memory[Block * GLOB_LLD_PAGES + Page]) {

CHECK:SPACING: No space is necessary after a cast
#10226: FILE: drivers/staging/mrst_nand/lld_emu.c:448:
+			memcpy(read_data, (u8 *) (flash_memory[Block *

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10240: FILE: drivers/staging/mrst_nand/lld_emu.c:462:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Write_Page_Main_Spare

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10247: FILE: drivers/staging/mrst_nand/lld_emu.c:469:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10249: FILE: drivers/staging/mrst_nand/lld_emu.c:471:
+u16 emu_Write_Page_Main_Spare(u8 *write_data, u32 Block,
+				 u16 Page, u16 page_count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10257: FILE: drivers/staging/mrst_nand/lld_emu.c:479:
+		printk(KERN_ERR "Write Page Main + Spare "

WARNING:SPLIT_STRING: quoted string split across lines
#10258: FILE: drivers/staging/mrst_nand/lld_emu.c:480:
+		printk(KERN_ERR "Write Page Main + Spare "
+		       "Error: Block Address too big\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10263: FILE: drivers/staging/mrst_nand/lld_emu.c:485:
+		printk(KERN_ERR "Write Page Main + Spare "

WARNING:SPLIT_STRING: quoted string split across lines
#10264: FILE: drivers/staging/mrst_nand/lld_emu.c:486:
+		printk(KERN_ERR "Write Page Main + Spare "
+		       "Error: Page number too big\n");

WARNING:SPLIT_STRING: quoted string split across lines
#10269: FILE: drivers/staging/mrst_nand/lld_emu.c:491:
+	nand_dbg_print(NAND_DBG_DEBUG, "Write Page Main+Spare - "
+		       "No. of pages %u block %u start page %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#10274: FILE: drivers/staging/mrst_nand/lld_emu.c:496:
+		if (NULL == flash_memory[Block * GLOB_LLD_PAGES + Page]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10275: FILE: drivers/staging/mrst_nand/lld_emu.c:497:
+			printk(KERN_ERR "Run out of memory!\n");

CHECK:SPACING: No space is necessary after a cast
#10278: FILE: drivers/staging/mrst_nand/lld_emu.c:500:
+		memcpy((u8 *) (flash_memory[Block * GLOB_LLD_PAGES + Page]),

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10288: FILE: drivers/staging/mrst_nand/lld_emu.c:510:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Write_Page_Spare

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10295: FILE: drivers/staging/mrst_nand/lld_emu.c:517:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10297: FILE: drivers/staging/mrst_nand/lld_emu.c:519:
+u16 emu_Write_Page_Spare(u8 *write_data, u32 Block,
+			    u16 Page, u16 PageCount)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10303: FILE: drivers/staging/mrst_nand/lld_emu.c:525:
+		printk(KERN_ERR "Read Page Spare Error: "

WARNING:SPLIT_STRING: quoted string split across lines
#10304: FILE: drivers/staging/mrst_nand/lld_emu.c:526:
+		printk(KERN_ERR "Read Page Spare Error: "
+		       "Block Address too big\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10309: FILE: drivers/staging/mrst_nand/lld_emu.c:531:
+		printk(KERN_ERR "Read Page Spare Error: "

WARNING:SPLIT_STRING: quoted string split across lines
#10310: FILE: drivers/staging/mrst_nand/lld_emu.c:532:
+		printk(KERN_ERR "Read Page Spare Error: "
+		       "Page number too big\n");

WARNING:SPLIT_STRING: quoted string split across lines
#10315: FILE: drivers/staging/mrst_nand/lld_emu.c:537:
+	nand_dbg_print(NAND_DBG_DEBUG, "Write Page Spare- "
+		       "block %u page %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#10318: FILE: drivers/staging/mrst_nand/lld_emu.c:540:
+	if (NULL == flash_memory[Block * GLOB_LLD_PAGES + Page]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10319: FILE: drivers/staging/mrst_nand/lld_emu.c:541:
+		printk(KERN_ERR "Run out of memory!\n");

CHECK:SPACING: No space is necessary after a cast
#10323: FILE: drivers/staging/mrst_nand/lld_emu.c:545:
+	memcpy((u8 *) (flash_memory[Block * GLOB_LLD_PAGES + Page] +

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10331: FILE: drivers/staging/mrst_nand/lld_emu.c:553:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Read_Page_Spare

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10338: FILE: drivers/staging/mrst_nand/lld_emu.c:560:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10340: FILE: drivers/staging/mrst_nand/lld_emu.c:562:
+u16 emu_Read_Page_Spare(u8 *write_data, u32 Block,
+			   u16 Page, u16 PageCount)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10346: FILE: drivers/staging/mrst_nand/lld_emu.c:568:
+		printk(KERN_ERR "Read Page Spare "

WARNING:SPLIT_STRING: quoted string split across lines
#10347: FILE: drivers/staging/mrst_nand/lld_emu.c:569:
+		printk(KERN_ERR "Read Page Spare "
+		       "Error: Block Address too big\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10352: FILE: drivers/staging/mrst_nand/lld_emu.c:574:
+		printk(KERN_ERR "Read Page Spare "

WARNING:SPLIT_STRING: quoted string split across lines
#10353: FILE: drivers/staging/mrst_nand/lld_emu.c:575:
+		printk(KERN_ERR "Read Page Spare "
+		       "Error: Page number too big\n");

WARNING:SPLIT_STRING: quoted string split across lines
#10358: FILE: drivers/staging/mrst_nand/lld_emu.c:580:
+	nand_dbg_print(NAND_DBG_DEBUG, "Read Page Spare- "
+		       "block %u page %u\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#10361: FILE: drivers/staging/mrst_nand/lld_emu.c:583:
+	if (NULL == flash_memory[Block * GLOB_LLD_PAGES + Page]) {

CHECK:SPACING: No space is necessary after a cast
#10366: FILE: drivers/staging/mrst_nand/lld_emu.c:588:
+		       (u8 *) (flash_memory[Block * GLOB_LLD_PAGES + Page]

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10375: FILE: drivers/staging/mrst_nand/lld_emu.c:597:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Enable_Disable_Interrupts

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10379: FILE: drivers/staging/mrst_nand/lld_emu.c:601:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10393: FILE: drivers/staging/mrst_nand/lld_emu.c:615:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Support for CDMA functions

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10400: FILE: drivers/staging/mrst_nand/lld_emu.c:622:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10435: FILE: drivers/staging/mrst_nand/lld_emu.c:657:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     CDMA_Execute_CMDs

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10439: FILE: drivers/staging/mrst_nand/lld_emu.c:661:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:SPLIT_STRING: quoted string split across lines
#10454: FILE: drivers/staging/mrst_nand/lld_emu.c:676:
+	nand_dbg_print(NAND_DBG_TRACE, "At start of Execute CMDs: "
+		       "Tag Count %u\n", tag_count);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#10551: FILE: drivers/staging/mrst_nand/lld_emu.c:773:
+/*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+* Function:     emu_Event_Status

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10555: FILE: drivers/staging/mrst_nand/lld_emu.c:777:
+*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#10573: FILE: drivers/staging/mrst_nand/lld_emu.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10587: FILE: drivers/staging/mrst_nand/lld_emu.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10588: FILE: drivers/staging/mrst_nand/lld_emu.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10599: FILE: drivers/staging/mrst_nand/lld_emu.h:27:
+extern u16 emu_Flash_Reset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10600: FILE: drivers/staging/mrst_nand/lld_emu.h:28:
+extern u16 emu_Flash_Init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10601: FILE: drivers/staging/mrst_nand/lld_emu.h:29:
+extern u16 emu_Flash_Release(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10602: FILE: drivers/staging/mrst_nand/lld_emu.h:30:
+extern u16 emu_Read_Device_ID(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10603: FILE: drivers/staging/mrst_nand/lld_emu.h:31:
+extern u16 emu_Erase_Block(u32 block_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10604: FILE: drivers/staging/mrst_nand/lld_emu.h:32:
+extern u16 emu_Write_Page_Main(u8 *write_data, u32 Block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10605: FILE: drivers/staging/mrst_nand/lld_emu.h:33:
+extern u16 emu_Write_Page_Main(u8 *write_data, u32 Block,
+				u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10606: FILE: drivers/staging/mrst_nand/lld_emu.h:34:
+extern u16 emu_Read_Page_Main(u8 *read_data, u32 Block, u16 Page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10607: FILE: drivers/staging/mrst_nand/lld_emu.h:35:
+extern u16 emu_Read_Page_Main(u8 *read_data, u32 Block, u16 Page,
+				 u16 PageCount);

CHECK:CAMELCASE: Avoid CamelCase: <emu_Event_Status>
#10608: FILE: drivers/staging/mrst_nand/lld_emu.h:36:
+extern u16 emu_Event_Status(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10608: FILE: drivers/staging/mrst_nand/lld_emu.h:36:
+extern u16 emu_Event_Status(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10609: FILE: drivers/staging/mrst_nand/lld_emu.h:37:
+extern void emu_Enable_Disable_Interrupts(u16 INT_ENABLE);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10610: FILE: drivers/staging/mrst_nand/lld_emu.h:38:
+extern u16 emu_Write_Page_Main_Spare(u8 *write_data, u32 Block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10611: FILE: drivers/staging/mrst_nand/lld_emu.h:39:
+extern u16 emu_Write_Page_Main_Spare(u8 *write_data, u32 Block,
+					u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10612: FILE: drivers/staging/mrst_nand/lld_emu.h:40:
+extern u16 emu_Write_Page_Spare(u8 *write_data, u32 Block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10613: FILE: drivers/staging/mrst_nand/lld_emu.h:41:
+extern u16 emu_Write_Page_Spare(u8 *write_data, u32 Block,
+					u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10614: FILE: drivers/staging/mrst_nand/lld_emu.h:42:
+extern u16 emu_Read_Page_Main_Spare(u8 *read_data, u32 Block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10615: FILE: drivers/staging/mrst_nand/lld_emu.h:43:
+extern u16 emu_Read_Page_Main_Spare(u8 *read_data, u32 Block,
+				       u16 Page, u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10616: FILE: drivers/staging/mrst_nand/lld_emu.h:44:
+extern u16 emu_Read_Page_Spare(u8 *read_data, u32 Block, u16 Page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10617: FILE: drivers/staging/mrst_nand/lld_emu.h:45:
+extern u16 emu_Read_Page_Spare(u8 *read_data, u32 Block, u16 Page,
+				  u16 PageCount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#10618: FILE: drivers/staging/mrst_nand/lld_emu.h:46:
+extern u16 emu_Get_Bad_Block(u32 block);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#10630: FILE: drivers/staging/mrst_nand/lld_nand.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10644: FILE: drivers/staging/mrst_nand/lld_nand.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10645: FILE: drivers/staging/mrst_nand/lld_nand.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#10664: FILE: drivers/staging/mrst_nand/lld_nand.c:35:
+#define SPECTRA_NAND_NAME    "nd"
                               ^^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#10666: FILE: drivers/staging/mrst_nand/lld_nand.c:37:
+#define CEIL_DIV(X, Y) (((X)%(Y)) ? ((X)/(Y)+1) : ((X)/(Y)))
                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#10666: FILE: drivers/staging/mrst_nand/lld_nand.c:37:
+#define CEIL_DIV(X, Y) (((X)%(Y)) ? ((X)/(Y)+1) : ((X)/(Y)))
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#10666: FILE: drivers/staging/mrst_nand/lld_nand.c:37:
+#define CEIL_DIV(X, Y) (((X)%(Y)) ? ((X)/(Y)+1) : ((X)/(Y)))
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#10666: FILE: drivers/staging/mrst_nand/lld_nand.c:37:
+#define CEIL_DIV(X, Y) (((X)%(Y)) ? ((X)/(Y)+1) : ((X)/(Y)))
                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'X' - possible side-effects?
#10666: FILE: drivers/staging/mrst_nand/lld_nand.c:37:
+#define CEIL_DIV(X, Y) (((X)%(Y)) ? ((X)/(Y)+1) : ((X)/(Y)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Y' - possible side-effects?
#10666: FILE: drivers/staging/mrst_nand/lld_nand.c:37:
+#define CEIL_DIV(X, Y) (((X)%(Y)) ? ((X)/(Y)+1) : ((X)/(Y)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10696: FILE: drivers/staging/mrst_nand/lld_nand.c:67:
+ * in the < 4kB Linux kernel stack */

CHECK:CAMELCASE: Avoid CamelCase: <pReadSpareBuf>
#10699: FILE: drivers/staging/mrst_nand/lld_nand.c:70:
+static u8 pReadSpareBuf[MAX_PAGE_SPARE_AREA];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10751: FILE: drivers/staging/mrst_nand/lld_nand.c:122:
+		status = NAND_Read_Page_Spare(pReadSpareBuf, block,
+			DeviceInfo.wPagesPerBlock - page , 1);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#10751: FILE: drivers/staging/mrst_nand/lld_nand.c:122:
+			DeviceInfo.wPagesPerBlock - page , 1);
 			                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10762: FILE: drivers/staging/mrst_nand/lld_nand.c:133:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Trea>
#10800: FILE: drivers/staging/mrst_nand/lld_nand.c:171:
+	u16 Trea[6] = {40, 30, 25, 20, 20, 16};

CHECK:CAMELCASE: Avoid CamelCase: <Trp>
#10801: FILE: drivers/staging/mrst_nand/lld_nand.c:172:
+	u16 Trp[6] = {50, 25, 17, 15, 12, 10};

CHECK:CAMELCASE: Avoid CamelCase: <Treh>
#10802: FILE: drivers/staging/mrst_nand/lld_nand.c:173:
+	u16 Treh[6] = {30, 15, 15, 10, 10, 7};

CHECK:CAMELCASE: Avoid CamelCase: <Trc>
#10803: FILE: drivers/staging/mrst_nand/lld_nand.c:174:
+	u16 Trc[6] = {100, 50, 35, 30, 25, 20};

CHECK:CAMELCASE: Avoid CamelCase: <Trhoh>
#10804: FILE: drivers/staging/mrst_nand/lld_nand.c:175:
+	u16 Trhoh[6] = {0, 15, 15, 15, 15, 15};

CHECK:CAMELCASE: Avoid CamelCase: <Trloh>
#10805: FILE: drivers/staging/mrst_nand/lld_nand.c:176:
+	u16 Trloh[6] = {0, 0, 0, 0, 5, 5};

CHECK:CAMELCASE: Avoid CamelCase: <Tcea>
#10806: FILE: drivers/staging/mrst_nand/lld_nand.c:177:
+	u16 Tcea[6] = {100, 45, 30, 25, 25, 25};

CHECK:CAMELCASE: Avoid CamelCase: <Tadl>
#10807: FILE: drivers/staging/mrst_nand/lld_nand.c:178:
+	u16 Tadl[6] = {200, 100, 100, 100, 70, 70};

CHECK:CAMELCASE: Avoid CamelCase: <Trhw>
#10808: FILE: drivers/staging/mrst_nand/lld_nand.c:179:
+	u16 Trhw[6] = {200, 100, 100, 100, 100, 100};

CHECK:CAMELCASE: Avoid CamelCase: <Trhz>
#10809: FILE: drivers/staging/mrst_nand/lld_nand.c:180:
+	u16 Trhz[6] = {200, 100, 100, 100, 100, 100};

CHECK:CAMELCASE: Avoid CamelCase: <Twhr>
#10810: FILE: drivers/staging/mrst_nand/lld_nand.c:181:
+	u16 Twhr[6] = {120, 80, 80, 60, 60, 60};

CHECK:CAMELCASE: Avoid CamelCase: <Tcs>
#10811: FILE: drivers/staging/mrst_nand/lld_nand.c:182:
+	u16 Tcs[6] = {70, 35, 25, 25, 20, 15};

CHECK:CAMELCASE: Avoid CamelCase: <TclsRising>
#10813: FILE: drivers/staging/mrst_nand/lld_nand.c:184:
+	u16 TclsRising = 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10859: FILE: drivers/staging/mrst_nand/lld_nand.c:230:
+		nand_dbg_print(NAND_DBG_WARN, "%s, Line %d: Warning!\n",
+			__FILE__, __LINE__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DeviceInfo.wECCBytesPerSector'
#10914: FILE: drivers/staging/mrst_nand/lld_nand.c:285:
+		if ((DeviceInfo.wECCBytesPerSector) % 2 == 0)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#10927: FILE: drivers/staging/mrst_nand/lld_nand.c:298:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10954: FILE: drivers/staging/mrst_nand/lld_nand.c:325:
+			iowrite32(DEVICE_RESET__BANK2,
+				FlashReg + DEVICE_RESET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10964: FILE: drivers/staging/mrst_nand/lld_nand.c:335:
+				iowrite32(DEVICE_RESET__BANK3,
+					FlashReg + DEVICE_RESET);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10971: FILE: drivers/staging/mrst_nand/lld_nand.c:342:
+				printk(KERN_ERR "Getting a time out for bank 2!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#10974: FILE: drivers/staging/mrst_nand/lld_nand.c:345:
+			printk(KERN_ERR "Getting a time out for bank 1!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11044: FILE: drivers/staging/mrst_nand/lld_nand.c:415:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"ID bytes: 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11068: FILE: drivers/staging/mrst_nand/lld_nand.c:439:
+		nand_dbg_print(NAND_DBG_DEBUG,
+			"Return 1st ID for bank[%d]: %x\n", i, id[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11082: FILE: drivers/staging/mrst_nand/lld_nand.c:453:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"totalUsedBanks: %d\n", totalUsedBanks);

CHECK:SPACING: space preferred before that '+' (ctx:ExE)
#11094: FILE: drivers/staging/mrst_nand/lld_nand.c:465:
+			    +
 			    ^

CHECK:SPACING: space preferred before that '+' (ctx:ExE)
#11102: FILE: drivers/staging/mrst_nand/lld_nand.c:473:
+			    +
 			    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11140: FILE: drivers/staging/mrst_nand/lld_nand.c:511:
+	nand_dbg_print(NAND_DBG_DEBUG, "DeviceMaker: 0x%x\n",
+		DeviceInfo.wDeviceMaker);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11142: FILE: drivers/staging/mrst_nand/lld_nand.c:513:
+	nand_dbg_print(NAND_DBG_DEBUG, "DeviceType: 0x%x\n",
+		DeviceInfo.wDeviceType);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11144: FILE: drivers/staging/mrst_nand/lld_nand.c:515:
+	nand_dbg_print(NAND_DBG_DEBUG, "SpectraStartBlock: %d\n",
+		DeviceInfo.wSpectraStartBlock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11146: FILE: drivers/staging/mrst_nand/lld_nand.c:517:
+	nand_dbg_print(NAND_DBG_DEBUG, "SpectraEndBlock: %d\n",
+		DeviceInfo.wSpectraEndBlock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11148: FILE: drivers/staging/mrst_nand/lld_nand.c:519:
+	nand_dbg_print(NAND_DBG_DEBUG, "TotalBlocks: %d\n",
+		DeviceInfo.wTotalBlocks);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11150: FILE: drivers/staging/mrst_nand/lld_nand.c:521:
+	nand_dbg_print(NAND_DBG_DEBUG, "PagesPerBlock: %d\n",
+		DeviceInfo.wPagesPerBlock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11152: FILE: drivers/staging/mrst_nand/lld_nand.c:523:
+	nand_dbg_print(NAND_DBG_DEBUG, "PageSize: %d\n",
+		DeviceInfo.wPageSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11154: FILE: drivers/staging/mrst_nand/lld_nand.c:525:
+	nand_dbg_print(NAND_DBG_DEBUG, "PageDataSize: %d\n",
+		DeviceInfo.wPageDataSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11156: FILE: drivers/staging/mrst_nand/lld_nand.c:527:
+	nand_dbg_print(NAND_DBG_DEBUG, "PageSpareSize: %d\n",
+		DeviceInfo.wPageSpareSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11158: FILE: drivers/staging/mrst_nand/lld_nand.c:529:
+	nand_dbg_print(NAND_DBG_DEBUG, "NumPageSpareFlag: %d\n",
+		DeviceInfo.wNumPageSpareFlag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11160: FILE: drivers/staging/mrst_nand/lld_nand.c:531:
+	nand_dbg_print(NAND_DBG_DEBUG, "ECCBytesPerSector: %d\n",
+		DeviceInfo.wECCBytesPerSector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11162: FILE: drivers/staging/mrst_nand/lld_nand.c:533:
+	nand_dbg_print(NAND_DBG_DEBUG, "BlockSize: %d\n",
+		DeviceInfo.wBlockSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11164: FILE: drivers/staging/mrst_nand/lld_nand.c:535:
+	nand_dbg_print(NAND_DBG_DEBUG, "BlockDataSize: %d\n",
+		DeviceInfo.wBlockDataSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11166: FILE: drivers/staging/mrst_nand/lld_nand.c:537:
+	nand_dbg_print(NAND_DBG_DEBUG, "DataBlockNum: %d\n",
+		DeviceInfo.wDataBlockNum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11168: FILE: drivers/staging/mrst_nand/lld_nand.c:539:
+	nand_dbg_print(NAND_DBG_DEBUG, "PlaneNum: %d\n",
+		DeviceInfo.bPlaneNum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11170: FILE: drivers/staging/mrst_nand/lld_nand.c:541:
+	nand_dbg_print(NAND_DBG_DEBUG, "DeviceMainAreaSize: %d\n",
+		DeviceInfo.wDeviceMainAreaSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11172: FILE: drivers/staging/mrst_nand/lld_nand.c:543:
+	nand_dbg_print(NAND_DBG_DEBUG, "DeviceSpareAreaSize: %d\n",
+		DeviceInfo.wDeviceSpareAreaSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11174: FILE: drivers/staging/mrst_nand/lld_nand.c:545:
+	nand_dbg_print(NAND_DBG_DEBUG, "DevicesConnected: %d\n",
+		DeviceInfo.wDevicesConnected);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11176: FILE: drivers/staging/mrst_nand/lld_nand.c:547:
+	nand_dbg_print(NAND_DBG_DEBUG, "DeviceWidth: %d\n",
+		DeviceInfo.wDeviceWidth);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11178: FILE: drivers/staging/mrst_nand/lld_nand.c:549:
+	nand_dbg_print(NAND_DBG_DEBUG, "HWRevision: 0x%x\n",
+		DeviceInfo.wHWRevision);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11180: FILE: drivers/staging/mrst_nand/lld_nand.c:551:
+	nand_dbg_print(NAND_DBG_DEBUG, "HWFeatures: 0x%x\n",
+		DeviceInfo.wHWFeatures);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11182: FILE: drivers/staging/mrst_nand/lld_nand.c:553:
+	nand_dbg_print(NAND_DBG_DEBUG, "ONFIDevFeatures: 0x%x\n",
+		DeviceInfo.wONFIDevFeatures);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11184: FILE: drivers/staging/mrst_nand/lld_nand.c:555:
+	nand_dbg_print(NAND_DBG_DEBUG, "ONFIOptCommands: 0x%x\n",
+		DeviceInfo.wONFIOptCommands);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11186: FILE: drivers/staging/mrst_nand/lld_nand.c:557:
+	nand_dbg_print(NAND_DBG_DEBUG, "ONFITimingMode: 0x%x\n",
+		DeviceInfo.wONFITimingMode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11188: FILE: drivers/staging/mrst_nand/lld_nand.c:559:
+	nand_dbg_print(NAND_DBG_DEBUG, "ONFIPgmCacheTimingMode: 0x%x\n",
+		DeviceInfo.wONFIPgmCacheTimingMode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11190: FILE: drivers/staging/mrst_nand/lld_nand.c:561:
+	nand_dbg_print(NAND_DBG_DEBUG, "MLCDevice: %s\n",
+		DeviceInfo.MLCDevice ? "Yes" : "No");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11192: FILE: drivers/staging/mrst_nand/lld_nand.c:563:
+	nand_dbg_print(NAND_DBG_DEBUG, "SpareSkipBytes: %d\n",
+		DeviceInfo.wSpareSkipBytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11194: FILE: drivers/staging/mrst_nand/lld_nand.c:565:
+	nand_dbg_print(NAND_DBG_DEBUG, "BitsInPageNumber: %d\n",
+		DeviceInfo.nBitsInPageNumber);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11196: FILE: drivers/staging/mrst_nand/lld_nand.c:567:
+	nand_dbg_print(NAND_DBG_DEBUG, "BitsInPageDataSize: %d\n",
+		DeviceInfo.nBitsInPageDataSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11198: FILE: drivers/staging/mrst_nand/lld_nand.c:569:
+	nand_dbg_print(NAND_DBG_DEBUG, "BitsInBlockDataSize: %d\n",
+		DeviceInfo.nBitsInBlockDataSize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11264: FILE: drivers/staging/mrst_nand/lld_nand.c:635:
+	if ((ioread32(FlashReg + DEVICE_MAIN_AREA_SIZE) < 4096) ||
+		(ioread32(FlashReg + DEVICE_SPARE_AREA_SIZE) <= 128))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11269: FILE: drivers/staging/mrst_nand/lld_nand.c:640:
+	nand_dbg_print(NAND_DBG_DEBUG, "FEATURES register value: 0x%x\n",
+		ioread32(FlashReg + FEATURES));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11271: FILE: drivers/staging/mrst_nand/lld_nand.c:642:
+	nand_dbg_print(NAND_DBG_DEBUG, "ECC_CORRECTION register value: 0x%x\n",
+		ioread32(FlashReg + ECC_CORRECTION));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11275: FILE: drivers/staging/mrst_nand/lld_nand.c:646:
+	if ((ioread32(FlashReg + MANUFACTURER_ID) == 0x98) &&
+		(ioread32(FlashReg + DEVICE_MAIN_AREA_SIZE) == 4096) &&

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#11299: FILE: drivers/staging/mrst_nand/lld_nand.c:670:
+		if (FAIL == get_onfi_nand_para())

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#11303: FILE: drivers/staging/mrst_nand/lld_nand.c:674:
+	} else {
[...]
+	u8 *tsba_ptr = (u8 *)GLOB_DEVTSBA_ALT_BLK_ADD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#11306: FILE: drivers/staging/mrst_nand/lld_nand.c:677:
+	u8 *tsba_ptr = (u8 *)GLOB_DEVTSBA_ALT_BLK_ADD;
+	DeviceInfo.wTotalBlocks = (1 << *tsba_ptr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11391: FILE: drivers/staging/mrst_nand/lld_nand.c:762:
+		iowrite32(INTR_STATUS0__ERASE_COMP | INTR_STATUS0__ERASE_FAIL,
+			FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11405: FILE: drivers/staging/mrst_nand/lld_nand.c:776:
+		iowrite32(INTR_STATUS0__ERASE_COMP | INTR_STATUS0__ERASE_FAIL,
+			FlashReg + intr_status);

CHECK:CAMELCASE: Avoid CamelCase: <Boundary_Check_Block_Page>
#11411: FILE: drivers/staging/mrst_nand/lld_nand.c:782:
+static u32 Boundary_Check_Block_Page(u32 block, u16 page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11412: FILE: drivers/staging/mrst_nand/lld_nand.c:783:
+static u32 Boundary_Check_Block_Page(u32 block, u16 page,
+						u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11426: FILE: drivers/staging/mrst_nand/lld_nand.c:797:
+u16 NAND_Read_Page_Spare(u8 *read_data, u32 block, u16 page,
+			    u16 page_count)

CHECK:CAMELCASE: Avoid CamelCase: <spareFlagBytes>
#11432: FILE: drivers/staging/mrst_nand/lld_nand.c:803:
+	u32 spareFlagBytes = DeviceInfo.wNumPageSpareFlag;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#11439: FILE: drivers/staging/mrst_nand/lld_nand.c:810:
+		printk(KERN_ERR "block too big: %d\n", (int)block);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#11444: FILE: drivers/staging/mrst_nand/lld_nand.c:815:
+		printk(KERN_ERR "page too big: %d\n", page);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#11449: FILE: drivers/staging/mrst_nand/lld_nand.c:820:
+		printk(KERN_ERR "page count too big: %d\n", page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11462: FILE: drivers/staging/mrst_nand/lld_nand.c:833:
+		iowrite32(ioread32(FlashReg + intr_status),
+			FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11503: FILE: drivers/staging/mrst_nand/lld_nand.c:874:
+u16 NAND_Write_Page_Spare(u8 *write_data, u32 block, u16 page,
+			     u16 page_count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#11505: FILE: drivers/staging/mrst_nand/lld_nand.c:876:
+	printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'NAND_Write_Page_Spare', this function's name, in a string
#11506: FILE: drivers/staging/mrst_nand/lld_nand.c:877:
+	       "Error! This function (NAND_Write_Page_Spare) should never"

WARNING:SPLIT_STRING: quoted string split across lines
#11507: FILE: drivers/staging/mrst_nand/lld_nand.c:878:
+	       "Error! This function (NAND_Write_Page_Spare) should never"
+		" be called!\n");

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ERR)
#11508: FILE: drivers/staging/mrst_nand/lld_nand.c:879:
+	return ERR;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11514: FILE: drivers/staging/mrst_nand/lld_nand.c:885:
+static void ddma_trans(u8 *data, u64 flash_add,
+			u32 flash_bank, int op, u32 numPages)

CHECK:CAMELCASE: Avoid CamelCase: <numPages>
#11514: FILE: drivers/staging/mrst_nand/lld_nand.c:885:
+			u32 flash_bank, int op, u32 numPages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11547: FILE: drivers/staging/mrst_nand/lld_nand.c:918:
+			nand_dbg_print(NAND_DBG_WARN,
+				"the first non-0xff data byte is: %d\n", i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11563: FILE: drivers/staging/mrst_nand/lld_nand.c:934:
+static int do_ecc_new(unsigned long bank, u8 *buf,
+				u32 block, u16 page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11589: FILE: drivers/staging/mrst_nand/lld_nand.c:960:
+			nand_dbg_print(NAND_DBG_WARN,
+				"%s, Line %d Uncorrectable ECC error "

WARNING:SPLIT_STRING: quoted string split across lines
#11590: FILE: drivers/staging/mrst_nand/lld_nand.c:961:
+				"%s, Line %d Uncorrectable ECC error "
+				"when read block %d page %d."

WARNING:SPLIT_STRING: quoted string split across lines
#11591: FILE: drivers/staging/mrst_nand/lld_nand.c:962:
+				"when read block %d page %d."
+				"PTN_INTR register: 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#11592: FILE: drivers/staging/mrst_nand/lld_nand.c:963:
+				"PTN_INTR register: 0x%x "
+				"err_page: %d, err_sect: %d, err_byte: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#11593: FILE: drivers/staging/mrst_nand/lld_nand.c:964:
+				"err_page: %d, err_sect: %d, err_byte: %d, "
+				"err_dev: %d, ecc_sect_size: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#11594: FILE: drivers/staging/mrst_nand/lld_nand.c:965:
+				"err_dev: %d, ecc_sect_size: %d, "
+				"err_fix_info: 0x%x\n",

WARNING:SPLIT_STRING: quoted string split across lines
#11602: FILE: drivers/staging/mrst_nand/lld_nand.c:973:
+				nand_dbg_print(NAND_DBG_WARN, "%s, Line %d"
+					       "All 0xff!\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#11602: FILE: drivers/staging/mrst_nand/lld_nand.c:973:
+				nand_dbg_print(NAND_DBG_WARN, "%s, Line %d"
+					       "All 0xff!\n",

WARNING:SPLIT_STRING: quoted string split across lines
#11606: FILE: drivers/staging/mrst_nand/lld_nand.c:977:
+				nand_dbg_print(NAND_DBG_WARN, "%s, Line %d"
+					       "Not all 0xff!\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#11606: FILE: drivers/staging/mrst_nand/lld_nand.c:977:
+				nand_dbg_print(NAND_DBG_WARN, "%s, Line %d"
+					       "Not all 0xff!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11612: FILE: drivers/staging/mrst_nand/lld_nand.c:983:
+			nand_dbg_print(NAND_DBG_WARN,
+				"%s, Line %d Found ECC error "

WARNING:SPLIT_STRING: quoted string split across lines
#11613: FILE: drivers/staging/mrst_nand/lld_nand.c:984:
+				"%s, Line %d Found ECC error "
+				"when read block %d page %d."

WARNING:SPLIT_STRING: quoted string split across lines
#11614: FILE: drivers/staging/mrst_nand/lld_nand.c:985:
+				"when read block %d page %d."
+				"err_page: %d, err_sect: %d, err_byte: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#11615: FILE: drivers/staging/mrst_nand/lld_nand.c:986:
+				"err_page: %d, err_sect: %d, err_byte: %d, "
+				"err_dev: %d, ecc_sect_size: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#11616: FILE: drivers/staging/mrst_nand/lld_nand.c:987:
+				"err_dev: %d, ecc_sect_size: %d, "
+				"err_fix_info: 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11633: FILE: drivers/staging/mrst_nand/lld_nand.c:1004:
+				nand_dbg_print(NAND_DBG_WARN,
+					"!!!Error - Too big err_byte!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11642: FILE: drivers/staging/mrst_nand/lld_nand.c:1013:
+u16 NAND_Read_Page_Main_Polling(u8 *read_data,
+		u32 block, u16 page, u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11671: FILE: drivers/staging/mrst_nand/lld_nand.c:1042:
+			status = NAND_Multiplane_Read(read_data,
+						block, page, page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11674: FILE: drivers/staging/mrst_nand/lld_nand.c:1045:
+			status = NAND_Pipeline_Read_Ahead_Polling(read_data,
+						block, page, page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11696: FILE: drivers/staging/mrst_nand/lld_nand.c:1067:
+			iowrite32(INTR_STATUS0__ECC_ERR,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11698: FILE: drivers/staging/mrst_nand/lld_nand.c:1069:
+			status = do_ecc_new(flash_bank, read_data,
+					block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11710: FILE: drivers/staging/mrst_nand/lld_nand.c:1081:
+			iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11714: FILE: drivers/staging/mrst_nand/lld_nand.c:1085:
+			iowrite32(INTR_STATUS0__ECC_ERR,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11732: FILE: drivers/staging/mrst_nand/lld_nand.c:1103:
+u16 NAND_Pipeline_Read_Ahead_Polling(u8 *read_data,
+			u32 block, u16 page, u16 page_count)

CHECK:CAMELCASE: Avoid CamelCase: <NumPages>
#11735: FILE: drivers/staging/mrst_nand/lld_nand.c:1106:
+	u32 NumPages = page_count;

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#11752: FILE: drivers/staging/mrst_nand/lld_nand.c:1123:
+		*DeviceInfo.wBlockDataSize +
 		^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11760: FILE: drivers/staging/mrst_nand/lld_nand.c:1131:
+		iowrite32(ioread32(FlashReg + intr_status),
+			FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11781: FILE: drivers/staging/mrst_nand/lld_nand.c:1152:
+					iowrite32(INTR_STATUS0__ECC_ERR,
+						FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11783: FILE: drivers/staging/mrst_nand/lld_nand.c:1154:
+					status = do_ecc_new(flash_bank,
+						read_data, block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11787: FILE: drivers/staging/mrst_nand/lld_nand.c:1158:
+					iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+						FlashReg + intr_status);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#11789: FILE: drivers/staging/mrst_nand/lld_nand.c:1160:
+					if (1 == ecc_done_OR_dma_comp)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#11795: FILE: drivers/staging/mrst_nand/lld_nand.c:1166:
+					iowrite32(

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#11799: FILE: drivers/staging/mrst_nand/lld_nand.c:1170:
+					if (1 == ecc_done_OR_dma_comp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11810: FILE: drivers/staging/mrst_nand/lld_nand.c:1181:
+				iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+					FlashReg + intr_status);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#11819: FILE: drivers/staging/mrst_nand/lld_nand.c:1190:
+
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11822: FILE: drivers/staging/mrst_nand/lld_nand.c:1193:
+		iowrite32(ioread32(FlashReg + intr_status),
+			FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11833: FILE: drivers/staging/mrst_nand/lld_nand.c:1204:
+u16 NAND_Read_Page_Main(u8 *read_data, u32 block, u16 page,
+			   u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11867: FILE: drivers/staging/mrst_nand/lld_nand.c:1238:
+			status = NAND_Multiplane_Read(read_data,
+						block, page, page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11870: FILE: drivers/staging/mrst_nand/lld_nand.c:1241:
+			status = NAND_Pipeline_Read_Ahead(read_data,
+						block, page, page_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#11896: FILE: drivers/staging/mrst_nand/lld_nand.c:1267:
+		printk(KERN_ERR "Wait for completion timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#11897: FILE: drivers/staging/mrst_nand/lld_nand.c:1268:
+		printk(KERN_ERR "Wait for completion timeout "
+			"in %s, Line %d\n", __FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11929: FILE: drivers/staging/mrst_nand/lld_nand.c:1300:
+			iowrite32(INTR_STATUS0__ECC_ERR,
+					FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11931: FILE: drivers/staging/mrst_nand/lld_nand.c:1302:
+			status = do_ecc_new(flash_bank, read_data,
+						block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11943: FILE: drivers/staging/mrst_nand/lld_nand.c:1314:
+			iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11947: FILE: drivers/staging/mrst_nand/lld_nand.c:1318:
+			iowrite32(INTR_STATUS0__ECC_ERR,
+				FlashReg + intr_status);

CHECK:CAMELCASE: Avoid CamelCase: <Conv_Spare_Data_Log2Phy_Format>
#11955: FILE: drivers/staging/mrst_nand/lld_nand.c:1326:
+void Conv_Spare_Data_Log2Phy_Format(u8 *data)

CHECK:CAMELCASE: Avoid CamelCase: <PageSpareSize>
#11963: FILE: drivers/staging/mrst_nand/lld_nand.c:1334:
+			data[PageSpareSize - spareFlagBytes + i] = data[i];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#11979: FILE: drivers/staging/mrst_nand/lld_nand.c:1350:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Conv_Main_Spare_Data_Log2Phy_Format>
#11980: FILE: drivers/staging/mrst_nand/lld_nand.c:1351:
+void Conv_Main_Spare_Data_Log2Phy_Format(u8 *data, u16 page_count)

CHECK:CAMELCASE: Avoid CamelCase: <eccBytes>
#11984: FILE: drivers/staging/mrst_nand/lld_nand.c:1355:
+	const u32 eccBytes = DeviceInfo.wECCBytesPerSector;

CHECK:CAMELCASE: Avoid CamelCase: <spareSkipBytes>
#11985: FILE: drivers/staging/mrst_nand/lld_nand.c:1356:
+	const u32 spareSkipBytes = DeviceInfo.wSpareSkipBytes;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12057: FILE: drivers/staging/mrst_nand/lld_nand.c:1428:
+u16 NAND_Multiplane_Read(u8 *read_data, u32 block, u16 page,
+			    u16 page_count)

CHECK:CAMELCASE: Avoid CamelCase: <SectorStart>
#12072: FILE: drivers/staging/mrst_nand/lld_nand.c:1443:
+	u32 SectorStart, SectorEnd;

CHECK:CAMELCASE: Avoid CamelCase: <SectorEnd>
#12072: FILE: drivers/staging/mrst_nand/lld_nand.c:1443:
+	u32 SectorStart, SectorEnd;

CHECK:CAMELCASE: Avoid CamelCase: <bSectorsPerPage>
#12073: FILE: drivers/staging/mrst_nand/lld_nand.c:1444:
+	u32 bSectorsPerPage = 4;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12093: FILE: drivers/staging/mrst_nand/lld_nand.c:1464:
+		iowrite32(ioread32(FlashReg + intr_status),
+			FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12115: FILE: drivers/staging/mrst_nand/lld_nand.c:1486:
+					iowrite32(INTR_STATUS0__ECC_ERR,
+						FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12117: FILE: drivers/staging/mrst_nand/lld_nand.c:1488:
+					status = do_ecc_new(flash_bank,
+						read_data, block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12121: FILE: drivers/staging/mrst_nand/lld_nand.c:1492:
+					iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+						FlashReg + intr_status);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#12123: FILE: drivers/staging/mrst_nand/lld_nand.c:1494:
+					if (1 == ecc_done_OR_dma_comp)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#12129: FILE: drivers/staging/mrst_nand/lld_nand.c:1500:
+					iowrite32(

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#12133: FILE: drivers/staging/mrst_nand/lld_nand.c:1504:
+					if (1 == ecc_done_OR_dma_comp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12143: FILE: drivers/staging/mrst_nand/lld_nand.c:1514:
+				iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+					FlashReg + intr_status);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#12152: FILE: drivers/staging/mrst_nand/lld_nand.c:1523:
+
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12155: FILE: drivers/staging/mrst_nand/lld_nand.c:1526:
+		iowrite32(ioread32(FlashReg + intr_status),
+			FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12168: FILE: drivers/staging/mrst_nand/lld_nand.c:1539:
+			iowrite32(INTR_STATUS0__ECC_ERR,
+				FlashReg + intr_status);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#12211: FILE: drivers/staging/mrst_nand/lld_nand.c:1582:
+						iowrite32(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#12214: FILE: drivers/staging/mrst_nand/lld_nand.c:1585:
+						status = do_ecc_new(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12238: FILE: drivers/staging/mrst_nand/lld_nand.c:1609:
+				iowrite32(INTR_STATUS0__ECC_ERR,
+					FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12240: FILE: drivers/staging/mrst_nand/lld_nand.c:1611:
+				status = do_ecc_new(flash_bank,
+					read_data, block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12246: FILE: drivers/staging/mrst_nand/lld_nand.c:1617:
+				iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+					FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12250: FILE: drivers/staging/mrst_nand/lld_nand.c:1621:
+				iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+					FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12262: FILE: drivers/staging/mrst_nand/lld_nand.c:1633:
+u16 NAND_Pipeline_Read_Ahead(u8 *read_data, u32 block,
+				u16 page, u16 page_count)

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#12293: FILE: drivers/staging/mrst_nand/lld_nand.c:1664:
+		*DeviceInfo.wBlockDataSize +
 		^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#12325: FILE: drivers/staging/mrst_nand/lld_nand.c:1696:
+		printk(KERN_ERR "Wait for completion timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#12326: FILE: drivers/staging/mrst_nand/lld_nand.c:1697:
+		printk(KERN_ERR "Wait for completion timeout "
+			"in %s, Line %d\n", __FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12371: FILE: drivers/staging/mrst_nand/lld_nand.c:1742:
+					iowrite32(INTR_STATUS0__ECC_ERR,
+						FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12373: FILE: drivers/staging/mrst_nand/lld_nand.c:1744:
+					status = do_ecc_new(flash_bank,
+						read_data, block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12392: FILE: drivers/staging/mrst_nand/lld_nand.c:1763:
+			iowrite32(INTR_STATUS0__ECC_ERR,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12394: FILE: drivers/staging/mrst_nand/lld_nand.c:1765:
+			status = do_ecc_new(flash_bank, read_data,
+				block, page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12400: FILE: drivers/staging/mrst_nand/lld_nand.c:1771:
+			iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12404: FILE: drivers/staging/mrst_nand/lld_nand.c:1775:
+			iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+				FlashReg + intr_status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12412: FILE: drivers/staging/mrst_nand/lld_nand.c:1783:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12417: FILE: drivers/staging/mrst_nand/lld_nand.c:1788:
+u16 NAND_Write_Page_Main(u8 *write_data, u32 block, u16 page,
+			    u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12454: FILE: drivers/staging/mrst_nand/lld_nand.c:1825:
+			status = NAND_Multiplane_Write(write_data,
+				block, page, page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12457: FILE: drivers/staging/mrst_nand/lld_nand.c:1828:
+			status = NAND_Pipeline_Write_Ahead(write_data,
+				block, page, page_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#12484: FILE: drivers/staging/mrst_nand/lld_nand.c:1855:
+		printk(KERN_ERR "Wait for completion timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#12485: FILE: drivers/staging/mrst_nand/lld_nand.c:1856:
+		printk(KERN_ERR "Wait for completion timeout "
+			"in %s, Line %d\n", __FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12521: FILE: drivers/staging/mrst_nand/lld_nand.c:1892:
+		nand_dbg_print(NAND_DBG_WARN,
+			"Will enable ECC in %s, Line %d, Function: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12526: FILE: drivers/staging/mrst_nand/lld_nand.c:1897:
+		nand_dbg_print(NAND_DBG_WARN,
+			"Will disable ECC in %s, Line %d, Function: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12543: FILE: drivers/staging/mrst_nand/lld_nand.c:1914:
+u16 NAND_Write_Page_Main_Spare(u8 *write_data, u32 block,
+					u16 page, u16 page_count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#12565: FILE: drivers/staging/mrst_nand/lld_nand.c:1936:
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#12565: FILE: drivers/staging/mrst_nand/lld_nand.c:1936:
+	if (!page_main_spare) {
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12566: FILE: drivers/staging/mrst_nand/lld_nand.c:1937:
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",
+			__FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12588: FILE: drivers/staging/mrst_nand/lld_nand.c:1959:
+			iowrite32(ioread32(FlashReg + intr_status),
+				FlashReg + intr_status);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#12633: FILE: drivers/staging/mrst_nand/lld_nand.c:2004:
+					iowrite32(

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12637: FILE: drivers/staging/mrst_nand/lld_nand.c:2008:
+			} else {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12640: FILE: drivers/staging/mrst_nand/lld_nand.c:2011:
+					iowrite32(*((u32 *)write_data + i),
+						FlashMem + 0x10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12653: FILE: drivers/staging/mrst_nand/lld_nand.c:2024:
+			iowrite32(ioread32(FlashReg + intr_status),
+					FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12668: FILE: drivers/staging/mrst_nand/lld_nand.c:2039:
+u16 NAND_Read_Page_Main_Spare(u8 *read_data, u32 block, u16 page,
+				 u16 page_count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#12692: FILE: drivers/staging/mrst_nand/lld_nand.c:2063:
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#12692: FILE: drivers/staging/mrst_nand/lld_nand.c:2063:
+	if (!page_main_spare) {
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12693: FILE: drivers/staging/mrst_nand/lld_nand.c:2064:
+		printk(KERN_ERR "Failed to kmalloc memory in %s Line %d, exit.\n",
+			__FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12709: FILE: drivers/staging/mrst_nand/lld_nand.c:2080:
+		iowrite32(ioread32(FlashReg + intr_status),
+				FlashReg + intr_status);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12746: FILE: drivers/staging/mrst_nand/lld_nand.c:2117:
+				j++) {
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#12750: FILE: drivers/staging/mrst_nand/lld_nand.c:2121:
+						    page_main_spare[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#12758: FILE: drivers/staging/mrst_nand/lld_nand.c:2129:
+						    page_main_spare[

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#12773: FILE: drivers/staging/mrst_nand/lld_nand.c:2144:
+
+			}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12784: FILE: drivers/staging/mrst_nand/lld_nand.c:2155:
+					iowrite32(INTR_STATUS0__ECC_ERR,
+						FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12786: FILE: drivers/staging/mrst_nand/lld_nand.c:2157:
+					status = do_ecc_new(flash_bank,
+						read_data, block, page);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#12797: FILE: drivers/staging/mrst_nand/lld_nand.c:2168:
+					iowrite32(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12803: FILE: drivers/staging/mrst_nand/lld_nand.c:2174:
+					iowrite32(INTR_STATUS0__ECC_ERR,
+						FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12823: FILE: drivers/staging/mrst_nand/lld_nand.c:2194:
+u16 NAND_Pipeline_Write_Ahead(u8 *write_data, u32 block,
+			u16 page, u16 page_count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#12883: FILE: drivers/staging/mrst_nand/lld_nand.c:2254:
+		printk(KERN_ERR "Wait for completion timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#12884: FILE: drivers/staging/mrst_nand/lld_nand.c:2255:
+		printk(KERN_ERR "Wait for completion timeout "
+			"in %s, Line %d\n", __FILE__, __LINE__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12932: FILE: drivers/staging/mrst_nand/lld_nand.c:2303:
+	iowrite32(INTR_STATUS0__PROGRAM_COMP | INTR_STATUS0__PROGRAM_FAIL,
+		FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12940: FILE: drivers/staging/mrst_nand/lld_nand.c:2311:
+u16 NAND_Multiplane_Write(u8 *write_data, u32 block, u16 page,
+			     u16 page_count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12997: FILE: drivers/staging/mrst_nand/lld_nand.c:2368:
+			iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+				FlashReg + intr_status);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#13036: FILE: drivers/staging/mrst_nand/lld_nand.c:2407:
+		if (0 == plane) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13054: FILE: drivers/staging/mrst_nand/lld_nand.c:2425:
+			iowrite32(*((u32 *)write_data + i),
+				FlashMem + 0x10);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#13058: FILE: drivers/staging/mrst_nand/lld_nand.c:2429:
+		if (0 == plane)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13073: FILE: drivers/staging/mrst_nand/lld_nand.c:2444:
+	iowrite32(INTR_STATUS0__PROGRAM_COMP | INTR_STATUS0__PROGRAM_FAIL,
+		FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13107: FILE: drivers/staging/mrst_nand/lld_nand.c:2478:
+				iowrite32(INTR_STATUS0__ECC_ERR,
+					FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13109: FILE: drivers/staging/mrst_nand/lld_nand.c:2480:
+				dev->ret = do_ecc_new(dev->flash_bank,
+						dev->read_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13114: FILE: drivers/staging/mrst_nand/lld_nand.c:2485:
+				iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+					FlashReg + intr_status);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#13115: FILE: drivers/staging/mrst_nand/lld_nand.c:2486:
+				if (1 == ecc_done_OR_dma_comp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13121: FILE: drivers/staging/mrst_nand/lld_nand.c:2492:
+				iowrite32(INTR_STATUS0__ECC_TRANSACTION_DONE,
+					FlashReg + intr_status);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#13122: FILE: drivers/staging/mrst_nand/lld_nand.c:2493:
+				if (1 == ecc_done_OR_dma_comp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13130: FILE: drivers/staging/mrst_nand/lld_nand.c:2501:
+				iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+					FlashReg + intr_status);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13132: FILE: drivers/staging/mrst_nand/lld_nand.c:2503:
+				break;
+			} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13133: FILE: drivers/staging/mrst_nand/lld_nand.c:2504:
+				printk(KERN_ERR "Illegal INTS "

WARNING:SPLIT_STRING: quoted string split across lines
#13134: FILE: drivers/staging/mrst_nand/lld_nand.c:2505:
+				printk(KERN_ERR "Illegal INTS "
+					"(offset addr 0x%x) value: 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13167: FILE: drivers/staging/mrst_nand/lld_nand.c:2538:
+			iowrite32(INTR_STATUS0__DMA_CMD_COMP,
+				FlashReg + intr_status);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#13168: FILE: drivers/staging/mrst_nand/lld_nand.c:2539:
+			if (FAIL == status)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13175: FILE: drivers/staging/mrst_nand/lld_nand.c:2546:
+			iowrite32(INTR_STATUS0__PROGRAM_FAIL,
+				FlashReg + intr_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13205: FILE: drivers/staging/mrst_nand/lld_nand.c:2576:
+	nand_dbg_print(NAND_DBG_DEBUG,
+		"INTR0: 0x%x, INTR1: 0x%x, INTR2: 0x%x, INTR3: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#13206: FILE: drivers/staging/mrst_nand/lld_nand.c:2577:
+		"INTR0: 0x%x, INTR1: 0x%x, INTR2: 0x%x, INTR3: 0x%x, "
+		"DMA_INTR: 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#13207: FILE: drivers/staging/mrst_nand/lld_nand.c:2578:
+		"DMA_INTR: 0x%x, "
+		"dev->state: 0x%x, dev->flash_bank: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13218: FILE: drivers/staging/mrst_nand/lld_nand.c:2589:
+		nand_dbg_print(NAND_DBG_WARN,
+			"ddma_isr: Invalid interrupt for NAND controller. "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ddma_isr', this function's name, in a string
#13218: FILE: drivers/staging/mrst_nand/lld_nand.c:2589:
+			"ddma_isr: Invalid interrupt for NAND controller. "

WARNING:SPLIT_STRING: quoted string split across lines
#13219: FILE: drivers/staging/mrst_nand/lld_nand.c:2590:
+			"ddma_isr: Invalid interrupt for NAND controller. "
+			"Ignore it\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13236: FILE: drivers/staging/mrst_nand/lld_nand.c:2607:
+		printk(KERN_ERR "ddma_isr - Illegal state: 0x%x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ddma_isr', this function's name, in a string
#13236: FILE: drivers/staging/mrst_nand/lld_nand.c:2607:
+		printk(KERN_ERR "ddma_isr - Illegal state: 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13237: FILE: drivers/staging/mrst_nand/lld_nand.c:2608:
+		printk(KERN_ERR "ddma_isr - Illegal state: 0x%x\n",
+			dev->state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13267: FILE: drivers/staging/mrst_nand/lld_nand.c:2638:
+		printk(KERN_ERR "Read PCI_VENDOR_ID fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13268: FILE: drivers/staging/mrst_nand/lld_nand.c:2639:
+		printk(KERN_ERR "Read PCI_VENDOR_ID fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13270: FILE: drivers/staging/mrst_nand/lld_nand.c:2641:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13276: FILE: drivers/staging/mrst_nand/lld_nand.c:2647:
+		printk(KERN_ERR "Read PCI_DEVICE_ID fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13277: FILE: drivers/staging/mrst_nand/lld_nand.c:2648:
+		printk(KERN_ERR "Read PCI_DEVICE_ID fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13279: FILE: drivers/staging/mrst_nand/lld_nand.c:2650:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13285: FILE: drivers/staging/mrst_nand/lld_nand.c:2656:
+		printk(KERN_ERR "Read PCI_COMMAND fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13286: FILE: drivers/staging/mrst_nand/lld_nand.c:2657:
+		printk(KERN_ERR "Read PCI_COMMAND fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13288: FILE: drivers/staging/mrst_nand/lld_nand.c:2659:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13294: FILE: drivers/staging/mrst_nand/lld_nand.c:2665:
+		printk(KERN_ERR "Read PCI_STATUS fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13295: FILE: drivers/staging/mrst_nand/lld_nand.c:2666:
+		printk(KERN_ERR "Read PCI_STATUS fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13297: FILE: drivers/staging/mrst_nand/lld_nand.c:2668:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13303: FILE: drivers/staging/mrst_nand/lld_nand.c:2674:
+		printk(KERN_ERR "Read PCI_CLASS_REVISION fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13304: FILE: drivers/staging/mrst_nand/lld_nand.c:2675:
+		printk(KERN_ERR "Read PCI_CLASS_REVISION fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13306: FILE: drivers/staging/mrst_nand/lld_nand.c:2677:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13313: FILE: drivers/staging/mrst_nand/lld_nand.c:2684:
+		printk(KERN_ERR "Read PCI_CLASS_PROG fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13314: FILE: drivers/staging/mrst_nand/lld_nand.c:2685:
+		printk(KERN_ERR "Read PCI_CLASS_PROG fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13316: FILE: drivers/staging/mrst_nand/lld_nand.c:2687:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13322: FILE: drivers/staging/mrst_nand/lld_nand.c:2693:
+		printk(KERN_ERR "Read PCI_CLASS_DEVICE fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13323: FILE: drivers/staging/mrst_nand/lld_nand.c:2694:
+		printk(KERN_ERR "Read PCI_CLASS_DEVICE fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13325: FILE: drivers/staging/mrst_nand/lld_nand.c:2696:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13332: FILE: drivers/staging/mrst_nand/lld_nand.c:2703:
+		printk(KERN_ERR "Read PCI_CACHE_LINE_SIZE fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13333: FILE: drivers/staging/mrst_nand/lld_nand.c:2704:
+		printk(KERN_ERR "Read PCI_CACHE_LINE_SIZE fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13335: FILE: drivers/staging/mrst_nand/lld_nand.c:2706:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13342: FILE: drivers/staging/mrst_nand/lld_nand.c:2713:
+		printk(KERN_ERR "Read PCI_LATENCY_TIMER fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13343: FILE: drivers/staging/mrst_nand/lld_nand.c:2714:
+		printk(KERN_ERR "Read PCI_LATENCY_TIMER fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13345: FILE: drivers/staging/mrst_nand/lld_nand.c:2716:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13352: FILE: drivers/staging/mrst_nand/lld_nand.c:2723:
+		printk(KERN_ERR "Read PCI_HEADER_TYPE fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13353: FILE: drivers/staging/mrst_nand/lld_nand.c:2724:
+		printk(KERN_ERR "Read PCI_HEADER_TYPE fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13355: FILE: drivers/staging/mrst_nand/lld_nand.c:2726:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13362: FILE: drivers/staging/mrst_nand/lld_nand.c:2733:
+		printk(KERN_ERR "Read PCI_BIST fail, " "error code: %d\n", err);

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#13362: FILE: drivers/staging/mrst_nand/lld_nand.c:2733:
+		printk(KERN_ERR "Read PCI_BIST fail, " "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13364: FILE: drivers/staging/mrst_nand/lld_nand.c:2735:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13370: FILE: drivers/staging/mrst_nand/lld_nand.c:2741:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_0 fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13371: FILE: drivers/staging/mrst_nand/lld_nand.c:2742:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_0 fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13373: FILE: drivers/staging/mrst_nand/lld_nand.c:2744:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13380: FILE: drivers/staging/mrst_nand/lld_nand.c:2751:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_1 fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13381: FILE: drivers/staging/mrst_nand/lld_nand.c:2752:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_1 fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13383: FILE: drivers/staging/mrst_nand/lld_nand.c:2754:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13390: FILE: drivers/staging/mrst_nand/lld_nand.c:2761:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_2 fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13391: FILE: drivers/staging/mrst_nand/lld_nand.c:2762:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_2 fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13393: FILE: drivers/staging/mrst_nand/lld_nand.c:2764:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13400: FILE: drivers/staging/mrst_nand/lld_nand.c:2771:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_3 fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13401: FILE: drivers/staging/mrst_nand/lld_nand.c:2772:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_3 fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13403: FILE: drivers/staging/mrst_nand/lld_nand.c:2774:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13410: FILE: drivers/staging/mrst_nand/lld_nand.c:2781:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_4 fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13411: FILE: drivers/staging/mrst_nand/lld_nand.c:2782:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_4 fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13413: FILE: drivers/staging/mrst_nand/lld_nand.c:2784:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13420: FILE: drivers/staging/mrst_nand/lld_nand.c:2791:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_5 fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13421: FILE: drivers/staging/mrst_nand/lld_nand.c:2792:
+		printk(KERN_ERR "Read PCI_BASE_ADDRESS_5 fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13423: FILE: drivers/staging/mrst_nand/lld_nand.c:2794:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13430: FILE: drivers/staging/mrst_nand/lld_nand.c:2801:
+		printk(KERN_ERR "Read PCI_CARDBUS_CIS fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13431: FILE: drivers/staging/mrst_nand/lld_nand.c:2802:
+		printk(KERN_ERR "Read PCI_CARDBUS_CIS fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13433: FILE: drivers/staging/mrst_nand/lld_nand.c:2804:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13440: FILE: drivers/staging/mrst_nand/lld_nand.c:2811:
+		printk(KERN_ERR "Read PCI_SUBSYSTEM_VENDOR_ID fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13441: FILE: drivers/staging/mrst_nand/lld_nand.c:2812:
+		printk(KERN_ERR "Read PCI_SUBSYSTEM_VENDOR_ID fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13443: FILE: drivers/staging/mrst_nand/lld_nand.c:2814:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13450: FILE: drivers/staging/mrst_nand/lld_nand.c:2821:
+		printk(KERN_ERR "Read PCI_SUBSYSTEM_ID fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13451: FILE: drivers/staging/mrst_nand/lld_nand.c:2822:
+		printk(KERN_ERR "Read PCI_SUBSYSTEM_ID fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13453: FILE: drivers/staging/mrst_nand/lld_nand.c:2824:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13460: FILE: drivers/staging/mrst_nand/lld_nand.c:2831:
+		printk(KERN_ERR "Read PCI_ROM_ADDRESS fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13461: FILE: drivers/staging/mrst_nand/lld_nand.c:2832:
+		printk(KERN_ERR "Read PCI_ROM_ADDRESS fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13463: FILE: drivers/staging/mrst_nand/lld_nand.c:2834:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13470: FILE: drivers/staging/mrst_nand/lld_nand.c:2841:
+		printk(KERN_ERR "Read PCI_INTERRUPT_LINE fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13471: FILE: drivers/staging/mrst_nand/lld_nand.c:2842:
+		printk(KERN_ERR "Read PCI_INTERRUPT_LINE fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13473: FILE: drivers/staging/mrst_nand/lld_nand.c:2844:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13480: FILE: drivers/staging/mrst_nand/lld_nand.c:2851:
+		printk(KERN_ERR "Read PCI_INTERRUPT_PIN fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13481: FILE: drivers/staging/mrst_nand/lld_nand.c:2852:
+		printk(KERN_ERR "Read PCI_INTERRUPT_PIN fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13483: FILE: drivers/staging/mrst_nand/lld_nand.c:2854:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13490: FILE: drivers/staging/mrst_nand/lld_nand.c:2861:
+		printk(KERN_ERR "Read PCI_MIN_GNT fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13491: FILE: drivers/staging/mrst_nand/lld_nand.c:2862:
+		printk(KERN_ERR "Read PCI_MIN_GNT fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13493: FILE: drivers/staging/mrst_nand/lld_nand.c:2864:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13499: FILE: drivers/staging/mrst_nand/lld_nand.c:2870:
+		printk(KERN_ERR "Read PCI_MAX_LAT fail, "

WARNING:SPLIT_STRING: quoted string split across lines
#13500: FILE: drivers/staging/mrst_nand/lld_nand.c:2871:
+		printk(KERN_ERR "Read PCI_MAX_LAT fail, "
+		       "error code: %d\n", err);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13502: FILE: drivers/staging/mrst_nand/lld_nand.c:2873:
+		return err;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13521: FILE: drivers/staging/mrst_nand/lld_nand.c:2892:
+		printk(KERN_ERR "Spectra: pci_enable_device failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13532: FILE: drivers/staging/mrst_nand/lld_nand.c:2903:
+		printk(KERN_ERR "Spectra: pci_resource_start failed!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13538: FILE: drivers/staging/mrst_nand/lld_nand.c:2909:
+		printk(KERN_ERR "Spectra: pci_resource_len failed!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13544: FILE: drivers/staging/mrst_nand/lld_nand.c:2915:
+		printk(KERN_ERR "Spectra: Unable to request "

WARNING:SPLIT_STRING: quoted string split across lines
#13545: FILE: drivers/staging/mrst_nand/lld_nand.c:2916:
+		printk(KERN_ERR "Spectra: Unable to request "
+		       "memory region\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13551: FILE: drivers/staging/mrst_nand/lld_nand.c:2922:
+		printk(KERN_ERR "Spectra: Unable to remap memory region\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13563: FILE: drivers/staging/mrst_nand/lld_nand.c:2934:
+		printk(KERN_ERR "Spectra: Unable to allocate IRQ\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13617: FILE: drivers/staging/mrst_nand/lld_nand.c:2988:
+	FlashReg = GLOB_MEMMAP_NOCACHE(GLOB_HWCTL_REG_BASE,
+			GLOB_HWCTL_REG_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13619: FILE: drivers/staging/mrst_nand/lld_nand.c:2990:
+		printk(KERN_ERR "Spectra: ioremap_nocache failed!");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13623: FILE: drivers/staging/mrst_nand/lld_nand.c:2994:
+	nand_dbg_print(NAND_DBG_WARN,
+		"Spectra: Remapped reg base address: "

WARNING:SPLIT_STRING: quoted string split across lines
#13624: FILE: drivers/staging/mrst_nand/lld_nand.c:2995:
+		"Spectra: Remapped reg base address: "
+		"0x%p, len: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13628: FILE: drivers/staging/mrst_nand/lld_nand.c:2999:
+	FlashMem = GLOB_MEMMAP_NOCACHE(GLOB_HWCTL_MEM_BASE,
+			GLOB_HWCTL_MEM_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13630: FILE: drivers/staging/mrst_nand/lld_nand.c:3001:
+		printk(KERN_ERR "Spectra: ioremap_nocache failed!");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13635: FILE: drivers/staging/mrst_nand/lld_nand.c:3006:
+	nand_dbg_print(NAND_DBG_WARN,
+		"Spectra: Remapped flash base address: "

WARNING:SPLIT_STRING: quoted string split across lines
#13636: FILE: drivers/staging/mrst_nand/lld_nand.c:3007:
+		"Spectra: Remapped flash base address: "
+		"0x%p, len: %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13643: FILE: drivers/staging/mrst_nand/lld_nand.c:3014:
+/*
+	iowrite32(0, FlashReg + INTR_EN0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13689: FILE: drivers/staging/mrst_nand/lld_nand.c:3060:
+	FlashReg = GLOB_MEMMAP_NOCACHE(GLOB_HWCTL_REG_BASE,
+			GLOB_HWCTL_REG_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13691: FILE: drivers/staging/mrst_nand/lld_nand.c:3062:
+		printk(KERN_ERR "Spectra: ioremap_nocache failed!");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13695: FILE: drivers/staging/mrst_nand/lld_nand.c:3066:
+	nand_dbg_print(NAND_DBG_WARN,
+		"Spectra: Remapped reg base address: "

WARNING:SPLIT_STRING: quoted string split across lines
#13696: FILE: drivers/staging/mrst_nand/lld_nand.c:3067:
+		"Spectra: Remapped reg base address: "
+		"0x%p, len: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13700: FILE: drivers/staging/mrst_nand/lld_nand.c:3071:
+	FlashMem = GLOB_MEMMAP_NOCACHE(GLOB_HWCTL_MEM_BASE,
+			GLOB_HWCTL_MEM_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13702: FILE: drivers/staging/mrst_nand/lld_nand.c:3073:
+		printk(KERN_ERR "Spectra: ioremap_nocache failed!");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13707: FILE: drivers/staging/mrst_nand/lld_nand.c:3078:
+	nand_dbg_print(NAND_DBG_WARN,
+		"Spectra: Remapped flash base address: "

WARNING:SPLIT_STRING: quoted string split across lines
#13708: FILE: drivers/staging/mrst_nand/lld_nand.c:3079:
+		"Spectra: Remapped flash base address: "
+		"0x%p, len: %d\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#13749: FILE: drivers/staging/mrst_nand/lld_nand.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#13763: FILE: drivers/staging/mrst_nand/lld_nand.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#13764: FILE: drivers/staging/mrst_nand/lld_nand.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#13783: FILE: drivers/staging/mrst_nand/lld_nand.h:35:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#13811: FILE: drivers/staging/mrst_nand/lld_nand.h:63:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13817: FILE: drivers/staging/mrst_nand/lld_nand.h:69:
+u16  NAND_Write_Page_Main(u8 *write_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13819: FILE: drivers/staging/mrst_nand/lld_nand.h:71:
+u16  NAND_Read_Page_Main(u8 *read_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13824: FILE: drivers/staging/mrst_nand/lld_nand.h:76:
+u16  NAND_Write_Page_Spare(u8 *read_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13826: FILE: drivers/staging/mrst_nand/lld_nand.h:78:
+u16  NAND_Read_Page_Main_Spare(u8 *read_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13828: FILE: drivers/staging/mrst_nand/lld_nand.h:80:
+u16  NAND_Read_Page_Spare(u8 *read_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13837: FILE: drivers/staging/mrst_nand/lld_nand.h:89:
+u16  NAND_Pipeline_Read_Ahead(u8 *read_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13839: FILE: drivers/staging/mrst_nand/lld_nand.h:91:
+u16  NAND_Pipeline_Write_Ahead(u8 *write_data, u32 block,
+				u16 page, u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13841: FILE: drivers/staging/mrst_nand/lld_nand.h:93:
+u16  NAND_Multiplane_Read(u8 *read_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13843: FILE: drivers/staging/mrst_nand/lld_nand.h:95:
+u16  NAND_Multiplane_Write(u8 *write_data, u32 block, u16 page,
+				u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13846: FILE: drivers/staging/mrst_nand/lld_nand.h:98:
+u16 NAND_Read_Page_Main_Polling(u8 *read_data,
+		u32 block, u16 page, u16 page_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13848: FILE: drivers/staging/mrst_nand/lld_nand.h:100:
+u16 NAND_Pipeline_Read_Ahead_Polling(u8 *read_data,
+			u32 block, u16 page, u16 page_count);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#13863: FILE: drivers/staging/mrst_nand/lld_nand.h:115:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#13871: FILE: drivers/staging/mrst_nand/spectraswconfig.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#13885: FILE: drivers/staging/mrst_nand/spectraswconfig.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#13886: FILE: drivers/staging/mrst_nand/spectraswconfig.h:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114672.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 36 errors, 837 warnings, 1149 checks, 13744 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114672.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
