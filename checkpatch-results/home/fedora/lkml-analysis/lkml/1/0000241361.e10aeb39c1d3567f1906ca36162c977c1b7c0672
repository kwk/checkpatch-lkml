ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Brian Haley'
#57: 
To: Brian Haley

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Alexey Dobriyan; John Gumb; linux-kernel@vger.kernel.org;'
#58: 
Cc: Alexey Dobriyan; John Gumb; linux-kernel@vger.kernel.org;

WARNING:BAD_STABLE_ADDRESS_STYLE: Invalid email format for stable: 'Stable <stable@kernel.org>', prefer 'stable@kernel.org'
#94: 
Cc: Stable <stable@kernel.org>

The email format for stable is incorrect.
Some valid options for stable address are::

  1. stable@vger.kernel.org
  2. stable@kernel.org

For adding version info, the following comment style should be used::

  stable@vger.kernel.org # version info

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#112: FILE: include/net/addrconf.h:79:
*ipv6_get_ifaddr(struct net *net,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/net/addrconf.h:82:
+extern int			ipv6_get_saddr(struct dst_entry *dst,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/net/addrconf.h:83:
+extern int			ipv6_get_saddr(struct dst_entry *dst,
*daddr,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#147: FILE: net/ipv6/addrconf.c:1241:
 }
+int ipv6_get_saddr(struct dst_entry *dst, const struct in6_addr *daddr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: net/ipv6/addrconf.c:1242:
+int ipv6_get_saddr(struct dst_entry *dst, const struct in6_addr *daddr,
+		    unsigned int srcprefs, struct in6_addr *saddr)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: net/ipv6/addrconf.c:1244:
+	struct inet6_dev *idev =3D ip6_dst_idev(dst);
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: net/ipv6/addrconf.c:1245:
+	struct inet6_dev *idev =3D ip6_dst_idev(dst);
+	return ipv6_dev_get_saddr(idev ? idev->dev : NULL, daddr,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#154: FILE: net/ipv6/addrconf.c:1247:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: net/ipv6/fib6_rules.c:96:
+			if (ipv6_get_saddr(&rt->u.dst, &flp->fl6_dst,
 					       &saddr))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#186: FILE: net/ipv6/ip6_output.c:936:
+		err =3D ipv6_get_saddr(*dst, &fl->fl6_dst,
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#202: FILE: net/ipv6/route.c:2191:
+		if (ipv6_get_saddr(&rt->u.dst, dst, 0, &saddr_buf) =3D=3D 0)
 		                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#202: FILE: net/ipv6/route.c:2191:
+		if (ipv6_get_saddr(&rt->u.dst, dst, 0, &saddr_buf) =3D=3D 0)
 		                                                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: net/ipv6/route.c:2191:
+		if (ipv6_get_saddr(&rt->u.dst, dst, 0, &saddr_buf) =3D=3D 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: net/ipv6/xfrm6_policy.c:60:
+	ipv6_get_saddr(dst, (struct in6_addr *)&daddr->a6, 0,
 			   (struct in6_addr *)&saddr->a6);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: net/sctp/ipv6.c:322:
+		ipv6_get_saddr(dst, &daddr->v6.sin6_addr,
 				   inet6_sk(&sk->inet.sk)->srcprefs,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241361.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 2 warnings, 8 checks, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241361.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
