WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#52: 
 in iput()
    ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/inode.c:624:
+ ^I^I^IINIT_LIST_HEAD(&inode->i_list);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: fs/inode.c:624:
+ ^I^I^IINIT_LIST_HEAD(&inode->i_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/inode.c:624:
+ ^I^I^IINIT_LIST_HEAD(&inode->i_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: fs/inode.c:625:
+ ^I^I^IINIT_LIST_HEAD(&inode->i_sb_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: fs/inode.c:625:
+ ^I^I^IINIT_LIST_HEAD(&inode->i_sb_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: fs/inode.c:625:
+ ^I^I^IINIT_LIST_HEAD(&inode->i_sb_list);$

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: fs/pipe.c:1081:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#172: FILE: include/linux/fs.h:139:
+#define MS_SPECIAL	(1<<24) /* special fs (inodes not in sb->s_inodes) */
                   	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: include/linux/fs.h:139:
+#define MS_SPECIAL	(1<<24) /* special fs (inodes not in sb->s_inodes) */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/linux/fs.h:1902:
+extern void iput_special(struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 4 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
