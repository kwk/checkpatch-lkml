WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#94: FILE: kernel/power/fastoff/Kconfig:6:
+config FAST_POWER_OFF
+	bool "Fast power off support"
+	default y
+	depends on PM && SYSFS
+	---help---
+	  Say yes if you want core support for sysfs/power/fastoff
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: kernel/power/fastoff/fpo.h:1:
+#ifndef __FASTOFF_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#123: FILE: kernel/power/fastoff/fpo.h:4:
+ * kernel/power/fastoff/fpo.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACING: Unnecessary space before function pointer arguments
#137: FILE: kernel/power/fastoff/fpo.h:18:
+	int (*policy) (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: kernel/power/fastoff/fpo.h:22:
+extern int fastpoweroff_register(struct fpo_driver *fpo);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: kernel/power/fastoff/fpo.h:23:
+extern void fastpoweroff_unregister(struct fpo_driver *fpo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: kernel/power/fastoff/fpo.h:24:
+extern void fastpoweroff_prepare(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: kernel/power/fastoff/fpo.h:25:
+extern void fastpoweroff(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: kernel/power/fastoff/fpo.h:26:
+extern void fastpoweroff_standby(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#152: FILE: kernel/power/fastoff/fpo.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#153: FILE: kernel/power/fastoff/fpo.c:2:
+ * kernel/power/fastoff/fpo.c

WARNING:TYPO_SPELLING: 'implimented' may be misspelled - perhaps 'implemented'?
#158: FILE: kernel/power/fastoff/fpo.c:7:
+ * has been implimented so that a user can define how they want to
             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#186: FILE: kernel/power/fastoff/fpo.c:35:
+extern void suspend_emergency_remount(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: kernel/power/fastoff/fpo.c:41:
+  ^Ilist_for_each_entry(f, &fastpoweroff_list, fpo_list) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: kernel/power/fastoff/fpo.c:41:
+  ^Ilist_for_each_entry(f, &fastpoweroff_list, fpo_list) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/power/fastoff/fpo.c:41:
+  ^Ilist_for_each_entry(f, &fastpoweroff_list, fpo_list) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#193: FILE: kernel/power/fastoff/fpo.c:42:
+		if (!strnicmp(name, f->name, strlen(f->name))) {
+			return f;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!__find_fastpoweroff"
#209: FILE: kernel/power/fastoff/fpo.c:58:
+	if (__find_fastpoweroff(fpo->name) == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#217: FILE: kernel/power/fastoff/fpo.c:66:
+EXPORT_SYMBOL_GPL(fastpoweroff_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#228: FILE: kernel/power/fastoff/fpo.c:77:
+EXPORT_SYMBOL_GPL(fastpoweroff_unregister);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#240: FILE: kernel/power/fastoff/fpo.c:89:
+	printk(KERN_INFO "machine_power_off  not impliemented\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#251: FILE: kernel/power/fastoff/fpo.c:100:
+	printk(KERN_INFO "Fallback plan...suspend devices\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: kernel/power/fastoff/fpo.c:113:
+  ^Ilist_for_each_entry(f, &fastpoweroff_list, fpo_list) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: kernel/power/fastoff/fpo.c:113:
+  ^Ilist_for_each_entry(f, &fastpoweroff_list, fpo_list) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: kernel/power/fastoff/fpo.c:113:
+  ^Ilist_for_each_entry(f, &fastpoweroff_list, fpo_list) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: kernel/power/fastoff/fpo.c:121:
+static ssize_t fastpoweroff_store(struct subsystem *subsys, const char *buf,
+				size_t n)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: kernel/power/fastoff/fpo.c:125:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#280: FILE: kernel/power/fastoff/fpo.c:129:
+	if ((fpo = __find_fastpoweroff(buf)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#281: FILE: kernel/power/fastoff/fpo.c:130:
+		printk(KERN_ERR "PM: fastpoweroff: not a valid profile\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: kernel/power/fastoff/fpo.c:145:
+	int error;
+	printk(KERN_INFO "PM: Fastpoweoff 1.0\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#296: FILE: kernel/power/fastoff/fpo.c:145:
+	printk(KERN_INFO "PM: Fastpoweoff 1.0\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#299: FILE: kernel/power/fastoff/fpo.c:148:
+		printk(KERN_ERR

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473981.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 21 warnings, 8 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473981.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
