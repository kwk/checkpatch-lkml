WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#49: 
  Signed-off-by: Chen Meng <chen.meng@windriver.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Acked-by:
#50: 
  Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com>

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#67: FILE: drivers/gpio/Kconfig:233:
+config GPIO_PL061_PCI
+ tristate "ConneXt PL061_PCI GPIO support"
+ depends on PCI
+ help
+   Say yes here to support the ST Microelectronics ConneXt

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#72: FILE: drivers/gpio/Kconfig:237:
(STA2X11/STA2X10),

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/gpio/pl061_pci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#91: FILE: drivers/gpio/pl061_pci.c:2:
+/*
+* linux/driver/gpio/pl061_pci.c, pl061 GPIO driver for conneXt

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: drivers/gpio/pl061_pci.c:19:
+* along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/gpio/pl061_pci.c:20:
+* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: drivers/gpio/pl061_pci.c:20:
+* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 $

WARNING:TYPO_SPELLING: 'lenth' may be misspelled - perhaps 'length'?
#126: FILE: drivers/gpio/pl061_pci.c:37:
+#define CHIP_REGS_LENGTH 0x1000 /* registers lenth for each GPIO */
                                              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPeriphID0>
#142: FILE: drivers/gpio/pl061_pci.c:53:
+#define GPIOPeriphID0 0xfe0

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPeriphID1>
#143: FILE: drivers/gpio/pl061_pci.c:54:
+#define GPIOPeriphID1  0xfe4

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPeriphID2>
#144: FILE: drivers/gpio/pl061_pci.c:55:
+#define GPIOPeriphID2 0xfe8

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPeriphID3>
#145: FILE: drivers/gpio/pl061_pci.c:56:
+#define GPIOPeriphID3 0xfec

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPCellID0>
#146: FILE: drivers/gpio/pl061_pci.c:57:
+#define GPIOPCellID0 0xff0

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPCellID1>
#147: FILE: drivers/gpio/pl061_pci.c:58:
+#define GPIOPCellID1 0xff4

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPCellID2>
#148: FILE: drivers/gpio/pl061_pci.c:59:
+#define GPIOPCellID2 0xff8

CHECK:CAMELCASE: Avoid CamelCase: <GPIOPCellID3>
#149: FILE: drivers/gpio/pl061_pci.c:60:
+#define GPIOPCellID3 0xffc

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/gpio/pl061_pci.c:67:
+/** platform data for the PL061 PCI GPIO driver */ struct $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/gpio/pl061_pci.c:69:
+ unsigned  gpio_base;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#158: FILE: drivers/gpio/pl061_pci.c:69:
+ unsigned  gpio_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/gpio/pl061_pci.c:70:
+ u32  directions; /* startup directions, 1: out, 0: in */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/gpio/pl061_pci.c:71:
+ u32  values;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/gpio/pl061_pci.c:75:
+ spinlock_t lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#164: FILE: drivers/gpio/pl061_pci.c:75:
+ spinlock_t lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/gpio/pl061_pci.c:76:
+ spinlock_t irq_lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#165: FILE: drivers/gpio/pl061_pci.c:76:
+ spinlock_t irq_lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/gpio/pl061_pci.c:78:
+ void __iomem *reg_base[GPIO_BLOCKS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/gpio/pl061_pci.c:80:
+ unsigned irq_base;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: drivers/gpio/pl061_pci.c:80:
+ unsigned irq_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/gpio/pl061_pci.c:81:
+ unsigned char irq_type[PIN_NR];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/gpio/pl061_pci.c:82:
+ u32 mutex[GPIO_BLOCKS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/gpio/pl061_pci.c:85:
+ u32 saved_dat[GPIO_BLOCKS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/gpio/pl061_pci.c:86:
+ u32 saved_dir[GPIO_BLOCKS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/gpio/pl061_pci.c:87:
+ u32 saved_fimsc[GPIO_BLOCKS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/gpio/pl061_pci.c:88:
+ u32 saved_rimsc[GPIO_BLOCKS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/gpio/pl061_pci.c:90:
+ struct pci_dev *pdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/gpio/pl061_pci.c:91:
+ struct gpio_chip gpio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/gpio/pl061_pci.c:92:
+ struct pl061_pci_platform_data pd;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#184: FILE: drivers/gpio/pl061_pci.c:95:
+int pl061_pci_gpio_request(struct gpio_chip *gpio, unsigned nr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#184: FILE: drivers/gpio/pl061_pci.c:95:
+int pl061_pci_gpio_request(struct gpio_chip *gpio, unsigned nr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/gpio/pl061_pci.c:96:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/gpio/pl061_pci.c:97:
+ u32 flag = 1 << (nr % PINS_PER_CHIP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/gpio/pl061_pci.c:98:
+ u32 *mutex = &pp->mutex[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/gpio/pl061_pci.c:100:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#189: FILE: drivers/gpio/pl061_pci.c:100:
+ if (nr >= gpio->ngpio)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/gpio/pl061_pci.c:101:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/gpio/pl061_pci.c:102:
+ if ((*mutex) & flag)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#191: FILE: drivers/gpio/pl061_pci.c:102:
+ if ((*mutex) & flag)
+  return -EBUSY;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/gpio/pl061_pci.c:103:
+  return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/gpio/pl061_pci.c:105:
+ *mutex |=  flag;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/gpio/pl061_pci.c:107:
+ return 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: drivers/gpio/pl061_pci.c:110:
+void pl061_pci_gpio_free(struct gpio_chip *gpio, unsigned nr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#199: FILE: drivers/gpio/pl061_pci.c:110:
+void pl061_pci_gpio_free(struct gpio_chip *gpio, unsigned nr) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/gpio/pl061_pci.c:111:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/gpio/pl061_pci.c:112:
+ u32 flag = 1 << (nr % PINS_PER_CHIP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/gpio/pl061_pci.c:113:
+ u32 *mutex = &pp->mutex[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/gpio/pl061_pci.c:115:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#204: FILE: drivers/gpio/pl061_pci.c:115:
+ if (nr >= gpio->ngpio)
+  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/gpio/pl061_pci.c:116:
+  return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/gpio/pl061_pci.c:118:
+ *mutex &= ~flag;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/gpio/pl061_pci.c:120:
+ return;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/gpio/pl061_pci.c:124:
+static int pl061_pci_gpio_direction_input(struct gpio_chip *gpio,
+     unsigned nr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/gpio/pl061_pci.c:124:
+     unsigned nr)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#213: FILE: drivers/gpio/pl061_pci.c:124:
+     unsigned nr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/gpio/pl061_pci.c:126:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/gpio/pl061_pci.c:127:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/gpio/pl061_pci.c:128:
+ u32 gpio_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/gpio/pl061_pci.c:129:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/gpio/pl061_pci.c:131:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#220: FILE: drivers/gpio/pl061_pci.c:131:
+ if (nr >= gpio->ngpio)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/gpio/pl061_pci.c:132:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/gpio/pl061_pci.c:133:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/gpio/pl061_pci.c:135:
+ spin_lock_irqsave(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/gpio/pl061_pci.c:137:
+ gpio_dir = ppread(base, GPIO_DIR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/gpio/pl061_pci.c:138:
+ gpio_dir &= ~(1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/gpio/pl061_pci.c:139:
+ ppwrite(gpio_dir, base, GPIO_DIR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/gpio/pl061_pci.c:141:
+ spin_unlock_irqrestore(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/gpio/pl061_pci.c:143:
+ return 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/gpio/pl061_pci.c:147:
+static int pl061_pci_gpio_direction_output(struct gpio_chip *gpio,
+     unsigned nr, int value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/gpio/pl061_pci.c:147:
+     unsigned nr, int value)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#236: FILE: drivers/gpio/pl061_pci.c:147:
+     unsigned nr, int value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/gpio/pl061_pci.c:149:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/gpio/pl061_pci.c:150:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/gpio/pl061_pci.c:151:
+ u32 gpio_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/gpio/pl061_pci.c:152:
+ u32 data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/gpio/pl061_pci.c:153:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/gpio/pl061_pci.c:155:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#244: FILE: drivers/gpio/pl061_pci.c:155:
+ if (nr >= gpio->ngpio)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/gpio/pl061_pci.c:156:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/gpio/pl061_pci.c:157:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/gpio/pl061_pci.c:159:
+ spin_lock_irqsave(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/gpio/pl061_pci.c:161:
+ gpio_dir = ppread(base, GPIO_DIR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/gpio/pl061_pci.c:162:
+ gpio_dir |= 1 << nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/gpio/pl061_pci.c:163:
+ ppwrite(gpio_dir, base, GPIO_DIR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/gpio/pl061_pci.c:164:
+ data = ppread(base, GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/gpio/pl061_pci.c:165:
+ if (value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#254: FILE: drivers/gpio/pl061_pci.c:165:
+ if (value)
+  data |= (1 << nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/gpio/pl061_pci.c:166:
+  data |= (1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/gpio/pl061_pci.c:167:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#256: FILE: drivers/gpio/pl061_pci.c:167:
+ else
+  data &= ~(1 << nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/gpio/pl061_pci.c:168:
+  data &= ~(1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/gpio/pl061_pci.c:169:
+ ppwrite(data, base, GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/gpio/pl061_pci.c:171:
+ spin_unlock_irqrestore(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/gpio/pl061_pci.c:173:
+ return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: drivers/gpio/pl061_pci.c:176:
+static int pl061_pci_gpio_get_value(struct gpio_chip *gpio, unsigned $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#265: FILE: drivers/gpio/pl061_pci.c:176:
+static int pl061_pci_gpio_get_value(struct gpio_chip *gpio, unsigned 
+nr) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/gpio/pl061_pci.c:178:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/gpio/pl061_pci.c:179:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/gpio/pl061_pci.c:180:
+ u32 value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/gpio/pl061_pci.c:181:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/gpio/pl061_pci.c:183:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#272: FILE: drivers/gpio/pl061_pci.c:183:
+ if (nr >= gpio->ngpio)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/gpio/pl061_pci.c:184:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/gpio/pl061_pci.c:185:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/gpio/pl061_pci.c:187:
+ spin_lock_irqsave(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/gpio/pl061_pci.c:189:
+ value = ppread(base, GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/gpio/pl061_pci.c:191:
+ spin_unlock_irqrestore(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/gpio/pl061_pci.c:193:
+ return !!(value & (1 << nr));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/gpio/pl061_pci.c:197:
+static void pl061_pci_gpio_set_value(struct gpio_chip *gpio,
+    unsigned nr, int value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/gpio/pl061_pci.c:197:
+    unsigned nr, int value)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#286: FILE: drivers/gpio/pl061_pci.c:197:
+    unsigned nr, int value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/gpio/pl061_pci.c:199:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/gpio/pl061_pci.c:200:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/gpio/pl061_pci.c:201:
+ u32 data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/gpio/pl061_pci.c:202:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/gpio/pl061_pci.c:204:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#293: FILE: drivers/gpio/pl061_pci.c:204:
+ if (nr >= gpio->ngpio)
+  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/gpio/pl061_pci.c:205:
+  return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/gpio/pl061_pci.c:206:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/gpio/pl061_pci.c:208:
+ spin_lock_irqsave(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/gpio/pl061_pci.c:210:
+ data = ppread(base, GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/gpio/pl061_pci.c:211:
+ if (value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#300: FILE: drivers/gpio/pl061_pci.c:211:
+ if (value)
+  data |= (1 << nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/gpio/pl061_pci.c:212:
+  data |= (1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/gpio/pl061_pci.c:213:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#302: FILE: drivers/gpio/pl061_pci.c:213:
+ else
+  data &= ~(1 << nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/gpio/pl061_pci.c:214:
+  data &= ~(1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/gpio/pl061_pci.c:215:
+ ppwrite(data, base, GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/gpio/pl061_pci.c:217:
+ spin_unlock_irqrestore(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/gpio/pl061_pci.c:218:
+ return;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#310: FILE: drivers/gpio/pl061_pci.c:221:
+static int pl061_pci_gpio_to_irq(struct gpio_chip *gpio, unsigned nr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#310: FILE: drivers/gpio/pl061_pci.c:221:
+static int pl061_pci_gpio_to_irq(struct gpio_chip *gpio, unsigned nr) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/gpio/pl061_pci.c:222:
+ struct pl061_pci *pp = container_of(gpio, struct pl061_pci, gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/gpio/pl061_pci.c:223:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/gpio/pl061_pci.c:225:
+ if (nr >= gpio->ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#314: FILE: drivers/gpio/pl061_pci.c:225:
+ if (nr >= gpio->ngpio)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/gpio/pl061_pci.c:226:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/gpio/pl061_pci.c:227:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

CHECK:SPACING: No space is necessary after a cast
#318: FILE: drivers/gpio/pl061_pci.c:229:
+ if (pp->irq_base == (unsigned) -1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/gpio/pl061_pci.c:229:
+ if (pp->irq_base == (unsigned) -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#318: FILE: drivers/gpio/pl061_pci.c:229:
+ if (pp->irq_base == (unsigned) -1)
+  return -EINVAL;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: drivers/gpio/pl061_pci.c:229:
+ if (pp->irq_base == (unsigned) -1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/gpio/pl061_pci.c:230:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/gpio/pl061_pci.c:232:
+ return pp->irq_base + nr;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#327: FILE: drivers/gpio/pl061_pci.c:238:
+static void pl061_pci_gpio_irq_disable(unsigned irq) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#327: FILE: drivers/gpio/pl061_pci.c:238:
+static void pl061_pci_gpio_irq_disable(unsigned irq) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/gpio/pl061_pci.c:239:
+ struct pl061_pci *pp = get_irq_chip_data(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/gpio/pl061_pci.c:240:
+ unsigned nr = irq - pp->irq_base;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#329: FILE: drivers/gpio/pl061_pci.c:240:
+ unsigned nr = irq - pp->irq_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/gpio/pl061_pci.c:241:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/gpio/pl061_pci.c:242:
+ u32 gpio_irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/gpio/pl061_pci.c:243:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/gpio/pl061_pci.c:245:
+ if (nr >= pp->gpio.ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#334: FILE: drivers/gpio/pl061_pci.c:245:
+ if (nr >= pp->gpio.ngpio)
+  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/gpio/pl061_pci.c:246:
+  return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/gpio/pl061_pci.c:247:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/gpio/pl061_pci.c:249:
+ spin_lock_irqsave(&pp->irq_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/gpio/pl061_pci.c:251:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_RISING) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#340: FILE: drivers/gpio/pl061_pci.c:251:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_RISING) {
+  gpio_irq = ppread(base, GPIO_RIMSC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/gpio/pl061_pci.c:252:
+  gpio_irq = ppread(base, GPIO_RIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/gpio/pl061_pci.c:253:
+  gpio_irq &= ~(1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/gpio/pl061_pci.c:254:
+  ppwrite(gpio_irq, base, GPIO_RIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/gpio/pl061_pci.c:255:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/gpio/pl061_pci.c:257:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_FALLING) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#346: FILE: drivers/gpio/pl061_pci.c:257:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_FALLING) {
+  gpio_irq = ppread(base, GPIO_FIMSC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/gpio/pl061_pci.c:258:
+  gpio_irq = ppread(base, GPIO_FIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/gpio/pl061_pci.c:259:
+  gpio_irq &= ~(1 << nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/gpio/pl061_pci.c:260:
+  ppwrite(gpio_irq, base, GPIO_FIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/gpio/pl061_pci.c:261:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/gpio/pl061_pci.c:263:
+ spin_unlock_irqrestore(&pp->irq_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/gpio/pl061_pci.c:264:
+ return;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#356: FILE: drivers/gpio/pl061_pci.c:267:
+static void pl061_pci_gpio_irq_enable(unsigned irq) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#356: FILE: drivers/gpio/pl061_pci.c:267:
+static void pl061_pci_gpio_irq_enable(unsigned irq) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/gpio/pl061_pci.c:268:
+ struct pl061_pci *pp = get_irq_chip_data(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/gpio/pl061_pci.c:269:
+ unsigned nr = irq - pp->irq_base;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#358: FILE: drivers/gpio/pl061_pci.c:269:
+ unsigned nr = irq - pp->irq_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/gpio/pl061_pci.c:270:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/gpio/pl061_pci.c:271:
+ u32 gpio_irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/gpio/pl061_pci.c:272:
+ void *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/gpio/pl061_pci.c:274:
+ if (nr >= pp->gpio.ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#363: FILE: drivers/gpio/pl061_pci.c:274:
+ if (nr >= pp->gpio.ngpio)
+  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/gpio/pl061_pci.c:275:
+  return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/gpio/pl061_pci.c:276:
+ base = pp->reg_base[nr / PINS_PER_CHIP];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/gpio/pl061_pci.c:278:
+ spin_lock_irqsave(&pp->irq_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/gpio/pl061_pci.c:280:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_RISING) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#369: FILE: drivers/gpio/pl061_pci.c:280:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_RISING) {
+  gpio_irq = ppread(base, GPIO_RIMSC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/gpio/pl061_pci.c:281:
+  gpio_irq = ppread(base, GPIO_RIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/gpio/pl061_pci.c:282:
+  gpio_irq |= 1 << nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/gpio/pl061_pci.c:283:
+  ppwrite(gpio_irq, base, GPIO_RIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/gpio/pl061_pci.c:284:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/gpio/pl061_pci.c:286:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_FALLING) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#375: FILE: drivers/gpio/pl061_pci.c:286:
+ if (pp->irq_type[nr] & IRQ_TYPE_EDGE_FALLING) {
+  gpio_irq = ppread(base, GPIO_FIMSC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/gpio/pl061_pci.c:287:
+  gpio_irq = ppread(base, GPIO_FIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/gpio/pl061_pci.c:288:
+  gpio_irq |= 1 << nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/gpio/pl061_pci.c:289:
+  ppwrite(gpio_irq, base, GPIO_FIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/gpio/pl061_pci.c:290:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/gpio/pl061_pci.c:292:
+ spin_unlock_irqrestore(&pp->irq_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/gpio/pl061_pci.c:293:
+ return;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#385: FILE: drivers/gpio/pl061_pci.c:296:
+static int pl061_pci_gpio_irq_type(unsigned irq, unsigned trigger) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#385: FILE: drivers/gpio/pl061_pci.c:296:
+static int pl061_pci_gpio_irq_type(unsigned irq, unsigned trigger) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#385: FILE: drivers/gpio/pl061_pci.c:296:
+static int pl061_pci_gpio_irq_type(unsigned irq, unsigned trigger) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/gpio/pl061_pci.c:297:
+ struct pl061_pci *pp = get_irq_chip_data(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/gpio/pl061_pci.c:298:
+ unsigned nr = irq - pp->irq_base;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#387: FILE: drivers/gpio/pl061_pci.c:298:
+ unsigned nr = irq - pp->irq_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/gpio/pl061_pci.c:300:
+ if ((nr >= pp->gpio.ngpio)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#389: FILE: drivers/gpio/pl061_pci.c:300:
+ if ((nr >= pp->gpio.ngpio)
[...]
+  return -EINVAL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr >= pp->gpio.ngpio'
#389: FILE: drivers/gpio/pl061_pci.c:300:
+ if ((nr >= pp->gpio.ngpio)
+  || (trigger != IRQ_TYPE_EDGE_RISING
+   && trigger != IRQ_TYPE_EDGE_FALLING
+   && trigger != IRQ_TYPE_EDGE_BOTH))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#390: FILE: drivers/gpio/pl061_pci.c:301:
+ if ((nr >= pp->gpio.ngpio)
+  || (trigger != IRQ_TYPE_EDGE_RISING

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/gpio/pl061_pci.c:301:
+  || (trigger != IRQ_TYPE_EDGE_RISING$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#391: FILE: drivers/gpio/pl061_pci.c:302:
+  || (trigger != IRQ_TYPE_EDGE_RISING
+   && trigger != IRQ_TYPE_EDGE_FALLING

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/gpio/pl061_pci.c:302:
+   && trigger != IRQ_TYPE_EDGE_FALLING$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#392: FILE: drivers/gpio/pl061_pci.c:303:
+   && trigger != IRQ_TYPE_EDGE_FALLING
+   && trigger != IRQ_TYPE_EDGE_BOTH))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/gpio/pl061_pci.c:303:
+   && trigger != IRQ_TYPE_EDGE_BOTH))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/gpio/pl061_pci.c:304:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/gpio/pl061_pci.c:306:
+ pp->irq_type[nr] = trigger;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/gpio/pl061_pci.c:308:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/gpio/pl061_pci.c:312:
+ .name  = "GPIO",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/gpio/pl061_pci.c:313:
+ .enable  = pl061_pci_gpio_irq_enable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/gpio/pl061_pci.c:314:
+ .disable = pl061_pci_gpio_irq_disable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/gpio/pl061_pci.c:315:
+ .set_type = pl061_pci_gpio_irq_type,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/gpio/pl061_pci.c:318:
+/** All GPIO pins share a hardware irq */ static void $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#408: FILE: drivers/gpio/pl061_pci.c:319:
+pl061_pci_gpio_irq_handler(unsigned irq, struct irq_desc *desc) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/gpio/pl061_pci.c:320:
+ struct pl061_pci *pp = get_irq_chip_data(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/gpio/pl061_pci.c:321:
+ unsigned nr;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#410: FILE: drivers/gpio/pl061_pci.c:321:
+ unsigned nr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/gpio/pl061_pci.c:322:
+ u32 gpio_is = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/gpio/pl061_pci.c:323:
+ int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/gpio/pl061_pci.c:325:
+ for (i = 0; i < GPIO_BLOCKS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#414: FILE: drivers/gpio/pl061_pci.c:325:
+ for (i = 0; i < GPIO_BLOCKS; i++) {
+  gpio_is = ppread(pp->reg_base[i], GPIO_IS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/gpio/pl061_pci.c:326:
+  gpio_is = ppread(pp->reg_base[i], GPIO_IS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/gpio/pl061_pci.c:327:
+  if (gpio_is == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#416: FILE: drivers/gpio/pl061_pci.c:327:
+  if (gpio_is == 0)
+   continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/gpio/pl061_pci.c:328:
+   continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/gpio/pl061_pci.c:329:
+  desc->chip->ack(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/gpio/pl061_pci.c:330:
+  for_each_bit(nr, (unsigned long *)&gpio_is, PINS_PER_CHIP)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#419: FILE: drivers/gpio/pl061_pci.c:330:
+  for_each_bit(nr, (unsigned long *)&gpio_is, PINS_PER_CHIP)
+   generic_handle_irq(pl061_pci_gpio_to_irq(&pp->gpio,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/gpio/pl061_pci.c:331:
+   generic_handle_irq(pl061_pci_gpio_to_irq(&pp->gpio,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/gpio/pl061_pci.c:332:
+   generic_handle_irq(pl061_pci_gpio_to_irq(&pp->gpio,
+       nr));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/gpio/pl061_pci.c:332:
+       nr));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/gpio/pl061_pci.c:333:
+  desc->chip->unmask(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/gpio/pl061_pci.c:334:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/gpio/pl061_pci.c:336:
+ return;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#429: FILE: drivers/gpio/pl061_pci.c:340:
+static void pl061_pci_gpio_setup(struct pl061_pci *pp) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/gpio/pl061_pci.c:341:
+ struct gpio_chip *chip = &(pp->gpio);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pp->gpio
#430: FILE: drivers/gpio/pl061_pci.c:341:
+ struct gpio_chip *chip = &(pp->gpio);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/gpio/pl061_pci.c:343:
+ chip->request = pl061_pci_gpio_request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/gpio/pl061_pci.c:344:
+ chip->free = pl061_pci_gpio_free;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/gpio/pl061_pci.c:345:
+ chip->direction_input = pl061_pci_gpio_direction_input;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/gpio/pl061_pci.c:346:
+ chip->direction_output = pl061_pci_gpio_direction_output;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/gpio/pl061_pci.c:347:
+ chip->get = pl061_pci_gpio_get_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/gpio/pl061_pci.c:348:
+ chip->set = pl061_pci_gpio_set_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/gpio/pl061_pci.c:349:
+ chip->to_irq = pl061_pci_gpio_to_irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/gpio/pl061_pci.c:350:
+ chip->ngpio = PIN_NR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/gpio/pl061_pci.c:351:
+ chip->label = dev_name(&(pp->pdev->dev));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pp->pdev->dev
#440: FILE: drivers/gpio/pl061_pci.c:351:
+ chip->label = dev_name(&(pp->pdev->dev));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/gpio/pl061_pci.c:352:
+ chip->dev = &(pp->pdev->dev);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pp->pdev->dev
#441: FILE: drivers/gpio/pl061_pci.c:352:
+ chip->dev = &(pp->pdev->dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/gpio/pl061_pci.c:353:
+ chip->owner = THIS_MODULE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/gpio/pl061_pci.c:354:
+ chip->can_sleep = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/gpio/pl061_pci.c:355:
+ chip->base = pp->pd.gpio_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/gpio/pl061_pci.c:357:
+ return;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/gpio/pl061_pci.c:361:
+static int pl061_pci_probe(struct pci_dev *pdev,
+   const struct pci_device_id *pci_id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/gpio/pl061_pci.c:361:
+   const struct pci_device_id *pci_id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/gpio/pl061_pci.c:363:
+ struct pl061_pci *pp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/gpio/pl061_pci.c:364:
+ int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/gpio/pl061_pci.c:365:
+ int i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/gpio/pl061_pci.c:366:
+ unsigned int irq;$

WARNING:TYPO_SPELLING: 'verison' may be misspelled - perhaps 'version'?
#457: FILE: drivers/gpio/pl061_pci.c:368:
+ printk(KERN_INFO "pl061_pci: Module verison " DRV_VERSION "\n");
                                      ^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/gpio/pl061_pci.c:368:
+ printk(KERN_INFO "pl061_pci: Module verison " DRV_VERSION "\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#457: FILE: drivers/gpio/pl061_pci.c:368:
+ printk(KERN_INFO "pl061_pci: Module verison " DRV_VERSION "\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/gpio/pl061_pci.c:369:
+ pp = kzalloc(sizeof(*pp), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/gpio/pl061_pci.c:370:
+ if (!pp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#459: FILE: drivers/gpio/pl061_pci.c:370:
+ if (!pp)
+  return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/gpio/pl061_pci.c:371:
+  return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/gpio/pl061_pci.c:373:
+ pp->pdev = pdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/gpio/pl061_pci.c:374:
+ pp->pd.directions = 0x0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/gpio/pl061_pci.c:375:
+ pp->pd.values = 0x0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/gpio/pl061_pci.c:376:
+ pp->irq_base = NR_IRQS - PIN_NR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/gpio/pl061_pci.c:377:
+ pp->pd.gpio_base = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/gpio/pl061_pci.c:379:
+ spin_lock_init(&(pp->lock));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pp->lock
#468: FILE: drivers/gpio/pl061_pci.c:379:
+ spin_lock_init(&(pp->lock));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/gpio/pl061_pci.c:380:
+ spin_lock_init(&(pp->irq_lock));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pp->irq_lock
#469: FILE: drivers/gpio/pl061_pci.c:380:
+ spin_lock_init(&(pp->irq_lock));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/gpio/pl061_pci.c:382:
+ err = pci_enable_device(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/gpio/pl061_pci.c:383:
+ if (err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#472: FILE: drivers/gpio/pl061_pci.c:383:
+ if (err) {
+  printk(KERN_ERR "pl061_pci: Can't enable device.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/gpio/pl061_pci.c:384:
+  printk(KERN_ERR "pl061_pci: Can't enable device.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#473: FILE: drivers/gpio/pl061_pci.c:384:
+  printk(KERN_ERR "pl061_pci: Can't enable device.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/gpio/pl061_pci.c:385:
+  goto err_freepp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/gpio/pl061_pci.c:386:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/gpio/pl061_pci.c:387:
+ if (pci_resource_len(pdev, 0) < CHIP_REGS_LENGTH * GPIO_BLOCKS) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#476: FILE: drivers/gpio/pl061_pci.c:387:
+ if (pci_resource_len(pdev, 0) < CHIP_REGS_LENGTH * GPIO_BLOCKS) {
+  err = -ENOSPC;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/gpio/pl061_pci.c:388:
+  err = -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/gpio/pl061_pci.c:389:
+  goto err_freepp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/gpio/pl061_pci.c:390:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/gpio/pl061_pci.c:391:
+ if (!request_mem_region(pci_resource_start(pdev, 0),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#480: FILE: drivers/gpio/pl061_pci.c:391:
+ if (!request_mem_region(pci_resource_start(pdev, 0),
[...]
+  printk(KERN_WARNING "pl061_pci: Can't request iomem (0x%llx).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/gpio/pl061_pci.c:392:
+ if (!request_mem_region(pci_resource_start(pdev, 0),
+    CHIP_REGS_LENGTH * GPIO_BLOCKS,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/gpio/pl061_pci.c:392:
+    CHIP_REGS_LENGTH * GPIO_BLOCKS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/gpio/pl061_pci.c:393:
+    "pl061_pci")) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/gpio/pl061_pci.c:394:
+  printk(KERN_WARNING "pl061_pci: Can't request iomem (0x%llx).\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#483: FILE: drivers/gpio/pl061_pci.c:394:
+  printk(KERN_WARNING "pl061_pci: Can't request iomem (0x%llx).\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: drivers/gpio/pl061_pci.c:395:
+         (unsigned long long)pci_resource_start(pdev, 0));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/gpio/pl061_pci.c:395:
+         (unsigned long long)pci_resource_start(pdev, 0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/gpio/pl061_pci.c:396:
+  err = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/gpio/pl061_pci.c:397:
+  goto err_disable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/gpio/pl061_pci.c:398:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/gpio/pl061_pci.c:399:
+ pci_set_master(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/gpio/pl061_pci.c:400:
+ pci_set_drvdata(pdev, pp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/gpio/pl061_pci.c:403:
+ pp->reg_base[0] = ioremap(pci_resource_start(pdev, 0),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/gpio/pl061_pci.c:404:
+ pp->reg_base[0] = ioremap(pci_resource_start(pdev, 0),
+   CHIP_REGS_LENGTH * GPIO_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/gpio/pl061_pci.c:404:
+   CHIP_REGS_LENGTH * GPIO_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/gpio/pl061_pci.c:405:
+ if (!pp->reg_base[0]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#494: FILE: drivers/gpio/pl061_pci.c:405:
+ if (!pp->reg_base[0]) {
+  printk(KERN_ERR "pl061_pci: ioremap() failed\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: drivers/gpio/pl061_pci.c:406:
+  printk(KERN_ERR "pl061_pci: ioremap() failed\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#495: FILE: drivers/gpio/pl061_pci.c:406:
+  printk(KERN_ERR "pl061_pci: ioremap() failed\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/gpio/pl061_pci.c:407:
+  err = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/gpio/pl061_pci.c:408:
+  goto err_release_mem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/gpio/pl061_pci.c:409:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/gpio/pl061_pci.c:411:
+ for (i = 1; i < GPIO_BLOCKS; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#500: FILE: drivers/gpio/pl061_pci.c:411:
+ for (i = 1; i < GPIO_BLOCKS; i++)
+  pp->reg_base[i] =  pp->reg_base[i-1] + CHIP_REGS_LENGTH;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/gpio/pl061_pci.c:412:
+  pp->reg_base[i] =  pp->reg_base[i-1] + CHIP_REGS_LENGTH;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#501: FILE: drivers/gpio/pl061_pci.c:412:
+  pp->reg_base[i] =  pp->reg_base[i-1] + CHIP_REGS_LENGTH;
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/gpio/pl061_pci.c:414:
+ pl061_pci_gpio_setup(pp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/gpio/pl061_pci.c:415:
+ err = gpiochip_add(&pp->gpio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/gpio/pl061_pci.c:416:
+ if (err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#505: FILE: drivers/gpio/pl061_pci.c:416:
+ if (err) {
+  printk(KERN_ERR "pl061_pci: Failed to register GPIOs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/gpio/pl061_pci.c:417:
+  printk(KERN_ERR "pl061_pci: Failed to register GPIOs\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#506: FILE: drivers/gpio/pl061_pci.c:417:
+  printk(KERN_ERR "pl061_pci: Failed to register GPIOs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/gpio/pl061_pci.c:418:
+  goto err_release_mem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: drivers/gpio/pl061_pci.c:419:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/gpio/pl061_pci.c:421:
+ printk(KERN_INFO "pl061_pci: Abusing pl061_pci card for GPIOs\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#510: FILE: drivers/gpio/pl061_pci.c:421:
+ printk(KERN_INFO "pl061_pci: Abusing pl061_pci card for GPIOs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/gpio/pl061_pci.c:424:
+ for (i = 0; i < GPIO_BLOCKS; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#513: FILE: drivers/gpio/pl061_pci.c:424:
+ for (i = 0; i < GPIO_BLOCKS; i++)
+  ppwrite(0xffffffff, pp->reg_base[i], GPIO_IC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/gpio/pl061_pci.c:425:
+  ppwrite(0xffffffff, pp->reg_base[i], GPIO_IC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/gpio/pl061_pci.c:427:
+ irq = pdev->irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: drivers/gpio/pl061_pci.c:428:
+ if (irq < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#517: FILE: drivers/gpio/pl061_pci.c:428:
+ if (irq < 0) {
+  err = -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/gpio/pl061_pci.c:429:
+  err = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: drivers/gpio/pl061_pci.c:430:
+  goto err_iounmap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/gpio/pl061_pci.c:431:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/gpio/pl061_pci.c:433:
+ set_irq_chip_data(irq, pp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/gpio/pl061_pci.c:434:
+ set_irq_chained_handler(irq, pl061_pci_gpio_irq_handler);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/gpio/pl061_pci.c:436:
+ for (i = 0; i < GPIO_BLOCKS * PINS_PER_CHIP; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#525: FILE: drivers/gpio/pl061_pci.c:436:
+ for (i = 0; i < GPIO_BLOCKS * PINS_PER_CHIP; i++) {
+  if (pp->pd.directions & (1 << i))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/gpio/pl061_pci.c:437:
+  if (pp->pd.directions & (1 << i))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#526: FILE: drivers/gpio/pl061_pci.c:437:
+  if (pp->pd.directions & (1 << i))
+   pl061_pci_gpio_direction_output(&pp->gpio, i,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/gpio/pl061_pci.c:438:
+   pl061_pci_gpio_direction_output(&pp->gpio, i,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/gpio/pl061_pci.c:439:
+   pl061_pci_gpio_direction_output(&pp->gpio, i,
+     pp->pd.values & (1 << i));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/gpio/pl061_pci.c:439:
+     pp->pd.values & (1 << i));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/gpio/pl061_pci.c:440:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#529: FILE: drivers/gpio/pl061_pci.c:440:
+  else
+   pl061_pci_gpio_direction_input(&pp->gpio, i);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/gpio/pl061_pci.c:441:
+   pl061_pci_gpio_direction_input(&pp->gpio, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/gpio/pl061_pci.c:443:
+  set_irq_chip(i+pp->irq_base, &pl061_pci_gpio_irqchip);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#532: FILE: drivers/gpio/pl061_pci.c:443:
+  set_irq_chip(i+pp->irq_base, &pl061_pci_gpio_irqchip);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/gpio/pl061_pci.c:444:
+  set_irq_handler(i+pp->irq_base, handle_simple_irq);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#533: FILE: drivers/gpio/pl061_pci.c:444:
+  set_irq_handler(i+pp->irq_base, handle_simple_irq);
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/gpio/pl061_pci.c:445:
+  set_irq_chip_data(i+pp->irq_base, pp);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#534: FILE: drivers/gpio/pl061_pci.c:445:
+  set_irq_chip_data(i+pp->irq_base, pp);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/gpio/pl061_pci.c:446:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/gpio/pl061_pci.c:448:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/gpio/pl061_pci.c:450:
+ iounmap(pp->reg_base[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/gpio/pl061_pci.c:452:
+ release_mem_region(pci_resource_start(pdev, 0),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/gpio/pl061_pci.c:453:
+ release_mem_region(pci_resource_start(pdev, 0),
+      CHIP_REGS_LENGTH * GPIO_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/gpio/pl061_pci.c:453:
+      CHIP_REGS_LENGTH * GPIO_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: drivers/gpio/pl061_pci.c:454:
+ pci_set_drvdata(pdev, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/gpio/pl061_pci.c:456:
+ pci_disable_device(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/gpio/pl061_pci.c:458:
+ kfree(pp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/gpio/pl061_pci.c:460:
+ return err;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#552: FILE: drivers/gpio/pl061_pci.c:463:
+static void pl061_pci_remove(struct pci_dev *pdev) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/gpio/pl061_pci.c:464:
+ struct pl061_pci *pp = pci_get_drvdata(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/gpio/pl061_pci.c:466:
+ if (gpiochip_remove(&pp->gpio) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#555: FILE: drivers/gpio/pl061_pci.c:466:
+ if (gpiochip_remove(&pp->gpio) != 0)
+  printk(KERN_WARNING"pl061_pci: GPIO is busy\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/gpio/pl061_pci.c:467:
+  printk(KERN_WARNING"pl061_pci: GPIO is busy\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#556: FILE: drivers/gpio/pl061_pci.c:467:
+  printk(KERN_WARNING"pl061_pci: GPIO is busy\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#556: FILE: drivers/gpio/pl061_pci.c:467:
+  printk(KERN_WARNING"pl061_pci: GPIO is busy\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: drivers/gpio/pl061_pci.c:469:
+ iounmap(pp->reg_base[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/gpio/pl061_pci.c:470:
+ release_mem_region(pci_resource_start(pdev, 0),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/gpio/pl061_pci.c:471:
+ release_mem_region(pci_resource_start(pdev, 0),
+      CHIP_REGS_LENGTH * GPIO_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/gpio/pl061_pci.c:471:
+      CHIP_REGS_LENGTH * GPIO_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/gpio/pl061_pci.c:472:
+ pci_disable_device(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/gpio/pl061_pci.c:473:
+ pci_set_drvdata(pdev, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/gpio/pl061_pci.c:474:
+ kfree(pp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/gpio/pl061_pci.c:476:
+ return;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: drivers/gpio/pl061_pci.c:479:
+static int pl061_pci_suspend(struct pci_dev *pdev, pm_message_t state) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: drivers/gpio/pl061_pci.c:481:
+ struct pl061_pci *pp = pci_get_drvdata(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/gpio/pl061_pci.c:482:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/gpio/pl061_pci.c:483:
+ int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/gpio/pl061_pci.c:485:
+ spin_lock_irqsave(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: drivers/gpio/pl061_pci.c:487:
+ for (i = 0; i < GPIO_BLOCKS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#576: FILE: drivers/gpio/pl061_pci.c:487:
+ for (i = 0; i < GPIO_BLOCKS; i++) {
+  pp->saved_dat[i] = ppread(pp->reg_base[i], GPIO_DAT);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/gpio/pl061_pci.c:488:
+  pp->saved_dat[i] = ppread(pp->reg_base[i], GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/gpio/pl061_pci.c:489:
+  pp->saved_dir[i] = ppread(pp->reg_base[i], GPIO_DIRS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/gpio/pl061_pci.c:490:
+  pp->saved_fimsc[i] = ppread(pp->reg_base[i], GPIO_FIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/gpio/pl061_pci.c:491:
+  pp->saved_rimsc[i] = ppread(pp->reg_base[i], GPIO_RIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/gpio/pl061_pci.c:493:
+  ppwrite(0xffffffff, pp->reg_base[i], GPIO_IC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/gpio/pl061_pci.c:494:
+  ppwrite(0x0, pp->reg_base[i], GPIO_DIR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/gpio/pl061_pci.c:495:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/gpio/pl061_pci.c:497:
+ spin_unlock_irqrestore(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/gpio/pl061_pci.c:499:
+ pci_save_state(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/gpio/pl061_pci.c:500:
+ pci_disable_device(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/gpio/pl061_pci.c:501:
+ pci_set_power_state(pdev, pci_choose_state(pdev, state));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/gpio/pl061_pci.c:503:
+ return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#595: FILE: drivers/gpio/pl061_pci.c:506:
+static int pl061_pci_resume(struct pci_dev *pdev) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/gpio/pl061_pci.c:507:
+ struct pl061_pci *pp = pci_get_drvdata(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/gpio/pl061_pci.c:508:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/gpio/pl061_pci.c:509:
+ int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/gpio/pl061_pci.c:510:
+ int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/gpio/pl061_pci.c:512:
+ pci_set_power_state(pdev, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/gpio/pl061_pci.c:513:
+ err = pci_enable_device(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/gpio/pl061_pci.c:514:
+ if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#603: FILE: drivers/gpio/pl061_pci.c:514:
+ if (err)
+  return err;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/gpio/pl061_pci.c:515:
+  return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/gpio/pl061_pci.c:516:
+ pci_restore_state(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/gpio/pl061_pci.c:518:
+ spin_lock_irqsave(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/gpio/pl061_pci.c:520:
+ for (i = 0; i < GPIO_BLOCKS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#609: FILE: drivers/gpio/pl061_pci.c:520:
+ for (i = 0; i < GPIO_BLOCKS; i++) {
+  ppwrite(pp->saved_dat[i], pp->reg_base[i], GPIO_DAT);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/gpio/pl061_pci.c:521:
+  ppwrite(pp->saved_dat[i], pp->reg_base[i], GPIO_DAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/gpio/pl061_pci.c:522:
+  ppwrite(pp->saved_dir[i], pp->reg_base[i], GPIO_DIRS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: drivers/gpio/pl061_pci.c:523:
+  ppwrite(pp->saved_fimsc[i], pp->reg_base[i], GPIO_FIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: drivers/gpio/pl061_pci.c:524:
+  ppwrite(pp->saved_rimsc[i], pp->reg_base[i], GPIO_RIMSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: drivers/gpio/pl061_pci.c:525:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/gpio/pl061_pci.c:527:
+ spin_unlock_irqrestore(&pp->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/gpio/pl061_pci.c:529:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/gpio/pl061_pci.c:533:
+ { PCI_DEVICE(PCI_VENDOR_ID_STMICRO, PCI_DEVICE_ID_STMICRO_GPIO) },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/gpio/pl061_pci.c:534:
+ { 0, },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/gpio/pl061_pci.c:539:
+ .name  = "pl061_pci",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/gpio/pl061_pci.c:540:
+ .id_table  = pl061_pci_tbl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/gpio/pl061_pci.c:541:
+ .probe  = pl061_pci_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/gpio/pl061_pci.c:542:
+ .remove  = pl061_pci_remove,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/gpio/pl061_pci.c:543:
+ .suspend  = pl061_pci_suspend,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/gpio/pl061_pci.c:544:
+ .resume  = pl061_pci_resume,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/gpio/pl061_pci.c:549:
+ return pci_register_driver(&pl061_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: drivers/gpio/pl061_pci.c:555:
+ pci_unregister_driver(&pl061_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/gpio/pl061_pci.c:556:
+ return;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 393 warnings, 35 checks, 581 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
