CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nmi_watchdog == NMI_NONE'
#146: FILE: arch/x86/kernel/nmi_64.c:86:
+	if ((nmi_watchdog == NMI_NONE) || (nmi_watchdog == NMI_DISABLED))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nmi_watchdog == NMI_DISABLED'
#146: FILE: arch/x86/kernel/nmi_64.c:86:
+	if ((nmi_watchdog == NMI_NONE) || (nmi_watchdog == NMI_DISABLED))

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#154: FILE: arch/x86/kernel/nmi_64.c:92:
+	prev_nmi_count = kmalloc(NR_CPUS * sizeof(int), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#154: FILE: arch/x86/kernel/nmi_64.c:92:
+	prev_nmi_count = kmalloc(NR_CPUS * sizeof(int), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#159: FILE: arch/x86/kernel/nmi_64.c:96:
+	printk(KERN_INFO "Testing NMI watchdog ... ");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000357158.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 2 checks, 245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000357158.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
