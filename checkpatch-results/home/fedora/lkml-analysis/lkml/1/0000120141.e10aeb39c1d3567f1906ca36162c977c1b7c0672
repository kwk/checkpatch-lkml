WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#43: 
  stablizes, will merge it with other patches instead of being a seprate
                                                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
o Reference counting for io_group solves many problems, most of which occured

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#46: 
o Reference counting for io_group solves many problems, most of which occured
                                                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'signficant' may be misspelled - perhaps 'significant'?
#50: 
  for other cgroups at the root level. This problem can become signficant if
                                                               ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#68: 
o Also we no longer need to maintain a seprate linked list of idle
                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'reuests' may be misspelled - perhaps 'requests'?
#132: FILE: block/cfq-iosched.c:1314:
+		 * If old queue has got requests, those reuests will be
 		                                        ^^^^^^^

WARNING:TYPO_SPELLING: 'hiearchy' may be misspelled - perhaps 'hierarchy'?
#232: FILE: block/elevator-fq.c:736:
+	 * while we are traversing the hiearchy. It is possible that this
 	                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'hierarhcy' may be misspelled - perhaps 'hierarchy'?
#238: FILE: block/elevator-fq.c:742:
+	 * Hence, hold a reference, deactivate the hierarhcy of entities and
 	                                           ^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sd->next_active"
#252: FILE: block/elevator-fq.c:759:
+		if (sd->next_active != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#441: FILE: block/elevator-fq.c:1598:
+		BUG_ON(!RB_EMPTY_ROOT(&st->active));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#442: FILE: block/elevator-fq.c:1599:
+		BUG_ON(!RB_EMPTY_ROOT(&st->idle));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#443: FILE: block/elevator-fq.c:1600:
+		BUG_ON(st->wsum != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#448: FILE: block/elevator-fq.c:1603:
+	BUG_ON(iog->sched_data.next_active != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iog->sched_data.next_active"
#448: FILE: block/elevator-fq.c:1603:
+	BUG_ON(iog->sched_data.next_active != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#449: FILE: block/elevator-fq.c:1604:
+	BUG_ON(iog->sched_data.active_entity != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iog->sched_data.active_entity"
#449: FILE: block/elevator-fq.c:1604:
+	BUG_ON(iog->sched_data.active_entity != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#450: FILE: block/elevator-fq.c:1605:
+	BUG_ON(entity != NULL && entity->tree != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entity"
#450: FILE: block/elevator-fq.c:1605:
+	BUG_ON(entity != NULL && entity->tree != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entity->tree"
#450: FILE: block/elevator-fq.c:1605:
+	BUG_ON(entity != NULL && entity->tree != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#465: FILE: block/elevator-fq.c:1616:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#469: FILE: block/elevator-fq.c:1620:
+	BUG_ON(atomic_read(&iog->ref) <= 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: block/elevator-fq.c:1626:
+		parent = container_of(iog->my_entity->parent,
+					struct io_group, entity);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#532: FILE: block/elevator-fq.c:1674:
+	BUG_ON(iog->my_entity == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iog->my_entity"
#532: FILE: block/elevator-fq.c:1674:
+	BUG_ON(iog->my_entity == NULL);

WARNING:TYPO_SPELLING: 'entites' may be misspelled - perhaps 'entities'?
#571: FILE: block/elevator-fq.c:1706:
+		 * io group does not have any active entites. Because this
 		                                     ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#670: FILE: block/elevator-fq.c:1768:
+	BUG_ON(!hlist_empty(&iocg->group_data));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#704: FILE: block/elevator-fq.c:1788:
+	BUG_ON(!id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#709: FILE: block/elevator-fq.c:1792:
+	BUG_ON(!css);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#878: FILE: block/elevator-fq.h:522:
+extern void elv_put_iog(struct io_group *iog);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120141.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 8 checks, 769 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120141.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
