WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
insert it into the ring buffer. Then you can read it on /debug/tracing/trace

WARNING:TYPO_SPELLING: 'differents' may be misspelled - perhaps 'different'?
#54: 
vsnprintf() function, making now 3 differents functions to maintain
                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'shoudn't' may be misspelled - perhaps 'shouldn't'?
#75: 
  changes shoudn't be persistant when a callee helper returns.
          ^^^^^^^^

WARNING:TYPO_SPELLING: 'persistant' may be misspelled - perhaps 'persistent'?
#75: 
  changes shoudn't be persistant when a callee helper returns.
                      ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'alignement' may be misspelled - perhaps 'alignment'?
#78: 
- Various cleanups (code alignement, switch/case instead of if/else fountains).
                         ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: lib/vsprintf.c:430:
+static char *number(char *buf, char *end, unsigned long long num,
+			struct printf_spec spec)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#192: FILE: lib/vsprintf.c:478:
+		if (spec.base == 16) shift = 4;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#209: FILE: lib/vsprintf.c:492:
+	if (!(spec.flags & (ZEROPAD+LEFT))) {
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: lib/vsprintf.c:493:
+		while(--spec.field_width >= 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: lib/vsprintf.c:519:
+		char c = (spec.flags & ZEROPAD) ? '0' : ' ';
+		while (--spec.field_width >= 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: lib/vsprintf.c:576:
+static char *symbol_string(char *buf, char *end, void *ptr,
+				struct printf_spec spec)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#301: FILE: lib/vsprintf.c:584:
+	spec.field_width = 2*sizeof(void *);
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: lib/vsprintf.c:592:
+static char *resource_string(char *buf, char *end, struct resource *res,
+				struct printf_spec spec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: lib/vsprintf.c:646:
+static char *ip6_addr_string(char *buf, char *end, u8 *addr,
+				struct printf_spec spec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: lib/vsprintf.c:665:
+static char *ip4_addr_string(char *buf, char *end, u8 *addr,
+				struct printf_spec spec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: lib/vsprintf.c:709:
+static char *pointer(const char *fmt, char *buf, char *end, void *ptr,
+			struct printf_spec spec)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#452: FILE: lib/vsprintf.c:740:
+		spec.field_width = 2*sizeof(void *);
 		                    ^

CHECK:SPACING: No space is necessary after a cast
#457: FILE: lib/vsprintf.c:745:
+	return number(buf, end, (unsigned long) ptr, spec);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#525: FILE: lib/vsprintf.c:813:
+		case '-': spec->flags |= LEFT;    break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#526: FILE: lib/vsprintf.c:814:
+		case '+': spec->flags |= PLUS;    break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#527: FILE: lib/vsprintf.c:815:
+		case ' ': spec->flags |= SPACE;   break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#528: FILE: lib/vsprintf.c:816:
+		case '#': spec->flags |= SPECIAL; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#529: FILE: lib/vsprintf.c:817:
+		case '0': spec->flags |= ZEROPAD; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#530: FILE: lib/vsprintf.c:818:
+		default:  found = false;

CHECK:BRACES: braces {} should be used on all arms of this statement
#540: FILE: lib/vsprintf.c:828:
+	if (isdigit(*fmt))
[...]
+	else if (*fmt == '*') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: lib/vsprintf.c:912:
+	if (spec->qualifier == 'L')
[...]
+	else if (spec->qualifier == 'l') {
[...]
+	} else if (spec->qualifier == 'Z' || spec->qualifier == 'z') {
[...]
+	} else if (spec->qualifier == 't') {
[...]
+	} else if (spec->qualifier == 'h') {
[...]
+	} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#732: FILE: lib/vsprintf.c:997:
+			int copy = read;
+			if (str < end) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#816: FILE: lib/vsprintf.c:1021:
 
+				}

CHECK:SPACING: No space is necessary after a cast
#818: FILE: lib/vsprintf.c:1023:
+			c = (unsigned char) va_arg(args, int);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#845: FILE: lib/vsprintf.c:1039:
+			str = pointer(fmt+1, str, end, va_arg(args, void *),
 			                 ^

CHECK:SPACING: No space is necessary after a cast
#938: FILE: lib/vsprintf.c:1099:
+				num = (unsigned short) va_arg(args, int);

CHECK:SPACING: No space is necessary after a cast
#941: FILE: lib/vsprintf.c:1102:
+				num = (short) va_arg(args, int);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1103: FILE: lib/vsprintf.c:1362:
+			switch (spec.type) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1226: FILE: lib/vsprintf.c:1467:
+			int copy = read;
+			if (str < end) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1299: FILE: lib/vsprintf.c:1512:
+			str = pointer(fmt+1, str, end, get_arg(void *), spec);
 			                 ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1370: FILE: lib/vsprintf.c:1542:
+			switch (spec.type) {
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 8 warnings, 20 checks, 1294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
