WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .11
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#95: FILE: arch/sparc64/kernel/sys_sparc.c:458:
+					 (union semun) ptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: drivers/acpi/processor_idle.c:332:
+int acpi_processor_suspend(struct acpi_device * device, pm_message_t state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: drivers/acpi/processor_idle.c:338:
+int acpi_processor_resume(struct acpi_device * device)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#211: FILE: drivers/hwmon/lm87.c:132:
+				 (1350000 + (reg)*(div) / 2) / ((reg)*(div)))
 				                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#211: FILE: drivers/hwmon/lm87.c:132:
+				 (1350000 + (reg)*(div) / 2) / ((reg)*(div)))
 				                                     ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#220: FILE: drivers/hwmon/lm87.c:148:
+#define CHAN_NO_VID		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#377: FILE: drivers/media/video/ivtv/ivtv-fileops.c:756:
+	else if (s->type == IVTV_DEC_STREAM_TYPE_YUV && itv->output_mode == OUT_UDMA_YUV)
+	    itv->output_mode = OUT_NONE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/net/natsemi.c:674:
+         device_remove_file(&_dev->dev, &dev_attr_##_name)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/net/natsemi.c:674:
+         device_remove_file(&_dev->dev, &dev_attr_##_name)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#498: FILE: include/acpi/processor.h:282:
+int acpi_processor_suspend(struct acpi_device * device, pm_message_t state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#499: FILE: include/acpi/processor.h:283:
+int acpi_processor_resume(struct acpi_device * device);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#566: FILE: net/ieee80211/ieee80211_rx.c:370:
+		printk(KERN_INFO "%s: invalid SKB length %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: net/ieee80211/ieee80211_rx.c:371:
+		printk(KERN_INFO "%s: invalid SKB length %d\n",
+			dev->name, skb->len);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#708: FILE: net/ipv6/ndisc.c:1272:
+		   (IPV6_ADDR_UNICAST|IPV6_ADDR_LINKLOCAL)) {
 		                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#720: FILE: net/ipv6/ndisc.c:1348:
+	    ipv6_addr_type(target) != (IPV6_ADDR_UNICAST|IPV6_ADDR_LINKLOCAL)) {
 	                                                ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rose_loopback_neigh)...) over kmalloc(sizeof(struct rose_neigh)...)
#867: FILE: net/rose/rose_route.c:367:
+	rose_loopback_neigh = kmalloc(sizeof(struct rose_neigh), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#908: FILE: net/sched/cls_u32.c:521:
+		err = tcf_change_indev(tp, n->indev, tb[TCA_U32_INDEV-1]);
 		                                                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361787.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 5 warnings, 9 checks, 704 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361787.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
