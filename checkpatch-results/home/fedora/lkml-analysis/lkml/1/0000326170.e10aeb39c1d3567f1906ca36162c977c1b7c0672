WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#42: 
 - Cleaned up I/O driver managment of the core
                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#175: FILE: drivers/serial/8250_kgdb.c:56:
+static struct kgdb_io kgdb8250_io_ops;	/* initialized later */

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#328: FILE: drivers/serial/8250_kgdb.c:146:
+	/* Test UART existance. */
 	             ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#390: FILE: drivers/serial/8250_kgdb.c:178:
+	(void) kgdb8250_ioread(UART_IIR);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#391: FILE: drivers/serial/8250_kgdb.c:179:
+	(void) kgdb8250_ioread(UART_RX);

CHECK:SPACING: No space is necessary after a cast
#392: FILE: drivers/serial/8250_kgdb.c:180:
+	(void) kgdb8250_ioread(UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#393: FILE: drivers/serial/8250_kgdb.c:181:
+	(void) kgdb8250_ioread(UART_MSR);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#445: FILE: drivers/serial/8250_kgdb.c:219:
+	strncpy(config, str, KGD8250_MAX_CONFIG_STR-1);
 	                                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#466: FILE: drivers/serial/8250_kgdb.c:225:
+	if (!strncmp(str, "io", 2)) {
[...]
+	} else if (!strncmp(str, "mmap", 4)) {
[...]
+	} else if (!strncmp(str, "mmio", 4)) {
[...]
+	} else if (!strncmp(str, "ttyS", 4)) {
[...]
+		if (*str != ',')
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#481: FILE: drivers/serial/8250_kgdb.c:240:
+		line = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#498: FILE: drivers/serial/8250_kgdb.c:248:
+			printk(KERN_WARNING "kgdb8250: ttyS%d init delayed, "

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/serial/8250_kgdb.c:249:
+			printk(KERN_WARNING "kgdb8250: ttyS%d init delayed, "
+			       "use io|mmio|mmap syntax for early init.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#534: FILE: drivers/serial/8250_kgdb.c:258:
+		kgdb8250_baud = simple_strtoul(str, &str, 10);

CHECK:BRACES: Unbalanced braces around else statement
#547: FILE: drivers/serial/8250_kgdb.c:266:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#554: FILE: drivers/serial/8250_kgdb.c:273:
+	if (kgdb8250_port.iotype == UPIO_PORT)
[...]
+	else {
[...]

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#555: FILE: drivers/serial/8250_kgdb.c:274:
+		kgdb8250_port.iobase = simple_strtoul(str, &str, 16);

CHECK:BRACES: Unbalanced braces around else statement
#556: FILE: drivers/serial/8250_kgdb.c:275:
+	else {

CHECK:SPACING: No space is necessary after a cast
#559: FILE: drivers/serial/8250_kgdb.c:278:
+				(unsigned long) simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#559: FILE: drivers/serial/8250_kgdb.c:278:
+				(unsigned long) simple_strtoul(str, &str, 16);

CHECK:SPACING: No space is necessary after a cast
#562: FILE: drivers/serial/8250_kgdb.c:281:
+				(void *) simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#562: FILE: drivers/serial/8250_kgdb.c:281:
+				(void *) simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#567: FILE: drivers/serial/8250_kgdb.c:286:
+		kgdb8250_port.regshift = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#583: FILE: drivers/serial/8250_kgdb.c:293:
+	kgdb8250_baud = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#593: FILE: drivers/serial/8250_kgdb.c:301:
+	kgdb8250_port.irq = simple_strtoul(str, &str, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: drivers/serial/8250_kgdb.c:318:
+			kgdb8250_port.membase = ioremap(kgdb8250_port.mapbase,
+						8 << kgdb8250_port.regshift);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#638: FILE: drivers/serial/8250_kgdb.c:330:
+		printk(KERN_ERR "kgdb8250: UART initialization failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#760: FILE: drivers/serial/8250_kgdb.c:386:
+		printk(KERN_ERR "kgdb8250: failed to request the IRQ (%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#780: FILE: drivers/serial/8250_kgdb.c:398:
+	printk(KERN_CRIT "kgdb: Unable to reserve mandatory hardware "

WARNING:SPLIT_STRING: quoted string split across lines
#781: FILE: drivers/serial/8250_kgdb.c:399:
+	printk(KERN_CRIT "kgdb: Unable to reserve mandatory hardware "
+			 "resources.\n");

CHECK:SPACING: No space is necessary after a cast
#835: FILE: drivers/serial/8250_kgdb.c:412:
+	(void) kgdb8250_ioread(UART_RX);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#887: FILE: drivers/serial/8250_kgdb.c:446:
+		printk(KERN_ERR "%s: config string too long.\n", kp->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#893: FILE: drivers/serial/8250_kgdb.c:451:
+		printk(KERN_ERR "kgd8250: Cannot reconfigure while KGDB is "

WARNING:SPLIT_STRING: quoted string split across lines
#894: FILE: drivers/serial/8250_kgdb.c:452:
+		printk(KERN_ERR "kgd8250: Cannot reconfigure while KGDB is "
+				"connected.\n");

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#936: FILE: drivers/serial/8250_kgdb.c:480:
+static struct kgdb_io kgdb8250_io_ops = {

WARNING:SPACING: Unnecessary space before function pointer arguments
#1106: FILE: include/linux/kgdb.h:260:
+	int		(*read_char) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1107: FILE: include/linux/kgdb.h:261:
+	void		(*write_char) (u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1107: FILE: include/linux/kgdb.h:261:
+	void		(*write_char) (u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1108: FILE: include/linux/kgdb.h:262:
+	void		(*flush) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1109: FILE: include/linux/kgdb.h:263:
+	int		(*init) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1110: FILE: include/linux/kgdb.h:264:
+	void		(*pre_exception) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1111: FILE: include/linux/kgdb.h:265:
+	void		(*post_exception) (void);

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#1161: FILE: kernel/kgdb.c:91:
+static struct kgdb_io		*kgdb_io_ops;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1172: FILE: kernel/kgdb.c:99:
+	[0 ... KGDB_MAX_BREAKPOINTS-1] = { .state = BP_UNDEFINED }
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1183: FILE: kernel/kgdb.c:115:
+	[0 ... NR_CPUS-1] = __SPIN_LOCK_UNLOCKED(slave_cpu_locks)
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1194: FILE: kernel/kgdb.c:176:
+	if (kgdb_set_mem((char *)addr, arch_kgdb_ops.gdb_bpt_instr,
 						BREAK_INSTR_SIZE) != 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 37)
#1209: FILE: kernel/kgdb.c:223:
+		while ((ch = (kgdb_io_ops->read_char())) != '$')
 			/* nothing */;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: kernel/kgdb.c:1131:
+	if (arch_kgdb_ops.shadowth &&
 			ks->kgdb_usethreadid >= pid_max + num_online_cpus()) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1471: FILE: kernel/kgdb.c:1828:
+		for (i = NR_CPUS-1; i >= 0; i--)
 		                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1471: FILE: kernel/kgdb.c:1828:
+		for (i = NR_CPUS-1; i >= 0; i--)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1525: FILE: kernel/kgdb.c:2016:
+	printk(KERN_CRIT "kgdb: Waiting for connection from remote gdb...\n");

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#1534: FILE: kernel/kgdb.c:2020:
+int kgdb_register_io_module(struct kgdb_io *new_kgdb_io_ops)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1558: FILE: kernel/kgdb.c:2029:
+		printk(KERN_ERR "kgdb: Another I/O driver is already "

WARNING:SPLIT_STRING: quoted string split across lines
#1559: FILE: kernel/kgdb.c:2030:
+		printk(KERN_ERR "kgdb: Another I/O driver is already "
+				"registered with KGDB.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1618: FILE: kernel/kgdb.c:2046:
+	printk(KERN_INFO "kgdb: Registered I/O driver %s.\n",

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#1668: FILE: kernel/kgdb.c:2059:
+void kgdb_unregister_io_module(struct kgdb_io *old_kgdb_io_ops)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1681: FILE: kernel/kgdb.c:2061:
+	BUG_ON(kgdb_connected);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1726: FILE: kernel/kgdb.c:2076:
+	printk(KERN_INFO "kgdb: Unregistered I/O driver %s, debugger "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1727: FILE: kernel/kgdb.c:2077:
+^I                 "disabled.\n", old_kgdb_io_ops->name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPLIT_STRING: quoted string split across lines
#1727: FILE: kernel/kgdb.c:2077:
+	printk(KERN_INFO "kgdb: Unregistered I/O driver %s, debugger "
+	                 "disabled.\n", old_kgdb_io_ops->name);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1938: FILE: lib/Kconfig.kgdb:55:
+config KGDBOC
+	tristate "KGDB: Share serial console and kgdb port"
+	depends on KGDB
+	select SERIAL_POLL
+	select MAGIC_SYSRQ
+	help
+	  Share a serial console with kgdb.  The sysrq-g must be used
+	  to break in initially.

Kconfig symbols should have a help text which fully describes
it.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2084: FILE: drivers/serial/kgdboc.c:132:
+		printk(KERN_ERR "kgdboc: config string too long\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326170.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 42 warnings, 18 checks, 2015 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326170.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
