WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linux-omap@vger.kernel.org; LKML; linux-serial@vger.kernel.org', should be: 'linux-omap@vger.kernel.org; (LKML; linux-serial@vger.kernel.org)'
#107: 
To: linux-omap@vger.kernel.org; LKML; linux-serial@vger.kernel.org

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#139: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#145: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:2:
+ * arch/arm/plat-omap/include/mach/omap-serial.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:12:
+ * This file is licensed under the terms of the GNU General Public $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:14:
+ * version 2. This program is licensed "as is" without any warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:37:
+#if defined(CONFIG_SERIAL_OMAP_CONSOLE) && defined(CONFIG_MAGIC_SYSRQ) $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#181: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:38:
+#define SUPPORT_SYSRQ #endif
+
+#ifdef CONFIG_ARCH_OMAP34XX
+#define OMAP_MDR1_DISABLE 	0x07

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:41:
+#define OMAP_MDR1_DISABLE ^I0x07$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:42:
+#define OMAP_MDR1_MODE13X ^I0x03$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:43:
+#define OMAP_MDR1_MODE16X ^I0x00$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#207: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:64:
+#define UART_BASE(uart_no)		(uart_no == UART1) ?

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'uart_no' may be better as '(uart_no)' to avoid precedence issues
#207: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:64:
+#define UART_BASE(uart_no)		(uart_no == UART1) ?

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#208: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:64:
OMAP_UART1_BASE :\

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#213: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:68:
+#define UART_MODULE_BASE(uart_no)	(UART1 == uart_no ? \

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#213: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:68:
+#define UART_MODULE_BASE(uart_no)	(UART1 == uart_no ? \
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'uart_no' may be better as '(uart_no)' to avoid precedence issues
#213: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:68:
+#define UART_MODULE_BASE(uart_no)	(UART1 == uart_no ? \
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#216: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:70:
+					(UART2 == uart_no ? \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#216: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:70:
+					(UART2 == uart_no ? \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#226: FILE: arch/arm/plat-omap/include/mach/omap-serial.h:78:
+	 resource_size_t mapbase;       /* resource base */

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#242: FILE: drivers/serial/Kconfig:1362:
+config SERIAL_OMAP
+	bool "OMAP serial port support"
+	depends on ARM && ARCH_OMAP
+	select SERIAL_CORE
+	help
+	If you have a machine based on an Texas Instruments OMAP CPU you
+	can enable its onboard serial ports by enabling this option.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#250: FILE: drivers/serial/Kconfig:1370:
+config SERIAL_OMAP_CONSOLE
+	bool "Console on OMAP serial port"
+	depends on SERIAL_OMAP
+	select SERIAL_CORE_CONSOLE
+	help
+	If you have enabled the serial port on the Texas Instruments

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#269: FILE: drivers/serial/Kconfig:1385:
+config SERIAL_OMAP_DMA_UART1
+	bool "UART1 DMA support"
+	depends on SERIAL_OMAP
+	help
+	If you have enabled the serial port on the Texas Instruments

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#294: FILE: drivers/serial/Kconfig:1408:
+config SERIAL_OMAP_DMA_UART2
+	bool "UART2 DMA support"
+	depends on SERIAL_OMAP
+	help
+	  If you have enabled the serial port on the Texas Instruments

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#319: FILE: drivers/serial/Kconfig:1431:
+config SERIAL_OMAP_DMA_UART3
+	bool "UART3 DMA support"
+	depends on SERIAL_OMAP
+	help
+	  If you have enabled the serial port on the Texas Instruments

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#357: FILE: drivers/serial/omap-serial.c

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#361: FILE: drivers/serial/omap-serial.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#362: FILE: drivers/serial/omap-serial.c:2:
+ * drivers/serial/omap-serial.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: drivers/serial/omap-serial.c:12:
+ * This file is licensed under the terms of the GNU General Public $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/serial/omap-serial.c:14:
+ * version 2. This program is licensed "as is" without any warranty of $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#401: FILE: drivers/serial/omap-serial.c:41:
+static u8 uart_dma_tx[MAX_UARTS + 1] =
+	{OMAP24XX_DMA_UART1_TX, OMAP24XX_DMA_UART2_TX,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#404: FILE: drivers/serial/omap-serial.c:43:
+static u8 uart_dma_rx[MAX_UARTS + 1] =
+	{OMAP24XX_DMA_UART1_RX, OMAP24XX_DMA_UART2_RX,

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#410: FILE: drivers/serial/omap-serial.c:48:
+	dma_addr_t rx_buf_dma_phys;	/* Physical adress of RX DMA
 	                           	            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#412: FILE: drivers/serial/omap-serial.c:49:
+	dma_addr_t tx_buf_dma_phys;	/* Physical adress of TX DMA
 	                           	            ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#412: FILE: drivers/serial/omap-serial.c:49:
+	dma_addr_t rx_buf_dma_phys;	/* Physical adress of RX DMA
+	dma_addr_t tx_buf_dma_phys;	/* Physical adress of TX DMA

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#414: FILE: drivers/serial/omap-serial.c:50:
+	dma_addr_t tx_buf_dma_phys;	/* Physical adress of TX DMA
+	/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#424: FILE: drivers/serial/omap-serial.c:59:
+	spinlock_t tx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#425: FILE: drivers/serial/omap-serial.c:60:
+	spinlock_t rx_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#426: FILE: drivers/serial/omap-serial.c:61:
+^Istruct timer_list ^Irx_timer;/* timer to poll activity on rx$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#428: FILE: drivers/serial/omap-serial.c:62:
+	struct timer_list 	rx_timer;/* timer to poll activity on rx
+	int rx_buf_size;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#451: FILE: drivers/serial/omap-serial.c:85:
+	spinlock_t		uart_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: drivers/serial/omap-serial.c:88:
+static struct uart_omap_port *ui[MAX_UARTS + 1]; unsigned int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/serial/omap-serial.c:91:
+/* Forward declaration of dma callback functions */ static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: drivers/serial/omap-serial.c:92:
+uart_tx_dma_callback(int lch, u16 ch_status, void *data); #ifdef DEBUG $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: drivers/serial/omap-serial.c:93:
+static void serial_omap_display_reg(struct uart_port *port); #endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/serial/omap-serial.c:94:
+static void serial_omap_rx_timeout(unsigned long uart_no); static void $

CHECK:BRACES: braces {} should be used on all arms of this statement
#472: FILE: drivers/serial/omap-serial.c:106:
+		if (!strncmp(next, CONSOLE_NAME, i)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#475: FILE: drivers/serial/omap-serial.c:109:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#475: FILE: drivers/serial/omap-serial.c:109:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#485: FILE: drivers/serial/omap-serial.c:119:
+			printk(KERN_INFO "Invalid Console Name\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/serial/omap-serial.c:127:
+static inline unsigned int serial_in(struct uart_omap_port *up, int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: drivers/serial/omap-serial.c:135:
+static inline void serial_out(struct uart_omap_port *up, int offset, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/serial/omap-serial.c:136:
+static inline void serial_out(struct uart_omap_port *up, int offset, 
+int value) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#509: FILE: drivers/serial/omap-serial.c:143:
+static inline void serial_omap_clear_fifos(struct uart_omap_port *p) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#522: FILE: drivers/serial/omap-serial.c:155:
+static unsigned int
+serial_omap_get_divisor(struct uart_port *port, unsigned int baud) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#525: FILE: drivers/serial/omap-serial.c:158:
+	unsigned int divisor;
+	if (baud > OMAP_MODE13X_SPEED && baud != 3000000)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#529: FILE: drivers/serial/omap-serial.c:162:
+	return port->uartclk/(baud * divisor); }
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#531: FILE: drivers/serial/omap-serial.c:164:
+static void serial_omap_stop_rxdma(struct uart_omap_port *up) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#541: FILE: drivers/serial/omap-serial.c:174:
+static void serial_omap_enable_ms(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_enable_ms', this function's name, in a string
#544: FILE: drivers/serial/omap-serial.c:177:
+	DPRINTK("serial_omap_enable_ms+%d\n", up->pdev->id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#549: FILE: drivers/serial/omap-serial.c:182:
+static void serial_omap_stop_tx(struct uart_port *port) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: drivers/serial/omap-serial.c:184:
+	struct uart_omap_port *up = (struct uart_omap_port *)port;
+	if (up->use_dma) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#552: FILE: drivers/serial/omap-serial.c:185:
+		if (up->uart_dma.tx_dma_channel != 0xFF) {
[...]
nothing,

WARNING:LINE_SPACING: Missing a blank line after declarations
#576: FILE: drivers/serial/omap-serial.c:207:
+		unsigned int tmp;
+		tmp = (serial_in(up, UART_OMAP_SYSC) & 0x7) | (2 << 3);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#582: FILE: drivers/serial/omap-serial.c:213:
+static void serial_omap_stop_rx(struct uart_port *port) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#584: FILE: drivers/serial/omap-serial.c:215:
+	struct uart_omap_port *up = (struct uart_omap_port *)port;
+	serial_omap_stop_rxdma(up);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#589: FILE: drivers/serial/omap-serial.c:220:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: drivers/serial/omap-serial.c:222:
+static inline void receive_chars(struct uart_omap_port *up, int $

CHECK:BRACES: braces {} should be used on all arms of this statement
#607: FILE: drivers/serial/omap-serial.c:238:
+			if (*status & UART_LSR_BI) {
[...]
+			} else if (*status & UART_LSR_PE)
[...]
+			else if (*status & UART_LSR_FE)
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#631: FILE: drivers/serial/omap-serial.c:262:
+			if (up->port.line == up->port.cons->index) {
[...]
xmit */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#634: FILE: drivers/serial/omap-serial.c:264:
+				/* Recover the break flag from console
+				*status |= up->lsr_break_flag;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#657: FILE: drivers/serial/omap-serial.c:286:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#701: FILE: drivers/serial/omap-serial.c:328:
+		unsigned int tmp;
+		tmp = (serial_in(up, UART_OMAP_SYSC) & 0x7) | (1 << 3);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#706: FILE: drivers/serial/omap-serial.c:332:
+	if (up->use_dma && !(up->port.x_char)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#713: FILE: drivers/serial/omap-serial.c:338:
+		spin_lock(&(up->uart_dma.tx_lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_lock
#715: FILE: drivers/serial/omap-serial.c:340:
+		spin_unlock(&(up->uart_dma.tx_lock));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#723: FILE: drivers/serial/omap-serial.c:345:
+		 * transfers */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#732: FILE: drivers/serial/omap-serial.c:353:
+			omap_request_dma(uart_dma_tx[up->pdev->id-1],
 			                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/serial/omap-serial.c:354:
+			omap_request_dma(uart_dma_tx[up->pdev->id-1],
+					"UART Tx DMA",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.tx_dma_channel
#736: FILE: drivers/serial/omap-serial.c:356:
+					&(up->uart_dma.tx_dma_channel));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: drivers/serial/omap-serial.c:361:
+		omap_set_dma_src_params(up->uart_dma.tx_dma_channel, 0,
0, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#745: FILE: drivers/serial/omap-serial.c:363:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#753: FILE: drivers/serial/omap-serial.c:368:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#762: FILE: drivers/serial/omap-serial.c:377:
+static unsigned int check_modem_status(struct uart_omap_port *up) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#764: FILE: drivers/serial/omap-serial.c:379:
+	int status;
+	status = serial_in(up, UART_MSR);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "up->port.info"
#772: FILE: drivers/serial/omap-serial.c:387:
+	    up->port.info != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#792: FILE: drivers/serial/omap-serial.c:407:
+static inline irqreturn_t serial_omap_irq(int irq, void *dev_id) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#800: FILE: drivers/serial/omap-serial.c:415:
+	if ((iir & 0x4) && up->use_dma) {
[...]
+	} else if (lsr & UART_LSR_DR)
[...]

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#814: FILE: drivers/serial/omap-serial.c:429:
+static unsigned int serial_omap_tx_empty(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_tx_empty', this function's name, in a string
#819: FILE: drivers/serial/omap-serial.c:434:
+	DPRINTK("serial_omap_tx_empty+%d\n", up->pdev->id);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#828: FILE: drivers/serial/omap-serial.c:442:
+static unsigned int serial_omap_get_mctrl(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_get_mctrl', this function's name, in a string
#834: FILE: drivers/serial/omap-serial.c:448:
+	DPRINTK("serial_omap_get_mctrl+%d\n", up->pdev->id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: drivers/serial/omap-serial.c:462:
+static void serial_omap_set_mctrl(struct uart_port *port, unsigned int $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#848: FILE: drivers/serial/omap-serial.c:462:
+static void serial_omap_set_mctrl(struct uart_port *port, unsigned int 
+mctrl) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_set_mctrl', this function's name, in a string
#853: FILE: drivers/serial/omap-serial.c:467:
+	DPRINTK("serial_omap_set_mctrl+%d\n", up->pdev->id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: drivers/serial/omap-serial.c:483:
+static void serial_omap_break_ctl(struct uart_port *port, int $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#869: FILE: drivers/serial/omap-serial.c:483:
+static void serial_omap_break_ctl(struct uart_port *port, int 
+break_state) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_break_ctl', this function's name, in a string
#874: FILE: drivers/serial/omap-serial.c:488:
+	DPRINTK("serial_omap_break_ctl+%d\n", up->pdev->id);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#883: FILE: drivers/serial/omap-serial.c:497:
+static int serial_omap_startup(struct uart_port *port) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/serial/omap-serial.c:516:
+	retval = request_irq(up->port.irq, serial_omap_irq, irq_flags,
+				up->name, up);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_startup', this function's name, in a string
#905: FILE: drivers/serial/omap-serial.c:519:
+	DPRINTK("serial_omap_startup+%d\n", up->pdev->id);

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#920: FILE: drivers/serial/omap-serial.c:532:
+	 * (they will be reenabled in set_termios())
 	                 ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#930: FILE: drivers/serial/omap-serial.c:542:
+	(void) serial_in(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#931: FILE: drivers/serial/omap-serial.c:543:
+	(void) serial_in(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#932: FILE: drivers/serial/omap-serial.c:544:
+	(void) serial_in(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#933: FILE: drivers/serial/omap-serial.c:545:
+	(void) serial_in(up, UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#961: FILE: drivers/serial/omap-serial.c:573:
+		(void) inb_p(icp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around up->uart_dma.rx_timer
#976: FILE: drivers/serial/omap-serial.c:585:
+		init_timer(&(up->uart_dma.rx_timer));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#981: FILE: drivers/serial/omap-serial.c:589:
+		/* Currently the buffer size is 4KB. Can increase it
+		up->uart_dma.rx_buf = dma_alloc_coherent(NULL,

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#987: FILE: drivers/serial/omap-serial.c:594:
+		/*
+		* Finally, enable interrupts.  Note: Modem status

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1000: FILE: drivers/serial/omap-serial.c:605:
+static void serial_omap_shutdown(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_shutdown', this function's name, in a string
#1004: FILE: drivers/serial/omap-serial.c:609:
+	DPRINTK("serial_omap_shutdown+%d\n", up->pdev->id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1012: FILE: drivers/serial/omap-serial.c:617:
+	if (up->port.flags & UPF_FOURPORT) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1016: FILE: drivers/serial/omap-serial.c:621:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1031: FILE: drivers/serial/omap-serial.c:635:
+	(void) serial_in(up, UART_RX);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1034: FILE: drivers/serial/omap-serial.c:638:
+		int tmp;
+		if (up->is_buf_dma_alloced) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: drivers/serial/omap-serial.c:640:
+			dma_free_coherent(up->port.dev,
+				  UART_XMIT_SIZE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1100: FILE: drivers/serial/omap-serial.c:702:
+	baud = uart_get_baud_rate(port, termios, old, 0,
+	quot = serial_omap_get_divisor(port, baud);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1165: FILE: drivers/serial/omap-serial.c:764:
+	serial_out(up, UART_DLL, quot & 0xff);		/* LS of divisor
+	serial_out(up, UART_DLM, quot >> 8);		/* MS of divisor

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1167: FILE: drivers/serial/omap-serial.c:765:
+	serial_out(up, UART_DLM, quot >> 8);		/* MS of divisor
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1171: FILE: drivers/serial/omap-serial.c:769:
+		serial_out(up, UART_OMAP_SCR  , ((1 << 6) | (1 << 7)));
 		                              ^

CHECK:SPACING: No space is necessary after a cast
#1186: FILE: drivers/serial/omap-serial.c:784:
+	(void) serial_in(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#1187: FILE: drivers/serial/omap-serial.c:785:
+	(void) serial_in(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#1188: FILE: drivers/serial/omap-serial.c:786:
+	(void) serial_in(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#1189: FILE: drivers/serial/omap-serial.c:787:
+	(void) serial_in(up, UART_MSR);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_set_termios', this function's name, in a string
#1199: FILE: drivers/serial/omap-serial.c:797:
+	DPRINTK("serial_omap_set_termios+%d\n", up->pdev->id); #ifdef

WARNING:LINE_SPACING: Missing a blank line after declarations
#1211: FILE: drivers/serial/omap-serial.c:808:
+	unsigned char efr;
+	DPRINTK("serial_omap_pm+%d\n", up->pdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_pm', this function's name, in a string
#1211: FILE: drivers/serial/omap-serial.c:808:
+	DPRINTK("serial_omap_pm+%d\n", up->pdev->id);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1223: FILE: drivers/serial/omap-serial.c:820:
+static void serial_omap_release_port(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_release_port', this function's name, in a string
#1224: FILE: drivers/serial/omap-serial.c:821:
+	DPRINTK("serial_omap_release_port+\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1227: FILE: drivers/serial/omap-serial.c:824:
+static int serial_omap_request_port(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_request_port', this function's name, in a string
#1228: FILE: drivers/serial/omap-serial.c:825:
+	DPRINTK("serial_omap_request_port+\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: drivers/serial/omap-serial.c:829:
+static void serial_omap_config_port(struct uart_port *port, int flags) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_config_port', this function's name, in a string
#1236: FILE: drivers/serial/omap-serial.c:833:
+	DPRINTK("serial_omap_config_port+%d\n", up->pdev->id);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1240: FILE: drivers/serial/omap-serial.c:837:
+static int
+serial_omap_verify_port(struct uart_port *port, struct serial_struct 
+*ser) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1241: FILE: drivers/serial/omap-serial.c:838:
+serial_omap_verify_port(struct uart_port *port, struct serial_struct $

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1242: FILE: drivers/serial/omap-serial.c:839:
+*ser) {
  ^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_verify_port', this function's name, in a string
#1244: FILE: drivers/serial/omap-serial.c:841:
+	DPRINTK("serial_omap_verify_port+\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1248: FILE: drivers/serial/omap-serial.c:845:
+static const char *
+serial_omap_type(struct uart_port *port) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial_omap_type', this function's name, in a string
#1252: FILE: drivers/serial/omap-serial.c:849:
+	DPRINTK("serial_omap_type+%d\n", up->pdev->id);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1267: FILE: drivers/serial/omap-serial.c:864:
+static inline void wait_for_xmitr(struct uart_omap_port *up) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1287: FILE: drivers/serial/omap-serial.c:884:
+			unsigned int msr = serial_in(up, UART_MSR);
+			up->msr_saved_flags |= msr & MSR_SAVE_FLAGS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: drivers/serial/omap-serial.c:909:
+serial_omap_console_write(struct console *co, const char *s,
+		unsigned int count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1326: FILE: drivers/serial/omap-serial.c:921:
+	uart_console_write(&up->port, s, count,
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1344: FILE: drivers/serial/omap-serial.c:939:
+static int __init
+serial_omap_console_setup(struct console *co, char *options) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial_omap_console_ports[co->index]"
#1353: FILE: drivers/serial/omap-serial.c:948:
+	if (serial_omap_console_ports[co->index] == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: drivers/serial/omap-serial.c:954:
+		uart_parse_options(options, &baud, &parity, &bits,
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1376: FILE: drivers/serial/omap-serial.c:970:
+static void serial_omap_add_console_port(struct uart_omap_port *up) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: drivers/serial/omap-serial.c:979:
+static inline void serial_omap_add_console_port(struct uart_omap_port $

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#1390: FILE: drivers/serial/omap-serial.c:984:
+struct uart_ops serial_omap_pops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1422: FILE: drivers/serial/omap-serial.c:1016:
+static
+int serial_omap_suspend(struct platform_device *pdev, pm_message_t 
+state) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1423: FILE: drivers/serial/omap-serial.c:1017:
+int serial_omap_suspend(struct platform_device *pdev, pm_message_t $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1423: FILE: drivers/serial/omap-serial.c:1017:
+int serial_omap_suspend(struct platform_device *pdev, pm_message_t 
+state) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1443: FILE: drivers/serial/omap-serial.c:1037:
+static int serial_omap_resume(struct platform_device *dev) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1445: FILE: drivers/serial/omap-serial.c:1039:
+	struct uart_omap_port *up = platform_get_drvdata(dev);
+	if (up)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1451: FILE: drivers/serial/omap-serial.c:1045:
+static void serial_omap_rx_timeout(unsigned long uart_no) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1454: FILE: drivers/serial/omap-serial.c:1048:
+	unsigned int curr_dma_pos;
+	curr_dma_pos = omap_readl(OMAP34XX_DMA4_BASE +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr_dma_pos == up->uart_dma.prev_rx_dma_pos'
#1457: FILE: drivers/serial/omap-serial.c:1050:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr_dma_pos == 0'
#1457: FILE: drivers/serial/omap-serial.c:1050:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1458: FILE: drivers/serial/omap-serial.c:1051:
+	if ((curr_dma_pos == up->uart_dma.prev_rx_dma_pos) ||
+			     (curr_dma_pos == 0)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1470: FILE: drivers/serial/omap-serial.c:1062:
+		return;
+	} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1476: FILE: drivers/serial/omap-serial.c:1067:
+		tty_insert_flip_string(up->port.info->port.tty,
+				up->uart_dma.rx_buf +

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1492: FILE: drivers/serial/omap-serial.c:1081:
+
+	}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1495: FILE: drivers/serial/omap-serial.c:1084:
+static void uart_rx_dma_callback(int lch, u16 ch_status, void *data) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#1497: FILE: drivers/serial/omap-serial.c:1086:
+	return;
+}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1499: FILE: drivers/serial/omap-serial.c:1088:
+static void serial_omap_start_rxdma(struct uart_omap_port *up) { #ifdef

WARNING:LINE_SPACING: Missing a blank line after declarations
#1507: FILE: drivers/serial/omap-serial.c:1096:
+	unsigned int tmp;
+	tmp = (serial_in(up, UART_OMAP_SYSC) & 0x7) | (1 << 3);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1510: FILE: drivers/serial/omap-serial.c:1099:
+		omap_request_dma(uart_dma_rx[up->pdev->id-1], "UART Rx
 		                                         ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1604: FILE: drivers/serial/omap-serial.c:1187:
+		dev_err(&pdev->dev, "no mem resource?\n");
 		                                    ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1609: FILE: drivers/serial/omap-serial.c:1192:
+		dev_err(&pdev->dev, "no irq resource?\n");
 		                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1625: FILE: drivers/serial/omap-serial.c:1207:
+	sprintf(up->name, "OMAP UART%d", pdev->id);
 	                            ^

WARNING:TYPO_SPELLING: 'paramter' may be misspelled - perhaps 'parameter'?
#1683: FILE: drivers/serial/omap-serial.c:1264:
+		pr_err("\n %s: Invalid console paramter...\n",
 		                               ^^^^^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1683: FILE: drivers/serial/omap-serial.c:1264:
+		pr_err("\n %s: Invalid console paramter...\n",
 		           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1683: FILE: drivers/serial/omap-serial.c:1264:
+		pr_err("\n %s: Invalid console paramter...\n",
 		             ^

CHECK:CAMELCASE: Avoid CamelCase: <Invalid>
#1683: FILE: drivers/serial/omap-serial.c:1264:
+		pr_err("\n %s: Invalid console paramter...\n",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1685: FILE: drivers/serial/omap-serial.c:1265:
+		pr_err("\n %s: UART Driver Init Failed!\n", __func__);
 		           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1685: FILE: drivers/serial/omap-serial.c:1265:
+		pr_err("\n %s: UART Driver Init Failed!\n", __func__);
 		             ^

ERROR:SPACING: space required before that '!' (ctx:VxV)
#1685: FILE: drivers/serial/omap-serial.c:1265:
+		pr_err("\n %s: UART Driver Init Failed!\n", __func__);
 		                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Driver>
#1685: FILE: drivers/serial/omap-serial.c:1265:
+		pr_err("\n %s: UART Driver Init Failed!\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <Init>
#1685: FILE: drivers/serial/omap-serial.c:1265:
+		pr_err("\n %s: UART Driver Init Failed!\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#1685: FILE: drivers/serial/omap-serial.c:1265:
+		pr_err("\n %s: UART Driver Init Failed!\n", __func__);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1720: FILE: drivers/serial/omap-serial.c:1300:
+		.name	= "omap-uart",
 		     	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1748: FILE: drivers/serial/omap-serial.c:1328:
+	DPRINTK("Register dump for UART%d\n", up->pdev->id);
 	                               ^

CHECK:CAMELCASE: Avoid CamelCase: <Register>
#1748: FILE: drivers/serial/omap-serial.c:1328:
+	DPRINTK("Register dump for UART%d\n", up->pdev->id);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1749: FILE: drivers/serial/omap-serial.c:1329:
+	DPRINTK("IER_REG = 0x%x\n", serial_in(up, UART_IER));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1750: FILE: drivers/serial/omap-serial.c:1330:
+	DPRINTK("IIR_REG = 0x%x\n", serial_in(up, UART_IIR));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1752: FILE: drivers/serial/omap-serial.c:1332:
+	DPRINTK("LCR_REG = 0x%x\n", lcr);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1754: FILE: drivers/serial/omap-serial.c:1334:
+	DPRINTK("MCR_REG = 0x%x\n", mcr);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1755: FILE: drivers/serial/omap-serial.c:1335:
+	DPRINTK("LSR_REG = 0x%x\n", serial_in(up, UART_LSR));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1756: FILE: drivers/serial/omap-serial.c:1336:
+	DPRINTK("MSR_REG = 0x%x\n", serial_in(up, UART_MSR));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1757: FILE: drivers/serial/omap-serial.c:1337:
+	DPRINTK("SPR_REG = 0x%x\n", serial_in(up, UART_OMAP_SPR));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1758: FILE: drivers/serial/omap-serial.c:1338:
+	DPRINTK("MDR1_REG = 0x%x\n", serial_in(up, UART_OMAP_MDR1));
 	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1759: FILE: drivers/serial/omap-serial.c:1339:
+	DPRINTK("MDR2_REG = 0x%x\n", serial_in(up, UART_OMAP_MDR2));
 	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1760: FILE: drivers/serial/omap-serial.c:1340:
+	DPRINTK("SCR_REG = 0x%x\n", serial_in(up, UART_OMAP_SCR));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1761: FILE: drivers/serial/omap-serial.c:1341:
+	DPRINTK("SSR_REG = 0x%x\n", serial_in(up, UART_OMAP_SSR));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1762: FILE: drivers/serial/omap-serial.c:1342:
+	DPRINTK("MVR_REG = 0x%x\n", serial_in(up, UART_OMAP_MVER));
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1763: FILE: drivers/serial/omap-serial.c:1343:
+	DPRINTK("SYSC_REG = 0x%x\n", serial_in(up, UART_OMAP_SYSC));
 	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1764: FILE: drivers/serial/omap-serial.c:1344:
+	DPRINTK("SYSS_REG = 0x%x\n", serial_in(up, UART_OMAP_SYSS));
 	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1765: FILE: drivers/serial/omap-serial.c:1345:
+	DPRINTK("WER_REG = 0x%x\n", serial_in(up, UART_OMAP_WER));
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1793: FILE: drivers/serial/omap-serial.c:1373:
+
+

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1794: FILE: drivers/serial/omap-serial.c:1374:
+	DPRINTK("DLL_REG = 0x%x\n", dll);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1795: FILE: drivers/serial/omap-serial.c:1375:
+	DPRINTK("DLH_REG = 0x%x\n", dlh);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1796: FILE: drivers/serial/omap-serial.c:1376:
+	DPRINTK("EFR_REG = 0x%x\n", efr);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1798: FILE: drivers/serial/omap-serial.c:1378:
+	DPRINTK("XON1_ADDR_REG = 0x%x\n", xon1);
 	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1799: FILE: drivers/serial/omap-serial.c:1379:
+	DPRINTK("XON2_ADDR_REG = 0x%x\n", xon2);
 	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1800: FILE: drivers/serial/omap-serial.c:1380:
+	DPRINTK("TCR_REG = 0x%x\n", tcr);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1801: FILE: drivers/serial/omap-serial.c:1381:
+	DPRINTK("TLR_REG = 0x%x\n", tlr);
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1803: FILE: drivers/serial/omap-serial.c:1383:
+
+

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1804: FILE: drivers/serial/omap-serial.c:1384:
+	DPRINTK("XOFF1_REG = 0x%x\n", xoff1);
 	                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1805: FILE: drivers/serial/omap-serial.c:1385:
+	DPRINTK("XOFF2_REG = 0x%x\n", xoff2);
 	                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1806: FILE: drivers/serial/omap-serial.c:1386:
+	DPRINTK("UASR_REG = 0x%x\n", uasr);
 	                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1813: FILE: drivers/serial/omap-serial.c:1393:
+MODULE_DESCRIPTION("OMAP High Speed UART driver"); $

CHECK:CAMELCASE: Avoid CamelCase: <High>
#1813: FILE: drivers/serial/omap-serial.c:1393:
+MODULE_DESCRIPTION("OMAP High Speed UART driver"); 

CHECK:CAMELCASE: Avoid CamelCase: <Speed>
#1813: FILE: drivers/serial/omap-serial.c:1393:
+MODULE_DESCRIPTION("OMAP High Speed UART driver"); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1814: FILE: drivers/serial/omap-serial.c:1394:
+MODULE_LICENSE("GPL"); MODULE_ALIAS("platform:" DRIVER_NAME); $

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1814: FILE: drivers/serial/omap-serial.c:1394:
+MODULE_LICENSE("GPL"); MODULE_ALIAS("platform:" DRIVER_NAME); 
                                              ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1814: FILE: drivers/serial/omap-serial.c:1394:
+MODULE_LICENSE("GPL"); MODULE_ALIAS("platform:" DRIVER_NAME); 

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CAMELCASE: Avoid CamelCase: <Texas>
#1815: FILE: drivers/serial/omap-serial.c:1395:
+MODULE_AUTHOR("Texas Instruments Inc");

CHECK:CAMELCASE: Avoid CamelCase: <Instruments>
#1815: FILE: drivers/serial/omap-serial.c:1395:
+MODULE_AUTHOR("Texas Instruments Inc");

CHECK:CAMELCASE: Avoid CamelCase: <Inc>
#1815: FILE: drivers/serial/omap-serial.c:1395:
+MODULE_AUTHOR("Texas Instruments Inc");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000077988.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 59 errors, 66 warnings, 96 checks, 1660 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000077988.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
