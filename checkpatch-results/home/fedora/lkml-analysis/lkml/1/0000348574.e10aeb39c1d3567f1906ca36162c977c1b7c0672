WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
calibrate_delay during the booting of the kdump kernel.  This was caused by the

WARNING:TYPO_SPELLING: 'accross' may be misspelled - perhaps 'across'?
#42: 
field of interrupt packets accross the ht bus (see section 3.3.9 of
                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#45: 
not recieve interrupts during the kdump kernel boot, and this hang will be the
    ^^^^^^^

WARNING:TYPO_SPELLING: 'whcih' may be misspelled - perhaps 'which'?
#46: 
result.  The fix is to add this patch, whcih add an early pci quirk check, to
                                       ^^^^^

WARNING:TYPO_SPELLING: 'procede' may be misspelled - perhaps 'proceed'?
#48: 
system to receive interrupts, and allows kdump kernel bootup to procede
                                                                ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/x86/kernel/early-quirks.c:34:
+^Iif (htcfg & (1 << 18)) {^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#82: FILE: arch/x86/kernel/early-quirks.c:35:
+		printk(KERN_INFO "Detected use of extended apic ids on hypertransport bus\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#84: FILE: arch/x86/kernel/early-quirks.c:37:
+			printk(KERN_INFO "Enabling hypertransport extended apic interrupt broadcast\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#85: FILE: arch/x86/kernel/early-quirks.c:38:
+			printk(KERN_INFO "Note this is a bios bug, please contact your hw vendor\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: arch/x86/kernel/early-quirks.c:44:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#91: FILE: arch/x86/kernel/early-quirks.c:44:
+
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#92: FILE: arch/x86/kernel/early-quirks.c:45:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#96: FILE: arch/x86/kernel/early-quirks.c:49:
+	static int fix_applied = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#111: FILE: arch/x86/kernel/early-quirks.c:77:
+	static int fix_applied = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#126: FILE: arch/x86/kernel/early-quirks.c:110:
+	static int fix_applied = 0;

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#154: FILE: arch/x86/kernel/early-quirks.c:136:
+	{ PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_K8_NB, PCI_CLASS_BRIDGE_HOST, PCI_ANY_ID, fix_hypertransport_config },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: arch/x86/kernel/early-quirks.c:157:
+				class = read_pci_config_16(num,slot,func,
 				                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: arch/x86/kernel/early-quirks.c:157:
+				class = read_pci_config_16(num,slot,func,
 				                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: arch/x86/kernel/early-quirks.c:158:
+				class = read_pci_config_16(num,slot,func,
 							PCI_CLASS_REVISION);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/x86/kernel/early-quirks.c:163:
+				vendor = read_pci_config_16(num, slot, func,
 							 PCI_VENDOR_ID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: arch/x86/kernel/early-quirks.c:166:
+				device = read_pci_config_16(num, slot, func,
+							PCI_DEVICE_ID);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#192: FILE: arch/x86/kernel/early-quirks.c:168:
+				for(i=0;early_qrk[i].f != NULL;i++) {
 				     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#192: FILE: arch/x86/kernel/early-quirks.c:168:
+				for(i=0;early_qrk[i].f != NULL;i++) {
 				       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#192: FILE: arch/x86/kernel/early-quirks.c:168:
+				for(i=0;early_qrk[i].f != NULL;i++) {
 				                              ^

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: arch/x86/kernel/early-quirks.c:168:
+				for(i=0;early_qrk[i].f != NULL;i++) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "early_qrk[i].f"
#192: FILE: arch/x86/kernel/early-quirks.c:168:
+				for(i=0;early_qrk[i].f != NULL;i++) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].vendor == PCI_ANY_ID'
#193: FILE: arch/x86/kernel/early-quirks.c:169:
+					if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+					    (early_qrk[i].vendor == vendor)) &&
+					   ((early_qrk[i].device == PCI_ANY_ID) ||
+					    (early_qrk[i].device == device)) &&
+					   (!((early_qrk[i].class ^ class) & 
+					     early_qrk[i].class_mask))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].vendor == vendor'
#193: FILE: arch/x86/kernel/early-quirks.c:169:
+					if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+					    (early_qrk[i].vendor == vendor)) &&
+					   ((early_qrk[i].device == PCI_ANY_ID) ||
+					    (early_qrk[i].device == device)) &&
+					   (!((early_qrk[i].class ^ class) & 
+					     early_qrk[i].class_mask))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].device == PCI_ANY_ID'
#193: FILE: arch/x86/kernel/early-quirks.c:169:
+					if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+					    (early_qrk[i].vendor == vendor)) &&
+					   ((early_qrk[i].device == PCI_ANY_ID) ||
+					    (early_qrk[i].device == device)) &&
+					   (!((early_qrk[i].class ^ class) & 
+					     early_qrk[i].class_mask))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].device == device'
#193: FILE: arch/x86/kernel/early-quirks.c:169:
+					if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+					    (early_qrk[i].vendor == vendor)) &&
+					   ((early_qrk[i].device == PCI_ANY_ID) ||
+					    (early_qrk[i].device == device)) &&
+					   (!((early_qrk[i].class ^ class) & 
+					     early_qrk[i].class_mask))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: arch/x86/kernel/early-quirks.c:170:
+					if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+					    (early_qrk[i].vendor == vendor)) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: arch/x86/kernel/early-quirks.c:173:
+^I^I^I^I^I   (!((early_qrk[i].class ^ class) & $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 9 warnings, 11 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
