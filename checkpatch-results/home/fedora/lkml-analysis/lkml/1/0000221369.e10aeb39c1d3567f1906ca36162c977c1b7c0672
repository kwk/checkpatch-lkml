WARNING:TYPO_SPELLING: 'shoud' may be misspelled - perhaps 'should'?
#37: 
interface but extensions shoud be easy to add.
                         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#81: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/misc/c2port_core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: drivers/misc/c2port_core.c:67:
+	 * 20us */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#155: FILE: drivers/misc/c2port_core.c:70:
+	udelay(25);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#167: FILE: drivers/misc/c2port_core.c:82:
+	 * transition who must be shorter than 5us */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/misc/c2port_core.c:309:
+static ssize_t c2port_show_flash_blocks_num(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/misc/c2port_core.c:318:
+static ssize_t c2port_show_flash_block_size(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: drivers/misc/c2port_core.c:327:
+static ssize_t c2port_show_flash_size(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/misc/c2port_core.c:336:
+static ssize_t c2port_show_access(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/misc/c2port_core.c:344:
+static ssize_t c2port_store_access(struct device *dev,
+				struct device_attribute *attr,

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#436: FILE: drivers/misc/c2port_core.c:351:
+	ret = sscanf(buf, "%d", &status);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#445: FILE: drivers/misc/c2port_core.c:360:
+	 * as output and data line should be set as INPUT anyway */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/misc/c2port_core.c:373:
+static ssize_t c2port_store_reset(struct device *dev,
+				struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/misc/c2port_core.c:409:
+static ssize_t c2port_show_dev_id(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/misc/c2port_core.c:445:
+static ssize_t c2port_show_rev_id(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/misc/c2port_core.c:465:
+static ssize_t c2port_show_flash_access(struct device *dev,
+				struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/misc/c2port_core.c:473:
+static ssize_t __c2port_store_flash_access(struct c2port_device *dev,
+						int status)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#573: FILE: drivers/misc/c2port_core.c:488:
+	 * register access */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#587: FILE: drivers/misc/c2port_core.c:502:
+	 * C2 flash programming */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/misc/c2port_core.c:509:
+static ssize_t c2port_store_flash_access(struct device *dev,
+				struct device_attribute *attr,

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#601: FILE: drivers/misc/c2port_core.c:516:
+	ret = sscanf(buf, "%d", &status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/misc/c2port_core.c:591:
+static ssize_t c2port_store_flash_erase(struct device *dev,
+				struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: drivers/misc/c2port_core.c:614:
+static ssize_t __c2port_read_flash_data(struct c2port_device *dev,
+				char *buffer, loff_t offset, size_t count)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#717: FILE: drivers/misc/c2port_core.c:632:
+	 * access */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#780: FILE: drivers/misc/c2port_core.c:695:
+		ret = c2port_read_dr(dev, buffer+i);
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: drivers/misc/c2port_core.c:704:
+static ssize_t c2port_read_flash_data(struct kobject *kobj,
+				struct bin_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: drivers/misc/c2port_core.c:709:
+			dev_get_drvdata(container_of(kobj,
+						struct device, kobj));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: drivers/misc/c2port_core.c:727:
+static ssize_t __c2port_write_flash_data(struct c2port_device *dev,
+				char *buffer, loff_t offset, size_t count)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#828: FILE: drivers/misc/c2port_core.c:743:
+	 * access */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#887: FILE: drivers/misc/c2port_core.c:802:
+		ret = c2port_write_dr(dev, *(buffer+i));
 		                                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#895: FILE: drivers/misc/c2port_core.c:810:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/misc/c2port_core.c:821:
+static ssize_t c2port_write_flash_data(struct kobject *kobj,
+				struct bin_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#911: FILE: drivers/misc/c2port_core.c:826:
+			dev_get_drvdata(container_of(kobj,
+						struct device, kobj));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: drivers/misc/c2port_core.c:858:
+	__ATTR(flash_access, 0644, c2port_show_flash_access,
+					c2port_store_flash_access),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: drivers/misc/c2port_core.c:878:
+struct c2port_device *c2port_device_register(char *name,
+					struct c2port_ops *ops, void *devdata)

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#968: FILE: drivers/misc/c2port_core.c:883:
+	if (unlikely(!ops) || unlikely(!ops->access) || \

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*c2dev)...) over kmalloc(sizeof(struct c2port_device)...)
#973: FILE: drivers/misc/c2port_core.c:888:
+	c2dev = kmalloc(sizeof(struct c2port_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: drivers/misc/c2port_core.c:905:
+	c2dev->dev = device_create(c2port_class, NULL, 0, c2dev,
+					"c2port%d", id);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1008: FILE: drivers/misc/c2port_core.c:923:
+	c2dev->access = c2dev->flash_access = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#1013: FILE: drivers/misc/c2port_core.c:928:
+	dev_info(c2dev->dev, "%s flash has %d blocks x %d bytes "
+				"(%d bytes total)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1058: FILE: drivers/misc/c2port_core.c:973:
+	printk(KERN_INFO "Silicon Labs C2 port support v. " DRIVER_VERSION

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1063: FILE: drivers/misc/c2port_core.c:978:
+		printk(KERN_ERR "c2port: failed to allocate class\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1088: FILE: include/linux/c2port.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1150: FILE: include/linux/c2port.h:63:
+extern struct c2port_device *c2port_device_register(char *name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: include/linux/c2port.h:64:
+extern struct c2port_device *c2port_device_register(char *name,
+					struct c2port_ops *ops, void *devdata);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1152: FILE: include/linux/c2port.h:65:
+extern void c2port_device_unregister(struct c2port_device *dev);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221369.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 30 checks, 1082 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221369.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
