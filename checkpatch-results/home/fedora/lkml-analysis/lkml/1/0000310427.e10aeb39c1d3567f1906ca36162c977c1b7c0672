WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
consumer drivers. This allows consumers to control their supply voltages and

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#50: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: include/linux/regulator/regulator.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <mV_to_uV>
#173: FILE: include/linux/regulator/regulator.h:119:
+static inline int mV_to_uV(int mV) { return mV * 1000; }

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <uV_to_mV>
#174: FILE: include/linux/regulator/regulator.h:120:
+static inline int uV_to_mV(int uV) { return uV / 1000; }

CHECK:CAMELCASE: Avoid CamelCase: <V_to_uV>
#175: FILE: include/linux/regulator/regulator.h:121:
+static inline int V_to_uV(int V) { return V * 1000000; }

CHECK:CAMELCASE: Avoid CamelCase: <uV_to_V>
#176: FILE: include/linux/regulator/regulator.h:122:
+static inline int uV_to_V(int uV) { return uV / 1000000; }

CHECK:CAMELCASE: Avoid CamelCase: <mA_to_uA>
#177: FILE: include/linux/regulator/regulator.h:123:
+static inline int mA_to_uA(int mA) { return mA * 1000; }

CHECK:CAMELCASE: Avoid CamelCase: <uA_to_mA>
#178: FILE: include/linux/regulator/regulator.h:124:
+static inline int uA_to_mA(int uA)  {return uA / 1000; }

CHECK:CAMELCASE: Avoid CamelCase: <A_to_uA>
#179: FILE: include/linux/regulator/regulator.h:125:
+static inline int A_to_uA(int A) { return A * 1000000; }

CHECK:CAMELCASE: Avoid CamelCase: <uA_to_A>
#180: FILE: include/linux/regulator/regulator.h:126:
+static inline int uA_to_A(int uA) { return uA / 1000000; }

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#231: FILE: include/linux/regulator/regulator.h:177:
+}
+static inline void regulator_put(struct regulator *regulator)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: include/linux/regulator/regulator.h:217:
+static inline int regulator_set_mode(struct regulator *regulator,
+	unsigned int mode)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#281: FILE: include/linux/regulator/regulator.h:227:
+static inline unsigned int regulator_get_optimum_mode(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: include/linux/regulator/regulator.h:236:
+static inline int regulator_register_client(struct regulator *regulator,
+			      struct notifier_block *nb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: include/linux/regulator/regulator.h:242:
+static inline int regulator_unregister_client(struct regulator *regulator,
+				struct notifier_block *nb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: include/linux/regulator/regulator.h:248:
+static inline void regulator_drms_notify_load(struct regulator *regulator,
+	int uA)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: include/linux/regulator/regulator.h:258:
+static inline void regulator_set_drvdata(struct regulator *regulator,
+	void *data)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310427.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 15 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310427.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
