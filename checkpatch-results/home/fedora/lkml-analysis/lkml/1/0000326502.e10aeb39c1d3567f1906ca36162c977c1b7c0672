WARNING:NEW_TYPEDEFS: do not add new typedefs
#63: FILE: include/asm-s390/bitops.h:454:
+	typedef struct { long _[__BITOPS_WORDS(size)]; } addrtype;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#66: FILE: include/asm-s390/bitops.h:457:
+	asm volatile(

CHECK:SPACING: No space is necessary after a cast
#85: FILE: include/asm-s390/bitops.h:476:
+		: "d" (-1UL), "a" (addr), "m" (*(addrtype *) addr)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#86: FILE: include/asm-s390/bitops.h:477:
+		: "cc" );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#99: FILE: include/asm-s390/bitops.h:489:
+	typedef struct { long _[__BITOPS_WORDS(size)]; } addrtype;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#102: FILE: include/asm-s390/bitops.h:492:
+	asm volatile(

CHECK:SPACING: No space is necessary after a cast
#121: FILE: include/asm-s390/bitops.h:511:
+		: "d" (0UL), "a" (addr), "m" (*(addrtype *) addr)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#122: FILE: include/asm-s390/bitops.h:512:
+		: "cc" );

CHECK:SPACING: No space is necessary after a cast
#151: FILE: include/asm-s390/bitops.h:537:
+	return nr + _zb_findmap[(unsigned char) word];

CHECK:SPACING: No space is necessary after a cast
#185: FILE: include/asm-s390/bitops.h:561:
+	return nr + _sb_findmap[(unsigned char) word];

CHECK:SPACING: No space is necessary after a cast
#201: FILE: include/asm-s390/bitops.h:573:
+	p = (unsigned long *)((unsigned long) p + offset);

CHECK:SPACING: No space is necessary after a cast
#222: FILE: include/asm-s390/bitops.h:587:
+	p = (unsigned long *)((unsigned long) p + offset);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#261: FILE: include/asm-s390/bitops.h:596:
+	asm volatile(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#263: FILE: include/asm-s390/bitops.h:598:
+		: "=d" (word) : "m" (*p) );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: include/asm-s390/bitops.h:624:
+static inline unsigned long __ffs (unsigned long word)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#403: FILE: include/asm-s390/bitops.h:660:
+	bits = __ffz_word(bytes*8, __load_ulong_be(addr, bytes));
 	                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: include/asm-s390/bitops.h:672:
+static inline unsigned long find_first_bit(const unsigned long * addr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#469: FILE: include/asm-s390/bitops.h:680:
+	bits = __ffs_word(bytes*8, __load_ulong_be(addr, bytes));
 	                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#479: FILE: include/asm-s390/bitops.h:690:
+static inline int find_next_zero_bit (const unsigned long * addr,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#479: FILE: include/asm-s390/bitops.h:690:
+static inline int find_next_zero_bit (const unsigned long * addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#511: FILE: include/asm-s390/bitops.h:726:
+static inline int find_next_bit (const unsigned long * addr,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#511: FILE: include/asm-s390/bitops.h:726:
+static inline int find_next_bit (const unsigned long * addr,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#589: FILE: include/asm-s390/bitops.h:803:
+	bits = __ffz_word(bytes*8, __load_ulong_le(vaddr, bytes));
 	                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326502.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 5 warnings, 12 checks, 626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326502.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
