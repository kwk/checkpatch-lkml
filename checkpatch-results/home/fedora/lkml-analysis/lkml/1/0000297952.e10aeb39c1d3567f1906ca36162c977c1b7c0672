WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
You've said before that a filesystems has no business dealing with vfsmounts

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#172: FILE: fs/unionfs/copyup.c:210:
+		err = init_lower_nd(&nd, args.path.dentry, args.path.mnt,
 		                     ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#424: FILE: fs/unionfs/inode.c:429:
+				path.mnt = unionfs_lower_mnt_idx(

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#542: FILE: fs/unionfs/lookup.c:607:
+int init_lower_nd(struct nameidata *nd, struct dentry *dentry,
                                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: fs/unionfs/rename.c:230:
+			struct path path;
+			path.dentry = unlink_dir_dentry;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#629: FILE: fs/unionfs/rename.c:304:
+		err = init_lower_nd(&nd, NULL, /* set nd.path.dentry below */
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#629: FILE: fs/unionfs/rename.c:304:
+		err = init_lower_nd(&nd, NULL, /* set nd.path.dentry below */
 		                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#636: FILE: fs/unionfs/rename.c:309:
+		nd.path.dentry = lower_parent;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#637: FILE: fs/unionfs/rename.c:310:
+		local_err = path_create(&nd.path, wh_old, S_IRUGO, &nd);
 		                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#637: FILE: fs/unionfs/rename.c:310:
+		local_err = path_create(&nd.path, wh_old, S_IRUGO, &nd);
 		                                                    ^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#637: FILE: fs/unionfs/rename.c:310:
+		local_err = path_create(&nd.path, wh_old, S_IRUGO, &nd);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#650: FILE: fs/unionfs/sioq.c:63:
+	args->err = path_create(&args->path, c->dentry, c->mode, c->nd);
 	                                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#727: FILE: fs/unionfs/subr.c:92:
+		err = init_lower_nd(&nd, NULL, /* lower dentry set below */
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#732: FILE: fs/unionfs/subr.c:97:
+		nd.path.dentry = lower_dir_dentry;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#739: FILE: fs/unionfs/subr.c:100:
+			err = path_create(&nd.path,
 			                   ^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#741: FILE: fs/unionfs/subr.c:102:
+					  ~current->fs->umask & S_IRWXUGO,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#742: FILE: fs/unionfs/subr.c:103:
+					  &nd);
 					   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#751: FILE: fs/unionfs/subr.c:196:
+	err = init_lower_nd(&nd, lower_dentry,
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#758: FILE: fs/unionfs/subr.c:202:
+		err = path_create(&nd.path, diropq, S_IRUGO, &nd);
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#758: FILE: fs/unionfs/subr.c:202:
+		err = path_create(&nd.path, diropq, S_IRUGO, &nd);
 		                                              ^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#758: FILE: fs/unionfs/subr.c:202:
+		err = path_create(&nd.path, diropq, S_IRUGO, &nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#771: FILE: fs/unionfs/union.h:306:
+extern int init_lower_nd(struct nameidata *nd, struct dentry *dentry,
                                            ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#771: FILE: fs/unionfs/union.h:306:
+extern int init_lower_nd(struct nameidata *nd, struct dentry *dentry,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#785: FILE: fs/unionfs/unlink.c:71:
+			struct path path;
+			path.dentry = lower_dir_dentry;

CHECK:SPACING: No space is necessary after a cast
#822: FILE: fs/unionfs/xattr.c:90:
+	err = path_setxattr(&path, (char *) name, (void *) value, size, flags);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#842: FILE: fs/unionfs/xattr.c:121:
+	err = path_removexattr(&path, (char *) name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297952.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 4 checks, 654 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297952.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
