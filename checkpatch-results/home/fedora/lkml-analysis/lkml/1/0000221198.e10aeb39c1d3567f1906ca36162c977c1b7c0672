WARNING:TYPO_SPELLING: 'condtionally' may be misspelled - perhaps 'conditionally'?
#35: 
Use CONFIG_X86_64/CONFIG_X86_32 to condtionally compile the
                                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#116: FILE: arch/x86/kernel/traps_32.c:202:
+	    printk_ratelimit()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#117: FILE: arch/x86/kernel/traps_32.c:203:
+		printk(KERN_INFO

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: arch/x86/kernel/traps_32.c:208:
+		printk("\n");

WARNING:TYPO_SPELLING: 'IST' may be misspelled - perhaps 'IS'?
#153: FILE: arch/x86/kernel/traps_32.c:273:
+/* Runs on IST stack */
            ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: arch/x86/kernel/traps_32.c:277:
+	if (notify_die(DIE_TRAP, "stack segment", regs, error_code,
+			12, SIGBUS) == NOTIFY_STOP)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#176: FILE: arch/x86/kernel/traps_32.c:296:
+	/* This is always a kernel trap and never fixable (and thus must
+	   never return). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#176: FILE: arch/x86/kernel/traps_32.c:296:
+	   never return). */

WARNING:TYPO_SPELLING: 'IST' may be misspelled - perhaps 'IS'?
#261: FILE: arch/x86/kernel/traps_32.c:564:
+/* Help handler running on IST stack to switch back to user stack
                            ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#262: FILE: arch/x86/kernel/traps_32.c:565:
+/* Help handler running on IST stack to switch back to user stack
+   for scheduling or signal handling. The actual stack switch is done in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: arch/x86/kernel/traps_32.c:566:
+   entry.S */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#274: FILE: arch/x86/kernel/traps_32.c:577:
+	/* Exception from kernel and interrupts are enabled. Move to
+	   kernel process stack. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: arch/x86/kernel/traps_32.c:577:
+	   kernel process stack. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: arch/x86/kernel/traps_32.c:854:
+	if (!user_mode(regs) &&
+			kernel_math_error(regs, "kernel simd math error", 19))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#391: FILE: arch/x86/kernel/traps_32.c:890:
+asmlinkage void __attribute__((weak)) smp_thermal_interrupt(void)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#395: FILE: arch/x86/kernel/traps_32.c:894:
+asmlinkage void __attribute__((weak)) mce_threshold_interrupt(void)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#539: FILE: arch/x86/kernel/traps_64.c:69:
+#include <asm/nmi.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#540: FILE: arch/x86/kernel/traps_64.c:70:
+#include <asm/smp.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#541: FILE: arch/x86/kernel/traps_64.c:71:
+#include <asm/io.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.idt") over __attribute__((__section__(".data.idt")))
#559: FILE: arch/x86/kernel/traps_64.c:89:
+	__attribute__((__section__(".data.idt"))) = { { { { 0, 0 } } }, };

CHECK:SPACING: No space is necessary after a cast
#601: FILE: arch/x86/kernel/traps_64.c:147:
+			memset((char *) tss->io_bitmap +

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#668: FILE: arch/x86/kernel/traps_64.c:228:
+	if (handle_vm86_trap((struct kernel_vm86_regs *) regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#669: FILE: arch/x86/kernel/traps_64.c:229:
+	if (handle_vm86_trap((struct kernel_vm86_regs *) regs,
+						error_code, trapnr))

CHECK:SPACING: No space is necessary after a cast
#721: FILE: arch/x86/kernel/traps_64.c:342:
+	handle_vm86_fault((struct kernel_vm86_regs *) regs, error_code);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#759: FILE: arch/x86/kernel/traps_64.c:442:
+	/*
+	* We are in trouble anyway, lets at least try

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#763: FILE: arch/x86/kernel/traps_64.c:446:
+	printk(KERN_EMERG "%s", str);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#764: FILE: arch/x86/kernel/traps_64.c:447:
+	printk(" on CPU%d, ip %08lx, registers:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: arch/x86/kernel/traps_64.c:448:
+	printk(" on CPU%d, ip %08lx, registers:\n",
+		smp_processor_id(), regs->ip);

WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#775: FILE: arch/x86/kernel/traps_64.c:458:
+	 * and might aswell get out now while we still can:
 	             ^^^^^^

CHECK:SPACING: No space is necessary after a cast
#882: FILE: arch/x86/kernel/traps_64.c:673:
+	handle_vm86_trap((struct kernel_vm86_regs *) regs, error_code, 1);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#968: FILE: arch/x86/kernel/traps_64.c:864:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#970: FILE: arch/x86/kernel/traps_64.c:866:
+	printk(KERN_INFO "Ignoring P6 Local APIC Spurious Interrupt Bug...\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1038: FILE: arch/x86/kernel/traps_64.c:950:
+	printk(KERN_EMERG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1040: FILE: arch/x86/kernel/traps_64.c:952:
+	printk(KERN_EMERG "killing %s.\n", current->comm);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1074: FILE: arch/x86/kernel/traps_64.c:986:
+	siginfo_t info;
+	local_irq_enable();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: arch/x86/kernel/traps_64.c:993:
+	if (notify_die(DIE_TRAP, "iret exception",
+			regs, error_code, 32, SIGILL) == NOTIFY_STOP)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1096: FILE: arch/x86/kernel/traps_64.c:1008:
+	if (readl(p) == 'E' + ('I'<<8) + ('S'<<16) + ('A'<<24))
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1096: FILE: arch/x86/kernel/traps_64.c:1008:
+	if (readl(p) == 'E' + ('I'<<8) + ('S'<<16) + ('A'<<24))
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1096: FILE: arch/x86/kernel/traps_64.c:1008:
+	if (readl(p) == 'E' + ('I'<<8) + ('S'<<16) + ('A'<<24))
 	                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1123: FILE: arch/x86/kernel/traps_64.c:1048:
+		printk(KERN_INFO "Enabling fast FPU save and restore... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1125: FILE: arch/x86/kernel/traps_64.c:1050:
+		printk("done.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1128: FILE: arch/x86/kernel/traps_64.c:1053:
+		printk(KERN_INFO

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1131: FILE: arch/x86/kernel/traps_64.c:1056:
+		printk("done.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 28 warnings, 15 checks, 1032 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
