WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#71: FILE: arch/x86/Kconfig:571:
+config ENLIGHTEN_SPINLOCKS
+	bool "enlighten spinlocks"
+	depends on SMP && !PARAVIRT_GUEST
+	help
+	  Provide a mechanism for enlightening (para-virtualizing) spin locks
+	  in the absence of full pv-ops support (i.e. for "fully" virtualized
+	  guests).
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: arch/x86/include/asm/alternative.h:62:
+extern void apply_alternatives(struct alt_instr *start, struct alt_instr *end,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#129: FILE: arch/x86/include/asm/cpufeature.h:100:
+#define X86_FEATURE_SPINLOCK_YIELD (3*32+31) /* hypervisor yield interface */
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: arch/x86/include/asm/cpufeature.h:100:
+#define X86_FEATURE_SPINLOCK_YIELD (3*32+31) /* hypervisor yield interface */
                                         ^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/percpu.h> instead of <asm/percpu.h>
#144: FILE: arch/x86/include/asm/spinlock.h:15:
+#include <asm/percpu.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#147: FILE: arch/x86/include/asm/spinlock.h:18:
+extern void (*virt_spin_lock)(volatile struct arch_spinlock *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile struct arch_spinlock *' should also have an identifier name
#147: FILE: arch/x86/include/asm/spinlock.h:18:
+extern void (*virt_spin_lock)(volatile struct arch_spinlock *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#147: FILE: arch/x86/include/asm/spinlock.h:18:
+extern void (*virt_spin_lock)(volatile struct arch_spinlock *, unsigned int);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#148: FILE: arch/x86/include/asm/spinlock.h:19:
+extern void (*virt_spin_unlock)(volatile struct arch_spinlock *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile struct arch_spinlock *' should also have an identifier name
#148: FILE: arch/x86/include/asm/spinlock.h:19:
+extern void (*virt_spin_unlock)(volatile struct arch_spinlock *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#148: FILE: arch/x86/include/asm/spinlock.h:19:
+extern void (*virt_spin_unlock)(volatile struct arch_spinlock *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: arch/x86/include/asm/spinlock.h:20:
+extern void virt_spin_lock_stub(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: arch/x86/include/asm/spinlock.h:21:
+extern void virt_spin_unlock_stub(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#175: FILE: arch/x86/include/asm/spinlock.h:84:
+	alternative_io(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#242: FILE: arch/x86/include/asm/spinlock.h:158:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#246: FILE: arch/x86/include/asm/spinlock.h:162:
+	alternative_io(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#288: FILE: arch/x86/include/asm/spinlock.h:206:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#290: FILE: arch/x86/include/asm/spinlock.h:208:
+	alternative_io(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#361: FILE: arch/x86/include/asm/spinlock.h:289:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#365: FILE: arch/x86/include/asm/spinlock.h:293:
+	alternative_io(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#468: FILE: arch/x86/kernel/alternative.c:246:
+				if (*ptr >= a->replacement
+				    && *ptr < a->replacement + a->replacementlen) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#499: FILE: arch/x86/kernel/cpu/hypervisor.c:32:
+void (*__read_mostly virt_spin_lock)(volatile struct arch_spinlock *, unsigned int);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#500: FILE: arch/x86/kernel/cpu/hypervisor.c:33:
+void (*__read_mostly virt_spin_unlock)(volatile struct arch_spinlock *, unsigned int);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#501: FILE: arch/x86/kernel/cpu/hypervisor.c:34:
+EXPORT_SYMBOL(virt_spin_unlock_stub);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000018604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 14 checks, 527 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000018604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
