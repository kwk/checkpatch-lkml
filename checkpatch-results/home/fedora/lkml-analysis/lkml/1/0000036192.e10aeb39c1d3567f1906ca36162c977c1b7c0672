WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
2.6.31-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '4c0425ff68b1b87b802ffeda7b6a46ff7da7241c', maybe rebased or not pulled?
#32: 
(cherry picked from commit 4c0425ff68b1b87b802ffeda7b6a46ff7da7241c)

WARNING:TYPO_SPELLING: 'unitialized' may be misspelled - perhaps 'uninitialized'?
#45: 
To fix this, this patch creates unitialized extents when a direct I/O
                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Non-standard signature: 'Singed-Off-By:' - perhaps 'Signed-off-by:'?
#50: 
Singed-Off-By: Mingming Cao <cmm@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Singed-off-by:' is the preferred signature form
#50: 
Singed-Off-By: Mingming Cao <cmm@us.ibm.com>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: fs/ext4/inode.c:3365:
+static ssize_t ext4_ind_direct_IO(int rw, struct kiocb *iocb,
 			      const struct iovec *iov, loff_t offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: fs/ext4/inode.c:3441:
+static int ext4_get_block_dio_write(struct inode *inode, sector_t iblock,
+		   struct buffer_head *bh_result, int create)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: fs/ext4/inode.c:3445:
+	unsigned max_blocks = bh_result->b_size >> inode->i_blkbits;

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#129: FILE: fs/ext4/inode.c:3464:
+	 * when we come here, we know it's a direct IO write to
+	 * to the middle of file (<i_size)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#180: FILE: fs/ext4/inode.c:3515:
+		printk(KERN_EMERG "%s: failed to convert unwritten"

WARNING:SPLIT_STRING: quoted string split across lines
#181: FILE: fs/ext4/inode.c:3516:
+		printk(KERN_EMERG "%s: failed to convert unwritten"
+			"extents to written extents, error is %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#181: FILE: fs/ext4/inode.c:3516:
+		printk(KERN_EMERG "%s: failed to convert unwritten"
+			"extents to written extents, error is %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: fs/ext4/inode.c:3517:
+                       __func__, ret);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: fs/ext4/inode.c:3517:
+                       __func__, ret);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: fs/ext4/inode.c:3524:
+static ext4_io_end_t *ext4_init_io_end (struct inode *inode, unsigned int flag)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: fs/ext4/inode.c:3545:
+        ext4_io_end_t *io_end = iocb->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/ext4/inode.c:3545:
+        ext4_io_end_t *io_end = iocb->private;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: fs/ext4/inode.c:3558:
+        if (is_sync_kiocb(iocb))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/ext4/inode.c:3558:
+        if (is_sync_kiocb(iocb))$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#228: FILE: fs/ext4/inode.c:3563:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'unintialized' may be misspelled - perhaps 'uninitialized'?
#233: FILE: fs/ext4/inode.c:3568:
+ * For holes, we fallocate those blocks, mark them as unintialized
                                                       ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'unintialized' may be misspelled - perhaps 'uninitialized'?
#235: FILE: fs/ext4/inode.c:3570:
+ * still keep the range to write as unintialized.
                                     ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: fs/ext4/inode.c:3581:
+static ssize_t ext4_ext_direct_IO(int rw, struct kiocb *iocb,
+			      const struct iovec *iov, loff_t offset,

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: fs/ext4/inode.c:3590:
+	loff_t final_size = offset + count;
+	if (rw == WRITE && final_size <= inode->i_size) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: fs/ext4/inode.c:3592:
+ ^I^I * For DIO we fallocate blocks for holes, we fallocate blocks$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: fs/ext4/inode.c:3592:
+ ^I^I * For DIO we fallocate blocks for holes, we fallocate blocks$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: fs/ext4/inode.c:3593:
+ ^I^I * The fallocated extent for hole is marked as uninitialized$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: fs/ext4/inode.c:3593:
+ ^I^I * The fallocated extent for hole is marked as uninitialized$

WARNING:TYPO_SPELLING: 'paralel' may be misspelled - perhaps 'parallel'?
#259: FILE: fs/ext4/inode.c:3594:
+ 		 * to prevent paralel buffered read to expose the stale data
  		              ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: fs/ext4/inode.c:3594:
+ ^I^I * to prevent paralel buffered read to expose the stale data$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: fs/ext4/inode.c:3594:
+ ^I^I * to prevent paralel buffered read to expose the stale data$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: fs/ext4/inode.c:3595:
+ ^I^I * before DIO complete the data IO.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: fs/ext4/inode.c:3595:
+ ^I^I * before DIO complete the data IO.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: fs/ext4/inode.c:3596:
+ ^I^I * as for previously fallocated extents, ext4 get_block$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: fs/ext4/inode.c:3596:
+ ^I^I * as for previously fallocated extents, ext4 get_block$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: fs/ext4/inode.c:3597:
+ ^I^I * will just simply mark the buffer mapped but still$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: fs/ext4/inode.c:3597:
+ ^I^I * will just simply mark the buffer mapped but still$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: fs/ext4/inode.c:3598:
+ ^I^I * keep the extents uninitialized.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: fs/ext4/inode.c:3598:
+ ^I^I * keep the extents uninitialized.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: fs/ext4/inode.c:3599:
+ ^I^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: fs/ext4/inode.c:3599:
+ ^I^I *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: fs/ext4/inode.c:3600:
+ ^I^I * At the end of IO, the ext4 end_io callback function$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: fs/ext4/inode.c:3600:
+ ^I^I * At the end of IO, the ext4 end_io callback function$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: fs/ext4/inode.c:3601:
+ ^I^I * will convert those unwritten extents to written,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#266: FILE: fs/ext4/inode.c:3601:
+ ^I^I * will convert those unwritten extents to written,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: fs/ext4/inode.c:3602:
+ ^I^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: fs/ext4/inode.c:3602:
+ ^I^I *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: fs/ext4/inode.c:3603:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#268: FILE: fs/ext4/inode.c:3603:
+ ^I^I */$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: fs/ext4/super.c:2817:
+		printk(KERN_ERR "EXT4-fs: failed to create DIO workqueue\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036192.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 31 warnings, 4 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036192.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
