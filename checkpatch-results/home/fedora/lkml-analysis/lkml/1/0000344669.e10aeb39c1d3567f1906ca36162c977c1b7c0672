CHECK:SPACING: No space is necessary after a cast
#106: FILE: drivers/s390/cio/cio.c:209:
+	orb->cpa = (__u32) __pa(cpa);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'sublass' may be misspelled - perhaps 'subclass'?
#187: FILE: drivers/s390/cio/cio.h:17:
+	u32 isc  : 3;		/* interruption sublass */
 	             		                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: drivers/s390/cio/cio.h:110:
+extern void *cio_get_console_priv(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sch->private)...) over kzalloc(sizeof(struct io_subchannel_private)...)
#371: FILE: drivers/s390/cio/device.c:1164:
+	sch->private = kzalloc(sizeof(struct io_subchannel_private),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/s390/cio/device_id.c:229:
 				      "on subchannel 0.%x.%04x is "
+				      "'not operational'\n", lpm,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#560: FILE: drivers/s390/cio/device_status.c:333:
+	sense_ccw->cda = (__u32) __pa(cdev->private->irb.ecw);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#654: FILE: drivers/s390/cio/io_sch.h:1:
+#ifndef S390_IO_SCH_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#682: FILE: drivers/s390/cio/io_sch.h:29:
+}  __attribute__ ((packed, aligned(4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#682: FILE: drivers/s390/cio/io_sch.h:29:
+}  __attribute__ ((packed, aligned(4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#687: FILE: drivers/s390/cio/io_sch.h:34:
+} __attribute__ ((aligned(8)));

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#689: FILE: drivers/s390/cio/io_sch.h:36:
+#define to_io_private(n) ((struct io_subchannel_private *)n->private)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#706: FILE: drivers/s390/cio/io_sch.h:53:
+}  __attribute__ ((packed, aligned(4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#706: FILE: drivers/s390/cio/io_sch.h:53:
+}  __attribute__ ((packed, aligned(4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#723: FILE: drivers/s390/cio/io_sch.h:70:
+	} __attribute__ ((packed)) options;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#733: FILE: drivers/s390/cio/io_sch.h:80:
+	} __attribute__((packed)) flags;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#749: FILE: drivers/s390/cio/io_sch.h:96:
+static inline int ssch(struct subchannel_id schid, volatile struct orb *addr)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#754: FILE: drivers/s390/cio/io_sch.h:101:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ssch', this function's name, in a string
#755: FILE: drivers/s390/cio/io_sch.h:102:
+		"	ssch	0(%2)\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#767: FILE: drivers/s390/cio/io_sch.h:114:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rsch', this function's name, in a string
#768: FILE: drivers/s390/cio/io_sch.h:115:
+		"	rsch\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#780: FILE: drivers/s390/cio/io_sch.h:127:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'csch', this function's name, in a string
#781: FILE: drivers/s390/cio/io_sch.h:128:
+		"	csch\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#793: FILE: drivers/s390/cio/io_sch.h:140:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hsch', this function's name, in a string
#794: FILE: drivers/s390/cio/io_sch.h:141:
+		"	hsch\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#806: FILE: drivers/s390/cio/io_sch.h:153:
+	asm volatile(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344669.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 10 checks, 685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344669.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
