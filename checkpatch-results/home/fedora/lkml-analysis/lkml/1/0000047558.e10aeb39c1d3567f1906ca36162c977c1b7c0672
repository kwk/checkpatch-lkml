WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
 Add kfifo_to_user_rec() - gets data from the FIFO and write it to user space

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: include/linux/kfifo.h:283:
+                               unsigned int recsize)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: include/linux/kfifo.h:283:
+static inline unsigned int __kfifo_peek_n(struct kfifo *fifo,
+                               unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: include/linux/kfifo.h:283:
+                               unsigned int recsize)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fifo' - possible side-effects?
#62: FILE: include/linux/kfifo.h:285:
+#define        __KFIFO_GET(fifo, off, shift) \
+       ((fifo)->buffer[__kfifo_off((fifo), (fifo)->out+(off))] << (shift))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: include/linux/kfifo.h:286:
+       ((fifo)->buffer[__kfifo_off((fifo), (fifo)->out+(off))] << (shift))$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#63: FILE: include/linux/kfifo.h:286:
+       ((fifo)->buffer[__kfifo_off((fifo), (fifo)->out+(off))] << (shift))
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: include/linux/kfifo.h:288:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/linux/kfifo.h:290:
+       l = __KFIFO_GET(fifo, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/linux/kfifo.h:292:
+       if (--recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#69: FILE: include/linux/kfifo.h:292:
+       if (--recsize)
+               l |= __KFIFO_GET(fifo, 1, 8);

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: include/linux/kfifo.h:293:
+               l |= __KFIFO_GET(fifo, 1, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: include/linux/kfifo.h:293:
+               l |= __KFIFO_GET(fifo, 1, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: include/linux/kfifo.h:295:
+       return l;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: include/linux/kfifo.h:303:
+                       unsigned int recsize, unsigned int n)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: include/linux/kfifo.h:303:
+static inline void __kfifo_poke_n(struct kfifo *fifo,
+                       unsigned int recsize, unsigned int n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: include/linux/kfifo.h:303:
+                       unsigned int recsize, unsigned int n)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fifo' - possible side-effects?
#82: FILE: include/linux/kfifo.h:305:
+#define        __KFIFO_PUT(fifo, off, val, shift) \
+               ( \
+               (fifo)->buffer[__kfifo_off((fifo), (fifo)->in+(off))] = \
+               (unsigned char)((val) >> (shift)) \
+               )

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: include/linux/kfifo.h:306:
+               ( \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: include/linux/kfifo.h:306:
+               ( \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: include/linux/kfifo.h:307:
+               (fifo)->buffer[__kfifo_off((fifo), (fifo)->in+(off))] = \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: include/linux/kfifo.h:307:
+               (fifo)->buffer[__kfifo_off((fifo), (fifo)->in+(off))] = \$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#84: FILE: include/linux/kfifo.h:307:
+               (fifo)->buffer[__kfifo_off((fifo), (fifo)->in+(off))] = \
                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: include/linux/kfifo.h:308:
+               (unsigned char)((val) >> (shift)) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: include/linux/kfifo.h:308:
+               (unsigned char)((val) >> (shift)) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: include/linux/kfifo.h:309:
+               )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: include/linux/kfifo.h:309:
+               )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/kfifo.h:311:
+       __KFIFO_PUT(fifo, 0, n, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/kfifo.h:313:
+       if (--recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#90: FILE: include/linux/kfifo.h:313:
+       if (--recsize)
+               __KFIFO_PUT(fifo, 1, n, 8);

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: include/linux/kfifo.h:314:
+               __KFIFO_PUT(fifo, 1, n, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/linux/kfifo.h:314:
+               __KFIFO_PUT(fifo, 1, n, 8);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: include/linux/kfifo.h:321:
+extern unsigned int __kfifo_in_n(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: include/linux/kfifo.h:322:
+extern unsigned int __kfifo_in_n(struct kfifo *fifo,
+       const void *from, unsigned int n, unsigned int recsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: include/linux/kfifo.h:322:
+       const void *from, unsigned int n, unsigned int recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: include/linux/kfifo.h:324:
+extern unsigned int __kfifo_in_generic(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: include/linux/kfifo.h:325:
+extern unsigned int __kfifo_in_generic(struct kfifo *fifo,
+       const void *from, unsigned int n, unsigned int recsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: include/linux/kfifo.h:325:
+       const void *from, unsigned int n, unsigned int recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: include/linux/kfifo.h:328:
+static inline unsigned int __kfifo_in_rec(struct kfifo *fifo,
+       const void *from, unsigned int n, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/linux/kfifo.h:328:
+       const void *from, unsigned int n, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/linux/kfifo.h:330:
+       unsigned int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/linux/kfifo.h:332:
+       ret = __kfifo_in_n(fifo, from, n, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/linux/kfifo.h:334:
+       if (likely(ret == 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#111: FILE: include/linux/kfifo.h:334:
+       if (likely(ret == 0)) {
+               if (recsize)

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: include/linux/kfifo.h:335:
+               if (recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: include/linux/kfifo.h:335:
+               if (recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#112: FILE: include/linux/kfifo.h:335:
+               if (recsize)
+                       __kfifo_poke_n(fifo, recsize, n);

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: include/linux/kfifo.h:336:
+                       __kfifo_poke_n(fifo, recsize, n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: include/linux/kfifo.h:336:
+                       __kfifo_poke_n(fifo, recsize, n);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: include/linux/kfifo.h:337:
+               __kfifo_add_in(fifo, n + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/linux/kfifo.h:337:
+               __kfifo_add_in(fifo, n + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: include/linux/kfifo.h:338:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: include/linux/kfifo.h:339:
+       return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: include/linux/kfifo.h:358:
+static inline __must_check unsigned int kfifo_in_rec(struct kfifo *fifo,
+       void *from, unsigned int n, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/linux/kfifo.h:358:
+       void *from, unsigned int n, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: include/linux/kfifo.h:360:
+       if (!__builtin_constant_p(recsize))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#137: FILE: include/linux/kfifo.h:360:
+       if (!__builtin_constant_p(recsize))
+               return __kfifo_in_generic(fifo, from, n, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: include/linux/kfifo.h:361:
+               return __kfifo_in_generic(fifo, from, n, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: include/linux/kfifo.h:361:
+               return __kfifo_in_generic(fifo, from, n, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: include/linux/kfifo.h:362:
+       return __kfifo_in_rec(fifo, from, n, recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/kfifo.h:369:
+extern unsigned int __kfifo_out_n(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: include/linux/kfifo.h:370:
+extern unsigned int __kfifo_out_n(struct kfifo *fifo,
+       void *to, unsigned int reclen, unsigned int recsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: include/linux/kfifo.h:370:
+       void *to, unsigned int reclen, unsigned int recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/kfifo.h:372:
+extern unsigned int __kfifo_out_generic(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: include/linux/kfifo.h:373:
+extern unsigned int __kfifo_out_generic(struct kfifo *fifo,
+       void *to, unsigned int n,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: include/linux/kfifo.h:373:
+       void *to, unsigned int n,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/linux/kfifo.h:374:
+       unsigned int recsize, unsigned int *total);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/linux/kfifo.h:377:
+static inline unsigned int __kfifo_out_rec(struct kfifo *fifo,
+       void *to, unsigned int n, unsigned int recsize,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: include/linux/kfifo.h:377:
+       void *to, unsigned int n, unsigned int recsize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/linux/kfifo.h:378:
+       unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/kfifo.h:380:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: include/linux/kfifo.h:382:
+       if (!recsize) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#159: FILE: include/linux/kfifo.h:382:
+       if (!recsize) {
+               l = n;

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: include/linux/kfifo.h:383:
+               l = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/kfifo.h:383:
+               l = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: include/linux/kfifo.h:384:
+               if (total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/kfifo.h:384:
+               if (total)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#161: FILE: include/linux/kfifo.h:384:
+               if (total)
+                       *total = l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/kfifo.h:385:
+                       *total = l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/kfifo.h:385:
+                       *total = l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: include/linux/kfifo.h:386:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#163: FILE: include/linux/kfifo.h:386:
+       } else {
+               l = __kfifo_peek_n(fifo, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: include/linux/kfifo.h:387:
+               l = __kfifo_peek_n(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/kfifo.h:387:
+               l = __kfifo_peek_n(fifo, recsize);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: include/linux/kfifo.h:388:
+               if (total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: include/linux/kfifo.h:388:
+               if (total)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#165: FILE: include/linux/kfifo.h:388:
+               if (total)
+                       *total = l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: include/linux/kfifo.h:389:
+                       *total = l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: include/linux/kfifo.h:389:
+                       *total = l;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: include/linux/kfifo.h:390:
+               if (n < l)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/kfifo.h:390:
+               if (n < l)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#167: FILE: include/linux/kfifo.h:390:
+               if (n < l)
+                       return l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: include/linux/kfifo.h:391:
+                       return l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/kfifo.h:391:
+                       return l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/linux/kfifo.h:392:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: include/linux/kfifo.h:394:
+       return __kfifo_out_n(fifo, to, l, recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: include/linux/kfifo.h:414:
+static inline __must_check unsigned int kfifo_out_rec(struct kfifo *fifo,
+       void *to, unsigned int n, unsigned int recsize,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: include/linux/kfifo.h:414:
+       void *to, unsigned int n, unsigned int recsize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: include/linux/kfifo.h:415:
+       unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: include/linux/kfifo.h:418:
+       if (!__builtin_constant_p(recsize))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#195: FILE: include/linux/kfifo.h:418:
+       if (!__builtin_constant_p(recsize))
+               return __kfifo_out_generic(fifo, to, n, recsize, total);

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: include/linux/kfifo.h:419:
+               return __kfifo_out_generic(fifo, to, n, recsize, total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: include/linux/kfifo.h:419:
+               return __kfifo_out_generic(fifo, to, n, recsize, total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: include/linux/kfifo.h:420:
+       return __kfifo_out_rec(fifo, to, n, recsize, total);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: include/linux/kfifo.h:427:
+extern unsigned int __kfifo_from_user_n(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: include/linux/kfifo.h:428:
+extern unsigned int __kfifo_from_user_n(struct kfifo *fifo,
+       const void __user *from, unsigned int n, unsigned int recsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: include/linux/kfifo.h:428:
+       const void __user *from, unsigned int n, unsigned int recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: include/linux/kfifo.h:430:
+extern unsigned int __kfifo_from_user_generic(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: include/linux/kfifo.h:431:
+extern unsigned int __kfifo_from_user_generic(struct kfifo *fifo,
+       const void __user *from, unsigned int n, unsigned int recsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: include/linux/kfifo.h:431:
+       const void __user *from, unsigned int n, unsigned int recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: include/linux/kfifo.h:434:
+static inline unsigned int __kfifo_from_user_rec(struct kfifo *fifo,
+       const void __user *from, unsigned int n, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: include/linux/kfifo.h:434:
+       const void __user *from, unsigned int n, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/linux/kfifo.h:436:
+       unsigned int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: include/linux/kfifo.h:438:
+       ret = __kfifo_from_user_n(fifo, from, n, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/kfifo.h:440:
+       if (likely(ret == 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#217: FILE: include/linux/kfifo.h:440:
+       if (likely(ret == 0)) {
+               if (recsize)

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: include/linux/kfifo.h:441:
+               if (recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: include/linux/kfifo.h:441:
+               if (recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#218: FILE: include/linux/kfifo.h:441:
+               if (recsize)
+                       __kfifo_poke_n(fifo, recsize, n);

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/kfifo.h:442:
+                       __kfifo_poke_n(fifo, recsize, n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/kfifo.h:442:
+                       __kfifo_poke_n(fifo, recsize, n);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/linux/kfifo.h:443:
+               __kfifo_add_in(fifo, n + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/linux/kfifo.h:443:
+               __kfifo_add_in(fifo, n + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/linux/kfifo.h:444:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: include/linux/kfifo.h:445:
+       return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: include/linux/kfifo.h:465:
+static inline __must_check unsigned int kfifo_from_user_rec(struct kfifo *fifo,
+       const void __user *from, unsigned int n, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/linux/kfifo.h:465:
+       const void __user *from, unsigned int n, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/linux/kfifo.h:467:
+       if (!__builtin_constant_p(recsize))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#244: FILE: include/linux/kfifo.h:467:
+       if (!__builtin_constant_p(recsize))
+               return __kfifo_from_user_generic(fifo, from, n, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/linux/kfifo.h:468:
+               return __kfifo_from_user_generic(fifo, from, n, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/linux/kfifo.h:468:
+               return __kfifo_from_user_generic(fifo, from, n, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: include/linux/kfifo.h:469:
+       return __kfifo_from_user_rec(fifo, from, n, recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: include/linux/kfifo.h:476:
+extern unsigned int __kfifo_to_user_n(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: include/linux/kfifo.h:477:
+extern unsigned int __kfifo_to_user_n(struct kfifo *fifo,
+       void __user *to, unsigned int n, unsigned int reclen,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: include/linux/kfifo.h:477:
+       void __user *to, unsigned int n, unsigned int reclen,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: include/linux/kfifo.h:478:
+       unsigned int recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: include/linux/kfifo.h:480:
+extern unsigned int __kfifo_to_user_generic(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: include/linux/kfifo.h:481:
+extern unsigned int __kfifo_to_user_generic(struct kfifo *fifo,
+       void __user *to, unsigned int n, unsigned int recsize,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: include/linux/kfifo.h:481:
+       void __user *to, unsigned int n, unsigned int recsize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: include/linux/kfifo.h:482:
+       unsigned int *total);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: include/linux/kfifo.h:485:
+static inline unsigned int __kfifo_to_user_rec(struct kfifo *fifo,
+       void __user *to, unsigned int n,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: include/linux/kfifo.h:485:
+       void __user *to, unsigned int n,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: include/linux/kfifo.h:486:
+       unsigned int recsize, unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: include/linux/kfifo.h:488:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: include/linux/kfifo.h:490:
+       if (!recsize) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#267: FILE: include/linux/kfifo.h:490:
+       if (!recsize) {
+               l = n;

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: include/linux/kfifo.h:491:
+               l = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: include/linux/kfifo.h:491:
+               l = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: include/linux/kfifo.h:492:
+               if (total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: include/linux/kfifo.h:492:
+               if (total)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#269: FILE: include/linux/kfifo.h:492:
+               if (total)
+                       *total = l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: include/linux/kfifo.h:493:
+                       *total = l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: include/linux/kfifo.h:493:
+                       *total = l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: include/linux/kfifo.h:494:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#271: FILE: include/linux/kfifo.h:494:
+       } else {
+               l = __kfifo_peek_n(fifo, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: include/linux/kfifo.h:495:
+               l = __kfifo_peek_n(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: include/linux/kfifo.h:495:
+               l = __kfifo_peek_n(fifo, recsize);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: include/linux/kfifo.h:496:
+               if (total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: include/linux/kfifo.h:496:
+               if (total)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#273: FILE: include/linux/kfifo.h:496:
+               if (total)
+                       *total = l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: include/linux/kfifo.h:497:
+                       *total = l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: include/linux/kfifo.h:497:
+                       *total = l;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: include/linux/kfifo.h:498:
+               if (n < l)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: include/linux/kfifo.h:498:
+               if (n < l)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#275: FILE: include/linux/kfifo.h:498:
+               if (n < l)
+                       return l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: include/linux/kfifo.h:499:
+                       return l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: include/linux/kfifo.h:499:
+                       return l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: include/linux/kfifo.h:500:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: include/linux/kfifo.h:502:
+       return __kfifo_to_user_n(fifo, to, n, l, recsize);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: include/linux/kfifo.h:523:
+               void __user *to, unsigned int n, unsigned int recsize,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: include/linux/kfifo.h:523:
+static inline __must_check unsigned int kfifo_to_user_rec(struct kfifo *fifo,
+               void __user *to, unsigned int n, unsigned int recsize,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: include/linux/kfifo.h:523:
+               void __user *to, unsigned int n, unsigned int recsize,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: include/linux/kfifo.h:524:
+               unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: include/linux/kfifo.h:524:
+               unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: include/linux/kfifo.h:526:
+       if (!__builtin_constant_p(recsize))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#303: FILE: include/linux/kfifo.h:526:
+       if (!__builtin_constant_p(recsize))
+               return __kfifo_to_user_generic(fifo, to, n, recsize, total);

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: include/linux/kfifo.h:527:
+               return __kfifo_to_user_generic(fifo, to, n, recsize, total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: include/linux/kfifo.h:527:
+               return __kfifo_to_user_generic(fifo, to, n, recsize, total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: include/linux/kfifo.h:528:
+       return __kfifo_to_user_rec(fifo, to, n, recsize, total);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/linux/kfifo.h:535:
+extern unsigned int __kfifo_peek_generic(struct kfifo *fifo,

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: include/linux/kfifo.h:536:
+                               unsigned int recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: include/linux/kfifo.h:536:
+extern unsigned int __kfifo_peek_generic(struct kfifo *fifo,
+                               unsigned int recsize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: include/linux/kfifo.h:536:
+                               unsigned int recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: include/linux/kfifo.h:546:
+static inline __must_check unsigned int kfifo_peek_rec(struct kfifo *fifo,
+       unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: include/linux/kfifo.h:546:
+       unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: include/linux/kfifo.h:548:
+       if (!__builtin_constant_p(recsize))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#325: FILE: include/linux/kfifo.h:548:
+       if (!__builtin_constant_p(recsize))
+               return __kfifo_peek_generic(fifo, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: include/linux/kfifo.h:549:
+               return __kfifo_peek_generic(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: include/linux/kfifo.h:549:
+               return __kfifo_peek_generic(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: include/linux/kfifo.h:550:
+       if (!recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#327: FILE: include/linux/kfifo.h:550:
+       if (!recsize)
+               return kfifo_len(fifo);

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: include/linux/kfifo.h:551:
+               return kfifo_len(fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: include/linux/kfifo.h:551:
+               return kfifo_len(fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: include/linux/kfifo.h:552:
+       return __kfifo_peek_n(fifo, recsize);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#336: FILE: include/linux/kfifo.h:559:
+extern void __kfifo_skip_generic(struct kfifo *fifo, unsigned int recsize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: include/linux/kfifo.h:562:
+static inline void __kfifo_skip_rec(struct kfifo *fifo,
+       unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: include/linux/kfifo.h:562:
+       unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: include/linux/kfifo.h:564:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: include/linux/kfifo.h:566:
+       if (recsize) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#343: FILE: include/linux/kfifo.h:566:
+       if (recsize) {
+               l = __kfifo_peek_n(fifo, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: include/linux/kfifo.h:567:
+               l = __kfifo_peek_n(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/linux/kfifo.h:567:
+               l = __kfifo_peek_n(fifo, recsize);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: include/linux/kfifo.h:569:
+               if (l + recsize <= kfifo_len(fifo)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: include/linux/kfifo.h:569:
+               if (l + recsize <= kfifo_len(fifo)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#346: FILE: include/linux/kfifo.h:569:
+               if (l + recsize <= kfifo_len(fifo)) {
+                       __kfifo_add_out(fifo, l + recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: include/linux/kfifo.h:570:
+                       __kfifo_add_out(fifo, l + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: include/linux/kfifo.h:570:
+                       __kfifo_add_out(fifo, l + recsize);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: include/linux/kfifo.h:571:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: include/linux/kfifo.h:571:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: include/linux/kfifo.h:572:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: include/linux/kfifo.h:572:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: include/linux/kfifo.h:573:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: include/linux/kfifo.h:574:
+       kfifo_reset_out(fifo);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: include/linux/kfifo.h:585:
+static inline void kfifo_skip_rec(struct kfifo *fifo,
+       unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: include/linux/kfifo.h:585:
+       unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: include/linux/kfifo.h:587:
+       if (!__builtin_constant_p(recsize))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#364: FILE: include/linux/kfifo.h:587:
+       if (!__builtin_constant_p(recsize))
+               __kfifo_skip_generic(fifo, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: include/linux/kfifo.h:588:
+               __kfifo_skip_generic(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: include/linux/kfifo.h:588:
+               __kfifo_skip_generic(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/linux/kfifo.h:589:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#366: FILE: include/linux/kfifo.h:589:
+       else
+               __kfifo_skip_rec(fifo, recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: include/linux/kfifo.h:590:
+               __kfifo_skip_rec(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: include/linux/kfifo.h:590:
+               __kfifo_skip_rec(fifo, recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: include/linux/kfifo.h:599:
+static inline __must_check unsigned int kfifo_avail_rec(struct kfifo *fifo,
+       unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: include/linux/kfifo.h:599:
+       unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: include/linux/kfifo.h:601:
+       unsigned int l = kfifo_size(fifo) - kfifo_len(fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: include/linux/kfifo.h:603:
+       return (l > recsize) ? l - recsize : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: kernel/kfifo.c:119:
+               const void *from, unsigned int len, unsigned int off)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: kernel/kfifo.c:119:
+static inline void __kfifo_in_data(struct kfifo *fifo,
+               const void *from, unsigned int len, unsigned int off)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: kernel/kfifo.c:119:
+               const void *from, unsigned int len, unsigned int off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: kernel/kfifo.c:130:
+       off = __kfifo_off(fifo, fifo->in + off);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: kernel/kfifo.c:141:
+               void *to, unsigned int len, unsigned int off)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: kernel/kfifo.c:141:
+static inline void __kfifo_out_data(struct kfifo *fifo,
+               void *to, unsigned int len, unsigned int off)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: kernel/kfifo.c:141:
+               void *to, unsigned int len, unsigned int off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: kernel/kfifo.c:152:
+       off = __kfifo_off(fifo, fifo->out + off);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: kernel/kfifo.c:163:
+        const void __user *from, unsigned int len, unsigned int off)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: kernel/kfifo.c:163:
+static inline unsigned int __kfifo_from_user_data(struct kfifo *fifo,
+        const void __user *from, unsigned int len, unsigned int off)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/kfifo.c:163:
+        const void __user *from, unsigned int len, unsigned int off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: kernel/kfifo.c:175:
+       off = __kfifo_off(fifo, fifo->in + off);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#519: FILE: kernel/kfifo.c:181:
        if (unlikely(ret))
+               return ret + len - l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: kernel/kfifo.c:182:
+               return ret + len - l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: kernel/kfifo.c:182:
+               return ret + len - l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/kfifo.c:185:
+       return copy_from_user(fifo->buffer, from + l, len - l);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: kernel/kfifo.c:189:
+               void __user *to, unsigned int len, unsigned int off)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: kernel/kfifo.c:189:
+static inline unsigned int __kfifo_to_user_data(struct kfifo *fifo,
+               void __user *to, unsigned int len, unsigned int off)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: kernel/kfifo.c:189:
+               void __user *to, unsigned int len, unsigned int off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: kernel/kfifo.c:191:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: kernel/kfifo.c:192:
+       int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: kernel/kfifo.c:195:
+        * Ensure that we sample the fifo->in index -before- we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: kernel/kfifo.c:196:
+        * start removing bytes from the kfifo.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: kernel/kfifo.c:197:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: kernel/kfifo.c:199:
+       smp_rmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#539: FILE: kernel/kfifo.c:199:
+       smp_rmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: kernel/kfifo.c:201:
+       off = __kfifo_off(fifo, fifo->out + off);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: kernel/kfifo.c:204:
+       l = min(len, fifo->size - off);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/kfifo.c:205:
+       ret = copy_to_user(to, fifo->buffer + off, l);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#547: FILE: kernel/kfifo.c:207:
        if (unlikely(ret))
+               return ret + len - l;

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: kernel/kfifo.c:208:
+               return ret + len - l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: kernel/kfifo.c:208:
+               return ret + len - l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: kernel/kfifo.c:211:
+       return copy_to_user(to + l, fifo->buffer, len - l);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: kernel/kfifo.c:215:
+unsigned int __kfifo_in_n(struct kfifo *fifo,
+       const void *from, unsigned int len, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: kernel/kfifo.c:215:
+       const void *from, unsigned int len, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: kernel/kfifo.c:217:
+       if (kfifo_avail(fifo) < len + recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#559: FILE: kernel/kfifo.c:217:
+       if (kfifo_avail(fifo) < len + recsize)
+               return len + 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: kernel/kfifo.c:218:
+               return len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: kernel/kfifo.c:218:
+               return len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/kfifo.c:220:
+       __kfifo_in_data(fifo, from, len, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: kernel/kfifo.c:221:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: kernel/kfifo.c:239:
+                               unsigned int len)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: kernel/kfifo.c:239:
+unsigned int kfifo_in(struct kfifo *fifo, const unsigned char *from,
+                               unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/kfifo.c:239:
+                               unsigned int len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: kernel/kfifo.c:241:
+       len = min(kfifo_avail(fifo), len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: kernel/kfifo.c:243:
+       __kfifo_in_data(fifo, from, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: kernel/kfifo.c:244:
+       __kfifo_add_in(fifo, len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: kernel/kfifo.c:250:
+unsigned int __kfifo_in_generic(struct kfifo *fifo,
+       const void *from, unsigned int len, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: kernel/kfifo.c:250:
+       const void *from, unsigned int len, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: kernel/kfifo.c:252:
+       return __kfifo_in_rec(fifo, from, len, recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: kernel/kfifo.c:257:
+unsigned int __kfifo_out_n(struct kfifo *fifo,
+       void *to, unsigned int len, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: kernel/kfifo.c:257:
+       void *to, unsigned int len, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: kernel/kfifo.c:259:
+       if (kfifo_len(fifo) < len + recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#602: FILE: kernel/kfifo.c:259:
+       if (kfifo_len(fifo) < len + recsize)
+               return len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: kernel/kfifo.c:260:
+               return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: kernel/kfifo.c:260:
+               return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: kernel/kfifo.c:262:
+       __kfifo_out_data(fifo, to, len, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: kernel/kfifo.c:263:
+       __kfifo_add_out(fifo, len + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: kernel/kfifo.c:264:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: kernel/kfifo.c:282:
+       len = min(kfifo_len(fifo), len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: kernel/kfifo.c:284:
+       __kfifo_out_data(fifo, to, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: kernel/kfifo.c:285:
+       __kfifo_add_out(fifo, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: kernel/kfifo.c:287:
+       return len;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: kernel/kfifo.c:292:
+unsigned int __kfifo_out_generic(struct kfifo *fifo,
+       void *to, unsigned int len, unsigned int recsize,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: kernel/kfifo.c:292:
+       void *to, unsigned int len, unsigned int recsize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: kernel/kfifo.c:293:
+       unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: kernel/kfifo.c:295:
+       return __kfifo_out_rec(fifo, to, len, recsize, total);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: kernel/kfifo.c:300:
+unsigned int __kfifo_from_user_n(struct kfifo *fifo,
+       const void __user *from, unsigned int len, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: kernel/kfifo.c:300:
+       const void __user *from, unsigned int len, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: kernel/kfifo.c:302:
+       if (kfifo_avail(fifo) < len + recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#655: FILE: kernel/kfifo.c:302:
+       if (kfifo_avail(fifo) < len + recsize)
+               return len + 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: kernel/kfifo.c:303:
+               return len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: kernel/kfifo.c:303:
+               return len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: kernel/kfifo.c:305:
+       return __kfifo_from_user_data(fifo, from, len, recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: kernel/kfifo.c:322:
+unsigned int kfifo_from_user(struct kfifo *fifo,
+       const void __user *from, unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: kernel/kfifo.c:322:
+       const void __user *from, unsigned int len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: kernel/kfifo.c:324:
+       len = min(kfifo_avail(fifo), len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: kernel/kfifo.c:325:
+       len -= __kfifo_from_user_data(fifo, from, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: kernel/kfifo.c:326:
+       __kfifo_add_in(fifo, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: kernel/kfifo.c:327:
+       return len;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#692: FILE: kernel/kfifo.c:332:
+unsigned int __kfifo_from_user_generic(struct kfifo *fifo,
+       const void __user *from, unsigned int len, unsigned int recsize)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: kernel/kfifo.c:332:
+       const void __user *from, unsigned int len, unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: kernel/kfifo.c:334:
+       return __kfifo_from_user_rec(fifo, from, len, recsize);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: kernel/kfifo.c:339:
+unsigned int __kfifo_to_user_n(struct kfifo *fifo,
+       void __user *to, unsigned int len, unsigned int reclen,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: kernel/kfifo.c:339:
+       void __user *to, unsigned int len, unsigned int reclen,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: kernel/kfifo.c:340:
+       unsigned int recsize)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: kernel/kfifo.c:342:
+       unsigned int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: kernel/kfifo.c:344:
+       if (kfifo_len(fifo) < reclen + recsize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#707: FILE: kernel/kfifo.c:344:
+       if (kfifo_len(fifo) < reclen + recsize)
+               return len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: kernel/kfifo.c:345:
+               return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: kernel/kfifo.c:345:
+               return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: kernel/kfifo.c:347:
+       ret = __kfifo_to_user_data(fifo, to, reclen, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: kernel/kfifo.c:349:
+       if (likely(ret == 0))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#712: FILE: kernel/kfifo.c:349:
+       if (likely(ret == 0))
+               __kfifo_add_out(fifo, reclen + recsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: kernel/kfifo.c:350:
+               __kfifo_add_out(fifo, reclen + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: kernel/kfifo.c:350:
+               __kfifo_add_out(fifo, reclen + recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: kernel/kfifo.c:352:
+       return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: kernel/kfifo.c:369:
+unsigned int kfifo_to_user(struct kfifo *fifo,
+       void __user *to, unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: kernel/kfifo.c:369:
+       void __user *to, unsigned int len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: kernel/kfifo.c:371:
+       len = min(kfifo_len(fifo), len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: kernel/kfifo.c:372:
+       len -= __kfifo_to_user_data(fifo, to, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: kernel/kfifo.c:373:
+       __kfifo_add_out(fifo, len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: kernel/kfifo.c:379:
+unsigned int __kfifo_to_user_generic(struct kfifo *fifo,
+       void __user *to, unsigned int len, unsigned int recsize,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: kernel/kfifo.c:379:
+       void __user *to, unsigned int len, unsigned int recsize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: kernel/kfifo.c:380:
+       unsigned int *total)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: kernel/kfifo.c:382:
+       return __kfifo_to_user_rec(fifo, to, len, recsize, total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: kernel/kfifo.c:388:
+       if (recsize == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#751: FILE: kernel/kfifo.c:388:
+       if (recsize == 0)
+               return kfifo_avail(fifo);

ERROR:CODE_INDENT: code indent should use tabs where possible
#752: FILE: kernel/kfifo.c:389:
+               return kfifo_avail(fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: kernel/kfifo.c:389:
+               return kfifo_avail(fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: kernel/kfifo.c:391:
+       return __kfifo_peek_n(fifo, recsize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: kernel/kfifo.c:397:
+       __kfifo_skip_rec(fifo, recsize);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 62 errors, 225 warnings, 52 checks, 702 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
