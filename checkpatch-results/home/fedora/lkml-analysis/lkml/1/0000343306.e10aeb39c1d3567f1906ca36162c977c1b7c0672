CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#50: FILE: drivers/kvm/x86_emulate.c:66:
+#define MemAbs      (1<<9)      /* Memory operand is absolute displacement */
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <MemAbs>
#50: FILE: drivers/kvm/x86_emulate.c:66:
+#define MemAbs      (1<<9)      /* Memory operand is absolute displacement */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BIT_MACRO: Prefer using the BIT macro
#50: FILE: drivers/kvm/x86_emulate.c:66:
+#define MemAbs      (1<<9)      /* Memory operand is absolute displacement */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <ByteOp>
#63: FILE: drivers/kvm/x86_emulate.c:138:
+	ByteOp | DstReg | SrcMem | Mov | MemAbs, DstReg | SrcMem | Mov | MemAbs,

CHECK:CAMELCASE: Avoid CamelCase: <DstReg>
#63: FILE: drivers/kvm/x86_emulate.c:138:
+	ByteOp | DstReg | SrcMem | Mov | MemAbs, DstReg | SrcMem | Mov | MemAbs,

CHECK:CAMELCASE: Avoid CamelCase: <SrcMem>
#63: FILE: drivers/kvm/x86_emulate.c:138:
+	ByteOp | DstReg | SrcMem | Mov | MemAbs, DstReg | SrcMem | Mov | MemAbs,

CHECK:CAMELCASE: Avoid CamelCase: <Mov>
#63: FILE: drivers/kvm/x86_emulate.c:138:
+	ByteOp | DstReg | SrcMem | Mov | MemAbs, DstReg | SrcMem | Mov | MemAbs,

CHECK:CAMELCASE: Avoid CamelCase: <DstMem>
#64: FILE: drivers/kvm/x86_emulate.c:139:
+	ByteOp | DstMem | SrcReg | Mov | MemAbs, DstMem | SrcReg | Mov | MemAbs,

CHECK:CAMELCASE: Avoid CamelCase: <SrcReg>
#64: FILE: drivers/kvm/x86_emulate.c:139:
+	ByteOp | DstMem | SrcReg | Mov | MemAbs, DstMem | SrcReg | Mov | MemAbs,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->modrm_mod != 3'
#128: FILE: drivers/kvm/x86_emulate.c:1188:
+	if (((c->d & ModRM) && (c->modrm_mod != 3)) || (c->d & MemAbs))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <ModRM>
#128: FILE: drivers/kvm/x86_emulate.c:1188:
+	if (((c->d & ModRM) && (c->modrm_mod != 3)) || (c->d & MemAbs))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343306.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 11 checks, 94 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343306.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
