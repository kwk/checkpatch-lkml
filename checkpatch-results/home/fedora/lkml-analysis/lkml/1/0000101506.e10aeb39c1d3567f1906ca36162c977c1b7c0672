ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#37: 
	--- a/arch/frv/kernel/setup.c

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#72: 
	+	if (atomic64_cmpxchg(&xxx, 0x123456789abcdefLL, 0x121ffffffd4LL) != 0x121ffffffd4LL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#129: FILE: arch/frv/include/asm/atomic.h:127:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#130: FILE: arch/frv/include/asm/atomic.h:128:
+	volatile long long counter;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: arch/frv/include/asm/atomic.h:150:
+extern long long atomic64_inc_return(atomic64_t *v);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: arch/frv/include/asm/atomic.h:151:
+extern long long atomic64_dec_return(atomic64_t *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: arch/frv/include/asm/atomic.h:152:
+extern long long atomic64_add_return(long long i, atomic64_t *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: arch/frv/include/asm/atomic.h:153:
+extern long long atomic64_sub_return(long long i, atomic64_t *v);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: arch/frv/include/asm/atomic.h:180:
+#define atomic64_sub_and_test(i,v)	(atomic64_sub_return((i), (v)) == 0)
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#190: FILE: arch/frv/include/asm/atomic.h:188:
+extern uint64_t __xchg_64(uint64_t i, volatile void *v);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#190: FILE: arch/frv/include/asm/atomic.h:188:
+extern uint64_t __xchg_64(uint64_t i, volatile void *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: arch/frv/include/asm/atomic.h:188:
+extern uint64_t __xchg_64(uint64_t i, volatile void *v);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#216: FILE: arch/frv/include/asm/system.h:211:
+extern uint64_t __cmpxchg_64(uint64_t test, uint64_t new, volatile uint64_t *v);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#216: FILE: arch/frv/include/asm/system.h:211:
+extern uint64_t __cmpxchg_64(uint64_t test, uint64_t new, volatile uint64_t *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: arch/frv/include/asm/system.h:211:
+extern uint64_t __cmpxchg_64(uint64_t test, uint64_t new, volatile uint64_t *v);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#231: FILE: arch/frv/kernel/frv_ksyms.c:72:
+EXPORT_SYMBOL(__xchg_64);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#232: FILE: arch/frv/kernel/frv_ksyms.c:73:
+EXPORT_SYMBOL(__cmpxchg_64);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#265: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#270: FILE: arch/frv/lib/atomic64-ops.S:1:
+/* kernel atomic64 operations

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101506.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 8 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101506.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
