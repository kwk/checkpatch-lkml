WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Here is a standard janitor-style cleanup patch for the fib_trie code. I thought

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#102: FILE: net/ipv4/fib_trie.c:98:
+/*
+ * synchronize_rcu after call_rcu for that many pages; it should be especially

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*li)...) over kmalloc(sizeof(struct leaf_info)...)
#173: FILE: net/ipv4/fib_trie.c:435:
+	struct leaf_info *li = kmalloc(sizeof(struct leaf_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#191: FILE: net/ipv4/fib_trie.c:492:
+	BUG_ON(i >= 1 << tn->bits);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#215: FILE: net/ipv4/fib_trie.c:607:
+	if (!node_parent((struct node *) tn)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#263: FILE: net/ipv4/fib_trie.c:725:
+			put_child(t, tn, 2 * i, (struct node *) left);

CHECK:SPACING: No space is necessary after a cast
#264: FILE: net/ipv4/fib_trie.c:726:
+			put_child(t, tn, 2 * i + 1, (struct node *) right);

CHECK:SPACING: No space is necessary after a cast
#297: FILE: net/ipv4/fib_trie.c:787:
+		left = (struct tnode *) tnode_get_child(tn, 2 * i);

CHECK:SPACING: No space is necessary after a cast
#304: FILE: net/ipv4/fib_trie.c:792:
+		right = (struct tnode *) tnode_get_child(tn, 2 * i + 1);

CHECK:SPACING: No space is necessary after a cast
#363: FILE: net/ipv4/fib_trie.c:883:
+		newBinNode = (struct tnode *) tnode_get_child(tn, i / 2);

CHECK:CAMELCASE: Avoid CamelCase: <newBinNode>
#363: FILE: net/ipv4/fib_trie.c:883:
+		newBinNode = (struct tnode *) tnode_get_child(tn, i / 2);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#432: FILE: net/ipv4/fib_trie.c:1528:
+		pn = (struct tnode *) n; /* Descend */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#441: FILE: net/ipv4/fib_trie.c:1537:
 		while ((chopped_off <= pn->bits)
+		       && !(cindex & (1 << (chopped_off - 1))))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000037526.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 10 checks, 466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000037526.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
