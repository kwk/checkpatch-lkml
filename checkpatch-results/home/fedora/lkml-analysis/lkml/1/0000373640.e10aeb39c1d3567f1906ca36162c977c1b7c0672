WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: block/compat_ioctl.c:1:
+#include <linux/blkdev.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: block/compat_ioctl.c:49:
+static int compat_hdio_getgeo(struct gendisk *disk, struct block_device *bdev,
+			struct compat_hd_geometry __user *ugeo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: block/compat_ioctl.c:77:
+static int compat_hdio_ioctl(struct inode *inode, struct file *file,
+		struct gendisk *disk, unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: block/compat_ioctl.c:86:
+	error = blkdev_driver_ioctl(inode, file, disk,
+				cmd, (unsigned long)(&kval));

ERROR:SPACING: space required before the open parenthesis '('
#170: FILE: block/compat_ioctl.c:91:
+		if(put_user(kval, uvp))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: block/compat_ioctl.c:117:
+static int cdrom_do_read_audio(struct inode *inode, struct file *file,
+		struct gendisk *disk, unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: block/compat_ioctl.c:144:
+static int cdrom_do_generic_command(struct inode *inode, struct file *file,
+		struct gendisk *disk, unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: block/compat_ioctl.c:183:
+static int compat_blkpg_ioctl(struct inode *inode, struct file *file,
+		unsigned int cmd, struct compat_blkpg_ioctl_arg __user *ua32)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: block/compat_ioctl.c:205:
+#define BLKBSZGET_32   _IOR(0x12,112,int)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: block/compat_ioctl.c:205:
+#define BLKBSZGET_32   _IOR(0x12,112,int)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: block/compat_ioctl.c:206:
+#define BLKBSZSET_32   _IOW(0x12,113,int)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: block/compat_ioctl.c:206:
+#define BLKBSZSET_32   _IOW(0x12,113,int)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: block/compat_ioctl.c:207:
+#define BLKGETSIZE64_32        _IOR(0x12,114,int)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: block/compat_ioctl.c:207:
+#define BLKGETSIZE64_32        _IOR(0x12,114,int)
                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: block/compat_ioctl.c:315:
+static int compat_fd_ioctl(struct inode *inode, struct file *file,
+		struct gendisk *disk, unsigned int cmd, unsigned long arg)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#409: FILE: block/compat_ioctl.c:330:
+	switch (cmd) {
+		case FDSETPRM32:
+		case FDDEFPRM32:
+		case FDGETPRM32:
[...]
+		case FDSETDRVPRM32:
+		case FDGETDRVPRM32:
[...]
+		case FDGETDRVSTAT32:
+		case FDPOLLDRVSTAT32:
[...]
+		case FDGETFDCSTAT32:
[...]
+		case FDWERRORGET32:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#419: FILE: block/compat_ioctl.c:340:
+			f = karg = kmalloc(sizeof(struct floppy_struct), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_struct)...)
#419: FILE: block/compat_ioctl.c:340:
+			f = karg = kmalloc(sizeof(struct floppy_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#448: FILE: block/compat_ioctl.c:369:
+			f = karg = kmalloc(sizeof(struct floppy_drive_params), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_drive_params)...)
#448: FILE: block/compat_ioctl.c:369:
+			f = karg = kmalloc(sizeof(struct floppy_drive_params), GFP_KERNEL);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#466: FILE: block/compat_ioctl.c:387:
+			err |= __copy_from_user(&f->max_errors, &uf->max_errors, sizeof(f->max_errors));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#469: FILE: block/compat_ioctl.c:390:
+			err |= __copy_from_user(f->autodetect, uf->autodetect, sizeof(f->autodetect));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_drive_struct)...)
#480: FILE: block/compat_ioctl.c:401:
+			karg = kmalloc(sizeof(struct floppy_drive_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_fdc_state)...)
#485: FILE: block/compat_ioctl.c:406:
+			karg = kmalloc(sizeof(struct floppy_fdc_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_write_errors)...)
#490: FILE: block/compat_ioctl.c:411:
+			karg = kmalloc(sizeof(struct floppy_write_errors), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#497: FILE: block/compat_ioctl.c:418:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#499: FILE: block/compat_ioctl.c:420:
+	set_fs (old_fs);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#502: FILE: block/compat_ioctl.c:423:
+	switch (cmd) {
+		case FDGETPRM32:
[...]
+		case FDGETDRVPRM32:
[...]
+		case FDGETDRVSTAT32:
+		case FDPOLLDRVSTAT32:
[...]
+		case FDGETFDCSTAT32:
[...]
+		case FDWERRORGET32:
[...]
+		default:

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#539: FILE: block/compat_ioctl.c:460:
+			err |= __copy_to_user(&uf->max_errors, &f->max_errors, sizeof(f->max_errors));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: block/compat_ioctl.c:536:
+static int compat_blkdev_driver_ioctl(struct inode *inode, struct file *file,
+			struct gendisk *disk, unsigned cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#615: FILE: block/compat_ioctl.c:536:
+			struct gendisk *disk, unsigned cmd, unsigned long arg)

WARNING:TYPO_SPELLING: 'intepret' may be misspelled - perhaps 'interpret'?
#715: FILE: block/compat_ioctl.c:636:
+	/* These intepret arg as an unsigned long, not as a pointer,
 	         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#716: FILE: block/compat_ioctl.c:637:
+	 * so we must not do compat_ptr() conversion. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: block/compat_ioctl.c:679:
+static int compat_blkdev_locked_ioctl(struct inode *inode, struct file *file,
+				struct block_device *bdev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#759: FILE: block/compat_ioctl.c:680:
+				unsigned cmd, unsigned long arg)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bdi"
#769: FILE: block/compat_ioctl.c:690:
+		if (bdi == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#782: FILE: block/compat_ioctl.c:703:
+		if(!capable(CAP_SYS_ADMIN))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bdi"
#785: FILE: block/compat_ioctl.c:706:
+		if (bdi == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: block/compat_ioctl.c:730:
+static int compat_blkdev_driver_ioctl(struct inode *inode, struct file *file,
+			struct gendisk *disk, unsigned cmd, unsigned long arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#809: FILE: block/compat_ioctl.c:730:
+			struct gendisk *disk, unsigned cmd, unsigned long arg);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#812: FILE: block/compat_ioctl.c:733:
+/* Most of the generic ioctls are handled in the normal fallback path.
+   This assumes the blkdev's low level compat_ioctl always returns

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#813: FILE: block/compat_ioctl.c:734:
+   ENOIOCTLCMD for unknown ioctls. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#814: FILE: block/compat_ioctl.c:735:
+long compat_blkdev_ioctl(struct file *file, unsigned cmd, unsigned long arg)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 14 warnings, 19 checks, 1578 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
