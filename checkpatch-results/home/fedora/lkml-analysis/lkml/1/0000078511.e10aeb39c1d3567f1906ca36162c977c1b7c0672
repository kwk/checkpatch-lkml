WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/block/DAC960.c:6429:
+  int ControllerNumber;$

CHECK:CAMELCASE: Avoid CamelCase: <ControllerNumber>
#65: FILE: drivers/block/DAC960.c:6429:
+  int ControllerNumber;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/block/DAC960.c:6442:
+  seq_puts(m, StatusMessage);$

CHECK:CAMELCASE: Avoid CamelCase: <StatusMessage>
#83: FILE: drivers/block/DAC960.c:6442:
+  seq_puts(m, StatusMessage);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/block/DAC960.c:6443:
+  return 0;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Controller_T>
#118: FILE: drivers/block/DAC960.c:6461:
+	DAC960_Controller_T *Controller = (DAC960_Controller_T *)m->private;

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#118: FILE: drivers/block/DAC960.c:6461:
+	DAC960_Controller_T *Controller = (DAC960_Controller_T *)m->private;

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: drivers/block/DAC960.c:6462:
+	DAC960_Controller_T *Controller = (DAC960_Controller_T *)m->private;
+	seq_printf(m, "%.*s", Controller->InitialStatusLength, Controller->CombinedStatusBuffer);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <InitialStatusLength>
#119: FILE: drivers/block/DAC960.c:6462:
+	seq_printf(m, "%.*s", Controller->InitialStatusLength, Controller->CombinedStatusBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <CombinedStatusBuffer>
#119: FILE: drivers/block/DAC960.c:6462:
+	seq_printf(m, "%.*s", Controller->InitialStatusLength, Controller->CombinedStatusBuffer);

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/block/DAC960.c:6481:
+  DAC960_Controller_T *Controller = (DAC960_Controller_T *) m->private;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/block/DAC960.c:6481:
+  DAC960_Controller_T *Controller = (DAC960_Controller_T *) m->private;$

CHECK:CAMELCASE: Avoid CamelCase: <CurrentStatusLength>
#166: FILE: drivers/block/DAC960.c:6508:
+	seq_printf(m, "%.*s", Controller->CurrentStatusLength, Controller->CurrentStatusBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <CurrentStatusBuffer>
#166: FILE: drivers/block/DAC960.c:6508:
+	seq_printf(m, "%.*s", Controller->CurrentStatusLength, Controller->CurrentStatusBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <UserStatusLength>
#204: FILE: drivers/block/DAC960.c:6529:
+	seq_printf(m, "%.*s", Controller->UserStatusLength, Controller->UserStatusBuffer);

CHECK:CAMELCASE: Avoid CamelCase: <UserStatusBuffer>
#204: FILE: drivers/block/DAC960.c:6529:
+	seq_printf(m, "%.*s", Controller->UserStatusLength, Controller->UserStatusBuffer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/block/DAC960.c:6539:
+static ssize_t dac960_user_command_proc_write(struct file *file,
 				       const char __user *Buffer,

CHECK:CAMELCASE: Avoid CamelCase: <Count>
#220: FILE: drivers/block/DAC960.c:6540:
+				       size_t Count, loff_t *pos)

CHECK:SPACING: No space is necessary after a cast
#223: FILE: drivers/block/DAC960.c:6542:
+  DAC960_Controller_T *Controller = (DAC960_Controller_T *) PDE(file->f_path.dentry->d_inode)->data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/block/DAC960.c:6542:
+  DAC960_Controller_T *Controller = (DAC960_Controller_T *) PDE(file->f_path.dentry->d_inode)->data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/block/DAC960.c:6581:
+  ^I^IStatusProcEntry = proc_create("status", 0,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/block/DAC960.c:6581:
+  ^I^IStatusProcEntry = proc_create("status", 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/block/DAC960.c:6581:
+  ^I^IStatusProcEntry = proc_create("status", 0,$

CHECK:CAMELCASE: Avoid CamelCase: <StatusProcEntry>
#247: FILE: drivers/block/DAC960.c:6581:
+  		StatusProcEntry = proc_create("status", 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/block/DAC960.c:6582:
+  		StatusProcEntry = proc_create("status", 0,
 					   DAC960_ProcDirectoryEntry,

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#265: FILE: drivers/block/DAC960.c:6589:
+      proc_create_data("initial_status", 0, ControllerProcEntry, &dac960_initial_status_proc_fops, Controller);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/block/DAC960.c:6589:
+      proc_create_data("initial_status", 0, ControllerProcEntry, &dac960_initial_status_proc_fops, Controller);$

CHECK:CAMELCASE: Avoid CamelCase: <ControllerProcEntry>
#265: FILE: drivers/block/DAC960.c:6589:
+      proc_create_data("initial_status", 0, ControllerProcEntry, &dac960_initial_status_proc_fops, Controller);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#266: FILE: drivers/block/DAC960.c:6590:
+      proc_create_data("current_status", 0, ControllerProcEntry, &dac960_current_status_proc_fops, Controller);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/block/DAC960.c:6590:
+      proc_create_data("current_status", 0, ControllerProcEntry, &dac960_current_status_proc_fops, Controller);$

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#267: FILE: drivers/block/DAC960.c:6591:
+      UserCommandProcEntry = proc_create_data("user_command", S_IWUSR | S_IRUSR, ControllerProcEntry, &dac960_user_command_proc_fops, Controller);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/block/DAC960.c:6591:
+      UserCommandProcEntry = proc_create_data("user_command", S_IWUSR | S_IRUSR, ControllerProcEntry, &dac960_user_command_proc_fops, Controller);$

CHECK:CAMELCASE: Avoid CamelCase: <UserCommandProcEntry>
#267: FILE: drivers/block/DAC960.c:6591:
+      UserCommandProcEntry = proc_create_data("user_command", S_IWUSR | S_IRUSR, ControllerProcEntry, &dac960_user_command_proc_fops, Controller);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUSR' are not preferred. Consider using octal permissions '0600'.
#267: FILE: drivers/block/DAC960.c:6591:
+      UserCommandProcEntry = proc_create_data("user_command", S_IWUSR | S_IRUSR, ControllerProcEntry, &dac960_user_command_proc_fops, Controller);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078511.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 18 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078511.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
