WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: drivers/video/omap2/dss/dsi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#55: FILE: drivers/video/omap2/dss/dsi.c:2:
+ * linux/drivers/video/omap2/dss/dsi.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#132: FILE: drivers/video/omap2/dss/dsi.c:79:
+#define DSI_VC_CTRL(n)			DSI_REG(0x0100 + (n * 0x20))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#133: FILE: drivers/video/omap2/dss/dsi.c:80:
+#define DSI_VC_TE(n)			DSI_REG(0x0104 + (n * 0x20))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#134: FILE: drivers/video/omap2/dss/dsi.c:81:
+#define DSI_VC_LONG_PACKET_HEADER(n)	DSI_REG(0x0108 + (n * 0x20))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#135: FILE: drivers/video/omap2/dss/dsi.c:82:
+#define DSI_VC_LONG_PACKET_PAYLOAD(n)	DSI_REG(0x010C + (n * 0x20))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#136: FILE: drivers/video/omap2/dss/dsi.c:83:
+#define DSI_VC_SHORT_PACKET_HEADER(n)	DSI_REG(0x0110 + (n * 0x20))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#137: FILE: drivers/video/omap2/dss/dsi.c:84:
+#define DSI_VC_IRQSTATUS(n)		DSI_REG(0x0118 + (n * 0x20))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#138: FILE: drivers/video/omap2/dss/dsi.c:85:
+#define DSI_VC_IRQENABLE(n)		DSI_REG(0x011C + (n * 0x20))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#158: FILE: drivers/video/omap2/dss/dsi.c:105:
+#define REG_FLD_MOD(idx, val, start, end) \
+	dsi_write_reg(idx, FLD_MOD(dsi_read_reg(idx), val, start, end))

CHECK:BIT_MACRO: Prefer using the BIT macro
#162: FILE: drivers/video/omap2/dss/dsi.c:109:
+#define DSI_IRQ_VC0		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: drivers/video/omap2/dss/dsi.c:110:
+#define DSI_IRQ_VC1		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#164: FILE: drivers/video/omap2/dss/dsi.c:111:
+#define DSI_IRQ_VC2		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: drivers/video/omap2/dss/dsi.c:112:
+#define DSI_IRQ_VC3		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: drivers/video/omap2/dss/dsi.c:113:
+#define DSI_IRQ_WAKEUP		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: drivers/video/omap2/dss/dsi.c:114:
+#define DSI_IRQ_RESYNC		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#168: FILE: drivers/video/omap2/dss/dsi.c:115:
+#define DSI_IRQ_PLL_LOCK	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#169: FILE: drivers/video/omap2/dss/dsi.c:116:
+#define DSI_IRQ_PLL_UNLOCK	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#170: FILE: drivers/video/omap2/dss/dsi.c:117:
+#define DSI_IRQ_PLL_RECALL	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#171: FILE: drivers/video/omap2/dss/dsi.c:118:
+#define DSI_IRQ_COMPLEXIO_ERR	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: drivers/video/omap2/dss/dsi.c:119:
+#define DSI_IRQ_HS_TX_TIMEOUT	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#173: FILE: drivers/video/omap2/dss/dsi.c:120:
+#define DSI_IRQ_LP_RX_TIMEOUT	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: drivers/video/omap2/dss/dsi.c:121:
+#define DSI_IRQ_TE_TRIGGER	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#175: FILE: drivers/video/omap2/dss/dsi.c:122:
+#define DSI_IRQ_ACK_TRIGGER	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: drivers/video/omap2/dss/dsi.c:123:
+#define DSI_IRQ_SYNC_LOST	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: drivers/video/omap2/dss/dsi.c:124:
+#define DSI_IRQ_LDO_POWER_GOOD	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#178: FILE: drivers/video/omap2/dss/dsi.c:125:
+#define DSI_IRQ_TA_TIMEOUT	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#185: FILE: drivers/video/omap2/dss/dsi.c:132:
+#define DSI_VC_IRQ_CS		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#186: FILE: drivers/video/omap2/dss/dsi.c:133:
+#define DSI_VC_IRQ_ECC_CORR	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#187: FILE: drivers/video/omap2/dss/dsi.c:134:
+#define DSI_VC_IRQ_PACKET_SENT	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#188: FILE: drivers/video/omap2/dss/dsi.c:135:
+#define DSI_VC_IRQ_FIFO_TX_OVF	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#189: FILE: drivers/video/omap2/dss/dsi.c:136:
+#define DSI_VC_IRQ_FIFO_RX_OVF	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#190: FILE: drivers/video/omap2/dss/dsi.c:137:
+#define DSI_VC_IRQ_BTA		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#191: FILE: drivers/video/omap2/dss/dsi.c:138:
+#define DSI_VC_IRQ_ECC_NO_CORR	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#192: FILE: drivers/video/omap2/dss/dsi.c:139:
+#define DSI_VC_IRQ_FIFO_TX_UDF	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#193: FILE: drivers/video/omap2/dss/dsi.c:140:
+#define DSI_VC_IRQ_PP_BUSY_CHANGE (1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#200: FILE: drivers/video/omap2/dss/dsi.c:147:
+#define DSI_CIO_IRQ_ERRSYNCESC1		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#201: FILE: drivers/video/omap2/dss/dsi.c:148:
+#define DSI_CIO_IRQ_ERRSYNCESC2		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#202: FILE: drivers/video/omap2/dss/dsi.c:149:
+#define DSI_CIO_IRQ_ERRSYNCESC3		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#203: FILE: drivers/video/omap2/dss/dsi.c:150:
+#define DSI_CIO_IRQ_ERRESC1		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#204: FILE: drivers/video/omap2/dss/dsi.c:151:
+#define DSI_CIO_IRQ_ERRESC2		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#205: FILE: drivers/video/omap2/dss/dsi.c:152:
+#define DSI_CIO_IRQ_ERRESC3		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#206: FILE: drivers/video/omap2/dss/dsi.c:153:
+#define DSI_CIO_IRQ_ERRCONTROL1		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#207: FILE: drivers/video/omap2/dss/dsi.c:154:
+#define DSI_CIO_IRQ_ERRCONTROL2		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#208: FILE: drivers/video/omap2/dss/dsi.c:155:
+#define DSI_CIO_IRQ_ERRCONTROL3		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#209: FILE: drivers/video/omap2/dss/dsi.c:156:
+#define DSI_CIO_IRQ_STATEULPS1		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#210: FILE: drivers/video/omap2/dss/dsi.c:157:
+#define DSI_CIO_IRQ_STATEULPS2		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#211: FILE: drivers/video/omap2/dss/dsi.c:158:
+#define DSI_CIO_IRQ_STATEULPS3		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#212: FILE: drivers/video/omap2/dss/dsi.c:159:
+#define DSI_CIO_IRQ_ERRCONTENTIONLP0_1	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#213: FILE: drivers/video/omap2/dss/dsi.c:160:
+#define DSI_CIO_IRQ_ERRCONTENTIONLP1_1	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#214: FILE: drivers/video/omap2/dss/dsi.c:161:
+#define DSI_CIO_IRQ_ERRCONTENTIONLP0_2	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#215: FILE: drivers/video/omap2/dss/dsi.c:162:
+#define DSI_CIO_IRQ_ERRCONTENTIONLP1_2	(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#216: FILE: drivers/video/omap2/dss/dsi.c:163:
+#define DSI_CIO_IRQ_ERRCONTENTIONLP0_3	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#217: FILE: drivers/video/omap2/dss/dsi.c:164:
+#define DSI_CIO_IRQ_ERRCONTENTIONLP1_3	(1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#218: FILE: drivers/video/omap2/dss/dsi.c:165:
+#define DSI_CIO_IRQ_ULPSACTIVENOT_ALL0	(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#219: FILE: drivers/video/omap2/dss/dsi.c:166:
+#define DSI_CIO_IRQ_ULPSACTIVENOT_ALL1	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#235: FILE: drivers/video/omap2/dss/dsi.c:182:
+#define REGN_MAX (1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#237: FILE: drivers/video/omap2/dss/dsi.c:184:
+#define REGM3_MAX (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#238: FILE: drivers/video/omap2/dss/dsi.c:185:
+#define REGM4_MAX (1 << 4)

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#277: FILE: drivers/video/omap2/dss/dsi.c:224:
+	struct mutex lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#278: FILE: drivers/video/omap2/dss/dsi.c:225:
+	struct mutex bus_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#280: FILE: drivers/video/omap2/dss/dsi.c:227:
+	unsigned pll_locked;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#287: FILE: drivers/video/omap2/dss/dsi.c:234:
+	spinlock_t update_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#303: FILE: drivers/video/omap2/dss/dsi.c:250:
+	spinlock_t	errors_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: drivers/video/omap2/dss/dsi.c:276:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/video/omap2/dss/dsi.c:298:
+static inline int wait_for_bit_change(const struct dsi_reg idx, int bitnum,
+		int value)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#442: FILE: drivers/video/omap2/dss/dsi.c:389:
+		printk(KERN_INFO "DSI(%s): %u fps, setup %u/%u/%u, "

WARNING:SPLIT_STRING: quoted string split across lines
#443: FILE: drivers/video/omap2/dss/dsi.c:390:
+		printk(KERN_INFO "DSI(%s): %u fps, setup %u/%u/%u, "
+				"trans %u/%u/%u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#461: FILE: drivers/video/omap2/dss/dsi.c:408:
+		printk(KERN_INFO "DSI(%s): %u us + %u us = %u us (%uHz), "

WARNING:SPLIT_STRING: quoted string split across lines
#462: FILE: drivers/video/omap2/dss/dsi.c:409:
+		printk(KERN_INFO "DSI(%s): %u us + %u us = %u us (%uHz), "
+				"%u bytes, %u kbytes/sec\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#467: FILE: drivers/video/omap2/dss/dsi.c:414:
+				1000*1000 / total_us,
 				    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#485: FILE: drivers/video/omap2/dss/dsi.c:432:
+	printk(KERN_DEBUG "DSI IRQ: 0x%x: ", status);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#487: FILE: drivers/video/omap2/dss/dsi.c:434:
+#define PIS(x) \
+	if (status & DSI_IRQ_##x) \
+		printk(#x " ");

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#487: FILE: drivers/video/omap2/dss/dsi.c:434:
+#define PIS(x) \
+	if (status & DSI_IRQ_##x) \
+		printk(#x " ");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#489: FILE: drivers/video/omap2/dss/dsi.c:436:
+		printk(#x " ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#511: FILE: drivers/video/omap2/dss/dsi.c:458:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#520: FILE: drivers/video/omap2/dss/dsi.c:467:
+	printk(KERN_DEBUG "DSI VC(%d) IRQ 0x%x: ", channel, status);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#522: FILE: drivers/video/omap2/dss/dsi.c:469:
+#define PIS(x) \
+	if (status & DSI_VC_IRQ_##x) \
+		printk(#x " ");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#522: FILE: drivers/video/omap2/dss/dsi.c:469:
+#define PIS(x) \
+	if (status & DSI_VC_IRQ_##x) \
+		printk(#x " ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: drivers/video/omap2/dss/dsi.c:471:
+		printk(#x " ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#537: FILE: drivers/video/omap2/dss/dsi.c:484:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#542: FILE: drivers/video/omap2/dss/dsi.c:489:
+	printk(KERN_DEBUG "DSI CIO IRQ 0x%x: ", status);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#544: FILE: drivers/video/omap2/dss/dsi.c:491:
+#define PIS(x) \
+	if (status & DSI_CIO_IRQ_##x) \
+		printk(#x " ");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#544: FILE: drivers/video/omap2/dss/dsi.c:491:
+#define PIS(x) \
+	if (status & DSI_CIO_IRQ_##x) \
+		printk(#x " ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#546: FILE: drivers/video/omap2/dss/dsi.c:493:
+		printk(#x " ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#569: FILE: drivers/video/omap2/dss/dsi.c:516:
+	printk("\n");

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#593: FILE: drivers/video/omap2/dss/dsi.c:540:
+		if ((irqstatus & (1<<i)) == 0)
 		                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: drivers/video/omap2/dss/dsi.c:550:
+			DSSERR("DSI VC(%d) error, vc irqstatus %x\n",
+				       i, vcstatus);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#624: FILE: drivers/video/omap2/dss/dsi.c:571:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#657: FILE: drivers/video/omap2/dss/dsi.c:604:
+	/* XXX zonda responds incorrectly, causing control error:
+	   Exit from LP-ESC mode to LP11 uses wrong transition states on the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#658: FILE: drivers/video/omap2/dss/dsi.c:605:
+	   data lines LP0 and LN0. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/video/omap2/dss/dsi.c:607:
+	dsi_write_reg(DSI_COMPLEXIO_IRQ_ENABLE,
+			-1 & (~DSI_CIO_IRQ_ERRCONTROL2));

WARNING:LINE_SPACING: Missing a blank line after declarations
#667: FILE: drivers/video/omap2/dss/dsi.c:614:
+	u32 e;
+	spin_lock_irqsave(&dsi.errors_lock, flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#727: FILE: drivers/video/omap2/dss/dsi.c:674:
+	 * I/O. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#730: FILE: drivers/video/omap2/dss/dsi.c:677:
+	printk(KERN_DEBUG "DSI resets: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#733: FILE: drivers/video/omap2/dss/dsi.c:680:
+	printk("PLL (%d) ", FLD_GET(l, 0, 0));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#736: FILE: drivers/video/omap2/dss/dsi.c:683:
+	printk("CIO (%d) ", FLD_GET(l, 29, 29));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#739: FILE: drivers/video/omap2/dss/dsi.c:686:
+	printk("PHY (%x, %d, %d, %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: drivers/video/omap2/dss/dsi.c:687:
+	printk("PHY (%x, %d, %d, %d)\n",
+			FLD_GET(l, 28, 26),

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_if_enable', this function's name, in a string
#751: FILE: drivers/video/omap2/dss/dsi.c:698:
+	DSSDBG("dsi_if_enable(%d)\n", enable);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#756: FILE: drivers/video/omap2/dss/dsi.c:703:
+	if (wait_for_bit_change(DSI_CTRL, 0, enable) != enable) {
+			DSSERR("Failed to set dsi_if_enable to %d\n", enable);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_if_enable', this function's name, in a string
#757: FILE: drivers/video/omap2/dss/dsi.c:704:
+			DSSERR("Failed to set dsi_if_enable to %d\n", enable);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#781: FILE: drivers/video/omap2/dss/dsi.c:728:
+	unsigned n;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#803: FILE: drivers/video/omap2/dss/dsi.c:750:
+	if (dsi_fclk > 30*1000*1000)
 	                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#803: FILE: drivers/video/omap2/dss/dsi.c:750:
+	if (dsi_fclk > 30*1000*1000)
 	                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#809: FILE: drivers/video/omap2/dss/dsi.c:756:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: drivers/video/omap2/dss/dsi.c:775:
+			DSSERR("Failed to set DSI PLL power mode to %d\n",
+					state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: drivers/video/omap2/dss/dsi.c:784:
+int dsi_pll_calc_pck(bool is_tft, unsigned long req_pck,
+		struct dsi_clock_info *cinfo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: drivers/video/omap2/dss/dsi.c:794:
+	if (req_pck == dsi.cache_req_pck &&
+			dsi.cache_cinfo.clkin == dss_clk_fck2) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: drivers/video/omap2/dss/dsi.c:803:
+	if (min_fck_per_pck &&
+		req_pck * min_fck_per_pck > DISPC_MAX_FCK) {

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: drivers/video/omap2/dss/dsi.c:805:
+		DSSERR("Requested pixel clock not possible with the current "
+				"OMAP2_DSS_MIN_FCK_PER_PCK setting. Turning "

WARNING:SPLIT_STRING: quoted string split across lines
#859: FILE: drivers/video/omap2/dss/dsi.c:806:
+				"OMAP2_DSS_MIN_FCK_PER_PCK setting. Turning "
+				"the constraint off.\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#889: FILE: drivers/video/omap2/dss/dsi.c:836:
+			a = 2 * cur.regm * (cur.clkin/1000);
 			                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#903: FILE: drivers/video/omap2/dss/dsi.c:850:
+				 * requested */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#911: FILE: drivers/video/omap2/dss/dsi.c:858:
+				if (min_fck_per_pck &&
+					cur.dsi1_pll_fclk <

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: drivers/video/omap2/dss/dsi.c:865:
+				find_lck_pck_divs(is_tft, req_pck,
+						cur.dsi1_pll_fclk,

WARNING:SPLIT_STRING: quoted string split across lines
#940: FILE: drivers/video/omap2/dss/dsi.c:887:
+					"Turning FCK/PCK constraint off and"
+					"trying again.\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#940: FILE: drivers/video/omap2/dss/dsi.c:887:
+					"Turning FCK/PCK constraint off and"
+					"trying again.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#969: FILE: drivers/video/omap2/dss/dsi.c:916:
+static int dsi_pll_calc_ddrfreq(unsigned long clk_freq,
+		struct dsi_clock_info *cinfo)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_pll_calc_ddrfreq', this function's name, in a string
#976: FILE: drivers/video/omap2/dss/dsi.c:923:
+	DSSDBG("dsi_pll_calc_ddrfreq\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#981: FILE: drivers/video/omap2/dss/dsi.c:928:
+	if (clk_freq == dsi.cache_clk_freq &&
+			dsi.cache_cinfo.clkin == dss_clk_fck2) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1020: FILE: drivers/video/omap2/dss/dsi.c:967:
+			a = 2 * cur.regm * (cur.clkin/1000);
 			                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_pll_program', this function's name, in a string
#1069: FILE: drivers/video/omap2/dss/dsi.c:1016:
+	DSSDBG("dsi_pll_program\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/video/omap2/dss/dsi.c:1026:
+	DSSDBG("clkin (%s) rate %ld, highfreq %d\n",
+			cinfo->use_dss2_fck ? "dss2_fck" : "pclkfree",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1085: FILE: drivers/video/omap2/dss/dsi.c:1032:
+	DSSDBG("DSIPHY = 2 * %d / %d * %lu / %d = %lu\n",
+			cinfo->regm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1092: FILE: drivers/video/omap2/dss/dsi.c:1039:
+	DSSDBG("Data rate on 1 DSI lane %ld Mbps\n",
+			dsi.dsiphy / 1000 / 1000 / 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: drivers/video/omap2/dss/dsi.c:1044:
+	DSSDBG("regm3 = %d, dsi1_pll_fclk = %lu\n",
+			cinfo->regm3, cinfo->dsi1_pll_fclk);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1099: FILE: drivers/video/omap2/dss/dsi.c:1046:
+	DSSDBG("regm4 = %d, dsi2_pll_fclk = %lu\n",
+			cinfo->regm4, cinfo->dsi2_pll_fclk);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1173: FILE: drivers/video/omap2/dss/dsi.c:1120:
+	 * with two lanes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1198: FILE: drivers/video/omap2/dss/dsi.c:1145:
+	 * fill the whole display. No idea about this */

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1255: FILE: drivers/video/omap2/dss/dsi.c:1202:
+	seq_printf(s, "- dsi -\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/video/omap2/dss/dsi.c:1205:
+	seq_printf(s, "dsi fclk source = %s\n",
+			dss_get_dsi_clk_source() == 0 ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: drivers/video/omap2/dss/dsi.c:1209:
+	seq_printf(s, "dsi pll source = %s\n",
+			clksel == 0 ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1266: FILE: drivers/video/omap2/dss/dsi.c:1213:
+	seq_printf(s,	"DSIPHY\t\t%lu\nDDR_CLK\t\t%lu\n",
+			dsi.dsiphy, dsi.ddr_clk);

WARNING:SPLIT_STRING: quoted string split across lines
#1376: FILE: drivers/video/omap2/dss/dsi.c:1323:
+			DSSERR("failed to set complexio power state to "
+					"%d\n", state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1405: FILE: drivers/video/omap2/dss/dsi.c:1352:
+	/* The configuration of the DSI complex I/O (number of data lanes,
+	   position, differential order) should not be changed while

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1413: FILE: drivers/video/omap2/dss/dsi.c:1360:
+	   DSI complex I/O configuration is unknown. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1416: FILE: drivers/video/omap2/dss/dsi.c:1363:
+	/*
+	REG_FLD_MOD(DSI_CTRL, 1, 0, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1423: FILE: drivers/video/omap2/dss/dsi.c:1370:
+static inline unsigned ns2ddr(unsigned ns)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1423: FILE: drivers/video/omap2/dss/dsi.c:1370:
+static inline unsigned ns2ddr(unsigned ns)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1426: FILE: drivers/video/omap2/dss/dsi.c:1373:
+	return (ns * (dsi.ddr_clk/1000/1000) + 999) / 1000;
 	                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1426: FILE: drivers/video/omap2/dss/dsi.c:1373:
+	return (ns * (dsi.ddr_clk/1000/1000) + 999) / 1000;
 	                              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1429: FILE: drivers/video/omap2/dss/dsi.c:1376:
+static inline unsigned ddr2ns(unsigned ddr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1429: FILE: drivers/video/omap2/dss/dsi.c:1376:
+static inline unsigned ddr2ns(unsigned ddr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1470: FILE: drivers/video/omap2/dss/dsi.c:1417:
+	DSSDBG("ths_prepare %u (%uns), ths_prepare_ths_zero %u (%uns)\n",
+		ths_prepare, ddr2ns(ths_prepare),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: drivers/video/omap2/dss/dsi.c:1420:
+	DSSDBG("ths_trail %u (%uns), ths_exit %u (%uns)\n",
+			ths_trail, ddr2ns(ths_trail),

WARNING:SPLIT_STRING: quoted string split across lines
#1477: FILE: drivers/video/omap2/dss/dsi.c:1424:
+	DSSDBG("tlpx_half %u (%uns), tclk_trail %u (%uns), "
+			"tclk_zero %u (%uns)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1482: FILE: drivers/video/omap2/dss/dsi.c:1429:
+	DSSDBG("tclk_prepare %u (%uns)\n",
+			tclk_prepare, ddr2ns(tclk_prepare));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1504: FILE: drivers/video/omap2/dss/dsi.c:1451:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_complexio_init', this function's name, in a string
#1509: FILE: drivers/video/omap2/dss/dsi.c:1456:
+	DSSDBG("dsi_complexio_init\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1516: FILE: drivers/video/omap2/dss/dsi.c:1463:
+	 * I/O. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1547: FILE: drivers/video/omap2/dss/dsi.c:1494:
+	/*
+	   The configuration of the DSI complex I/O (number of data lanes,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1596: FILE: drivers/video/omap2/dss/dsi.c:1543:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1598: FILE: drivers/video/omap2/dss/dsi.c:1545:
+static void dsi_config_tx_fifo(enum fifo_size size1, enum fifo_size size2,
+		enum fifo_size size3, enum fifo_size size4)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1615: FILE: drivers/video/omap2/dss/dsi.c:1562:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1628: FILE: drivers/video/omap2/dss/dsi.c:1575:
+static void dsi_config_rx_fifo(enum fifo_size size1, enum fifo_size size2,
+		enum fifo_size size3, enum fifo_size size4)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1645: FILE: drivers/video/omap2/dss/dsi.c:1592:
+			BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#1679: FILE: drivers/video/omap2/dss/dsi.c:1626:
+	DSSDBG("vc %d: TX_FIFO_NOT_EMPTY %d, BTA_EN %d, VC_BUSY %d, "
+			"TX_FIFO_FULL %d, RX_FIFO_NOT_EMPTY %d, ",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_enable', this function's name, in a string
#1694: FILE: drivers/video/omap2/dss/dsi.c:1641:
+		DSSDBG("dsi_vc_enable channel %d, enable %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1695: FILE: drivers/video/omap2/dss/dsi.c:1642:
+		DSSDBG("dsi_vc_enable channel %d, enable %d\n",
+				channel, enable);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1701: FILE: drivers/video/omap2/dss/dsi.c:1648:
+	if (wait_for_bit_change(DSI_VC_CTRL(channel), 0, enable) != enable) {
+			DSSERR("Failed to set dsi_vc_enable to %d\n", enable);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_enable', this function's name, in a string
#1702: FILE: drivers/video/omap2/dss/dsi.c:1649:
+			DSSERR("Failed to set dsi_vc_enable to %d\n", enable);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: drivers/video/omap2/dss/dsi.c:1666:
+		DSSERR("VC(%d) busy when trying to configure it!\n",
+				channel);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1775: FILE: drivers/video/omap2/dss/dsi.c:1722:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_enable_hs', this function's name, in a string
#1778: FILE: drivers/video/omap2/dss/dsi.c:1725:
+	DSSDBG("dsi_vc_enable_hs(%d, %d)\n", channel, enable);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1795: FILE: drivers/video/omap2/dss/dsi.c:1742:
+		u32 val;
+		val = dsi_read_reg(DSI_VC_SHORT_PACKET_HEADER(channel));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1797: FILE: drivers/video/omap2/dss/dsi.c:1744:
+		DSSDBG("\t\tb1 %#02x b2 %#02x b3 %#02x b4 %#02x\n",
+				(val >> 0) & 0xff,

WARNING:TYPO_SPELLING: 'tHS' may be misspelled - perhaps 'the'?
#1818: FILE: drivers/video/omap2/dss/dsi.c:1765:
+		DSSERR("\t\tHS Receive Timeout Error\n");
 		           ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1847: FILE: drivers/video/omap2/dss/dsi.c:1794:
+		u8 dt;
+		val = dsi_read_reg(DSI_VC_SHORT_PACKET_HEADER(channel));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1852: FILE: drivers/video/omap2/dss/dsi.c:1799:
+			u16 err = FLD_GET(val, 23, 8);
+			dsi_show_rx_ack_with_err(err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1855: FILE: drivers/video/omap2/dss/dsi.c:1802:
+			DSSDBG("\tDCS short response, 1 byte: %#x\n",
+					FLD_GET(val, 23, 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1858: FILE: drivers/video/omap2/dss/dsi.c:1805:
+			DSSDBG("\tDCS short response, 2 byte: %#x\n",
+					FLD_GET(val, 23, 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1861: FILE: drivers/video/omap2/dss/dsi.c:1808:
+			DSSDBG("\tDCS long response, len %d\n",
+					FLD_GET(val, 23, 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1873: FILE: drivers/video/omap2/dss/dsi.c:1820:
+	if (dsi.update_mode != OMAP_DSS_UPDATE_AUTO &&
+			(dsi.debug_write || dsi.debug_read))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_send_bta', this function's name, in a string
#1874: FILE: drivers/video/omap2/dss/dsi.c:1821:
+		DSSDBG("dsi_vc_send_bta %d\n", channel);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1902: FILE: drivers/video/omap2/dss/dsi.c:1849:
+	if (wait_for_completion_timeout(&dsi.bta_completion,
+				msecs_to_jiffies(500)) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1922: FILE: drivers/video/omap2/dss/dsi.c:1869:
+static inline void dsi_vc_write_long_header(int channel, u8 data_type,
+		u16 len, u8 ecc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1939: FILE: drivers/video/omap2/dss/dsi.c:1886:
+static inline void dsi_vc_write_long_payload(int channel,
+		u8 b1, u8 b2, u8 b3, u8 b4)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1946: FILE: drivers/video/omap2/dss/dsi.c:1893:
+/*	DSSDBG("\twriting %02x, %02x, %02x, %02x (%#010x)\n",
+			b1, b2, b3, b4, val); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1946: FILE: drivers/video/omap2/dss/dsi.c:1893:
+			b1, b2, b3, b4, val); */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1952: FILE: drivers/video/omap2/dss/dsi.c:1899:
+static int dsi_vc_send_long(int channel, u8 data_type, u8 *data, u16 len,
+		u8 ecc)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_send_long', this function's name, in a string
#1961: FILE: drivers/video/omap2/dss/dsi.c:1908:
+		DSSDBG("dsi_vc_send_long, %d bytes\n", len);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_send_short', this function's name, in a string
#2025: FILE: drivers/video/omap2/dss/dsi.c:1972:
+		DSSDBG("dsi_vc_send_short(ch%d, dt %#x, b1 %#x, b2 %#x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2026: FILE: drivers/video/omap2/dss/dsi.c:1973:
+		DSSDBG("dsi_vc_send_short(ch%d, dt %#x, b1 %#x, b2 %#x)\n",
+				channel,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2048: FILE: drivers/video/omap2/dss/dsi.c:1995:
+	u8 nullpkg[] = {0, 0, 0, 0};
+	return dsi_vc_send_long(0, DSI_DT_NULL_PACKET, nullpkg, 4, 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2056: FILE: drivers/video/omap2/dss/dsi.c:2003:
+	BUG_ON(len == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2060: FILE: drivers/video/omap2/dss/dsi.c:2007:
+		r = dsi_vc_send_short(channel, DSI_DT_DCS_SHORT_WRITE_0,
+				data[0], 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2063: FILE: drivers/video/omap2/dss/dsi.c:2010:
+		r = dsi_vc_send_short(channel, DSI_DT_DCS_SHORT_WRITE_1,
+				data[0] | (data[1] << 8), 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2067: FILE: drivers/video/omap2/dss/dsi.c:2014:
+		r = dsi_vc_send_long(channel, DSI_DT_DCS_LONG_WRITE,
+				data, len, 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_vc_dcs_read', this function's name, in a string
#2095: FILE: drivers/video/omap2/dss/dsi.c:2042:
+		DSSDBG("dsi_vc_dcs_read(ch%d, dcs_cmd %u)\n", channel, dcs_cmd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2117: FILE: drivers/video/omap2/dss/dsi.c:2064:
+		u16 err = FLD_GET(val, 23, 8);
+		dsi_show_rx_ack_with_err(err);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2122: FILE: drivers/video/omap2/dss/dsi.c:2069:
+		u8 data = FLD_GET(val, 15, 8);
+		if (dsi.debug_read)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2133: FILE: drivers/video/omap2/dss/dsi.c:2080:
+		u16 data = FLD_GET(val, 23, 8);
+		if (dsi.debug_read)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2146: FILE: drivers/video/omap2/dss/dsi.c:2093:
+		int len = FLD_GET(val, 23, 8);
+		if (dsi.debug_read)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2155: FILE: drivers/video/omap2/dss/dsi.c:2102:
+			int b;
+			val = dsi_read_reg(DSI_VC_SHORT_PACKET_HEADER(channel));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2158: FILE: drivers/video/omap2/dss/dsi.c:2105:
+				DSSDBG("\t\t%02x %02x %02x %02x\n",
+						(val >> 0) & 0xff,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2180: FILE: drivers/video/omap2/dss/dsi.c:2127:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2188: FILE: drivers/video/omap2/dss/dsi.c:2135:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2213: FILE: drivers/video/omap2/dss/dsi.c:2160:
+	DSSDBG("LP_RX_TO %ld ns (%#x ticks)\n",
+			(ticks * (x16 ? 16 : 1) * (x4 ? 4 : 1) * 1000) /

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2244: FILE: drivers/video/omap2/dss/dsi.c:2191:
+	DSSDBG("TA_TO %ld ns (%#x ticks)\n",
+			(ticks * (x16 ? 16 : 1) * (x8 ? 8 : 1) * 1000) /

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2275: FILE: drivers/video/omap2/dss/dsi.c:2222:
+	DSSDBG("STOP_STATE_COUNTER %ld ns (%#x ticks)\n",
+			(ticks * (x16 ? 16 : 1) * (x4 ? 4 : 1) * 1000) /

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2306: FILE: drivers/video/omap2/dss/dsi.c:2253:
+	DSSDBG("HS_TX_TO %ld ns (%#x ticks)\n",
+			(ticks * (x16 ? 16 : 1) * (x4 ? 4 : 1) * 1000) /

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2312: FILE: drivers/video/omap2/dss/dsi.c:2259:
+}
+static int dsi_proto_config(struct omap_dss_device *dssdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2319: FILE: drivers/video/omap2/dss/dsi.c:2266:
+	dsi_config_tx_fifo(DSI_FIFO_SIZE_128,
+			DSI_FIFO_SIZE_0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2324: FILE: drivers/video/omap2/dss/dsi.c:2271:
+	dsi_config_rx_fifo(DSI_FIFO_SIZE_128,
+			DSI_FIFO_SIZE_0,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2350: FILE: drivers/video/omap2/dss/dsi.c:2297:
+		BUG();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2383: FILE: drivers/video/omap2/dss/dsi.c:2330:
+	unsigned tlpx, tclk_zero, tclk_prepare, tclk_trail;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2384: FILE: drivers/video/omap2/dss/dsi.c:2331:
+	unsigned tclk_pre, tclk_post;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2385: FILE: drivers/video/omap2/dss/dsi.c:2332:
+	unsigned ths_prepare, ths_prepare_ths_zero, ths_zero;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2386: FILE: drivers/video/omap2/dss/dsi.c:2333:
+	unsigned ths_trail, ths_exit;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2387: FILE: drivers/video/omap2/dss/dsi.c:2334:
+	unsigned ddr_clk_pre, ddr_clk_post;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2388: FILE: drivers/video/omap2/dss/dsi.c:2335:
+	unsigned enter_hs_mode_lat, exit_hs_mode_lat;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2389: FILE: drivers/video/omap2/dss/dsi.c:2336:
+	unsigned ths_eot;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2414: FILE: drivers/video/omap2/dss/dsi.c:2361:
+	if (dssdev->phy.dsi.data1_lane != 0 &&
+			dssdev->phy.dsi.data2_lane != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2420: FILE: drivers/video/omap2/dss/dsi.c:2367:
+	ddr_clk_pre = DIV_ROUND_UP(tclk_pre + tlpx + tclk_zero + tclk_prepare,
+			4);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2423: FILE: drivers/video/omap2/dss/dsi.c:2370:
+	BUG_ON(ddr_clk_pre == 0 || ddr_clk_pre > 255);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2424: FILE: drivers/video/omap2/dss/dsi.c:2371:
+	BUG_ON(ddr_clk_post == 0 || ddr_clk_post > 255);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2432: FILE: drivers/video/omap2/dss/dsi.c:2379:
+	DSSDBG("ddr_clk_pre %u, ddr_clk_post %u\n",
+			ddr_clk_pre,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2446: FILE: drivers/video/omap2/dss/dsi.c:2393:
+	DSSDBG("enter_hs_mode_lat %u, exit_hs_mode_lat %u\n",
+			enter_hs_mode_lat, exit_hs_mode_lat);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2449: FILE: drivers/video/omap2/dss/dsi.c:2396:
+
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2450: FILE: drivers/video/omap2/dss/dsi.c:2397:
+#define DSI_DECL_VARS \
+	int __dsi_cb = 0; u32 __dsi_cv = 0;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2453: FILE: drivers/video/omap2/dss/dsi.c:2400:
+#define DSI_FLUSH(ch) \
+	if (__dsi_cb > 0) { \
+		/*DSSDBG("sending long packet %#010x\n", __dsi_cv);*/ \
+		dsi_write_reg(DSI_VC_LONG_PACKET_PAYLOAD(ch), __dsi_cv); \
+		__dsi_cb = __dsi_cv = 0; \
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2457: FILE: drivers/video/omap2/dss/dsi.c:2404:
+		__dsi_cb = __dsi_cv = 0; \

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2469: FILE: drivers/video/omap2/dss/dsi.c:2416:
+static int dsi_update_screen_l4(struct omap_dss_device *dssdev,
+			int x, int y, int w, int h)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_update_screen_l4', this function's name, in a string
#2488: FILE: drivers/video/omap2/dss/dsi.c:2435:
+	DSSDBG("dsi_update_screen_l4 (%d,%d %dx%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2489: FILE: drivers/video/omap2/dss/dsi.c:2436:
+	DSSDBG("dsi_update_screen_l4 (%d,%d %dx%d)\n",
+			x, y, w, h);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2507: FILE: drivers/video/omap2/dss/dsi.c:2454:
+	 * in fifo */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2513: FILE: drivers/video/omap2/dss/dsi.c:2460:
+	/* we seem to get better perf if we divide the tx fifo to half,
+	   and while the other half is being sent, we fill the other half

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2514: FILE: drivers/video/omap2/dss/dsi.c:2461:
+	   max_dsi_packet_size /= 2; */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2533: FILE: drivers/video/omap2/dss/dsi.c:2480:
+		int pixels;
+		DSI_DECL_VARS;

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2536: FILE: drivers/video/omap2/dss/dsi.c:2483:
+#if 1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2544: FILE: drivers/video/omap2/dss/dsi.c:2491:
+				DSSERR("fifo stalls overflow, pixels left %d\n",
+						pixels_left);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2551: FILE: drivers/video/omap2/dss/dsi.c:2498:
+		while ((REG_GET(DSI_TX_FIFO_VC_EMPTINESS, 7, 0)+1)*4 <
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2551: FILE: drivers/video/omap2/dss/dsi.c:2498:
+		while ((REG_GET(DSI_TX_FIFO_VC_EMPTINESS, 7, 0)+1)*4 <
 		                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2556: FILE: drivers/video/omap2/dss/dsi.c:2503:
+				DSSERR("fifo stalls overflow, pixels left %d\n",
+					       pixels_left);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2562: FILE: drivers/video/omap2/dss/dsi.c:2509:
+		while ((REG_GET(DSI_TX_FIFO_VC_EMPTINESS, 7, 0)+1)*4 == 0) {
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2562: FILE: drivers/video/omap2/dss/dsi.c:2509:
+		while ((REG_GET(DSI_TX_FIFO_VC_EMPTINESS, 7, 0)+1)*4 == 0) {
 		                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2566: FILE: drivers/video/omap2/dss/dsi.c:2513:
+				DSSERR("fifo stalls overflow, pixels left %d\n",
+					       pixels_left);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2577: FILE: drivers/video/omap2/dss/dsi.c:2524:
+		dsi_vc_write_long_header(0, DSI_DT_DCS_LONG_WRITE,
+				1 + pixels * bytespp, 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2589: FILE: drivers/video/omap2/dss/dsi.c:2536:
+			if (current_x == x+w) {
 			                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2602: FILE: drivers/video/omap2/dss/dsi.c:2549:
+static void dsi_update_screen_dispc(struct omap_dss_device *dssdev,
+		u16 x, u16 y, u16 w, u16 h)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_update_screen_dispc', this function's name, in a string
#2616: FILE: drivers/video/omap2/dss/dsi.c:2563:
+		DSSDBG("dsi_update_screen_dispc(%d,%d %dx%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2617: FILE: drivers/video/omap2/dss/dsi.c:2564:
+		DSSDBG("dsi_update_screen_dispc(%d,%d %dx%d)\n",
+				x, y, w, h);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2623: FILE: drivers/video/omap2/dss/dsi.c:2570:
+	 * 1023 * 3 should work, but causes strange color effects. */

WARNING:MINMAX: min() should probably be min_t(u16, w, 1020)
#2624: FILE: drivers/video/omap2/dss/dsi.c:2571:
+	packet_payload = min(w, (u16)1020) * bytespp;

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2657: FILE: drivers/video/omap2/dss/dsi.c:2604:
+		/* disable LP_RX_TO, so that we can receive TE.  Time to wait
 		                                            ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2658: FILE: drivers/video/omap2/dss/dsi.c:2605:
+		 * for TE is longer than the timer allows */
 		       ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2658: FILE: drivers/video/omap2/dss/dsi.c:2605:
+		 * for TE is longer than the timer allows */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2680: FILE: drivers/video/omap2/dss/dsi.c:2627:
+static void dsi_set_update_region(struct omap_dss_device *dssdev,
+		u16 x, u16 y, u16 w, u16 h)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2700: FILE: drivers/video/omap2/dss/dsi.c:2647:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2711: FILE: drivers/video/omap2/dss/dsi.c:2658:
+	 * manual mode has left them in bad shape after config partia planes */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2714: FILE: drivers/video/omap2/dss/dsi.c:2661:
+		struct omap_overlay *ovl;
+		ovl = omap_dss_get_overlay(i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2732: FILE: drivers/video/omap2/dss/dsi.c:2679:
+	int r;
+	r = dssdev->driver->enable_te(dssdev, enable);

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2733: FILE: drivers/video/omap2/dss/dsi.c:2680:
+	/* XXX for some reason, DSI TE breaks if we don't wait here.
 	                            ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2734: FILE: drivers/video/omap2/dss/dsi.c:2681:
+	 * Panel bug? Needs more studying */

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2751: FILE: drivers/video/omap2/dss/dsi.c:2698:
+		/* enable LP_RX_TO again after the TE */
 		                                   ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2755: FILE: drivers/video/omap2/dss/dsi.c:2702:
+	/* Send BTA after the frame. We need this for the TE to work, as TE
 	                                                  ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2755: FILE: drivers/video/omap2/dss/dsi.c:2702:
+	/* Send BTA after the frame. We need this for the TE to work, as TE
 	                                                                 ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2757: FILE: drivers/video/omap2/dss/dsi.c:2704:
+	 * to BTA after the pixel packets so that next BTA will cause TE
 	                                                              ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#2760: FILE: drivers/video/omap2/dss/dsi.c:2707:
+	 * This is not needed when TE is not in use, but we do it anyway to
 	                           ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2763: FILE: drivers/video/omap2/dss/dsi.c:2710:
+	 * transfer. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2783: FILE: drivers/video/omap2/dss/dsi.c:2730:
+		wait_event_interruptible(dsi.waitqueue,
+				dsi.update_mode == OMAP_DSS_UPDATE_AUTO ||

CHECK:BOOL_COMPARISON: Using comparison to true is error prone
#2785: FILE: drivers/video/omap2/dss/dsi.c:2732:
+				 dsi.update_region.dirty == true) ||

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2794: FILE: drivers/video/omap2/dss/dsi.c:2741:
+		if (dsi.update_mode == OMAP_DSS_UPDATE_DISABLED ||
+				kthread_should_stop()) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2815: FILE: drivers/video/omap2/dss/dsi.c:2762:
+		if (device->manager->caps & OMAP_DSS_OVL_MGR_CAP_DISPC) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2818: FILE: drivers/video/omap2/dss/dsi.c:2765:
+				dss_setup_partial_planes(device,
+						&x, &y, &w, &h);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2819: FILE: drivers/video/omap2/dss/dsi.c:2766:
+#if 1

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2823: FILE: drivers/video/omap2/dss/dsi.c:2770:
+				 * are always odd, so "fix" it here for now */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2826: FILE: drivers/video/omap2/dss/dsi.c:2773:
+					u16 dw, dh;
+					device->get_resolution(device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2833: FILE: drivers/video/omap2/dss/dsi.c:2780:
+					dss_setup_partial_planes(device,
+							&x, &y, &w, &h);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2845: FILE: drivers/video/omap2/dss/dsi.c:2792:
+			 * panel. That should speed up manual update a bit */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2864: FILE: drivers/video/omap2/dss/dsi.c:2811:
+			timeout = wait_event_timeout(dsi.waitqueue,
+					dsi.framedone_received == true,

CHECK:BOOL_COMPARISON: Using comparison to true is error prone
#2864: FILE: drivers/video/omap2/dss/dsi.c:2811:
+					dsi.framedone_received == true,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2870: FILE: drivers/video/omap2/dss/dsi.c:2817:
+				DSSERR("failed update %d,%d %dx%d\n",
+						x, y, w, h);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2890: FILE: drivers/video/omap2/dss/dsi.c:2837:
+		 * there a better way for this? */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2900: FILE: drivers/video/omap2/dss/dsi.c:2847:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2909: FILE: drivers/video/omap2/dss/dsi.c:2856:
+	r = omap_dispc_register_isr(dsi_framedone_irq_callback, NULL,
+			DISPC_IRQ_FRAMEDONE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2941: FILE: drivers/video/omap2/dss/dsi.c:2888:
+	omap_dispc_unregister_isr(dsi_framedone_irq_callback, NULL,
+			DISPC_IRQ_FRAMEDONE);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_enable', this function's name, in a string
#3035: FILE: drivers/video/omap2/dss/dsi.c:2982:
+	DSSDBG("dsi_display_enable\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_enable', this function's name, in a string
#3095: FILE: drivers/video/omap2/dss/dsi.c:3042:
+	DSSDBG("dsi_display_enable FAILED\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_disable', this function's name, in a string
#3101: FILE: drivers/video/omap2/dss/dsi.c:3048:
+	DSSDBG("dsi_display_disable\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3107: FILE: drivers/video/omap2/dss/dsi.c:3054:
+	if (dssdev->state == OMAP_DSS_DISPLAY_DISABLED ||
+			dssdev->state == OMAP_DSS_DISPLAY_SUSPENDED)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_suspend', this function's name, in a string
#3128: FILE: drivers/video/omap2/dss/dsi.c:3075:
+	DSSDBG("dsi_display_suspend\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3134: FILE: drivers/video/omap2/dss/dsi.c:3081:
+	if (dssdev->state == OMAP_DSS_DISPLAY_DISABLED ||
+			dssdev->state == OMAP_DSS_DISPLAY_SUSPENDED)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_resume', this function's name, in a string
#3157: FILE: drivers/video/omap2/dss/dsi.c:3104:
+	DSSDBG("dsi_display_resume\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_resume', this function's name, in a string
#3208: FILE: drivers/video/omap2/dss/dsi.c:3155:
+	DSSDBG("dsi_display_resume FAILED\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3213: FILE: drivers/video/omap2/dss/dsi.c:3160:
+static int dsi_display_update(struct omap_dss_device *dssdev,
+			u16 x, u16 y, u16 w, u16 h)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_update', this function's name, in a string
#3218: FILE: drivers/video/omap2/dss/dsi.c:3165:
+	DSSDBG("dsi_display_update(%d,%d %dx%d)\n", x, y, w, h);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_sync', this function's name, in a string
#3256: FILE: drivers/video/omap2/dss/dsi.c:3203:
+	DSSDBG("dsi_display_sync()\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3262: FILE: drivers/video/omap2/dss/dsi.c:3209:
+	if (dsi.update_mode == OMAP_DSS_UPDATE_MANUAL &&
+			dsi.update_region.dirty) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsi_display_sync', this function's name, in a string
#3275: FILE: drivers/video/omap2/dss/dsi.c:3222:
+	DSSDBG("dsi_display_sync() done\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3280: FILE: drivers/video/omap2/dss/dsi.c:3227:
+static int dsi_display_set_update_mode(struct omap_dss_device *dssdev,
+		enum omap_dss_update_mode mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3292: FILE: drivers/video/omap2/dss/dsi.c:3239:
+		if (dssdev->state == OMAP_DSS_DISPLAY_ACTIVE &&
+				mode == OMAP_DSS_UPDATE_AUTO)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3302: FILE: drivers/video/omap2/dss/dsi.c:3249:
+static enum omap_dss_update_mode dsi_display_get_update_mode(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3308: FILE: drivers/video/omap2/dss/dsi.c:3255:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3339: FILE: drivers/video/omap2/dss/dsi.c:3286:
+{
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3350: FILE: drivers/video/omap2/dss/dsi.c:3297:
+		 * update region */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3427: FILE: drivers/video/omap2/dss/dsi.c:3374:
+static int dsi_display_memory_read(struct omap_dss_device *dssdev,
+		void *buf, size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3451: FILE: drivers/video/omap2/dss/dsi.c:3398:
+void dsi_get_overlay_fifo_thresholds(enum omap_plane plane,
+		u32 fifo_size, enum omap_burst_size *burst_size,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3454: FILE: drivers/video/omap2/dss/dsi.c:3401:
+	unsigned burst_size_bytes;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3499: FILE: drivers/video/omap2/dss/dsi.c:3446:
+		.sched_priority = MAX_USER_RT_PRIO-1
 		                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3542: FILE: drivers/video/omap2/dss/dsi.c:3489:
+	printk(KERN_INFO "OMAP DSI rev %d.%d\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 129 warnings, 170 checks, 3509 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078660.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
