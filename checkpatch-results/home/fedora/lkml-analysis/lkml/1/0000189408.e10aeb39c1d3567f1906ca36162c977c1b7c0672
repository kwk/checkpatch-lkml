WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
The goal of this patch is to normalize and make more easy the implementation

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#52: 
datas during the iteration to keep consistent values.
^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#147: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#152: FILE: kernel/trace/trace_stat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: kernel/trace/trace_stat.c:11:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: kernel/trace/trace_stat.c:17:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: kernel/trace/trace_stat.c:39:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: kernel/trace/trace_stat.c:93:
+	if (!current_tracer.stat_start || !current_tracer.stat_next ||
+					!current_tracer.stat_show)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_entry)...) over kmalloc(sizeof(struct trace_stat_list)...)
#254: FILE: kernel/trace/trace_stat.c:103:
+	new_entry = kmalloc(sizeof(struct trace_stat_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_entry)...) over kmalloc(sizeof(struct trace_stat_list)...)
#271: FILE: kernel/trace/trace_stat.c:120:
+		new_entry = kmalloc(sizeof(struct trace_stat_list), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: kernel/trace/trace_stat.c:136:
+			if (current_tracer.stat_cmp(new_entry->stat,
+						iter_entry->stat) > 0) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#288: FILE: kernel/trace/trace_stat.c:137:
+						iter_entry->stat) > 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: kernel/trace/trace_stat.c:139:
+				list_add_tail(&new_entry->list,
+						&iter_entry->list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: kernel/trace/trace_stat.c:162:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: kernel/trace/trace_stat.c:192:
+	struct trace_stat_list *l = list_entry(v, struct trace_stat_list, list);
+	return current_tracer.stat_show(s, l->stat);

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: kernel/trace/trace_stat.c:209:
+		struct seq_file *m = file->private_data;
+		m->private = &stat_list;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: kernel/trace/trace_stat.c:216:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: kernel/trace/trace_stat.c:244:
+	entry = debugfs_create_file("trace_stat", 0444, d_tracing,
+					NULL,

WARNING:SPLIT_STRING: quoted string split across lines
#399: FILE: kernel/trace/trace_stat.c:248:
+		pr_warning("Could not create debugfs "
+			   "'trace_stat' entry\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 12 checks, 302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
