WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: fs/unionfs/dentry.c:214:
+			printk("unionfs: new lower inode mtime "

WARNING:SPLIT_STRING: quoted string split across lines
#116: FILE: fs/unionfs/dentry.c:215:
+			printk("unionfs: new lower inode mtime "
+			       "(bindex=%d, name=%s)\n", bindex,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: fs/unionfs/dentry.c:221:
+			printk("unionfs: new lower inode ctime "

WARNING:SPLIT_STRING: quoted string split across lines
#123: FILE: fs/unionfs/dentry.c:222:
+			printk("unionfs: new lower inode ctime "
+			       "(bindex=%d, name=%s)\n", bindex,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#172: FILE: fs/unionfs/dentry.c:270:
+int __unionfs_d_revalidate_chain(struct dentry *dentry, struct nameidata *nd,
                                                                           ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#188: FILE: fs/unionfs/dentry.c:293:
+		if (IS_ROOT(dtmp))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#190: FILE: fs/unionfs/dentry.c:295:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#220: FILE: fs/unionfs/dentry.c:369:
+		if (IS_ROOT(dentry))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#222: FILE: fs/unionfs/dentry.c:371:
+		else {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#241: FILE: fs/unionfs/dentry.c:417:
+	err = __unionfs_d_revalidate_chain(dentry, nd, 0);
 	                                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#254: FILE: fs/unionfs/inode.c:37:
+	valid = __unionfs_d_revalidate_chain(dentry->d_parent, nd, 0);
 	                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#261: FILE: fs/unionfs/inode.c:43:
+	valid = __unionfs_d_revalidate_chain(dentry, nd, 0);
 	                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#322: FILE: fs/unionfs/inode.c:895:
+	if (!__unionfs_d_revalidate_chain(dentry, nd, 0))
 	                                          ^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#323: FILE: fs/unionfs/inode.c:896:
+		printk("unionfs: put_link failed to revalidate dentry\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#379: FILE: fs/unionfs/union.h:320:
+					struct nameidata *nd, int willwrite);
 					                  ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#380: FILE: fs/unionfs/union.h:321:
+extern int is_newer_lower(const struct dentry *dentry);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384300.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 5 checks, 355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384300.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
