WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#33: FILE: drivers/mtd/ubi/vtbl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#48: FILE: drivers/mtd/ubi/vtbl.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#49: FILE: drivers/mtd/ubi/vtbl.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#120: FILE: drivers/mtd/ubi/vtbl.c:88:
+	uint32_t crc;

CHECK:BRACES: braces {} should be used on all arms of this statement
#124: FILE: drivers/mtd/ubi/vtbl.c:92:
+	if (!vtbl_rec)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#126: FILE: drivers/mtd/ubi/vtbl.c:94:
+	else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#170: FILE: drivers/mtd/ubi/vtbl.c:138:
+	uint32_t crc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/mtd/ubi/vtbl.c:155:
+			ubi_err("bad CRC at record %u: %#08x, not %#08x",
+				 i, crc, ubi32_to_cpu(vtbl[i].crc));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: drivers/mtd/ubi/vtbl.c:162:
+			if (memcmp(&vtbl[i], &empty_vtbl_record,
+						UBI_VTBL_RECORD_SIZE)) {

WARNING:SPLIT_STRING: quoted string split across lines
#266: FILE: drivers/mtd/ubi/vtbl.c:234:
+				ubi_err("volumes %d and %d have the same name"
+					" \"%s\"", i, n, vtbl[i].name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#325: FILE: drivers/mtd/ubi/vtbl.c:293:
+	vid_hdr->data_size = vid_hdr->used_ebs =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#329: FILE: drivers/mtd/ubi/vtbl.c:297:
+	vid_hdr->leb_ver = cpu_to_ubi32(old_seb ? old_seb->leb_ver + 1: 0);
 	                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#364: FILE: drivers/mtd/ubi/vtbl.c:332:
+
+}

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#452: FILE: drivers/mtd/ubi/vtbl.c:420:
+		return leb[0];
+	} else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vol)...) over kzalloc(sizeof(struct ubi_volume)...)
#538: FILE: drivers/mtd/ubi/vtbl.c:506:
+		vol = kzalloc(sizeof(struct ubi_volume), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vol)...) over kzalloc(sizeof(struct ubi_volume)...)
#601: FILE: drivers/mtd/ubi/vtbl.c:569:
+	vol = kzalloc(sizeof(struct ubi_volume), GFP_KERNEL);

ERROR:SPACING: spaces required around that '&&' (ctx:VxE)
#694: FILE: drivers/mtd/ubi/vtbl.c:662:
+	if (si->highest_vol_id >= ubi->vtbl_slots + UBI_INT_VOL_COUNT&&
 	                                                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#701: FILE: drivers/mtd/ubi/vtbl.c:669:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#821: FILE: drivers/mtd/ubi/vtbl.c:789:
+		if (ubi->volumes[i]) {
+			kfree(ubi->volumes[i]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#837: FILE: drivers/mtd/ubi/vtbl.c:805:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452706.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 11 checks, 809 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452706.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
