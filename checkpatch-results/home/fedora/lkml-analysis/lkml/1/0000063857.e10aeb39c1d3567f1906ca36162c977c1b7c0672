WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#54: FILE: Makefile:4:
+EXTRAVERSION = .2
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: arch/alpha/kernel/pci_impl.h:201:
+extern int iommu_bind(struct pci_iommu_arena *, long, long, struct page **);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_iommu_arena *' should also have an identifier name
#93: FILE: arch/alpha/kernel/pci_impl.h:201:
+extern int iommu_bind(struct pci_iommu_arena *, long, long, struct page **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#93: FILE: arch/alpha/kernel/pci_impl.h:201:
+extern int iommu_bind(struct pci_iommu_arena *, long, long, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#93: FILE: arch/alpha/kernel/pci_impl.h:201:
+extern int iommu_bind(struct pci_iommu_arena *, long, long, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#93: FILE: arch/alpha/kernel/pci_impl.h:201:
+extern int iommu_bind(struct pci_iommu_arena *, long, long, struct page **);

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/powerpc/mm/pgtable.c:135:
+        * "dcbst" from flush_dcache_icache) fault as write$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/powerpc/mm/pgtable.c:136:
+        * operation if there is an unpopulated TLB entry$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/powerpc/mm/pgtable.c:137:
+        * for the address in question. To workaround that,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/powerpc/mm/pgtable.c:138:
+        * we invalidate the TLB here, thus avoiding dcbst$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/powerpc/mm/pgtable.c:139:
+        * misbehaviour.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/powerpc/mm/pgtable.c:140:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/powerpc/mm/pgtable.c:141:
+       _tlbil_va(addr, 0 /* 8xx doesn't care about PID */);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: arch/x86/kernel/cpu/cpufreq/powernow-k8.c:609:
+static void invalidate_entry(struct cpufreq_frequency_table *powernow_table,
+		unsigned int entry)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/elf.h> instead of <asm/elf.h>
#406: FILE: arch/x86/mm/mmap.c:32:
+#include <asm/elf.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: arch/x86/mm/mmap.c:37:
+	unsigned int max = 0;
+	if ((current->flags & PF_RANDOMIZE) &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: arch/x86/mm/mmap.c:38:
+	if ((current->flags & PF_RANDOMIZE) &&
+		!(current->personality & ADDR_NO_RANDOMIZE)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#427: FILE: arch/x86/mm/mmap.c:51:
+#define MIN_GAP (128*1024*1024UL + stack_maxrandom_size())
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#427: FILE: arch/x86/mm/mmap.c:51:
+#define MIN_GAP (128*1024*1024UL + stack_maxrandom_size())
                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#515: FILE: arch/x86/xen/enlighten.c:379:
+	unsigned pages = (size + PAGE_SIZE - 1) / PAGE_SIZE;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: arch/x86/xen/enlighten.c:388:
+	BUG_ON(size > 65536);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#525: FILE: arch/x86/xen/enlighten.c:389:
+	BUG_ON(va & ~PAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#537: FILE: arch/x86/xen/enlighten.c:401:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#543: FILE: arch/x86/xen/enlighten.c:407:
+		BUG();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#573: FILE: arch/x86/xen/enlighten.c:653:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#809: FILE: drivers/ata/pata_amd.c:311:
+	/* PIO4, MWDMA2, UDMA2 should always be supported regardless of
+	   cable detection result */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#809: FILE: drivers/ata/pata_amd.c:311:
+	   cable detection result */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: drivers/base/base.h:107:
+extern void bus_probe_device(struct device *dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#941: FILE: drivers/char/agp/intel-agp.c:713:
+			printk(KERN_ERR "Timed out waiting for cache flush.\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#985: FILE: drivers/char/tty_port.c:101:
+	if (port->ops->shutdown &&
[...]
+			port->ops->shutdown(port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: drivers/char/tty_port.c:102:
+	if (port->ops->shutdown &&
+		test_and_clear_bit(ASYNC_INITIALIZED, &port->flags))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#989: FILE: drivers/char/tty_port.c:105:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1019: FILE: drivers/char/tty_port.c:319:
+	if (test_bit(ASYNCB_INITIALIZED, &port->flags) &&
 			port->closing_wait != ASYNC_CLOSING_WAIT_NONE)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1027: FILE: drivers/char/tty_port.c:333:
+	/* Don't call port->drop for the last reference. Callers will want
+	   to drop the last active reference in ->shutdown() or the tty

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1028: FILE: drivers/char/tty_port.c:334:
+	   shutdown path */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1038: FILE: drivers/char/tty_port.c:367:
+							struct file *filp)
 							             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/char/tty_port.c:367:
+void tty_port_close(struct tty_port *port, struct tty_struct *tty,
+							struct file *filp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1040: FILE: drivers/char/tty_port.c:369:
+	if (tty_port_close_start(port, tty, filp) == 0)
 	                                    ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1147: FILE: drivers/gpu/drm/i915/i915_gem.c:2996:
+			DRM_ERROR("Relocation beyond target object bounds: "
+				  "obj %p target %d delta %d size %d.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#1149: FILE: drivers/gpu/drm/i915/i915_gem.c:2998:
+				  (int) reloc->delta, (int) target_obj->size);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1209: FILE: drivers/gpu/drm/i915/i915_reg.h:1736:
+#define   DISPPLANE_TRICKLE_FEED_DISABLE	(1<<14) /* IGDNG */
                                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1209: FILE: drivers/gpu/drm/i915/i915_reg.h:1736:
+#define   DISPPLANE_TRICKLE_FEED_DISABLE	(1<<14) /* IGDNG */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1227: FILE: drivers/gpu/drm/i915/i915_reg.h:1920:
+#define  DISP_TILE_SURFACE_SWIZZLING	(1<<13)
                                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1227: FILE: drivers/gpu/drm/i915/i915_reg.h:1920:
+#define  DISP_TILE_SURFACE_SWIZZLING	(1<<13)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1428: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1502:
+	struct drm_connector *analog_connector;
+	analog_connector = intel_find_analog_connector(dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edid"
#1451: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1528:
+	if (edid == NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#1504: FILE: drivers/gpu/drm/i915/intel_sdvo.c:1607:
+		(void) intel_ddc_get_modes(intel_output);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1530: FILE: drivers/gpu/drm/i915/intel_sdvo.c:2125:
+		sdvo_priv->analog_ddc_bus = intel_i2c_create(dev, GPIOA,
+						"SDVOB/VGA DDC BUS");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1534: FILE: drivers/gpu/drm/i915/intel_sdvo.c:2129:
+		sdvo_priv->analog_ddc_bus = intel_i2c_create(dev, GPIOA,
+						"SDVOC/VGA DDC BUS");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sdvo_priv->analog_ddc_bus"
#1543: FILE: drivers/gpu/drm/i915/intel_sdvo.c:2196:
+	if (sdvo_priv->analog_ddc_bus != NULL)

WARNING:SIZEOF_ADDRESS: sizeof(& should be avoided
#1625: FILE: drivers/media/video/em28xx/em28xx-cards.c:2180:
+	memset(&dev->info, 0, sizeof(&dev->info));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1627: FILE: drivers/media/video/em28xx/em28xx-cards.c:2182:
+	strlcpy(dev->info.type, "ir_video", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1710: FILE: drivers/media/video/saa7134/saa7134-input.c:708:
+	strlcpy(dev->info.type, "ir_video", I2C_NAME_SIZE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1876: FILE: drivers/mmc/core/mmc.c:184:
+		 * fail more gracefully. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1878: FILE: drivers/mmc/core/mmc.c:186:
+		if ((err != -EINVAL)
+		 && (err != -ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1878: FILE: drivers/mmc/core/mmc.c:186:
+		 && (err != -ENOSYS)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1879: FILE: drivers/mmc/core/mmc.c:187:
+		 && (err != -ENOSYS)
+		 && (err != -EFAULT))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1897: FILE: drivers/mmc/core/sd.c:214:
+		 * fail more gracefully. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1899: FILE: drivers/mmc/core/sd.c:216:
+		if ((err != -EINVAL)
+		 && (err != -ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1899: FILE: drivers/mmc/core/sd.c:216:
+		 && (err != -ENOSYS)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1900: FILE: drivers/mmc/core/sd.c:217:
+		 && (err != -ENOSYS)
+		 && (err != -EFAULT))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1942: FILE: drivers/mtd/chips/cfi_util.c:85:
+	/* M29W128G flashes require an additional reset command
+	   when exit qry mode */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1942: FILE: drivers/mtd/chips/cfi_util.c:85:
+	   when exit qry mode */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfi->mfr == CFI_MFR_ST'
#1943: FILE: drivers/mtd/chips/cfi_util.c:86:
+	if ((cfi->mfr == CFI_MFR_ST) && (cfi->id == 0x227E || cfi->id == 0x7E))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#2036: FILE: drivers/net/usb/kaweth.c:282:
+	dr->bRequestType = requesttype;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2081: FILE: drivers/net/wireless/ath/ath5k/ath5k.h:1167:
+extern int ath5k_hw_on_hold(struct ath5k_hw *ah);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2172: FILE: drivers/net/wireless/ath/ath5k/base.c:2455:
+		 * leave it idle (keep MAC/BB on warm reset) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2176: FILE: drivers/net/wireless/ath/ath5k/base.c:2459:
+		ATH5K_DBG(sc, ATH5K_DEBUG_RESET,
+				"putting device to sleep\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2203: FILE: drivers/net/wireless/ath/ath5k/reset.c:273:
+		ath5k_hw_reg_write(ah, data | AR5K_SLEEP_CTL_SLE_WAKE,
+							AR5K_SLEEP_CTL);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2216: FILE: drivers/net/wireless/ath/ath5k/reset.c:283:
+			udelay(50);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2218: FILE: drivers/net/wireless/ath/ath5k/reset.c:285:
+			ath5k_hw_reg_write(ah, data | AR5K_SLEEP_CTL_SLE_WAKE,
+							AR5K_SLEEP_CTL);

WARNING:TYPO_SPELLING: 'puting' may be misspelled - perhaps 'putting'?
#2238: FILE: drivers/net/wireless/ath/ath5k/reset.c:313:
+ * without puting the card on full sleep.
            ^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2254: FILE: drivers/net/wireless/ath/ath5k/reset.c:329:
+	/*
+	 * Put chipset on warm reset...

WARNING:TYPO_SPELLING: 'puting' may be misspelled - perhaps 'putting'?
#2256: FILE: drivers/net/wireless/ath/ath5k/reset.c:331:
+	 * Note: puting PCI core on warm reset on PCI-E cards
 	         ^^^^^^

WARNING:TYPO_SPELLING: 'ingore' may be misspelled - perhaps 'ignore'?
#2258: FILE: drivers/net/wireless/ath/ath5k/reset.c:333:
+	 * we ingore that flag for PCI-E cards. On PCI cards
 	      ^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2297: FILE: drivers/net/wireless/ath/ath5k/reset.c:387:
+	/*
+	 * Put chipset on warm reset...

WARNING:TYPO_SPELLING: 'puting' may be misspelled - perhaps 'putting'?
#2299: FILE: drivers/net/wireless/ath/ath5k/reset.c:389:
+	 * Note: puting PCI core on warm reset on PCI-E cards
 	         ^^^^^^

WARNING:TYPO_SPELLING: 'ingore' may be misspelled - perhaps 'ignore'?
#2301: FILE: drivers/net/wireless/ath/ath5k/reset.c:391:
+	 * we ingore that flag for PCI-E cards. On PCI cards
 	      ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2329: FILE: drivers/net/wireless/ath/ath5k/reset.c:419:
+	 * warm reset */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2336: FILE: drivers/net/wireless/ath/ath5k/reset.c:426:
+	 * a channel / mode set yet */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2431: FILE: drivers/net/wireless/iwlwifi/iwl-3945.c:2798:
+}
+static u32 iwl3945_ucode_get_build(const struct iwl_ucode_header *ucode,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2436: FILE: drivers/net/wireless/iwlwifi/iwl-3945.c:2803:
+}
+static u8 *iwl3945_ucode_get_data(const struct iwl_ucode_header *ucode,

CHECK:SPACING: No space is necessary after a cast
#2439: FILE: drivers/net/wireless/iwlwifi/iwl-3945.c:2806:
+	return (u8 *) ucode->u.v1.data;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2494: FILE: drivers/net/wireless/iwlwifi/iwl-4965.c:2235:
+}
+static u32 iwl4965_ucode_get_build(const struct iwl_ucode_header *ucode,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2499: FILE: drivers/net/wireless/iwlwifi/iwl-4965.c:2240:
+}
+static u8 *iwl4965_ucode_get_data(const struct iwl_ucode_header *ucode,

CHECK:SPACING: No space is necessary after a cast
#2502: FILE: drivers/net/wireless/iwlwifi/iwl-4965.c:2243:
+	return (u8 *) ucode->u.v1.data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2549: FILE: drivers/net/wireless/iwlwifi/iwl-5000.c:245:
+		iwl_set_bits_mask_prph(priv, APMG_DIGITAL_SVR_REG,
+					APMG_SVR_DIGITAL_VOLTAGE_1_32,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'item' - possible side-effects?
#2560: FILE: drivers/net/wireless/iwlwifi/iwl-5000.c:1436:
+#define IWL5000_UCODE_GET(item)						\
+static u32 iwl5000_ucode_get_##item(const struct iwl_ucode_header *ucode,\
+				    u32 api_ver)			\
+{									\
+	if (api_ver <= 2)						\
+		return le32_to_cpu(ucode->u.v1.item);			\
+	return le32_to_cpu(ucode->u.v2.item);				\
+}

CHECK:SPACING: No space is necessary after a cast
#2588: FILE: drivers/net/wireless/iwlwifi/iwl-5000.c:1464:
+		return (u8 *) ucode->u.v1.data;

CHECK:SPACING: No space is necessary after a cast
#2589: FILE: drivers/net/wireless/iwlwifi/iwl-5000.c:1465:
+	return (u8 *) ucode->u.v2.data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2823: FILE: drivers/net/wireless/iwlwifi/iwl-agn.c:1459:
+		IWL_DEBUG_INFO(priv,
+			"uCode file size %d does not match expected size\n",

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2899: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:120:
+	u32 (*get_header_size)(u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2900: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:121:
+	u32 (*get_build)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2900: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:121:
+	u32 (*get_build)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2901: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:122:
+	u32 (*get_inst_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2901: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:122:
+	u32 (*get_inst_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2902: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:123:
+	u32 (*get_data_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2902: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:123:
+	u32 (*get_data_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2903: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:124:
+	u32 (*get_init_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2903: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:124:
+	u32 (*get_init_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2904: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:125:
+	u32 (*get_init_data_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2904: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:125:
+	u32 (*get_init_data_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2905: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:126:
+	u32 (*get_boot_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2905: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:126:
+	u32 (*get_boot_size)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iwl_ucode_header *' should also have an identifier name
#2906: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:127:
+	u8 * (*get_data)(const struct iwl_ucode_header *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2906: FILE: drivers/net/wireless/iwlwifi/iwl-core.h:127:
+	u8 * (*get_data)(const struct iwl_ucode_header *, u32);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2984: FILE: drivers/net/wireless/iwlwifi/iwl-dev.h:551:
 };
+#define UCODE_HEADER_SIZE(ver) ((ver) == 1 ? 24 : 28)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2993: FILE: drivers/net/wireless/iwlwifi/iwl-dev.h:839:
+/*
+ * Two types of OTP memory access modes

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2995: FILE: drivers/net/wireless/iwlwifi/iwl-dev.h:841:
+ * ^I^I^I        based on physical memory addressing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2997: FILE: drivers/net/wireless/iwlwifi/iwl-dev.h:843:
+ * ^I^I^I       based on logical memory addressing$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3022: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:162:
+		iwl_clear_bit(priv, CSR_OTP_GP_REG,
+				CSR_OTP_GP_REG_OTP_ACCESS_MODE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3025: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:165:
+		iwl_set_bit(priv, CSR_OTP_GP_REG,
+				CSR_OTP_GP_REG_OTP_ACCESS_MODE);

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#3055: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:285:
+		/* set the uncorrectable OTP ECC bit for acknowledgement */
 		                                         ^^^^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3057: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:287:
+		iwl_set_bit(priv, CSR_OTP_GP_REG,
+			CSR_OTP_GP_REG_ECC_UNCORR_STATUS_MSK);

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#3063: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:293:
+		/* set the correctable OTP ECC bit for acknowledgement */
 		                                       ^^^^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3065: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:295:
+		iwl_set_bit(priv, CSR_OTP_GP_REG,
+				CSR_OTP_GP_REG_ECC_CORR_STATUS_MSK);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3073: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:303:
+/*
+ * iwl_is_otp_empty: check for empty OTP

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3094: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:324:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3096: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:326:
+/*
+ * iwl_find_otp_image: find EEPROM image in OTP

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3105: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:335:
+static int iwl_find_otp_image(struct iwl_priv *priv,
+					u16 *validblockaddr)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3119: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:349:
+	/*
+	 * start traverse link list

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3135: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:365:
+			/*
+			 * reach the end of link list,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3189: FILE: drivers/net/wireless/iwlwifi/iwl-eeprom.c:438:
+		iwl_set_bit(priv, CSR_OTP_GP_REG,
 			     CSR_OTP_GP_REG_ECC_CORR_STATUS_MSK |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3352: FILE: drivers/net/wireless/iwlwifi/iwl3945-base.c:2218:
+		IWL_DEBUG_INFO(priv,
+			"uCode file size %zd does not match expected size\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3673: FILE: drivers/pcmcia/yenta_socket.c:1243:
+	pci_read_config_dword(pdev, 16*4, &socket->saved_state[0]);
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3674: FILE: drivers/pcmcia/yenta_socket.c:1244:
+	pci_read_config_dword(pdev, 17*4, &socket->saved_state[1]);
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3706: FILE: drivers/pcmcia/yenta_socket.c:1266:
+	pci_write_config_dword(pdev, 16*4, socket->saved_state[0]);
 	                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3707: FILE: drivers/pcmcia/yenta_socket.c:1267:
+	pci_write_config_dword(pdev, 17*4, socket->saved_state[1]);
 	                               ^

WARNING:CONST_STRUCT: struct dev_pm_ops should normally be const
#3729: FILE: drivers/pcmcia/yenta_socket.c:1281:
+static struct dev_pm_ops yenta_pm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#3828: FILE: drivers/serial/serial_cs.c:887:
+	PCMCIA_DEVICE_CIS_PROD_ID12("ADVANTECH", "COMpad-32/85B-2", 0x96913a85, 0x27ab5437, "COMpad2.cis"),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <dwDTERate>
#3860: FILE: drivers/usb/class/cdc-acm.c:863:
+	newline.dwDTERate = cpu_to_le32(tty_get_baud_rate(tty));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3877: FILE: drivers/usb/class/cdc-wdm.c:319:
+		r = wait_event_interruptible(desc->wait, !test_bit(WDM_IN_USE,
+								&desc->flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3912: FILE: drivers/usb/class/cdc-wdm.c:410:
+			rv = wait_event_interruptible(desc->wait,
+				test_bit(WDM_READ, &desc->flags));

ERROR:SPACING: space required before the open parenthesis '('
#3955: FILE: drivers/usb/class/usbtmc.c:459:
+		if(n_characters > actual - 12) {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3956: FILE: drivers/usb/class/usbtmc.c:460:
+			dev_err(dev, "Device lies about message size: %zu > %zu\n", n_characters, actual - 12);

ERROR:SPACING: space required before the open parenthesis '('
#3961: FILE: drivers/usb/class/usbtmc.c:465:
+		if(n_characters > this_part) {

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#3962: FILE: drivers/usb/class/usbtmc.c:466:
+			dev_err(dev, "Device returns more than requested: %zu > %zu\n", done + n_characters, done + this_part);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#4050: FILE: drivers/usb/host/xhci-hcd.c:34:
+module_param(link_quirk, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4098: FILE: drivers/usb/host/xhci-hcd.c:614:
+static int xhci_configure_endpoint(struct xhci_hcd *xhci,
+		struct usb_device *udev, struct xhci_virt_device *virt_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4108: FILE: drivers/usb/host/xhci-hcd.c:624:
+static int xhci_check_maxpacket(struct xhci_hcd *xhci, unsigned int slot_id,
+		unsigned int ep_index, struct urb *urb)

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#4121: FILE: drivers/usb/host/xhci-hcd.c:637:
+	max_packet_size = urb->dev->ep0.desc.wMaxPacketSize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4125: FILE: drivers/usb/host/xhci-hcd.c:641:
+		xhci_dbg(xhci, "Max packet size in usb_device = %d\n",
+				max_packet_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4127: FILE: drivers/usb/host/xhci-hcd.c:643:
+		xhci_dbg(xhci, "Max packet size in xHCI HW = %d\n",
+				hw_max_packet_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4151: FILE: drivers/usb/host/xhci-hcd.c:667:
+		ret = xhci_configure_endpoint(xhci, urb->dev,
+				xhci->devs[slot_id], true);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4168: FILE: drivers/usb/host/xhci-hcd.c:688:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4190: FILE: drivers/usb/host/xhci-hcd.c:713:
+			ret = xhci_check_maxpacket(xhci, slot_id,
+					ep_index, urb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4212: FILE: drivers/usb/host/xhci-hcd.c:733:
+		ret = xhci_queue_intr_tx(xhci, GFP_ATOMIC, urb,
+				slot_id, ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4227: FILE: drivers/usb/host/xhci-hcd.c:1038:
+static int xhci_configure_endpoint_result(struct xhci_hcd *xhci,
+		struct usb_device *udev, struct xhci_virt_device *virt_dev)

WARNING:SPLIT_STRING: quoted string split across lines
#4234: FILE: drivers/usb/host/xhci-hcd.c:1045:
+		dev_warn(&udev->dev, "Not enough host controller resources "
+				"for new device state.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4240: FILE: drivers/usb/host/xhci-hcd.c:1051:
+		dev_warn(&udev->dev, "Not enough bandwidth "
+				"for new device state.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4247: FILE: drivers/usb/host/xhci-hcd.c:1058:
+		dev_warn(&udev->dev, "ERROR: Endpoint drop flag = 0, "
+				"add flag = 1, "

WARNING:SPLIT_STRING: quoted string split across lines
#4248: FILE: drivers/usb/host/xhci-hcd.c:1059:
+				"add flag = 1, "
+				"and endpoint is not disabled.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4257: FILE: drivers/usb/host/xhci-hcd.c:1068:
+		xhci_err(xhci, "ERROR: unexpected command completion "
+				"code 0x%x.\n", virt_dev->cmd_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4265: FILE: drivers/usb/host/xhci-hcd.c:1076:
+static int xhci_evaluate_context_result(struct xhci_hcd *xhci,
+		struct usb_device *udev, struct xhci_virt_device *virt_dev)

WARNING:SPLIT_STRING: quoted string split across lines
#4272: FILE: drivers/usb/host/xhci-hcd.c:1083:
+		dev_warn(&udev->dev, "WARN: xHCI driver setup invalid evaluate "
+				"context command.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4277: FILE: drivers/usb/host/xhci-hcd.c:1088:
+		dev_warn(&udev->dev, "WARN: slot not enabled for"
+				"evaluate context command.\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#4277: FILE: drivers/usb/host/xhci-hcd.c:1088:
+		dev_warn(&udev->dev, "WARN: slot not enabled for"
+				"evaluate context command.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4280: FILE: drivers/usb/host/xhci-hcd.c:1091:
+		dev_warn(&udev->dev, "WARN: invalid context state for "
+				"evaluate context command.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4290: FILE: drivers/usb/host/xhci-hcd.c:1101:
+		xhci_err(xhci, "ERROR: unexpected command completion "
+				"code 0x%x.\n", virt_dev->cmd_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4301: FILE: drivers/usb/host/xhci-hcd.c:1112:
+static int xhci_configure_endpoint(struct xhci_hcd *xhci,
+		struct usb_device *udev, struct xhci_virt_device *virt_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4311: FILE: drivers/usb/host/xhci-hcd.c:1122:
+		ret = xhci_queue_configure_endpoint(xhci, virt_dev->in_ctx->dma,
+				udev->slot_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4314: FILE: drivers/usb/host/xhci-hcd.c:1125:
+		ret = xhci_queue_evaluate_context(xhci, virt_dev->in_ctx->dma,
+				udev->slot_id);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4324: FILE: drivers/usb/host/xhci-hcd.c:1135:
+	timeleft = wait_for_completion_interruptible_timeout(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4329: FILE: drivers/usb/host/xhci-hcd.c:1140:
+		xhci_warn(xhci, "%s while waiting for %s command\n",
+				timeleft == 0 ? "Timeout" : "Signal",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4417: FILE: drivers/usb/host/xhci-hcd.c:1248:
+void xhci_setup_input_ctx_for_quirk(struct xhci_hcd *xhci,
+		unsigned int slot_id, unsigned int ep_index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4430: FILE: drivers/usb/host/xhci-hcd.c:1261:
+	addr = xhci_trb_virt_to_dma(deq_state->new_deq_seg,
+			deq_state->new_deq_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#4433: FILE: drivers/usb/host/xhci-hcd.c:1264:
+		xhci_warn(xhci, "WARN Cannot submit config ep after "
+				"reset ep command\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4435: FILE: drivers/usb/host/xhci-hcd.c:1266:
+		xhci_warn(xhci, "WARN deq seg = %p, deq ptr = %p\n",
+				deq_state->new_deq_seg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4453: FILE: drivers/usb/host/xhci-hcd.c:1284:
+void xhci_cleanup_stalled_ring(struct xhci_hcd *xhci,
+		struct usb_device *udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4463: FILE: drivers/usb/host/xhci-hcd.c:1294:
+	xhci_find_new_dequeue_state(xhci, udev->slot_id,
+			ep_index, ep_ring->stopped_td,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4472: FILE: drivers/usb/host/xhci-hcd.c:1303:
+		xhci_queue_new_dequeue_state(xhci, ep_ring,
+				udev->slot_id,

WARNING:SPLIT_STRING: quoted string split across lines
#4479: FILE: drivers/usb/host/xhci-hcd.c:1310:
+		xhci_dbg(xhci, "Setting up input context for "
+				"configure endpoint command\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4481: FILE: drivers/usb/host/xhci-hcd.c:1312:
+		xhci_setup_input_ctx_for_quirk(xhci, udev->slot_id,
+				ep_index, &deq_state);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#4565: FILE: drivers/usb/host/xhci-mem.c:421:
+		return -EINVAL;
+		break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4568: FILE: drivers/usb/host/xhci-mem.c:424:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4582: FILE: drivers/usb/host/xhci-mem.c:622:
+void xhci_endpoint_copy(struct xhci_hcd *xhci,
+		struct xhci_virt_device *vdev, unsigned int ep_index)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#4638: FILE: drivers/usb/host/xhci-pci.c:70:
+	if (pdev->vendor == PCI_VENDOR_ID_FRESCO_LOGIC &&
[...]
+			xhci->quirks |= XHCI_RESET_EP_QUIRK;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4639: FILE: drivers/usb/host/xhci-pci.c:71:
+	if (pdev->vendor == PCI_VENDOR_ID_FRESCO_LOGIC &&
+			pdev->device == PCI_DEVICE_ID_FRESCO_LOGIC_PDK &&

WARNING:SPLIT_STRING: quoted string split across lines
#4643: FILE: drivers/usb/host/xhci-pci.c:75:
+			xhci_dbg(xhci, "QUIRK: Fresco Logic xHC needs configure"
+					" endpoint cmd after reset endpoint\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4723: FILE: drivers/usb/host/xhci-ring.c:672:
+		xhci_queue_configure_endpoint(xhci,
+				xhci->devs[slot_id]->in_ctx->dma, slot_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4756: FILE: drivers/usb/host/xhci-ring.c:726:
+		ctrl_ctx = xhci_get_input_control_ctx(xhci,
+				xhci->devs[slot_id]->in_ctx);

WARNING:SPLIT_STRING: quoted string split across lines
#4769: FILE: drivers/usb/host/xhci-ring.c:739:
+		xhci_dbg(xhci, "Completed config ep cmd - last ep index = %d, "
+				"state = %d\n", ep_index, ep_state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4771: FILE: drivers/usb/host/xhci-ring.c:741:
+		if (xhci->quirks & XHCI_RESET_EP_QUIRK &&
+				ep_state & EP_HALTED) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#4845: FILE: drivers/usb/host/xhci-ring.c:1008:
+			/* else fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4849: FILE: drivers/usb/host/xhci-ring.c:1012:
+			if (event_trb != ep_ring->dequeue &&
+					event_trb != td->last_trb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4860: FILE: drivers/usb/host/xhci-ring.c:1023:
+			xhci_cleanup_stalled_ring(xhci,
+					td->urb->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4873: FILE: drivers/usb/host/xhci-ring.c:1041:
+					if ((status == -EINPROGRESS ||
+								status == 0) &&

WARNING:SPLIT_STRING: quoted string split across lines
#4904: FILE: drivers/usb/host/xhci-ring.c:1077:
+					xhci_dbg(xhci, "Successful bulk "
+							"transfer!\n");

WARNING:SPLIT_STRING: quoted string split across lines
#4907: FILE: drivers/usb/host/xhci-ring.c:1080:
+					xhci_dbg(xhci, "Successful interrupt "
+							"transfer!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4944: FILE: drivers/usb/host/xhci-ring.c:1159:
+	if (trb_comp_code == COMP_STOP_INVAL ||
+			trb_comp_code == COMP_STOP) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4954: FILE: drivers/usb/host/xhci-ring.c:1168:
+		if (trb_comp_code == COMP_STALL ||
+				trb_comp_code == COMP_BABBLE) {

WARNING:SPLIT_STRING: quoted string split across lines
#4973: FILE: drivers/usb/host/xhci-ring.c:1195:
+			xhci_warn(xhci, "URB transfer length is wrong, "
+					"xHC issue? req. len = %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#4974: FILE: drivers/usb/host/xhci-ring.c:1196:
+					"xHC issue? req. len = %u, "
+					"act. len = %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4997: FILE: drivers/usb/host/xhci-ring.c:1217:
+		if (usb_endpoint_xfer_control(&urb->ep->desc) ||
+			(trb_comp_code != COMP_STALL &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5022: FILE: drivers/usb/host/xhci-ring.c:1479:
+int xhci_queue_intr_tx(struct xhci_hcd *xhci, gfp_t mem_flags,
+		struct urb *urb, int slot_id, unsigned int ep_index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5033: FILE: drivers/usb/host/xhci-ring.c:1490:
+	if (urb->dev->speed == USB_SPEED_LOW ||
+			urb->dev->speed == USB_SPEED_FULL)

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#5039: FILE: drivers/usb/host/xhci-ring.c:1496:
+		if (!printk_ratelimit())

WARNING:SPLIT_STRING: quoted string split across lines
#5041: FILE: drivers/usb/host/xhci-ring.c:1498:
+			dev_dbg(&urb->dev->dev, "Driver uses different interval"
+					" (%d microframe%s) than xHCI "

WARNING:SPLIT_STRING: quoted string split across lines
#5042: FILE: drivers/usb/host/xhci-ring.c:1499:
+					" (%d microframe%s) than xHCI "
+					"(%d microframe%s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5050: FILE: drivers/usb/host/xhci-ring.c:1507:
+		if (urb->dev->speed == USB_SPEED_LOW ||
+				urb->dev->speed == USB_SPEED_FULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5065: FILE: drivers/usb/host/xhci-ring.c:1913:
+int xhci_queue_evaluate_context(struct xhci_hcd *xhci, dma_addr_t in_ctx_ptr,
+		u32 slot_id)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5135: FILE: drivers/usb/host/xhci.h:1066:
+#define	XHCI_LINK_TRB_QUIRK	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5136: FILE: drivers/usb/host/xhci.h:1067:
+#define XHCI_RESET_EP_QUIRK	(1 << 1)

WARNING:LINE_SPACING: Missing a blank line after declarations
#5147: FILE: drivers/usb/host/xhci.h:1149:
+	u32 temp = xhci_readl(xhci, &xhci->cap_regs->hc_capbase);
+	return ((HC_VERSION(temp) == 0x95) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5148: FILE: drivers/usb/host/xhci.h:1150:
+	return ((HC_VERSION(temp) == 0x95) &&
+			(xhci->quirks & XHCI_LINK_TRB_QUIRK));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5162: FILE: drivers/usb/host/xhci.h:1179:
+void xhci_endpoint_copy(struct xhci_hcd *xhci,
+		struct xhci_virt_device *vdev, unsigned int ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5172: FILE: drivers/usb/host/xhci.h:1228:
+int xhci_queue_intr_tx(struct xhci_hcd *xhci, gfp_t mem_flags, struct urb *urb,
+		int slot_id, unsigned int ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5176: FILE: drivers/usb/host/xhci.h:1232:
+int xhci_queue_evaluate_context(struct xhci_hcd *xhci, dma_addr_t in_ctx_ptr,
+		u32 slot_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5185: FILE: drivers/usb/host/xhci.h:1242:
+void xhci_cleanup_stalled_ring(struct xhci_hcd *xhci,
+		struct usb_device *udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5188: FILE: drivers/usb/host/xhci.h:1245:
+void xhci_queue_config_ep_quirk(struct xhci_hcd *xhci,
+		unsigned int slot_id, unsigned int ep_index,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5413: FILE: drivers/usb/serial/cypress_m8.c:1001:
+	/* We can't clean this one up as we don't know the device type
+	   early enough */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5413: FILE: drivers/usb/serial/cypress_m8.c:1001:
+	   early enough */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5513: FILE: drivers/usb/serial/ftdi_sio.h:936:
+#define ADI_GNICEPLUS_PID ^I0xF001$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tty->termios
#5548: FILE: drivers/usb/serial/iuu_phoenix.c:1022:
+	*(tty->termios) = tty_std_termios;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5706: FILE: drivers/usb/serial/oti6858.c:190:
+^I.init_termios = ^Ioti6858_init_termios,$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tty->termios
#5724: FILE: drivers/usb/serial/oti6858.c:453:
+	*(tty->termios) = tty_std_termios;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tty->termios
#5793: FILE: drivers/usb/serial/spcp8x5.c:503:
+	*(tty->termios) = tty_std_termios;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#6031: FILE: drivers/usb/serial/usb-serial.c:248:
+static int serial_open(struct tty_struct *tty, struct file *filp)
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#6040: FILE: drivers/usb/serial/usb-serial.c:257:
+	if (!tty_hung_up_p(filp))
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#6064: FILE: drivers/usb/serial/usb-serial.c:272:
+			retval = port->serial->type->open(tty, port, filp);
 			                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#6203: FILE: drivers/usb/serial/usb-serial.c:337:
+	if (tty_hung_up_p(filp))
 	                  ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6295: FILE: drivers/usb/serial/usb-serial.c:621:
+	dbg ("%s - %s", __func__, dev_name(dev));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6396: FILE: drivers/usb/serial/usb-serial.c:1208:
+^I.shutdown = ^I^Iserial_release,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6397: FILE: drivers/usb/serial/usb-serial.c:1209:
+^I.install = ^I^Iserial_install,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6429: FILE: drivers/usb/serial/whiteheat.c:1290:
+	firm_send_command(port, WHITEHEAT_SETUP_PORT,
 			(__u8 *)&port_settings, sizeof(port_settings));

CHECK:CAMELCASE: Avoid CamelCase: <SiS_DDC_Port>
#6520: FILE: drivers/video/sis/vstruct.h:345:
+	SISIOADDRESS			SiS_DDC_Port;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6626: FILE: fs/ecryptfs/keystore.c:619:
+		printk(KERN_INFO "%s: Filename encryption only supports "

WARNING:SPLIT_STRING: quoted string split across lines
#6627: FILE: fs/ecryptfs/keystore.c:620:
+		printk(KERN_INFO "%s: Filename encryption only supports "
+		       "password tokens\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6640: FILE: fs/ecryptfs/keystore.c:922:
+		printk(KERN_INFO "%s: Filename encryption only supports "

WARNING:SPLIT_STRING: quoted string split across lines
#6641: FILE: fs/ecryptfs/keystore.c:923:
+		printk(KERN_INFO "%s: Filename encryption only supports "
+		       "password tokens\n", __func__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6814: FILE: fs/proc/kcore.c:369:
+				vmsize = __copy_from_user_inatomic(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6854: FILE: include/linux/tty.h:191:
+	/* Called when the last close completes or a hangup finishes
+	   IFF the port was initialized. Do not use to free resources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6854: FILE: include/linux/tty.h:191:
+	   IFF the port was initialized. Do not use to free resources */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6865: FILE: include/linux/tty.h:465:
+extern void tty_port_close(struct tty_port *port,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#6866: FILE: include/linux/tty.h:466:
+				struct tty_struct *tty, struct file *filp);
 				                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6866: FILE: include/linux/tty.h:466:
+extern void tty_port_close(struct tty_port *port,
+				struct tty_struct *tty, struct file *filp);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6879: FILE: include/linux/usb/serial.h:265:
+	/* Called by the usb serial hooks to allow the user to rework the
+	   termios state */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6879: FILE: include/linux/usb/serial.h:265:
+	   termios state */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6893: FILE: include/pcmcia/ss.h:282:
+extern int pcmcia_socket_dev_suspend(struct device *dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#7127: FILE: mm/mlock.c:313:
+		struct page *page = follow_page(vma, addr, FOLL_GET);
+		if (page) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat.st_uid != geteuid()'
#7467: FILE: tools/perf/builtin-annotate.c:1338:
+	if (!force && stat.st_uid && (stat.st_uid != geteuid())) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat.st_uid != geteuid()'
#7482: FILE: tools/perf/builtin-report.c:1860:
+	if (!force && stat.st_uid && (stat.st_uid != geteuid())) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 118 warnings, 117 checks, 6421 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
