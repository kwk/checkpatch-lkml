CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: fs/ext2/xattr.h:64:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, struct file *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#99: FILE: fs/ext2/xattr.h:64:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#99: FILE: fs/ext2/xattr.h:64:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#99: FILE: fs/ext2/xattr.h:64:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#99: FILE: fs/ext2/xattr.h:64:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#126: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#126: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#126: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#126: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: fs/nfs/nfs4_fs.h:170:
+extern ssize_t nfs4_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#225: FILE: fs/nfs/nfs4_fs.h:170:
+extern ssize_t nfs4_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#225: FILE: fs/nfs/nfs4_fs.h:170:
+extern ssize_t nfs4_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#225: FILE: fs/nfs/nfs4_fs.h:170:
+extern ssize_t nfs4_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#225: FILE: fs/nfs/nfs4_fs.h:170:
+extern ssize_t nfs4_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#225: FILE: fs/nfs/nfs4_fs.h:170:
+extern ssize_t nfs4_getxattr(struct dentry *, const char *, void *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#227: FILE: fs/nfs/nfs4_fs.h:172:
+extern int nfs4_setxattr(struct dentry *, const char *, const void *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#229: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#229: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#229: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#229: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#369: FILE: fs/xattr.c:155:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#445: FILE: fs/xattr.c:261:
+	error = setxattr(nd.dentry, name, value, size, flags, NULL);
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#454: FILE: fs/xattr.c:276:
+	error = setxattr(nd.dentry, name, value, size, flags, NULL);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#491: FILE: fs/xattr.c:347:
+	error = getxattr(nd.dentry, name, value, size, NULL);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#500: FILE: fs/xattr.c:362:
+	error = getxattr(nd.dentry, name, value, size, NULL);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#536: FILE: fs/xattr.c:421:
+	error = listxattr(nd.dentry, list, size, NULL);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#545: FILE: fs/xattr.c:435:
+	error = listxattr(nd.dentry, list, size, NULL);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#581: FILE: fs/xattr.c:482:
+	error = removexattr(nd.dentry, name, NULL);
 	                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#590: FILE: fs/xattr.c:496:
+	error = removexattr(nd.dentry, name, NULL);
 	                    ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,
 	                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,
 	                                                                  ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#698: FILE: include/linux/fs.h:1217:
+	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int,

WARNING:SPACING: Unnecessary space before function pointer arguments
#700: FILE: include/linux/fs.h:1219:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#700: FILE: include/linux/fs.h:1219:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#700: FILE: include/linux/fs.h:1219:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#700: FILE: include/linux/fs.h:1219:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#700: FILE: include/linux/fs.h:1219:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#700: FILE: include/linux/fs.h:1219:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,

WARNING:SPACING: Unnecessary space before function pointer arguments
#702: FILE: include/linux/fs.h:1221:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#702: FILE: include/linux/fs.h:1221:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#702: FILE: include/linux/fs.h:1221:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#702: FILE: include/linux/fs.h:1221:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#702: FILE: include/linux/fs.h:1221:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct file *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#703: FILE: include/linux/fs.h:1222:
+	int (*removexattr) (struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#703: FILE: include/linux/fs.h:1222:
+	int (*removexattr) (struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#703: FILE: include/linux/fs.h:1222:
+	int (*removexattr) (struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#703: FILE: include/linux/fs.h:1222:
+	int (*removexattr) (struct dentry *, const char *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#717: FILE: include/linux/nfs_fs.h:346:
+extern ssize_t nfs3_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#718: FILE: include/linux/nfs_fs.h:347:
+extern ssize_t nfs3_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#718: FILE: include/linux/nfs_fs.h:347:
+extern ssize_t nfs3_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#718: FILE: include/linux/nfs_fs.h:347:
+extern ssize_t nfs3_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#718: FILE: include/linux/nfs_fs.h:347:
+extern ssize_t nfs3_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#718: FILE: include/linux/nfs_fs.h:347:
+extern ssize_t nfs3_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#718: FILE: include/linux/nfs_fs.h:347:
+extern ssize_t nfs3_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: include/linux/nfs_fs.h:351:
+extern int nfs3_removexattr (struct dentry *, const char *name, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#724: FILE: include/linux/nfs_fs.h:351:
+extern int nfs3_removexattr (struct dentry *, const char *name, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#724: FILE: include/linux/nfs_fs.h:351:
+extern int nfs3_removexattr (struct dentry *, const char *name, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#724: FILE: include/linux/nfs_fs.h:351:
+extern int nfs3_removexattr (struct dentry *, const char *name, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#740: FILE: include/linux/xattr.h:54:
+ssize_t generic_getxattr(struct dentry *dentry, const char *name, void *buffer,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#742: FILE: include/linux/xattr.h:56:
+ssize_t generic_listxattr(struct dentry *dentry, char *buffer,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#744: FILE: include/linux/xattr.h:58:
+int generic_setxattr(struct dentry *dentry, const char *name,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#746: FILE: include/linux/xattr.h:60:
+int generic_removexattr(struct dentry *dentry, const char *name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: fs/ext4/xattr.h:74:
+extern ssize_t ext4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#774: FILE: fs/ext4/xattr.h:74:
+extern ssize_t ext4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#774: FILE: fs/ext4/xattr.h:74:
+extern ssize_t ext4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#774: FILE: fs/ext4/xattr.h:74:
+extern ssize_t ext4_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#774: FILE: fs/ext4/xattr.h:74:
+extern ssize_t ext4_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#869: FILE: fs/hfs/hfs_fs.h:204:
+extern ssize_t hfs_listxattr(struct dentry *dentry, char *buffer, size_t size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#869: FILE: fs/hfs/hfs_fs.h:204:
+extern ssize_t hfs_listxattr(struct dentry *dentry, char *buffer, size_t size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#888: FILE: fs/hfsplus/hfsplus_fs.h:341:
+ssize_t hfsplus_listxattr(struct dentry *dentry, char *buffer, size_t size,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#963: FILE: fs/reiserfs/xattr.c:1031:
+ssize_t reiserfs_listxattr(struct dentry * dentry, char *buffer, size_t size,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#979: FILE: fs/unionfs/union.h:353:
+extern int unionfs_removexattr(struct dentry *dentry, const char *name,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#979: FILE: fs/unionfs/union.h:353:
+extern int unionfs_removexattr(struct dentry *dentry, const char *name,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1049: FILE: include/linux/reiserfs_xattr.h:53:
+ssize_t reiserfs_listxattr(struct dentry *dentry, char *buffer, size_t size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1051: FILE: include/linux/reiserfs_xattr.h:55:
+int reiserfs_removexattr(struct dentry *dentry, const char *name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1065: FILE: fs/cifs/cifsfs.h:98:
+extern int	cifs_removexattr(struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1065: FILE: fs/cifs/cifsfs.h:98:
+extern int	cifs_removexattr(struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1065: FILE: fs/cifs/cifsfs.h:98:
+extern int	cifs_removexattr(struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1065: FILE: fs/cifs/cifsfs.h:98:
+extern int	cifs_removexattr(struct dentry *, const char *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1071: FILE: fs/cifs/cifsfs.h:101:
+extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1071: FILE: fs/cifs/cifsfs.h:101:
+extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1071: FILE: fs/cifs/cifsfs.h:101:
+extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1071: FILE: fs/cifs/cifsfs.h:101:
+extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1071: FILE: fs/cifs/cifsfs.h:101:
+extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1071: FILE: fs/cifs/cifsfs.h:101:
+extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1073: FILE: fs/cifs/cifsfs.h:103:
+extern ssize_t	cifs_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1073: FILE: fs/cifs/cifsfs.h:103:
+extern ssize_t	cifs_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1073: FILE: fs/cifs/cifsfs.h:103:
+extern ssize_t	cifs_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1073: FILE: fs/cifs/cifsfs.h:103:
+extern ssize_t	cifs_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1073: FILE: fs/cifs/cifsfs.h:103:
+extern ssize_t	cifs_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1280: FILE: fs/jffs2/xattr.h:100:
+extern ssize_t jffs2_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1280: FILE: fs/jffs2/xattr.h:100:
+extern ssize_t jffs2_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1280: FILE: fs/jffs2/xattr.h:100:
+extern ssize_t jffs2_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1280: FILE: fs/jffs2/xattr.h:100:
+extern ssize_t jffs2_listxattr(struct dentry *, char *, size_t, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1280: FILE: fs/jffs2/xattr.h:100:
+extern ssize_t jffs2_listxattr(struct dentry *, char *, size_t, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1298: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1298: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1298: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1298: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1298: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1298: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1300: FILE: fs/jfs/jfs_xattr.h:62:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1300: FILE: fs/jfs/jfs_xattr.h:62:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1300: FILE: fs/jfs/jfs_xattr.h:62:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1300: FILE: fs/jfs/jfs_xattr.h:62:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1300: FILE: fs/jfs/jfs_xattr.h:62:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1302: FILE: fs/jfs/jfs_xattr.h:64:
+extern int jfs_removexattr(struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1302: FILE: fs/jfs/jfs_xattr.h:64:
+extern int jfs_removexattr(struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1302: FILE: fs/jfs/jfs_xattr.h:64:
+extern int jfs_removexattr(struct dentry *, const char *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1302: FILE: fs/jfs/jfs_xattr.h:64:
+extern int jfs_removexattr(struct dentry *, const char *, struct file *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1333: FILE: fs/jfs/xattr.c:1034:
+ssize_t jfs_listxattr(struct dentry * dentry, char *data, size_t buf_size,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378213.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 102 warnings, 19 checks, 1089 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378213.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
