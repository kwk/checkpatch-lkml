WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: drivers/edac/i3000_edac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: drivers/edac/i3000_edac.c:5:
+ * ^IIntel D82875P Memory Controller kernel module$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#57: FILE: drivers/edac/i3000_edac.c:6:
+ * ^I(C) 2003 Linux Networx (http://lnxi.com)$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#79: FILE: drivers/edac/i3000_edac.c:27:
Controller */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#80: FILE: drivers/edac/i3000_edac.c:28:
+/* Intel 3000 register addresses - device 0 function 0 - DRAM
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BIT_MACRO: Prefer using the BIT macro
#96: FILE: drivers/edac/i3000_edac.c:44:
+#define I3000_DEAP_GRAIN	(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#97: FILE: drivers/edac/i3000_edac.c:45:
+#define I3000_DEAP_PFN(edeap, deap)	((((edeap) & 1) << (32 -

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#100: FILE: drivers/edac/i3000_edac.c:47:
+#define I3000_DEAP_OFFSET(deap)		((deap) & ~(I3000_DEAP_GRAIN-1) &
                                		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#100: FILE: drivers/edac/i3000_edac.c:47:
+#define I3000_DEAP_OFFSET(deap)		((deap) & ~(I3000_DEAP_GRAIN-1) &

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#167: FILE: drivers/edac/i3000_edac.c:112:
+#define I3000_C1DRA		0x188	/* Channel 1 DRAM Rank Attribute (8b x 2)
+#define ODD_RANK_ATTRIB(dra) (((dra) & 0x70) >> 4)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: drivers/edac/i3000_edac.c:133:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#211: FILE: drivers/edac/i3000_edac.c:156:
+static struct pci_dev *mci_pdev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/edac/i3000_edac.c:160:
+static void i3000_get_error_info(struct mem_ctl_info *mci,
+		struct i3000_error_info *info)

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#224: FILE: drivers/edac/i3000_edac.c:169:
+	 * overwritten by UE.
 	                  ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#238: FILE: drivers/edac/i3000_edac.c:183:
+	 * should be UE info.
 	             ^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#240: FILE: drivers/edac/i3000_edac.c:185:
+	if ((info->errsts ^ info->errsts2) & I3000_ERRSTS_BITS) {
+			pci_read_config_byte(pdev, I3000_EDEAP,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/edac/i3000_edac.c:187:
+			pci_read_config_byte(pdev, I3000_EDEAP,
+					&info->edeap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/edac/i3000_edac.c:189:
+			pci_read_config_dword(pdev, I3000_DEAP,
+					&info->deap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/edac/i3000_edac.c:191:
+			pci_read_config_byte(pdev, I3000_DERRSYN,
+					&info->derrsyn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/edac/i3000_edac.c:198:
+	pci_write_bits16(pdev, I3000_ERRSTS, I3000_ERRSTS_BITS,
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/edac/i3000_edac.c:201:
+static int i3000_process_error_info(struct mem_ctl_info *mci,
+		struct i3000_error_info *info, int handle_errors)

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#271: FILE: drivers/edac/i3000_edac.c:215:
+		edac_mc_handle_ce_no_info(mci, "UE overwrote CE");
 		                                ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#282: FILE: drivers/edac/i3000_edac.c:226:
+		edac_mc_handle_ue(mci, pfn, offset, row, "i3000 UE");
 		                                                ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/edac/i3000_edac.c:229:
+		edac_mc_handle_ce(mci, pfn, offset, info->derrsyn, row,
+				       multi_chan ? channel : 0,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#345: FILE: drivers/edac/i3000_edac.c:288:
+		printk(KERN_ERR "i3000: cannot map mmio space at 0x%lx\n", mchbar);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/edac/i3000_edac.c:371:
+	pci_write_bits16(pdev, I3000_ERRSTS, I3000_ERRSTS_BITS,
+

WARNING:INDENTED_LABEL: labels should not be indented
#440: FILE: drivers/edac/i3000_edac.c:382:
+      fail:

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#448: FILE: drivers/edac/i3000_edac.c:390:
+static int __devinit i3000_init_one(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/edac/i3000_edac.c:391:
+static int __devinit i3000_init_one(struct pci_dev *pdev,
+				      const struct pci_device_id *ent)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci_pdev"
#459: FILE: drivers/edac/i3000_edac.c:401:
+	if (mci_pdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#465: FILE: drivers/edac/i3000_edac.c:407:
+static void __devexit i3000_remove_one(struct pci_dev *pdev)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#469: FILE: drivers/edac/i3000_edac.c:411:
+	debugf0("%s()\n", __func__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: drivers/edac/i3000_edac.c:413:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#477: FILE: drivers/edac/i3000_edac.c:419:
+static const struct pci_device_id i3000_pci_tbl[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#477: FILE: drivers/edac/i3000_edac.c:419:
+static const struct pci_device_id i3000_pci_tbl[] __devinitdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: drivers/edac/i3000_edac.c:422:
+^I ^II3000$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#480: FILE: drivers/edac/i3000_edac.c:422:
+^I ^II3000$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci_pdev"
#505: FILE: drivers/edac/i3000_edac.c:447:
+	if (mci_pdev == NULL) {

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#561: FILE: drivers/edac/Kconfig:87:
+config EDAC_I3000
+	tristate "Intel 3000/3010"
+	depends on EDAC_MM_EDAC && PCI && X86_32
+	help
+	  Support for error detection and correction on the Intel
+	  3000 and 3010 server chipsets.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 18 warnings, 14 checks, 527 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
