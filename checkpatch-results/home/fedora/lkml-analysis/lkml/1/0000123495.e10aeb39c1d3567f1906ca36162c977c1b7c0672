WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
allocates space in directories. Due to being implemented as a filetype it is

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type != EXT2_FT_WHT'
#51: FILE: fs/ext2/dir.c:222:
+	if (!de->inode && (de->file_type != EXT2_FT_WHT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: fs/ext2/dir.c:459:
+	de = ext2_find_entry (dir, &dentry->d_name, &page);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type != EXT2_FT_WHT'
#95: FILE: fs/ext2/dir.c:546:
+			if (!de->inode && (de->file_type != EXT2_FT_WHT) &&
+			    (rec_len >= reclen))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rec_len >= reclen'
#95: FILE: fs/ext2/dir.c:546:
+			if (!de->inode && (de->file_type != EXT2_FT_WHT) &&
+			    (rec_len >= reclen))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#105: FILE: fs/ext2/dir.c:588:
+	if (ext2_match (namelen, name, de)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#118: FILE: fs/ext2/dir.c:604:
+	if (de->inode || ((de->file_type == EXT2_FT_WHT) &&
+			  !ext2_match (namelen, name, de))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: fs/ext2/dir.c:605:
+			  !ext2_match (namelen, name, de))) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/ext2/dir.c:674:
+int ext2_whiteout_entry (struct inode * dir, struct dentry * dentry,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/ext2/dir.c:674:
+int ext2_whiteout_entry (struct inode * dir, struct dentry * dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: fs/ext2/dir.c:674:
+int ext2_whiteout_entry (struct inode * dir, struct dentry * dentry,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: fs/ext2/dir.c:675:
+			 struct ext2_dir_entry_2 * de, struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: fs/ext2/dir.c:675:
+			 struct ext2_dir_entry_2 * de, struct page * page)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#138: FILE: fs/ext2/dir.c:685:
+		BUG_ON(!de);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: fs/ext2/dir.c:689:
+	if (ext2_match (namelen, name, de) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#142: FILE: fs/ext2/dir.c:689:
+	if (ext2_match (namelen, name, de) &&
+	    (de->file_type == EXT2_FT_WHT)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#154: FILE: fs/ext2/dir.c:701:
+		(char*)de - (char*)page_address(page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#154: FILE: fs/ext2/dir.c:701:
+		(char*)de - (char*)page_address(page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: fs/ext2/dir.c:703:
+	err = __ext2_write_begin(NULL, page->mapping, pos, rec_len, 0,
+							&page, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: fs/ext2/dir.c:711:
+	if (ext2_match (namelen, name, de))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->file_type == EXT2_FT_WHT'
#166: FILE: fs/ext2/dir.c:713:
+	if (de->inode || (de->file_type == EXT2_FT_WHT)) {

CHECK:SPACING: No space is necessary after a cast
#167: FILE: fs/ext2/dir.c:714:
+		ext2_dirent *de1 = (ext2_dirent *) ((char *) de + name_len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: fs/ext2/dir.c:715:
+		ext2_dirent *de1 = (ext2_dirent *) ((char *) de + name_len);
+		de1->rec_len = ext2_rec_len_to_disk(rec_len - name_len);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#177: FILE: fs/ext2/dir.c:724:
+	dir->i_mtime = dir->i_ctime = CURRENT_TIME_SEC;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: fs/ext2/ext2.h:109:
+extern ino_t ext2_inode_by_dentry(struct inode *, struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#200: FILE: fs/ext2/ext2.h:109:
+extern ino_t ext2_inode_by_dentry(struct inode *, struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#200: FILE: fs/ext2/ext2.h:109:
+extern ino_t ext2_inode_by_dentry(struct inode *, struct dentry *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: fs/ext2/ext2.h:113:
+extern int ext2_whiteout_entry (struct inode *, struct dentry *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: fs/ext2/ext2.h:113:
+extern int ext2_whiteout_entry (struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#204: FILE: fs/ext2/ext2.h:113:
+extern int ext2_whiteout_entry (struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#204: FILE: fs/ext2/ext2.h:113:
+extern int ext2_whiteout_entry (struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext2_dir_entry_2 *' should also have an identifier name
#204: FILE: fs/ext2/ext2.h:113:
+extern int ext2_whiteout_entry (struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#204: FILE: fs/ext2/ext2.h:113:
+extern int ext2_whiteout_entry (struct inode *, struct dentry *,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#218: FILE: fs/ext2/inode.c:1159:
+	inode->i_flags &= ~(S_SYNC|S_APPEND|S_IMMUTABLE|S_NOATIME|S_DIRSYNC|
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#218: FILE: fs/ext2/inode.c:1159:
+	inode->i_flags &= ~(S_SYNC|S_APPEND|S_IMMUTABLE|S_NOATIME|S_DIRSYNC|
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#218: FILE: fs/ext2/inode.c:1159:
+	inode->i_flags &= ~(S_SYNC|S_APPEND|S_IMMUTABLE|S_NOATIME|S_DIRSYNC|
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#218: FILE: fs/ext2/inode.c:1159:
+	inode->i_flags &= ~(S_SYNC|S_APPEND|S_IMMUTABLE|S_NOATIME|S_DIRSYNC|
 	                                                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#218: FILE: fs/ext2/inode.c:1159:
+	inode->i_flags &= ~(S_SYNC|S_APPEND|S_IMMUTABLE|S_NOATIME|S_DIRSYNC|
 	                                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#238: FILE: fs/ext2/inode.c:1180:
+	ei->i_flags &= ~(EXT2_SYNC_FL|EXT2_APPEND_FL|EXT2_IMMUTABLE_FL|
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#238: FILE: fs/ext2/inode.c:1180:
+	ei->i_flags &= ~(EXT2_SYNC_FL|EXT2_APPEND_FL|EXT2_IMMUTABLE_FL|
 	                                            ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#238: FILE: fs/ext2/inode.c:1180:
+	ei->i_flags &= ~(EXT2_SYNC_FL|EXT2_APPEND_FL|EXT2_IMMUTABLE_FL|
 	                                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#239: FILE: fs/ext2/inode.c:1181:
+			 EXT2_NOATIME_FL|EXT2_DIRSYNC_FL|EXT2_OPAQUE_FL);
 			                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#239: FILE: fs/ext2/inode.c:1181:
+			 EXT2_NOATIME_FL|EXT2_DIRSYNC_FL|EXT2_OPAQUE_FL);
 			                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: fs/ext2/namei.c:57:
+static struct dentry *ext2_lookup(struct inode * dir, struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#262: FILE: fs/ext2/namei.c:58:
+				  struct nameidata *nd)
 				                    ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: fs/ext2/namei.c:299:
+	struct inode * inode = dentry->d_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: fs/ext2/namei.c:300:
+	struct ext2_dir_entry_2 * de = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: fs/ext2/namei.c:301:
+	struct page * page;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: fs/ext2/namei.c:306:
+		ext2_error (dir->i_sb, "ext2_whiteout",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: fs/ext2/namei.c:317:
+		de = ext2_find_entry (dir, &dentry->d_name, &page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: fs/ext2/namei.c:323:
+	err = ext2_whiteout_entry (dir, dentry, de, page);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#395: FILE: include/linux/ext2_fs.h:512:
+					 EXT2_FEATURE_INCOMPAT_WHITEOUT| \
 					                               ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123495.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 20 warnings, 22 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000123495.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
