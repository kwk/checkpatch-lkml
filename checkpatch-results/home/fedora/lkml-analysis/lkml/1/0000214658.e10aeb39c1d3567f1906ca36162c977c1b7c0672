WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#51: FILE: drivers/staging/usbip/usbip_common.c:224:
+		printk("      %s : null pointer\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#64: FILE: drivers/staging/wlan-ng/wlan_compat.h:248:
+#define WLAN_LOG_ERROR(x,args...) printk(KERN_ERR "%s: " x , __func__ , ##args);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#64: FILE: drivers/staging/wlan-ng/wlan_compat.h:248:
+#define WLAN_LOG_ERROR(x,args...) printk(KERN_ERR "%s: " x , __func__ , ##args);
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#64: FILE: drivers/staging/wlan-ng/wlan_compat.h:248:
+#define WLAN_LOG_ERROR(x,args...) printk(KERN_ERR "%s: " x , __func__ , ##args);
                                                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#64: FILE: drivers/staging/wlan-ng/wlan_compat.h:248:
+#define WLAN_LOG_ERROR(x,args...) printk(KERN_ERR "%s: " x , __func__ , ##args);
                                                                       ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#64: FILE: drivers/staging/wlan-ng/wlan_compat.h:248:
+#define WLAN_LOG_ERROR(x,args...) printk(KERN_ERR "%s: " x , __func__ , ##args);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#67: FILE: drivers/staging/wlan-ng/wlan_compat.h:250:
+#define WLAN_LOG_WARNING(x,args...) printk(KERN_WARNING "%s: " x , __func__ , ##args);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#67: FILE: drivers/staging/wlan-ng/wlan_compat.h:250:
+#define WLAN_LOG_WARNING(x,args...) printk(KERN_WARNING "%s: " x , __func__ , ##args);
                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#67: FILE: drivers/staging/wlan-ng/wlan_compat.h:250:
+#define WLAN_LOG_WARNING(x,args...) printk(KERN_WARNING "%s: " x , __func__ , ##args);
                                                                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#67: FILE: drivers/staging/wlan-ng/wlan_compat.h:250:
+#define WLAN_LOG_WARNING(x,args...) printk(KERN_WARNING "%s: " x , __func__ , ##args);
                                                                             ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#67: FILE: drivers/staging/wlan-ng/wlan_compat.h:250:
+#define WLAN_LOG_WARNING(x,args...) printk(KERN_WARNING "%s: " x , __func__ , ##args);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#70: FILE: drivers/staging/wlan-ng/wlan_compat.h:252:
+#define WLAN_LOG_NOTICE(x,args...) printk(KERN_NOTICE "%s: " x , __func__ , ##args);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: drivers/staging/wlan-ng/wlan_compat.h:252:
+#define WLAN_LOG_NOTICE(x,args...) printk(KERN_NOTICE "%s: " x , __func__ , ##args);
                          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#70: FILE: drivers/staging/wlan-ng/wlan_compat.h:252:
+#define WLAN_LOG_NOTICE(x,args...) printk(KERN_NOTICE "%s: " x , __func__ , ##args);
                                                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#70: FILE: drivers/staging/wlan-ng/wlan_compat.h:252:
+#define WLAN_LOG_NOTICE(x,args...) printk(KERN_NOTICE "%s: " x , __func__ , ##args);
                                                                           ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#70: FILE: drivers/staging/wlan-ng/wlan_compat.h:252:
+#define WLAN_LOG_NOTICE(x,args...) printk(KERN_NOTICE "%s: " x , __func__ , ##args);

WARNING:LONG_LINE: line length of 156 exceeds 100 columns
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );
 	                          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );
 	                                                                                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#79: FILE: drivers/staging/wlan-ng/wlan_compat.h:268:
+	#define WLAN_LOG_DEBUG(l,x,args...) if ( WLAN_DBVAR >= (l)) printk(KERN_DEBUG "%s(%lu): " x ,  __func__, (preempt_count() & PREEMPT_MASK), ##args );

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 10 warnings, 0 checks, 30 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000214658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
