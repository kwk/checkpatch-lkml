WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This was a quick modification I did of lguest to be able to support multiple

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#70: FILE: Documentation/lguest/lguest.c:714:
+	 * wants keys to be a multiple of 4 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#71: FILE: Documentation/lguest/lguest.c:715:
+	lenp = get_dma_buffer(fd, dev->mem+(cons->index*4), iov, &num, &irq);
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#71: FILE: Documentation/lguest/lguest.c:715:
+	lenp = get_dma_buffer(fd, dev->mem+(cons->index*4), iov, &num, &irq);
 	                                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: Documentation/lguest/lguest.c:747:
+		 * they can't be too slow. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#108: FILE: Documentation/lguest/lguest.c:749:
+			if (!cons->a_count++)
[...]
+			else if (cons->a_count == 3) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: Documentation/lguest/lguest.c:753:
+				struct timeval now;
+				gettimeofday(&now, NULL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: Documentation/lguest/lguest.c:754:
+				if (now.tv_sec <= cons->a_start.tv_sec+1) {
 				                                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: Documentation/lguest/lguest.c:757:
+					 * has to exit. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#119: FILE: Documentation/lguest/lguest.c:760:
+					 * BREAK, send unbreak now. */

CHECK:BRACES: Unbalanced braces around else statement
#126: FILE: Documentation/lguest/lguest.c:766:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: Documentation/lguest/lguest.c:771:
+		 * back and return failure (meaning, don't call us again). */

WARNING:NAKED_SSCANF: unchecked sscanf return value
#167: FILE: Documentation/lguest/lguest.c:1059:
+	sscanf(ipaddr, "%u.%u.%u.%u", &byte[0], &byte[1], &byte[2], &byte[3]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arg"
#192: FILE: Documentation/lguest/lguest.c:1072:
+	if (arg == NULL) {	/* default console - do the tty stuff */

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: Documentation/lguest/lguest.c:1077:
+			 * We want a raw input stream to the Guest. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#198: FILE: Documentation/lguest/lguest.c:1078:
+			term.c_lflag &= ~(ISIG|ICANON|ECHO);
 			                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#198: FILE: Documentation/lguest/lguest.c:1078:
+			term.c_lflag &= ~(ISIG|ICANON|ECHO);
 			                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: Documentation/lguest/lguest.c:1081:
+			 * restored so the user can see what they're typing. */

WARNING:TYPO_SPELLING: 'exisitng' may be misspelled - perhaps 'existing'?
#206: FILE: Documentation/lguest/lguest.c:1086:
+		/* create or open an exisitng fifo */
 		                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUSR' are not preferred. Consider using octal permissions '0600'.
#207: FILE: Documentation/lguest/lguest.c:1087:
+		mkfifo(arg, S_IWUSR | S_IRUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#222: FILE: Documentation/lguest/lguest.c:1095:
+			 LGUEST_CONSOLE_DMA_KEY+(hvcs_index*4),
 			                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#222: FILE: Documentation/lguest/lguest.c:1095:
+			 LGUEST_CONSOLE_DMA_KEY+(hvcs_index*4),
 			                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#314: FILE: drivers/char/hvc_lguest.c:44:
+/*D:340 Each console instance has an input buffer and associated offset
+associated with it.  Uck -- still static, can't we fix this? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#314: FILE: drivers/char/hvc_lguest.c:44:
+associated with it.  Uck -- still static, can't we fix this? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#329: FILE: drivers/char/hvc_lguest.c:59:
+ * by 4 (because keys must be aligned along 32-bit addresses). */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: drivers/char/hvc_lguest.c:71:
+	lguest_send_dma(LGUEST_CONSOLE_DMA_KEY+(vtermno*4), &dma);
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#338: FILE: drivers/char/hvc_lguest.c:71:
+	lguest_send_dma(LGUEST_CONSOLE_DMA_KEY+(vtermno*4), &dma);
 	                                               ^

CHECK:SPACING: No space is necessary after a cast
#386: FILE: drivers/char/hvc_lguest.c:141:
+	lgc->inbuf = (void *) get_zeroed_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#388: FILE: drivers/char/hvc_lguest.c:143:
+	lgc->cons_input.addr[0] = (unsigned long) __pa(lgc->inbuf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/char/hvc_lguest.c:155:
+	lgdev->private = hvc_alloc(index, lgdev_irq(lgdev), &lguest_cons,
+		PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#409: FILE: drivers/char/hvc_lguest.c:162:
+	err = lguest_bind_dma(LGUEST_CONSOLE_DMA_KEY+(index*4),
 	                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#409: FILE: drivers/char/hvc_lguest.c:162:
+	err = lguest_bind_dma(LGUEST_CONSOLE_DMA_KEY+(index*4),
 	                                                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385336.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 17 checks, 356 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385336.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
