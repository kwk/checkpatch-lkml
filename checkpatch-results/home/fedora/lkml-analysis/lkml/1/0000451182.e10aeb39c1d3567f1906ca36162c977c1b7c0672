WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> I'll let a tcpdump run this evening and see if I can correlate the message

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#47: FILE: include/linux/sunrpc/xdr.h:39:
+#define isprintable(c)      ((c > 0x1f) && (c < 0x7f))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#47: FILE: include/linux/sunrpc/xdr.h:39:
+#define isprintable(c)      ((c > 0x1f) && (c < 0x7f))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#54: FILE: include/linux/sunrpc/xdr.h:46:
+	printk("RPC: print_hexl: length %d\n",length);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#54: FILE: include/linux/sunrpc/xdr.h:46:
+	printk("RPC: print_hexl: length %d\n",length);
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#58: FILE: include/linux/sunrpc/xdr.h:50:
+		printk("  %04x: ", (u_int)i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#64: FILE: include/linux/sunrpc/xdr.h:56:
+				printk("%02x ", (u_int)cp[i+j]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#64: FILE: include/linux/sunrpc/xdr.h:56:
+				printk("%02x ", (u_int)cp[i+j]);
 				                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#66: FILE: include/linux/sunrpc/xdr.h:58:
+				printk("%02x", (u_int)cp[i+j]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#66: FILE: include/linux/sunrpc/xdr.h:58:
+				printk("%02x", (u_int)cp[i+j]);
 				                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#70: FILE: include/linux/sunrpc/xdr.h:62:
+				printk("   ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: include/linux/sunrpc/xdr.h:64:
+				printk("  ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: include/linux/sunrpc/xdr.h:66:
+		printk(" ");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: include/linux/sunrpc/xdr.h:69:
+			c = cp[i+j];
 			        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#79: FILE: include/linux/sunrpc/xdr.h:71:
+			printk("%c", c);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#81: FILE: include/linux/sunrpc/xdr.h:73:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: include/linux/sunrpc/xdr.h:105:
+	printk("buf->head[0].iov_base = %p, buf->head[0].iov_len = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/linux/sunrpc/xdr.h:106:
+	printk("buf->head[0].iov_base = %p, buf->head[0].iov_len = %d\n",
+			buf->head[0].iov_base, buf->head[0].iov_len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#96: FILE: include/linux/sunrpc/xdr.h:107:
+	printk("buf->tail[0].iov_base = %p, buf->tail[0].iov_len = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: include/linux/sunrpc/xdr.h:108:
+	printk("buf->tail[0].iov_base = %p, buf->tail[0].iov_len = %d\n",
+			buf->tail[0].iov_base, buf->tail[0].iov_len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#98: FILE: include/linux/sunrpc/xdr.h:109:
+	printk("pages = %p, page_base = %d, page_len = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: include/linux/sunrpc/xdr.h:110:
+	printk("pages = %p, page_base = %d, page_len = %d\n",
+			buf->pages, buf->page_base, buf->page_len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#100: FILE: include/linux/sunrpc/xdr.h:111:
+	printk("buflen = %d, len = %d\n", buf->buflen, buf->len);

WARNING:RETURN_VOID: void function return statements are not generally useful
#102: FILE: include/linux/sunrpc/xdr.h:113:
+	return;
+}

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#118: FILE: net/sunrpc/svc.c:782:
+	static int done = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: net/sunrpc/svc.c:790:
+	printk("dumping request; rq_addr = %s, rq_deferred = %p, rq_arg:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: net/sunrpc/svc.c:791:
+	printk("dumping request; rq_addr = %s, rq_deferred = %p, rq_arg:\n",
+		svc_print_addr(rqstp, buf, sizeof(buf)), rqstp->rq_deferred);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: net/sunrpc/svc.c:794:
+	printk("head data (from %p):\n", orig_start);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000451182.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 17 warnings, 9 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000451182.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
