CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#72: FILE: drivers/block/aoe/aoe.h:79:
+	DEVFL_KICKME = (1<<5),	/* slow polling network card catch */
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#112: FILE: drivers/block/aoe/aoe.h:123:
+	struct net_device *nd;
 	                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct aoedev *' should also have an identifier name
#174: FILE: drivers/block/aoe/aoe.h:185:
+void aoecmd_cleanslate(struct aoedev *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct aoedev *' should also have an identifier name
#175: FILE: drivers/block/aoe/aoe.h:186:
+struct sk_buff *aoecmd_ata_id(struct aoedev *);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t"
#204: FILE: drivers/block/aoe/aoeblk.c:38:
+	if (t == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#215: FILE: drivers/block/aoe/aoeblk.c:48:
+	struct net_device *nds[8], **nd, **nnd, **ne;
 	                             ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#216: FILE: drivers/block/aoe/aoeblk.c:49:
+	struct aoetgt **t, **te;
 	                     ^^

WARNING:SIZEOF_PARENTHESIS: sizeof nds should be sizeof(nds)
#220: FILE: drivers/block/aoe/aoeblk.c:53:
+	memset(nds, 0, sizeof nds);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#221: FILE: drivers/block/aoe/aoeblk.c:54:
+	nd = nds;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#222: FILE: drivers/block/aoe/aoeblk.c:55:
+	ne = nd + ARRAY_SIZE(nds);
 	     ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#224: FILE: drivers/block/aoe/aoeblk.c:57:
+	te = t + NTARGETS;
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#225: FILE: drivers/block/aoe/aoeblk.c:58:
+	for (; t < te && *t; t++) {
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#228: FILE: drivers/block/aoe/aoeblk.c:61:
+		for (; ifp < e && ifp->nd; ifp++) {
 		                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#229: FILE: drivers/block/aoe/aoeblk.c:62:
+			for (nnd = nds; nnd < nd; nnd++)
 			                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#230: FILE: drivers/block/aoe/aoeblk.c:63:
+				if (*nnd == ifp->nd)
 				                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#232: FILE: drivers/block/aoe/aoeblk.c:65:
+			if (nnd == nd && nd != ne)
 			           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#232: FILE: drivers/block/aoe/aoeblk.c:65:
+			if (nnd == nd && nd != ne)
 			                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#233: FILE: drivers/block/aoe/aoeblk.c:66:
+				*nd++ = ifp->nd;
 				 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#233: FILE: drivers/block/aoe/aoeblk.c:66:
+				*nd++ = ifp->nd;
 				             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#238: FILE: drivers/block/aoe/aoeblk.c:70:
+	ne = nd;
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#239: FILE: drivers/block/aoe/aoeblk.c:71:
+	nd = nds;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#240: FILE: drivers/block/aoe/aoeblk.c:72:
+	if (*nd == NULL)
 	     ^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nd"
#240: FILE: drivers/block/aoe/aoeblk.c:72:
+	if (*nd == NULL)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#242: FILE: drivers/block/aoe/aoeblk.c:74:
+	for (p = page; nd < ne; nd++)
 	               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#242: FILE: drivers/block/aoe/aoeblk.c:74:
+	for (p = page; nd < ne; nd++)
 	                        ^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#243: FILE: drivers/block/aoe/aoeblk.c:75:
+		p += snprintf(p, PAGE_SIZE - (p-page), "%s%s",
 		                               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#244: FILE: drivers/block/aoe/aoeblk.c:76:
+			p == page ? "" : ",", (*nd)->name);
 			                        ^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#245: FILE: drivers/block/aoe/aoeblk.c:77:
+	p += snprintf(p, PAGE_SIZE - (p-page), "\n");
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#246: FILE: drivers/block/aoe/aoeblk.c:78:
+	return p-page;
 	        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#254: FILE: drivers/block/aoe/aoeblk.c:169:
+	if (bio == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#255: FILE: drivers/block/aoe/aoeblk.c:170:
+		printk(KERN_ERR "aoe: bio is NULL\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#256: FILE: drivers/block/aoe/aoeblk.c:171:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#260: FILE: drivers/block/aoe/aoeblk.c:175:
+	if (d == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: drivers/block/aoe/aoeblk.c:176:
+		printk(KERN_ERR "aoe: bd_disk->private_data is NULL\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: drivers/block/aoe/aoeblk.c:177:
+		BUG();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio->bi_io_vec"
#265: FILE: drivers/block/aoe/aoeblk.c:180:
+	} else if (bio->bi_io_vec == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#266: FILE: drivers/block/aoe/aoeblk.c:181:
+		printk(KERN_ERR "aoe: bi_io_vec is NULL\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: drivers/block/aoe/aoeblk.c:182:
+		BUG();

WARNING:SIZEOF_PARENTHESIS: sizeof gd->disk_name should be sizeof(gd->disk_name)
#297: FILE: drivers/block/aoe/aoeblk.c:280:
+	snprintf(gd->disk_name, sizeof gd->disk_name, "etherd/e%ld.%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/block/aoe/aoeblk.c:281:
+	snprintf(gd->disk_name, sizeof gd->disk_name, "etherd/e%ld.%d",
 		d->aoemajor, d->aoeminor);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#411: FILE: drivers/block/aoe/aoecmd.c:74:
+	memcpy(h->src, t->ifp->nd->dev_addr, sizeof h->src);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#412: FILE: drivers/block/aoe/aoecmd.c:75:
+	memcpy(h->dst, t->addr, sizeof h->dst);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#424: FILE: drivers/block/aoe/aoecmd.c:101:
+	if (t->ifp >= &t->ifs[NAOEIFS] || t->ifp->nd == NULL)
 	                                          ^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t->ifp->nd"
#424: FILE: drivers/block/aoe/aoecmd.c:101:
+	if (t->ifp >= &t->ifs[NAOEIFS] || t->ifp->nd == NULL)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#426: FILE: drivers/block/aoe/aoecmd.c:103:
+	if (t->ifp->nd == NULL) {
 	            ^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t->ifp->nd"
#426: FILE: drivers/block/aoe/aoecmd.c:103:
+	if (t->ifp->nd == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#427: FILE: drivers/block/aoe/aoecmd.c:104:
+		printk(KERN_INFO "aoe: no interface to rotate to\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#428: FILE: drivers/block/aoe/aoecmd.c:105:
+		BUG();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d->targets[0]"
#439: FILE: drivers/block/aoe/aoecmd.c:116:
+	if (d->targets[0] == NULL) {	/* shouldn't happen, but I'm paranoid */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#440: FILE: drivers/block/aoe/aoecmd.c:117:
+		printk(KERN_ERR "aoe: NULL TARGETS!\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#446: FILE: drivers/block/aoe/aoecmd.c:123:
+		&& (*t)->ifp->nd
 		              ^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#446: FILE: drivers/block/aoe/aoecmd.c:123:
+		if (t != d->htgt
+		&& (*t)->ifp->nd

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#447: FILE: drivers/block/aoe/aoecmd.c:124:
+		&& (*t)->ifp->nd
+		&& (*t)->nout < (*t)->maxout) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#492: FILE: drivers/block/aoe/aoecmd.c:168:
+	if (f == NULL)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#574: FILE: drivers/block/aoe/aoecmd.c:230:
+	skb->dev = t->ifp->nd;
 	                   ^^

CHECK:SPACING: No space is necessary after a cast
#666: FILE: drivers/block/aoe/aoecmd.c:305:
+	h = (struct aoe_hdr *) skb_mac_header(skb);

CHECK:SPACING: No space is necessary after a cast
#667: FILE: drivers/block/aoe/aoecmd.c:306:
+	ah = (struct aoe_atahdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#667: FILE: drivers/block/aoe/aoecmd.c:306:
+	ah = (struct aoe_atahdr *) (h+1);
 	                             ^

WARNING:SPLIT_STRING: quoted string split across lines
#674: FILE: drivers/block/aoe/aoecmd.c:310:
+		"%15s e%ld.%d oldtag=%08x@%08lx newtag=%08x "
+		"s=%012llx d=%012llx nout=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#690: FILE: drivers/block/aoe/aoecmd.c:317:
+	memcpy(h->dst, t->addr, sizeof h->dst);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#691: FILE: drivers/block/aoe/aoecmd.c:318:
+	memcpy(h->src, t->ifp->nd->dev_addr, sizeof h->src);

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#719: FILE: drivers/block/aoe/aoecmd.c:336:
+			skb->len = sizeof *h + sizeof *ah + n;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#725: FILE: drivers/block/aoe/aoecmd.c:340:
+	skb->dev = t->ifp->nd;
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#734: FILE: drivers/block/aoe/aoecmd.c:364:
+getif(struct aoetgt *t, struct net_device *nd)
                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#741: FILE: drivers/block/aoe/aoecmd.c:371:
+		if (p->nd == nd)
 		       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#741: FILE: drivers/block/aoe/aoecmd.c:371:
+		if (p->nd == nd)
 		             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#747: FILE: drivers/block/aoe/aoecmd.c:377:
+addif(struct aoetgt *t, struct net_device *nd)
                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#754: FILE: drivers/block/aoe/aoecmd.c:384:
+	p->nd = nd;
 	   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#754: FILE: drivers/block/aoe/aoecmd.c:384:
+	p->nd = nd;
 	        ^^

WARNING:SIZEOF_PARENTHESIS: sizeof *ifp should be sizeof(*ifp)
#768: FILE: drivers/block/aoe/aoecmd.c:398:
+	n = (e - ifp) * sizeof *ifp;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#769: FILE: drivers/block/aoe/aoecmd.c:399:
+	memmove(ifp, ifp+1, n);
 	                ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#770: FILE: drivers/block/aoe/aoecmd.c:400:
+	e->nd = NULL;
 	   ^^

WARNING:SIZEOF_PARENTHESIS: sizeof ht->ifs should be sizeof(ht->ifs)
#798: FILE: drivers/block/aoe/aoecmd.c:428:
+	memset(ht->ifs, 0, sizeof ht->ifs);

CHECK:SPACING: No space is necessary after a cast
#808: FILE: drivers/block/aoe/aoecmd.c:438:
+	h = (struct aoe_hdr *) packet;

CHECK:SPACING: No space is necessary after a cast
#809: FILE: drivers/block/aoe/aoecmd.c:439:
+	ah = (struct aoe_atahdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#809: FILE: drivers/block/aoe/aoecmd.c:439:
+	ah = (struct aoe_atahdr *) (h+1);
 	                             ^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#817: FILE: drivers/block/aoe/aoecmd.c:447:
+	struct aoetgt *t, **tt, **te;
 	                          ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#831: FILE: drivers/block/aoe/aoecmd.c:468:
+	te = tt + NTARGETS;
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#832: FILE: drivers/block/aoe/aoecmd.c:469:
+	for (; tt < te && *tt; tt++) {
 	            ^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#838: FILE: drivers/block/aoe/aoecmd.c:475:
+			if (f->tag == FREETAG
+			|| tsince(f->tag) < timeout)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#851: FILE: drivers/block/aoe/aoecmd.c:486:
+			if (n > HELPWAIT /* see if another target can help */
+			&& (tt != d->targets || d->targets[1]))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#862: FILE: drivers/block/aoe/aoecmd.c:497:
+			&& (ifp != t->ifs || t->ifs[1].nd)) {
 			                               ^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#862: FILE: drivers/block/aoe/aoecmd.c:497:
+			if (ifp && ++ifp->lost > (t->nframes << 1)
+			&& (ifp != t->ifs || t->ifs[1].nd)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#868: FILE: drivers/block/aoe/aoecmd.c:503:
+			if (ata_scnt(skb_mac_header(f->skb)) > DEFAULTBCNT / 512
+			&& ifp && ++ifp->lostjumbo > (t->nframes << 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#869: FILE: drivers/block/aoe/aoecmd.c:504:
+			&& ifp && ++ifp->lostjumbo > (t->nframes << 1)
+			&& ifp->maxbcnt != DEFAULTBCNT) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#870: FILE: drivers/block/aoe/aoecmd.c:505:
+				printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#872: FILE: drivers/block/aoe/aoecmd.c:507:
+					"aoe: e%ld.%d: "
+					"too many lost jumbo on "

WARNING:SPLIT_STRING: quoted string split across lines
#873: FILE: drivers/block/aoe/aoecmd.c:508:
+					"too many lost jumbo on "
+					"%s:%012llx - "

WARNING:SPLIT_STRING: quoted string split across lines
#874: FILE: drivers/block/aoe/aoecmd.c:509:
+					"%s:%012llx - "
+					"falling back to %d frames.\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#885: FILE: drivers/block/aoe/aoecmd.c:520:
+		if (t->nout == t->maxout
+		&& t->maxout < t->nframes

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#886: FILE: drivers/block/aoe/aoecmd.c:521:
+		&& t->maxout < t->nframes
+		&& (jiffies - t->lastwadj)/HZ > 10) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#886: FILE: drivers/block/aoe/aoecmd.c:521:
+		&& (jiffies - t->lastwadj)/HZ > 10) {
 		                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d->inprocess"
#926: FILE: drivers/block/aoe/aoecmd.c:557:
+	if (d->inprocess == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#969: FILE: drivers/block/aoe/aoecmd.c:644:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t"
#1022: FILE: drivers/block/aoe/aoecmd.c:728:
+	if (t == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1023: FILE: drivers/block/aoe/aoecmd.c:729:
+		printk(KERN_INFO "aoe: can't find target e%ld.%d:%012llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: drivers/block/aoe/aoecmd.c:730:
+		printk(KERN_INFO "aoe: can't find target e%ld.%d:%012llx\n",
+			d->aoemajor, d->aoeminor,

CHECK:SPACING: No space is necessary after a cast
#1025: FILE: drivers/block/aoe/aoecmd.c:731:
+			(unsigned long long) mac_addr(hin->src));

CHECK:SPACING: No space is necessary after a cast
#1108: FILE: drivers/block/aoe/aoecmd.c:803:
+			ataid_complete(d, t, (char *) (ahin+1));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1108: FILE: drivers/block/aoe/aoecmd.c:803:
+			ataid_complete(d, t, (char *) (ahin+1));
 			                                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#1169: FILE: drivers/block/aoe/aoecmd.c:854:
+	if (f == NULL)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1192: FILE: drivers/block/aoe/aoecmd.c:874:
+	skb->dev = t->ifp->nd;
 	                   ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1203: FILE: drivers/block/aoe/aoecmd.c:885:
+	struct aoetgt *t, **tt, **te;
 	                          ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1207: FILE: drivers/block/aoe/aoecmd.c:889:
+	te = tt + NTARGETS;
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1208: FILE: drivers/block/aoe/aoecmd.c:890:
+	for (; tt < te && *tt; tt++)
 	            ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1211: FILE: drivers/block/aoe/aoecmd.c:893:
+	if (tt == te)
 	          ^^

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#1214: FILE: drivers/block/aoe/aoecmd.c:896:
+	t = kcalloc(1, sizeof *t, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof *f should be sizeof(*f)
#1215: FILE: drivers/block/aoe/aoecmd.c:897:
+	f = kcalloc(nframes, sizeof *f, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof t->addr should be sizeof(t->addr)
#1234: FILE: drivers/block/aoe/aoecmd.c:916:
+	memcpy(t->addr, addr, sizeof t->addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1277: FILE: drivers/block/aoe/aoecmd.c:976:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1288: FILE: drivers/block/aoe/aoecmd.c:987:
+			printk(KERN_INFO

CHECK:SPACING: No space is necessary after a cast
#1311: FILE: drivers/block/aoe/aoecmd.c:1006:
+				(unsigned long long) mac_addr(t->addr));

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1338: FILE: drivers/block/aoe/aoecmd.c:1028:
+	struct aoetgt **t, **te;
 	                     ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1344: FILE: drivers/block/aoe/aoecmd.c:1034:
+	te = t + NTARGETS;
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1345: FILE: drivers/block/aoe/aoecmd.c:1035:
+	for (; t < te && *t; t++) {
 	           ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1364: FILE: drivers/block/aoe/aoedev.c:18:
+	struct aoetgt **t, **te;
 	                     ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1375: FILE: drivers/block/aoe/aoedev.c:22:
+	te = t + NTARGETS;
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1376: FILE: drivers/block/aoe/aoedev.c:23:
+	for (; t < te && *t; t++) {
 	           ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1441: FILE: drivers/block/aoe/aoedev.c:64:
+	struct aoetgt **t, **te;
 	                     ^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1457: FILE: drivers/block/aoe/aoedev.c:70:
+	te = t + NTARGETS;
 	^^

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1458: FILE: drivers/block/aoe/aoedev.c:71:
+	for (; t < te && *t; t++) {
 	           ^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f->buf"
#1462: FILE: drivers/block/aoe/aoedev.c:75:
+			if (f->tag == FREETAG || f->buf == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1467: FILE: drivers/block/aoe/aoedev.c:80:
+			if (--buf->nframesout == 0
+			&& buf != d->inprocess) {

WARNING:SIZEOF_PARENTHESIS: sizeof *d should be sizeof(*d)
#1521: FILE: drivers/block/aoe/aoedev.c:125:
+	d = kcalloc(1, sizeof *d, GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#1527: FILE: drivers/block/aoe/aoedev.c:131:
+	d->timer.data = (ulong) d;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1596: FILE: drivers/block/aoe/aoenet.c:140:
+			printk(KERN_ERR

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344457.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 83 warnings, 43 checks, 1472 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344457.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
