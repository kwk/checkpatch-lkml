WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Implement the data I/O part of the FS-Cache netfs API.  The documentation and

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#182: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: fs/fscache/fsc-page.c:1:
+/* Cache page management and data I/O routines

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#310: FILE: fs/fscache/fsc-page.c:124:
+static struct fscache_retrieval *fscache_alloc_retrieval(

WARNING:MEMORY_BARRIER: memory barrier without comment
#362: FILE: fs/fscache/fsc-page.c:176:
+	smp_rmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#422: FILE: fs/fscache/fsc-page.c:236:
+	 * read because we've encountered a cache read failure */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#426: FILE: fs/fscache/fsc-page.c:240:
+	 * *here*, in this thread, and not in the thread pool */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#490: FILE: fs/fscache/fsc-page.c:304:
+				  unsigned *nr_pages,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: fs/fscache/fsc-page.c:346:
+	 * read because we've encountered a cache read failure */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#536: FILE: fs/fscache/fsc-page.c:350:
+	 * *here*, in this thread, and not in the thread pool */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#670: FILE: fs/fscache/fsc-page.c:484:
+	unsigned n;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#706: FILE: fs/fscache/fsc-page.c:520:
+		if (ret < 0) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#718: FILE: fs/fscache/fsc-page.c:532:
+	 * write */

CHECK:SPACING: No space is necessary after a cast
#764: FILE: fs/fscache/fsc-page.c:578:
+	_enter("%p,%x,", cookie, (u32) page->flags);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#794: FILE: fs/fscache/fsc-page.c:608:
+	 * object */

CHECK:SPACING: No space is necessary after a cast
#797: FILE: fs/fscache/fsc-page.c:611:
+	_debug("store limit %llx", (unsigned long long) object->store_limit);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#809: FILE: fs/fscache/fsc-page.c:623:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#812: FILE: fs/fscache/fsc-page.c:626:
+	 * writers after exclusive ops */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#904: FILE: fs/fscache/fsc-page.c:718:
+	 * uncached here; this deals with synchronisation vs withdrawal */

ERROR:INITIALISED_STATIC: do not initialise statics to false
#942: FILE: fs/fscache/fsc-page.c:756:
+			static bool once_only = false;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#943: FILE: fs/fscache/fsc-page.c:757:
+			static bool once_only = false;
+			if (!once_only) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#945: FILE: fs/fscache/fsc-page.c:759:
+				printk(KERN_WARNING "FS-Cache:"

WARNING:SPLIT_STRING: quoted string split across lines
#946: FILE: fs/fscache/fsc-page.c:760:
+				printk(KERN_WARNING "FS-Cache:"
+				       " Cookie type %s marked page %lx"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#947: FILE: fs/fscache/fsc-page.c:761:
+				       " Cookie type %s marked page %lx"
+				       " multiple times\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#967: FILE: include/linux/fscache.h:201:
+extern int __fscache_attr_changed(struct fscache_cookie *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#967: FILE: include/linux/fscache.h:201:
+extern int __fscache_attr_changed(struct fscache_cookie *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#968: FILE: include/linux/fscache.h:202:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#968: FILE: include/linux/fscache.h:202:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#968: FILE: include/linux/fscache.h:202:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fscache_rw_complete_t' should also have an identifier name
#968: FILE: include/linux/fscache.h:202:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#968: FILE: include/linux/fscache.h:202:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#968: FILE: include/linux/fscache.h:202:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned *' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fscache_rw_complete_t' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#973: FILE: include/linux/fscache.h:207:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#976: FILE: include/linux/fscache.h:210:
+					 unsigned *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#980: FILE: include/linux/fscache.h:214:
+extern int __fscache_alloc_page(struct fscache_cookie *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#980: FILE: include/linux/fscache.h:214:
+extern int __fscache_alloc_page(struct fscache_cookie *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#980: FILE: include/linux/fscache.h:214:
+extern int __fscache_alloc_page(struct fscache_cookie *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#980: FILE: include/linux/fscache.h:214:
+extern int __fscache_alloc_page(struct fscache_cookie *, struct page *, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#981: FILE: include/linux/fscache.h:215:
+extern int __fscache_write_page(struct fscache_cookie *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#981: FILE: include/linux/fscache.h:215:
+extern int __fscache_write_page(struct fscache_cookie *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#981: FILE: include/linux/fscache.h:215:
+extern int __fscache_write_page(struct fscache_cookie *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#981: FILE: include/linux/fscache.h:215:
+extern int __fscache_write_page(struct fscache_cookie *, struct page *, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#982: FILE: include/linux/fscache.h:216:
+extern void __fscache_uncache_page(struct fscache_cookie *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cookie *' should also have an identifier name
#982: FILE: include/linux/fscache.h:216:
+extern void __fscache_uncache_page(struct fscache_cookie *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#982: FILE: include/linux/fscache.h:216:
+extern void __fscache_uncache_page(struct fscache_cookie *, struct page *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201678.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 42 warnings, 9 checks, 894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201678.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
