CHECK:LINE_SPACING: Please don't use multiple blank lines
#71: FILE: arch/x86/include/asm/ds.h:42:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#82: FILE: arch/x86/include/asm/ds.h:53:
+#define BTS_KERNEL (1 << dsf_bts_kernel)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#86: FILE: arch/x86/include/asm/ds.h:57:
+#define BTS_USER (1 << dsf_bts_user)

CHECK:BIT_MACRO: Prefer using the BIT macro
#96: FILE: arch/x86/include/asm/ds.h:67:
+#define BTS_TIMESTAMPS (1 << dsf_bts_timestamps)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#102: FILE: arch/x86/include/asm/ds.h:73:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: arch/x86/include/asm/ds.h:111:
+extern void ds_release_bts(struct bts_tracer *tracer);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: arch/x86/include/asm/ds.h:112:
+extern void ds_suspend_bts(struct bts_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: arch/x86/include/asm/ds.h:113:
+extern void ds_resume_bts(struct bts_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: arch/x86/include/asm/ds.h:114:
+extern void ds_release_pebs(struct pebs_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: arch/x86/include/asm/ds.h:115:
+extern void ds_suspend_pebs(struct pebs_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: arch/x86/include/asm/ds.h:116:
+extern void ds_resume_pebs(struct pebs_tracer *tracer);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: arch/x86/include/asm/ds.h:131:
+	/* pointers into the raw buffer:
+	   - to the first entry */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: arch/x86/include/asm/ds.h:131:
+	   - to the first entry */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: arch/x86/include/asm/ds.h:220:
+extern const struct bts_trace *ds_read_bts(struct bts_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: arch/x86/include/asm/ds.h:221:
+extern const struct pebs_trace *ds_read_pebs(struct pebs_tracer *tracer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: arch/x86/include/asm/ds.h:253:
+extern void ds_switch_to(struct task_struct *prev, struct task_struct *next);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#399: FILE: arch/x86/kernel/ds.c:40:
+	/* the size of one pointer-typed field in the DS structure and
+	   in the BTS and PEBS buffers in bytes;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#400: FILE: arch/x86/kernel/ds.c:41:
+	   this covers the first 8 DS fields related to buffer management. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#405: FILE: arch/x86/kernel/ds.c:46:
+	 * by enum ds_feature */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#409: FILE: arch/x86/kernel/ds.c:49:
 };
+static DEFINE_PER_CPU(struct ds_configuration, ds_cfg_array);

CHECK:BIT_MACRO: Prefer using the BIT macro
#415: FILE: arch/x86/kernel/ds.c:55:
+#define DS_ALIGNMENT (1 << 3)	/* BTS and PEBS buffer alignment */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/x86/kernel/ds.c:58:
+ (ds_cfg.ctl[dsf_bts] | ds_cfg.ctl[dsf_bts_kernel] | ds_cfg.ctl[dsf_bts_user] |\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/x86/kernel/ds.c:59:
+  ds_cfg.ctl[dsf_bts_overflow])$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#511: FILE: arch/x86/kernel/ds.c:224:
+	 * or the per_cpu context array */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: arch/x86/kernel/ds.c:227:
+	 * context is owned by a cpu */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#617: FILE: arch/x86/kernel/ds.c:336:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#658: FILE: arch/x86/kernel/ds.c:377:
+		 * we fill the entire buffer */

CHECK:SPACING: No space is necessary after a cast
#665: FILE: arch/x86/kernel/ds.c:384:
+		write_size = min((unsigned long) size, write_end - index);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#691: FILE: arch/x86/kernel/ds.c:410:
+
+

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#739: FILE: arch/x86/kernel/ds.c:458:
+	base += (ds_cfg.sizeof_field * field);;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#743: FILE: arch/x86/kernel/ds.c:462:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#788: FILE: arch/x86/kernel/ds.c:507:
+	if (MAX_SIZEOF_BTS < ds_cfg.sizeof_rec[ds_bts])

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#842: FILE: arch/x86/kernel/ds.c:558:
+static void ds_init_ds_trace(struct ds_trace *trace, enum ds_qualifier qual,
+			     void *base, size_t size, size_t ith,
+			     unsigned int flags) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#878: FILE: arch/x86/kernel/ds.c:593:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#957: FILE: arch/x86/kernel/ds.c:663:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#972: FILE: arch/x86/kernel/ds.c:678:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task == current'
#1114: FILE: arch/x86/kernel/ds.c:778:
+	if (!task || (task == current))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task == current'
#1163: FILE: arch/x86/kernel/ds.c:810:
+	if (!task || (task == current))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1417: FILE: arch/x86/kernel/ds.c:911:
 };
+static const struct ds_configuration ds_cfg_pentium_m = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1431: FILE: arch/x86/kernel/ds.c:923:
 };
+static const struct ds_configuration ds_cfg_core2 = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1450: FILE: arch/x86/kernel/ds.c:940:
+	printk(KERN_INFO "[ds] using %s configuration\n", ds_cfg.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1455: FILE: arch/x86/kernel/ds.c:944:
+		printk(KERN_INFO "[ds] bts not available\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1458: FILE: arch/x86/kernel/ds.c:947:
+		printk(KERN_INFO "[ds] pebs not available\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfg.size != child->bts_size'
#1954: FILE: arch/x86/kernel/ptrace.c:680:
+	if ((cfg.flags & PTRACE_BTS_O_ALLOC) &&
+	    (cfg.size != child->bts_size)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2275: FILE: include/linux/sched.h:1190:
+    size_t bts_size;$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2305: FILE: arch/x86/include/asm/thread_info.h:144:
+	(_TIF_IO_BITMAP|_TIF_DEBUGCTLMSR|_TIF_DS_AREA_MSR|_TIF_NOTSC)
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2305: FILE: arch/x86/include/asm/thread_info.h:144:
+	(_TIF_IO_BITMAP|_TIF_DEBUGCTLMSR|_TIF_DS_AREA_MSR|_TIF_NOTSC)
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2305: FILE: arch/x86/include/asm/thread_info.h:144:
+	(_TIF_IO_BITMAP|_TIF_DEBUGCTLMSR|_TIF_DS_AREA_MSR|_TIF_NOTSC)
 	                                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2402: FILE: arch/x86/include/asm/processor.h:761:
+    unsigned long debugctlmsr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2410: FILE: arch/x86/include/asm/processor.h:769:
+    return debugctlmsr;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193715.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 18 warnings, 31 checks, 2289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193715.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
