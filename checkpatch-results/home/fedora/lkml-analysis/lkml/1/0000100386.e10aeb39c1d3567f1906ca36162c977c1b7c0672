WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:1:
+/*****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#67: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:2:
+/*****************************************************************************
+* Copyright 2004 - 2008 Broadcom Corporation.  All rights reserved.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#82: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:17:
+/**
+*  @file    tmrHw_reg.h

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_MODULE_BASE_ADDR>
#94: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:29:
+#define tmrHw_MODULE_BASE_ADDR          MM_IO_BASE_TMR

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#97: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:32:
+/*
+This platform has four different timers running at different clock speed

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_FREQUENCY_MHZ>
#104: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:39:
+#define tmrHw_LOW_FREQUENCY_MHZ         25     /* Always 25MHz from XTAL */

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_FREQUENCY_HZ>
#105: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:40:
+#define tmrHw_LOW_FREQUENCY_HZ          25000000

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_FREQUENCY_MHZ>
#108: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:43:
+#define tmrHw_HIGH_FREQUENCY_MHZ        150    /* Always 150MHz for FPGA */

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_FREQUENCY_HZ>
#109: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:44:
+#define tmrHw_HIGH_FREQUENCY_HZ         150000000

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_LOW_RESOLUTION_CLOCK>
#115: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:50:
+#define tmrHw_LOW_RESOLUTION_CLOCK      tmrHw_LOW_FREQUENCY_HZ

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_HIGH_RESOLUTION_CLOCK>
#116: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:51:
+#define tmrHw_HIGH_RESOLUTION_CLOCK     tmrHw_HIGH_FREQUENCY_HZ

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#117: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:52:
+#define tmrHw_MAX_COUNT                 (0xFFFFFFFF)   /* maximum number of count a timer can count */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_MAX_COUNT>
#117: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:52:
+#define tmrHw_MAX_COUNT                 (0xFFFFFFFF)   /* maximum number of count a timer can count */

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_TIMER_NUM_COUNT>
#118: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:53:
+#define tmrHw_TIMER_NUM_COUNT           (4)    /* Number of timer module supported */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#120: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:55:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:56:
+       uint32_t LoadValue;     /* Load value for timer */$

CHECK:CAMELCASE: Avoid CamelCase: <LoadValue>
#121: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:56:
+       uint32_t LoadValue;     /* Load value for timer */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#121: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:56:
+       uint32_t LoadValue;     /* Load value for timer */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:57:
+       uint32_t CurrentValue;  /* Current value for timer */$

CHECK:CAMELCASE: Avoid CamelCase: <CurrentValue>
#122: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:57:
+       uint32_t CurrentValue;  /* Current value for timer */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#122: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:57:
+       uint32_t CurrentValue;  /* Current value for timer */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:58:
+       uint32_t Control;       /* Control register */$

CHECK:CAMELCASE: Avoid CamelCase: <Control>
#123: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:58:
+       uint32_t Control;       /* Control register */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#123: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:58:
+       uint32_t Control;       /* Control register */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:59:
+       uint32_t InterruptClear;        /* Interrupt clear register */$

CHECK:CAMELCASE: Avoid CamelCase: <InterruptClear>
#124: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:59:
+       uint32_t InterruptClear;        /* Interrupt clear register */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#124: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:59:
+       uint32_t InterruptClear;        /* Interrupt clear register */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:60:
+       uint32_t RawInterruptStatus;    /* Raw interrupt status */$

CHECK:CAMELCASE: Avoid CamelCase: <RawInterruptStatus>
#125: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:60:
+       uint32_t RawInterruptStatus;    /* Raw interrupt status */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#125: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:60:
+       uint32_t RawInterruptStatus;    /* Raw interrupt status */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:61:
+       uint32_t InterruptStatus;       /* Masked interrupt status */$

CHECK:CAMELCASE: Avoid CamelCase: <InterruptStatus>
#126: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:61:
+       uint32_t InterruptStatus;       /* Masked interrupt status */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#126: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:61:
+       uint32_t InterruptStatus;       /* Masked interrupt status */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:62:
+       uint32_t BackgroundLoad;        /* Background load value */$

CHECK:CAMELCASE: Avoid CamelCase: <BackgroundLoad>
#127: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:62:
+       uint32_t BackgroundLoad;        /* Background load value */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#127: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:62:
+       uint32_t BackgroundLoad;        /* Background load value */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:63:
+       uint32_t padding;       /* Padding register */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#128: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:63:
+       uint32_t padding;       /* Padding register */

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_REG_t>
#129: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:64:
+} tmrHw_REG_t;

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_TIMER_ENABLE>
#132: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:67:
+#define tmrHw_CONTROL_TIMER_ENABLE            0x00000080

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PERIODIC>
#133: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:68:
+#define tmrHw_CONTROL_PERIODIC                0x00000040

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_INTERRUPT_ENABLE>
#134: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:69:
+#define tmrHw_CONTROL_INTERRUPT_ENABLE        0x00000020

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_MASK>
#135: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:70:
+#define tmrHw_CONTROL_PRESCALE_MASK           0x0000000C

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_1>
#136: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:71:
+#define tmrHw_CONTROL_PRESCALE_1              0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_16>
#137: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:72:
+#define tmrHw_CONTROL_PRESCALE_16             0x00000004

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_PRESCALE_256>
#138: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:73:
+#define tmrHw_CONTROL_PRESCALE_256            0x00000008

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_32BIT>
#139: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:74:
+#define tmrHw_CONTROL_32BIT                   0x00000002

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_ONESHOT>
#140: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:75:
+#define tmrHw_CONTROL_ONESHOT                 0x00000001

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_FREE_RUNNING>
#141: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:76:
+#define tmrHw_CONTROL_FREE_RUNNING            0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_CONTROL_MODE_MASK>
#143: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:78:
+#define tmrHw_CONTROL_MODE_MASK               (tmrHw_CONTROL_PERIODIC | tmrHw_CONTROL_ONESHOT)

CHECK:CAMELCASE: Avoid CamelCase: <pTmrHw>
#145: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:80:
+#define pTmrHw ((volatile tmrHw_REG_t *)tmrHw_MODULE_BASE_ADDR)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#145: FILE: arch/arm/mach-bcmring/include/mach/csp/tmrHw_reg.h:80:
+#define pTmrHw ((volatile tmrHw_REG_t *)tmrHw_MODULE_BASE_ADDR)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#154: FILE: arch/arm/mach-bcmring/include/mach/timer.h:1:
+/*****************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#155: FILE: arch/arm/mach-bcmring/include/mach/timer.h:2:
+/*****************************************************************************
+* Copyright 2004 - 2008 Broadcom Corporation.  All rights reserved.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#169: FILE: arch/arm/mach-bcmring/include/mach/timer.h:16:
+/*
+*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#190: FILE: arch/arm/mach-bcmring/include/mach/timer.h:37:
+typedef unsigned int timer_tick_count_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#191: FILE: arch/arm/mach-bcmring/include/mach/timer.h:38:
+typedef unsigned int timer_tick_rate_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#192: FILE: arch/arm/mach-bcmring/include/mach/timer.h:39:
+typedef unsigned int timer_msec_t;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#198: FILE: arch/arm/mach-bcmring/include/mach/timer.h:45:
+/****************************************************************************
+*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#206: FILE: arch/arm/mach-bcmring/include/mach/timer.h:53:
+/****************************************************************************
+*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#214: FILE: arch/arm/mach-bcmring/include/mach/timer.h:61:
+/****************************************************************************
+*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#222: FILE: arch/arm/mach-bcmring/include/mach/timer.h:69:
+/****************************************************************************
+*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#237: FILE: arch/arm/mach-bcmring/timer.c:1:
+/*****************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#238: FILE: arch/arm/mach-bcmring/timer.c:2:
+/*****************************************************************************
+* Copyright 2003 - 2008 Broadcom Corporation.  All rights reserved.

WARNING:TYPO_SPELLING: 'syncrhonized' may be misspelled - perhaps 'synchronized'?
#263: FILE: arch/arm/mach-bcmring/timer.c:27:
+/* Timer 1 provides 25MHz resolution syncrhonized to scheduling and APM timing */
                                      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'freqeuncy' may be misspelled - perhaps 'frequency'?
#264: FILE: arch/arm/mach-bcmring/timer.c:28:
+/* Timer 3 provides bus freqeuncy sychronized to ACLK, but spread spectrum will */
                         ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/arm/mach-bcmring/timer.c:35:
+       return tmrHw_getCountRate(PROF_TIMER);$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_getCountRate>
#271: FILE: arch/arm/mach-bcmring/timer.c:35:
+       return tmrHw_getCountRate(PROF_TIMER);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/arm/mach-bcmring/timer.c:40:
+       return tmrHw_GetCurrentCount(PROF_TIMER);       /* change downcounter to upcounter */$

CHECK:CAMELCASE: Avoid CamelCase: <tmrHw_GetCurrentCount>
#276: FILE: arch/arm/mach-bcmring/timer.c:40:
+       return tmrHw_GetCurrentCount(PROF_TIMER);       /* change downcounter to upcounter */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/arm/mach-bcmring/timer.c:45:
+       static int tickRateMsec;$

CHECK:CAMELCASE: Avoid CamelCase: <tickRateMsec>
#281: FILE: arch/arm/mach-bcmring/timer.c:45:
+       static int tickRateMsec;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/arm/mach-bcmring/timer.c:47:
+       if (tickRateMsec == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#283: FILE: arch/arm/mach-bcmring/timer.c:47:
+       if (tickRateMsec == 0) {
+               tickRateMsec = timer_get_tick_rate() / 1000;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#283: FILE: arch/arm/mach-bcmring/timer.c:47:
+       if (tickRateMsec == 0) {
+               tickRateMsec = timer_get_tick_rate() / 1000;
+       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: arch/arm/mach-bcmring/timer.c:48:
+               tickRateMsec = timer_get_tick_rate() / 1000;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: arch/arm/mach-bcmring/timer.c:48:
+               tickRateMsec = timer_get_tick_rate() / 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: arch/arm/mach-bcmring/timer.c:49:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: arch/arm/mach-bcmring/timer.c:51:
+       return ticks / tickRateMsec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/arm/mach-bcmring/timer.c:56:
+       return timer_ticks_to_msec(timer_get_tick_count());$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#295: FILE: arch/arm/mach-bcmring/timer.c:59:
+EXPORT_SYMBOL(timer_get_tick_count);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#296: FILE: arch/arm/mach-bcmring/timer.c:60:
+EXPORT_SYMBOL(timer_ticks_to_msec);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#297: FILE: arch/arm/mach-bcmring/timer.c:61:
+EXPORT_SYMBOL(timer_get_tick_rate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#298: FILE: arch/arm/mach-bcmring/timer.c:62:
+EXPORT_SYMBOL(timer_get_msec);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 44 warnings, 40 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
