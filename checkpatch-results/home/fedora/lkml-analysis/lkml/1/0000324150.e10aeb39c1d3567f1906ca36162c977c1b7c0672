CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: arch/s390/mm/vmem.c:81:
+	memcpy(pud + 1, pud, (PTRS_PER_PUD - 1)*sizeof(pud_t));
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: include/asm-s390/pgalloc.h:82:
+	unsigned long *table = crst_table_alloc(mm, mm->context.noexec);
+	if (table)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#133: FILE: include/asm-s390/pgalloc.h:84:
+	return (pud_t *) table;

CHECK:SPACING: No space is necessary after a cast
#135: FILE: include/asm-s390/pgalloc.h:86:
+#define pud_free(mm, pud) crst_table_free(mm, (unsigned long *) pud)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#135: FILE: include/asm-s390/pgalloc.h:86:
+}
+#define pud_free(mm, pud) crst_table_free(mm, (unsigned long *) pud)

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: include/asm-s390/pgtable.h:73:
+#define PGDIR_SIZE	(1UL << PGDIR_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#182: FILE: include/asm-s390/pgtable.h:74:
+#define PGDIR_MASK	(~(PGDIR_SIZE-1))
                   	             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#244: FILE: include/asm-s390/pgtable.h:536:
+static inline void pgd_clear_kernel(pgd_t * pgd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: include/asm-s390/pgtable.h:541:
+static inline void pgd_clear(pgd_t * pgd)

CHECK:SPACING: No space is necessary after a cast
#270: FILE: include/asm-s390/pgtable.h:844:
+	pud_t *pud = (pud_t *) pgd_deref(*pgd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#271: FILE: include/asm-s390/pgtable.h:845:
+	pud_t *pud = (pud_t *) pgd_deref(*pgd);
+	return pud  + pud_index(address);

CHECK:BIT_MACRO: Prefer using the BIT macro
#287: FILE: include/asm-s390/processor.h:67:
+#define TASK_SIZE		(1UL << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#288: FILE: include/asm-s390/processor.h:68:
+#define TASK_UNMAPPED_BASE	(1UL << 30)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: include/asm-s390/processor.h:72:
+#define TASK_SIZE_OF(tsk)	(test_tsk_thread_flag(tsk,TIF_31BIT) ? \
                          	                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#310: FILE: include/asm-s390/processor.h:83:
+#define STACK_TOP		(1UL << 31)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#312: FILE: include/asm-s390/processor.h:85:
+#define STACK_TOP		(1UL << (test_thread_flag(TIF_31BIT) ? 31:53))
                  		                                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#389: FILE: include/asm-s390/tlb.h:132:
+	if (!tlb->fullmm) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#393: FILE: include/asm-s390/tlb.h:136:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324150.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 2 warnings, 13 checks, 309 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324150.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
