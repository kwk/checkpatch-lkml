WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#67: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#86: FILE: drivers/input/lirc/Kconfig:15:
+config LIRC_DEV
+	tristate "LIRC device loadable module support"
+	default m
+	help
+	  LIRC device loadable module support, required for most LIRC drivers
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#92: FILE: drivers/input/lirc/Kconfig:21:
+config LIRC_ATIUSB
+	tristate "ATI RF USB Receiver support"
+	default m
+	depends on LIRC_DEV
+	help
+	  Driver for the ATI USB RF remote receiver
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#99: FILE: drivers/input/lirc/Kconfig:28:
+config LIRC_BT829
+	tristate "BT829 based hardware"
+	default m
+	depends on LIRC_DEV
+	help
+	  Driver for the IR interface on BT829-based hardware
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#106: FILE: drivers/input/lirc/Kconfig:35:
+config LIRC_CMDIR
+	tristate "CommandIR USB Transceiver"
+	default m
+	depends on LIRC_DEV
+	help
+	  Driver for the CommandIR USB Transceiver
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#113: FILE: drivers/input/lirc/Kconfig:42:
+config LIRC_I2C
+	tristate "I2C Based IR Receivers"
+	default m
+	depends on LIRC_DEV
+	help
+	  Driver for I2C-based IR receivers, such as those commonly
+	  found onboard Hauppauge PVR-150/250/350 video capture cards
+

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#225: FILE: drivers/input/lirc/Makefile:6:
+EXTRA_CFLAGS =-DIRCTL_DEV_MAJOR=61 -DLIRC_SERIAL_TRANSMITTER -I$(src)

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#251: FILE: drivers/input/lirc/commandir.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#288: FILE: drivers/input/lirc/commandir.c:38:
+static struct usb_device_id cmdir_table[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <curTXFill>
#304: FILE: drivers/input/lirc/commandir.c:54:
+static int curTXFill;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddr>
#315: FILE: drivers/input/lirc/commandir.c:65:
+	__u8 bulk_in_endpointAddr; /* the address of the bulk in endpoint */

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddr>
#316: FILE: drivers/input/lirc/commandir.c:66:
+	__u8 bulk_out_endpointAddr; /* the address of the bulk out endpoint */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#319: FILE: drivers/input/lirc/commandir.c:69:
+};
+#define to_skel_dev(d) container_of(d, struct usb_skel, kref)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#321: FILE: drivers/input/lirc/commandir.c:71:
+static struct file_operations cmdir_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#329: FILE: drivers/input/lirc/commandir.c:79:
+ * and to have the device registered with devfs and the driver core */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#334: FILE: drivers/input/lirc/commandir.c:84:
+	 *		S_IRGRP | S_IWGRP | S_IROTH, */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: drivers/input/lirc/commandir.c:95:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#358: FILE: drivers/input/lirc/commandir.c:108:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/input/lirc/commandir.c:142:
+		err("%s - error, can't find device for minor %d",
+		     __func__, subminor);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#424: FILE: drivers/input/lirc/commandir.c:174:
+	if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#436: FILE: drivers/input/lirc/commandir.c:186:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#440: FILE: drivers/input/lirc/commandir.c:190:
+		    (endpoint->bEndpointAddress & USB_DIR_IN) &&

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#441: FILE: drivers/input/lirc/commandir.c:191:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#444: FILE: drivers/input/lirc/commandir.c:194:
+			buffer_size = endpoint->wMaxPacketSize;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#482: FILE: drivers/input/lirc/commandir.c:232:
+		minor = minor-USB_CMDIR_MINOR_BASE;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: drivers/input/lirc/commandir.c:247:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#519: FILE: drivers/input/lirc/commandir.c:269:
+		minor = minor-USB_CMDIR_MINOR_BASE;
 		             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#542: FILE: drivers/input/lirc/commandir.c:292:
+	if (dev == NULL)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#556: FILE: drivers/input/lirc/commandir.c:306:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#563: FILE: drivers/input/lirc/commandir.c:313:
+				       USB_CMDIR_MINOR_BASE+device_num);
 				                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#579: FILE: drivers/input/lirc/commandir.c:329:
+		multiplier = multiplier*0x10;
 		                       ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#584: FILE: drivers/input/lirc/commandir.c:334:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#601: FILE: drivers/input/lirc/commandir.c:351:
+	return;
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: drivers/input/lirc/commandir.c:361:
+^I * ^I^I " TX Enabled: 1, 2, 3, 4\n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: drivers/input/lirc/commandir.c:362:
+^I * ^I^I " RX: commandirx\n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#613: FILE: drivers/input/lirc/commandir.c:363:
+^I * ^I^I " LCD: commandirx\n" */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#613: FILE: drivers/input/lirc/commandir.c:363:
+	 * 		 " LCD: commandirx\n" */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#615: FILE: drivers/input/lirc/commandir.c:365:
+	cmdir_var[9] = ASCII0+device_num;
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#616: FILE: drivers/input/lirc/commandir.c:366:
+	cmdir_var[50] = ASCII0+rx_device;
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#617: FILE: drivers/input/lirc/commandir.c:367:
+	cmdir_var[67] = ASCII0+lcd_device;
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#624: FILE: drivers/input/lirc/commandir.c:374:
+		multiplier = multiplier*0x10;
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#626: FILE: drivers/input/lirc/commandir.c:376:
+	if (transmitters & (multiplier*0x01)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#631: FILE: drivers/input/lirc/commandir.c:381:
+	if (transmitters & (multiplier*0x02)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#634: FILE: drivers/input/lirc/commandir.c:384:
+			cmdir_var[next_pos-2] = ',';
 			                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#638: FILE: drivers/input/lirc/commandir.c:388:
+	if (transmitters & (multiplier*0x04)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#641: FILE: drivers/input/lirc/commandir.c:391:
+			cmdir_var[next_pos-2] = ',';
 			                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#645: FILE: drivers/input/lirc/commandir.c:395:
+	if (transmitters & (multiplier*0x08)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#648: FILE: drivers/input/lirc/commandir.c:398:
+			cmdir_var[next_pos-2] = ',';
 			                  ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#653: FILE: drivers/input/lirc/commandir.c:403:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#660: FILE: drivers/input/lirc/commandir.c:410:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#674: FILE: drivers/input/lirc/commandir.c:424:
+	if (((int)*ppos) == 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#681: FILE: drivers/input/lirc/commandir.c:431:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#692: FILE: drivers/input/lirc/commandir.c:442:
+	struct usb_interface *interface;
+	interface = usb_find_interface(&cmdir_driver,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: drivers/input/lirc/commandir.c:443:
+	interface = usb_find_interface(&cmdir_driver,
+			USB_CMDIR_MINOR_BASE+rx_device);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#693: FILE: drivers/input/lirc/commandir.c:443:
+			USB_CMDIR_MINOR_BASE+rx_device);
 			                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: drivers/input/lirc/commandir.c:454:
+	retval = usb_bulk_msg(dev->udev, usb_rcvbulkpipe(dev->udev,
+						dev->bulk_in_endpointAddr),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#706: FILE: drivers/input/lirc/commandir.c:456:
+		 &length, HZ*10);
 		            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#708: FILE: drivers/input/lirc/commandir.c:458:
+		if (!memcpy(buffer, dev->bulk_in_buffer, length))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#710: FILE: drivers/input/lirc/commandir.c:460:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#718: FILE: drivers/input/lirc/commandir.c:468:
+	/*
+	else {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#722: FILE: drivers/input/lirc/commandir.c:472:
+	/* printk(KERN_INFO "CommandIR Reporting TX buffer at %d bytes. \n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#723: FILE: drivers/input/lirc/commandir.c:473:
+^I * ^I  curTXFill); */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#723: FILE: drivers/input/lirc/commandir.c:473:
+	 * 	  curTXFill); */

CHECK:CAMELCASE: Avoid CamelCase: <changeType>
#734: FILE: drivers/input/lirc/commandir.c:484:
+	int changeType = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#740: FILE: drivers/input/lirc/commandir.c:490:
+	 * won't keep calling this function */

CHECK:CAMELCASE: Avoid CamelCase: <cNothing>
#761: FILE: drivers/input/lirc/commandir.c:511:
+	changeType = cNothing;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 0'
#770: FILE: drivers/input/lirc/commandir.c:520:
+			if ((i > 0) && ((local_buffer[i - 1] == 'R')
+			    || (local_buffer[i - 1] == 'r')))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#771: FILE: drivers/input/lirc/commandir.c:521:
+			if ((i > 0) && ((local_buffer[i - 1] == 'R')
+			    || (local_buffer[i - 1] == 'r')))

CHECK:CAMELCASE: Avoid CamelCase: <cRX>
#772: FILE: drivers/input/lirc/commandir.c:522:
+				changeType = cRX;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 1'
#776: FILE: drivers/input/lirc/commandir.c:526:
+			if ((i > 1) && ((local_buffer[i - 1] == 'E')
+			    || (local_buffer[i - 1] == 'e'))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#777: FILE: drivers/input/lirc/commandir.c:527:
+			if ((i > 1) && ((local_buffer[i - 1] == 'E')
+			    || (local_buffer[i - 1] == 'e'))) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#778: FILE: drivers/input/lirc/commandir.c:528:
+				if ((local_buffer[i-2] == 'R')
 				                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#779: FILE: drivers/input/lirc/commandir.c:529:
+				if ((local_buffer[i-2] == 'R')
+				    || (local_buffer[i-2] == 'r'))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#779: FILE: drivers/input/lirc/commandir.c:529:
+				    || (local_buffer[i-2] == 'r'))
 				                      ^

CHECK:CAMELCASE: Avoid CamelCase: <cRESET>
#780: FILE: drivers/input/lirc/commandir.c:530:
+					changeType = cRESET;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 0'
#785: FILE: drivers/input/lirc/commandir.c:535:
+			if ((i > 0) && ((local_buffer[i - 1] == 'F')
+			    || (local_buffer[i - 1] == 'f')))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#786: FILE: drivers/input/lirc/commandir.c:536:
+			if ((i > 0) && ((local_buffer[i - 1] == 'F')
+			    || (local_buffer[i - 1] == 'f')))

CHECK:CAMELCASE: Avoid CamelCase: <cFLASH>
#787: FILE: drivers/input/lirc/commandir.c:537:
+				changeType = cFLASH;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 0'
#791: FILE: drivers/input/lirc/commandir.c:541:
+			if ((i > 0) && ((local_buffer[i - 1] == 'L')
+			    || (local_buffer[i - 1] == 'l')))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#792: FILE: drivers/input/lirc/commandir.c:542:
+			if ((i > 0) && ((local_buffer[i - 1] == 'L')
+			    || (local_buffer[i - 1] == 'l')))

CHECK:CAMELCASE: Avoid CamelCase: <cLCD>
#793: FILE: drivers/input/lirc/commandir.c:543:
+				changeType = cLCD;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/input/lirc/commandir.c:563:
+					retval = write_core(ctrl_buffer,
+						MCU_CTRL_SIZE,

CHECK:BRACES: braces {} should be used on all arms of this statement
#816: FILE: drivers/input/lirc/commandir.c:566:
+					if (retval != MCU_CTRL_SIZE) {
[...]
+					} else
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#817: FILE: drivers/input/lirc/commandir.c:567:
+						if (retval == -ENODEV)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SPLIT_STRING: quoted string split across lines
#819: FILE: drivers/input/lirc/commandir.c:569:
+							err("Device %d "
+							    "unplugged", minor);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#820: FILE: drivers/input/lirc/commandir.c:570:
+						else

WARNING:SPLIT_STRING: quoted string split across lines
#822: FILE: drivers/input/lirc/commandir.c:572:
+							err("Error on write to "
+							    "%d", minor);

CHECK:BRACES: Unbalanced braces around else statement
#824: FILE: drivers/input/lirc/commandir.c:574:
+					} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/input/lirc/commandir.c:583:
+					retval = write_core(ctrl_buffer,
+						MCU_CTRL_SIZE,

CHECK:BRACES: braces {} should be used on all arms of this statement
#836: FILE: drivers/input/lirc/commandir.c:586:
+					if (retval != MCU_CTRL_SIZE) {
[...]
+					} else
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#837: FILE: drivers/input/lirc/commandir.c:587:
+						if (retval == -ENODEV)

WARNING:SPLIT_STRING: quoted string split across lines
#839: FILE: drivers/input/lirc/commandir.c:589:
+							err("Device %d "
+							    "unplugged", minor);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#840: FILE: drivers/input/lirc/commandir.c:590:
+						else

WARNING:SPLIT_STRING: quoted string split across lines
#842: FILE: drivers/input/lirc/commandir.c:592:
+							err("Error on write to "
+							    "%d", minor);

CHECK:BRACES: Unbalanced braces around else statement
#844: FILE: drivers/input/lirc/commandir.c:594:
+					} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'equalsign > 0'
#867: FILE: drivers/input/lirc/commandir.c:617:
+			if ((equalsign > 0) && (local_buffer[i] > 32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'local_buffer[i] > 32'
#867: FILE: drivers/input/lirc/commandir.c:617:
+			if ((equalsign > 0) && (local_buffer[i] > 32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'changeType != cNothing'
#875: FILE: drivers/input/lirc/commandir.c:625:
+	if ((changeType != cNothing) && (equalsign == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'equalsign == 0'
#875: FILE: drivers/input/lirc/commandir.c:625:
+	if ((changeType != cNothing) && (equalsign == 0))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#890: FILE: drivers/input/lirc/commandir.c:640:
+	 * mbodkin, Sept 8, 2005 */

WARNING:LINE_SPACING: Missing a blank line after declarations
#892: FILE: drivers/input/lirc/commandir.c:642:
+	int ret = 0;
+	if (debug_commandir == 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#894: FILE: drivers/input/lirc/commandir.c:644:
+		printk(KERN_INFO "cmdir_write at %d\n", (int)tp.tv_usec);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cmdir_write', this function's name, in a string
#894: FILE: drivers/input/lirc/commandir.c:644:
+		printk(KERN_INFO "cmdir_write at %d\n", (int)tp.tv_usec);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#899: FILE: drivers/input/lirc/commandir.c:649:
+		printk(KERN_INFO "cmdir_write returning 0\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cmdir_write', this function's name, in a string
#899: FILE: drivers/input/lirc/commandir.c:649:
+		printk(KERN_INFO "cmdir_write returning 0\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#904: FILE: drivers/input/lirc/commandir.c:654:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#911: FILE: drivers/input/lirc/commandir.c:661:
+	int ret = 0;
+	if ((nexttofill + 1) % (QUEUELENGTH - 1) == nexttosend) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#912: FILE: drivers/input/lirc/commandir.c:662:
+	if ((nexttofill + 1) % (QUEUELENGTH - 1) == nexttosend) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#914: FILE: drivers/input/lirc/commandir.c:664:
+		printk(KERN_INFO "Too many packets backlogged "

WARNING:SPLIT_STRING: quoted string split across lines
#915: FILE: drivers/input/lirc/commandir.c:665:
+		printk(KERN_INFO "Too many packets backlogged "
+		       "in CommandIR Queue.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#923: FILE: drivers/input/lirc/commandir.c:673:
+	 *        count, nexttofill); */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#930: FILE: drivers/input/lirc/commandir.c:680:
+
+}

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int send_queue() should probably be int send_queue(void)
#932: FILE: drivers/input/lirc/commandir.c:682:
+int send_queue()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#936: FILE: drivers/input/lirc/commandir.c:686:
+	int ret = 0;
+	if (debug_commandir == 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#938: FILE: drivers/input/lirc/commandir.c:688:
+		printk(KERN_INFO "Send_queue() at %d\n", (int)tp.tv_usec);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#951: FILE: drivers/input/lirc/commandir.c:701:
+			 * otherwise wait until room */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#955: FILE: drivers/input/lirc/commandir.c:705:
+					printk(KERN_INFO "Sending packet data "

WARNING:SPLIT_STRING: quoted string split across lines
#956: FILE: drivers/input/lirc/commandir.c:706:
+					printk(KERN_INFO "Sending packet data "
+					       "at %d\n", (int)tp.tv_usec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: drivers/input/lirc/commandir.c:709:
+				ret = cmdir_write_queue(ourbuffers[nexttosend],
+				      ourbufferlengths[nexttosend], NULL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#964: FILE: drivers/input/lirc/commandir.c:714:
+^I^I^I^I^I * ^I(nexttosend + 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#965: FILE: drivers/input/lirc/commandir.c:715:
+^I^I^I^I^I * ^I% (QUEUELENGTH - 1); */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#965: FILE: drivers/input/lirc/commandir.c:715:
+					 * 	% (QUEUELENGTH - 1); */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#968: FILE: drivers/input/lirc/commandir.c:718:
+					return 0; /*send_queue(); */
+				} else

CHECK:BRACES: Unbalanced braces around else statement
#968: FILE: drivers/input/lirc/commandir.c:718:
+				} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#972: FILE: drivers/input/lirc/commandir.c:722:
+				return 1;
+			} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#975: FILE: drivers/input/lirc/commandir.c:725:
+					printk(KERN_INFO "Not time to send yet "

WARNING:SPLIT_STRING: quoted string split across lines
#976: FILE: drivers/input/lirc/commandir.c:726:
+					printk(KERN_INFO "Not time to send yet "
+					       "- starting timer at %d.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#978: FILE: drivers/input/lirc/commandir.c:728:
+					printk(KERN_INFO "Enabling timer.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#985: FILE: drivers/input/lirc/commandir.c:735:
+				printk(KERN_INFO "No more data to send %d!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#995: FILE: drivers/input/lirc/commandir.c:745:
+			printk(KERN_INFO "Already sending\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1001: FILE: drivers/input/lirc/commandir.c:751:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1005: FILE: drivers/input/lirc/commandir.c:755:
+	 * for non-zero last_tx's. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1008: FILE: drivers/input/lirc/commandir.c:758:
+	int now_sec = 0, now_usec = 0;
+	if (debug_commandir == 1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1009: FILE: drivers/input/lirc/commandir.c:759:
+		printk(KERN_INFO "waittotx(%d)\n", usecs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1029: FILE: drivers/input/lirc/commandir.c:779:
+			printk(KERN_INFO "Testing for the right second, now = "

WARNING:SPLIT_STRING: quoted string split across lines
#1030: FILE: drivers/input/lirc/commandir.c:780:
+			printk(KERN_INFO "Testing for the right second, now = "
+			       "%d %d, wait = %d %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1036: FILE: drivers/input/lirc/commandir.c:786:
+				printk(KERN_INFO "Setting last_tx_sec to %d.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'now_sec == wait_until_sec'
#1043: FILE: drivers/input/lirc/commandir.c:793:
+		if ((now_sec == wait_until_sec)
+		    && (now_usec > wait_until_usec)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'now_usec > wait_until_usec'
#1043: FILE: drivers/input/lirc/commandir.c:793:
+		if ((now_sec == wait_until_sec)
+		    && (now_usec > wait_until_usec)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1044: FILE: drivers/input/lirc/commandir.c:794:
+		if ((now_sec == wait_until_sec)
+		    && (now_usec > wait_until_usec)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1046: FILE: drivers/input/lirc/commandir.c:796:
+				printk(KERN_INFO "Setting last_tx_sec to %d.\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: drivers/input/lirc/commandir.c:811:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1083: FILE: drivers/input/lirc/commandir.c:833:
+			printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1097: FILE: drivers/input/lirc/commandir.c:847:
+			if (transmitters & (0x01*multiplier))
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1099: FILE: drivers/input/lirc/commandir.c:849:
+			if (transmitters & (0x02*multiplier))
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1101: FILE: drivers/input/lirc/commandir.c:851:
+			if (transmitters & (0x04*multiplier))
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1103: FILE: drivers/input/lirc/commandir.c:853:
+			if (transmitters & (0x08*multiplier))
 			                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1109: FILE: drivers/input/lirc/commandir.c:859:
+				retval = write_core(buffer, count,
+					 callback_fct, i);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1120: FILE: drivers/input/lirc/commandir.c:870:
+			multiplier = multiplier*0x10;
 			                       ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1123: FILE: drivers/input/lirc/commandir.c:873:
+		return retval;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1126: FILE: drivers/input/lirc/commandir.c:876:
+		return write_core(buffer, count, callback_fct, lcd_device);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1129: FILE: drivers/input/lirc/commandir.c:879:
+		return write_core(buffer, count, callback_fct, def_device);
+		break;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1134: FILE: drivers/input/lirc/commandir.c:884:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1145: FILE: drivers/input/lirc/commandir.c:895:
+	char *buf = NULL;
+	interface = usb_find_interface(&cmdir_driver,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: drivers/input/lirc/commandir.c:896:
+	interface = usb_find_interface(&cmdir_driver,
+			USB_CMDIR_MINOR_BASE + device_num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1163: FILE: drivers/input/lirc/commandir.c:913:
+	buf = usb_buffer_alloc(dev->udev, count,
+		GFP_KERNEL, &urb->transfer_dma);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callback_fct"
#1173: FILE: drivers/input/lirc/commandir.c:923:
+	if (callback_fct == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1175: FILE: drivers/input/lirc/commandir.c:925:
+		usb_fill_bulk_urb(urb, dev->udev,
+			  usb_sndbulkpipe(dev->udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1176: FILE: drivers/input/lirc/commandir.c:926:
+			  usb_sndbulkpipe(dev->udev,
+				dev->bulk_out_endpointAddr),

CHECK:SPACING: No space is necessary after a cast
#1177: FILE: drivers/input/lirc/commandir.c:927:
+			  buf, count, (void *) cmdir_write_bulk_callback, dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1180: FILE: drivers/input/lirc/commandir.c:930:
+		usb_fill_bulk_urb(urb, dev->udev,
+			  usb_sndbulkpipe(dev->udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1181: FILE: drivers/input/lirc/commandir.c:931:
+			  usb_sndbulkpipe(dev->udev,
+				dev->bulk_out_endpointAddr),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1195: FILE: drivers/input/lirc/commandir.c:945:
+	 * core will eventually free it entirely */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1208: FILE: drivers/input/lirc/commandir.c:958:
+	struct usb_skel *dev;
+	dev = (struct usb_skel *)urb->context;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1211: FILE: drivers/input/lirc/commandir.c:961:
+		printk(KERN_INFO "callback()\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1218: FILE: drivers/input/lirc/commandir.c:968:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1239: FILE: drivers/input/lirc/commandir.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1275: FILE: drivers/input/lirc/commandir.h:37:
+extern int cmdir_write(unsigned char *buffer, int count,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1277: FILE: drivers/input/lirc/commandir.h:39:
+extern ssize_t cmdir_read(unsigned char *buffer, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1278: FILE: drivers/input/lirc/commandir.h:40:
+extern int set_tx_channels(unsigned int next_tx);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1280: FILE: drivers/input/lirc/commandir.h:42:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1313: FILE: drivers/input/lirc/lirc.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1331: FILE: drivers/input/lirc/lirc.h:19:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1344: FILE: drivers/input/lirc/lirc.h:32:
+
+

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1374: FILE: drivers/input/lirc/lirc.h:62:
+#define LIRC_CAN_SEND(x) ((x)&LIRC_CAN_SEND_MASK)
                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1375: FILE: drivers/input/lirc/lirc.h:63:
+#define LIRC_CAN_REC(x) ((x)&LIRC_CAN_REC_MASK)
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1406: FILE: drivers/input/lirc/lirc.h:94:
+/* to set a range use
+   LIRC_SET_REC_DUTY_CYCLE_RANGE/LIRC_SET_REC_CARRIER_RANGE with the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1408: FILE: drivers/input/lirc/lirc.h:96:
+   LIRC_SET_REC_DUTY_CYCLE/LIRC_SET_REC_CARRIER with the upper bound */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1422: FILE: drivers/input/lirc/lirc_atiusb.c:1:
+/* lirc_atiusb - USB remote support for LIRC

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1454: FILE: drivers/input/lirc/lirc_atiusb.c:33:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1455: FILE: drivers/input/lirc/lirc_atiusb.c:34:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1508: FILE: drivers/input/lirc/lirc_atiusb.c:87:
+			printk(KERN_DEBUG fmt, ## args);	\

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1516: FILE: drivers/input/lirc/lirc_atiusb.c:95:
+ * It is used for static arrays. */

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#1522: FILE: drivers/input/lirc/lirc_atiusb.c:101:
+static int emit_updown;		/* send seperate press/release codes (rw2) */
                        		        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1594: FILE: drivers/input/lirc/lirc_atiusb.c:173:
+	 * same manufacterer */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1601: FILE: drivers/input/lirc/lirc_atiusb.c:180:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1640: FILE: drivers/input/lirc/lirc_atiusb.c:219:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1677: FILE: drivers/input/lirc/lirc_atiusb.c:256:
+ * the given list_head reference within, pointed at by link. */

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1678: FILE: drivers/input/lirc/lirc_atiusb.c:257:
+#define get_iep_from_link(link) \
+		list_entry((link), struct in_endpt, iep_list_link);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1680: FILE: drivers/input/lirc/lirc_atiusb.c:259:
+#define get_irctl_from_link(link) \
+		list_entry((link), struct irctl, remote_list_link);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1698: FILE: drivers/input/lirc/lirc_atiusb.c:277:
+	memcpy(buf+1, data, LO(cmd));
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1700: FILE: drivers/input/lirc/lirc_atiusb.c:279:
+	memcpy(oep->buf, buf, LO(cmd)+1);
 	                             ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1714: FILE: drivers/input/lirc/lirc_atiusb.c:293:
+	while (timeout && (oep->urb->status == -EINPROGRESS)
+	       && !(oep->send_flags & SEND_FLAG_COMPLETE)) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#1716: FILE: drivers/input/lirc/lirc_atiusb.c:295:
+		rmb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1736: FILE: drivers/input/lirc/lirc_atiusb.c:315:
+	printk(DRIVER_NAME "[%d]: usb remote disconnected\n", devnum);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1740: FILE: drivers/input/lirc/lirc_atiusb.c:319:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1749: FILE: drivers/input/lirc/lirc_atiusb.c:328:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_inc', this function's name, in a string
#1749: FILE: drivers/input/lirc/lirc_atiusb.c:328:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1771: FILE: drivers/input/lirc/lirc_atiusb.c:350:
+				printk(DRIVER_NAME "[%d]: open result = %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1772: FILE: drivers/input/lirc/lirc_atiusb.c:351:
+				printk(DRIVER_NAME "[%d]: open result = %d "
+				       "error submitting urb\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1792: FILE: drivers/input/lirc/lirc_atiusb.c:371:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_dec', this function's name, in a string
#1792: FILE: drivers/input/lirc/lirc_atiusb.c:371:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1821: FILE: drivers/input/lirc/lirc_atiusb.c:400:
+		snprintf(codes+i*3, 4, "%02x ", buf[i] & 0xFF);
 		              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1821: FILE: drivers/input/lirc/lirc_atiusb.c:400:
+		snprintf(codes+i*3, 4, "%02x ", buf[i] & 0xFF);
 		                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1822: FILE: drivers/input/lirc/lirc_atiusb.c:401:
+	printk(DRIVER_NAME "[%d]: data received %s (ep=0x%x length=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1823: FILE: drivers/input/lirc/lirc_atiusb.c:402:
+	printk(DRIVER_NAME "[%d]: data received %s (ep=0x%x length=%d)\n",
+		iep->ir->devnum, codes, iep->ep->bEndpointAddress, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1837: FILE: drivers/input/lirc/lirc_atiusb.c:416:
+	chan = ((iep->buf[len-1]>>4) & 0x0F);
 	                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1837: FILE: drivers/input/lirc/lirc_atiusb.c:416:
+	chan = ((iep->buf[len-1]>>4) & 0x0F);
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1841: FILE: drivers/input/lirc/lirc_atiusb.c:420:
+		iep->buf[len-1] &= 0x0F;
 		            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1842: FILE: drivers/input/lirc/lirc_atiusb.c:421:
+		iep->buf[len-3] -= (chan<<4);
 		            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1842: FILE: drivers/input/lirc/lirc_atiusb.c:421:
+		iep->buf[len-3] -= (chan<<4);
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1845: FILE: drivers/input/lirc/lirc_atiusb.c:424:
+	if (!((1U<<chan) & mask)) {
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1847: FILE: drivers/input/lirc/lirc_atiusb.c:426:
+			ir->devnum, chan+1);
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1850: FILE: drivers/input/lirc/lirc_atiusb.c:429:
+	dprintk(DRIVER_NAME "[%d]: accept channel %d\n", ir->devnum, chan+1);
 	                                                                 ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1856: FILE: drivers/input/lirc/lirc_atiusb.c:435:
+		if (memcmp(iep->old, iep->buf, len) == 0) {
[...]
+		} else
[...]

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1857: FILE: drivers/input/lirc/lirc_atiusb.c:436:
+			if (iep->old_jiffies + repeat_jiffies > jiffies)

CHECK:BRACES: Unbalanced braces around else statement
#1859: FILE: drivers/input/lirc/lirc_atiusb.c:438:
+		} else

WARNING:TYPO_SPELLING: 'seperated' may be misspelled - perhaps 'separated'?
#1869: FILE: drivers/input/lirc/lirc_atiusb.c:448:
+ * prior version, this function was seperated out to clarify the sanitization
                                     ^^^^^^^^^

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#1875: FILE: drivers/input/lirc/lirc_atiusb.c:454:
+ *    auxilliary mode state, which is set by the mode buttons Aux1 through
       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#1887: FILE: drivers/input/lirc/lirc_atiusb.c:466:
+ *    handle this we need a seperate parameter, like rw2modes, with the
                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#1953: FILE: drivers/input/lirc/lirc_atiusb.c:532:
+			"[%d]: Huh?  Abnormal length (%d) buffer recieved.\n",
 			                                         ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1968: FILE: drivers/input/lirc/lirc_atiusb.c:547:
+		 * mode-set (aux) keys */

WARNING:SPLIT_STRING: quoted string split across lines
#1983: FILE: drivers/input/lirc/lirc_atiusb.c:562:
+					"[%d]: ignore dummy code 0x%x "
+					"(ep=0x%x)\n", ir->devnum,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#1993: FILE: drivers/input/lirc/lirc_atiusb.c:572:
+			else if (emit_updown == 1) /* normalize keycode */
+				 buf[2] = RW2_PRESSRELEASE_KEYCODE;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2007: FILE: drivers/input/lirc/lirc_atiusb.c:586:
+		if (mdeadzone > (x*x+y*y)) {
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2007: FILE: drivers/input/lirc/lirc_atiusb.c:586:
+		if (mdeadzone > (x*x+y*y)) {
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2007: FILE: drivers/input/lirc/lirc_atiusb.c:586:
+		if (mdeadzone > (x*x+y*y)) {
 		                      ^

WARNING:TYPO_SPELLING: 'coordintes' may be misspelled - perhaps 'coordinates'?
#2026: FILE: drivers/input/lirc/lirc_atiusb.c:605:
+		/* convert coordintes(angle) into compass direction */
 		           ^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2027: FILE: drivers/input/lirc/lirc_atiusb.c:606:
+		if (x == 0)
[...]
+		else if (y == 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2031: FILE: drivers/input/lirc/lirc_atiusb.c:610:
+		else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2032: FILE: drivers/input/lirc/lirc_atiusb.c:611:
+			if (abs(1000*y/x) > mgradient)
 			            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2032: FILE: drivers/input/lirc/lirc_atiusb.c:611:
+			if (abs(1000*y/x) > mgradient)
 			              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2034: FILE: drivers/input/lirc/lirc_atiusb.c:613:
+			if (abs(1000*x/y) > mgradient)
 			            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2034: FILE: drivers/input/lirc/lirc_atiusb.c:613:
+			if (abs(1000*x/y) > mgradient)
 			              ^

WARNING:SPLIT_STRING: quoted string split across lines
#2056: FILE: drivers/input/lirc/lirc_atiusb.c:635:
+		dprintk(DRIVER_NAME ": We got %d instead of %d bytes from xbox "
+			"ir.. ?\n", len, clen);

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2062: FILE: drivers/input/lirc/lirc_atiusb.c:641:
+		if (iep->old_jiffies + repeat_jiffies > jiffies)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2066: FILE: drivers/input/lirc/lirc_atiusb.c:645:
+		 * the last two bytes are.. some kind of clock? */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2096: FILE: drivers/input/lirc/lirc_atiusb.c:675:
+	switch (urb->status) {
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#2152: FILE: drivers/input/lirc/lirc_atiusb.c:731:
+	wmb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#2153: FILE: drivers/input/lirc/lirc_atiusb.c:732:
+	if (waitqueue_active(&oep->wait))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2157: FILE: drivers/input/lirc/lirc_atiusb.c:736:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2169: FILE: drivers/input/lirc/lirc_atiusb.c:748:
+	struct irctl *ir;
+	dprintk(DRIVER_NAME ": free_in_endpt(%p, %d)\n", iep, mem_failure);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_in_endpt', this function's name, in a string
#2169: FILE: drivers/input/lirc/lirc_atiusb.c:748:
+	dprintk(DRIVER_NAME ": free_in_endpt(%p, %d)\n", iep, mem_failure);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_in_endpt', this function's name, in a string
#2175: FILE: drivers/input/lirc/lirc_atiusb.c:754:
+		dprintk(DRIVER_NAME ": free_in_endpt: WARNING! null ir\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_in_endpt', this function's name, in a string
#2183: FILE: drivers/input/lirc/lirc_atiusb.c:762:
+		dprintk(DRIVER_NAME "[%d]: free_in_endpt removing ep=0x%0x "

WARNING:SPLIT_STRING: quoted string split across lines
#2184: FILE: drivers/input/lirc/lirc_atiusb.c:763:
+		dprintk(DRIVER_NAME "[%d]: free_in_endpt removing ep=0x%0x "
+			"from list\n", ir->devnum, iep->ep->bEndpointAddress);

CHECK:BRACES: Unbalanced braces around else statement
#2190: FILE: drivers/input/lirc/lirc_atiusb.c:769:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_in_endpt', this function's name, in a string
#2191: FILE: drivers/input/lirc/lirc_atiusb.c:770:
+			dprintk(DRIVER_NAME "[%d]: free_in_endpt null urb!\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2219: FILE: drivers/input/lirc/lirc_atiusb.c:798:
+ *	len -= (len % CODE_LENGTH); */

WARNING:SPLIT_STRING: quoted string split across lines
#2223: FILE: drivers/input/lirc/lirc_atiusb.c:802:
+	dprintk(DRIVER_NAME "[%d]: acceptable inbound endpoint (0x%x) found "
+		"(maxp=%d len=%d)\n", ir->devnum, addr, maxp, len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2250: FILE: drivers/input/lirc/lirc_atiusb.c:829:
+		printk(DRIVER_NAME "[%d]: ep=0x%x out of memory (code=%d)\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#2263: FILE: drivers/input/lirc/lirc_atiusb.c:842:
+	struct irctl *ir;
+	dprintk(DRIVER_NAME ": free_out_endpt(%p, %d)\n", oep, mem_failure);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_out_endpt', this function's name, in a string
#2263: FILE: drivers/input/lirc/lirc_atiusb.c:842:
+	dprintk(DRIVER_NAME ": free_out_endpt(%p, %d)\n", oep, mem_failure);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_out_endpt', this function's name, in a string
#2271: FILE: drivers/input/lirc/lirc_atiusb.c:850:
+		dprintk(DRIVER_NAME ": free_out_endpt: WARNING! null ir\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_out_endpt', this function's name, in a string
#2283: FILE: drivers/input/lirc/lirc_atiusb.c:862:
+			dprintk(DRIVER_NAME "[%d]: free_out_endpt: null urb!\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#2308: FILE: drivers/input/lirc/lirc_atiusb.c:887:
+	if (!oep)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2310: FILE: drivers/input/lirc/lirc_atiusb.c:889:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2318: FILE: drivers/input/lirc/lirc_atiusb.c:897:
+		if (!oep->buf)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2320: FILE: drivers/input/lirc/lirc_atiusb.c:899:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2328: FILE: drivers/input/lirc/lirc_atiusb.c:907:
+		printk(DRIVER_NAME "[%d]: ep=0x%x out of memory (code=%d)\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#2339: FILE: drivers/input/lirc/lirc_atiusb.c:918:
+	struct in_endpt *in;
+	dprintk(DRIVER_NAME ": free_irctl(%p, %d)\n", ir, mem_failure);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_irctl', this function's name, in a string
#2339: FILE: drivers/input/lirc/lirc_atiusb.c:918:
+	dprintk(DRIVER_NAME ": free_irctl(%p, %d)\n", ir, mem_failure);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_irctl', this function's name, in a string
#2359: FILE: drivers/input/lirc/lirc_atiusb.c:938:
+			dprintk(DRIVER_NAME "[%d]: free_irctl: removing "

WARNING:SPLIT_STRING: quoted string split across lines
#2360: FILE: drivers/input/lirc/lirc_atiusb.c:939:
+			dprintk(DRIVER_NAME "[%d]: free_irctl: removing "
+				"remote from list\n", ir->devnum);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_irctl', this function's name, in a string
#2362: FILE: drivers/input/lirc/lirc_atiusb.c:941:
+			dprintk(DRIVER_NAME "[%d]: free_irctl: refcount at %d,"

WARNING:SPLIT_STRING: quoted string split across lines
#2363: FILE: drivers/input/lirc/lirc_atiusb.c:942:
+			dprintk(DRIVER_NAME "[%d]: free_irctl: refcount at %d,"
+				"aborting free_irctl\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_irctl', this function's name, in a string
#2363: FILE: drivers/input/lirc/lirc_atiusb.c:942:
+				"aborting free_irctl\n",

CHECK:BRACES: Unbalanced braces around else statement
#2380: FILE: drivers/input/lirc/lirc_atiusb.c:959:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2381: FILE: drivers/input/lirc/lirc_atiusb.c:960:
+			printk(DRIVER_NAME "[%d]: ir->p is a null pointer!\n",

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#2401: FILE: drivers/input/lirc/lirc_atiusb.c:980:
+	switch (cpu_to_le16(dev->descriptor.idVendor)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2428: FILE: drivers/input/lirc/lirc_atiusb.c:1007:
+	 * is not yet setup */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2432: FILE: drivers/input/lirc/lirc_atiusb.c:1011:
+	 * of the number of drivers registered. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around plugin->rbuf
#2445: FILE: drivers/input/lirc/lirc_atiusb.c:1024:
+	plugin->rbuf = kmalloc(sizeof(*(plugin->rbuf)), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2477: FILE: drivers/input/lirc/lirc_atiusb.c:1056:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2484: FILE: drivers/input/lirc/lirc_atiusb.c:1063:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2513: FILE: drivers/input/lirc/lirc_atiusb.c:1092:
+ * Wonder) send the appropriate initialization packets. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2518: FILE: drivers/input/lirc/lirc_atiusb.c:1097:
+		struct out_endpt *oep = ir->out_init;
+		dprintk(DRIVER_NAME "[%d]: usb_remote_probe: initializing "

WARNING:SPLIT_STRING: quoted string split across lines
#2519: FILE: drivers/input/lirc/lirc_atiusb.c:1098:
+		dprintk(DRIVER_NAME "[%d]: usb_remote_probe: initializing "
+			"outbound ep\n", ir->devnum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2521: FILE: drivers/input/lirc/lirc_atiusb.c:1100:
+		usb_fill_int_urb(oep->urb, ir->usbdev,
+			usb_sndintpipe(ir->usbdev, oep->ep->bEndpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#2523: FILE: drivers/input/lirc/lirc_atiusb.c:1102:
+			oep, oep->ep->bInterval);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2534: FILE: drivers/input/lirc/lirc_atiusb.c:1113:
+	char buf[63], name[128] = "";
+	if (dev->descriptor.iManufacturer

CHECK:CAMELCASE: Avoid CamelCase: <iManufacturer>
#2534: FILE: drivers/input/lirc/lirc_atiusb.c:1113:
+	if (dev->descriptor.iManufacturer

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2535: FILE: drivers/input/lirc/lirc_atiusb.c:1114:
+	if (dev->descriptor.iManufacturer
+	    && usb_string(dev, dev->descriptor.iManufacturer, buf, 63) > 0)

CHECK:CAMELCASE: Avoid CamelCase: <iProduct>
#2537: FILE: drivers/input/lirc/lirc_atiusb.c:1116:
+	if (dev->descriptor.iProduct

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2538: FILE: drivers/input/lirc/lirc_atiusb.c:1117:
+	if (dev->descriptor.iProduct
+	    && usb_string(dev, dev->descriptor.iProduct, buf, 63) > 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2540: FILE: drivers/input/lirc/lirc_atiusb.c:1119:
+	printk(DRIVER_NAME "[%d]: %s on usb%d:%d\n", dev->devnum, name,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2544: FILE: drivers/input/lirc/lirc_atiusb.c:1123:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2546: FILE: drivers/input/lirc/lirc_atiusb.c:1125:
+static int usb_remote_probe(struct usb_interface *intf,
+				const struct usb_device_id *id)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usb_remote_probe', this function's name, in a string
#2555: FILE: drivers/input/lirc/lirc_atiusb.c:1134:
+	dprintk(DRIVER_NAME "[%d]: usb_remote_probe: dev:%p, intf:%p, id:%p)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2571: FILE: drivers/input/lirc/lirc_atiusb.c:1150:
+	 * of type interrupt transfer */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2580: FILE: drivers/input/lirc/lirc_atiusb.c:1159:
+		      USB_ENDPOINT_XFER_INT)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2584: FILE: drivers/input/lirc/lirc_atiusb.c:1163:
+				usb_fill_int_urb(iep->urb, dev,
+					usb_rcvintpipe(dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2585: FILE: drivers/input/lirc/lirc_atiusb.c:1164:
+					usb_rcvintpipe(dev,
+						iep->ep->bEndpointAddress),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ir->out_init == NULL'
#2590: FILE: drivers/input/lirc/lirc_atiusb.c:1169:
+		if (((ep->bEndpointAddress & USB_ENDPOINT_DIR_MASK) ==
+		     USB_DIR_OUT) &&
+		     ((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) ==
+		      USB_ENDPOINT_XFER_INT) &&
+		      (ir->out_init == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ir->out_init"
#2594: FILE: drivers/input/lirc/lirc_atiusb.c:1173:
+		      (ir->out_init == NULL))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2598: FILE: drivers/input/lirc/lirc_atiusb.c:1177:
+		printk(DRIVER_NAME "[%d]: inbound endpoint not found\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#2625: FILE: drivers/input/lirc/lirc_atiusb.c:1204:
+	struct irctl *ir = usb_get_intfdata(intf);
+	usb_set_intfdata(intf, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2655: FILE: drivers/input/lirc/lirc_atiusb.c:1234:
+	printk(KERN_INFO "\n" DRIVER_NAME ": " DRIVER_DESC " "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2657: FILE: drivers/input/lirc/lirc_atiusb.c:1236:
+	printk(DRIVER_NAME ": " DRIVER_AUTHOR "\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2664: FILE: drivers/input/lirc/lirc_atiusb.c:1243:
+	repeat_jiffies = repeat*HZ/100;
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2664: FILE: drivers/input/lirc/lirc_atiusb.c:1243:
+	repeat_jiffies = repeat*HZ/100;
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2668: FILE: drivers/input/lirc/lirc_atiusb.c:1247:
+		printk(DRIVER_NAME ": usb register failed, result = %d\n", i);

WARNING:SPLIT_STRING: quoted string split across lines
#2727: FILE: drivers/input/lirc/lirc_atiusb.c:1306:
+MODULE_PARM_DESC(emit_updown, "emit press/release codes (rw2): 0:don't "
+		 "(default), 1:emit 2 codes only, 2:code for each button");

WARNING:SPLIT_STRING: quoted string split across lines
#2731: FILE: drivers/input/lirc/lirc_atiusb.c:1310:
+MODULE_PARM_DESC(emit_modekeys, "emit keycodes for aux1-aux4, pc, and mouse "
+		 "(rw2): 0:don't (default), 1:emit translated codes: one for "

WARNING:SPLIT_STRING: quoted string split across lines
#2732: FILE: drivers/input/lirc/lirc_atiusb.c:1311:
+		 "(rw2): 0:don't (default), 1:emit translated codes: one for "
+		 "mode switch, one for same mode, 2:raw codes");

WARNING:SPLIT_STRING: quoted string split across lines
#2736: FILE: drivers/input/lirc/lirc_atiusb.c:1315:
+MODULE_PARM_DESC(mgradient, "rw2 mouse: 1000*gradient from E to NE (default: "
+		 "500 => .5 => ~27 degrees)");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2749: FILE: drivers/input/lirc/lirc_bt829.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2765: FILE: drivers/input/lirc/lirc_bt829.c:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2766: FILE: drivers/input/lirc/lirc_bt829.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2767: FILE: drivers/input/lirc/lirc_bt829.c:19:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2809: FILE: drivers/input/lirc/lirc_bt829.c:61:
+			printk(KERN_DEBUG fmt, ## args);	\

WARNING:LINE_SPACING: Missing a blank line after declarations
#2821: FILE: drivers/input/lirc/lirc_bt829.c:73:
+	struct pci_dev *my_dev;
+	my_dev = pci_get_device(PCI_VENDOR_ID_ATI,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2824: FILE: drivers/input/lirc/lirc_bt829.c:76:
+		printk(KERN_ERR "ATIR: Using device: %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2829: FILE: drivers/input/lirc/lirc_bt829.c:81:
+			printk(KERN_INFO "ATIR memory at 0x%08X \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2829: FILE: drivers/input/lirc/lirc_bt829.c:81:
+			printk(KERN_INFO "ATIR memory at 0x%08X \n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2833: FILE: drivers/input/lirc/lirc_bt829.c:85:
+			printk(KERN_ERR "ATIR no memory resource ?\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2837: FILE: drivers/input/lirc/lirc_bt829.c:89:
+		printk(KERN_ERR "ATIR: pci_prob failed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2847: FILE: drivers/input/lirc/lirc_bt829.c:99:
+	int status;
+	status = poll_main();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#2873: FILE: drivers/input/lirc/lirc_bt829.c:125:
+	if (pdev == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2896: FILE: drivers/input/lirc/lirc_bt829.c:148:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2902: FILE: drivers/input/lirc/lirc_bt829.c:154:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2907: FILE: drivers/input/lirc/lirc_bt829.c:159:
+		printk(KERN_INFO "atir: pci mem must be mapped\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2915: FILE: drivers/input/lirc/lirc_bt829.c:167:
+	udelay(WAIT_CYCLE*cycle);
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2918: FILE: drivers/input/lirc/lirc_bt829.c:170:
+
+

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int poll_main() should probably be int poll_main(void)
#2919: FILE: drivers/input/lirc/lirc_bt829.c:171:
+static int poll_main()

WARNING:LINE_SPACING: Missing a blank line after declarations
#2955: FILE: drivers/input/lirc/lirc_bt829.c:207:
+	unsigned char bits;
+	bits =  do_get_bits() & 0xFD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3059: FILE: drivers/input/lirc/lirc_bt829.c:311:
+	int reg_val;
+	reg_val = read_index(0x34);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3119: FILE: drivers/input/lirc/lirc_bt829.c:371:
+	unsigned char *addr;
+	addr = pci_addr_lin + ((index & 0xFF) << 2);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3143: FILE: drivers/input/lirc/lirc_cmdir.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3162: FILE: drivers/input/lirc/lirc_cmdir.c:20:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3163: FILE: drivers/input/lirc/lirc_cmdir.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3166: FILE: drivers/input/lirc/lirc_cmdir.c:24:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3187: FILE: drivers/input/lirc/lirc_cmdir.c:45:
+			printk(KERN_DEBUG fmt, ## args);	\

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3195: FILE: drivers/input/lirc/lirc_cmdir.c:53:
+	(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#3197: FILE: drivers/input/lirc/lirc_cmdir.c:55:
+	LIRC_CAN_SET_SEND_CARRIER|
 	                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#3198: FILE: drivers/input/lirc/lirc_cmdir.c:56:
+	LIRC_CAN_SEND_PULSE|
 	                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#3199: FILE: drivers/input/lirc/lirc_cmdir.c:57:
+	LIRC_CAN_SET_TRANSMITTER_MASK|
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3211: FILE: drivers/input/lirc/lirc_cmdir.c:69:
+static unsigned char cmdir_char[4*WBUF_LEN];
                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3221: FILE: drivers/input/lirc/lirc_cmdir.c:79:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3225: FILE: drivers/input/lirc/lirc_cmdir.c:83:
+#define MAX_UDELAY_US (MAX_UDELAY_MS*1000)
                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3238: FILE: drivers/input/lirc/lirc_cmdir.c:96:
+static unsigned int get_time_value(unsigned int firstint,
+			unsigned int secondint, unsigned char overflow)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3243: FILE: drivers/input/lirc/lirc_cmdir.c:101:
+		t_answer = secondint - firstint + overflow*65536;
 		                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3259: FILE: drivers/input/lirc/lirc_cmdir.c:117:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3274: FILE: drivers/input/lirc/lirc_cmdir.c:132:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3282: FILE: drivers/input/lirc/lirc_cmdir.c:140:
+			printk(LIRC_DRIVER_NAME ": device is unplugged\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3286: FILE: drivers/input/lirc/lirc_cmdir.c:144:
+		printk(LIRC_DRIVER_NAME ": usb error = %d\n", retval);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3300: FILE: drivers/input/lirc/lirc_cmdir.c:158:
+			printk(LIRC_DRIVER_NAME ": device is now plugged in\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3322: FILE: drivers/input/lirc/lirc_cmdir.c:180:
+		printk(LIRC_DRIVER_NAME ": freq set to %dHz\n", freq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3324: FILE: drivers/input/lirc/lirc_cmdir.c:182:
+		printk(LIRC_DRIVER_NAME ": freq unchanged\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3326: FILE: drivers/input/lirc/lirc_cmdir.c:184:
+
+}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3361: FILE: drivers/input/lirc/lirc_cmdir.c:219:
+	num_data_values = num_data_bytes/3;
 	                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3364: FILE: drivers/input/lirc/lirc_cmdir.c:222:
+		tmp_char_buffer[i*4] = orig_rxbuffer[(i+1)*3];
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3364: FILE: drivers/input/lirc/lirc_cmdir.c:222:
+		tmp_char_buffer[i*4] = orig_rxbuffer[(i+1)*3];
 		                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3364: FILE: drivers/input/lirc/lirc_cmdir.c:222:
+		tmp_char_buffer[i*4] = orig_rxbuffer[(i+1)*3];
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3365: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3365: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3365: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3365: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3365: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3366: FILE: drivers/input/lirc/lirc_cmdir.c:224:
+		tmp_char_buffer[i*4+2] = 0;
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3366: FILE: drivers/input/lirc/lirc_cmdir.c:224:
+		tmp_char_buffer[i*4+2] = 0;
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3367: FILE: drivers/input/lirc/lirc_cmdir.c:225:
+		tmp_char_buffer[i*4+3] = 0;
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3367: FILE: drivers/input/lirc/lirc_cmdir.c:225:
+		tmp_char_buffer[i*4+3] = 0;
 		                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3372: FILE: drivers/input/lirc/lirc_cmdir.c:230:
+	memcpy((unsigned char *)tmp_int_buffer, tmp_char_buffer,
+						(num_data_values*4));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3372: FILE: drivers/input/lirc/lirc_cmdir.c:230:
+						(num_data_values*4));
 						                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3377: FILE: drivers/input/lirc/lirc_cmdir.c:235:
+		final_data_buffer[0] = get_time_value(last_mc_time,
+						tmp_int_buffer[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3381: FILE: drivers/input/lirc/lirc_cmdir.c:239:
+		final_data_buffer[0] = get_time_value(last_mc_time,
+						tmp_int_buffer[0],

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3390: FILE: drivers/input/lirc/lirc_cmdir.c:248:
+		orig_index = (i + 1)*3 + 2;
 		                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3407: FILE: drivers/input/lirc/lirc_cmdir.c:265:
+		printk(KERN_ERR  LIRC_DRIVER_NAME ": lirc_buffer is full\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3415: FILE: drivers/input/lirc/lirc_cmdir.c:273:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <tooFull>
#3422: FILE: drivers/input/lirc/lirc_cmdir.c:280:
+	int tooFull = 5;  /* read up to 5 packets */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#3435: FILE: drivers/input/lirc/lirc_cmdir.c:293:
+					printk(KERN_ALERT LIRC_DRIVER_NAME

WARNING:TYPO_SPELLING: 'supress' may be misspelled - perhaps 'suppress'?
#3440: FILE: drivers/input/lirc/lirc_cmdir.c:298:
+				/* supress errors */
 				   ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#3441: FILE: drivers/input/lirc/lirc_cmdir.c:299:
+				printk(KERN_ALERT LIRC_DRIVER_NAME

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3448: FILE: drivers/input/lirc/lirc_cmdir.c:306:
+			return -ENODATA;
+		} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3451: FILE: drivers/input/lirc/lirc_cmdir.c:309:
+				printk(LIRC_DRIVER_NAME

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3461: FILE: drivers/input/lirc/lirc_cmdir.c:319:
+					return 0;
+				else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3481: FILE: drivers/input/lirc/lirc_cmdir.c:339:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3483: FILE: drivers/input/lirc/lirc_cmdir.c:341:
+static ssize_t lirc_write(struct file *file, const char *buf,
+			 size_t n, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3530: FILE: drivers/input/lirc/lirc_cmdir.c:388:
+		cmdir_char[cmdir_cnt+1] = lobyte;
 		                    ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#3565: FILE: drivers/input/lirc/lirc_cmdir.c:423:
+	dprintk("Total elapsed time is: %d. \n", total_time_elapsed);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3580: FILE: drivers/input/lirc/lirc_cmdir.c:438:
+#if 0 /* enable this for backwards compatibility */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3587: FILE: drivers/input/lirc/lirc_cmdir.c:445:
+
+

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3600: FILE: drivers/input/lirc/lirc_cmdir.c:458:
+		if (!(hardware.features&LIRC_CAN_SET_TRANSMITTER_MASK))
 		                       ^

CHECK:SPACING: No space is necessary after a cast
#3602: FILE: drivers/input/lirc/lirc_cmdir.c:460:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#3613: FILE: drivers/input/lirc/lirc_cmdir.c:471:
+		return 0;
+		break;

CHECK:SPACING: No space is necessary after a cast
#3621: FILE: drivers/input/lirc/lirc_cmdir.c:479:
+				(unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3627: FILE: drivers/input/lirc/lirc_cmdir.c:485:
+		if (!(hardware.features&LIRC_CAN_SEND_MASK))
 		                       ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3636: FILE: drivers/input/lirc/lirc_cmdir.c:494:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#3637: FILE: drivers/input/lirc/lirc_cmdir.c:495:
+		return -ENOSYS;
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3643: FILE: drivers/input/lirc/lirc_cmdir.c:501:
+		if (!(hardware.features&LIRC_CAN_SET_SEND_DUTY_CYCLE))
 		                       ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#3657: FILE: drivers/input/lirc/lirc_cmdir.c:515:
+		return 0;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#3675: FILE: drivers/input/lirc/lirc_cmdir.c:533:
+		return 0;
+		break;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3683: FILE: drivers/input/lirc/lirc_cmdir.c:541:
+static struct file_operations lirc_fops = {

WARNING:SPLIT_STRING: quoted string split across lines
#3708: FILE: drivers/input/lirc/lirc_cmdir.c:566:
+MODULE_DESCRIPTION("InnovationOne driver for "
+		   "CommandIR USB infrared transceiver");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3716: FILE: drivers/input/lirc/lirc_cmdir.c:574:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3722: FILE: drivers/input/lirc/lirc_cmdir.c:580:
+		printk(KERN_ERR  LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3733: FILE: drivers/input/lirc/lirc_cmdir.c:591:
+	printk(KERN_INFO  LIRC_DRIVER_NAME  ": module removed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3738: FILE: drivers/input/lirc/lirc_cmdir.c:596:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3745: FILE: drivers/input/lirc/lirc_cmdir.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3764: FILE: drivers/input/lirc/lirc_cmdir.h:20:
+extern int cmdir_write(unsigned char *buffer, int count,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3766: FILE: drivers/input/lirc/lirc_cmdir.h:22:
+extern ssize_t cmdir_read(unsigned char *buffer, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3767: FILE: drivers/input/lirc/lirc_cmdir.h:23:
+extern int set_tx_channels(unsigned int next_tx);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3776: FILE: drivers/input/lirc/lirc_dev.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3792: FILE: drivers/input/lirc/lirc_dev.c:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3793: FILE: drivers/input/lirc/lirc_dev.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3826: FILE: drivers/input/lirc/lirc_dev.c:51:
+			printk(KERN_DEBUG fmt, ## args);	\

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3839: FILE: drivers/input/lirc/lirc_dev.c:64:
+	struct mutex buffer_lock;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3850: FILE: drivers/input/lirc/lirc_dev.c:75:
+static struct file_operations fops;

WARNING:REPEATED_WORD: Possible repeated word: 'buffer'
#3888: FILE: drivers/input/lirc/lirc_dev.c:113:
+ *  reads key codes from plugin and puts them into buffer
+ *  buffer free space is checked and locking performed

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3941: FILE: drivers/input/lirc/lirc_dev.c:166:
+				interruptible_sleep_on(

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3951: FILE: drivers/input/lirc/lirc_dev.c:176:
+			schedule_timeout(HZ/2);
 			                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3969: FILE: drivers/input/lirc/lirc_dev.c:194:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#3969: FILE: drivers/input/lirc/lirc_dev.c:194:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#3970: FILE: drivers/input/lirc/lirc_dev.c:195:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+		       "plugin pointer must be not NULL!\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3975: FILE: drivers/input/lirc/lirc_dev.c:200:
+	if (MAX_IRCTL_DEVICES <= p->minor) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3976: FILE: drivers/input/lirc/lirc_dev.c:201:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#3976: FILE: drivers/input/lirc/lirc_dev.c:201:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#3977: FILE: drivers/input/lirc/lirc_dev.c:202:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+		       "\"minor\" must be between 0 and %d (%d)!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3978: FILE: drivers/input/lirc/lirc_dev.c:203:
+		       MAX_IRCTL_DEVICES-1, p->minor);
 		                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3983: FILE: drivers/input/lirc/lirc_dev.c:208:
+	if (1 > p->code_length || (BUFLEN * 8) < p->code_length) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3984: FILE: drivers/input/lirc/lirc_dev.c:209:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#3984: FILE: drivers/input/lirc/lirc_dev.c:209:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#3985: FILE: drivers/input/lirc/lirc_dev.c:210:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+		       "code length in bits for minor (%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#3986: FILE: drivers/input/lirc/lirc_dev.c:211:
+		       "code length in bits for minor (%d) "
+		       "must be less than %d!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3992: FILE: drivers/input/lirc/lirc_dev.c:217:
+	printk(KERN_INFO "lirc_dev: lirc_register_plugin: sample_rate: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#3992: FILE: drivers/input/lirc/lirc_dev.c:217:
+	printk(KERN_INFO "lirc_dev: lirc_register_plugin: sample_rate: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3993: FILE: drivers/input/lirc/lirc_dev.c:218:
+	printk(KERN_INFO "lirc_dev: lirc_register_plugin: sample_rate: %d\n",
+		p->sample_rate);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3996: FILE: drivers/input/lirc/lirc_dev.c:221:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#3996: FILE: drivers/input/lirc/lirc_dev.c:221:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#3997: FILE: drivers/input/lirc/lirc_dev.c:222:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+			       "sample_rate must be between 2 and %d!\n", HZ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4002: FILE: drivers/input/lirc/lirc_dev.c:227:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4002: FILE: drivers/input/lirc/lirc_dev.c:227:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4003: FILE: drivers/input/lirc/lirc_dev.c:228:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+			       "add_to_buf cannot be NULL when "

WARNING:SPLIT_STRING: quoted string split across lines
#4004: FILE: drivers/input/lirc/lirc_dev.c:229:
+			       "add_to_buf cannot be NULL when "
+			       "sample_rate is set\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4009: FILE: drivers/input/lirc/lirc_dev.c:234:
+	} else if (!(p->fops && p->fops->read)
+		   && !p->get_queue && !p->rbuf) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4010: FILE: drivers/input/lirc/lirc_dev.c:235:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4010: FILE: drivers/input/lirc/lirc_dev.c:235:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4011: FILE: drivers/input/lirc/lirc_dev.c:236:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+		       "fops->read, get_queue and rbuf "

WARNING:SPLIT_STRING: quoted string split across lines
#4012: FILE: drivers/input/lirc/lirc_dev.c:237:
+		       "fops->read, get_queue and rbuf "
+		       "cannot all be NULL!\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4017: FILE: drivers/input/lirc/lirc_dev.c:242:
+		if (!(p->fops && p->fops->read && p->fops->poll)
+		    || (!p->fops->ioctl && !p->ioctl)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4018: FILE: drivers/input/lirc/lirc_dev.c:243:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4018: FILE: drivers/input/lirc/lirc_dev.c:243:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4019: FILE: drivers/input/lirc/lirc_dev.c:244:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+			       "neither read, poll nor ioctl can be NULL!\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p->owner"
#4025: FILE: drivers/input/lirc/lirc_dev.c:250:
+	if (p->owner == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4026: FILE: drivers/input/lirc/lirc_dev.c:251:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4026: FILE: drivers/input/lirc/lirc_dev.c:251:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4027: FILE: drivers/input/lirc/lirc_dev.c:252:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+				    "no module owner registered\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4036: FILE: drivers/input/lirc/lirc_dev.c:261:
+	if (0 > minor) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#4041: FILE: drivers/input/lirc/lirc_dev.c:266:
+		if (MAX_IRCTL_DEVICES == minor) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4042: FILE: drivers/input/lirc/lirc_dev.c:267:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4042: FILE: drivers/input/lirc/lirc_dev.c:267:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4043: FILE: drivers/input/lirc/lirc_dev.c:268:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+			       "no free slots for plugins!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4048: FILE: drivers/input/lirc/lirc_dev.c:273:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4048: FILE: drivers/input/lirc/lirc_dev.c:273:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4049: FILE: drivers/input/lirc/lirc_dev.c:274:
+		printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+		       "minor (%d) just registered!\n", minor);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4064: FILE: drivers/input/lirc/lirc_dev.c:289:
+	p->name[sizeof(p->name)-1] = '\0';
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4066: FILE: drivers/input/lirc/lirc_dev.c:291:
+	bytes_in_key = p->code_length/8 + (p->code_length%8 ? 1 : 0);
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4066: FILE: drivers/input/lirc/lirc_dev.c:291:
+	bytes_in_key = p->code_length/8 + (p->code_length%8 ? 1 : 0);
 	                                                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir->buf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#4071: FILE: drivers/input/lirc/lirc_dev.c:296:
+		ir->buf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4077: FILE: drivers/input/lirc/lirc_dev.c:302:
+				     BUFLEN/bytes_in_key) != 0) {
 				           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4099: FILE: drivers/input/lirc/lirc_dev.c:324:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#4099: FILE: drivers/input/lirc/lirc_dev.c:324:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4100: FILE: drivers/input/lirc/lirc_dev.c:325:
+			printk(KERN_ERR "lirc_dev: lirc_register_plugin: "
+			       "cannot run poll thread for minor = %d\n",

WARNING:TYPO_SPELLING: 'autmatically' may be misspelled - perhaps 'automatically'?
#4110: FILE: drivers/input/lirc/lirc_dev.c:335:
+ * Recent kernels should handle this autmatically by increasing/decreasing
                                      ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#4111: FILE: drivers/input/lirc/lirc_dev.c:336:
+ * use count when a dependant module is loaded/unloaded.
                     ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4134: FILE: drivers/input/lirc/lirc_dev.c:359:
+		printk(KERN_ERR "lirc_dev: lirc_unregister_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_unregister_plugin', this function's name, in a string
#4134: FILE: drivers/input/lirc/lirc_dev.c:359:
+		printk(KERN_ERR "lirc_dev: lirc_unregister_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4135: FILE: drivers/input/lirc/lirc_dev.c:360:
+		printk(KERN_ERR "lirc_dev: lirc_unregister_plugin: "
+		       "\"minor\" must be between 0 and %d!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4136: FILE: drivers/input/lirc/lirc_dev.c:361:
+		       MAX_IRCTL_DEVICES-1);
 		                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4145: FILE: drivers/input/lirc/lirc_dev.c:370:
+		printk(KERN_ERR "lirc_dev: lirc_unregister_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_unregister_plugin', this function's name, in a string
#4145: FILE: drivers/input/lirc/lirc_dev.c:370:
+		printk(KERN_ERR "lirc_dev: lirc_unregister_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#4146: FILE: drivers/input/lirc/lirc_dev.c:371:
+		printk(KERN_ERR "lirc_dev: lirc_unregister_plugin: "
+		       "minor (%d) device not registered!", minor);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4161: FILE: drivers/input/lirc/lirc_dev.c:386:
+	if (ir->open) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4169: FILE: drivers/input/lirc/lirc_dev.c:394:
+	} else

WARNING:TYPO_SPELLING: 'autmatically' may be misspelled - perhaps 'automatically'?
#4174: FILE: drivers/input/lirc/lirc_dev.c:399:
+ * Recent kernels should handle this autmatically by increasing/decreasing
                                      ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#4175: FILE: drivers/input/lirc/lirc_dev.c:400:
+ * use count when a dependant module is loaded/unloaded.
                     ^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->p.owner"
#4229: FILE: drivers/input/lirc/lirc_dev.c:454:
+	if (ir->p.owner != NULL && try_module_get(ir->p.owner)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ir->p.owner"
#4238: FILE: drivers/input/lirc/lirc_dev.c:463:
+		if (ir->p.owner == NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4306: FILE: drivers/input/lirc/lirc_dev.c:531:
+	ret = lirc_buffer_empty(ir->buf) ? 0 : (POLLIN|POLLRDNORM);
 	                                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4349: FILE: drivers/input/lirc/lirc_dev.c:574:
+		if (!(ir->p.features&LIRC_CAN_REC_MASK))
 		                    ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#4350: FILE: drivers/input/lirc/lirc_dev.c:575:
+			return -ENOSYS;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4353: FILE: drivers/input/lirc/lirc_dev.c:578:
+				  (ir->p.features&LIRC_CAN_REC_MASK),
 				                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#4357: FILE: drivers/input/lirc/lirc_dev.c:582:
+		if (!(ir->p.features&LIRC_CAN_REC_MASK))
 		                    ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#4358: FILE: drivers/input/lirc/lirc_dev.c:583:
+			return -ENOSYS;

WARNING:TYPO_SPELLING: 'beetwen' may be misspelled - perhaps 'between'?
#4418: FILE: drivers/input/lirc/lirc_dev.c:643:
+	 * beetwen while condition checking and scheduling)
 	   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4432: FILE: drivers/input/lirc/lirc_dev.c:657:
+			 * -ERESTARTSYS */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4451: FILE: drivers/input/lirc/lirc_dev.c:676:
+			ret = copy_to_user((void *)buffer+written, buf,
 			                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4467: FILE: drivers/input/lirc/lirc_dev.c:692:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#4475: FILE: drivers/input/lirc/lirc_dev.c:700:
+		struct irctl *ir;
+		ir = &irctls[MINOR(file->f_dentry->d_inode->i_rdev)];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4483: FILE: drivers/input/lirc/lirc_dev.c:708:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4501: FILE: drivers/input/lirc/lirc_dev.c:726:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4502: FILE: drivers/input/lirc/lirc_dev.c:727:
+static struct file_operations fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4511: FILE: drivers/input/lirc/lirc_dev.c:736:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4520: FILE: drivers/input/lirc/lirc_dev.c:745:
+		printk(KERN_ERR "lirc_dev: register_chrdev failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4526: FILE: drivers/input/lirc/lirc_dev.c:751:
+		printk(KERN_ERR "lirc_dev: class_create failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4530: FILE: drivers/input/lirc/lirc_dev.c:755:
+	printk(KERN_INFO "lirc_dev: IR Remote Control driver registered, "

WARNING:SPLIT_STRING: quoted string split across lines
#4531: FILE: drivers/input/lirc/lirc_dev.c:756:
+	printk(KERN_INFO "lirc_dev: IR Remote Control driver registered, "
+	       "major %d \n", IRCTL_DEV_MAJOR);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#4531: FILE: drivers/input/lirc/lirc_dev.c:756:
+	       "major %d \n", IRCTL_DEV_MAJOR);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4591: FILE: drivers/input/lirc/lirc_dev.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#4616: FILE: drivers/input/lirc/lirc_dev.h:26:
+	spinlock_t lock;

WARNING:TYPO_SPELLING: 'tunning' may be misspelled - perhaps 'tuning'?
#4624: FILE: drivers/input/lirc/lirc_dev.h:34:
+	 * And should allow for some performance fine tunning later */
 	                                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4624: FILE: drivers/input/lirc/lirc_dev.h:34:
+	 * And should allow for some performance fine tunning later */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4626: FILE: drivers/input/lirc/lirc_dev.h:36:
+};
+static inline void _lirc_buffer_clear(struct lirc_buffer *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4632: FILE: drivers/input/lirc/lirc_dev.h:42:
+}
+static inline int lirc_buffer_init(struct lirc_buffer *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4633: FILE: drivers/input/lirc/lirc_dev.h:43:
+static inline int lirc_buffer_init(struct lirc_buffer *buf,
+				    unsigned int chunk_size,

WARNING:TYPO_SPELLING: 'inconditional' may be misspelled - perhaps 'unconditional'?
#4637: FILE: drivers/input/lirc/lirc_dev.h:47:
+	 * inconditional LIRC_BUFF_POWER_OF_2 optimization */
 	   ^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4637: FILE: drivers/input/lirc/lirc_dev.h:47:
+	 * inconditional LIRC_BUFF_POWER_OF_2 optimization */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4643: FILE: drivers/input/lirc/lirc_dev.h:53:
+	buf->data = kmalloc(size*chunk_size, GFP_KERNEL);
 	                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf->data"
#4644: FILE: drivers/input/lirc/lirc_dev.h:54:
+	if (buf->data == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4646: FILE: drivers/input/lirc/lirc_dev.h:56:
+	memset(buf->data, 0, size*chunk_size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4649: FILE: drivers/input/lirc/lirc_dev.h:59:
+}
+static inline void lirc_buffer_free(struct lirc_buffer *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4659: FILE: drivers/input/lirc/lirc_dev.h:69:
+}
+static inline int  lirc_buffer_full(struct lirc_buffer *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4663: FILE: drivers/input/lirc/lirc_dev.h:73:
+}
+static inline int  lirc_buffer_empty(struct lirc_buffer *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4667: FILE: drivers/input/lirc/lirc_dev.h:77:
+}
+static inline int  lirc_buffer_available(struct lirc_buffer *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4669: FILE: drivers/input/lirc/lirc_dev.h:79:
+    return buf->size - buf->fill;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4671: FILE: drivers/input/lirc/lirc_dev.h:81:
+}
+static inline void lirc_buffer_lock(struct lirc_buffer *buf,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4676: FILE: drivers/input/lirc/lirc_dev.h:86:
+}
+static inline void lirc_buffer_unlock(struct lirc_buffer *buf,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4681: FILE: drivers/input/lirc/lirc_dev.h:91:
+}
+static inline void lirc_buffer_clear(struct lirc_buffer *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4684: FILE: drivers/input/lirc/lirc_dev.h:94:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4688: FILE: drivers/input/lirc/lirc_dev.h:98:
+}
+static inline void _lirc_buffer_remove_1(struct lirc_buffer *buf)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4690: FILE: drivers/input/lirc/lirc_dev.h:100:
+	buf->head = mod(buf->head+1, buf->size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4693: FILE: drivers/input/lirc/lirc_dev.h:103:
+}
+static inline void lirc_buffer_remove_1(struct lirc_buffer *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4696: FILE: drivers/input/lirc/lirc_dev.h:106:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4700: FILE: drivers/input/lirc/lirc_dev.h:110:
+}
+static inline void _lirc_buffer_read_1(struct lirc_buffer *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4701: FILE: drivers/input/lirc/lirc_dev.h:111:
+static inline void _lirc_buffer_read_1(struct lirc_buffer *buf,
+				     unsigned char *dest)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4703: FILE: drivers/input/lirc/lirc_dev.h:113:
+	memcpy(dest, &buf->data[buf->head*buf->chunk_size], buf->chunk_size);
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4704: FILE: drivers/input/lirc/lirc_dev.h:114:
+	buf->head = mod(buf->head+1, buf->size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4707: FILE: drivers/input/lirc/lirc_dev.h:117:
+}
+static inline void lirc_buffer_read_1(struct lirc_buffer *buf,

WARNING:LINE_SPACING: Missing a blank line after declarations
#4711: FILE: drivers/input/lirc/lirc_dev.h:121:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4715: FILE: drivers/input/lirc/lirc_dev.h:125:
+}
+static inline void _lirc_buffer_write_1(struct lirc_buffer *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4716: FILE: drivers/input/lirc/lirc_dev.h:126:
+static inline void _lirc_buffer_write_1(struct lirc_buffer *buf,
+				      unsigned char *orig)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4718: FILE: drivers/input/lirc/lirc_dev.h:128:
+	memcpy(&buf->data[buf->tail*buf->chunk_size], orig, buf->chunk_size);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4719: FILE: drivers/input/lirc/lirc_dev.h:129:
+	buf->tail = mod(buf->tail+1, buf->size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4722: FILE: drivers/input/lirc/lirc_dev.h:132:
+}
+static inline void lirc_buffer_write_1(struct lirc_buffer *buf,

WARNING:LINE_SPACING: Missing a blank line after declarations
#4726: FILE: drivers/input/lirc/lirc_dev.h:136:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4730: FILE: drivers/input/lirc/lirc_dev.h:140:
+}
+static inline void _lirc_buffer_write_n(struct lirc_buffer *buf,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4738: FILE: drivers/input/lirc/lirc_dev.h:148:
+}
+static inline void lirc_buffer_write_n(struct lirc_buffer *buf,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4752: FILE: drivers/input/lirc/lirc_dev.h:162:
+		_lirc_buffer_write_n(buf, orig+(space1*buf->chunk_size),
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4752: FILE: drivers/input/lirc/lirc_dev.h:162:
+		_lirc_buffer_write_n(buf, orig+(space1*buf->chunk_size),
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4753: FILE: drivers/input/lirc/lirc_dev.h:163:
+				     count-space1);
 				          ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#4767: FILE: drivers/input/lirc/lirc_dev.h:177:
+	int (*add_to_buf) (void *data, struct lirc_buffer *buf);

WARNING:SPACING: Unnecessary space before function pointer arguments
#4768: FILE: drivers/input/lirc/lirc_dev.h:178:
+	wait_queue_head_t* (*get_queue) (void *data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#4770: FILE: drivers/input/lirc/lirc_dev.h:180:
+	int (*set_use_inc) (void *data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#4771: FILE: drivers/input/lirc/lirc_dev.h:181:
+	void (*set_use_dec) (void *data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#4772: FILE: drivers/input/lirc/lirc_dev.h:182:
+	int (*ioctl) (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#4772: FILE: drivers/input/lirc/lirc_dev.h:182:
+	int (*ioctl) (struct inode *, struct file *, unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#4772: FILE: drivers/input/lirc/lirc_dev.h:182:
+	int (*ioctl) (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4772: FILE: drivers/input/lirc/lirc_dev.h:182:
+	int (*ioctl) (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#4772: FILE: drivers/input/lirc/lirc_dev.h:182:
+	int (*ioctl) (struct inode *, struct file *, unsigned int,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4774: FILE: drivers/input/lirc/lirc_dev.h:184:
+	struct file_operations *fops;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4778: FILE: drivers/input/lirc/lirc_dev.h:188:
+};
+/* name:

WARNING:TYPO_SPELLING: 'forwared' may be misspelled - perhaps 'forwarded'?
#4823: FILE: drivers/input/lirc/lirc_dev.h:233:
+ * forwared here if not NULL and only handled if it returns
    ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4834: FILE: drivers/input/lirc/lirc_dev.h:244:
+
+

WARNING:TYPO_SPELLING: 'contens' may be misspelled - perhaps 'contents'?
#4839: FILE: drivers/input/lirc/lirc_dev.h:249:
+ * contens of the structure pointed by p is copied
    ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4841: FILE: drivers/input/lirc/lirc_dev.h:251:
+extern int lirc_register_plugin(struct lirc_plugin *p);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4844: FILE: drivers/input/lirc/lirc_dev.h:254:
+/* returns negative value on error or 0 if success
+*/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4845: FILE: drivers/input/lirc/lirc_dev.h:255:
+extern int lirc_unregister_plugin(int minor);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4859: FILE: drivers/input/lirc/lirc_i2c.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4890: FILE: drivers/input/lirc/lirc_i2c.c:32:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4891: FILE: drivers/input/lirc/lirc_i2c.c:33:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4895: FILE: drivers/input/lirc/lirc_i2c.c:37:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4935: FILE: drivers/input/lirc/lirc_i2c.c:77:
+			printk(KERN_DEBUG DEVICE_NAME ": " fmt,		\

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4947: FILE: drivers/input/lirc/lirc_i2c.c:89:
+		c |= ((data & (1<<i)) ? 1 : 0) << (bits-1-i);
 		                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4947: FILE: drivers/input/lirc/lirc_i2c.c:89:
+		c |= ((data & (1<<i)) ? 1 : 0) << (bits-1-i);
 		                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4947: FILE: drivers/input/lirc/lirc_i2c.c:89:
+		c |= ((data & (1<<i)) ? 1 : 0) << (bits-1-i);
 		                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5026: FILE: drivers/input/lirc/lirc_i2c.c:168:
+static int add_to_buf_haup_common(void *data, struct lirc_buffer *buf,
+		unsigned char *keybuf, int size, int offset)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5035: FILE: drivers/input/lirc/lirc_i2c.c:177:
+		ir->b[1] = keybuf[offset+1];
 		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5036: FILE: drivers/input/lirc/lirc_i2c.c:178:
+		ir->b[2] = keybuf[offset+2];
 		                        ^

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#5040: FILE: drivers/input/lirc/lirc_i2c.c:182:
+		/* keep last successfull read buffer */
 		             ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#5048: FILE: drivers/input/lirc/lirc_i2c.c:190:
+	code = (((__u16)ir->b[0]&0x7f)<<6) | (ir->b[1]>>2);
 	                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#5048: FILE: drivers/input/lirc/lirc_i2c.c:190:
+	code = (((__u16)ir->b[0]&0x7f)<<6) | (ir->b[1]>>2);
 	                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#5048: FILE: drivers/input/lirc/lirc_i2c.c:190:
+	code = (((__u16)ir->b[0]&0x7f)<<6) | (ir->b[1]>>2);
 	                                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5074: FILE: drivers/input/lirc/lirc_i2c.c:216:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5114: FILE: drivers/input/lirc/lirc_i2c.c:256:
+	if (1 != i2c_master_recv(&ir->c, &key, 1)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5132: FILE: drivers/input/lirc/lirc_i2c.c:274:
+	if (1 != i2c_master_recv(&ir->c, &key, 1)) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#5144: FILE: drivers/input/lirc/lirc_i2c.c:286:
+	codes[3] = (~codes[2])&0xff;
 	                      ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5157: FILE: drivers/input/lirc/lirc_i2c.c:299:
+	if (1 != i2c_master_recv(&ir->c, &key, 1)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5163: FILE: drivers/input/lirc/lirc_i2c.c:305:
+	/* it seems that 0xFE indicates that a button is still hold
+	   down, while 0xFF indicates that no button is hold

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5164: FILE: drivers/input/lirc/lirc_i2c.c:306:
+	   down. 0xFE sequences are sometimes interrupted by 0xFF */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5208: FILE: drivers/input/lirc/lirc_i2c.c:350:
+static int ir_attach(struct i2c_adapter *adap, int addr,
+		      unsigned short flags, int kind);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir)...) over kmalloc(sizeof(struct IR)...)
#5237: FILE: drivers/input/lirc/lirc_i2c.c:379:
+	ir = kmalloc(sizeof(struct IR), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5253: FILE: drivers/input/lirc/lirc_i2c.c:395:
+		strlcpy(ir->c.name, "Pixelview IR", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5258: FILE: drivers/input/lirc/lirc_i2c.c:400:
+		strlcpy(ir->c.name, "PV951 IR", I2C_NAME_SIZE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5267: FILE: drivers/input/lirc/lirc_i2c.c:409:
+			 * different, so we need to deal with it by its own. */

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5268: FILE: drivers/input/lirc/lirc_i2c.c:410:
+			strlcpy(ir->c.name, "Hauppauge PVR150", I2C_NAME_SIZE);

CHECK:BRACES: Unbalanced braces around else statement
#5269: FILE: drivers/input/lirc/lirc_i2c.c:411:
+		} else /* I2C_HW_B_CX2388x */

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5270: FILE: drivers/input/lirc/lirc_i2c.c:412:
+			strlcpy(ir->c.name, "Hauppauge HVR1300", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5275: FILE: drivers/input/lirc/lirc_i2c.c:417:
+		strlcpy(ir->c.name, "Adaptec IR", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5283: FILE: drivers/input/lirc/lirc_i2c.c:425:
+			strlcpy(ir->c.name, "Hauppauge IR", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5287: FILE: drivers/input/lirc/lirc_i2c.c:429:
+			strlcpy(ir->c.name, "Leadtek IR", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5293: FILE: drivers/input/lirc/lirc_i2c.c:435:
+		strlcpy(ir->c.name, "KNC ONE IR", I2C_NAME_SIZE);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#5299: FILE: drivers/input/lirc/lirc_i2c.c:441:
+		strlcpy(ir->c.name, "TV-Box IR", I2C_NAME_SIZE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5307: FILE: drivers/input/lirc/lirc_i2c.c:449:
+		printk("lirc_i2c: Huh? unknown i2c address (0x%02x)?\n", addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5311: FILE: drivers/input/lirc/lirc_i2c.c:453:
+	printk(KERN_INFO "lirc_i2c: chip 0x%x found @ 0x%02x (%s)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5349: FILE: drivers/input/lirc/lirc_i2c.c:491:
+	 * so we need to probe 0x71 as well. */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5379: FILE: drivers/input/lirc/lirc_i2c.c:521:
+				(1 == rc) ? "yes" : "no");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5380: FILE: drivers/input/lirc/lirc_i2c.c:522:
+			if (1 == rc)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5394: FILE: drivers/input/lirc/lirc_i2c.c:536:
+				(1 == rc) ? "yes" : "no");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#5395: FILE: drivers/input/lirc/lirc_i2c.c:537:
+			if (1 == rc)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5403: FILE: drivers/input/lirc/lirc_i2c.c:545:
+		/* addresses to probe;
+		   leave 0x24 and 0x25 because SAA7113H possibly uses it

CHECK:SPACING: No space is necessary after a cast
#5430: FILE: drivers/input/lirc/lirc_i2c.c:572:
+					bits = (unsigned char) ~0x07;

CHECK:SPACING: No space is necessary after a cast
#5437: FILE: drivers/input/lirc/lirc_i2c.c:579:
+					bits = (unsigned char) ~0xe0;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#5446: FILE: drivers/input/lirc/lirc_i2c.c:588:
+					  bits|(flag<<8), 0);
 					      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#5446: FILE: drivers/input/lirc/lirc_i2c.c:588:
+					  bits|(flag<<8), 0);
 					            ^

WARNING:SPLIT_STRING: quoted string split across lines
#5478: FILE: drivers/input/lirc/lirc_i2c.c:620:
+MODULE_DESCRIPTION("Infrared receiver driver for Hauppauge and "
+		   "Pixelview cards (i2c stack)");

WARNING:SPLIT_STRING: quoted string split across lines
#5480: FILE: drivers/input/lirc/lirc_i2c.c:622:
+MODULE_AUTHOR("Gerd Knorr, Michal Kochanowicz, Christoph Bartelmus, "
+	      "Ulrich Mueller, Stefan Jahn, Jerome Brock");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5504: FILE: drivers/input/lirc/lirc_igorplugusb.c:1:
+/* lirc_igorplugusb - USB remote support for LIRC

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5542: FILE: drivers/input/lirc/lirc_igorplugusb.c:39:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5543: FILE: drivers/input/lirc/lirc_igorplugusb.c:40:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5565: FILE: drivers/input/lirc/lirc_igorplugusb.c:62:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5583: FILE: drivers/input/lirc/lirc_igorplugusb.c:80:
+			printk(KERN_DEBUG fmt, ## args);	\

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5596: FILE: drivers/input/lirc/lirc_igorplugusb.c:93:
+/** Header at the beginning of the device's buffer:
+	unsigned char data_length

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5609: FILE: drivers/input/lirc/lirc_igorplugusb.c:106:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5617: FILE: drivers/input/lirc/lirc_igorplugusb.c:114:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5626: FILE: drivers/input/lirc/lirc_igorplugusb.c:123:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5635: FILE: drivers/input/lirc/lirc_igorplugusb.c:132:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5643: FILE: drivers/input/lirc/lirc_igorplugusb.c:140:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5652: FILE: drivers/input/lirc/lirc_igorplugusb.c:149:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5660: FILE: drivers/input/lirc/lirc_igorplugusb.c:157:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5668: FILE: drivers/input/lirc/lirc_igorplugusb.c:165:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5677: FILE: drivers/input/lirc/lirc_igorplugusb.c:174:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5687: FILE: drivers/input/lirc/lirc_igorplugusb.c:184:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5696: FILE: drivers/input/lirc/lirc_igorplugusb.c:193:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5704: FILE: drivers/input/lirc/lirc_igorplugusb.c:201:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5713: FILE: drivers/input/lirc/lirc_igorplugusb.c:210:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5721: FILE: drivers/input/lirc/lirc_igorplugusb.c:218:
+ *
+**/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5723: FILE: drivers/input/lirc/lirc_igorplugusb.c:220:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5726: FILE: drivers/input/lirc/lirc_igorplugusb.c:223:
+struct irctl {
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5760: FILE: drivers/input/lirc/lirc_igorplugusb.c:257:
+	printk(DRIVER_NAME "[%d]: usb remote disconnected\n", devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5775: FILE: drivers/input/lirc/lirc_igorplugusb.c:272:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_inc', this function's name, in a string
#5775: FILE: drivers/input/lirc/lirc_igorplugusb.c:272:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5791: FILE: drivers/input/lirc/lirc_igorplugusb.c:288:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_dec', this function's name, in a string
#5791: FILE: drivers/input/lirc/lirc_igorplugusb.c:288:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5797: FILE: drivers/input/lirc/lirc_igorplugusb.c:294:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#5803: FILE: drivers/input/lirc/lirc_igorplugusb.c:300:
+ * evenly divisible by code_length to the buffer
+**/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#5814: FILE: drivers/input/lirc/lirc_igorplugusb.c:311:
+	ret = usb_control_msg(

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#5816: FILE: drivers/input/lirc/lirc_igorplugusb.c:313:
+	      GET_INFRACODE, USB_TYPE_VENDOR|USB_DIR_IN,
 	                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5832: FILE: drivers/input/lirc/lirc_igorplugusb.c:329:
+			printk(DRIVER_NAME "[%d]: Device buffer overrun.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5833: FILE: drivers/input/lirc/lirc_igorplugusb.c:330:
+			printk(DRIVER_NAME "[%d]: Device buffer overrun.\n",
+				ir->devnum);

CHECK:BRACES: braces {} should be used on all arms of this statement
#5841: FILE: drivers/input/lirc/lirc_igorplugusb.c:338:
+		if (timediff + 1 > PULSE_MASK / 1000000)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#5843: FILE: drivers/input/lirc/lirc_igorplugusb.c:340:
+		else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#5869: FILE: drivers/input/lirc/lirc_igorplugusb.c:366:
+		ret = usb_control_msg(

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#5871: FILE: drivers/input/lirc/lirc_igorplugusb.c:368:
+		      SET_INFRABUFFER_EMPTY, USB_TYPE_VENDOR|USB_DIR_IN,
 		                                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5876: FILE: drivers/input/lirc/lirc_igorplugusb.c:373:
+			printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: "

WARNING:SPLIT_STRING: quoted string split across lines
#5877: FILE: drivers/input/lirc/lirc_igorplugusb.c:374:
+			printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: "
+			       "error %d\n", ir->devnum, ret);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#5879: FILE: drivers/input/lirc/lirc_igorplugusb.c:376:
+		return SUCCESS;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#5879: FILE: drivers/input/lirc/lirc_igorplugusb.c:376:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5880: FILE: drivers/input/lirc/lirc_igorplugusb.c:377:
+		printk(DRIVER_NAME "[%d]: GET_INFRACODE: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5881: FILE: drivers/input/lirc/lirc_igorplugusb.c:378:
+		printk(DRIVER_NAME "[%d]: GET_INFRACODE: error %d\n",
+			ir->devnum, ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5886: FILE: drivers/input/lirc/lirc_igorplugusb.c:383:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5889: FILE: drivers/input/lirc/lirc_igorplugusb.c:386:
+static int usb_remote_probe(struct usb_interface *intf,
+				const struct usb_device_id *id)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5914: FILE: drivers/input/lirc/lirc_igorplugusb.c:411:
+	    != USB_DIR_IN)
+	    || (ep_ctl2->desc.bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5926: FILE: drivers/input/lirc/lirc_igorplugusb.c:423:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir)...) over kmalloc(sizeof(struct irctl)...)
#5929: FILE: drivers/input/lirc/lirc_igorplugusb.c:426:
+	ir = kmalloc(sizeof(struct irctl), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#5937: FILE: drivers/input/lirc/lirc_igorplugusb.c:434:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#5943: FILE: drivers/input/lirc/lirc_igorplugusb.c:440:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5950: FILE: drivers/input/lirc/lirc_igorplugusb.c:447:
+	if (lirc_buffer_init(rbuf, bytes_in_key,
+			DEVICE_BUFLEN+ADDITIONAL_LIRC_BYTES)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5950: FILE: drivers/input/lirc/lirc_igorplugusb.c:447:
+			DEVICE_BUFLEN+ADDITIONAL_LIRC_BYTES)) {
 			             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5956: FILE: drivers/input/lirc/lirc_igorplugusb.c:453:
+	ir->buf_in = usb_buffer_alloc(dev,
+			      DEVICE_BUFLEN+DEVICE_HEADERLEN,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5956: FILE: drivers/input/lirc/lirc_igorplugusb.c:453:
+			      DEVICE_BUFLEN+DEVICE_HEADERLEN,
 			                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5967: FILE: drivers/input/lirc/lirc_igorplugusb.c:464:
+	plugin->code_length = bytes_in_key*8; /* in bits */
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5989: FILE: drivers/input/lirc/lirc_igorplugusb.c:486:
+		usb_buffer_free(dev, DEVICE_BUFLEN+DEVICE_HEADERLEN,
 		                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5990: FILE: drivers/input/lirc/lirc_igorplugusb.c:487:
+		usb_buffer_free(dev, DEVICE_BUFLEN+DEVICE_HEADERLEN,
+			ir->buf_in, ir->dma_in);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6000: FILE: drivers/input/lirc/lirc_igorplugusb.c:497:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6001: FILE: drivers/input/lirc/lirc_igorplugusb.c:498:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",
+			devnum, mem_failure);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6009: FILE: drivers/input/lirc/lirc_igorplugusb.c:506:
+	ir->len_in = DEVICE_BUFLEN+DEVICE_HEADERLEN;
 	                          ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#6014: FILE: drivers/input/lirc/lirc_igorplugusb.c:511:
+	if (dev->descriptor.iManufacturer
+		&& usb_string(dev, dev->descriptor.iManufacturer, buf, 63) > 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#6017: FILE: drivers/input/lirc/lirc_igorplugusb.c:514:
+	if (dev->descriptor.iProduct
+		&& usb_string(dev, dev->descriptor.iProduct, buf, 63) > 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6019: FILE: drivers/input/lirc/lirc_igorplugusb.c:516:
+	printk(DRIVER_NAME "[%d]: %s on usb%d:%d\n", devnum, name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6024: FILE: drivers/input/lirc/lirc_igorplugusb.c:521:
+	ret = usb_control_msg(ir->usbdev, usb_rcvctrlpipe(ir->usbdev, 0),
+		SET_INFRABUFFER_EMPTY, USB_TYPE_VENDOR|USB_DIR_IN,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#6024: FILE: drivers/input/lirc/lirc_igorplugusb.c:521:
+		SET_INFRABUFFER_EMPTY, USB_TYPE_VENDOR|USB_DIR_IN,
 		                                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6029: FILE: drivers/input/lirc/lirc_igorplugusb.c:526:
+		printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6030: FILE: drivers/input/lirc/lirc_igorplugusb.c:527:
+		printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: error %d\n",
+			devnum, ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6036: FILE: drivers/input/lirc/lirc_igorplugusb.c:533:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#6041: FILE: drivers/input/lirc/lirc_igorplugusb.c:538:
+	struct irctl *ir = usb_get_intfdata(intf);
+	usb_set_intfdata(intf, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6073: FILE: drivers/input/lirc/lirc_igorplugusb.c:570:
+	printk(KERN_INFO "\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6075: FILE: drivers/input/lirc/lirc_igorplugusb.c:572:
+	printk(DRIVER_NAME ": " DRIVER_AUTHOR "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6084: FILE: drivers/input/lirc/lirc_igorplugusb.c:581:
+		printk(DRIVER_NAME ": usb register failed, result = %d\n", i);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6129: FILE: drivers/input/lirc/lirc_imon.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6168: FILE: drivers/input/lirc/lirc_imon.c:40:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#6169: FILE: drivers/input/lirc/lirc_imon.c:41:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6186: FILE: drivers/input/lirc/lirc_imon.c:58:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6204: FILE: drivers/input/lirc/lirc_imon.c:76:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#6280: FILE: drivers/input/lirc/lirc_imon.c:152:
+static struct file_operations vfd_fops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6311: FILE: drivers/input/lirc/lirc_imon.c:183:
+};
+static unsigned char vfd_packet6[] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6349: FILE: drivers/input/lirc/lirc_imon.c:221:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#6363: FILE: drivers/input/lirc/lirc_imon.c:235:
+MODULE_PARM_DESC(is_lcd, "The device is an LCD: 0=no (it's a VFD), "
+		 "1=yes (default: no)");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6387: FILE: drivers/input/lirc/lirc_imon.c:259:
+		err("%s: unable to deregister from lirc(%d)",
+			__func__, retval);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#6391: FILE: drivers/input/lirc/lirc_imon.c:263:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6419: FILE: drivers/input/lirc/lirc_imon.c:291:
+		err("%s: no context found for minor %d",
+					__func__, subminor);

CHECK:SPACING: No space is necessary after a cast
#6454: FILE: drivers/input/lirc/lirc_imon.c:326:
+	context = (struct imon_context *) file->private_data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6475: FILE: drivers/input/lirc/lirc_imon.c:347:
+			 * ir_close. */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*control_req)...) over kmalloc(sizeof(struct usb_ctrlrequest)...)
#6510: FILE: drivers/input/lirc/lirc_imon.c:382:
+		control_req = kmalloc(sizeof(struct usb_ctrlrequest), GFP_NOIO);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!control_req"
#6511: FILE: drivers/input/lirc/lirc_imon.c:383:
+		if (control_req == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#6515: FILE: drivers/input/lirc/lirc_imon.c:387:
+		control_req->bRequestType = 0x21;

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#6516: FILE: drivers/input/lirc/lirc_imon.c:388:
+		control_req->bRequest = 0x09;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#6517: FILE: drivers/input/lirc/lirc_imon.c:389:
+		control_req->wValue = cpu_to_le16(0x0002);

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#6518: FILE: drivers/input/lirc/lirc_imon.c:390:
+		control_req->wIndex = cpu_to_le16(0x0100);

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#6519: FILE: drivers/input/lirc/lirc_imon.c:391:
+		control_req->wLength = cpu_to_le16(0x0800);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around context->tx.busy
#6534: FILE: drivers/input/lirc/lirc_imon.c:406:
+	atomic_set(&(context->tx.busy), 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around context->tx.busy
#6538: FILE: drivers/input/lirc/lirc_imon.c:410:
+		atomic_set(&(context->tx.busy), 0);

WARNING:TYPO_SPELLING: 'tranmission' may be misspelled - perhaps 'transmission'?
#6541: FILE: drivers/input/lirc/lirc_imon.c:413:
+		/* Wait for tranmission to complete(or abort) */
 		            ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#6610: FILE: drivers/input/lirc/lirc_imon.c:482:
+		strcpy(buf, "The device it associating press some button "
+			    "on the remote.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#6614: FILE: drivers/input/lirc/lirc_imon.c:486:
+			    "Echo something into this file to start "
+			    "the process.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#6617: FILE: drivers/input/lirc/lirc_imon.c:489:
+		strcpy(buf, "Device is closed, you need to open it to "
+			    "associate the remote(you can use irw).\n");

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_associate_remote' to 'associate_remote_show' 'store_associate_remote' to 'associate_remote_store'
#6642: FILE: drivers/input/lirc/lirc_imon.c:514:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#6644: FILE: drivers/input/lirc/lirc_imon.c:516:
+static DEVICE_ATTR(associate_remote, S_IWUSR | S_IRUGO, show_associate_remote,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6656: FILE: drivers/input/lirc/lirc_imon.c:528:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6658: FILE: drivers/input/lirc/lirc_imon.c:530:
+
+

CHECK:SPACING: No space is necessary after a cast
#6679: FILE: drivers/input/lirc/lirc_imon.c:551:
+	context = (struct imon_context *) file->private_data;

CHECK:SPACING: No space is necessary after a cast
#6716: FILE: drivers/input/lirc/lirc_imon.c:588:
+		context->usb_tx_buf[7] = (unsigned char) seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6721: FILE: drivers/input/lirc/lirc_imon.c:593:
+			err("%s: send packet failed for packet #%d",
+					__func__, seq/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6721: FILE: drivers/input/lirc/lirc_imon.c:593:
+					__func__, seq/2);
 					             ^

CHECK:SPACING: No space is necessary after a cast
#6733: FILE: drivers/input/lirc/lirc_imon.c:605:
+		context->usb_tx_buf[7] = (unsigned char) seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6737: FILE: drivers/input/lirc/lirc_imon.c:609:
+			err("%s: send packet failed for packet #%d",
+					__func__, seq/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#6737: FILE: drivers/input/lirc/lirc_imon.c:609:
+					__func__, seq/2);
 					             ^

CHECK:SPACING: No space is necessary after a cast
#6765: FILE: drivers/input/lirc/lirc_imon.c:637:
+	context = (struct imon_context *) file->private_data;

CHECK:SPACING: No space is necessary after a cast
#6781: FILE: drivers/input/lirc/lirc_imon.c:653:
+		    __func__, (int) n_bytes);

CHECK:SPACING: No space is necessary after a cast
#6796: FILE: drivers/input/lirc/lirc_imon.c:668:
+		info("%s: write %d bytes to LCD", __func__, (int) n_bytes);

CHECK:SPACING: No space is necessary after a cast
#6812: FILE: drivers/input/lirc/lirc_imon.c:684:
+	context = (struct imon_context *) urb->context;

WARNING:RETURN_VOID: void function return statements are not generally useful
#6823: FILE: drivers/input/lirc/lirc_imon.c:695:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#6836: FILE: drivers/input/lirc/lirc_imon.c:708:
+	context = (struct imon_context *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6852: FILE: drivers/input/lirc/lirc_imon.c:724:
+	usb_fill_int_urb(context->rx_urb, context->dev,
+		usb_rcvintpipe(context->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6853: FILE: drivers/input/lirc/lirc_imon.c:725:
+		usb_rcvintpipe(context->dev,
+				context->rx_endpoint->bEndpointAddress),

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ir_open', this function's name, in a string
#6860: FILE: drivers/input/lirc/lirc_imon.c:732:
+		err("%s: usb_submit_urb failed for ir_open(%d)",

CHECK:BRACES: Unbalanced braces around else statement
#6862: FILE: drivers/input/lirc/lirc_imon.c:734:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6897: FILE: drivers/input/lirc/lirc_imon.c:769:
+		 * at disconnect time, so do it now. */

WARNING:RETURN_VOID: void function return statements are not generally useful
#6910: FILE: drivers/input/lirc/lirc_imon.c:782:
+	return;
+}

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#6931: FILE: drivers/input/lirc/lirc_imon.c:803:
+		buf[i] = value>>(i*8);
 		              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#6931: FILE: drivers/input/lirc/lirc_imon.c:803:
+		buf[i] = value>>(i*8);
 		                  ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#6936: FILE: drivers/input/lirc/lirc_imon.c:808:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6988: FILE: drivers/input/lirc/lirc_imon.c:860:
+		printk(KERN_INFO "%02x ", buf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#6989: FILE: drivers/input/lirc/lirc_imon.c:861:
+	printk(KERN_INFO "\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7009: FILE: drivers/input/lirc/lirc_imon.c:881:
+	 * I've decided to adopt his algorithm. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#7023: FILE: drivers/input/lirc/lirc_imon.c:895:
+			int curr_bit = !(buf[octet] & mask);
+			if (curr_bit != context->rx.prev_bit) {

CHECK:SPACING: No space is necessary after a cast
#7053: FILE: drivers/input/lirc/lirc_imon.c:925:
+	context = (struct imon_context *) urb->context;

WARNING:RETURN_VOID: void function return statements are not generally useful
#7071: FILE: drivers/input/lirc/lirc_imon.c:943:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7073: FILE: drivers/input/lirc/lirc_imon.c:945:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#7127: FILE: drivers/input/lirc/lirc_imon.c:999:
+		int ep_type;
+		ep = &iface_desc->endpoint[i].desc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7132: FILE: drivers/input/lirc/lirc_imon.c:1004:
+		if (!ir_ep_found &&
+			ep_dir == USB_DIR_IN &&

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#7134: FILE: drivers/input/lirc/lirc_imon.c:1006:
+			ep_type == USB_ENDPOINT_XFER_INT) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#7160: FILE: drivers/input/lirc/lirc_imon.c:1032:
+				info("%s: LCD device uses control endpoint, "
+				     "not interface OUT endpoint", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7187: FILE: drivers/input/lirc/lirc_imon.c:1059:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*context)...) over kmalloc(sizeof(struct imon_context)...)
#7192: FILE: drivers/input/lirc/lirc_imon.c:1064:
+	context = kmalloc(sizeof(struct imon_context), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#7198: FILE: drivers/input/lirc/lirc_imon.c:1070:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#7204: FILE: drivers/input/lirc/lirc_imon.c:1076:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

CHECK:BRACES: Unbalanced braces around else statement
#7261: FILE: drivers/input/lirc/lirc_imon.c:1133:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#7282: FILE: drivers/input/lirc/lirc_imon.c:1154:
+	if (cpu_to_le16(dev->descriptor.idProduct) == 0xffdc) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7298: FILE: drivers/input/lirc/lirc_imon.c:1170:
+			info("%s: could not get a minor number for VFD",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7303: FILE: drivers/input/lirc/lirc_imon.c:1175:
+	info("%s: iMON device on usb<%d:%d> initialized",
+			__func__, dev->bus->busnum, dev->devnum);

WARNING:TYPO_SPELLING: 'disonnect' may be misspelled - perhaps 'disconnect'?
#7335: FILE: drivers/input/lirc/lirc_imon.c:1207:
+ * Callback function for USB core API: disonnect
                                        ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7350: FILE: drivers/input/lirc/lirc_imon.c:1222:
+	 * hasn't been called */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7415: FILE: drivers/input/lirc/lirc_it87.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#7431: FILE: drivers/input/lirc/lirc_it87.c:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#7432: FILE: drivers/input/lirc/lirc_it87.c:18:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7447: FILE: drivers/input/lirc/lirc_it87.c:33:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7452: FILE: drivers/input/lirc/lirc_it87.c:38:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#7503: FILE: drivers/input/lirc/lirc_it87.c:89:
+#define IT87_TIMEOUT	(HZ*5/100)
                     	   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#7503: FILE: drivers/input/lirc/lirc_it87.c:89:
+#define IT87_TIMEOUT	(HZ*5/100)
                     	     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#7510: FILE: drivers/input/lirc/lirc_it87.c:96:
+			printk(KERN_DEBUG LIRC_DRIVER_NAME ": "	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7565: FILE: drivers/input/lirc/lirc_it87.c:151:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7579: FILE: drivers/input/lirc/lirc_it87.c:165:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7585: FILE: drivers/input/lirc/lirc_it87.c:171:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7594: FILE: drivers/input/lirc/lirc_it87.c:180:
+
+

CHECK:SPACING: No space is necessary after a cast
#7611: FILE: drivers/input/lirc/lirc_it87.c:197:
+		if (copy_to_user((void *) buf + n, (void *) (rx_buf + rx_head),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7624: FILE: drivers/input/lirc/lirc_it87.c:210:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7652: FILE: drivers/input/lirc/lirc_it87.c:238:
+
+

CHECK:SPACING: No space is necessary after a cast
#7674: FILE: drivers/input/lirc/lirc_it87.c:260:
+		retval = put_user(value, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#7679: FILE: drivers/input/lirc/lirc_it87.c:265:
+		retval = get_user(value, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#7683: FILE: drivers/input/lirc/lirc_it87.c:269:
+		retval = get_user(ivalue, (unsigned int *) arg);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#7711: FILE: drivers/input/lirc/lirc_it87.c:297:
+			retval = -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#7714: FILE: drivers/input/lirc/lirc_it87.c:300:
+			retval = -ENOSYS;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7729: FILE: drivers/input/lirc/lirc_it87.c:315:
+	/* statistically pulses are ~TIME_CONST/2 too long: we could
+	   maybe make this more exactly but this is good enough */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7729: FILE: drivers/input/lirc/lirc_it87.c:315:
+	   maybe make this more exactly but this is good enough */

CHECK:BRACES: braces {} should be used on all arms of this statement
#7730: FILE: drivers/input/lirc/lirc_it87.c:316:
+	if (flag) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#7737: FILE: drivers/input/lirc/lirc_it87.c:323:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7749: FILE: drivers/input/lirc/lirc_it87.c:335:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#7750: FILE: drivers/input/lirc/lirc_it87.c:336:
+static struct file_operations lirc_fops = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7761: FILE: drivers/input/lirc/lirc_it87.c:347:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7769: FILE: drivers/input/lirc/lirc_it87.c:355:
+       .name^I^I= LIRC_DRIVER_NAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7770: FILE: drivers/input/lirc/lirc_it87.c:356:
+       .minor^I^I= -1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7771: FILE: drivers/input/lirc/lirc_it87.c:357:
+       .code_length^I= 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7772: FILE: drivers/input/lirc/lirc_it87.c:358:
+       .sample_rate^I= 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7773: FILE: drivers/input/lirc/lirc_it87.c:359:
+       .data^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7774: FILE: drivers/input/lirc/lirc_it87.c:360:
+       .add_to_buf^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7775: FILE: drivers/input/lirc/lirc_it87.c:361:
+       .get_queue^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7776: FILE: drivers/input/lirc/lirc_it87.c:362:
+       .set_use_inc^I= set_use_inc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7777: FILE: drivers/input/lirc/lirc_it87.c:363:
+       .set_use_dec^I= set_use_dec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7778: FILE: drivers/input/lirc/lirc_it87.c:364:
+       .fops^I^I= &lirc_fops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7779: FILE: drivers/input/lirc/lirc_it87.c:365:
+       .dev^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7780: FILE: drivers/input/lirc/lirc_it87.c:366:
+       .owner^I^I= THIS_MODULE,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7783: FILE: drivers/input/lirc/lirc_it87.c:369:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#7790: FILE: drivers/input/lirc/lirc_it87.c:376:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_chrdev', this function's name, in a string
#7790: FILE: drivers/input/lirc/lirc_it87.c:376:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7796: FILE: drivers/input/lirc/lirc_it87.c:382:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7803: FILE: drivers/input/lirc/lirc_it87.c:389:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#7813: FILE: drivers/input/lirc/lirc_it87.c:399:
+		deltv = deltv*1000000 + tv2->tv_usec - tv1->tv_usec;
 		             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7826: FILE: drivers/input/lirc/lirc_it87.c:412:
+		/* We have timed out.
+		   Disable the RX mechanism.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#7839: FILE: drivers/input/lirc/lirc_it87.c:425:
+		     io+IT87_CIR_TCR1);
 		       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7843: FILE: drivers/input/lirc/lirc_it87.c:429:
+		/* if last received signal was a pulse, but receiving
+		   stopped within the 9 bit frame, we need to finish

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7846: FILE: drivers/input/lirc/lirc_it87.c:432:
+		   two sequences next time. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7879: FILE: drivers/input/lirc/lirc_it87.c:465:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7905: FILE: drivers/input/lirc/lirc_it87.c:491:
+					 * sequence detection */

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#7915: FILE: drivers/input/lirc/lirc_it87.c:501:
+						if (lastbit == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7917: FILE: drivers/input/lirc/lirc_it87.c:503:
+							add_read_queue(0,
+								acc_space *

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#7923: FILE: drivers/input/lirc/lirc_it87.c:509:
+						if (lastbit == 1) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7925: FILE: drivers/input/lirc/lirc_it87.c:511:
+							add_read_queue(1,
+								acc_pulse *

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7948: FILE: drivers/input/lirc/lirc_it87.c:534:
+				/* if nothing came in last 2 cycles,
+				   it was gap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7948: FILE: drivers/input/lirc/lirc_it87.c:534:
+				   it was gap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7968: FILE: drivers/input/lirc/lirc_it87.c:554:
+					/* deltintrtv > 2*TIME_CONST,
+					   remember ? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7968: FILE: drivers/input/lirc/lirc_it87.c:554:
+					   remember ? */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#7971: FILE: drivers/input/lirc/lirc_it87.c:557:
+						       deltv-TIME_CONST);
 						            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#7974: FILE: drivers/input/lirc/lirc_it87.c:560:
+					if (last_tv.tv_usec >= TIME_CONST)
[...]
+					else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#7976: FILE: drivers/input/lirc/lirc_it87.c:562:
+					else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7985: FILE: drivers/input/lirc/lirc_it87.c:571:
+					 * sequence detection */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8013: FILE: drivers/input/lirc/lirc_it87.c:599:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#8028: FILE: drivers/input/lirc/lirc_it87.c:614:
+		long i = 0;
+		for (i = 0; i < count_bits; i++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8054: FILE: drivers/input/lirc/lirc_it87.c:640:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8056: FILE: drivers/input/lirc/lirc_it87.c:642:
+/*
+maybe: exchange space and pulse because

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8060: FILE: drivers/input/lirc/lirc_it87.c:646:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8071: FILE: drivers/input/lirc/lirc_it87.c:657:
+
+

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void init_send() should probably be void init_send(void)
#8072: FILE: drivers/input/lirc/lirc_it87.c:658:
+static void init_send()

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8086: FILE: drivers/input/lirc/lirc_it87.c:672:
+
+

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#8099: FILE: drivers/input/lirc/lirc_it87.c:685:
+	/* then reenable receiver */
 	        ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8107: FILE: drivers/input/lirc/lirc_it87.c:693:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8117: FILE: drivers/input/lirc/lirc_it87.c:703:
+	outb(IT87_CIR_BAUDRATE_DIVISOR % 0x100, io+IT87_CIR_BDLR);
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8118: FILE: drivers/input/lirc/lirc_it87.c:704:
+	outb(IT87_CIR_BAUDRATE_DIVISOR / 0x100, io+IT87_CIR_BDHR);
 	                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8137: FILE: drivers/input/lirc/lirc_it87.c:723:
+		/* TX: it87_freq (36kHz),
+		   'reserved' sensitivity setting (0x00) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#8137: FILE: drivers/input/lirc/lirc_it87.c:723:
+		   'reserved' sensitivity setting (0x00) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8149: FILE: drivers/input/lirc/lirc_it87.c:735:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8162: FILE: drivers/input/lirc/lirc_it87.c:748:
+	outb(IT87_CIR_TCR1_FIFOCLR, io+IT87_CIR_TCR1);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8164: FILE: drivers/input/lirc/lirc_it87.c:750:
+	outb(IT87_CIR_IER_RESET, io+IT87_CIR_IER);
 	                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8169: FILE: drivers/input/lirc/lirc_it87.c:755:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8176: FILE: drivers/input/lirc/lirc_it87.c:762:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8183: FILE: drivers/input/lirc/lirc_it87.c:769:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'it87_chipid != 0x12'
#8210: FILE: drivers/input/lirc/lirc_it87.c:796:
+	if ((it87_chipid != 0x12) && (it87_chipid != 0x05)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'it87_chipid != 0x05'
#8210: FILE: drivers/input/lirc/lirc_it87.c:796:
+	if ((it87_chipid != 0x12) && (it87_chipid != 0x05)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8211: FILE: drivers/input/lirc/lirc_it87.c:797:
+		printk(KERN_INFO LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8216: FILE: drivers/input/lirc/lirc_it87.c:802:
+	printk(KERN_INFO LIRC_DRIVER_NAME

CHECK:BRACES: braces {} should be used on all arms of this statement
#8229: FILE: drivers/input/lirc/lirc_it87.c:815:
+	if (it87_io == 0) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8232: FILE: drivers/input/lirc/lirc_it87.c:818:
+		printk(KERN_INFO LIRC_DRIVER_NAME

CHECK:BRACES: Unbalanced braces around else statement
#8237: FILE: drivers/input/lirc/lirc_it87.c:823:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#8241: FILE: drivers/input/lirc/lirc_it87.c:827:
+	if (digimatrix || it87_irq == 0) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8244: FILE: drivers/input/lirc/lirc_it87.c:830:
+		printk(KERN_INFO LIRC_DRIVER_NAME

CHECK:BRACES: Unbalanced braces around else statement
#8248: FILE: drivers/input/lirc/lirc_it87.c:834:
+	} else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8253: FILE: drivers/input/lirc/lirc_it87.c:839:
+	outb(IT87_CIR_IER_RESET, io+IT87_CIR_IER);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8258: FILE: drivers/input/lirc/lirc_it87.c:844:
+	     IT87_CIR_TCR1_TXENDF, io+IT87_CIR_TCR1);
 	                             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#8262: FILE: drivers/input/lirc/lirc_it87.c:848:
+	if (request_region(io, 8, LIRC_DRIVER_NAME) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#8263: FILE: drivers/input/lirc/lirc_it87.c:849:
+		printk(KERN_ERR LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#8279: FILE: drivers/input/lirc/lirc_it87.c:865:
+		printk(KERN_ERR LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8286: FILE: drivers/input/lirc/lirc_it87.c:872:
+	printk(KERN_INFO LIRC_DRIVER_NAME

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8296: FILE: drivers/input/lirc/lirc_it87.c:882:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8300: FILE: drivers/input/lirc/lirc_it87.c:886:
+/*
+	unsigned char init_bytes[4] = IT87_INIT;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8320: FILE: drivers/input/lirc/lirc_it87.c:906:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8330: FILE: drivers/input/lirc/lirc_it87.c:916:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": Installed.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8334: FILE: drivers/input/lirc/lirc_it87.c:920:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8352: FILE: drivers/input/lirc/lirc_it87.c:938:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8358: FILE: drivers/input/lirc/lirc_it87.c:944:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": Uninstalled.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8388: FILE: drivers/input/lirc/lirc_it87.c:974:
+MODULE_PARM_DESC(digimatrix,
+	"Asus Digimatrix it87 compat. enable/disable (1/0), default: 1");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8391: FILE: drivers/input/lirc/lirc_it87.c:977:
+MODULE_PARM_DESC(digimatrix,
+	"Asus Digimatrix it87 compat. enable/disable (1/0), default: 0");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8394: FILE: drivers/input/lirc/lirc_it87.c:980:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8398: FILE: drivers/input/lirc/lirc_it87.c:984:
+MODULE_PARM_DESC(it87_freq,
+    "Carrier demodulator frequency (kHz), (default: 36)");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#8398: FILE: drivers/input/lirc/lirc_it87.c:984:
+    "Carrier demodulator frequency (kHz), (default: 36)");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8401: FILE: drivers/input/lirc/lirc_it87.c:987:
+MODULE_PARM_DESC(it87_freq,
+    "Carrier demodulator frequency (kHz), (default: 38)");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#8401: FILE: drivers/input/lirc/lirc_it87.c:987:
+    "Carrier demodulator frequency (kHz), (default: 38)");$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8406: FILE: drivers/input/lirc/lirc_it87.c:992:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8420: FILE: drivers/input/lirc/lirc_it87.h:1:
+/* lirc_it87.h */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8426: FILE: drivers/input/lirc/lirc_it87.h:7:
+/* based on the following documentation from ITE:
+   a) IT8712F Preliminary CIR Programming Guide V0.1

WARNING:TYPO_SPELLING: 'Specifiction' may be misspelled - perhaps 'Specification'?
#8427: FILE: drivers/input/lirc/lirc_it87.h:8:
+   b) IT8705F Simple LPC I/O Preliminary Specifiction V0.3
                                          ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8438: FILE: drivers/input/lirc/lirc_it87.h:19:
+/*
+#define IT87_ADRPORT      0x4e

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8542: FILE: drivers/input/lirc/lirc_ite8709.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#8558: FILE: drivers/input/lirc/lirc_ite8709.c:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#8559: FILE: drivers/input/lirc/lirc_ite8709.c:18:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#8579: FILE: drivers/input/lirc/lirc_ite8709.c:38:
+#define BUF_SIZE	(128*BUF_CHUNK_SIZE)
                 	    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#8582: FILE: drivers/input/lirc/lirc_ite8709.c:41:
+/*******************************************************************************
+* The ITE8709 device seems to be the combination of IT8512 superIO chip and    *

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#8646: FILE: drivers/input/lirc/lirc_ite8709.c:105:
+	spinlock_t hardware_lock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#8662: FILE: drivers/input/lirc/lirc_ite8709.c:121:
+			printk(KERN_DEBUG LIRC_DRIVER_NAME ": "	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8666: FILE: drivers/input/lirc/lirc_ite8709.c:125:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8668: FILE: drivers/input/lirc/lirc_ite8709.c:127:
+static unsigned char ite8709_read(struct ite8709_device *dev,
+					unsigned char port)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8671: FILE: drivers/input/lirc/lirc_ite8709.c:130:
+	return inb(dev->io+1);
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8675: FILE: drivers/input/lirc/lirc_ite8709.c:134:
+static void ite8709_write(struct ite8709_device *dev, unsigned char port,
+				unsigned char data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8678: FILE: drivers/input/lirc/lirc_ite8709.c:137:
+	outb(data, dev->io+1);
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8694: FILE: drivers/input/lirc/lirc_ite8709.c:153:
+static void ite8709_write_register(struct ite8709_device *dev,
+				unsigned char reg_adr, unsigned char reg_value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8713: FILE: drivers/input/lirc/lirc_ite8709.c:172:
+	ite8709_write_register(dev, IT8512_REG_IER,
+			IT8512_IER_IEC | IT8512_IER_RFOIE | IT8512_IER_RDAIE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8716: FILE: drivers/input/lirc/lirc_ite8709.c:175:
+	ite8709_write_register(dev, IT8512_REG_MSTCR,
+					CFG_FIFOTL | IT8512_MSTCR_FIFOCLR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8718: FILE: drivers/input/lirc/lirc_ite8709.c:177:
+	ite8709_write_register(dev, IT8512_REG_RCR,
+				IT8512_RCR_RXEN | IT8512_RCR_RXACT | CFG_DCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8737: FILE: drivers/input/lirc/lirc_ite8709.c:196:
+	ite8709_write_register(dev, IT8512_REG_MSTCR,
+				IT8512_MSTCR_RESET | IT8512_MSTCR_FIFOCLR);

WARNING:LINE_SPACING: Missing a blank line after declarations
#8747: FILE: drivers/input/lirc/lirc_ite8709.c:206:
+	struct ite8709_device *dev;
+	dev = data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#8757: FILE: drivers/input/lirc/lirc_ite8709.c:216:
+	struct ite8709_device *dev;
+	dev = data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8764: FILE: drivers/input/lirc/lirc_ite8709.c:223:
+static void ite8709_add_read_queue(struct ite8709_device *dev, int flag,
+					unsigned long long val)

CHECK:SPACING: No space is necessary after a cast
#8775: FILE: drivers/input/lirc/lirc_ite8709.c:234:
+		lirc_buffer_write_1(&dev->buffer, (void *) &value);

WARNING:LINE_SPACING: Missing a blank line after declarations
#8792: FILE: drivers/input/lirc/lirc_ite8709.c:251:
+	struct ite8709_device *dev;
+	dev = dev_id;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#8828: FILE: drivers/input/lirc/lirc_ite8709.c:287:
+			data = ite8709_read(dev, i+ITE8709_FIFO_START);
 			                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8836: FILE: drivers/input/lirc/lirc_ite8709.c:295:
+						ite8709_add_read_queue(dev, 0,
+							dev->acc_space);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8843: FILE: drivers/input/lirc/lirc_ite8709.c:302:
+						ite8709_add_read_queue(dev, 1,
+							dev->acc_pulse);

CHECK:SPACING: No space is necessary after a cast
#8874: FILE: drivers/input/lirc/lirc_ite8709.c:333:
+	dev = (struct ite8709_device *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#8874: FILE: drivers/input/lirc/lirc_ite8709.c:333:
+	unsigned long flags;
+	dev = (struct ite8709_device *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8883: FILE: drivers/input/lirc/lirc_ite8709.c:342:
+		ite8709_write_register(dev, IT8512_REG_RCR,
+						IT8512_RCR_RXACT | CFG_DCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8885: FILE: drivers/input/lirc/lirc_ite8709.c:344:
+		ite8709_write_register(dev, IT8512_REG_MSTCR,
+					CFG_FIFOTL | IT8512_MSTCR_FIFOCLR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8887: FILE: drivers/input/lirc/lirc_ite8709.c:346:
+		ite8709_write_register(dev, IT8512_REG_RCR,
+				IT8512_RCR_RXEN | IT8512_RCR_RXACT | CFG_DCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8899: FILE: drivers/input/lirc/lirc_ite8709.c:358:
+static int ite8709_cleanup(struct ite8709_device *dev, int stage, int errno,
+				char *msg)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#8901: FILE: drivers/input/lirc/lirc_ite8709.c:360:
+	if (msg != NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#8902: FILE: drivers/input/lirc/lirc_ite8709.c:361:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": %s\n", msg);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#8925: FILE: drivers/input/lirc/lirc_ite8709.c:384:
+static int __devinit ite8709_pnp_probe(struct pnp_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8926: FILE: drivers/input/lirc/lirc_ite8709.c:385:
+static int __devinit ite8709_pnp_probe(struct pnp_dev *dev,
+					const struct pnp_device_id *dev_id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ite8709_dev)...) over kzalloc(sizeof(struct ite8709_device)...)
#8939: FILE: drivers/input/lirc/lirc_ite8709.c:398:
+	ite8709_dev = kzalloc(sizeof(struct ite8709_device), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ite8709_dev"
#8940: FILE: drivers/input/lirc/lirc_ite8709.c:399:
+	if (ite8709_dev == NULL)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8948: FILE: drivers/input/lirc/lirc_ite8709.c:407:
+	ite8709_dev->hardware_lock = __SPIN_LOCK_UNLOCKED(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8955: FILE: drivers/input/lirc/lirc_ite8709.c:414:
+	tasklet_init(&ite8709_dev->tasklet, ite8709_rearm_irq,
+							(long) ite8709_dev);

CHECK:SPACING: No space is necessary after a cast
#8955: FILE: drivers/input/lirc/lirc_ite8709.c:414:
+							(long) ite8709_dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8996: FILE: drivers/input/lirc/lirc_ite8709.c:455:
+	ret = request_irq(ite8709_dev->irq, ite8709_interrupt, 0,
+					LIRC_DRIVER_NAME, ite8709_dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#9004: FILE: drivers/input/lirc/lirc_ite8709.c:463:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": device found : irq=%d io=0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9005: FILE: drivers/input/lirc/lirc_ite8709.c:464:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": device found : irq=%d io=0x%x\n",
+					ite8709_dev->irq, ite8709_dev->io);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#9010: FILE: drivers/input/lirc/lirc_ite8709.c:469:
+static void __devexit ite8709_pnp_remove(struct pnp_dev *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#9013: FILE: drivers/input/lirc/lirc_ite8709.c:472:
+	struct ite8709_device *ite8709_dev;
+	ite8709_dev = pnp_get_drvdata(dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#9017: FILE: drivers/input/lirc/lirc_ite8709.c:476:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": device removed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#9024: FILE: drivers/input/lirc/lirc_ite8709.c:483:
+	struct ite8709_device *ite8709_dev;
+	ite8709_dev = pnp_get_drvdata(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#9035: FILE: drivers/input/lirc/lirc_ite8709.c:494:
+	struct ite8709_device *ite8709_dev;
+	ite8709_dev = pnp_get_drvdata(dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9093: FILE: drivers/input/lirc/lirc_mceusb.c:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#9207: FILE: drivers/input/lirc/lirc_mceusb.c:115:
+			printk(KERN_DEBUG __FILE__ ": "	\

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9268: FILE: drivers/input/lirc/lirc_mceusb.c:176:
+	 * received was a pulse */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#9306: FILE: drivers/input/lirc/lirc_mceusb.c:214:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9311: FILE: drivers/input/lirc/lirc_mceusb.c:219:
+static inline void usb_mceusb_debug_data(const char *function, int size,
+					  const unsigned char *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#9314: FILE: drivers/input/lirc/lirc_mceusb.c:222:
+	int i;
+	if (!debug)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#9317: FILE: drivers/input/lirc/lirc_mceusb.c:225:
+	printk(KERN_DEBUG __FILE__": %s - length = %d, data = ",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#9317: FILE: drivers/input/lirc/lirc_mceusb.c:225:
+	printk(KERN_DEBUG __FILE__": %s - length = %d, data = ",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#9320: FILE: drivers/input/lirc/lirc_mceusb.c:228:
+		printk(KERN_DEBUG "%.2x ", data[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#9321: FILE: drivers/input/lirc/lirc_mceusb.c:229:
+	printk(KERN_DEBUG "\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#9329: FILE: drivers/input/lirc/lirc_mceusb.c:237:
+	dprintk("%s", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->write_urb"
#9335: FILE: drivers/input/lirc/lirc_mceusb.c:243:
+	if (dev->write_urb != NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#9368: FILE: drivers/input/lirc/lirc_mceusb.c:276:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#9381: FILE: drivers/input/lirc/lirc_mceusb.c:289:
+#if 0

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#9441: FILE: drivers/input/lirc/lirc_mceusb.c:349:
+		(sizeof(dev->lircdata)/sizeof(int)) - dev->lirccnt;
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9485: FILE: drivers/input/lirc/lirc_mceusb.c:393:
+			retval = usb_bulk_msg(dev->udev,
+					usb_rcvbulkpipe(dev->udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9486: FILE: drivers/input/lirc/lirc_mceusb.c:394:
+					usb_rcvbulkpipe(dev->udev,
+						dev->bulk_in_endpointAddr),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#9488: FILE: drivers/input/lirc/lirc_mceusb.c:396:
+					this_read, &partial, HZ*10);
 					                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9491: FILE: drivers/input/lirc/lirc_mceusb.c:399:
+			/* retry a few times on overruns; map all
+			   other errors to -EIO */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9491: FILE: drivers/input/lirc/lirc_mceusb.c:399:
+			   other errors to -EIO */

CHECK:BRACES: braces {} should be used on all arms of this statement
#9493: FILE: drivers/input/lirc/lirc_mceusb.c:401:
+				if (retval == -EOVERFLOW && retries < 5) {
[...]
+				} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#9495: FILE: drivers/input/lirc/lirc_mceusb.c:403:
+					interruptible_sleep_on_timeout(

CHECK:BRACES: Unbalanced braces around else statement
#9498: FILE: drivers/input/lirc/lirc_mceusb.c:406:
+				} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9516: FILE: drivers/input/lirc/lirc_mceusb.c:424:
+				/* sleep for a bit before performing
+				   another read */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9516: FILE: drivers/input/lirc/lirc_mceusb.c:424:
+				   another read */

WARNING:TYPO_SPELLING: 'transmittion' may be misspelled - perhaps 'transmission'?
#9550: FILE: drivers/input/lirc/lirc_mceusb.c:458:
+				 * transmittion from the remote,
 				   ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9569: FILE: drivers/input/lirc/lirc_mceusb.c:477:
+				/* always clear this if we have a
+				   valid packet */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9569: FILE: drivers/input/lirc/lirc_mceusb.c:477:
+				   valid packet */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9573: FILE: drivers/input/lirc/lirc_mceusb.c:481:
+				/* continue here to verify we haven't
+				   hit the end of the bulk_in */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9573: FILE: drivers/input/lirc/lirc_mceusb.c:481:
+				   hit the end of the bulk_in */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#9576: FILE: drivers/input/lirc/lirc_mceusb.c:484:
+
+			}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9605: FILE: drivers/input/lirc/lirc_mceusb.c:513:
+				/* on pulse->space transition, add one
+				   for the existing pulse */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9605: FILE: drivers/input/lirc/lirc_mceusb.c:513:
+				   for the existing pulse */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9618: FILE: drivers/input/lirc/lirc_mceusb.c:526:
+	/* save off some info if we are exiting mid-packet, or with
+	   leftovers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9618: FILE: drivers/input/lirc/lirc_mceusb.c:526:
+	   leftovers */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->bulk_in_buffer[bulkidx]
#9623: FILE: drivers/input/lirc/lirc_mceusb.c:531:
+		memcpy(dev->bulk_in_buffer, &(dev->bulk_in_buffer[bulkidx]),

CHECK:SPACING: No space is necessary after a cast
#9637: FILE: drivers/input/lirc/lirc_mceusb.c:545:
+	struct usb_skel *dev = (struct usb_skel *) data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->udev"
#9642: FILE: drivers/input/lirc/lirc_mceusb.c:550:
+	if (dev->udev == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#9649: FILE: drivers/input/lirc/lirc_mceusb.c:557:
+		int res;
+		dev->lircidx = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9670: FILE: drivers/input/lirc/lirc_mceusb.c:578:
+		lirc_buffer_write_n(buf,
+			(unsigned char *) &(dev->lircdata[dev->lircidx]),

CHECK:SPACING: No space is necessary after a cast
#9670: FILE: drivers/input/lirc/lirc_mceusb.c:578:
+			(unsigned char *) &(dev->lircdata[dev->lircidx]),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->lircdata[dev->lircidx]
#9670: FILE: drivers/input/lirc/lirc_mceusb.c:578:
+			(unsigned char *) &(dev->lircdata[dev->lircidx]),

WARNING:TYPO_SPELLING: 'buld' may be misspelled - perhaps 'build'?
#9694: FILE: drivers/input/lirc/lirc_mceusb.c:602:
+		dprintk("%s - nonzero write buld status received: %d",
 		                            ^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#9700: FILE: drivers/input/lirc/lirc_mceusb.c:608:
+	return;
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!minor_table[minor]"
#9736: FILE: drivers/input/lirc/lirc_mceusb.c:644:
+		if (minor_table[minor] == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#9741: FILE: drivers/input/lirc/lirc_mceusb.c:649:
+		info("Too many devices plugged in, "
+		     "can not handle this device.");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct usb_skel)...)
#9746: FILE: drivers/input/lirc/lirc_mceusb.c:654:
+	dev = kmalloc(sizeof(struct usb_skel), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#9747: FILE: drivers/input/lirc/lirc_mceusb.c:655:
+	if (dev == NULL) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#9785: FILE: drivers/input/lirc/lirc_mceusb.c:693:
+		    == 0x00)
+		    && ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) ==

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#9804: FILE: drivers/input/lirc/lirc_mceusb.c:712:
+			usb_fill_bulk_urb(dev->write_urb, udev,
+				      usb_sndbulkpipe

CHECK:LINE_SPACING: Please don't use multiple blank lines
#9819: FILE: drivers/input/lirc/lirc_mceusb.c:727:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#9821: FILE: drivers/input/lirc/lirc_mceusb.c:729:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#9828: FILE: drivers/input/lirc/lirc_mceusb.c:736:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#9870: FILE: drivers/input/lirc/lirc_mceusb.c:778:
+		(void) usb_bulk_msg(udev,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#9873: FILE: drivers/input/lirc/lirc_mceusb.c:781:
+				    junk, 64, &partial, HZ*10);
 				                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9882: FILE: drivers/input/lirc/lirc_mceusb.c:790:
+	/* info("USB Microsoft IR Transceiver device now attached to msir%d",
+		dev->minor); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9882: FILE: drivers/input/lirc/lirc_mceusb.c:790:
+		dev->minor); */

WARNING:LINE_SPACING: Missing a blank line after declarations
#9908: FILE: drivers/input/lirc/lirc_mceusb.c:816:
+	int minor;
+	dev = usb_get_intfdata(interface);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#9936: FILE: drivers/input/lirc/lirc_mceusb.c:844:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#9957: FILE: drivers/input/lirc/lirc_mceusb.c:865:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9989: FILE: drivers/input/lirc/lirc_mceusb2.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10019: FILE: drivers/input/lirc/lirc_mceusb2.c:31:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10020: FILE: drivers/input/lirc/lirc_mceusb2.c:32:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10070: FILE: drivers/input/lirc/lirc_mceusb2.c:82:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#10080: FILE: drivers/input/lirc/lirc_mceusb2.c:92:
+			printk(KERN_DEBUG fmt, ## args);	\

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#10191: FILE: drivers/input/lirc/lirc_mceusb2.c:203:
+struct irctl {
+

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#10223: FILE: drivers/input/lirc/lirc_mceusb2.c:235:
+	struct mutex lock;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#10236: FILE: drivers/input/lirc/lirc_mceusb2.c:248:
+	char codes[USB_BUFLEN*3 + 1];
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#10243: FILE: drivers/input/lirc/lirc_mceusb2.c:255:
+		snprintf(codes+i*3, 4, "%02x ", buf[i] & 0xFF);
 		              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#10243: FILE: drivers/input/lirc/lirc_mceusb2.c:255:
+		snprintf(codes+i*3, 4, "%02x ", buf[i] & 0xFF);
 		                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#10245: FILE: drivers/input/lirc/lirc_mceusb2.c:257:
+	printk(KERN_INFO "" DRIVER_NAME "[%d]: data received %s (length=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10246: FILE: drivers/input/lirc/lirc_mceusb2.c:258:
+	printk(KERN_INFO "" DRIVER_NAME "[%d]: data received %s (length=%d)\n",
+		ir->devnum, codes, len);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#10269: FILE: drivers/input/lirc/lirc_mceusb2.c:281:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10271: FILE: drivers/input/lirc/lirc_mceusb2.c:283:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10290: FILE: drivers/input/lirc/lirc_mceusb2.c:302:
+					usb_fill_int_urb(async_urb, ir->usbdev,
+						usb_sndintpipe(ir->usbdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10291: FILE: drivers/input/lirc/lirc_mceusb2.c:303:
+						usb_sndintpipe(ir->usbdev,
+							ep->bEndpointAddress),

CHECK:SPACING: No space is necessary after a cast
#10294: FILE: drivers/input/lirc/lirc_mceusb2.c:306:
+					(usb_complete_t) usb_async_callback,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10301: FILE: drivers/input/lirc/lirc_mceusb2.c:313:
+					usb_fill_int_urb(async_urb, ir->usbdev,
+						usb_rcvintpipe(ir->usbdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10302: FILE: drivers/input/lirc/lirc_mceusb2.c:314:
+						usb_rcvintpipe(ir->usbdev,
+							ep->bEndpointAddress),

CHECK:SPACING: No space is necessary after a cast
#10304: FILE: drivers/input/lirc/lirc_mceusb2.c:316:
+					(usb_complete_t) usb_async_callback,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10344: FILE: drivers/input/lirc/lirc_mceusb2.c:356:
+		printk(DRIVER_NAME "[%d]: error in lirc_unregister minor: %d\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10347: FILE: drivers/input/lirc/lirc_mceusb2.c:359:
+			printk(DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#10349: FILE: drivers/input/lirc/lirc_mceusb2.c:361:
+				"[%d]: device is opened, will unregister"
+				" on close\n", devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10357: FILE: drivers/input/lirc/lirc_mceusb2.c:369:
+			printk(DRIVER_NAME "[%d]: lirc_unregister failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10358: FILE: drivers/input/lirc/lirc_mceusb2.c:370:
+			printk(DRIVER_NAME "[%d]: lirc_unregister failed\n",
+			devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10362: FILE: drivers/input/lirc/lirc_mceusb2.c:374:
+		printk(DRIVER_NAME "[%d]: didn't free resources\n", devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10366: FILE: drivers/input/lirc/lirc_mceusb2.c:378:
+	printk(DRIVER_NAME "[%d]: usb remote disconnected\n", devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10380: FILE: drivers/input/lirc/lirc_mceusb2.c:392:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_inc', this function's name, in a string
#10380: FILE: drivers/input/lirc/lirc_mceusb2.c:392:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10399: FILE: drivers/input/lirc/lirc_mceusb2.c:411:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_dec', this function's name, in a string
#10399: FILE: drivers/input/lirc/lirc_mceusb2.c:411:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

CHECK:SPACING: No space is necessary after a cast
#10415: FILE: drivers/input/lirc/lirc_mceusb2.c:427:
+				    (unsigned char *) &ir->lircdata);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#10454: FILE: drivers/input/lirc/lirc_mceusb2.c:466:
+			switch (ir->buf_in[i]) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#10477: FILE: drivers/input/lirc/lirc_mceusb2.c:489:
+				     j <= packet_len && (i+j < buf_len);
 				                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#10492: FILE: drivers/input/lirc/lirc_mceusb2.c:504:
+						 MCE_PULSE_MASK)*MCE_TIME_UNIT;
 						                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#10503: FILE: drivers/input/lirc/lirc_mceusb2.c:515:
+				/* A transmission containing one or
+				   more consecutive ir commands always

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10506: FILE: drivers/input/lirc/lirc_mceusb2.c:518:
+				   0x00 0x00 0x80 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#10509: FILE: drivers/input/lirc/lirc_mceusb2.c:521:
+		/*
+		Uncomment this if the last 100ms

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10545: FILE: drivers/input/lirc/lirc_mceusb2.c:557:
+
+

WARNING:TYPO_SPELLING: 'Singnal' may be misspelled - perhaps 'Signal'?
#10553: FILE: drivers/input/lirc/lirc_mceusb2.c:565:
+	unsigned long signal_duration = 0; /* Singnal length in us */
 	                                      ^^^^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#10568: FILE: drivers/input/lirc/lirc_mceusb2.c:580:
+	if (count > LIRCBUF_SIZE || count%2 == 0)
 	                                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmdcount < MCE_CMDBUF_SIZE'
#10586: FILE: drivers/input/lirc/lirc_mceusb2.c:598:
+			if ((cmdcount < MCE_CMDBUF_SIZE) &&
+			    (cmdcount - MCE_TX_HEADER_LENGTH) %
+			     MCE_CODE_LENGTH == 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#10619: FILE: drivers/input/lirc/lirc_mceusb2.c:631:
+	/* The lircd gap calculation expects the write function to
+	   wait the time it takes for the ircommand to be sent before

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10620: FILE: drivers/input/lirc/lirc_mceusb2.c:632:
+	   it returns. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10640: FILE: drivers/input/lirc/lirc_mceusb2.c:652:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#10650: FILE: drivers/input/lirc/lirc_mceusb2.c:662:
+	if (ir->carrier_freq != carrier) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#10654: FILE: drivers/input/lirc/lirc_mceusb2.c:666:
+			dprintk(DRIVER_NAME "[%d]: SET_CARRIER disabling "
+				"carrier modulation\n", ir->devnum);

WARNING:SPLIT_STRING: quoted string split across lines
#10668: FILE: drivers/input/lirc/lirc_mceusb2.c:680:
+				dprintk(DRIVER_NAME "[%d]: SET_CARRIER "
+					"requesting %d Hz\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#10672: FILE: drivers/input/lirc/lirc_mceusb2.c:684:
+				/* Transmit the new carrier to the mce
+				   device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#10672: FILE: drivers/input/lirc/lirc_mceusb2.c:684:
+				   device */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#10682: FILE: drivers/input/lirc/lirc_mceusb2.c:694:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10687: FILE: drivers/input/lirc/lirc_mceusb2.c:699:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10701: FILE: drivers/input/lirc/lirc_mceusb2.c:713:
+
+

CHECK:SPACING: No space is necessary after a cast
#10705: FILE: drivers/input/lirc/lirc_mceusb2.c:717:
+		result = get_user(ivalue, (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#10726: FILE: drivers/input/lirc/lirc_mceusb2.c:738:
+				  (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#10734: FILE: drivers/input/lirc/lirc_mceusb2.c:746:
+		result = get_user(lvalue, (unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#10738: FILE: drivers/input/lirc/lirc_mceusb2.c:750:
+		if (lvalue != (LIRC_MODE_PULSE&LIRC_CAN_SEND_MASK))
 		                              ^

CHECK:SPACING: No space is necessary after a cast
#10744: FILE: drivers/input/lirc/lirc_mceusb2.c:756:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#10758: FILE: drivers/input/lirc/lirc_mceusb2.c:770:
+static struct file_operations lirc_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10762: FILE: drivers/input/lirc/lirc_mceusb2.c:774:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10764: FILE: drivers/input/lirc/lirc_mceusb2.c:776:
+static int usb_remote_probe(struct usb_interface *intf,
+				const struct usb_device_id *id)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ep_in == NULL'
#10796: FILE: drivers/input/lirc/lirc_mceusb2.c:808:
+		if ((ep_in == NULL)
+			&& ((ep->bEndpointAddress & USB_ENDPOINT_DIR_MASK)
+			    == USB_DIR_IN)
+			&& (((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)
+			    == USB_ENDPOINT_XFER_BULK)
+			|| ((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)
+			    == USB_ENDPOINT_XFER_INT))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ep_in"
#10796: FILE: drivers/input/lirc/lirc_mceusb2.c:808:
+		if ((ep_in == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10797: FILE: drivers/input/lirc/lirc_mceusb2.c:809:
+		if ((ep_in == NULL)
+			&& ((ep->bEndpointAddress & USB_ENDPOINT_DIR_MASK)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10799: FILE: drivers/input/lirc/lirc_mceusb2.c:811:
+			    == USB_DIR_IN)
+			&& (((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10801: FILE: drivers/input/lirc/lirc_mceusb2.c:813:
+			    == USB_ENDPOINT_XFER_BULK)
+			|| ((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#10803: FILE: drivers/input/lirc/lirc_mceusb2.c:815:
+			    == USB_ENDPOINT_XFER_INT))) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#10805: FILE: drivers/input/lirc/lirc_mceusb2.c:817:
+			dprintk(DRIVER_NAME ": acceptable inbound endpoint "
+				"found\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ep_out == NULL'
#10818: FILE: drivers/input/lirc/lirc_mceusb2.c:830:
+		if ((ep_out == NULL)
+			&& ((ep->bEndpointAddress & USB_ENDPOINT_DIR_MASK)
+			    == USB_DIR_OUT)
+			&& (((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)
+			    == USB_ENDPOINT_XFER_BULK)
+			|| ((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)
+			    == USB_ENDPOINT_XFER_INT))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ep_out"
#10818: FILE: drivers/input/lirc/lirc_mceusb2.c:830:
+		if ((ep_out == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10819: FILE: drivers/input/lirc/lirc_mceusb2.c:831:
+		if ((ep_out == NULL)
+			&& ((ep->bEndpointAddress & USB_ENDPOINT_DIR_MASK)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10821: FILE: drivers/input/lirc/lirc_mceusb2.c:833:
+			    == USB_DIR_OUT)
+			&& (((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10823: FILE: drivers/input/lirc/lirc_mceusb2.c:835:
+			    == USB_ENDPOINT_XFER_BULK)
+			|| ((ep->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#10825: FILE: drivers/input/lirc/lirc_mceusb2.c:837:
+			    == USB_ENDPOINT_XFER_INT))) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#10827: FILE: drivers/input/lirc/lirc_mceusb2.c:839:
+			dprintk(DRIVER_NAME ": acceptable outbound endpoint "
+				"found\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ep_in"
#10840: FILE: drivers/input/lirc/lirc_mceusb2.c:852:
+	if (ep_in == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir)...) over kmalloc(sizeof(struct irctl)...)
#10851: FILE: drivers/input/lirc/lirc_mceusb2.c:863:
+	ir = kmalloc(sizeof(struct irctl), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#10859: FILE: drivers/input/lirc/lirc_mceusb2.c:871:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#10865: FILE: drivers/input/lirc/lirc_mceusb2.c:877:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'incase' may be misspelled - perhaps 'in case'?
#10915: FILE: drivers/input/lirc/lirc_mceusb2.c:927:
+	/* free allocated memory incase of failure */
 	                         ^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10930: FILE: drivers/input/lirc/lirc_mceusb2.c:942:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10931: FILE: drivers/input/lirc/lirc_mceusb2.c:943:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",
+			devnum, mem_failure);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10955: FILE: drivers/input/lirc/lirc_mceusb2.c:967:
+	if (dev->descriptor.iManufacturer
+		&& usb_string(dev, dev->descriptor.iManufacturer, buf, 63) > 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#10958: FILE: drivers/input/lirc/lirc_mceusb2.c:970:
+	if (dev->descriptor.iProduct
+		&& usb_string(dev, dev->descriptor.iProduct, buf, 63) > 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10960: FILE: drivers/input/lirc/lirc_mceusb2.c:972:
+	printk(DRIVER_NAME "[%d]: %s on usb%d:%d\n", devnum, name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10965: FILE: drivers/input/lirc/lirc_mceusb2.c:977:
+	usb_fill_int_urb(ir->urb_in, dev, pipe, ir->buf_in,
+		maxp, (usb_complete_t) usb_remote_recv, ir, ep_in->bInterval);

CHECK:SPACING: No space is necessary after a cast
#10965: FILE: drivers/input/lirc/lirc_mceusb2.c:977:
+		maxp, (usb_complete_t) usb_remote_recv, ir, ep_in->bInterval);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#10981: FILE: drivers/input/lirc/lirc_mceusb2.c:993:
+		printk(DRIVER_NAME "[%d]: usb reset config ret %x\n",

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#11002: FILE: drivers/input/lirc/lirc_mceusb2.c:1014:
+		 * they start with 0x9f - but the async callback doesnt handle
 		                                                 ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#11022: FILE: drivers/input/lirc/lirc_mceusb2.c:1034:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#11048: FILE: drivers/input/lirc/lirc_mceusb2.c:1060:
+	struct irctl *ir = usb_get_intfdata(intf);
+	printk(DRIVER_NAME "[%d]: suspend\n", ir->devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#11048: FILE: drivers/input/lirc/lirc_mceusb2.c:1060:
+	printk(DRIVER_NAME "[%d]: suspend\n", ir->devnum);

WARNING:LINE_SPACING: Missing a blank line after declarations
#11056: FILE: drivers/input/lirc/lirc_mceusb2.c:1068:
+	struct irctl *ir = usb_get_intfdata(intf);
+	printk(DRIVER_NAME "[%d]: resume\n", ir->devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#11056: FILE: drivers/input/lirc/lirc_mceusb2.c:1068:
+	printk(DRIVER_NAME "[%d]: resume\n", ir->devnum);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11076: FILE: drivers/input/lirc/lirc_mceusb2.c:1088:
+	printk(KERN_INFO "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11077: FILE: drivers/input/lirc/lirc_mceusb2.c:1089:
+	printk(KERN_INFO DRIVER_NAME ": " DRIVER_DESC " " DRIVER_VERSION "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11078: FILE: drivers/input/lirc/lirc_mceusb2.c:1090:
+	printk(KERN_INFO DRIVER_NAME ": " DRIVER_AUTHOR "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#11085: FILE: drivers/input/lirc/lirc_mceusb2.c:1097:
+		printk(DRIVER_NAME ": usb register failed, result = %d\n", i);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#11114: FILE: drivers/input/lirc/lirc_parallel.c:1:
+/****************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#11134: FILE: drivers/input/lirc/lirc_parallel.c:21:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#11135: FILE: drivers/input/lirc/lirc_parallel.c:22:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11249: FILE: drivers/input/lirc/lirc_parallel.c:136:
+		printk(KERN_INFO "%s: attempt to write to status register\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#11291: FILE: drivers/input/lirc/lirc_parallel.c:178:
+	} while (count < 1000 && (now.tv_sec < tv.tv_sec
+			     || (now.tv_sec == tv.tv_sec

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#11292: FILE: drivers/input/lirc/lirc_parallel.c:179:
+			     || (now.tv_sec == tv.tv_sec
+				 && now.tv_usec < tv.tv_usec)));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11294: FILE: drivers/input/lirc/lirc_parallel.c:181:
+	timeelapsed = ((now.tv_sec + 1 - tv.tv_sec)*1000000
 	                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11299: FILE: drivers/input/lirc/lirc_parallel.c:186:
+			newtimer = (1000000*count)/timeelapsed;
 			                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#11299: FILE: drivers/input/lirc/lirc_parallel.c:186:
+			newtimer = (1000000*count)/timeelapsed;
 			                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11300: FILE: drivers/input/lirc/lirc_parallel.c:187:
+			printk(KERN_INFO "%s: %u Hz timer detected\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#11303: FILE: drivers/input/lirc/lirc_parallel.c:190:
+			return newtimer;
+		}  else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11304: FILE: drivers/input/lirc/lirc_parallel.c:191:
+			newtimer = (1000000*count)/timeelapsed;
 			                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#11304: FILE: drivers/input/lirc/lirc_parallel.c:191:
+			newtimer = (1000000*count)/timeelapsed;
 			                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#11305: FILE: drivers/input/lirc/lirc_parallel.c:192:
+			if (abs(newtimer - default_timer) > default_timer/10) {
 			                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11307: FILE: drivers/input/lirc/lirc_parallel.c:194:
+				printk(KERN_NOTICE "%s: bad timer: %u Hz\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11309: FILE: drivers/input/lirc/lirc_parallel.c:196:
+				printk(KERN_NOTICE "%s: using default timer: "

WARNING:SPLIT_STRING: quoted string split across lines
#11310: FILE: drivers/input/lirc/lirc_parallel.c:197:
+				printk(KERN_NOTICE "%s: using default timer: "
+				       "%u Hz\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#11313: FILE: drivers/input/lirc/lirc_parallel.c:200:
+				return default_timer;
+			} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11314: FILE: drivers/input/lirc/lirc_parallel.c:201:
+				printk(KERN_INFO "%s: %u Hz timer detected\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11320: FILE: drivers/input/lirc/lirc_parallel.c:207:
+		printk(KERN_NOTICE "%s: no timer detected\n", LIRC_DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#11328: FILE: drivers/input/lirc/lirc_parallel.c:215:
+		printk(KERN_WARNING "%s: could not claim port\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#11330: FILE: drivers/input/lirc/lirc_parallel.c:217:
+		printk(KERN_WARNING "%s: waiting for port becoming available"

WARNING:SPLIT_STRING: quoted string split across lines
#11331: FILE: drivers/input/lirc/lirc_parallel.c:218:
+		printk(KERN_WARNING "%s: waiting for port becoming available"
+		       "\n", LIRC_DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11333: FILE: drivers/input/lirc/lirc_parallel.c:220:
+			printk(KERN_NOTICE "%s: could not claim port, giving"

WARNING:SPLIT_STRING: quoted string split across lines
#11334: FILE: drivers/input/lirc/lirc_parallel.c:221:
+			printk(KERN_NOTICE "%s: could not claim port, giving"
+			       " up\n", LIRC_DRIVER_NAME);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#11338: FILE: drivers/input/lirc/lirc_parallel.c:225:
+	out(LIRC_LP_CONTROL, LP_PSELECP|LP_PINITP);
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11355: FILE: drivers/input/lirc/lirc_parallel.c:242:
+		printk(KERN_NOTICE "%s: buffer overrun\n", LIRC_DRIVER_NAME);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#11380: FILE: drivers/input/lirc/lirc_parallel.c:267:
+	/*
+	  disable_irq(irq);

CHECK:SPACING: No space is necessary after a cast
#11395: FILE: drivers/input/lirc/lirc_parallel.c:282:
+			data = (int) (signal*1000000 +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11395: FILE: drivers/input/lirc/lirc_parallel.c:282:
+			data = (int) (signal*1000000 +
 			                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#11404: FILE: drivers/input/lirc/lirc_parallel.c:291:
+			 * is turned on anyway */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#11412: FILE: drivers/input/lirc/lirc_parallel.c:299:
+	timeout = timer/10;	/* timeout after 1/10 sec. */
 	               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#11423: FILE: drivers/input/lirc/lirc_parallel.c:310:
+		if (signal > timeout
+		    || (check_pselecd && (in(1) & LP_PSELECD))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11425: FILE: drivers/input/lirc/lirc_parallel.c:312:
+			printk(KERN_NOTICE "%s: timeout\n", LIRC_DRIVER_NAME);

WARNING:TYPO_SPELLING: 'ajust' may be misspelled - perhaps 'adjust'?
#11431: FILE: drivers/input/lirc/lirc_parallel.c:318:
+		/* ajust value to usecs */
 		   ^^^^^

CHECK:SPACING: No space is necessary after a cast
#11434: FILE: drivers/input/lirc/lirc_parallel.c:321:
+		helper = ((unsigned long long) signal)*1000000;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11434: FILE: drivers/input/lirc/lirc_parallel.c:321:
+		helper = ((unsigned long long) signal)*1000000;
 		                                      ^

CHECK:SPACING: No space is necessary after a cast
#11436: FILE: drivers/input/lirc/lirc_parallel.c:323:
+		signal = (long) helper;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#11442: FILE: drivers/input/lirc/lirc_parallel.c:329:
+		rbuf_write(PULSE_BIT|data); /* pulse */
 		                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#11453: FILE: drivers/input/lirc/lirc_parallel.c:340:
+	/*
+	  enable_irq(irq);

CHECK:SPACING: No space is necessary after a cast
#11480: FILE: drivers/input/lirc/lirc_parallel.c:367:
+			if (copy_to_user(buf+count, (char *) &rbuf[rptr],

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#11480: FILE: drivers/input/lirc/lirc_parallel.c:367:
+			if (copy_to_user(buf+count, (char *) &rbuf[rptr],
 			                    ^

WARNING:TYPO_SPELLING: 'ajust' may be misspelled - perhaps 'adjust'?
#11536: FILE: drivers/input/lirc/lirc_parallel.c:423:
+	/* ajust values from usecs */
 	   ^^^^^

CHECK:SPACING: No space is necessary after a cast
#11540: FILE: drivers/input/lirc/lirc_parallel.c:427:
+		helper = ((unsigned long long) wbuf[i])*timer;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11540: FILE: drivers/input/lirc/lirc_parallel.c:427:
+		helper = ((unsigned long long) wbuf[i])*timer;
 		                                       ^

CHECK:SPACING: No space is necessary after a cast
#11542: FILE: drivers/input/lirc/lirc_parallel.c:429:
+		wbuf[i] = (int) helper;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#11583: FILE: drivers/input/lirc/lirc_parallel.c:470:
+	 * without external timer here */

CHECK:SPACING: No space is necessary after a cast
#11607: FILE: drivers/input/lirc/lirc_parallel.c:494:
+		result = put_user(features, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#11612: FILE: drivers/input/lirc/lirc_parallel.c:499:
+		result = put_user(LIRC_MODE_PULSE, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#11617: FILE: drivers/input/lirc/lirc_parallel.c:504:
+		result = put_user(LIRC_MODE_MODE2, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#11622: FILE: drivers/input/lirc/lirc_parallel.c:509:
+		result = get_user(mode, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#11629: FILE: drivers/input/lirc/lirc_parallel.c:516:
+		result = get_user(mode, (unsigned long *) arg);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#11633: FILE: drivers/input/lirc/lirc_parallel.c:520:
+			return -ENOSYS;

CHECK:SPACING: No space is necessary after a cast
#11636: FILE: drivers/input/lirc/lirc_parallel.c:523:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#11675: FILE: drivers/input/lirc/lirc_parallel.c:562:
+static struct file_operations lirc_fops = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11695: FILE: drivers/input/lirc/lirc_parallel.c:582:
+       .name^I^I= LIRC_DRIVER_NAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11696: FILE: drivers/input/lirc/lirc_parallel.c:583:
+       .minor^I^I= -1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11697: FILE: drivers/input/lirc/lirc_parallel.c:584:
+       .code_length^I= 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11698: FILE: drivers/input/lirc/lirc_parallel.c:585:
+       .sample_rate^I= 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11699: FILE: drivers/input/lirc/lirc_parallel.c:586:
+       .data^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11700: FILE: drivers/input/lirc/lirc_parallel.c:587:
+       .add_to_buf^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11701: FILE: drivers/input/lirc/lirc_parallel.c:588:
+       .get_queue^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11702: FILE: drivers/input/lirc/lirc_parallel.c:589:
+       .set_use_inc^I= set_use_inc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11703: FILE: drivers/input/lirc/lirc_parallel.c:590:
+       .set_use_dec^I= set_use_dec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11704: FILE: drivers/input/lirc/lirc_parallel.c:591:
+       .fops^I^I= &lirc_fops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11705: FILE: drivers/input/lirc/lirc_parallel.c:592:
+       .dev^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11706: FILE: drivers/input/lirc/lirc_parallel.c:593:
+       .owner^I^I= THIS_MODULE,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11719: FILE: drivers/input/lirc/lirc_parallel.c:606:
+	printk(KERN_NOTICE "%s: time\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11726: FILE: drivers/input/lirc/lirc_parallel.c:613:
+		printk(KERN_NOTICE "%s: could not claim port, giving up\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#11753: FILE: drivers/input/lirc/lirc_parallel.c:640:
+	/*
+	printk(KERN_INFO "%s: reclaimed port\n", LIRC_DRIVER_NAME);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pport"
#11764: FILE: drivers/input/lirc/lirc_parallel.c:651:
+	if (pport == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11765: FILE: drivers/input/lirc/lirc_parallel.c:652:
+		printk(KERN_NOTICE "%s: no port at %x found\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ppdevice"
#11772: FILE: drivers/input/lirc/lirc_parallel.c:659:
+	if (ppdevice == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11773: FILE: drivers/input/lirc/lirc_parallel.c:660:
+		printk(KERN_NOTICE "%s: parport_register_device() failed\n",

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#11780: FILE: drivers/input/lirc/lirc_parallel.c:667:
+	out(LIRC_LP_CONTROL, LP_PSELECP|LP_PINITP);
 	                               ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#11788: FILE: drivers/input/lirc/lirc_parallel.c:675:
+#if 0	/* continue even if device is offline */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#11806: FILE: drivers/input/lirc/lirc_parallel.c:693:
+		printk(KERN_NOTICE "%s: register_chrdev() failed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#11811: FILE: drivers/input/lirc/lirc_parallel.c:698:
+	printk(KERN_INFO "%s: installed using port 0x%04x irq %d\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#11848: FILE: drivers/input/lirc/lirc_parallel.h:1:
+/* lirc_parallel.h */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#11871: FILE: drivers/input/lirc/lirc_parallel.h:24:
+#define LIRC_PARALLEL_TRANSMITTER_MASK ((1<<LIRC_PARALLEL_MAX_TRANSMITTERS) - 1)
                                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#11880: FILE: drivers/input/lirc/lirc_sasem.c:1:
+/* lirc_sasem.c - USB remote support for LIRC

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#11930: FILE: drivers/input/lirc/lirc_sasem.c:51:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#11931: FILE: drivers/input/lirc/lirc_sasem.c:52:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#11936: FILE: drivers/input/lirc/lirc_sasem.c:57:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#11950: FILE: drivers/input/lirc/lirc_sasem.c:71:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11976: FILE: drivers/input/lirc/lirc_sasem.c:97:
+static int sasem_probe(struct usb_interface *interface,
+			const struct usb_device_id *id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11984: FILE: drivers/input/lirc/lirc_sasem.c:105:
+static int vfd_ioctl(struct inode *inode, struct file *file,
+				unsigned cmd, unsigned long arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#11984: FILE: drivers/input/lirc/lirc_sasem.c:105:
+				unsigned cmd, unsigned long arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11987: FILE: drivers/input/lirc/lirc_sasem.c:108:
+static ssize_t vfd_write(struct file *file, const char *buf,
+				size_t n_bytes, loff_t *pos);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12003: FILE: drivers/input/lirc/lirc_sasem.c:124:
+struct sasem_context {
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#12037: FILE: drivers/input/lirc/lirc_sasem.c:158:
+static struct file_operations vfd_fops = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12038: FILE: drivers/input/lirc/lirc_sasem.c:159:
+static struct file_operations vfd_fops = {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12073: FILE: drivers/input/lirc/lirc_sasem.c:194:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12106: FILE: drivers/input/lirc/lirc_sasem.c:227:
+		err("%s: unable to deregister from lirc (%d)",
+			__func__, retval);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#12110: FILE: drivers/input/lirc/lirc_sasem.c:231:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12138: FILE: drivers/input/lirc/lirc_sasem.c:259:
+		err("%s: no context found for minor %d",
+					__func__, subminor);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#12166: FILE: drivers/input/lirc/lirc_sasem.c:287:
+		     unsigned cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#12170: FILE: drivers/input/lirc/lirc_sasem.c:291:
+	context = (struct sasem_context *) file->private_data;

CHECK:SPACING: No space is necessary after a cast
#12206: FILE: drivers/input/lirc/lirc_sasem.c:327:
+	context = (struct sasem_context *) file->private_data;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12222: FILE: drivers/input/lirc/lirc_sasem.c:343:
+		if (!context->dev_present && !context->ir_isopen) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#12225: FILE: drivers/input/lirc/lirc_sasem.c:346:
+			 * deleted by ir_close. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12246: FILE: drivers/input/lirc/lirc_sasem.c:367:
+	pipe = usb_sndintpipe(context->dev,
+			context->tx_endpoint->bEndpointAddress);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12250: FILE: drivers/input/lirc/lirc_sasem.c:371:
+	usb_fill_int_urb(context->tx_urb, context->dev, pipe,
+		context->usb_tx_buf, sizeof(context->usb_tx_buf),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around context->tx.busy
#12256: FILE: drivers/input/lirc/lirc_sasem.c:377:
+	atomic_set(&(context->tx.busy), 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around context->tx.busy
#12260: FILE: drivers/input/lirc/lirc_sasem.c:381:
+		atomic_set(&(context->tx.busy), 0);

WARNING:TYPO_SPELLING: 'tranmission' may be misspelled - perhaps 'transmission'?
#12263: FILE: drivers/input/lirc/lirc_sasem.c:384:
+		/* Wait for tranmission to complete (or abort) */
 		            ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12282: FILE: drivers/input/lirc/lirc_sasem.c:403:
+static ssize_t vfd_write(struct file *file, const char *buf,
+				size_t n_bytes, loff_t *pos)

CHECK:SPACING: No space is necessary after a cast
#12288: FILE: drivers/input/lirc/lirc_sasem.c:409:
+	context = (struct sasem_context *) file->private_data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#12318: FILE: drivers/input/lirc/lirc_sasem.c:439:
+	 *       will clear the VFD */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12357: FILE: drivers/input/lirc/lirc_sasem.c:478:
+		if (retval != SUCCESS) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12359: FILE: drivers/input/lirc/lirc_sasem.c:480:
+			err("%s: send packet failed for packet #%d",
+					__func__, i);

CHECK:SPACING: No space is necessary after a cast
#12379: FILE: drivers/input/lirc/lirc_sasem.c:500:
+	context = (struct sasem_context *) urb->context;

WARNING:RETURN_VOID: void function return statements are not generally useful
#12390: FILE: drivers/input/lirc/lirc_sasem.c:511:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#12403: FILE: drivers/input/lirc/lirc_sasem.c:524:
+	context = (struct sasem_context *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12414: FILE: drivers/input/lirc/lirc_sasem.c:535:
+	usb_fill_int_urb(context->rx_urb, context->dev,
+		usb_rcvintpipe(context->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12415: FILE: drivers/input/lirc/lirc_sasem.c:536:
+		usb_rcvintpipe(context->dev,
+				context->rx_endpoint->bEndpointAddress),

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ir_open', this function's name, in a string
#12422: FILE: drivers/input/lirc/lirc_sasem.c:543:
+		err("%s: usb_submit_urb failed for ir_open (%d)",

CHECK:BRACES: Unbalanced braces around else statement
#12424: FILE: drivers/input/lirc/lirc_sasem.c:545:
+	else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12456: FILE: drivers/input/lirc/lirc_sasem.c:577:
+	if (!context->dev_present) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12465: FILE: drivers/input/lirc/lirc_sasem.c:586:
+		if (!context->vfd_isopen) {
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#12475: FILE: drivers/input/lirc/lirc_sasem.c:596:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#12496: FILE: drivers/input/lirc/lirc_sasem.c:617:
+	int i;
+	for (i = 0; i < 8; ++i)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#12497: FILE: drivers/input/lirc/lirc_sasem.c:618:
+		printk(KERN_INFO "%02x ", buf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#12498: FILE: drivers/input/lirc/lirc_sasem.c:619:
+	printk(KERN_INFO "\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#12502: FILE: drivers/input/lirc/lirc_sasem.c:623:
+	 * if it arrives too late.  Otherwise we could repeat the wrong code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#12511: FILE: drivers/input/lirc/lirc_sasem.c:632:
+		 * the old code to LIRC */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#12516: FILE: drivers/input/lirc/lirc_sasem.c:637:
+		 *   press but it is long enough for a genuine repeat */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ms < 250'
#12517: FILE: drivers/input/lirc/lirc_sasem.c:638:
+		if ((ms < 250) && (context->codesaved != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'context->codesaved != 0'
#12517: FILE: drivers/input/lirc/lirc_sasem.c:638:
+		if ((ms < 250) && (context->codesaved != 0)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#12526: FILE: drivers/input/lirc/lirc_sasem.c:647:
+		 * just for safety reasons */

CHECK:SPACING: No space is necessary after a cast
#12545: FILE: drivers/input/lirc/lirc_sasem.c:666:
+	context = (struct sasem_context *) urb->context;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12550: FILE: drivers/input/lirc/lirc_sasem.c:671:
+	switch (urb->status) {
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#12551: FILE: drivers/input/lirc/lirc_sasem.c:672:
+^Icase -ENOENT: ^I^I/* usbcore unlink successful! */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12561: FILE: drivers/input/lirc/lirc_sasem.c:682:
+		warn("%s: status (%d): ignored",
+			 __func__, urb->status);

WARNING:RETURN_VOID: void function return statements are not generally useful
#12567: FILE: drivers/input/lirc/lirc_sasem.c:688:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12569: FILE: drivers/input/lirc/lirc_sasem.c:690:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12575: FILE: drivers/input/lirc/lirc_sasem.c:696:
+static int sasem_probe(struct usb_interface *interface,
+			const struct usb_device_id *id)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12596: FILE: drivers/input/lirc/lirc_sasem.c:717:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#12603: FILE: drivers/input/lirc/lirc_sasem.c:724:
+^I * ^Ifirst input endpoint = IR endpoint$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#12604: FILE: drivers/input/lirc/lirc_sasem.c:725:
+^I * ^Ifirst output endpoint = VFD endpoint$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12611: FILE: drivers/input/lirc/lirc_sasem.c:732:
+	for (i = 0; i < num_endpoints && !(ir_ep_found && vfd_ep_found); ++i) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#12615: FILE: drivers/input/lirc/lirc_sasem.c:736:
+		int ep_type;
+		ep = &iface_desc->endpoint [i].desc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12620: FILE: drivers/input/lirc/lirc_sasem.c:741:
+		if (!ir_ep_found &&
+			ep_dir == USB_DIR_IN &&

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12622: FILE: drivers/input/lirc/lirc_sasem.c:743:
+			ep_type == USB_ENDPOINT_XFER_INT) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12631: FILE: drivers/input/lirc/lirc_sasem.c:752:
+			ep_type == USB_ENDPOINT_XFER_INT) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12641: FILE: drivers/input/lirc/lirc_sasem.c:762:
+	if (!ir_ep_found) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12651: FILE: drivers/input/lirc/lirc_sasem.c:772:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*context)...) over kmalloc(sizeof(struct sasem_context)...)
#12655: FILE: drivers/input/lirc/lirc_sasem.c:776:
+	context = kmalloc(sizeof(struct sasem_context), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#12661: FILE: drivers/input/lirc/lirc_sasem.c:782:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#12667: FILE: drivers/input/lirc/lirc_sasem.c:788:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

CHECK:BRACES: Unbalanced braces around else statement
#12719: FILE: drivers/input/lirc/lirc_sasem.c:840:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12721: FILE: drivers/input/lirc/lirc_sasem.c:842:
+		info("%s: Registered Sasem plugin (minor:%d)",
+			__func__, lirc_minor);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12726: FILE: drivers/input/lirc/lirc_sasem.c:847:
+	switch (alloc_status) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12763: FILE: drivers/input/lirc/lirc_sasem.c:884:
+	if (vfd_ep_found) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12769: FILE: drivers/input/lirc/lirc_sasem.c:890:
+			info("%s: could not get a minor number for VFD",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#12773: FILE: drivers/input/lirc/lirc_sasem.c:894:
+	info("%s: Sasem device on usb<%d:%d> initialized",
+			__func__, dev->bus->busnum, dev->devnum);

WARNING:TYPO_SPELLING: 'disonnect' may be misspelled - perhaps 'disconnect'?
#12781: FILE: drivers/input/lirc/lirc_sasem.c:902:
+ * Callback function for USB core API: disonnect
                                        ^^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#12803: FILE: drivers/input/lirc/lirc_sasem.c:924:
+	if (atomic_read(&context->tx.busy)) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12844: FILE: drivers/input/lirc/lirc_sasem.c:965:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#12855: FILE: drivers/input/lirc/lirc_serial.c:1:
+/****************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#12878: FILE: drivers/input/lirc/lirc_serial.c:24:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#12879: FILE: drivers/input/lirc/lirc_serial.c:25:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#12884: FILE: drivers/input/lirc/lirc_serial.c:30:
+/* Steve's changes to improve transmission fidelity:
+     - for systems with the rdtsc instruction and the clock counter, a

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13024: FILE: drivers/input/lirc/lirc_serial.c:170:
+			printk(KERN_DEBUG LIRC_DRIVER_NAME ": "	\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13039: FILE: drivers/input/lirc/lirc_serial.c:185:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13039: FILE: drivers/input/lirc/lirc_serial.c:185:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13040: FILE: drivers/input/lirc/lirc_serial.c:186:
+		UART_MCR_RTS|UART_MCR_OUT2,
 		            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#13043: FILE: drivers/input/lirc/lirc_serial.c:189:
+		(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13045: FILE: drivers/input/lirc/lirc_serial.c:191:
+		 LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13046: FILE: drivers/input/lirc/lirc_serial.c:192:
+		 LIRC_CAN_SET_SEND_CARRIER|
 		                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13047: FILE: drivers/input/lirc/lirc_serial.c:193:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13057: FILE: drivers/input/lirc/lirc_serial.c:203:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13057: FILE: drivers/input/lirc/lirc_serial.c:203:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13060: FILE: drivers/input/lirc/lirc_serial.c:206:
+		(LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13061: FILE: drivers/input/lirc/lirc_serial.c:207:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13069: FILE: drivers/input/lirc/lirc_serial.c:215:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13069: FILE: drivers/input/lirc/lirc_serial.c:215:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13070: FILE: drivers/input/lirc/lirc_serial.c:216:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13070: FILE: drivers/input/lirc/lirc_serial.c:216:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13073: FILE: drivers/input/lirc/lirc_serial.c:219:
+		(LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13074: FILE: drivers/input/lirc/lirc_serial.c:220:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13083: FILE: drivers/input/lirc/lirc_serial.c:229:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13083: FILE: drivers/input/lirc/lirc_serial.c:229:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13093: FILE: drivers/input/lirc/lirc_serial.c:239:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13093: FILE: drivers/input/lirc/lirc_serial.c:239:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13094: FILE: drivers/input/lirc/lirc_serial.c:240:
+		UART_MCR_RTS|UART_MCR_OUT2,
 		            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#13097: FILE: drivers/input/lirc/lirc_serial.c:243:
+		(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13099: FILE: drivers/input/lirc/lirc_serial.c:245:
+		 LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13100: FILE: drivers/input/lirc/lirc_serial.c:246:
+		 LIRC_CAN_SET_SEND_CARRIER|
 		                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13101: FILE: drivers/input/lirc/lirc_serial.c:247:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13108: FILE: drivers/input/lirc/lirc_serial.c:254:
+	/* Modified Linksys Network Storage Link USB 2.0 (NSLU2):
+	   We receive on CTS of the 2nd serial port (R142,LHS), we

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13111: FILE: drivers/input/lirc/lirc_serial.c:257:
+	   See also http://www.nslu2-linux.org for this device */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13115: FILE: drivers/input/lirc/lirc_serial.c:261:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13115: FILE: drivers/input/lirc/lirc_serial.c:261:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13116: FILE: drivers/input/lirc/lirc_serial.c:262:
+		UART_MCR_RTS|UART_MCR_OUT2,
 		            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#13119: FILE: drivers/input/lirc/lirc_serial.c:265:
+		(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13121: FILE: drivers/input/lirc/lirc_serial.c:267:
+		 LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13122: FILE: drivers/input/lirc/lirc_serial.c:268:
+		 LIRC_CAN_SET_SEND_CARRIER|
 		                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#13123: FILE: drivers/input/lirc/lirc_serial.c:269:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#13133: FILE: drivers/input/lirc/lirc_serial.c:279:
+/* A long pulse code from a remote might take upto 300 bytes.  The
                                               ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13134: FILE: drivers/input/lirc/lirc_serial.c:280:
+/* A long pulse code from a remote might take upto 300 bytes.  The
+   daemon should read the bytes as soon as they are generated, so take

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13138: FILE: drivers/input/lirc/lirc_serial.c:284:
+   maybe you will need to increase this.  */

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#13172: FILE: drivers/input/lirc/lirc_serial.c:318:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13174: FILE: drivers/input/lirc/lirc_serial.c:320:
+/*
+  From:

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13194: FILE: drivers/input/lirc/lirc_serial.c:340:
+/* changed from 400 to 450 as this works better on slower machines;
+   faster machines will use the rdtsc code anyway */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13194: FILE: drivers/input/lirc/lirc_serial.c:340:
+   faster machines will use the rdtsc code anyway */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13234: FILE: drivers/input/lirc/lirc_serial.c:380:
+	/* On NSLU2, we put the transmit diode between the output of the green
+	   status LED and ground */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13234: FILE: drivers/input/lirc/lirc_serial.c:380:
+	   status LED and ground */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13263: FILE: drivers/input/lirc/lirc_serial.c:409:
+#define MAX_UDELAY_US (MAX_UDELAY_MS*1000)
                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13277: FILE: drivers/input/lirc/lirc_serial.c:423:
+/* This is an overflow/precision juggle, complicated in that we can't
+   do long long divide in the kernel */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13277: FILE: drivers/input/lirc/lirc_serial.c:423:
+   do long long divide in the kernel */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13289: FILE: drivers/input/lirc/lirc_serial.c:435:
+static inline int init_timing_params(unsigned int new_duty_cycle,
+		unsigned int new_freq)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#13302: FILE: drivers/input/lirc/lirc_serial.c:448:
+	conv_us_to_clocks = (work>>32);
 	                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13305: FILE: drivers/input/lirc/lirc_serial.c:451:
+	/* Carrier period in clocks, approach good up to 32GHz clock,
+	   gets carrier frequency within 8Hz */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13305: FILE: drivers/input/lirc/lirc_serial.c:451:
+	   gets carrier frequency within 8Hz */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#13306: FILE: drivers/input/lirc/lirc_serial.c:452:
+	period = loops_per_sec>>3;
 	                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#13307: FILE: drivers/input/lirc/lirc_serial.c:453:
+	period /= (freq>>3);
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13311: FILE: drivers/input/lirc/lirc_serial.c:457:
+	pulse_width = period*duty_cycle/100;
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13311: FILE: drivers/input/lirc/lirc_serial.c:457:
+	pulse_width = period*duty_cycle/100;
 	                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#13314: FILE: drivers/input/lirc/lirc_serial.c:460:
+	dprintk("in init_timing_params, freq=%d, duty_cycle=%d, "
+		"clk/jiffy=%ld, pulse=%ld, space=%ld, "

WARNING:SPLIT_STRING: quoted string split across lines
#13315: FILE: drivers/input/lirc/lirc_serial.c:461:
+		"clk/jiffy=%ld, pulse=%ld, space=%ld, "
+		"conv_us_to_clocks=%ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13322: FILE: drivers/input/lirc/lirc_serial.c:468:
+static inline int init_timing_params(unsigned int new_duty_cycle,
+		unsigned int new_freq)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13325: FILE: drivers/input/lirc/lirc_serial.c:471:
+ * IE multiplied by 256. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13326: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13326: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13326: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13326: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13329: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13329: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13329: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13329: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13329: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13334: FILE: drivers/input/lirc/lirc_serial.c:480:
+	period = 256*1000000L/freq;
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13334: FILE: drivers/input/lirc/lirc_serial.c:480:
+	period = 256*1000000L/freq;
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13335: FILE: drivers/input/lirc/lirc_serial.c:481:
+	pulse_width = period*duty_cycle/100;
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13335: FILE: drivers/input/lirc/lirc_serial.c:481:
+	pulse_width = period*duty_cycle/100;
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13336: FILE: drivers/input/lirc/lirc_serial.c:482:
+	space_width = period-pulse_width;
 	                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#13338: FILE: drivers/input/lirc/lirc_serial.c:484:
+	dprintk("in init_timing_params, freq=%d pulse=%ld, "
+		"space=%ld\n", freq, pulse_width, space_width);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#13343: FILE: drivers/input/lirc/lirc_serial.c:489:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13354: FILE: drivers/input/lirc/lirc_serial.c:500:
+	rawbits = length*1152/10000;
 	                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13354: FILE: drivers/input/lirc/lirc_serial.c:500:
+	rawbits = length*1152/10000;
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#13360: FILE: drivers/input/lirc/lirc_serial.c:506:
+		shifted = chunk<<(i*3);
 		               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13360: FILE: drivers/input/lirc/lirc_serial.c:506:
+		shifted = chunk<<(i*3);
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13379: FILE: drivers/input/lirc/lirc_serial.c:525:
+		return (-rawbits)*10000/1152;
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13379: FILE: drivers/input/lirc/lirc_serial.c:525:
+		return (-rawbits)*10000/1152;
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13381: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13381: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13381: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13381: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13381: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13381: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13405: FILE: drivers/input/lirc/lirc_serial.c:551:
+	while ((now-start) < length) {
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13409: FILE: drivers/input/lirc/lirc_serial.c:555:
+		} while ((now-start) < target);
 		             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13422: FILE: drivers/input/lirc/lirc_serial.c:568:
+	return ((now-start)-length) / conv_us_to_clocks;
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13422: FILE: drivers/input/lirc/lirc_serial.c:568:
+	return ((now-start)-length) / conv_us_to_clocks;
 	                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13428: FILE: drivers/input/lirc/lirc_serial.c:574:
+/* here we use fixed point arithmetic, with 8
+   fractional bits.  that gets us within 0.1% or so of the right average

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13429: FILE: drivers/input/lirc/lirc_serial.c:575:
+   frequency, albeit with some jitter in pulse length - Steve */

WARNING:LINE_SPACING: Missing a blank line after declarations
#13437: FILE: drivers/input/lirc/lirc_serial.c:583:
+	unsigned long actual, target, d;
+	length <<= 8;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13448: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13448: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#13448: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		                                                  ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#13448: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13450: FILE: drivers/input/lirc/lirc_serial.c:596:
+		/* Note - we've checked in ioctl that the pulse/space
+		   widths are big enough so that d is > 0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13450: FILE: drivers/input/lirc/lirc_serial.c:596:
+		   widths are big enough so that d is > 0 */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#13452: FILE: drivers/input/lirc/lirc_serial.c:598:
+		actual += (d<<8)+LIRC_SERIAL_TRANSMITTER_LATENCY;
 		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#13452: FILE: drivers/input/lirc/lirc_serial.c:598:
+		actual += (d<<8)+LIRC_SERIAL_TRANSMITTER_LATENCY;
 		                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13455: FILE: drivers/input/lirc/lirc_serial.c:601:
+	return (actual-length)>>8;
 	              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#13455: FILE: drivers/input/lirc/lirc_serial.c:601:
+	return (actual-length)>>8;
 	                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#13464: FILE: drivers/input/lirc/lirc_serial.c:610:
+	if (softcarrier)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#13466: FILE: drivers/input/lirc/lirc_serial.c:612:
+		return send_pulse_homebrew_softcarrier(length);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#13466: FILE: drivers/input/lirc/lirc_serial.c:612:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13560: FILE: drivers/input/lirc/lirc_serial.c:706:
+			printk(KERN_WARNING LIRC_DRIVER_NAME ": AIEEEE: "

WARNING:SPLIT_STRING: quoted string split across lines
#13561: FILE: drivers/input/lirc/lirc_serial.c:707:
+			printk(KERN_WARNING LIRC_DRIVER_NAME ": AIEEEE: "
+			       "We're caught!\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13564: FILE: drivers/input/lirc/lirc_serial.c:710:
+		if ((status&hardware[type].signal_pin_change) && sense != -1) {
 		           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13569: FILE: drivers/input/lirc/lirc_serial.c:715:
+			/* New mode, written by Trent Piepho
+			   <xyzzy@u.washington.edu>. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13569: FILE: drivers/input/lirc/lirc_serial.c:715:
+			   <xyzzy@u.washington.edu>. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13572: FILE: drivers/input/lirc/lirc_serial.c:718:
+			/* The old format was not very portable.
+			   We now use an int to pass pulses

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13587: FILE: drivers/input/lirc/lirc_serial.c:733:
+			   autodetection. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13590: FILE: drivers/input/lirc/lirc_serial.c:736:
+			/* calculate time since last interrupt in
+			   microseconds */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13590: FILE: drivers/input/lirc/lirc_serial.c:736:
+			   microseconds */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13594: FILE: drivers/input/lirc/lirc_serial.c:740:
+				printk(KERN_WARNING LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13602: FILE: drivers/input/lirc/lirc_serial.c:748:
+			deltv = tv.tv_sec-lasttv.tv_sec;
 			                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13606: FILE: drivers/input/lirc/lirc_serial.c:752:
+				printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#13608: FILE: drivers/input/lirc/lirc_serial.c:754:
+				       ": AIEEEE: your clock just jumped "
+				       "backwards\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13609: FILE: drivers/input/lirc/lirc_serial.c:755:
+				printk(KERN_WARNING LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#13617: FILE: drivers/input/lirc/lirc_serial.c:763:
+				if (!(dcd^sense)) {
 				         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13619: FILE: drivers/input/lirc/lirc_serial.c:765:
+					printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#13621: FILE: drivers/input/lirc/lirc_serial.c:767:
+					       ": AIEEEE: "
+					       "%d %d %lx %lx %lx %lx\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13626: FILE: drivers/input/lirc/lirc_serial.c:772:
+					/* detecting pulse while this
+					   MUST be a space! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13626: FILE: drivers/input/lirc/lirc_serial.c:772:
+					   MUST be a space! */

CHECK:BRACES: Unbalanced braces around else statement
#13629: FILE: drivers/input/lirc/lirc_serial.c:775:
+			} else

CHECK:SPACING: No space is necessary after a cast
#13630: FILE: drivers/input/lirc/lirc_serial.c:776:
+				data = (int) (deltv*1000000 +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#13630: FILE: drivers/input/lirc/lirc_serial.c:776:
+				data = (int) (deltv*1000000 +
 				                   ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#13633: FILE: drivers/input/lirc/lirc_serial.c:779:
+			frbwrite(dcd^sense ? data : (data|PULSE_BIT));
 			            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13633: FILE: drivers/input/lirc/lirc_serial.c:779:
+			frbwrite(dcd^sense ? data : (data|PULSE_BIT));
 			                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#13645: FILE: drivers/input/lirc/lirc_serial.c:791:
+	unsigned long flags;
+	local_irq_save(flags);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13652: FILE: drivers/input/lirc/lirc_serial.c:798:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13652: FILE: drivers/input/lirc/lirc_serial.c:798:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13652: FILE: drivers/input/lirc/lirc_serial.c:798:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#13668: FILE: drivers/input/lirc/lirc_serial.c:814:
+		/* set out2 = interupt unmask; off() doesn't set MCR
 		              ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13669: FILE: drivers/input/lirc/lirc_serial.c:815:
+		/* set out2 = interupt unmask; off() doesn't set MCR
+		   on NSLU2 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13669: FILE: drivers/input/lirc/lirc_serial.c:815:
+		   on NSLU2 */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13670: FILE: drivers/input/lirc/lirc_serial.c:816:
+		soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 		                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13712: FILE: drivers/input/lirc/lirc_serial.c:858:
+	/* Future MMAP-Developers: Attention!
+	   For memory mapped I/O you *might* need to use ioremap() first,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13713: FILE: drivers/input/lirc/lirc_serial.c:859:
+	   for the NSLU2 it's done in boot code. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iommap != 0'
#13714: FILE: drivers/input/lirc/lirc_serial.c:860:
+	if (((iommap != 0)
+	     && (request_mem_region(iommap, 8<<ioshift,
+				    LIRC_DRIVER_NAME) == NULL))
+	   || ((iommap == 0)
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iommap == 0'
#13714: FILE: drivers/input/lirc/lirc_serial.c:860:
+	if (((iommap != 0)
+	     && (request_mem_region(iommap, 8<<ioshift,
+				    LIRC_DRIVER_NAME) == NULL))
+	   || ((iommap == 0)
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#13715: FILE: drivers/input/lirc/lirc_serial.c:861:
+	if (((iommap != 0)
+	     && (request_mem_region(iommap, 8<<ioshift,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#13715: FILE: drivers/input/lirc/lirc_serial.c:861:
+	     && (request_mem_region(iommap, 8<<ioshift,
 	                                     ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#13717: FILE: drivers/input/lirc/lirc_serial.c:863:
+				    LIRC_DRIVER_NAME) == NULL))
+	   || ((iommap == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#13718: FILE: drivers/input/lirc/lirc_serial.c:864:
+	   || ((iommap == 0)
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#13718: FILE: drivers/input/lirc/lirc_serial.c:864:
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#13720: FILE: drivers/input/lirc/lirc_serial.c:866:
+	if (request_region(io, 8, LIRC_DRIVER_NAME) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13722: FILE: drivers/input/lirc/lirc_serial.c:868:
+		printk(KERN_ERR  LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13724: FILE: drivers/input/lirc/lirc_serial.c:870:
+		printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13726: FILE: drivers/input/lirc/lirc_serial.c:872:
+		printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#13728: FILE: drivers/input/lirc/lirc_serial.c:874:
+		printk(KERN_WARNING LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13743: FILE: drivers/input/lirc/lirc_serial.c:889:
+		schedule_timeout(HZ/2);
 		                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#13746: FILE: drivers/input/lirc/lirc_serial.c:892:
+		/* probe 9 times every 0.04s, collect "votes" for
+		   active high/low */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#13746: FILE: drivers/input/lirc/lirc_serial.c:892:
+		   active high/low */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#13754: FILE: drivers/input/lirc/lirc_serial.c:900:
+			schedule_timeout(HZ/25);
 			                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#13757: FILE: drivers/input/lirc/lirc_serial.c:903:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": auto-detected active "

WARNING:SPLIT_STRING: quoted string split across lines
#13758: FILE: drivers/input/lirc/lirc_serial.c:904:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": auto-detected active "
+		       "%s receiver\n", sense ? "low" : "high");

CHECK:BRACES: Unbalanced braces around else statement
#13759: FILE: drivers/input/lirc/lirc_serial.c:905:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#13760: FILE: drivers/input/lirc/lirc_serial.c:906:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": Manually using active "

WARNING:SPLIT_STRING: quoted string split across lines
#13761: FILE: drivers/input/lirc/lirc_serial.c:907:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": Manually using active "
+		       "%s receiver\n", sense ? "low" : "high");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13779: FILE: drivers/input/lirc/lirc_serial.c:925:
+	result = request_irq(irq, irq_handler,
+			   IRQF_DISABLED | (share_irq ? IRQF_SHARED : 0),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13784: FILE: drivers/input/lirc/lirc_serial.c:930:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": IRQ %d busy\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#13788: FILE: drivers/input/lirc/lirc_serial.c:934:
+		printk(KERN_ERR LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13802: FILE: drivers/input/lirc/lirc_serial.c:948:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_MSI);
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13819: FILE: drivers/input/lirc/lirc_serial.c:965:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13819: FILE: drivers/input/lirc/lirc_serial.c:965:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13819: FILE: drivers/input/lirc/lirc_serial.c:965:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13829: FILE: drivers/input/lirc/lirc_serial.c:975:
+static ssize_t lirc_write(struct file *file, const char *buf,
+			 size_t n, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13835: FILE: drivers/input/lirc/lirc_serial.c:981:
+	if (!(hardware[type].features&LIRC_CAN_SEND_PULSE))
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#13851: FILE: drivers/input/lirc/lirc_serial.c:997:
+		if (i%2)
 		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13852: FILE: drivers/input/lirc/lirc_serial.c:998:
+			hardware[type].send_space(wbuf[i]-delta);
 			                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13870: FILE: drivers/input/lirc/lirc_serial.c:1016:
+		if (!(hardware[type].features&LIRC_CAN_SEND_MASK))
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13874: FILE: drivers/input/lirc/lirc_serial.c:1020:
+				  (hardware[type].features&LIRC_CAN_SEND_MASK),
 				                          ^

CHECK:SPACING: No space is necessary after a cast
#13875: FILE: drivers/input/lirc/lirc_serial.c:1021:
+				  (unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13881: FILE: drivers/input/lirc/lirc_serial.c:1027:
+		if (!(hardware[type].features&LIRC_CAN_SEND_MASK))
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#13884: FILE: drivers/input/lirc/lirc_serial.c:1030:
+		result = get_user(value, (unsigned long *) arg);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#13889: FILE: drivers/input/lirc/lirc_serial.c:1035:
+			return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#13893: FILE: drivers/input/lirc/lirc_serial.c:1039:
+		return -ENOSYS;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#13894: FILE: drivers/input/lirc/lirc_serial.c:1040:
+		return -ENOSYS;
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13898: FILE: drivers/input/lirc/lirc_serial.c:1044:
+		if (!(hardware[type].features&LIRC_CAN_SET_SEND_DUTY_CYCLE))
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#13901: FILE: drivers/input/lirc/lirc_serial.c:1047:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#13907: FILE: drivers/input/lirc/lirc_serial.c:1053:
+		return init_timing_params(ivalue, freq);
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#13911: FILE: drivers/input/lirc/lirc_serial.c:1057:
+		if (!(hardware[type].features&LIRC_CAN_SET_SEND_CARRIER))
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#13914: FILE: drivers/input/lirc/lirc_serial.c:1060:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#13920: FILE: drivers/input/lirc/lirc_serial.c:1066:
+		return init_timing_params(duty_cycle, ivalue);
+		break;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#13928: FILE: drivers/input/lirc/lirc_serial.c:1074:
+static struct file_operations lirc_fops = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#13953: FILE: drivers/input/lirc/lirc_serial.c:1099:
+static int __devinit lirc_serial_probe(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#13958: FILE: drivers/input/lirc/lirc_serial.c:1104:
+static int __devexit lirc_serial_remove(struct platform_device *dev)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13971: FILE: drivers/input/lirc/lirc_serial.c:1117:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13971: FILE: drivers/input/lirc/lirc_serial.c:1117:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13971: FILE: drivers/input/lirc/lirc_serial.c:1117:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#13991: FILE: drivers/input/lirc/lirc_serial.c:1137:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_MSI);
 	                              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#14018: FILE: drivers/input/lirc/lirc_serial.c:1164:
+		printk("lirc register returned %d\n", result);

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#14074: FILE: drivers/input/lirc/lirc_serial.c:1220:
+				~(LIRC_CAN_SET_SEND_DUTY_CYCLE|
 				                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#14085: FILE: drivers/input/lirc/lirc_serial.c:1231:
+		printk(KERN_ERR  LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#14103: FILE: drivers/input/lirc/lirc_serial.c:1249:
+		release_mem_region(iommap, 8<<ioshift);
 		                            ^

WARNING:SPLIT_STRING: quoted string split across lines
#14115: FILE: drivers/input/lirc/lirc_serial.c:1261:
+MODULE_AUTHOR("Ralph Metzler, Trent Piepho, Ben Pfaff, "
+	      "Christoph Bartelmus, Andrei Tanas");

WARNING:SPLIT_STRING: quoted string split across lines
#14121: FILE: drivers/input/lirc/lirc_serial.c:1267:
+MODULE_PARM_DESC(type, "Hardware type (0 = home-brew, 1 = IRdeo,"
+		 " 2 = IRdeo Remote, 3 = AnimaX, 4 = IgorPlug,"

WARNING:SPLIT_STRING: quoted string split across lines
#14122: FILE: drivers/input/lirc/lirc_serial.c:1268:
+		 " 2 = IRdeo Remote, 3 = AnimaX, 4 = IgorPlug,"
+		 " 5 = NSLU2 RX:CTS2/TX:GreenLED)");

WARNING:SPLIT_STRING: quoted string split across lines
#14125: FILE: drivers/input/lirc/lirc_serial.c:1271:
+MODULE_PARM_DESC(type, "Hardware type (0 = home-brew, 1 = IRdeo,"
+		 " 2 = IRdeo Remote, 3 = AnimaX, 4 = IgorPlug)");

WARNING:SPLIT_STRING: quoted string split across lines
#14135: FILE: drivers/input/lirc/lirc_serial.c:1281:
+MODULE_PARM_DESC(iommap, "physical base for memory mapped I/O"
+		" (0 = no memory mapped io)");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14138: FILE: drivers/input/lirc/lirc_serial.c:1284:
+/* some architectures (e.g. intel xscale) align the 8bit serial registers
+   on 32bit word boundaries.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14139: FILE: drivers/input/lirc/lirc_serial.c:1285:
+   See linux-kernel/serial/8250.c serial_in()/out() */

WARNING:SPLIT_STRING: quoted string split across lines
#14152: FILE: drivers/input/lirc/lirc_serial.c:1298:
+MODULE_PARM_DESC(sense, "Override autodetection of IR receiver circuit"
+		 " (0 = active high, 1 = active low )");

WARNING:SPLIT_STRING: quoted string split across lines
#14157: FILE: drivers/input/lirc/lirc_serial.c:1303:
+MODULE_PARM_DESC(txsense, "Sense of transmitter circuit"
+		 " (0 = active high, 1 = active low )");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#14173: FILE: drivers/input/lirc/lirc_sir.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#14190: FILE: drivers/input/lirc/lirc_sir.c:18:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#14191: FILE: drivers/input/lirc/lirc_sir.c:19:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#14208: FILE: drivers/input/lirc/lirc_sir.c:36:
+
+

WARNING:TYPO_SPELLING: 'miliseconds' may be misspelled - perhaps 'milliseconds'?
#14264: FILE: drivers/input/lirc/lirc_sir.c:92:
+/* 10bit * 1s/115200bit in miliseconds = 87ms*/
                            ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14265: FILE: drivers/input/lirc/lirc_sir.c:93:
+#define TIME_CONST (10000000ul/115200ul)
                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14296: FILE: drivers/input/lirc/lirc_sir.c:124:
+static unsigned long pulse_width = (13-LIRC_ON_SA1100_TRANSMITTER_LATENCY);
                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14298: FILE: drivers/input/lirc/lirc_sir.c:126:
+static unsigned long space_width = (13-LIRC_ON_SA1100_TRANSMITTER_LATENCY);
                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14313: FILE: drivers/input/lirc/lirc_sir.c:141:
+#define TIME_CONST (9000000ul/115200ul)
                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#14316: FILE: drivers/input/lirc/lirc_sir.c:144:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#14319: FILE: drivers/input/lirc/lirc_sir.c:147:
+#define SIR_TIMEOUT	(HZ*5/100)
                    	   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14319: FILE: drivers/input/lirc/lirc_sir.c:147:
+#define SIR_TIMEOUT	(HZ*5/100)
                    	     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#14355: FILE: drivers/input/lirc/lirc_sir.c:183:
+			printk(KERN_DEBUG LIRC_DRIVER_NAME ": "		\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14366: FILE: drivers/input/lirc/lirc_sir.c:194:
+static ssize_t lirc_read(struct file *file, char *buf, size_t count,
+		loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14368: FILE: drivers/input/lirc/lirc_sir.c:196:
+static ssize_t lirc_write(struct file *file, const char *buf, size_t n,
+		loff_t *pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14370: FILE: drivers/input/lirc/lirc_sir.c:198:
+static int lirc_ioctl(struct inode *node, struct file *filep, unsigned int cmd,
+		unsigned long arg);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#14411: FILE: drivers/input/lirc/lirc_sir.c:239:
+#define MAX_UDELAY_US (MAX_UDELAY_MS*1000)
                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14450: FILE: drivers/input/lirc/lirc_sir.c:278:
+static ssize_t lirc_read(struct file *file, char *buf, size_t count,
+		loff_t *ppos)

CHECK:SPACING: No space is necessary after a cast
#14463: FILE: drivers/input/lirc/lirc_sir.c:291:
+			if (copy_to_user((void *) buf + n,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14464: FILE: drivers/input/lirc/lirc_sir.c:292:
+			if (copy_to_user((void *) buf + n,
+					(void *) (rx_buf + rx_head),

CHECK:SPACING: No space is necessary after a cast
#14464: FILE: drivers/input/lirc/lirc_sir.c:292:
+					(void *) (rx_buf + rx_head),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#14488: FILE: drivers/input/lirc/lirc_sir.c:316:
+}
+static ssize_t lirc_write(struct file *file, const char *buf, size_t n,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14489: FILE: drivers/input/lirc/lirc_sir.c:317:
+static ssize_t lirc_write(struct file *file, const char *buf, size_t n,
+				loff_t *pos)

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR3>
#14502: FILE: drivers/input/lirc/lirc_sir.c:330:
+	Ser2UTCR3 = 0;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#14520: FILE: drivers/input/lirc/lirc_sir.c:348:
+	udelay(1000); /* wait 1ms for IR diode to recover */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTSR0>
#14523: FILE: drivers/input/lirc/lirc_sir.c:351:
+	Ser2UTSR0 &= (UTSR0_RID | UTSR0_RBB | UTSR0_REB);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#14525: FILE: drivers/input/lirc/lirc_sir.c:353:
+	Ser2UTCR3 = UTCR3_RXE|UTCR3_RIE;
 	                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14531: FILE: drivers/input/lirc/lirc_sir.c:359:
+static int lirc_ioctl(struct inode *node, struct file *filep, unsigned int cmd,
+		unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#14560: FILE: drivers/input/lirc/lirc_sir.c:388:
+		retval = put_user(value, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#14565: FILE: drivers/input/lirc/lirc_sir.c:393:
+		retval = get_user(value, (unsigned long *) arg);

CHECK:SPACING: No space is necessary after a cast
#14569: FILE: drivers/input/lirc/lirc_sir.c:397:
+		retval = get_user(ivalue, (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#14576: FILE: drivers/input/lirc/lirc_sir.c:404:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#14576: FILE: drivers/input/lirc/lirc_sir.c:404:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14576: FILE: drivers/input/lirc/lirc_sir.c:404:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                              ^

CHECK:SPACING: No space is necessary after a cast
#14577: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14577: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14577: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                           ^

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long) 1000000L' could be '1000000LUL'
#14577: FILE: drivers/input/lirc/lirc_sir.c:405:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:SPACING: No space is necessary after a cast
#14584: FILE: drivers/input/lirc/lirc_sir.c:412:
+		retval = get_user(ivalue, (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#14590: FILE: drivers/input/lirc/lirc_sir.c:418:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#14590: FILE: drivers/input/lirc/lirc_sir.c:418:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14590: FILE: drivers/input/lirc/lirc_sir.c:418:
+		pulse_width = (unsigned long) duty_cycle*10000/freq;
 		                                              ^

CHECK:SPACING: No space is necessary after a cast
#14591: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14591: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14591: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;
 		                                           ^

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long) 1000000L' could be '1000000LUL'
#14591: FILE: drivers/input/lirc/lirc_sir.c:419:
+		space_width = (unsigned long) 1000000L/freq-pulse_width;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#14601: FILE: drivers/input/lirc/lirc_sir.c:429:
+
+	}

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#14607: FILE: drivers/input/lirc/lirc_sir.c:435:
+			retval = -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#14610: FILE: drivers/input/lirc/lirc_sir.c:438:
+			retval = -ENOSYS;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14626: FILE: drivers/input/lirc/lirc_sir.c:454:
+	/* statistically pulses are ~TIME_CONST/2 too long: we could
+	   maybe make this more exactly but this is good enough */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14626: FILE: drivers/input/lirc/lirc_sir.c:454:
+	   maybe make this more exactly but this is good enough */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14629: FILE: drivers/input/lirc/lirc_sir.c:457:
+		if (newval > TIME_CONST/2)
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14630: FILE: drivers/input/lirc/lirc_sir.c:458:
+			newval -= TIME_CONST/2;
 			                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#14635: FILE: drivers/input/lirc/lirc_sir.c:463:
+		newval += TIME_CONST/2;
 		                    ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#14647: FILE: drivers/input/lirc/lirc_sir.c:475:
+static struct file_operations lirc_fops = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14658: FILE: drivers/input/lirc/lirc_sir.c:486:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14666: FILE: drivers/input/lirc/lirc_sir.c:494:
+       .name^I^I= LIRC_DRIVER_NAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14667: FILE: drivers/input/lirc/lirc_sir.c:495:
+       .minor^I^I= -1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14668: FILE: drivers/input/lirc/lirc_sir.c:496:
+       .code_length^I= 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14669: FILE: drivers/input/lirc/lirc_sir.c:497:
+       .sample_rate^I= 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14670: FILE: drivers/input/lirc/lirc_sir.c:498:
+       .data^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14671: FILE: drivers/input/lirc/lirc_sir.c:499:
+       .add_to_buf^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14672: FILE: drivers/input/lirc/lirc_sir.c:500:
+       .get_queue^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14673: FILE: drivers/input/lirc/lirc_sir.c:501:
+       .set_use_inc^I= set_use_inc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14674: FILE: drivers/input/lirc/lirc_sir.c:502:
+       .set_use_dec^I= set_use_dec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14675: FILE: drivers/input/lirc/lirc_sir.c:503:
+       .fops^I^I= &lirc_fops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14676: FILE: drivers/input/lirc/lirc_sir.c:504:
+       .dev^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#14677: FILE: drivers/input/lirc/lirc_sir.c:505:
+       .owner^I^I= THIS_MODULE,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#14680: FILE: drivers/input/lirc/lirc_sir.c:508:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#14686: FILE: drivers/input/lirc/lirc_sir.c:514:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_chrdev', this function's name, in a string
#14686: FILE: drivers/input/lirc/lirc_sir.c:514:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#14707: FILE: drivers/input/lirc/lirc_sir.c:535:
+		deltv = deltv*1000000 +
 		             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14716: FILE: drivers/input/lirc/lirc_sir.c:544:
+	/* if last received signal was a pulse, but receiving stopped
+	   within the 9 bit frame, we need to finish this pulse and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14718: FILE: drivers/input/lirc/lirc_sir.c:546:
+	   upper layers will receive two sequences next time. */

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTSR1>
#14759: FILE: drivers/input/lirc/lirc_sir.c:587:
+			bstat = Ser2UTSR1;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTDR>
#14769: FILE: drivers/input/lirc/lirc_sir.c:597:
+		bstat = Ser2UTDR;

CHECK:SPACING: No space is necessary after a cast
#14779: FILE: drivers/input/lirc/lirc_sir.c:607:
+			dprintk("%d data: %u\n", n, (unsigned int) data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14782: FILE: drivers/input/lirc/lirc_sir.c:610:
+		} while (status & UTSR0_RID && /* do not empty fifo in
+						order to get UTSR0_RID in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14783: FILE: drivers/input/lirc/lirc_sir.c:611:
+						any case */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#14786: FILE: drivers/input/lirc/lirc_sir.c:614:
+		if (status&UTSR0_RID) {
 		          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#14787: FILE: drivers/input/lirc/lirc_sir.c:615:
+			add_read_queue(0 , deltv - n * TIME_CONST); /*space*/
 			                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#14795: FILE: drivers/input/lirc/lirc_sir.c:623:
+		printk(KERN_ERR "transmit fifo not full, shouldn't happen\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#14809: FILE: drivers/input/lirc/lirc_sir.c:637:
+		switch (iir&UART_IIR_ID) { /* FIXME toto treba preriedit */
 		           ^

CHECK:SPACING: No space is necessary after a cast
#14811: FILE: drivers/input/lirc/lirc_sir.c:639:
+			(void) inb(io + UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#14814: FILE: drivers/input/lirc/lirc_sir.c:642:
+			(void) inb(io + UART_LSR);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#14817: FILE: drivers/input/lirc/lirc_sir.c:645:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14833: FILE: drivers/input/lirc/lirc_sir.c:661:
+				/* if nothing came in last X cycles,
+				   it was gap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14833: FILE: drivers/input/lirc/lirc_sir.c:661:
+				   it was gap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14852: FILE: drivers/input/lirc/lirc_sir.c:680:
+					/* deltintrtv > 2*TIME_CONST,
+						remember ? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14852: FILE: drivers/input/lirc/lirc_sir.c:680:
+						remember ? */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14855: FILE: drivers/input/lirc/lirc_sir.c:683:
+						       deltv-TIME_CONST);
 						            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14869: FILE: drivers/input/lirc/lirc_sir.c:697:
+					 * sequence detection */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#14896: FILE: drivers/input/lirc/lirc_sir.c:724:
+	/* this won't give us the carrier frequency we really want
+	   due to integer arithmetic, but we can accept this inaccuracy */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#14896: FILE: drivers/input/lirc/lirc_sir.c:724:
+	   due to integer arithmetic, but we can accept this inaccuracy */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#14940: FILE: drivers/input/lirc/lirc_sir.c:768:
+#if 0

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#14960: FILE: drivers/input/lirc/lirc_sir.c:788:
+		udelay(100);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#14980: FILE: drivers/input/lirc/lirc_sir.c:808:
+		printk(KERN_INFO "Power on IR module\n");

CHECK:CAMELCASE: Avoid CamelCase: <Ser2HSCR0>
#14987: FILE: drivers/input/lirc/lirc_sir.c:815:
+	sr.hscr0 = Ser2HSCR0;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR0>
#14989: FILE: drivers/input/lirc/lirc_sir.c:817:
+	sr.utcr0 = Ser2UTCR0;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR1>
#14990: FILE: drivers/input/lirc/lirc_sir.c:818:
+	sr.utcr1 = Ser2UTCR1;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR2>
#14991: FILE: drivers/input/lirc/lirc_sir.c:819:
+	sr.utcr2 = Ser2UTCR2;

CHECK:CAMELCASE: Avoid CamelCase: <Ser2UTCR4>
#14993: FILE: drivers/input/lirc/lirc_sir.c:821:
+	sr.utcr4 = Ser2UTCR4;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15016: FILE: drivers/input/lirc/lirc_sir.c:844:
+	Ser2UTCR0 = UTCR0_1StpBit|UTCR0_7BitData;
 	                         ^

CHECK:CAMELCASE: Avoid CamelCase: <UTCR0_1StpBit>
#15016: FILE: drivers/input/lirc/lirc_sir.c:844:
+	Ser2UTCR0 = UTCR0_1StpBit|UTCR0_7BitData;

CHECK:CAMELCASE: Avoid CamelCase: <UTCR0_7BitData>
#15016: FILE: drivers/input/lirc/lirc_sir.c:844:
+	Ser2UTCR0 = UTCR0_1StpBit|UTCR0_7BitData;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15021: FILE: drivers/input/lirc/lirc_sir.c:849:
+	Ser2UTCR4 = UTCR4_HPSIR|UTCR4_Z1_6us;
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15024: FILE: drivers/input/lirc/lirc_sir.c:852:
+	Ser2UTCR3 = UTCR3_RXE|UTCR3_RIE;
 	                     ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#15032: FILE: drivers/input/lirc/lirc_sir.c:860:
+	      UART_FCR_CLEAR_RCVR|
 	                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#15033: FILE: drivers/input/lirc/lirc_sir.c:861:
+	      UART_FCR_CLEAR_XMIT|
 	                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15041: FILE: drivers/input/lirc/lirc_sir.c:869:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15041: FILE: drivers/input/lirc/lirc_sir.c:869:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15041: FILE: drivers/input/lirc/lirc_sir.c:869:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15054: FILE: drivers/input/lirc/lirc_sir.c:882:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15054: FILE: drivers/input/lirc/lirc_sir.c:882:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#15055: FILE: drivers/input/lirc/lirc_sir.c:883:
+	safe_udelay(50*1000);
 	              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15058: FILE: drivers/input/lirc/lirc_sir.c:886:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#15059: FILE: drivers/input/lirc/lirc_sir.c:887:
+	udelay(1*1000);
 	        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15061: FILE: drivers/input/lirc/lirc_sir.c:889:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15061: FILE: drivers/input/lirc/lirc_sir.c:889:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15062: FILE: drivers/input/lirc/lirc_sir.c:890:
+	udelay(100);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#15064: FILE: drivers/input/lirc/lirc_sir.c:892:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15066: FILE: drivers/input/lirc/lirc_sir.c:894:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15068: FILE: drivers/input/lirc/lirc_sir.c:896:
+	soutp(UART_TX, TEKRAM_115200|TEKRAM_PW);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15071: FILE: drivers/input/lirc/lirc_sir.c:899:
+	udelay(1500);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15074: FILE: drivers/input/lirc/lirc_sir.c:902:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15074: FILE: drivers/input/lirc/lirc_sir.c:902:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15075: FILE: drivers/input/lirc/lirc_sir.c:903:
+	udelay(50);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15077: FILE: drivers/input/lirc/lirc_sir.c:905:
+	udelay(1500);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#15080: FILE: drivers/input/lirc/lirc_sir.c:908:
+	printk(KERN_INFO LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15093: FILE: drivers/input/lirc/lirc_sir.c:921:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_RDI);
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15109: FILE: drivers/input/lirc/lirc_sir.c:937:
+	outb(UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2, io + UART_MCR);
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15109: FILE: drivers/input/lirc/lirc_sir.c:937:
+	outb(UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2, io + UART_MCR);
 	                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#15158: FILE: drivers/input/lirc/lirc_sir.c:986:
+	if (request_region(io, 8, LIRC_DRIVER_NAME) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#15159: FILE: drivers/input/lirc/lirc_sir.c:987:
+		printk(KERN_ERR LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#15170: FILE: drivers/input/lirc/lirc_sir.c:998:
+		printk(KERN_ERR LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#15176: FILE: drivers/input/lirc/lirc_sir.c:1004:
+	printk(KERN_INFO LIRC_DRIVER_NAME

WARNING:TYPO_SPELLING: 'Regsiter' may be misspelled - perhaps 'Register'?
#15202: FILE: drivers/input/lirc/lirc_sir.c:1030:
+/* Regsiter 0: Control register #1 */
    ^^^^^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15293: FILE: drivers/input/lirc/lirc_sir.c:1121:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15293: FILE: drivers/input/lirc/lirc_sir.c:1121:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15298: FILE: drivers/input/lirc/lirc_sir.c:1126:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15300: FILE: drivers/input/lirc/lirc_sir.c:1128:
+		udelay(1000);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15302: FILE: drivers/input/lirc/lirc_sir.c:1130:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15302: FILE: drivers/input/lirc/lirc_sir.c:1130:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15303: FILE: drivers/input/lirc/lirc_sir.c:1131:
+	udelay(100);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15306: FILE: drivers/input/lirc/lirc_sir.c:1134:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15313: FILE: drivers/input/lirc/lirc_sir.c:1141:
+		udelay(1500);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15317: FILE: drivers/input/lirc/lirc_sir.c:1145:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15317: FILE: drivers/input/lirc/lirc_sir.c:1145:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 	                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15318: FILE: drivers/input/lirc/lirc_sir.c:1146:
+	udelay(50);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15320: FILE: drivers/input/lirc/lirc_sir.c:1148:
+	udelay(1500);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15337: FILE: drivers/input/lirc/lirc_sir.c:1165:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_RDI);
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#15343: FILE: drivers/input/lirc/lirc_sir.c:1171:
+ * Drop me a mail for any kind of comment: maxx@spaceboyz.net */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15350: FILE: drivers/input/lirc/lirc_sir.c:1178:
+	soutp(UART_LCR, UART_LCR_DLAB|UART_LCR_WLEN7);
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15360: FILE: drivers/input/lirc/lirc_sir.c:1188:
+	soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15361: FILE: drivers/input/lirc/lirc_sir.c:1189:
+	udelay(10);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15364: FILE: drivers/input/lirc/lirc_sir.c:1192:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15364: FILE: drivers/input/lirc/lirc_sir.c:1192:
+	soutp(UART_MCR, UART_MCR_DTR|UART_MCR_RTS|UART_MCR_OUT2);
 	                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#15367: FILE: drivers/input/lirc/lirc_sir.c:1195:
+	 * i hope this is really the same for act220l/act220l+ */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15369: FILE: drivers/input/lirc/lirc_sir.c:1197:
+		udelay(10);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15371: FILE: drivers/input/lirc/lirc_sir.c:1199:
+		soutp(UART_MCR, UART_MCR_DTR|UART_MCR_OUT2);
 		                            ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15372: FILE: drivers/input/lirc/lirc_sir.c:1200:
+		udelay(10);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15374: FILE: drivers/input/lirc/lirc_sir.c:1202:
+		soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#15374: FILE: drivers/input/lirc/lirc_sir.c:1202:
+		soutp(UART_MCR, UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2);
 		                                         ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#15378: FILE: drivers/input/lirc/lirc_sir.c:1206:
+	udelay(1500); /* better safe than sorry ;) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#15389: FILE: drivers/input/lirc/lirc_sir.c:1217:
+	/* The dongle doesn't seem to have any problems with operation
+	   at 7N1 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#15389: FILE: drivers/input/lirc/lirc_sir.c:1217:
+	   at 7N1 */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#15406: FILE: drivers/input/lirc/lirc_sir.c:1234:
+	printk(KERN_INFO LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#15433: FILE: drivers/input/lirc/lirc_sir.c:1261:
+	printk(KERN_INFO LIRC_DRIVER_NAME ": Uninstalled.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#15481: FILE: drivers/input/lirc/lirc_streamzap.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#15507: FILE: drivers/input/lirc/lirc_streamzap.c:27:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#15508: FILE: drivers/input/lirc/lirc_streamzap.c:28:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#15543: FILE: drivers/input/lirc/lirc_streamzap.c:63:
+			printk(KERN_DEBUG DRIVER_NAME "[%d]: "	\

CHECK:CAMELCASE: Avoid CamelCase: <StreamzapDecoderState>
#15566: FILE: drivers/input/lirc/lirc_streamzap.c:86:
+enum StreamzapDecoderState {

CHECK:CAMELCASE: Avoid CamelCase: <PulseSpace>
#15567: FILE: drivers/input/lirc/lirc_streamzap.c:87:
+	PulseSpace,

CHECK:CAMELCASE: Avoid CamelCase: <FullPulse>
#15568: FILE: drivers/input/lirc/lirc_streamzap.c:88:
+	FullPulse,

CHECK:CAMELCASE: Avoid CamelCase: <FullSpace>
#15569: FILE: drivers/input/lirc/lirc_streamzap.c:89:
+	FullSpace,

CHECK:CAMELCASE: Avoid CamelCase: <IgnorePulse>
#15570: FILE: drivers/input/lirc/lirc_streamzap.c:90:
+	IgnorePulse

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#15575: FILE: drivers/input/lirc/lirc_streamzap.c:95:
+/* some remarks regarding locking:
+   theoretically this struct can be accessed from three threads:

WARNING:TYPO_SPELLING: 'throuh' may be misspelled - perhaps 'through'?
#15579: FILE: drivers/input/lirc/lirc_streamzap.c:99:
+   - from the USB layer throuh probe/disconnect/irq
                         ^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#15593: FILE: drivers/input/lirc/lirc_streamzap.c:113:
+struct usb_streamzap {
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#15618: FILE: drivers/input/lirc/lirc_streamzap.c:138:
+	spinlock_t		timer_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#15633: FILE: drivers/input/lirc/lirc_streamzap.c:153:
+
+

CHECK:SPACING: No space is necessary after a cast
#15671: FILE: drivers/input/lirc/lirc_streamzap.c:191:
+	struct usb_streamzap *sz = (struct usb_streamzap *) arg;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#15676: FILE: drivers/input/lirc/lirc_streamzap.c:196:
+}
+static void delay_timeout(unsigned long arg)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15681: FILE: drivers/input/lirc/lirc_streamzap.c:201:
+		(10000/(1000000/HZ)) == 0 ? 1 : (10000/(1000000/HZ));
 		      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15681: FILE: drivers/input/lirc/lirc_streamzap.c:201:
+		(10000/(1000000/HZ)) == 0 ? 1 : (10000/(1000000/HZ));
 		               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15681: FILE: drivers/input/lirc/lirc_streamzap.c:201:
+		(10000/(1000000/HZ)) == 0 ? 1 : (10000/(1000000/HZ));
 		                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15681: FILE: drivers/input/lirc/lirc_streamzap.c:201:
+		(10000/(1000000/HZ)) == 0 ? 1 : (10000/(1000000/HZ));
 		                                               ^

CHECK:SPACING: No space is necessary after a cast
#15682: FILE: drivers/input/lirc/lirc_streamzap.c:202:
+	struct usb_streamzap *sz = (struct usb_streamzap *) arg;

CHECK:SPACING: No space is necessary after a cast
#15689: FILE: drivers/input/lirc/lirc_streamzap.c:209:
+		lirc_buffer_read_1(&sz->delay_buf, (unsigned char *) &data);

CHECK:SPACING: No space is necessary after a cast
#15690: FILE: drivers/input/lirc/lirc_streamzap.c:210:
+		lirc_buffer_write_1(&sz->lirc_buf, (unsigned char *) &data);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15694: FILE: drivers/input/lirc/lirc_streamzap.c:214:
+		      STREAMZAP_BUFFER_SIZE/2 &&
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#15697: FILE: drivers/input/lirc/lirc_streamzap.c:217:
+					   (unsigned char *) &data);

CHECK:SPACING: No space is necessary after a cast
#15699: FILE: drivers/input/lirc/lirc_streamzap.c:219:
+					    (unsigned char *) &data);

CHECK:SPACING: No space is necessary after a cast
#15722: FILE: drivers/input/lirc/lirc_streamzap.c:242:
+		lirc_buffer_read_1(&sz->delay_buf, (unsigned char *) &data);

CHECK:SPACING: No space is necessary after a cast
#15725: FILE: drivers/input/lirc/lirc_streamzap.c:245:
+					    (unsigned char *) &data);

CHECK:SPACING: No space is necessary after a cast
#15742: FILE: drivers/input/lirc/lirc_streamzap.c:262:
+		lirc_buffer_read_1(&sz->delay_buf, (unsigned char *) &data);

CHECK:SPACING: No space is necessary after a cast
#15745: FILE: drivers/input/lirc/lirc_streamzap.c:265:
+					    (unsigned char *) &data);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15754: FILE: drivers/input/lirc/lirc_streamzap.c:274:
+		sz->delay_timer.expires = jiffies + HZ/10;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#15774: FILE: drivers/input/lirc/lirc_streamzap.c:294:
+		deltv = sz->signal_start.tv_sec-sz->signal_last.tv_sec;
 		                               ^

CHECK:SPACING: No space is necessary after a cast
#15778: FILE: drivers/input/lirc/lirc_streamzap.c:298:
+			tmp = (int) (deltv*1000000+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#15778: FILE: drivers/input/lirc/lirc_streamzap.c:298:
+			tmp = (int) (deltv*1000000+
 			                  ^

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#15778: FILE: drivers/input/lirc/lirc_streamzap.c:298:
+			tmp = (int) (deltv*1000000+
 			                          ^

CHECK:SPACING: No space is necessary after a cast
#15790: FILE: drivers/input/lirc/lirc_streamzap.c:310:
+	pulse = ((int) value)*STREAMZAP_RESOLUTION;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#15790: FILE: drivers/input/lirc/lirc_streamzap.c:310:
+	pulse = ((int) value)*STREAMZAP_RESOLUTION;
 	                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15791: FILE: drivers/input/lirc/lirc_streamzap.c:311:
+	pulse += STREAMZAP_RESOLUTION/2;
 	                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#15795: FILE: drivers/input/lirc/lirc_streamzap.c:315:
+	dprintk("p %u", sz->plugin.minor, pulse&PULSE_MASK);
 	                                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#15802: FILE: drivers/input/lirc/lirc_streamzap.c:322:
+	push_full_pulse(sz, (value & STREAMZAP_PULSE_MASK)>>4);
 	                                                  ^

CHECK:SPACING: No space is necessary after a cast
#15810: FILE: drivers/input/lirc/lirc_streamzap.c:330:
+	space = ((int) value)*STREAMZAP_RESOLUTION;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#15810: FILE: drivers/input/lirc/lirc_streamzap.c:330:
+	space = ((int) value)*STREAMZAP_RESOLUTION;
 	                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15811: FILE: drivers/input/lirc/lirc_streamzap.c:331:
+	space += STREAMZAP_RESOLUTION/2;
 	                             ^

CHECK:SPACING: No space is necessary after a cast
#15857: FILE: drivers/input/lirc/lirc_streamzap.c:377:
+				i, (unsigned char) sz->buf_in[i]);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#15860: FILE: drivers/input/lirc/lirc_streamzap.c:380:
+				if ((sz->buf_in[i]&STREAMZAP_PULSE_MASK) ==
 				                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#15864: FILE: drivers/input/lirc/lirc_streamzap.c:384:
+				} else if ((sz->buf_in[i]&STREAMZAP_SPACE_MASK)
 				                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#15879: FILE: drivers/input/lirc/lirc_streamzap.c:399:
+				if (sz->buf_in[i] == 0xff) {
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#15883: FILE: drivers/input/lirc/lirc_streamzap.c:403:
+				} else

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#15888: FILE: drivers/input/lirc/lirc_streamzap.c:408:
+				if ((sz->buf_in[i]&STREAMZAP_SPACE_MASK) ==
 				                  ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#15904: FILE: drivers/input/lirc/lirc_streamzap.c:424:
+	return;
+}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sz)...) over kmalloc(sizeof(struct usb_streamzap)...)
#15925: FILE: drivers/input/lirc/lirc_streamzap.c:445:
+	sz = kmalloc(sizeof(struct usb_streamzap), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sz"
#15926: FILE: drivers/input/lirc/lirc_streamzap.c:446:
+	if (sz == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iface_host->endpoint[0].desc
#15945: FILE: drivers/input/lirc/lirc_streamzap.c:465:
+	sz->endpoint = &(iface_host->endpoint[0].desc);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sz->buf_in"
#15975: FILE: drivers/input/lirc/lirc_streamzap.c:495:
+	if (sz->buf_in == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sz->urb_in"
#15979: FILE: drivers/input/lirc/lirc_streamzap.c:499:
+	if (sz->urb_in == NULL)

CHECK:SPACING: No space is necessary after a cast
#16019: FILE: drivers/input/lirc/lirc_streamzap.c:539:
+	sz->delay_timer.data = (unsigned long) sz;

CHECK:SPACING: No space is necessary after a cast
#16025: FILE: drivers/input/lirc/lirc_streamzap.c:545:
+	sz->flush_timer.data = (unsigned long) sz;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#16031: FILE: drivers/input/lirc/lirc_streamzap.c:551:
+	usb_fill_int_urb(sz->urb_in, udev,
+		usb_rcvintpipe(udev, sz->endpoint->bEndpointAddress),

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#16036: FILE: drivers/input/lirc/lirc_streamzap.c:556:
+	if (udev->descriptor.iManufacturer
+	    && usb_string(udev, udev->descriptor.iManufacturer, buf, 63) > 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#16040: FILE: drivers/input/lirc/lirc_streamzap.c:560:
+	if (udev->descriptor.iProduct
+	    && usb_string(udev,  udev->descriptor.iProduct, buf, 63) > 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#16043: FILE: drivers/input/lirc/lirc_streamzap.c:563:
+	printk(KERN_INFO DRIVER_NAME "[%d]: %s on usb%d:%d attached\n",

CHECK:SPACING: No space is necessary after a cast
#16136: FILE: drivers/input/lirc/lirc_streamzap.c:656:
+		result = put_user(STREAMZAP_RESOLUTION, (unsigned long *) arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#16187: FILE: drivers/input/lirc/lirc_streamzap.c:707:
+	printk(KERN_INFO DRIVER_NAME "[%d]: disconnected\n", minor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#16194: FILE: drivers/input/lirc/lirc_streamzap.c:714:
+	printk(DRIVER_NAME "[%d]: suspend\n", sz->plugin.minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#16251: FILE: drivers/input/lirc/lirc_streamzap.c:771:
+	printk(KERN_INFO DRIVER_NAME " " DRIVER_VERSION " registered\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#16264: FILE: drivers/input/lirc/lirc_streamzap.c:784:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#16282: FILE: drivers/input/lirc/lirc_ttusbir.c:1:
+/****************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#16301: FILE: drivers/input/lirc/lirc_ttusbir.c:20:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#16302: FILE: drivers/input/lirc/lirc_ttusbir.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPLIT_STRING: quoted string split across lines
#16348: FILE: drivers/input/lirc/lirc_ttusbir.c:67:
+		 "Number of URBs in queue. Try to increase to 4 in case "
+		 "of problems (default: 2; minimum: 2)");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around device_id_table[0]
#16362: FILE: drivers/input/lirc/lirc_ttusbir.c:81:
+	.id_table = &(device_id_table[0]),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#16422: FILE: drivers/input/lirc/lirc_ttusbir.c:141:
+ * times higher frequency than the signal frequency */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#16424: FILE: drivers/input/lirc/lirc_ttusbir.c:143:
+const unsigned char map_table[] =
+{

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#16477: FILE: drivers/input/lirc/lirc_ttusbir.c:196:
+			if (ttusbir->last_num < PULSE_MASK/63)
 			                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#16480: FILE: drivers/input/lirc/lirc_ttusbir.c:199:
+		 * increment any longer */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#16497: FILE: drivers/input/lirc/lirc_ttusbir.c:216:
+/* Called whenever the USB subsystem thinks we could be the right driver
+   to handle this device

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe', this function's name, in a string
#16510: FILE: drivers/input/lirc/lirc_ttusbir.c:229:
+	DPRINTK("Module ttusbir probe\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#16528: FILE: drivers/input/lirc/lirc_ttusbir.c:247:
+			(sizeof(char *)*num_urbs) + (i * 128);
 			               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#16539: FILE: drivers/input/lirc/lirc_ttusbir.c:258:
+	/* Now look for interface setting we can handle
+	   We are searching for the alt setting where end point

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host_endpoint->desc.bEndpointAddress == 0x82'
#16547: FILE: drivers/input/lirc/lirc_ttusbir.c:266:
+			if ((host_endpoint->desc.bEndpointAddress == 0x82) &&
+			    (host_endpoint->desc.wMaxPacketSize == 0x10)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host_endpoint->desc.wMaxPacketSize == 0x10'
#16547: FILE: drivers/input/lirc/lirc_ttusbir.c:266:
+			if ((host_endpoint->desc.bEndpointAddress == 0x82) &&
+			    (host_endpoint->desc.wMaxPacketSize == 0x10)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#16556: FILE: drivers/input/lirc/lirc_ttusbir.c:275:
+	if (ttusbir->alt_setting != -1)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#16558: FILE: drivers/input/lirc/lirc_ttusbir.c:277:
+	else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#16624: FILE: drivers/input/lirc/lirc_ttusbir.c:343:
+			ttusbir->urb[i]->iso_frame_desc[j].offset = j*16;
 			                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'disconnect', this function's name, in a string
#16638: FILE: drivers/input/lirc/lirc_ttusbir.c:357:
+	DPRINTK("Module ttusbir disconnect\n");

CHECK:SPACING: No space is necessary after a cast
#16640: FILE: drivers/input/lirc/lirc_ttusbir.c:359:
+	ttusbir = (struct ttusbir_device *) usb_get_intfdata(intf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#16669: FILE: drivers/input/lirc/lirc_ttusbir.c:388:
+	printk(KERN_DEBUG "Module ttusbir exit\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#16688: FILE: drivers/input/lirc/lirc_zilog.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#16721: FILE: drivers/input/lirc/lirc_zilog.c:34:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#16722: FILE: drivers/input/lirc/lirc_zilog.c:35:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#16726: FILE: drivers/input/lirc/lirc_zilog.c:39:
+
+

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#16763: FILE: drivers/input/lirc/lirc_zilog.c:76:
+	struct mutex       buf_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#16810: FILE: drivers/input/lirc/lirc_zilog.c:123:
+struct mutex tx_data_lock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#16815: FILE: drivers/input/lirc/lirc_zilog.c:128:
+#define zilog_notify(s, args...) printk(KERN_NOTICE KBUILD_MODNAME ": " s, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#16817: FILE: drivers/input/lirc/lirc_zilog.c:130:
+#define zilog_error(s, args...) printk(KERN_ERR KBUILD_MODNAME ": " s, ## args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#16830: FILE: drivers/input/lirc/lirc_zilog.c:143:
+			printk(KERN_DEBUG DEVICE_NAME ": " fmt,		\

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#16856: FILE: drivers/input/lirc/lirc_zilog.c:169:
+		/* Lock i2c bus for the duration.  RX/TX chips interfere so
+		   this is worth it

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#16861: FILE: drivers/input/lirc/lirc_zilog.c:174:
+		/* Send random "poll command" (?)  Windows driver does this
+		   and it  is a good point to detect chip failure.

WARNING:SPLIT_STRING: quoted string split across lines
#16869: FILE: drivers/input/lirc/lirc_zilog.c:182:
+				zilog_error("unable to read from the IR chip "
+					    "after 3 resets, giving up\n");

WARNING:SPLIT_STRING: quoted string split across lines
#16875: FILE: drivers/input/lirc/lirc_zilog.c:188:
+			zilog_error("polling the IR receiver chip failed, "
+				    "trying reset\n");

WARNING:SPLIT_STRING: quoted string split across lines
#16890: FILE: drivers/input/lirc/lirc_zilog.c:203:
+			zilog_error("i2c_master_recv failed with %d -- "
+				    "keeping last read buffer\n", ret);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#16903: FILE: drivers/input/lirc/lirc_zilog.c:216:
+		code = (((__u16)ir->b[0]&0x7f)<<6) | (ir->b[1]>>2);
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#16903: FILE: drivers/input/lirc/lirc_zilog.c:216:
+		code = (((__u16)ir->b[0]&0x7f)<<6) | (ir->b[1]>>2);
 		                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#16903: FILE: drivers/input/lirc/lirc_zilog.c:216:
+		code = (((__u16)ir->b[0]&0x7f)<<6) | (ir->b[1]>>2);
 		                                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->t_notify"
#16928: FILE: drivers/input/lirc/lirc_zilog.c:241:
+	if (ir->t_notify != NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#16938: FILE: drivers/input/lirc/lirc_zilog.c:251:
+			/* This is ~113*2 + 24 + jitter (2*repeat gap +
+			   code length).  We use this interval as the chip

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#16956: FILE: drivers/input/lirc/lirc_zilog.c:269:
+			schedule_timeout(HZ/2);
 			                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->t_notify2"
#16960: FILE: drivers/input/lirc/lirc_zilog.c:273:
+	if (ir->t_notify2 != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->t_notify"
#16964: FILE: drivers/input/lirc/lirc_zilog.c:277:
+	if (ir->t_notify != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ir->l.owner"
#16975: FILE: drivers/input/lirc/lirc_zilog.c:288:
+	if (ir->l.owner == NULL || try_module_get(ir->l.owner) == 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#16980: FILE: drivers/input/lirc/lirc_zilog.c:293:
+	/* this is completely broken code. lirc_unregister_plugin()
+	   must be possible even when the device is open */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#16980: FILE: drivers/input/lirc/lirc_zilog.c:293:
+	   must be possible even when the device is open */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->l.owner"
#16997: FILE: drivers/input/lirc/lirc_zilog.c:310:
+	if (ir->l.owner != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17003: FILE: drivers/input/lirc/lirc_zilog.c:316:
+static inline int read_uint32(unsigned char **data,
+				     unsigned char *endp, unsigned int *val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17015: FILE: drivers/input/lirc/lirc_zilog.c:328:
+static inline int read_uint8(unsigned char **data,
+				    unsigned char *endp, unsigned char *val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17025: FILE: drivers/input/lirc/lirc_zilog.c:338:
+static inline int skip(unsigned char **data,
+			      unsigned char *endp, unsigned int distance)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17035: FILE: drivers/input/lirc/lirc_zilog.c:348:
+static int get_key_data(unsigned char *buf,
+			     unsigned int codeset, unsigned int key)

CHECK:BRACES: braces {} should be used on all arms of this statement
#17049: FILE: drivers/input/lirc/lirc_zilog.c:362:
+		if (i == codeset)
[...]
+		else if (codeset > i) {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#17104: FILE: drivers/input/lirc/lirc_zilog.c:417:
+		unsigned char *key_data;
+		pos = base + (lim >> 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#17114: FILE: drivers/input/lirc/lirc_zilog.c:427:
+				unsigned char val;
+				if (!read_uint8(&key_data, endp, &val) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#17142: FILE: drivers/input/lirc/lirc_zilog.c:455:
+		int tosend = TX_BLOCK_SIZE - i;
+		if (tosend > 4)

WARNING:SPLIT_STRING: quoted string split across lines
#17195: FILE: drivers/input/lirc/lirc_zilog.c:508:
+	zilog_notify("Zilog/Hauppauge IR blaster: firmware version "
+		     "%d.%d.%d\n", buf[1], buf[2], buf[3]);

WARNING:SPLIT_STRING: quoted string split across lines
#17243: FILE: drivers/input/lirc/lirc_zilog.c:556:
+		zilog_error("firmware haup-ir-blaster.bin not available "
+			    "(%d)\n", ret);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_data"
#17251: FILE: drivers/input/lirc/lirc_zilog.c:564:
+	if (tx_data == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_data->datap"
#17261: FILE: drivers/input/lirc/lirc_zilog.c:574:
+	if (tx_data->datap == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#17278: FILE: drivers/input/lirc/lirc_zilog.c:591:
+		zilog_error("unsupported code set file version (%u, expected"
+			    "1) -- please upgrade to a newer driver",

WARNING:MISSING_SPACE: break quoted strings at a space character
#17278: FILE: drivers/input/lirc/lirc_zilog.c:591:
+		zilog_error("unsupported code set file version (%u, expected"
+			    "1) -- please upgrade to a newer driver",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17291: FILE: drivers/input/lirc/lirc_zilog.c:604:
+	if (!read_uint32(&data, tx_data->endp,
+			      &tx_data->num_code_sets))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#17296: FILE: drivers/input/lirc/lirc_zilog.c:609:
+	tx_data->code_sets = vmalloc(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_data->code_sets"
#17298: FILE: drivers/input/lirc/lirc_zilog.c:611:
+	if (tx_data->code_sets == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#17313: FILE: drivers/input/lirc/lirc_zilog.c:626:
+		unsigned char pos, val;
+		if (!read_uint8(&data, tx_data->endp, &pos) ||

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#17341: FILE: drivers/input/lirc/lirc_zilog.c:654:
+		/* After the diffs we have the first key id + data -
+		   global fixed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#17341: FILE: drivers/input/lirc/lirc_zilog.c:654:
+		   global fixed */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17343: FILE: drivers/input/lirc/lirc_zilog.c:656:
+		if (!skip(&data, tx_data->endp,
+			       1 + TX_BLOCK_SIZE - num_global_fixed))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17348: FILE: drivers/input/lirc/lirc_zilog.c:661:
+		if (!skip(&data, tx_data->endp,
+			       (ndiffs + 1) * (keys - 1)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read', this function's name, in a string
#17398: FILE: drivers/input/lirc/lirc_zilog.c:711:
+	dprintk("read called\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read', this function's name, in a string
#17406: FILE: drivers/input/lirc/lirc_zilog.c:719:
+		dprintk("read result = -EINVAL\n");

WARNING:TYPO_SPELLING: 'beetwen' may be misspelled - perhaps 'between'?
#17413: FILE: drivers/input/lirc/lirc_zilog.c:726:
+	 * beetwen while condition checking and scheduling)
 	   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#17426: FILE: drivers/input/lirc/lirc_zilog.c:739:
+			 * -ERESTARTSYS */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#17441: FILE: drivers/input/lirc/lirc_zilog.c:754:
+			ret = copy_to_user((void *)outbuf+written, buf,
 			                                 ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read', this function's name, in a string
#17451: FILE: drivers/input/lirc/lirc_zilog.c:764:
+	dprintk("read result = %s (%d)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#17467: FILE: drivers/input/lirc/lirc_zilog.c:780:
+	if (ret == -EPROTO) {
[...]
+	} else if (ret != 0)
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#17469: FILE: drivers/input/lirc/lirc_zilog.c:782:
+		zilog_error("failed to get data for code %u, key %u -- check "
+			    "lircd.conf entries\n", code, key);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17501: FILE: drivers/input/lirc/lirc_zilog.c:814:
+		zilog_error("unexpected IR TX response #1: %02x\n",
+			buf[0]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#17515: FILE: drivers/input/lirc/lirc_zilog.c:828:
+	/* This bit NAKs until the device is ready, so we retry it
+	   sleeping a bit each time.  This seems to be what the windows

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#17526: FILE: drivers/input/lirc/lirc_zilog.c:839:
+			"failed with %d (try %d)\n", ret, i+1);
 			                                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#17526: FILE: drivers/input/lirc/lirc_zilog.c:839:
+		dprintk("NAK expected: i2c_master_send "
+			"failed with %d (try %d)\n", ret, i+1);

WARNING:SPLIT_STRING: quoted string split across lines
#17530: FILE: drivers/input/lirc/lirc_zilog.c:843:
+		zilog_error("IR TX chip never got ready: last i2c_master_send "
+			    "failed with %d\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17557: FILE: drivers/input/lirc/lirc_zilog.c:870:
+static ssize_t write(struct file *filep, const char *buf, size_t n,
+			  loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#17592: FILE: drivers/input/lirc/lirc_zilog.c:905:
+			ret = send_code(ir, (unsigned)command >> 16,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17593: FILE: drivers/input/lirc/lirc_zilog.c:906:
+			ret = send_code(ir, (unsigned)command >> 16,
+					    (unsigned)command & 0xFFFF);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#17593: FILE: drivers/input/lirc/lirc_zilog.c:906:
+					    (unsigned)command & 0xFFFF);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#17601: FILE: drivers/input/lirc/lirc_zilog.c:914:
+		/* Hmm, a failure.  If we've had a few then give up, otherwise
+		   try a reset

CHECK:BRACES: braces {} should be used on all arms of this statement
#17603: FILE: drivers/input/lirc/lirc_zilog.c:916:
+		if (ret != 0) {
[...]
+		} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#17606: FILE: drivers/input/lirc/lirc_zilog.c:919:
+			zilog_error("sending to the IR transmitter chip "
+				    "failed, trying reset\n");

WARNING:SPLIT_STRING: quoted string split across lines
#17610: FILE: drivers/input/lirc/lirc_zilog.c:923:
+				zilog_error("unable to send to the IR chip "
+					    "after 3 resets, giving up\n");

CHECK:BRACES: Unbalanced braces around else statement
#17618: FILE: drivers/input/lirc/lirc_zilog.c:931:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'poll', this function's name, in a string
#17635: FILE: drivers/input/lirc/lirc_zilog.c:948:
+	dprintk("poll called\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'poll', this function's name, in a string
#17643: FILE: drivers/input/lirc/lirc_zilog.c:956:
+	dprintk("poll result = %s\n",

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#17646: FILE: drivers/input/lirc/lirc_zilog.c:959:
+	ret = lirc_buffer_empty(&ir->buf) ? 0 : (POLLIN|POLLRDNORM);
 	                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17653: FILE: drivers/input/lirc/lirc_zilog.c:966:
+static int ioctl(struct inode *node, struct file *filep, unsigned int cmd,
+		      unsigned long arg)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)13' could be '13UL'
#17666: FILE: drivers/input/lirc/lirc_zilog.c:979:
+		result = put_user((unsigned long)13,

CHECK:SPACING: No space is necessary after a cast
#17670: FILE: drivers/input/lirc/lirc_zilog.c:983:
+		result = put_user(features, (unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#17675: FILE: drivers/input/lirc/lirc_zilog.c:988:
+		if (!(features&LIRC_CAN_REC_MASK))
 		              ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#17676: FILE: drivers/input/lirc/lirc_zilog.c:989:
+			return -ENOSYS;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#17679: FILE: drivers/input/lirc/lirc_zilog.c:992:
+				  (features&LIRC_CAN_REC_MASK),
 				           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#17683: FILE: drivers/input/lirc/lirc_zilog.c:996:
+		if (!(features&LIRC_CAN_REC_MASK))
 		              ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#17684: FILE: drivers/input/lirc/lirc_zilog.c:997:
+			return -ENOSYS;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#17691: FILE: drivers/input/lirc/lirc_zilog.c:1004:
+		if (!(features&LIRC_CAN_SEND_MASK))
 		              ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#17692: FILE: drivers/input/lirc/lirc_zilog.c:1005:
+			return -ENOSYS;

CHECK:SPACING: No space is necessary after a cast
#17694: FILE: drivers/input/lirc/lirc_zilog.c:1007:
+		result = put_user(LIRC_MODE_PULSE, (unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#17699: FILE: drivers/input/lirc/lirc_zilog.c:1012:
+		if (!(features&LIRC_CAN_SEND_MASK))
 		              ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#17700: FILE: drivers/input/lirc/lirc_zilog.c:1013:
+			return -ENOSYS;

CHECK:SPACING: No space is necessary after a cast
#17702: FILE: drivers/input/lirc/lirc_zilog.c:1015:
+		result = get_user(mode, (unsigned long *) arg);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#17715: FILE: drivers/input/lirc/lirc_zilog.c:1028:
+/* Open the IR device.  Get hold of our IR structure and
+   stash it in private_data for the file */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#17715: FILE: drivers/input/lirc/lirc_zilog.c:1028:
+   stash it in private_data for the file */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#17722: FILE: drivers/input/lirc/lirc_zilog.c:1035:
+	unsigned minor = MINOR(node->i_rdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#17723: FILE: drivers/input/lirc/lirc_zilog.c:1036:
+	unsigned minor = MINOR(node->i_rdev);
+	if (minor >= MAX_IRCTL_DEVICES) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'open', this function's name, in a string
#17724: FILE: drivers/input/lirc/lirc_zilog.c:1037:
+		dprintk("minor %d: open result = -ENODEV\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#17752: FILE: drivers/input/lirc/lirc_zilog.c:1065:
+	struct IR *ir = (struct IR *)filep->private_data;
+	if (ir == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ir"
#17752: FILE: drivers/input/lirc/lirc_zilog.c:1065:
+	if (ir == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'close', this function's name, in a string
#17753: FILE: drivers/input/lirc/lirc_zilog.c:1066:
+		zilog_error("close: no private_data attached to the file!\n");

WARNING:CONST_STRUCT: struct file_operations should normally be const
#17795: FILE: drivers/input/lirc/lirc_zilog.c:1108:
+static struct file_operations lirc_fops = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#17830: FILE: drivers/input/lirc/lirc_zilog.c:1143:
+	printk("lirc_zilog: chip found with %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#17831: FILE: drivers/input/lirc/lirc_zilog.c:1144:
+	printk("lirc_zilog: chip found with %s\n",
+		have_rx && have_tx ? "RX and TX" :

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir)...) over kmalloc(sizeof(struct IR)...)
#17834: FILE: drivers/input/lirc/lirc_zilog.c:1147:
+	ir = kmalloc(sizeof(struct IR), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ir"
#17835: FILE: drivers/input/lirc/lirc_zilog.c:1148:
+	if (ir == NULL)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#17837: FILE: drivers/input/lirc/lirc_zilog.c:1150:
+	if (lirc_buffer_init(&ir->buf, 2, BUFLEN/2) != 0) {
 	                                        ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#17848: FILE: drivers/input/lirc/lirc_zilog.c:1161:
+	ir->t_notify = ir->t_notify2 = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#17874: FILE: drivers/input/lirc/lirc_zilog.c:1187:
+			zilog_error("lirc_register_plugin: cannot run "
+				    "poll thread\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ir_attach', this function's name, in a string
#17903: FILE: drivers/input/lirc/lirc_zilog.c:1216:
+		zilog_error("ir_attach: \"minor\" must be between 0 and %d "

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#17904: FILE: drivers/input/lirc/lirc_zilog.c:1217:
+			    "(%d)!\n", MAX_IRCTL_DEVICES-1, ir->l.minor);
 			                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#17904: FILE: drivers/input/lirc/lirc_zilog.c:1217:
+		zilog_error("ir_attach: \"minor\" must be between 0 and %d "
+			    "(%d)!\n", MAX_IRCTL_DEVICES-1, ir->l.minor);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#17913: FILE: drivers/input/lirc/lirc_zilog.c:1226:
+	/* if we have the tx device, load the 'firmware'.  We do this
+	   after registering with lirc as otherwise hotplug seems to take

WARNING:LINE_SPACING: Missing a blank line after declarations
#17936: FILE: drivers/input/lirc/lirc_zilog.c:1249:
+	struct IR *ir = i2c_get_clientdata(client);
+	mutex_lock(&ir->lock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ir_detach', this function's name, in a string
#17960: FILE: drivers/input/lirc/lirc_zilog.c:1273:
+		zilog_error("ir_detach: detached from something we didn't "

WARNING:SPLIT_STRING: quoted string split across lines
#17961: FILE: drivers/input/lirc/lirc_zilog.c:1274:
+		zilog_error("ir_detach: detached from something we didn't "
+			    "attach to\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ir_detach', this function's name, in a string
#17968: FILE: drivers/input/lirc/lirc_zilog.c:1281:
+		zilog_error("ir_detach: invalid device count\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#18023: FILE: drivers/input/lirc/lirc_zilog.c:1336:
+			return ir_attach(adap, have_rx, have_tx);
+		else

WARNING:SPLIT_STRING: quoted string split across lines
#18057: FILE: drivers/input/lirc/lirc_zilog.c:1370:
+MODULE_AUTHOR("Gerd Knorr, Michal Kochanowicz, Christoph Bartelmus, "
+	      "Ulrich Mueller, Stefan Jahn, Jerome Brock, Mark Weaver");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230093.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 40 errors, 783 warnings, 994 checks, 17868 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230093.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
