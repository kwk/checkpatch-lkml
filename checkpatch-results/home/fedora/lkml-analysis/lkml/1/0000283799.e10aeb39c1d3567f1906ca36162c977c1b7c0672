WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
This is somewhat improved version of strnicmp() function in lib/string.c. I have implemented binary

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: lib/string.c:20:
+    unsigned char c1, c2, c3, c4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: lib/string.c:21:
+    unsigned count = 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#95: FILE: lib/string.c:21:
+    unsigned count = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: lib/string.c:22:
+    int flag = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: lib/string.c:24:
+    c1 = c2 = c3 = c4 = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#98: FILE: lib/string.c:24:
+    c1 = c2 = c3 = c4 = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: lib/string.c:26:
+    if(len > 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#100: FILE: lib/string.c:26:
+    if(len > 0)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#100: FILE: lib/string.c:26:
+    if(len > 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: lib/string.c:27:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: lib/string.c:28:
+        for(; count <= len/2; count++)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: lib/string.c:28:
+        for(; count <= len/2; count++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#102: FILE: lib/string.c:28:
+        for(; count <= len/2; count++)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#102: FILE: lib/string.c:28:
+        for(; count <= len/2; count++)
+        {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#102: FILE: lib/string.c:28:
+        for(; count <= len/2; count++)
                           ^

ERROR:SPACING: space required before the open parenthesis '('
#102: FILE: lib/string.c:28:
+        for(; count <= len/2; count++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: lib/string.c:29:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: lib/string.c:29:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: lib/string.c:30:
+            c1 = tolower(s1[count]);    // well, we$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: lib/string.c:30:
+            c1 = tolower(s1[count]);    // well, we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: lib/string.c:31:
+            c2 = tolower(s2[count]);    // are ignoring$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: lib/string.c:31:
+            c2 = tolower(s2[count]);    // are ignoring$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: lib/string.c:32:
+            c3 = tolower(s1[len-count-1]);    // cases$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: lib/string.c:32:
+            c3 = tolower(s1[len-count-1]);    // cases$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#106: FILE: lib/string.c:32:
+            c3 = tolower(s1[len-count-1]);    // cases
                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#106: FILE: lib/string.c:32:
+            c3 = tolower(s1[len-count-1]);    // cases
                                      ^

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#107: FILE: lib/string.c:33:
+            c4 = tolower(s2[len-count-1]);    // thats why
                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: lib/string.c:33:
+            c4 = tolower(s2[len-count-1]);    // thats why$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: lib/string.c:33:
+            c4 = tolower(s2[len-count-1]);    // thats why$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#107: FILE: lib/string.c:33:
+            c4 = tolower(s2[len-count-1]);    // thats why
                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#107: FILE: lib/string.c:33:
+            c4 = tolower(s2[len-count-1]);    // thats why
                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: lib/string.c:34:
+            $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: lib/string.c:34:
+            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: lib/string.c:34:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: lib/string.c:35:
+            if(c1 == c2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: lib/string.c:35:
+            if(c1 == c2)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#109: FILE: lib/string.c:35:
+            if(c1 == c2)
+            {

ERROR:SPACING: space required before the open parenthesis '('
#109: FILE: lib/string.c:35:
+            if(c1 == c2)

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: lib/string.c:36:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: lib/string.c:36:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: lib/string.c:37:
+                if(c3 != c4)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: lib/string.c:37:
+                if(c3 != c4)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#111: FILE: lib/string.c:37:
+                if(c3 != c4)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#111: FILE: lib/string.c:37:
+                if(c3 != c4)
+                {

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: lib/string.c:37:
+                if(c3 != c4)

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: lib/string.c:38:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: lib/string.c:38:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: lib/string.c:39:
+                    flag = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: lib/string.c:39:
+                    flag = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: lib/string.c:40:
+                    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: lib/string.c:40:
+                    break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: lib/string.c:41:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: lib/string.c:41:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: lib/string.c:42:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: lib/string.c:42:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: lib/string.c:43:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: lib/string.c:43:
+            else$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#117: FILE: lib/string.c:43:
+            }
+            else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: lib/string.c:45:
+            flag = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: lib/string.c:45:
+            flag = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: lib/string.c:46:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: lib/string.c:46:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: lib/string.c:48:
+    return flag;     // return 0 for matching and $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: lib/string.c:48:
+    return flag;     // return 0 for matching and $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000283799.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 30 warnings, 6 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000283799.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
