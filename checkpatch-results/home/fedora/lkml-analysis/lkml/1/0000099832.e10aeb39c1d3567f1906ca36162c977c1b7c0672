ERROR:SPACING: space required after that ',' (ctx:VxV)
#64: FILE: fs/ext2/inode.c:767:
+	ret = __ext2_write_begin(file, mapping, pos, len, flags, pagep,fsdata);
 	                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#67: FILE: fs/ext2/inode.c:770:
+		loff_t isize = inode->i_size;
+		if (pos + len > isize)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: fs/ext2/inode.c:777:
+static int ext2_write_end(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#74: FILE: fs/ext2/inode.c:777:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#74: FILE: fs/ext2/inode.c:777:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: fs/ext2/inode.c:785:
+		loff_t isize = inode->i_size;
+		if (pos + len > isize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: fs/ext2/inode.c:804:
+	ret = nobh_write_begin(file, mapping, pos, len, flags, pagep, fsdata,
 							ext2_get_block);

WARNING:LINE_SPACING: Missing a blank line after declarations
#105: FILE: fs/ext2/inode.c:807:
+		loff_t isize;
+		isize = i_size_read(inode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: fs/ext2/inode.c:834:
+	ret = blockdev_direct_IO(rw, iocb, inode, inode->i_sb->s_bdev, iov,
 				offset, nr_segs, ext2_get_block, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: fs/ext2/inode.c:837:
+		loff_t isize = i_size_read(inode);
+		ext2_ftruncate(NULL, 0, inode, isize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: fs/ext2/inode.c:1062:
+int ext2_ftruncate(struct file *file, int open,
+			struct inode *inode, loff_t offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: fs/ext2/inode.c:1092:
+		error = nobh_truncate_page(inode->i_mapping,
+				offset, ext2_get_block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: fs/ext2/inode.c:1095:
+		error = block_truncate_page(inode->i_mapping,
+				offset, ext2_get_block);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#191: FILE: fs/ext2/inode.c:1100:
+	iblock = (offset + blocksize-1) >> EXT2_BLOCK_SIZE_BITS(inode->i_sb);
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: mm/shmem.c:768:
+static int shmem_ftruncate(struct file *file, int open,
+			struct inode *inode, loff_t offset)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#432: FILE: fs/ext2/ext2.h:125:
+extern int ext2_ftruncate(struct file *, int, struct inode *, loff_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#432: FILE: fs/ext2/ext2.h:125:
+extern int ext2_ftruncate(struct file *, int, struct inode *, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#432: FILE: fs/ext2/ext2.h:125:
+extern int ext2_ftruncate(struct file *, int, struct inode *, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#432: FILE: fs/ext2/ext2.h:125:
+extern int ext2_ftruncate(struct file *, int, struct inode *, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#432: FILE: fs/ext2/ext2.h:125:
+extern int ext2_ftruncate(struct file *, int, struct inode *, loff_t);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000099832.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 9 checks, 407 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000099832.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
