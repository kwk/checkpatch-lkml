WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
overall space usage and keeps the size of the task_struct down (three pointers

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: include/linux/container.h:30:
+extern void container_post_fork(struct task_struct *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: include/linux/container.h:41:
+};
+#undef SUBSYS

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#130: FILE: include/linux/container.h:125:
+struct css_group {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#201: FILE: include/linux/container.h:276:
+ * 1) call container_iter_start to intialize an iterator
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#213: FILE: include/linux/container.h:288:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#325: FILE: kernel/container.c:164:
+ * due to container_iter_start() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#332: FILE: kernel/container.c:171:
+ * compiled into their kernel but not actually in use */

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: kernel/container.c:201:
+		struct cg_container_link *link;
+		link = list_entry(cg->cg_links.next,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#406: FILE: kernel/container.c:242:
+static struct css_group *find_existing_css_group(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#418: FILE: kernel/container.c:252:
+	 * see in the new css_group */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#423: FILE: kernel/container.c:257:
+			 * container */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: kernel/container.c:261:
+			 * don't want to change the subsystem state */

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: kernel/container.c:293:
+	int i;
+	INIT_LIST_HEAD(tmp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: kernel/container.c:315:
+		struct cg_container_link *link;
+		link = list_entry(tmp->next,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#497: FILE: kernel/container.c:331:
+static struct css_group *find_css_group(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#508: FILE: kernel/container.c:342:
+	 * the desired set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#533: FILE: kernel/container.c:367:
+	 * find_existing_css_group() */

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: kernel/container.c:375:
+		struct container_subsys *ss = subsys[i];
+		atomic_inc(&cont->count);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#548: FILE: kernel/container.c:382:
+			BUG_ON(list_empty(&tmp_cg_links));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#568: FILE: kernel/container.c:402:
+	BUG_ON(!list_empty(&tmp_cg_links));

WARNING:LINE_SPACING: Missing a blank line after declarations
#593: FILE: kernel/container.c:840:
+	struct list_head tmp_cg_links, *l;
+	INIT_LIST_HEAD(&tmp_cg_links);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#627: FILE: kernel/container.c:908:
+		 * the css_group objects */

WARNING:LINE_SPACING: Missing a blank line after declarations
#633: FILE: kernel/container.c:914:
+			struct cg_container_link *link;
+			cg = list_entry(l, struct css_group, list);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#634: FILE: kernel/container.c:915:
+			BUG_ON(list_empty(&tmp_cg_links));

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: kernel/container.c:981:
+		struct cg_container_link *link;
+		link = list_entry(cont->css_groups.next,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#708: FILE: kernel/container.c:1102:
+	if (!newcg) {
+		return -ENOMEM;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: kernel/container.c:1456:
+static void container_advance_iter(struct container *cont,
+					  struct container_iter *it)

WARNING:LINE_SPACING: Missing a blank line after declarations
#825: FILE: kernel/container.c:1485:
+		struct task_struct *p, *g;
+		write_lock(&css_group_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: kernel/container.c:1487:
+ ^I^Ido_each_thread(g, p) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#827: FILE: kernel/container.c:1487:
+ ^I^Ido_each_thread(g, p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: kernel/container.c:1487:
+ ^I^Ido_each_thread(g, p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: kernel/container.c:1492:
+ ^I^I} while_each_thread(g, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#832: FILE: kernel/container.c:1492:
+ ^I^I} while_each_thread(g, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: kernel/container.c:1492:
+ ^I^I} while_each_thread(g, p);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#854: FILE: kernel/container.c:1514:
+		 * the next cg_container_link */

WARNING:LINE_SPACING: Missing a blank line after declarations
#893: FILE: kernel/container.c:1558:
+	struct task_struct *tsk;
+	container_iter_start(cont, &it);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#931: FILE: kernel/container.c:1895:
+	 * groups are in the subsystem's top container. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: kernel/container.c:1909:
+ ^Iif (ss->fork) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#945: FILE: kernel/container.c:1909:
+ ^Iif (ss->fork) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: kernel/container.c:1909:
+ ^Iif (ss->fork) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: kernel/container.c:1910:
+ ^I^Istruct task_struct *g, *p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#946: FILE: kernel/container.c:1910:
+ ^I^Istruct task_struct *g, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: kernel/container.c:1910:
+ ^I^Istruct task_struct *g, *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: kernel/container.c:1912:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#960: FILE: kernel/container.c:1912:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: kernel/container.c:1912:
+ ^I^Iread_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: kernel/container.c:1913:
+ ^I^Ido_each_thread(g, p) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#961: FILE: kernel/container.c:1913:
+ ^I^Ido_each_thread(g, p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: kernel/container.c:1913:
+ ^I^Ido_each_thread(g, p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: kernel/container.c:1914:
+ ^I^I^Iss->fork(ss, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#962: FILE: kernel/container.c:1914:
+ ^I^I^Iss->fork(ss, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: kernel/container.c:1914:
+ ^I^I^Iss->fork(ss, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: kernel/container.c:1915:
+ ^I^I} while_each_thread(g, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#963: FILE: kernel/container.c:1915:
+ ^I^I} while_each_thread(g, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: kernel/container.c:1915:
+ ^I^I} while_each_thread(g, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: kernel/container.c:1916:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#964: FILE: kernel/container.c:1916:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: kernel/container.c:1916:
+ ^I^Iread_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: kernel/container.c:1917:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#965: FILE: kernel/container.c:1917:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: kernel/container.c:1917:
+ ^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1034: FILE: kernel/container.c:2168:
+ * guarantee that the new task ends up on its list. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1044: FILE: kernel/container.c:2178:
+}
+/**

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000402917.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 46 warnings, 8 checks, 1019 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000402917.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
