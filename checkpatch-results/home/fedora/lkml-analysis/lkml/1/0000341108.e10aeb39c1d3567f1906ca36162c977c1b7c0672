CHECK:CAMELCASE: Avoid CamelCase: <Cprintk>
#40: FILE: arch/x86/mm/pageattr_64.c:17:
+#define Cprintk(x...)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#66: FILE: arch/x86/mm/pageattr_64.c:64:
+	struct page *p = alloc_page(GFP_KERNEL);
+	if (!p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#76: FILE: arch/x86/mm/pageattr_64.c:74:
+	BUG_ON(!PagePrivate(base));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#77: FILE: arch/x86/mm/pageattr_64.c:75:
+	BUG_ON(page_private(base) != 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: arch/x86/mm/pageattr_64.c:88:
+	pte_t *pbase = alloc_split_page(&base);
+	if (!pbase)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/x86/mm/pageattr_64.c:95:
+		pbase[i] = pfn_pte(addr >> PAGE_SHIFT,
+			   addr == paddr ? prot : ref_prot);

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: arch/x86/mm/pageattr_64.c:115:
+			struct page *l3;
+			l3 = split_pmd(paddr, prot, ref_prot);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#138: FILE: arch/x86/mm/pageattr_64.c:121:
+			pbase[i] = pfn_pte(addr>>PAGE_SHIFT, ref_prot);
 			                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: arch/x86/mm/pageattr_64.c:132:
+	unsigned long paddr = __pa(address);
+	Cprintk("cpa splitting %lx level %d\n", address, level);

CHECK:BRACES: braces {} should be used on all arms of this statement
#150: FILE: arch/x86/mm/pageattr_64.c:133:
+	if (level == 2)
[...]
+	else if (level == 3)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#154: FILE: arch/x86/mm/pageattr_64.c:137:
+		return split_pmd(paddr, prot, ref_prot);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#154: FILE: arch/x86/mm/pageattr_64.c:137:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: arch/x86/mm/pageattr_64.c:138:
+		printk("address %lx\n", address);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: arch/x86/mm/pageattr_64.c:140:
+		BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: arch/x86/mm/pageattr_64.c:201:
+	unsigned long pfn = __pa(addr) >> PAGE_SHIFT;
+	set_pte(pte, pte_mkhuge(pfn_pte(pfn, prot)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#184: FILE: arch/x86/mm/pageattr_64.c:215:
+	BUG_ON(page_private(p) < 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: arch/x86/mm/pageattr_64.c:318:
+			split = split_large_page(address, prot, ref_prot2,
+						level);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000341108.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 6 checks, 208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000341108.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
