WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#50: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/net/mlx4/alloc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#105: FILE: drivers/net/mlx4/alloc.c:51:
+	if (obj < bitmap->max) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#109: FILE: drivers/net/mlx4/alloc.c:55:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: drivers/net/mlx4/alloc.c:87:
+	bitmap->table = kzalloc(BITS_TO_LONGS(num) * sizeof (long), GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#141: FILE: drivers/net/mlx4/alloc.c:87:
+	bitmap->table = kzalloc(BITS_TO_LONGS(num) * sizeof (long), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#157: FILE: drivers/net/mlx4/alloc.c:103:
+/*
+ * Handling for queue buffers -- we allocate a bunch of memory and

WARNING:SIZEOF_PARENTHESIS: sizeof *buf->u.page_list should be sizeof(*buf->u.page_list)
#191: FILE: drivers/net/mlx4/alloc.c:137:
+		buf->u.page_list = kzalloc(buf->nbufs * sizeof *buf->u.page_list,

CHECK:BRACES: Unbalanced braces around else statement
#225: FILE: drivers/net/mlx4/alloc.c:171:
+	else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: drivers/net/mlx4/cq.c:1:
+/*

ERROR:SPACING: space prohibited after that open parenthesis '('
#307: FILE: drivers/net/mlx4/cq.c:68:
+#define MLX4_CQ_STATUS_OK		( 0 << 28)

ERROR:SPACING: space prohibited after that open parenthesis '('
#308: FILE: drivers/net/mlx4/cq.c:69:
+#define MLX4_CQ_STATUS_OVERFLOW		( 9 << 28)

ERROR:SPACING: space prohibited after that open parenthesis '('
#310: FILE: drivers/net/mlx4/cq.c:71:
+#define MLX4_CQ_FLAG_CC			( 1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#310: FILE: drivers/net/mlx4/cq.c:71:
+#define MLX4_CQ_FLAG_CC			( 1 << 18)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space prohibited after that open parenthesis '('
#311: FILE: drivers/net/mlx4/cq.c:72:
+#define MLX4_CQ_FLAG_OI			( 1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#311: FILE: drivers/net/mlx4/cq.c:72:
+#define MLX4_CQ_FLAG_OI			( 1 << 17)

ERROR:SPACING: space prohibited after that open parenthesis '('
#312: FILE: drivers/net/mlx4/cq.c:73:
+#define MLX4_CQ_STATE_ARMED		( 9 <<  8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#313: FILE: drivers/net/mlx4/cq.c:74:
+#define MLX4_CQ_STATE_ARMED_SOL		( 6 <<  8)

WARNING:SIZEOF_PARENTHESIS: sizeof *cq_context should be sizeof(*cq_context)
#406: FILE: drivers/net/mlx4/cq.c:167:
+	memset(cq_context, 0, sizeof *cq_context);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#473: FILE: drivers/net/mlx4/cq.c:234:
+int __devinit mlx4_init_cq_table(struct mlx4_dev *dev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#500: FILE: drivers/net/mlx4/eq.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#548: FILE: drivers/net/mlx4/eq.c:49:
+/*
+ * Must be packed because start is 64 bits but only aligned to 32 bits.

ERROR:SPACING: space prohibited after that open parenthesis '('
#571: FILE: drivers/net/mlx4/eq.c:72:
+#define MLX4_EQ_STATUS_OK	   ( 0 << 28)

ERROR:SPACING: space prohibited after that open parenthesis '('
#573: FILE: drivers/net/mlx4/eq.c:74:
+#define MLX4_EQ_OWNER_SW	   ( 0 << 24)

ERROR:SPACING: space prohibited after that open parenthesis '('
#574: FILE: drivers/net/mlx4/eq.c:75:
+#define MLX4_EQ_OWNER_HW	   ( 1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#574: FILE: drivers/net/mlx4/eq.c:75:
+#define MLX4_EQ_OWNER_HW	   ( 1 << 24)

ERROR:SPACING: space prohibited after that open parenthesis '('
#575: FILE: drivers/net/mlx4/eq.c:76:
+#define MLX4_EQ_FLAG_EC		   ( 1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#575: FILE: drivers/net/mlx4/eq.c:76:
+#define MLX4_EQ_FLAG_EC		   ( 1 << 18)

ERROR:SPACING: space prohibited after that open parenthesis '('
#576: FILE: drivers/net/mlx4/eq.c:77:
+#define MLX4_EQ_FLAG_OI		   ( 1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#576: FILE: drivers/net/mlx4/eq.c:77:
+#define MLX4_EQ_FLAG_OI		   ( 1 << 17)

ERROR:SPACING: space prohibited after that open parenthesis '('
#577: FILE: drivers/net/mlx4/eq.c:78:
+#define MLX4_EQ_STATE_ARMED	   ( 9 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#597: FILE: drivers/net/mlx4/eq.c:98:
+#define MLX4_CATAS_EVENT_MASK  (1ull << MLX4_EVENT_TYPE_LOCAL_CATAS_ERROR)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#608: FILE: drivers/net/mlx4/eq.c:109:
+		} __attribute__((packed)) comp;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#616: FILE: drivers/net/mlx4/eq.c:117:
+		} __attribute__((packed)) cmd;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#619: FILE: drivers/net/mlx4/eq.c:120:
+		} __attribute__((packed)) qp;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#622: FILE: drivers/net/mlx4/eq.c:123:
+		} __attribute__((packed)) srq;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#628: FILE: drivers/net/mlx4/eq.c:129:
+		} __attribute__((packed)) cq_err;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#632: FILE: drivers/net/mlx4/eq.c:133:
+		} __attribute__((packed)) port_change;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#636: FILE: drivers/net/mlx4/eq.c:137:
+} __attribute__((packed));

CHECK:SPACING: No space is necessary after a cast
#640: FILE: drivers/net/mlx4/eq.c:141:
+	__raw_writel((__force u32) cpu_to_be32((eq->cons_index & 0xffffff) |

WARNING:LINE_SPACING: Missing a blank line after declarations
#650: FILE: drivers/net/mlx4/eq.c:151:
+	unsigned long off = (entry & (eq->nent - 1)) * MLX4_EQ_ENTRY_SIZE;
+	return eq->page_list[off / PAGE_SIZE].buf + off % PAGE_SIZE;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#656: FILE: drivers/net/mlx4/eq.c:157:
+	struct mlx4_eqe *eqe = get_eqe(eq, eq->cons_index);
+	return !!(eqe->owner & 0x80) ^ !!(eq->cons_index & eq->nent) ? NULL : eqe;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#674: FILE: drivers/net/mlx4/eq.c:175:
+		/*
+		 * Make sure we read EQ entry contents after we've

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/net/mlx4/eq.c:201:
+			mlx4_srq_event(dev, be32_to_cpu(eqe->event.srq.srqn) & 0xffffff,
+				      eqe->type);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#742: FILE: drivers/net/mlx4/eq.c:243:
+		/*
+		 * The HCA will think the queue has overflowed if we

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#750: FILE: drivers/net/mlx4/eq.c:251:
+			/*
+			 * Conditional on hca_type is OK here because

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#803: FILE: drivers/net/mlx4/eq.c:304:
+static int mlx4_MAP_EQ(struct mlx4_dev *dev, u64 event_mask, int unmap,
+			int eq_num)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#823: FILE: drivers/net/mlx4/eq.c:324:
+static void __devinit __iomem *mlx4_get_eq_uar(struct mlx4_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#846: FILE: drivers/net/mlx4/eq.c:347:
+static int __devinit mlx4_create_eq(struct mlx4_dev *dev, int nent,

WARNING:SIZEOF_PARENTHESIS: sizeof *eq->page_list should be sizeof(*eq->page_list)
#863: FILE: drivers/net/mlx4/eq.c:364:
+	eq->page_list = kmalloc(npages * sizeof *eq->page_list,

WARNING:SIZEOF_PARENTHESIS: sizeof *dma_list should be sizeof(*dma_list)
#871: FILE: drivers/net/mlx4/eq.c:372:
+	dma_list = kmalloc(npages * sizeof *dma_list, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *eq_context should be sizeof(*eq_context)
#910: FILE: drivers/net/mlx4/eq.c:411:
+	memset(eq_context, 0, sizeof *eq_context);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#976: FILE: drivers/net/mlx4/eq.c:477:
+		for (i = 0; i < sizeof (struct mlx4_eq_context) / 4; ++i) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#978: FILE: drivers/net/mlx4/eq.c:479:
+				printk("[%02x] ", i * 4);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#979: FILE: drivers/net/mlx4/eq.c:480:
+			printk(" %08x", be32_to_cpup(mailbox->buf + i * 4));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#981: FILE: drivers/net/mlx4/eq.c:482:
+				printk("\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1008: FILE: drivers/net/mlx4/eq.c:509:
+static int __devinit mlx4_map_clr_int(struct mlx4_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1029: FILE: drivers/net/mlx4/eq.c:530:
+int __devinit mlx4_map_eq_icm(struct mlx4_dev *dev, u64 icm_virt)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1035: FILE: drivers/net/mlx4/eq.c:536:
+	/*
+	 * We assume that mapping one page is enough for the whole EQ

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1071: FILE: drivers/net/mlx4/eq.c:572:
+int __devinit mlx4_init_eq_table(struct mlx4_dev *dev)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#1107: FILE: drivers/net/mlx4/eq.c:608:
+		static const char *eq_name[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: drivers/net/mlx4/eq.c:643:
+		mlx4_warn(dev, "MAP_EQ for async EQ %d failed (%d)\n",
+			   priv->eq_table.eq[MLX4_EQ_ASYNC].eqn, err);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1210: FILE: drivers/net/mlx4/icm.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1253: FILE: drivers/net/mlx4/icm.c:44:
+/*
+ * We allocate in as big chunks as we can, up to a maximum of 256 KB

WARNING:SIZEOF_PARENTHESIS: sizeof *icm should be sizeof(*icm)
#1288: FILE: drivers/net/mlx4/icm.c:79:
+	icm = kmalloc(sizeof *icm, gfp_mask & ~(__GFP_HIGHMEM | __GFP_NOWARN));

WARNING:SIZEOF_PARENTHESIS: sizeof *chunk should be sizeof(*chunk)
#1299: FILE: drivers/net/mlx4/icm.c:90:
+			chunk = kmalloc(sizeof *chunk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1384: FILE: drivers/net/mlx4/icm.c:175:
+		mlx4_dbg(dev, "Mapped page at %llx to %llx for ICM.\n",
+			  (unsigned long long) dma_addr, (unsigned long long) virt);

CHECK:SPACING: No space is necessary after a cast
#1384: FILE: drivers/net/mlx4/icm.c:175:
+			  (unsigned long long) dma_addr, (unsigned long long) virt);

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: drivers/net/mlx4/icm.c:211:
+			 (u64) i * MLX4_TABLE_CHUNK_SIZE)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1524: FILE: drivers/net/mlx4/icm.c:315:
+	unsigned chunk_size;

WARNING:SIZEOF_PARENTHESIS: sizeof *table->icm should be sizeof(*table->icm)
#1530: FILE: drivers/net/mlx4/icm.c:321:
+	table->icm      = kcalloc(num_icm, sizeof *table->icm, GFP_KERNEL);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1557: FILE: drivers/net/mlx4/icm.c:348:
+		/*
+		 * Add a reference to this ICM chunk so that it never

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1595: FILE: drivers/net/mlx4/icm.h:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1636: FILE: drivers/net/mlx4/icm.h:42:
+	((256 - sizeof (struct list_head) - 2 * sizeof (int)) /		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1636: FILE: drivers/net/mlx4/icm.h:42:
+	((256 - sizeof (struct list_head) - 2 * sizeof (int)) /		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1637: FILE: drivers/net/mlx4/icm.h:43:
+	 (sizeof (struct scatterlist)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1736: FILE: drivers/net/mlx4/mcg.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1816: FILE: drivers/net/mlx4/mcg.c:81:
+/*
+ * Caller must hold MCG table semaphore.  gid and mgm parameters must

WARNING:SPLIT_STRING: quoted string split across lines
#1853: FILE: drivers/net/mlx4/mcg.c:118:
+		mlx4_dbg(dev, "Hash for %04x:%04x:%04x:%04x:"
+			  "%04x:%04x:%04x:%04x is %04x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#1854: FILE: drivers/net/mlx4/mcg.c:119:
+			  be16_to_cpu(((__be16 *) gid)[0]),

CHECK:SPACING: No space is necessary after a cast
#1855: FILE: drivers/net/mlx4/mcg.c:120:
+			  be16_to_cpu(((__be16 *) gid)[1]),

CHECK:SPACING: No space is necessary after a cast
#1856: FILE: drivers/net/mlx4/mcg.c:121:
+			  be16_to_cpu(((__be16 *) gid)[2]),

CHECK:SPACING: No space is necessary after a cast
#1857: FILE: drivers/net/mlx4/mcg.c:122:
+			  be16_to_cpu(((__be16 *) gid)[3]),

CHECK:SPACING: No space is necessary after a cast
#1858: FILE: drivers/net/mlx4/mcg.c:123:
+			  be16_to_cpu(((__be16 *) gid)[4]),

CHECK:SPACING: No space is necessary after a cast
#1859: FILE: drivers/net/mlx4/mcg.c:124:
+			  be16_to_cpu(((__be16 *) gid)[5]),

CHECK:SPACING: No space is necessary after a cast
#1860: FILE: drivers/net/mlx4/mcg.c:125:
+			  be16_to_cpu(((__be16 *) gid)[6]),

CHECK:SPACING: No space is necessary after a cast
#1861: FILE: drivers/net/mlx4/mcg.c:126:
+			  be16_to_cpu(((__be16 *) gid)[7]),

WARNING:SIZEOF_PARENTHESIS: sizeof *mgm should be sizeof(*mgm)
#1931: FILE: drivers/net/mlx4/mcg.c:196:
+		memset(mgm, 0, sizeof *mgm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1971: FILE: drivers/net/mlx4/mcg.c:236:
+		BUG_ON(index < dev->caps.num_mgms);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#2005: FILE: drivers/net/mlx4/mcg.c:270:
+		mlx4_err(dev, "MGID %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x "
+			  "not found\n",

CHECK:SPACING: No space is necessary after a cast
#2006: FILE: drivers/net/mlx4/mcg.c:271:
+			  be16_to_cpu(((__be16 *) gid)[0]),

CHECK:SPACING: No space is necessary after a cast
#2007: FILE: drivers/net/mlx4/mcg.c:272:
+			  be16_to_cpu(((__be16 *) gid)[1]),

CHECK:SPACING: No space is necessary after a cast
#2008: FILE: drivers/net/mlx4/mcg.c:273:
+			  be16_to_cpu(((__be16 *) gid)[2]),

CHECK:SPACING: No space is necessary after a cast
#2009: FILE: drivers/net/mlx4/mcg.c:274:
+			  be16_to_cpu(((__be16 *) gid)[3]),

CHECK:SPACING: No space is necessary after a cast
#2010: FILE: drivers/net/mlx4/mcg.c:275:
+			  be16_to_cpu(((__be16 *) gid)[4]),

CHECK:SPACING: No space is necessary after a cast
#2011: FILE: drivers/net/mlx4/mcg.c:276:
+			  be16_to_cpu(((__be16 *) gid)[5]),

CHECK:SPACING: No space is necessary after a cast
#2012: FILE: drivers/net/mlx4/mcg.c:277:
+			  be16_to_cpu(((__be16 *) gid)[6]),

CHECK:SPACING: No space is necessary after a cast
#2013: FILE: drivers/net/mlx4/mcg.c:278:
+			  be16_to_cpu(((__be16 *) gid)[7]));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2029: FILE: drivers/net/mlx4/mcg.c:294:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2044: FILE: drivers/net/mlx4/mcg.c:309:
+		int amgm_index_to_free = be32_to_cpu(mgm->next_gid_index) >> 6;
+		if (amgm_index_to_free) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2044: FILE: drivers/net/mlx4/mcg.c:309:
+		if (amgm_index_to_free) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2048: FILE: drivers/net/mlx4/mcg.c:313:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2056: FILE: drivers/net/mlx4/mcg.c:321:
+			BUG_ON(amgm_index_to_free < dev->caps.num_mgms);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2062: FILE: drivers/net/mlx4/mcg.c:327:
+		int curr_next_index = be32_to_cpu(mgm->next_gid_index) >> 6;
+		err = mlx4_READ_MCG(dev, prev, mailbox);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2072: FILE: drivers/net/mlx4/mcg.c:337:
+		BUG_ON(index < dev->caps.num_mgms);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2084: FILE: drivers/net/mlx4/mcg.c:349:
+int __devinit mlx4_init_mcg_table(struct mlx4_dev *dev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2112: FILE: drivers/net/mlx4/mr.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2155: FILE: drivers/net/mlx4/mr.c:44:
+/*
+ * Must be packed because mtt_seg is 64 bits but only aligned to 32 bits.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2172: FILE: drivers/net/mlx4/mr.c:61:
+} __attribute__((packed));

CHECK:BIT_MACRO: Prefer using the BIT macro
#2175: FILE: drivers/net/mlx4/mr.c:64:
+#define MLX4_MPT_FLAG_MIO	    (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2176: FILE: drivers/net/mlx4/mr.c:65:
+#define MLX4_MPT_FLAG_BIND_ENABLE   (1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2177: FILE: drivers/net/mlx4/mr.c:66:
+#define MLX4_MPT_FLAG_PHYSICAL	    (1 <<  9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2178: FILE: drivers/net/mlx4/mr.c:67:
+#define MLX4_MPT_FLAG_REGION	    (1 <<  8)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2233: FILE: drivers/net/mlx4/mr.c:122:
+static int __devinit mlx4_buddy_init(struct mlx4_buddy *buddy, int max_order)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2240: FILE: drivers/net/mlx4/mr.c:129:
+	buddy->bits = kzalloc((buddy->max_order + 1) * sizeof (long *),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2247: FILE: drivers/net/mlx4/mr.c:136:
+		buddy->bits[i] = kmalloc(s * sizeof (long), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2247: FILE: drivers/net/mlx4/mr.c:136:
+		buddy->bits[i] = kmalloc(s * sizeof (long), GFP_KERNEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2300: FILE: drivers/net/mlx4/mr.c:189:
+	if (!npages) {
[...]
+	} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2304: FILE: drivers/net/mlx4/mr.c:193:
+		return 0;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#2304: FILE: drivers/net/mlx4/mr.c:193:
+	} else

CHECK:SPACING: No space is necessary after a cast
#2333: FILE: drivers/net/mlx4/mr.c:222:
+	return (u64) mtt->first_seg * dev->caps.mtt_entry_sz;

WARNING:SIZEOF_PARENTHESIS: sizeof *mpt_entry should be sizeof(*mpt_entry)
#2435: FILE: drivers/net/mlx4/mr.c:324:
+	memset(mpt_entry, 0, sizeof *mpt_entry);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2506: FILE: drivers/net/mlx4/mr.c:395:
+		/*
+		 * If we have an odd number of entries to write, add

WARNING:SIZEOF_PARENTHESIS: sizeof *page_list should be sizeof(*page_list)
#2535: FILE: drivers/net/mlx4/mr.c:424:
+	page_list = kmalloc(buf->npages * sizeof *page_list, GFP_KERNEL);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2552: FILE: drivers/net/mlx4/mr.c:441:
+int __devinit mlx4_init_mr_table(struct mlx4_dev *dev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2600: FILE: drivers/net/mlx4/pd.c:1:
+/*

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2659: FILE: drivers/net/mlx4/pd.c:60:
+int __devinit mlx4_init_pd_table(struct mlx4_dev *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2672: FILE: drivers/net/mlx4/pd.c:73:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2708: FILE: drivers/net/mlx4/qp.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#2838: FILE: drivers/net/mlx4/qp.c:131:
+		u64 mtt_addr = mlx4_mtt_addr(dev, mtt);
+		context->mtt_base_addr_h = mtt_addr >> 32;

CHECK:SPACING: No space is necessary after a cast
#2843: FILE: drivers/net/mlx4/qp.c:136:
+	*(__be32 *) mailbox->buf = cpu_to_be32(optpar);

WARNING:SIZEOF_PARENTHESIS: sizeof *context should be sizeof(*context)
#2844: FILE: drivers/net/mlx4/qp.c:137:
+	memcpy(mailbox->buf + 8, context, sizeof *context);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2861: FILE: drivers/net/mlx4/qp.c:154:
+	if (sqpn)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2863: FILE: drivers/net/mlx4/qp.c:156:
+	else {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2951: FILE: drivers/net/mlx4/qp.c:244:
+int __devinit mlx4_init_qp_table(struct mlx4_dev *dev)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2960: FILE: drivers/net/mlx4/qp.c:253:
+	/*
+	 * We reserve 2 extra QPs per port for the special QPs.  The

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2984: FILE: drivers/net/mlx4/srq.c:1:
+/*

WARNING:SIZEOF_PARENTHESIS: sizeof *srq_context should be sizeof(*srq_context)
#3122: FILE: drivers/net/mlx4/srq.c:139:
+	memset(srq_context, 0, sizeof *srq_context);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3191: FILE: drivers/net/mlx4/srq.c:208:
+int __devinit mlx4_init_srq_table(struct mlx4_dev *dev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 81 warnings, 46 checks, 3102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
