CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: net/ipv4/tcp_output.c:2188:
+	skb = sock_wmalloc(sk, MAX_TCP_HEADER + 15, 1,
+			sk_allocation(sk, GFP_ATOMIC));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: net/ipv6/tcp_ipv6.c:584:
+			tp->md5sig_info = kzalloc(sizeof(*tp->md5sig_info),
+					sk_allocation(sk, GFP_ATOMIC));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*p)...) over kzalloc(sizeof(struct tcp_md5sig_info)...)
#138: FILE: net/ipv6/tcp_ipv6.c:722:
+		p = kzalloc(sizeof(struct tcp_md5sig_info),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: net/ipv6/tcp_ipv6.c:723:
+		p = kzalloc(sizeof(struct tcp_md5sig_info),
+				   sk_allocation(sk, GFP_KERNEL));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250092.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 4 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250092.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
