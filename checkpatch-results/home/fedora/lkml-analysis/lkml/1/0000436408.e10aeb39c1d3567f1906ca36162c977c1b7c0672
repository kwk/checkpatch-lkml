WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > Although some, like Christoph and myself, think that it would benefit to

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#60: 
supplementary condition, dependant of the marker context, at the marker
                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: block/ll_rw_blk.c:1622:
+		MARK(blk_pdu_unplug_io, "%p %p %d", q, NULL,
 					q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: block/ll_rw_blk.c:1633:
+	MARK(blk_pdu_unplug_io, "%p %p %d", q, NULL,
 				q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: block/ll_rw_blk.c:1643:
+	MARK(blk_pdu_unplug_timer, "%p %p %d", q, NULL,
 				q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: block/ll_rw_blk.c:3189:
+			MARK(blk_remap, "%p %p %u %llu %llu", q, bio, old_dev,
+					(u64)bio->bi_sector, (u64)old_sector);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#248: FILE: block/blk-probe.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: block/blk-probe.c:8:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: block/blk-probe.c:20:
+static void blk_add_trace_rq(const struct __mark_marker_data *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#291: FILE: block/blk-probe.c:44:
+		__blk_add_trace(bt, 0, rq->data_len, rw, what, rq->errors, sizeof(rq->cmd), rq->cmd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#294: FILE: block/blk-probe.c:47:
+		__blk_add_trace(bt, rq->hard_sector, rq->hard_nr_sectors << 9, rw, what, rq->errors, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: block/blk-probe.c:62:
+static void blk_add_trace_bio(const struct __mark_marker_data *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#329: FILE: block/blk-probe.c:82:
+	__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio->bi_rw, what, !bio_flagged(bio, BIO_UPTODATE), 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: block/blk-probe.c:97:
+static void blk_add_trace_generic(const struct __mark_marker_data *mdata,
+	const char *fmt, ...)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: block/blk-probe.c:139:
+static void blk_add_trace_pdu_int(const struct __mark_marker_data *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#411: FILE: block/blk-probe.c:164:
+		__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio->bi_rw, what, !bio_flagged(bio, BIO_UPTODATE), sizeof(rpdu), &rpdu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: block/blk-probe.c:184:
+static void blk_add_trace_remap(const struct __mark_marker_data *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#459: FILE: block/blk-probe.c:212:
+	__blk_add_trace(bt, from, bio->bi_size, bio->bi_rw, BLK_TA_REMAP, !bio_flagged(bio, BIO_UPTODATE), sizeof(r), &r);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#465: FILE: block/blk-probe.c:218:
+static struct blk_probe_data probe_array[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#489: FILE: block/blk-probe.c:242:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#495: FILE: block/blk-probe.c:248:
+	uint8_t i;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: block/blk-probe.c:252:
+		result = marker_set_probe(probe_array[i].name,
+				probe_array[i].format,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#502: FILE: block/blk-probe.c:255:
+			printk(KERN_INFO

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#512: FILE: block/blk-probe.c:265:
+	uint8_t i;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#514: FILE: block/blk-probe.c:267:
+	for (i = 0; i < NUM_PROBES; i++) {
+		marker_remove_probe(probe_array[i].name);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#517: FILE: block/blk-probe.c:270:
+	synchronize_sched();	/* Wait for probes to finish */

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#534: FILE: block/blktrace.c:33:
+static int blk_probes_ref = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#733: FILE: include/linux/blktrace_api.h:158:
+extern int blk_probe_connect(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#734: FILE: include/linux/blktrace_api.h:159:
+extern void blk_probe_disconnect(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#801: FILE: fs/bio.c:1085:
+	MARK(blk_pdu_split, "%p %p %d", bdev_get_queue(bi->bi_bdev), bi,
 				bi->bi_sector + first_sectors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: drivers/md/dm.c:489:
+			MARK(blk_request_complete, "%p %p",
+				io->md->queue, io->bio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: drivers/md/dm.c:586:
+		MARK(blk_remap, "%p %p %u %llu %llu",
+			bdev_get_queue(clone->bi_bdev), clone,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 11 warnings, 19 checks, 709 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436408.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
