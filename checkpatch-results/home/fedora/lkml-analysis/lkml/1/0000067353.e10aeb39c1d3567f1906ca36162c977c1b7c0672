CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: arch/x86/include/asm/k8.h:13:
+extern int k8_get_nodes(struct bootnode *nodes);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: arch/x86/include/asm/k8.h:14:
+extern int k8_numa_init(unsigned long start_pfn, unsigned long end_pfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: arch/x86/include/asm/k8.h:15:
+extern int k8_scan_nodes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: arch/x86/include/asm/page_types.h:52:
+extern void initmem_init(unsigned long start_pfn, unsigned long end_pfn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: arch/x86/include/asm/page_types.h:53:
+extern void initmem_init(unsigned long start_pfn, unsigned long end_pfn,
+				int acpi, int k8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/x86/mm/init_32.c:707:
+void __init initmem_init(unsigned long start_pfn, unsigned long end_pfn,
+				int acpi, int k8)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: arch/x86/mm/init_64.c:572:
+void __init initmem_init(unsigned long start_pfn, unsigned long end_pfn,
+				int acpi, int k8)

WARNING:MISPLACED_INIT: __initdata should be placed after nodes[8]
#170: FILE: arch/x86/mm/k8topology_64.c:27:
+static struct bootnode __initdata nodes[8];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after nodes_parsed
#171: FILE: arch/x86/mm/k8topology_64.c:28:
+static nodemask_t __initdata nodes_parsed = NODE_MASK_NONE;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: arch/x86/mm/k8topology_64.c:99:
+	unsigned numnodes;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#258: FILE: arch/x86/mm/k8topology_64.c:214:
+	BUG_ON(nodes_empty(nodes_parsed));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: arch/x86/mm/numa_32.c:351:
+void __init initmem_init(unsigned long start_pfn, unsigned long end_pfn,
+				int acpi, int k8)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/x86/mm/numa_64.c:528:
+void __init initmem_init(unsigned long start_pfn, unsigned long last_pfn,
+				int acpi, int k8)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 9 checks, 196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067353.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
