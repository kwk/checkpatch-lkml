WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
[ Sorry, first one had an extra hunk found on another patch I already sent ]

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#71: FILE: tools/perf/builtin-annotate.c:64:
+		fprintf(stderr, "%s: ip=%Lx\n", __func__,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#170: FILE: tools/perf/builtin-annotate.c:490:
+		fprintf(stderr, "%s: filename=%s, sym=%s, start=%Lx, end=%Lx\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#214: FILE: tools/perf/builtin-annotate.c:541:
+	for (nd = rb_first(&output_hists); nd; nd = rb_next(nd)) {
 	     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#214: FILE: tools/perf/builtin-annotate.c:541:
+	for (nd = rb_first(&output_hists); nd; nd = rb_next(nd)) {
 	                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#214: FILE: tools/perf/builtin-annotate.c:541:
+	for (nd = rb_first(&output_hists); nd; nd = rb_next(nd)) {
 	                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#214: FILE: tools/perf/builtin-annotate.c:541:
+	for (nd = rb_first(&output_hists); nd; nd = rb_next(nd)) {
 	                                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#215: FILE: tools/perf/builtin-annotate.c:542:
+		struct hist_entry *he = rb_entry(nd, struct hist_entry, rb_node);
 		                                 ^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct map *' should also have an identifier name
#245: FILE: tools/perf/util/event.h:85:
+	u64			(*unmap_ip)(struct map *, u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#245: FILE: tools/perf/util/event.h:85:
+	u64			(*unmap_ip)(struct map *, u64);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#273: FILE: tools/perf/util/map.c:57:
+			self->map_ip = self->unmap_ip = identity__map_ip;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#274: FILE: tools/perf/util/map.c:58:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#290: FILE: tools/perf/util/symbol.c:340:
+			map->map_ip = map->unmap_ip = identity__map_ip;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#317: FILE: tools/perf/util/symbol.c:1264:
+	kernel_map->map_ip = kernel_map->unmap_ip = identity__map_ip;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057652.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 4 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057652.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
