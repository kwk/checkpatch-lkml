WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#118: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: drivers/regulator/ab3100.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#124: FILE: drivers/regulator/ab3100.c:2:
+ * drivers/regulator/ab3100.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: drivers/regulator/ab3100.c:64:
+static const u8 ab3100_reg_init_order[AB3100_NUM_REGULATORS+2] = {
                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: drivers/regulator/ab3100.c:124:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#332: FILE: drivers/regulator/ab3100.c:210:
+	case AB3100_LDO_A: /* Fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#333: FILE: drivers/regulator/ab3100.c:211:
+	case AB3100_LDO_C: /* Fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#334: FILE: drivers/regulator/ab3100.c:212:
+	case AB3100_LDO_D: /* Fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#335: FILE: drivers/regulator/ab3100.c:213:
+	case AB3100_LDO_E: /* Fallthrough */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#336: FILE: drivers/regulator/ab3100.c:214:
+	case AB3100_LDO_H: /* Fallthrough */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#338: FILE: drivers/regulator/ab3100.c:216:
+		udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#341: FILE: drivers/regulator/ab3100.c:219:
+		udelay(600);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#344: FILE: drivers/regulator/ab3100.c:222:
+		udelay(400);

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/regulator/ab3100.c:253:
+			(void) ab3100_set_register_interruptible(abreg->ab3100,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#384: FILE: drivers/regulator/ab3100.c:262:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#419: FILE: drivers/regulator/ab3100.c:297:
+					 unsigned selector)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/regulator/ab3100.c:344:
+static int ab3100_get_best_voltage_index(struct regulator_dev *reg,
+				   int min_uV, int max_uV)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/regulator/ab3100.c:405:
+		dev_warn(&reg->dev, "failed to set regulator register %02x\n",
+			abreg->regreg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/regulator/ab3100.c:446:
+		dev_warn(&reg->dev, "failed to set regulator register %02x\n",
+			abreg->regreg);

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#583: FILE: drivers/regulator/ab3100.c:461:
+static struct regulator_ops regulator_ops_fixed = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#590: FILE: drivers/regulator/ab3100.c:468:
+static struct regulator_ops regulator_ops_variable = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#599: FILE: drivers/regulator/ab3100.c:477:
+static struct regulator_ops regulator_ops_variable_sleepable = {

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#615: FILE: drivers/regulator/ab3100.c:493:
+static struct regulator_ops regulator_ops_external = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: drivers/regulator/ab3100.c:595:
+		err = ab3100_set_register_interruptible(ab3100,
+					ab3100_reg_init_order[i],

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#863: FILE: include/linux/mfd/ab3100.h:113:
+	u8 reg_initvals[AB3100_NUM_REGULATORS+2];
 	                                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076880.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 12 checks, 776 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076880.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
