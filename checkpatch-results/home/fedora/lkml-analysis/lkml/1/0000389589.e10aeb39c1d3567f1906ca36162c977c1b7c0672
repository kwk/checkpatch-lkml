CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != EACCES'
#90: FILE: arch/um/os-Linux/file.c:178:
+	if(err && (errno != EACCES))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#90: FILE: arch/um/os-Linux/file.c:178:
+	if(err && (errno != EACCES))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: arch/um/os-Linux/file.c:180:
+	else if(!err)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != EACCES'
#97: FILE: arch/um/os-Linux/file.c:184:
+	if(err && (errno != EACCES))

ERROR:SPACING: space required before the open parenthesis '('
#97: FILE: arch/um/os-Linux/file.c:184:
+	if(err && (errno != EACCES))

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: arch/um/os-Linux/file.c:186:
+	else if(!err)

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: arch/um/os-Linux/file.c:296:
+		if(fd < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: arch/um/os-Linux/file.c:298:
+			printk("Couldn't open \"%s\", errno = %d\n", file,

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: arch/um/os-Linux/file.c:312:
+	else *size_out = buf.ust_size;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#165: FILE: arch/um/os-Linux/file.c:312:
 	}
+	else *size_out = buf.ust_size;

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: arch/um/os-Linux/process.c:39:
 		printk(UM_KERN_ERR "os_process_pc - couldn't open '%s', "
+		       "errno = %d\n", proc_stat, errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#303: FILE: arch/um/os-Linux/process.c:51:
 	if (sscanf(buf, "%*d " COMM_SCANF " %*c %*d %*d %*d %*d %*d %*d %*d "
+		   "%*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d "

WARNING:SPLIT_STRING: quoted string split across lines
#304: FILE: arch/um/os-Linux/process.c:52:
+		   "%*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d "
+		   "%*d %*d %*d %*d %*d %lu", &pc) != 1)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: arch/um/os-Linux/process.c:73:
+		printk(UM_KERN_ERR "Couldn't open '%s', errno = %d\n", stat,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: arch/um/os-Linux/process.c:82:
+		printk(UM_KERN_ERR "Couldn't read '%s', errno = %d\n", stat,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'parse_iomem', this function's name, in a string
#396: FILE: arch/um/os-Linux/start_up.c:500:
+		perror("parse_iomem - Couldn't open io file");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: arch/um/include/os.h:132:
+extern int os_set_exec_close(int fd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup_physmem', this function's name, in a string
#436: FILE: arch/um/kernel/physmem.c:102:
+		printf("setup_physmem - mapping %ld bytes of memory at 0x%p "

WARNING:SPLIT_STRING: quoted string split across lines
#437: FILE: arch/um/kernel/physmem.c:103:
+		printf("setup_physmem - mapping %ld bytes of memory at 0x%p "
+		       "failed - errno = %d\n", len - offset,

CHECK:SPACING: No space is necessary after a cast
#438: FILE: arch/um/kernel/physmem.c:104:
+		       (void *) uml_reserved, err);

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#481: FILE: arch/um/os-Linux/drivers/ethertap_user.c:104:
+	char *nosetup_args[] = { "uml_net", version_buf, "ethertap",

ERROR:SPACING: space required before the open brace '{'
#504: FILE: arch/um/os-Linux/drivers/ethertap_user.c:155:
+	if(err){

ERROR:SPACING: space required before the open parenthesis '('
#504: FILE: arch/um/os-Linux/drivers/ethertap_user.c:155:
+	if(err){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#506: FILE: arch/um/os-Linux/drivers/ethertap_user.c:157:
+		printk("etap_open - data socketpair failed - err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_open', this function's name, in a string
#506: FILE: arch/um/os-Linux/drivers/ethertap_user.c:157:
+		printk("etap_open - data socketpair failed - err = %d\n",

ERROR:SPACING: space required before the open brace '{'
#516: FILE: arch/um/os-Linux/drivers/ethertap_user.c:163:
+	if(err){

ERROR:SPACING: space required before the open parenthesis '('
#516: FILE: arch/um/os-Linux/drivers/ethertap_user.c:163:
+	if(err){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#518: FILE: arch/um/os-Linux/drivers/ethertap_user.c:165:
+		printk("etap_open - control socketpair failed - err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_open', this function's name, in a string
#518: FILE: arch/um/os-Linux/drivers/ethertap_user.c:165:
+		printk("etap_open - control socketpair failed - err = %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#560: FILE: arch/um/os-Linux/drivers/ethertap_user.c:209:
+	if(shutdown(pri->data_fd, SHUT_RDWR) < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#561: FILE: arch/um/os-Linux/drivers/ethertap_user.c:210:
+		printk("etap_close - shutdown data socket failed, errno = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_close', this function's name, in a string
#561: FILE: arch/um/os-Linux/drivers/ethertap_user.c:210:
+		printk("etap_close - shutdown data socket failed, errno = %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#564: FILE: arch/um/os-Linux/drivers/ethertap_user.c:213:
+	if(shutdown(pri->control_fd, SHUT_RDWR) < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#565: FILE: arch/um/os-Linux/drivers/ethertap_user.c:214:
+		printk("etap_close - shutdown control socket failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_close', this function's name, in a string
#565: FILE: arch/um/os-Linux/drivers/ethertap_user.c:214:
+		printk("etap_close - shutdown control socket failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: arch/um/os-Linux/drivers/ethertap_user.c:215:
+		printk("etap_close - shutdown control socket failed, "
+		       "errno = %d\n", errno);

ERROR:SPACING: space required before the open brace '{'
#637: FILE: arch/um/os-Linux/drivers/tuntap_user.c:163:
+		if(err){

ERROR:SPACING: space required before the open parenthesis '('
#637: FILE: arch/um/os-Linux/drivers/tuntap_user.c:163:
+		if(err){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#639: FILE: arch/um/os-Linux/drivers/tuntap_user.c:165:
+			printk("tuntap_open : socketpair failed - errno = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tuntap_open', this function's name, in a string
#639: FILE: arch/um/os-Linux/drivers/tuntap_user.c:165:
+			printk("tuntap_open : socketpair failed - errno = %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: arch/um/os-Linux/drivers/tuntap_user.c:171:
+		if(buffer != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer"
#646: FILE: arch/um/os-Linux/drivers/tuntap_user.c:171:
+		if(buffer != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#690: FILE: arch/um/os-Linux/helper.c:61:
+		printk("run_helper : pipe failed, errno = %d\n", errno);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'run_helper', this function's name, in a string
#690: FILE: arch/um/os-Linux/helper.c:61:
+		printk("run_helper : pipe failed, errno = %d\n", errno);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389589.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 23 warnings, 5 checks, 587 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389589.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
