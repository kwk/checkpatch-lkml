CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/ia64/ia32/sys_ia32.c:216:
+	ret = do_mmap(NULL, PAGE_START(start), PAGE_SIZE, prot | PROT_WRITE,
+			flags | MAP_FIXED | MAP_ANONYMOUS, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: arch/ia64/ia32/sys_ia32.c:822:
+^I^I^I       ^Iflags | MAP_FIXED, poff);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: arch/ia64/ia32/sys_ia32.c:822:
+^I^I^I       ^Iflags | MAP_FIXED, poff);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: arch/ia64/ia32/sys_ia32.c:822:
+		ret = do_mmap(file, pstart, pend - pstart, prot,
+			       	flags | MAP_FIXED, poff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/ia64/ia32/sys_ia32.c:825:
+		ret = do_mmap(NULL, pstart, pend - pstart,
+			prot | ((flags & MAP_ANONYMOUS) ? 0 : PROT_WRITE),

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: arch/mips/kernel/irixelf.c:797:
+ ^I(void) do_mmap(NULL, 0, 4096, PROT_READ | PROT_EXEC,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: arch/mips/kernel/irixelf.c:797:
+ ^I(void) do_mmap(NULL, 0, 4096, PROT_READ | PROT_EXEC,$

CHECK:SPACING: No space is necessary after a cast
#370: FILE: arch/mips/kernel/irixelf.c:797:
+ 	(void) do_mmap(NULL, 0, 4096, PROT_READ | PROT_EXEC,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: arch/mips/kernel/irixelf.c:797:
+ ^I(void) do_mmap(NULL, 0, 4096, PROT_READ | PROT_EXEC,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: fs/binfmt_elf_fdpic.c:373:
+ ^Icurrent->mm->start_brk = do_mmap(NULL, 0, stack_size,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1002: FILE: fs/binfmt_elf_fdpic.c:373:
+ ^Icurrent->mm->start_brk = do_mmap(NULL, 0, stack_size,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: fs/binfmt_elf_fdpic.c:373:
+ ^Icurrent->mm->start_brk = do_mmap(NULL, 0, stack_size,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: fs/binfmt_flat.c:546:
+		realdatastart = __do_mmap_anon(0, len,
 			PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1082: FILE: fs/binfmt_flat.c:598:
+		textpos = __do_mmap_anon(0, len,
 			PROT_READ | PROT_EXEC | PROT_WRITE, MAP_PRIVATE, 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1129: FILE: include/linux/mm.h:983:
+extern unsigned long ___do_mmap_pgoff(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1129: FILE: include/linux/mm.h:983:
+extern unsigned long ___do_mmap_pgoff(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: include/linux/mm.h:996:
+static inline unsigned long __do_mmap_anon(unsigned long addr,
 	unsigned long len, unsigned long prot,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1161: FILE: include/linux/mm.h:1010:
+extern unsigned long do_mmap(struct file *file, unsigned long addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: include/linux/mm.h:1011:
+extern unsigned long do_mmap(struct file *file, unsigned long addr,
+	unsigned long len, unsigned long prot,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1177: FILE: ipc/shm.c:1015:
+	user_addr = ___do_mmap_pgoff (file, addr, size, prot, flags, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1192: FILE: mm/mmap.c:891:
+unsigned long ___do_mmap_pgoff(struct file * file, unsigned long addr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: mm/mmap.c:892:
+unsigned long ___do_mmap_pgoff(struct file * file, unsigned long addr,
+		unsigned long len, unsigned long prot,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1204: FILE: mm/mmap.c:1031:
+unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1205: FILE: mm/mmap.c:1032:
+unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+			unsigned long len, unsigned long prot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: mm/mmap.c:1047:
+unsigned long do_mmap(struct file *file, unsigned long addr,
+		unsigned long len, unsigned long prot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1254: FILE: mm/nommu.c:819:
+unsigned long ___do_mmap_pgoff(struct file *file,
 			    unsigned long addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1282: FILE: mm/nommu.c:1037:
+unsigned long do_mmap(struct file *file, unsigned long addr,
+		unsigned long len, unsigned long prot,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000357726.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 6 warnings, 16 checks, 942 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000357726.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
