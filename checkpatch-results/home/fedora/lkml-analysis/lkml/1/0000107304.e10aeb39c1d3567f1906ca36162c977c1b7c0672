WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
--- linux-2.6.30/arch/x86/include/asm/xen/hypercall.h	2009-06-09 21:05:27.000000000 -0600

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#55: FILE: arch/x86/include/asm/xen/hypercall.h:422:
+HYPERVISOR_tmem_op(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: include/xen/interface/tmem.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#78: FILE: include/xen/interface/tmem.h:2:
+ * include/xen/interface/tmem.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#135: FILE: include/xen/interface/xen.h:466:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#136: FILE: include/xen/interface/xen.h:467:
+	int32_t pool_id; /* private > 0; shared < 0; 0 is invalid */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#139: FILE: include/xen/interface/xen.h:470:
+			uint64_t uuid[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#140: FILE: include/xen/interface/xen.h:471:
+			uint32_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#143: FILE: include/xen/interface/xen.h:474:
+			uint64_t object;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#144: FILE: include/xen/interface/xen.h:475:
+			uint32_t index;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#145: FILE: include/xen/interface/xen.h:476:
+			uint32_t tmem_offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#146: FILE: include/xen/interface/xen.h:477:
+			uint32_t pfn_offset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#147: FILE: include/xen/interface/xen.h:478:
+			uint32_t len;

CHECK:SPACING: No space is necessary after a cast
#148: FILE: include/xen/interface/xen.h:479:
+			GUEST_HANDLE(void) gmfn; /* guest machine page frame */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: include/xen/interface/xen.h:479:
+			uint32_t len;
+			GUEST_HANDLE(void) gmfn; /* guest machine page frame */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#152: FILE: include/xen/interface/xen.h:483:
+};
+typedef struct tmem_op tmem_op_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#152: FILE: include/xen/interface/xen.h:483:
+typedef struct tmem_op tmem_op_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#161: FILE: drivers/xen/tmem.c:1:
+/*

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#174: FILE: drivers/xen/tmem.c:14:
+struct tmem_ops *tmem_ops = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/xen/tmem.c:17:
+static inline int xen_tmem_op(u32 tmem_cmd, u32 tmem_pool, u64 object,
+	u32 index, unsigned long gmfn, u32 tmem_offset, u32 pfn_offset, u32 len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#194: FILE: drivers/xen/tmem.c:34:
+static inline int xen_tmem_new_pool(uint32_t tmem_cmd, uint64_t uuid_lo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/xen/tmem.c:35:
+static inline int xen_tmem_new_pool(uint32_t tmem_cmd, uint64_t uuid_lo,
+	uint64_t uuid_hi, uint32_t flags)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#195: FILE: drivers/xen/tmem.c:35:
+	uint64_t uuid_hi, uint32_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/xen/tmem.c:49:
+static int tmem_put_page(u32 pool_id, u64 object, u32 index,
+	unsigned long pfn)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/xen/tmem.c:58:
+static int tmem_get_page(u32 pool_id, u64 object, u32 index,
+	unsigned long pfn)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmem_ops"
#250: FILE: drivers/xen/tmem.c:90:
+	if (tmem_ops != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#251: FILE: drivers/xen/tmem.c:91:
+		printk(KERN_WARNING, "attempt to define multiple tmem_ops\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmem_ops)...) over kmalloc(sizeof(struct tmem_ops)...)
#253: FILE: drivers/xen/tmem.c:93:
+		tmem_ops = kmalloc(sizeof(struct tmem_ops), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tmem_ops"
#255: FILE: drivers/xen/tmem.c:95:
+	if (tmem_ops == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107304.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 21 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107304.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
