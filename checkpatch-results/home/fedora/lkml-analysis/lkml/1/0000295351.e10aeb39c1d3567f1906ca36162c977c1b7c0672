CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: include/linux/trace.h:118:
+int trace_exists(const char *parent_dir, const char *dir,
+					struct trace_info **ti);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: include/linux/trace.h:122:
+int debugfs_dump(struct debugfs_printk_data *dpk, const void *output,
+							const int output_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: include/linux/trace.h:135:
+static inline int trace_exists(const char *parent_dir, const char *dir,
+				struct trace_info **ti)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#118: FILE: include/linux/trace.h:139:
+}
+static inline void trace_cleanup_all(const char *parent_dir) {}

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: include/linux/trace.h:141:
+static inline int debugfs_printk(struct debugfs_printk_data *dpk, char *format,
+				...)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#124: FILE: include/linux/trace.h:145:
+}
+int debugfs_dump(struct debugfs_printk_data *dpk, const void *output,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: include/linux/trace.h:146:
+int debugfs_dump(struct debugfs_printk_data *dpk, const void *output,
+							const int output_len)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*temp)...) over kzalloc(sizeof(struct trace_dir)...)
#175: FILE: lib/trace.c:161:
+	temp = kzalloc(sizeof(struct trace_dir), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#192: FILE: lib/trace.c:177:
+	if (IS_ERR(temp->trace_dir))
[...]
-	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#195: FILE: lib/trace.c:179:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: lib/trace.c:191:
+int trace_exists(const char *parent_dir, const char *dir,
+					struct trace_info **ti)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: lib/trace.c:636:
+static int trace_printf_(struct trace_info *trace, const char *format,
+								va_list ap)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#290: FILE: lib/trace.c:662:
+	switch (dpk->exists) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: lib/trace.c:670:
+		ti = trace_setup(dpk->parent_dir, dpk->dir,
+			dpk->buf_size, dpk->sub_buf_size, TRACE_FLIGHT_CHANNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#299: FILE: lib/trace.c:671:
+		printk(KERN_INFO "Trace interface %s setup\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: lib/trace.c:672:
+		printk(KERN_INFO "Trace interface %s setup\n",
+							ti->dir->d_iname);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#302: FILE: lib/trace.c:674:
+			printk(KERN_ERR "Trace interface could not be "

WARNING:SPLIT_STRING: quoted string split across lines
#303: FILE: lib/trace.c:675:
+			printk(KERN_ERR "Trace interface could not be "
+							"initialised\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#306: FILE: lib/trace.c:678:
+		/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: lib/trace.c:696:
+	struct trace_info *ti;
+	va_list(ap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: lib/trace.c:717:
+int debugfs_dump(struct debugfs_printk_data *dpk, const void *output,
+							const int output_len)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#370: FILE: samples/trace/fork_new_trace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#387: FILE: samples/trace/fork_new_trace.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#388: FILE: samples/trace/fork_new_trace.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#433: FILE: samples/trace/fork_new_trace.c:64:
+		printk(KERN_ERR "fork_trace: register_kprobe failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#455: FILE: samples/trace/fork_new_trace.c:86:
+		printk(KERN_ERR "Unable to find required free memory. "

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: samples/trace/fork_new_trace.c:87:
+		printk(KERN_ERR "Unable to find required free memory. "
+				"Trace new sample module loading aborted");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000295351.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 16 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000295351.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
