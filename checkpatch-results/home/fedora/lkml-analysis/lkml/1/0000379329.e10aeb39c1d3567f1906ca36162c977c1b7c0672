WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#44: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: Documentation/trace/src/fork_trace.c:1:
+/* fork_trace.c - An example of using trace in a kprobes module */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#110: FILE: Documentation/trace/src/fork_trace.c:22:
*format, ...)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#143: FILE: Documentation/trace/src/fork_trace.c:55:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: Documentation/trace/src/fork_trace.c:62:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: Documentation/trace/src/fork_trace.c:78:
+	kprobes_trace = trace_setup("trace_example", PROBE_POINT,
+				     1024, 8, flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: Documentation/trace/src/fork_trace.c:91:
+		printk(KERN_ERR "fork_trace: register_kprobe failed\n");

WARNING:TYPO_SPELLING: 'channnel' may be misspelled - perhaps 'channel'?
#319: FILE: Documentation/trace/trace.txt:118:
+					   the channnel.
 					       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#375: FILE: include/linux/trace.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#394: FILE: include/linux/trace.h:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#395: FILE: include/linux/trace.h:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#456: FILE: include/linux/trace.h:81:
+}
+struct trace_info *trace_setup(const char *root, const char *name,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#468: FILE: include/linux/trace.h:93:
+}
+static inline int trace_start(struct trace_info *trace) { return -

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#468: FILE: include/linux/trace.h:93:
+static inline int trace_start(struct trace_info *trace) { return -

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#470: FILE: include/linux/trace.h:94:
+static inline int trace_stop(struct trace_info *trace) { return -

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#514: FILE: lib/trace.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#533: FILE: lib/trace.c:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#534: FILE: lib/trace.c:20:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#549: FILE: lib/trace.c:34:
+static int state_open(struct inode *inode, struct file *filp)
                                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#555: FILE: lib/trace.c:40:
+static ssize_t state_read(struct file *filp, char __user *buffer,
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#568: FILE: lib/trace.c:53:
+static ssize_t state_write(struct file *filp, const char __user
                                         ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#587: FILE: lib/trace.c:71:
+	if (strncmp(buf, "start", strlen("start")) == 0) {
[...]
+	} else if (strncmp(buf, "stop", strlen("stop")) == 0)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#599: FILE: lib/trace.c:83:
+static struct file_operations state_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*r)...) over kzalloc(sizeof(struct trace_root)...)
#643: FILE: lib/trace.c:127:
+	r = kzalloc(sizeof(struct trace_root), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#647: FILE: lib/trace.c:131:
+	strlcpy(r->name, root, sizeof(r->name));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root"
#664: FILE: lib/trace.c:147:
+	if (root == NULL || name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#664: FILE: lib/trace.c:147:
+	if (root == NULL || name == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#686: FILE: lib/trace.c:169:
+static int dropped_open(struct inode *inode, struct file *filp)
                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#693: FILE: lib/trace.c:176:
+static ssize_t dropped_read(struct file *filp, char __user *buffer,
                                          ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#704: FILE: lib/trace.c:187:
+static struct file_operations dropped_fops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#710: FILE: lib/trace.c:193:
+static int reset_consumed_open(struct inode *inode, struct file *filp)
                                                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#717: FILE: lib/trace.c:200:
+static ssize_t reset_consumed_write(struct file *filp,
                                                  ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#743: FILE: lib/trace.c:226:
+static struct file_operations reset_consumed_fops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#749: FILE: lib/trace.c:232:
+static int sub_size_open(struct inode *inode, struct file *filp)
                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#756: FILE: lib/trace.c:239:
+static ssize_t sub_size_read(struct file *filp, char __user *buffer,
                                           ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#767: FILE: lib/trace.c:250:
+static struct file_operations sub_size_fops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#773: FILE: lib/trace.c:256:
+static int nr_sub_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#779: FILE: lib/trace.c:262:
+static ssize_t nr_sub_read(struct file *filp, char __user *buffer,
                                         ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#790: FILE: lib/trace.c:273:
+static struct file_operations nr_sub_fops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#850: FILE: lib/trace.c:332:
+};
+static struct rchan_callbacks relay_callbacks_global = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#889: FILE: lib/trace.c:371:
+	trace->state_file = debugfs_create_file("state", 0444, trace->dir,
+						 trace, &state_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: lib/trace.c:391:
+		trace->reset_consumed_file = debugfs_create_file("rewind", 0444,
+							trace->dir, trace,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: lib/trace.c:429:
+static int trace_setup_channel(struct trace_info *trace, u32 buf_size,
+				u32 buf_nr, u32 flags)

WARNING:REPEATED_WORD: Possible repeated word: 'trace'
#970: FILE: lib/trace.c:452:
+ *	trace_setup - create a new trace trace handle

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#1055: FILE: lib/trace.c:537:
+		synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379329.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 25 warnings, 13 checks, 990 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379329.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
