ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)'
#25: 
Signed-off-by: Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#33: FILE: kernel/module.c:2506:
+#if defined(CONFIG_MDB) || defined(CONFIG_MDB_MODULE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#39: FILE: kernel/module.c:2512:
+        if (!print)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#39: FILE: kernel/module.c:2512:
+        if (!print)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#39: FILE: kernel/module.c:2512:
+        if (!print)
+           return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#40: FILE: kernel/module.c:2513:
+           return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: kernel/module.c:2513:
+           return 0;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#42: FILE: kernel/module.c:2515:
+	list_for_each_entry(mod, &modules, list)
+        {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#42: FILE: kernel/module.c:2515:
+	list_for_each_entry(mod, &modules, list)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#43: FILE: kernel/module.c:2516:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: kernel/module.c:2516:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#44: FILE: kernel/module.c:2517:
+           if (str && *str && !strstr(mod->name, str))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: kernel/module.c:2517:
+           if (str && *str && !strstr(mod->name, str))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#44: FILE: kernel/module.c:2517:
+           if (str && *str && !strstr(mod->name, str))
+              continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: kernel/module.c:2518:
+              continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: kernel/module.c:2518:
+              continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: kernel/module.c:2523:
+                 module_refcount(mod));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#50: FILE: kernel/module.c:2523:
+	   print(" %lu %02u ", mod->init_size + mod->core_size,
+                 module_refcount(mod));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: kernel/module.c:2523:
+                 module_refcount(mod));$

WARNING:TABSTOP: Statements should start on a tabstop
#53: FILE: kernel/module.c:2526:
+	   if (mod->init != NULL && mod->exit == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#53: FILE: kernel/module.c:2526:
+	   if (mod->init != NULL && mod->exit == NULL)
+	      print("[permanent],");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mod->init"
#53: FILE: kernel/module.c:2526:
+	   if (mod->init != NULL && mod->exit == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mod->exit"
#53: FILE: kernel/module.c:2526:
+	   if (mod->init != NULL && mod->exit == NULL)

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#55: FILE: kernel/module.c:2528:
+	   print(" %s ", mod->state == MODULE_STATE_GOING ? "Unloading":
 	                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: kernel/module.c:2529:
+^I                mod->state == MODULE_STATE_COMING ? "Loading":$

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#56: FILE: kernel/module.c:2529:
+	                mod->state == MODULE_STATE_COMING ? "Loading":
 	                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: kernel/module.c:2530:
+^I^I        "Live");$

WARNING:TABSTOP: Statements should start on a tabstop
#58: FILE: kernel/module.c:2531:
+	   if (print("\n"))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#58: FILE: kernel/module.c:2531:
+	   if (print("\n"))
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: kernel/module.c:2532:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: kernel/module.c:2532:
+              return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: kernel/module.c:2534:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: kernel/module.c:2534:
+        return 0;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234006.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 16 warnings, 3 checks, 39 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234006.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
