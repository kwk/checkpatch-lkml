WARNING:TYPO_SPELLING: 'identifer' may be misspelled - perhaps 'identifier'?
#53: 
 > btw.  It is nice to add some subsystem identifer as a prefix.  There's
                                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#64: 
--- a/ipc/msg.c

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: ipc/msg.c:94:
+       if (!ns->msg_ctlmni_activated)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#78: FILE: ipc/msg.c:94:
+       if (!ns->msg_ctlmni_activated)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: ipc/msg.c:95:
+               return;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: ipc/msg.c:95:
+               return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: ipc/msg.c:98:
+               / ns->msg_ctlmnb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: ipc/msg.c:98:
+               / ns->msg_ctlmnb;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: ipc/msg.c:114:
 }
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: ipc/msg.c:119:
+       if (!ns->msg_ctlmnb_activated)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#96: FILE: ipc/msg.c:119:
+       if (!ns->msg_ctlmnb_activated)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: ipc/msg.c:120:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: ipc/msg.c:120:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: ipc/msg.c:121:
+       ns->msg_ctlmnb =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: ipc/msg.c:122:
+               min(MSGMNB * num_online_cpus(), MSGMNB * MSG_CPU_SCALE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: ipc/msg.c:122:
+               min(MSGMNB * num_online_cpus(), MSGMNB * MSG_CPU_SCALE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: ipc/msg.c:128:
+       ns->msg_ctlmnb_activated = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: ipc/msg.c:129:
+       ns->msg_ctlmni_activated = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: ipc/msg.c:130:
+       msg_recompute_msgmnb(ns);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: ipc/msg.c:150:
+       printk(KERN_INFO "msgmni has been set to %d, msgmnb to %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#118: FILE: ipc/msg.c:150:
+       printk(KERN_INFO "msgmni has been set to %d, msgmnb to %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: ipc/msg.c:151:
+              init_ipc_ns.msg_ctlmni, init_ipc_ns.msg_ctlmnb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: ipc/msg.c:151:
+              init_ipc_ns.msg_ctlmni, init_ipc_ns.msg_ctlmnb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: ipc/ipc_sysctl.c:37:
+       int tunable = table->ctl_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: ipc/ipc_sysctl.c:39:
+       switch (tunable) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: ipc/ipc_sysctl.c:40:
+       case KERN_MSGMNB:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: ipc/ipc_sysctl.c:41:
+               current->nsproxy->ipc_ns->msg_ctlmnb_activated = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: ipc/ipc_sysctl.c:41:
+               current->nsproxy->ipc_ns->msg_ctlmnb_activated = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: ipc/ipc_sysctl.c:42:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: ipc/ipc_sysctl.c:42:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: ipc/ipc_sysctl.c:43:
+       case KERN_MSGMNI:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: ipc/ipc_sysctl.c:44:
+               current->nsproxy->ipc_ns->msg_ctlmni_activated = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: ipc/ipc_sysctl.c:44:
+               current->nsproxy->ipc_ns->msg_ctlmni_activated = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: ipc/ipc_sysctl.c:45:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: ipc/ipc_sysctl.c:45:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: ipc/ipc_sysctl.c:47:
+               printk(KERN_ERR "ipc: unexpected value %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: ipc/ipc_sysctl.c:47:
+               printk(KERN_ERR "ipc: unexpected value %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#172: FILE: ipc/ipc_sysctl.c:47:
+               printk(KERN_ERR "ipc: unexpected value %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: ipc/ipc_sysctl.c:48:
+                      table->procname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: ipc/ipc_sysctl.c:48:
+                      table->procname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: ipc/ipc_sysctl.c:49:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: ipc/ipc_sysctl.c:49:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: ipc/ipc_sysctl.c:76:
+       if (write && !rc && lenp_bef == *lenp) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#185: FILE: ipc/ipc_sysctl.c:76:
+       if (write && !rc && lenp_bef == *lenp) {
+               BUG_ON(table == NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: ipc/ipc_sysctl.c:77:
+               BUG_ON(table == NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: ipc/ipc_sysctl.c:77:
+               BUG_ON(table == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#186: FILE: ipc/ipc_sysctl.c:77:
+               BUG_ON(table == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!table"
#186: FILE: ipc/ipc_sysctl.c:77:
+               BUG_ON(table == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: ipc/ipc_sysctl.c:78:
+               tunable_set_callback(*((int *)(ipc_table.data)), table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: ipc/ipc_sysctl.c:78:
+               tunable_set_callback(*((int *)(ipc_table.data)), table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: ipc/ipc_sysctl.c:79:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: ipc/ipc_sysctl.c:154:
+               BUG_ON(table == NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: ipc/ipc_sysctl.c:154:
+               BUG_ON(table == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: ipc/ipc_sysctl.c:154:
+               BUG_ON(table == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!table"
#198: FILE: ipc/ipc_sysctl.c:154:
+               BUG_ON(table == NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: ipc/ipc_sysctl.c:155:
+               tunable_set_callback(*data, table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: ipc/ipc_sysctl.c:155:
+               tunable_set_callback(*data, table);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: ipc/ipc_sysctl.c:217:
+               .proc_handler   = proc_ipc_callback_dointvec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: ipc/ipc_sysctl.c:217:
+               .proc_handler   = proc_ipc_callback_dointvec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: ipc/ipc_sysctl.c:218:
+               .strategy       = sysctl_ipc_registered_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: ipc/ipc_sysctl.c:218:
+               .strategy       = sysctl_ipc_registered_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: ipc/ipc_sysctl.c:219:
+       },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: ipc/ipc_sysctl.c:220:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: ipc/ipc_sysctl.c:221:
+               .ctl_name       = KERN_AUTOMATIC_MSGMNB,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: ipc/ipc_sysctl.c:221:
+               .ctl_name       = KERN_AUTOMATIC_MSGMNB,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: ipc/ipc_sysctl.c:222:
+               .procname       = "automatic_msgmnb",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: ipc/ipc_sysctl.c:222:
+               .procname       = "automatic_msgmnb",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: ipc/ipc_sysctl.c:223:
+               .data           = &init_ipc_ns.msg_ctlmnb_activated,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: ipc/ipc_sysctl.c:223:
+               .data           = &init_ipc_ns.msg_ctlmnb_activated,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: ipc/ipc_sysctl.c:224:
+               .maxlen         = sizeof (init_ipc_ns.msg_ctlmnb_activated),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: ipc/ipc_sysctl.c:224:
+               .maxlen         = sizeof (init_ipc_ns.msg_ctlmnb_activated),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: ipc/ipc_sysctl.c:224:
+               .maxlen         = sizeof (init_ipc_ns.msg_ctlmnb_activated),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: ipc/ipc_sysctl.c:225:
+               .mode           = 0644,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: ipc/ipc_sysctl.c:225:
+               .mode           = 0644,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: include/linux/ipc_namespace.h:37:
+       int             msg_ctlmnb_activated;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: include/linux/ipc_namespace.h:39:
+       int             msg_ctlmni_activated;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: ipc/util.c:104:
+       ipcns_notify(IPCNS_CPUCHANGED);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: ipc/util.c:110:
+                                   unsigned long action, void *hcpu)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: ipc/util.c:110:
+static int __cpuinit ipc_cpu_callback(struct notifier_block *nfb,
+                                   unsigned long action, void *hcpu)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: ipc/util.c:110:
+                                   unsigned long action, void *hcpu)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: ipc/util.c:112:
+       switch (action) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: ipc/util.c:113:
+       case CPU_ONLINE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: ipc/util.c:114:
+       case CPU_ONLINE_FROZEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: ipc/util.c:115:
+       case CPU_DEAD:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: ipc/util.c:116:
+       case CPU_DEAD_FROZEN:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: ipc/util.c:117:
+               schedule_work(&ipc_cpu_wq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: ipc/util.c:117:
+               schedule_work(&ipc_cpu_wq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: ipc/util.c:118:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: ipc/util.c:118:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: ipc/util.c:120:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: ipc/util.c:120:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: ipc/util.c:121:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: ipc/util.c:122:
+       return NOTIFY_OK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: ipc/util.c:142:
+       hotcpu_notifier(ipc_cpu_callback, IPC_CALLBACK_PRI);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: ipc/ipcns_notifier.c:29:
+       ns = container_of(self, struct ipc_namespace, ipcns_nb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: ipc/ipcns_notifier.c:31:
+       case IPCNS_CPUCHANGED:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: ipc/ipcns_notifier.c:32:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: ipc/ipcns_notifier.c:33:
+                * Fall through.$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#315: FILE: ipc/ipcns_notifier.c:33:
+                * Fall through.

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: ipc/ipcns_notifier.c:34:
+                * We do not scale msgmnb with IPC namespace$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: ipc/ipcns_notifier.c:35:
+                * add/remove for simplicity (adjustment of the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: ipc/ipcns_notifier.c:36:
+                * message pool is done indirectly via msgmni).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: ipc/ipcns_notifier.c:37:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: ipc/ipcns_notifier.c:38:
+               msg_recompute_msgmnb(ns);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: ipc/ipcns_notifier.c:38:
+               msg_recompute_msgmnb(ns);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: ipc/util.h:125:
+extern void msg_recompute_msgmnb(struct ipc_namespace *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipc_namespace *' should also have an identifier name
#356: FILE: ipc/util.h:125:
+extern void msg_recompute_msgmnb(struct ipc_namespace *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: include/linux/sysctl.h:166:
+       KERN_AUTOMATIC_MSGMNB=77, /* int: automatic msgmnb computation */$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#368: FILE: include/linux/sysctl.h:166:
+       KERN_AUTOMATIC_MSGMNB=77, /* int: automatic msgmnb computation */
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: kernel/sysctl_check.c:107:
+       { KERN_AUTOMATIC_MSGMNB,        "automatic_msgmnb" },$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000259626.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 36 errors, 69 warnings, 5 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000259626.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
