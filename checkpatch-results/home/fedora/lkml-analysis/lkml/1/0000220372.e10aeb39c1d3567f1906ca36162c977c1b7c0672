WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
the non-exclusive API, but I'll wait with that until this one gets more backed

WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed-of-by:' - perhaps 'Signed-off-by:'?
#57: 
Signed-of-by: Arjan van de Ven <arjan@linux.intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/pci/pci.c:1336:
+static int __pci_request_region(struct pci_dev *pdev, int bar, const char *res_name, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/pci/pci.c:1337:
+static int __pci_request_region(struct pci_dev *pdev, int bar, const char *res_name, 
+									int relaxed)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/pci/pci.c:1351:
+		if (!relaxed && !request_mem_region(pci_resource_start(pdev, bar),
 				        pci_resource_len(pdev, bar), res_name))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#146: FILE: drivers/pci/pci.c:1353:
+		if (relaxed && !request_mem_region_relaxed(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: drivers/pci/pci.c:1409:
+ * ^Isysfs.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#197: FILE: drivers/pci/pci.c:1415:
+}
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: include/linux/ioport.h:132:
+#define request_region(start,n,name)	__request_region(&ioport_resource, (start), (n), (name), 0)
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: include/linux/ioport.h:132:
+#define request_region(start,n,name)	__request_region(&ioport_resource, (start), (n), (name), 0)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: include/linux/ioport.h:133:
+#define request_mem_region(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 0)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: include/linux/ioport.h:133:
+#define request_mem_region(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 0)
                                   ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#221: FILE: include/linux/ioport.h:134:
+#define request_mem_region_relaxed(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 1)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: include/linux/ioport.h:134:
+#define request_mem_region_relaxed(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 1)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: include/linux/ioport.h:134:
+#define request_mem_region_relaxed(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 1)
                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/linux/ioport.h:175:
+extern int iomem_is_reserved(u64 addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#247: FILE: include/linux/pci.h:673:
+int __must_check pci_request_region_relaxed(struct pci_dev *, int, const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#247: FILE: include/linux/pci.h:673:
+int __must_check pci_request_region_relaxed(struct pci_dev *, int, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#247: FILE: include/linux/pci.h:673:
+int __must_check pci_request_region_relaxed(struct pci_dev *, int, const char *);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#299: FILE: kernel/resource.c:873:
+static int strict_iomem_checks = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#311: FILE: kernel/resource.c:885:
+	int size= PAGE_SIZE;
 	        ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#347: FILE: kernel/resource.c:921:
+__setup("iomem=", strict_iomem);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220372.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 7 warnings, 6 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220372.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
