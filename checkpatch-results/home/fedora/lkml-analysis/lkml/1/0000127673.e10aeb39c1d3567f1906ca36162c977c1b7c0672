WARNING:SPLIT_STRING: quoted string split across lines
#236: FILE: drivers/char/kdb_keyboard.c:158:
+			kdb_printf("NOTICE: USB HD driver BUSY. "
+				   "USB keyboard has been disabled.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#319: FILE: drivers/hid/usbhid/hid-core.c:51:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceProtocol>
#344: FILE: drivers/hid/usbhid/hid-core.c:1191:
+	if (intf->cur_altsetting->desc.bInterfaceProtocol ==

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/hid/usbhid/hid-core.c:1197:
+		ret = kdb_usb_keyboard_attach(usbhid->urbin, usbhid->inbuf,
+		    usb_hcd_get_kdb_poll_func(interface_to_usbdev(intf)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#353: FILE: drivers/hid/usbhid/hid-core.c:1200:
+			printk(KERN_ERR ": FAILED to register keyboard (%s) "

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: drivers/hid/usbhid/hid-core.c:1201:
+			printk(KERN_ERR ": FAILED to register keyboard (%s) "
+				"with KDB\n", hid->phys);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/serial/kgdboc.c:59:
+		if (kdb_poll_funcs[i] == kdb_get_kbd_char ||
+			kdb_poll_funcs[i] == kdb_get_usb_char) {

CHECK:SPACING: No space is necessary after a cast
#494: FILE: drivers/usb/host/ehci-hcd.c:1045:
+	ehci = (struct ehci_hcd *) hcd_to_ehci(bus_to_hcd(urb->dev->bus));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#511: FILE: drivers/usb/host/ehci-hcd.c:1062:
+	 * HC will not be useable from KDB at this time.
 	                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#513: FILE: drivers/usb/host/ehci-hcd.c:1064:
+	if (spin_is_locked(&ehci->lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#547: FILE: drivers/usb/host/ehci-pci.c:415:
+^I.kdb_poll_char = ^Iehci_kdb_poll_char,$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#574: FILE: drivers/usb/host/ehci-q.c:516:
+	unsigned		count = 0;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#622: FILE: drivers/usb/host/ehci-q.c:564:
+				if (!spin_is_locked(&ehci->lock))

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#631: FILE: drivers/usb/host/ehci-q.c:573:
+				if (spin_is_locked(&ehci->lock))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#651: FILE: drivers/usb/host/ehci-q.c:593:
+		if ((token & QTD_STS_ACTIVE) == 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#661: FILE: drivers/usb/host/ehci-q.c:603:
+			} else if (IS_SHORT_READ(token)
+				   && !(qtd->hw_alt_next

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#688: FILE: drivers/usb/host/ehci-q.c:630:
+			if (unlikely(do_status != 0)
+			    && QTD_PID(token) == 0 /* OUT */) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#695: FILE: drivers/usb/host/ehci-q.c:637:
+			if (state == QH_STATE_IDLE
+			    && cpu_to_hc32(ehci, qtd->qtd_dma)

WARNING:MEMORY_BARRIER: memory barrier without comment
#706: FILE: drivers/usb/host/ehci-q.c:648:
+				wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/usb/host/ehci-q.c:664:
+			last = list_entry(qtd->qtd_list.prev,
+					   struct ehci_qtd, qtd_list);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "last"
#730: FILE: drivers/usb/host/ehci-q.c:672:
+	if (likely(last != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#737: FILE: drivers/usb/host/ehci-q.c:679:
+		if (!spin_is_locked(&ehci->lock))

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#746: FILE: drivers/usb/host/ehci-q.c:688:
+		if (spin_is_locked(&ehci->lock))

CHECK:BRACES: braces {} should be used on all arms of this statement
#769: FILE: drivers/usb/host/ehci-q.c:711:
+			if ((cpu_to_hc32(ehci, QH_SMASK)
[...]
+			} else
[...]

CHECK:SPACING: No space is necessary after a cast
#772: FILE: drivers/usb/host/ehci-q.c:714:
+				(void) qh_schedule(ehci, qh);

CHECK:BRACES: Unbalanced braces around else statement
#773: FILE: drivers/usb/host/ehci-q.c:715:
+			} else

CHECK:SPACING: No space is necessary after a cast
#807: FILE: drivers/usb/host/ohci-hcd.c:997:
+	ohci = (struct ohci_hcd *) hcd_to_ohci(bus_to_hcd(urb->dev->bus));

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#824: FILE: drivers/usb/host/ohci-hcd.c:1014:
+	 * HC will not be useable from KDB at this time.
 	                  ^^^^^^^

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#826: FILE: drivers/usb/host/ohci-hcd.c:1016:
+	if (spin_is_locked(&ohci->lock))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#833: FILE: drivers/usb/host/ohci-hcd.c:1023:
+	if (urb->status != -EINPROGRESS) {
+

CHECK:SPACING: No space is necessary after a cast
#843: FILE: drivers/usb/host/ohci-hcd.c:1033:
+		(void) ohci_readl(ohci, &ohci->regs->control);

CHECK:SPACING: No space is necessary after a cast
#850: FILE: drivers/usb/host/ohci-hcd.c:1040:
+		(void) ohci_readl(ohci, &ohci->regs->control);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#905: FILE: drivers/usb/host/ohci-q.c:1131:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <hwINFO>
#942: FILE: drivers/usb/host/ohci-q.c:1168:
+		} else if ((ed->hwINFO & cpu_to_hc32(ohci,

CHECK:SPACING: No space is necessary after a cast
#997: FILE: drivers/usb/host/uhci-hcd.c:909:
+	uhci = (struct uhci_hcd *) hcd_to_uhci(bus_to_hcd(urb->dev->bus));

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1006: FILE: drivers/usb/host/uhci-hcd.c:918:
+	if (spin_is_locked(&uhci->lock))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1040: FILE: drivers/usb/host/uhci-q.c:1767:
+int uhci_scan_qh_kdb(struct uhci_hcd *uhci, struct uhci_qh *qh,
+					 struct urb *kdburb)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1064: FILE: drivers/usb/host/uhci-q.c:1791:
+		 * the QH is stopped or has finished unlinking. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1082: FILE: drivers/usb/host/uhci-q.c:1809:
+	 * queuu XXX */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1095: FILE: include/linux/kdb.h:140:
+extern void *usb_hcd_get_kdb_poll_func(struct usb_device *udev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1107: FILE: include/linux/kdbprivate.h:336:
+extern int kdb_get_usb_char(void);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1119: FILE: lib/Kconfig.kgdb:90:
+config KDB_USB
+	bool "KGDB_KDB: Allow usb input device devices"
+	depends on VT && KGDB_KDB && KDB_KEYBOARD
+	default y
+	help
+	  KDB can use a USB keyboard for an input device
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127673.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 24 checks, 944 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127673.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
