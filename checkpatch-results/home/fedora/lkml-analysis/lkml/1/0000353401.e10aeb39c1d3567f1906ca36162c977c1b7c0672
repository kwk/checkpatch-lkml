WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: include/asm-x86/bitops.h:1:
+#ifndef _ASM_X86_BITOPS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#80: FILE: include/asm-x86/bitops.h:25:
+/* Technically wrong, but this avoids compilation errors on some gcc
+   versions. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: include/asm-x86/bitops.h:25:
+   versions. */

CHECK:SPACING: No space is necessary after a cast
#81: FILE: include/asm-x86/bitops.h:26:
+#define ADDR "=m" (*(volatile long *) addr)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#81: FILE: include/asm-x86/bitops.h:26:
+#define ADDR "=m" (*(volatile long *) addr)

CHECK:SPACING: No space is necessary after a cast
#83: FILE: include/asm-x86/bitops.h:28:
+#define ADDR "+m" (*(volatile long *) addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#83: FILE: include/asm-x86/bitops.h:28:
+#define ADDR "+m" (*(volatile long *) addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#101: FILE: include/asm-x86/bitops.h:46:
+static inline void set_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#117: FILE: include/asm-x86/bitops.h:62:
+static inline void __set_bit(int nr, volatile unsigned long *addr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: include/asm-x86/bitops.h:69:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#135: FILE: include/asm-x86/bitops.h:80:
+static inline void clear_bit(int nr, volatile unsigned long *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: include/asm-x86/bitops.h:95:
+static inline void clear_bit_unlock(unsigned nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: include/asm-x86/bitops.h:95:
+static inline void clear_bit_unlock(unsigned nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#156: FILE: include/asm-x86/bitops.h:101:
+static inline void __clear_bit(int nr, volatile unsigned long *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#173: FILE: include/asm-x86/bitops.h:118:
+static inline void __clear_bit_unlock(unsigned nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#173: FILE: include/asm-x86/bitops.h:118:
+static inline void __clear_bit_unlock(unsigned nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#191: FILE: include/asm-x86/bitops.h:136:
+static inline void __change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#205: FILE: include/asm-x86/bitops.h:150:
+static inline void change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#219: FILE: include/asm-x86/bitops.h:164:
+static inline int test_and_set_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#238: FILE: include/asm-x86/bitops.h:183:
+static inline int test_and_set_bit_lock(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#252: FILE: include/asm-x86/bitops.h:197:
+static inline int __test_and_set_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#271: FILE: include/asm-x86/bitops.h:216:
+static inline int test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#292: FILE: include/asm-x86/bitops.h:237:
+static inline int __test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#304: FILE: include/asm-x86/bitops.h:249:
+static inline int __test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#324: FILE: include/asm-x86/bitops.h:269:
+static inline int test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#336: FILE: include/asm-x86/bitops.h:281:
+static inline int constant_test_bit(int nr, const volatile unsigned long *addr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around addr[nr / BITS_PER_LONG]
#338: FILE: include/asm-x86/bitops.h:283:
+	return ((1UL << (nr % BITS_PER_LONG)) & (addr[nr / BITS_PER_LONG])) != 0;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#341: FILE: include/asm-x86/bitops.h:286:
+static inline int variable_test_bit(int nr, volatile const unsigned long *addr)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#353: FILE: include/asm-x86/bitops.h:298:
+#if 0 /* Fool kernel-doc since it doesn't do macros yet */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#359: FILE: include/asm-x86/bitops.h:304:
+static int test_bit(int nr, const volatile unsigned long *addr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: include/asm-x86/bitops.h:307:
+#define test_bit(nr,addr)			\
                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#362: FILE: include/asm-x86/bitops.h:307:
+#define test_bit(nr,addr)			\
+	(__builtin_constant_p(nr) ?		\
+	 constant_test_bit((nr),(addr)) :	\
+	 variable_test_bit((nr),(addr)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#362: FILE: include/asm-x86/bitops.h:307:
+#define test_bit(nr,addr)			\
+	(__builtin_constant_p(nr) ?		\
+	 constant_test_bit((nr),(addr)) :	\
+	 variable_test_bit((nr),(addr)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#364: FILE: include/asm-x86/bitops.h:309:
+	 constant_test_bit((nr),(addr)) :	\
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#365: FILE: include/asm-x86/bitops.h:310:
+	 variable_test_bit((nr),(addr)))
 	                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 26 warnings, 6 checks, 937 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
