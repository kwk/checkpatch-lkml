WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: arch/s390/include/asm/crw.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#85: FILE: arch/s390/include/asm/crw.h:28:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: arch/s390/include/asm/crw.h:32:
+extern int crw_register_handler(int rsc, crw_handler_t handler);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: arch/s390/include/asm/crw.h:33:
+extern void crw_unregister_handler(int rsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: arch/s390/include/asm/crw.h:34:
+extern void crw_handle_channel_report(void);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#105: FILE: arch/s390/include/asm/crw.h:48:
+#define CRW_ERC_IPARM	 0x04 /* installed parm initialized */
                      	                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#115: FILE: arch/s390/include/asm/crw.h:58:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'stcrw', this function's name, in a string
#116: FILE: arch/s390/include/asm/crw.h:59:
+		"	stcrw	0(%2)\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#121: FILE: arch/s390/include/asm/crw.h:64:
+		: "cc" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: arch/s390/include/asm/nmi.h:1:
+/*

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#150: FILE: arch/s390/include/asm/nmi.h:20:
+	__u32	 :  1; /* 03 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#153: FILE: arch/s390/include/asm/nmi.h:23:
+	__u32	 :  1; /* 06 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#159: FILE: arch/s390/include/asm/nmi.h:29:
+	__u32	 :  2; /* 12-13 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#161: FILE: arch/s390/include/asm/nmi.h:31:
+	__u32	 :  1; /* 15 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#171: FILE: arch/s390/include/asm/nmi.h:41:
+	__u32	 :  1; /* 25 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#176: FILE: arch/s390/include/asm/nmi.h:46:
+	__u32	 :  1; /* 30 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#181: FILE: arch/s390/include/asm/nmi.h:51:
+	__u32	 :  7; /* 35-41 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#185: FILE: arch/s390/include/asm/nmi.h:55:
+	__u32	 :  1; /* 45 */
 	     	 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#188: FILE: arch/s390/include/asm/nmi.h:58:
+	__u32	 : 16; /* 47-63 */
 	     	 ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: arch/s390/include/asm/nmi.h:63:
+extern void s390_handle_mcck(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: arch/s390/include/asm/nmi.h:64:
+extern void s390_do_machine_check(struct pt_regs *regs);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#215: FILE: arch/s390/kernel/nmi.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#230: FILE: arch/s390/kernel/nmi.c:16:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#233: FILE: arch/s390/kernel/nmi.c:19:
+#include <asm/nmi.h>

CHECK:SPACING: No space is necessary after a cast
#248: FILE: arch/s390/kernel/nmi.c:34:
+	disabled_wait((unsigned long) __builtin_return_address(0));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#249: FILE: arch/s390/kernel/nmi.c:35:
+	while (1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#288: FILE: arch/s390/kernel/nmi.c:74:
+		static int mchchk_wng_posted = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#300: FILE: arch/s390/kernel/nmi.c:86:
+		printk(KERN_EMERG "mcck: Terminating task because of machine "

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: arch/s390/kernel/nmi.c:87:
+		printk(KERN_EMERG "mcck: Terminating task because of machine "
+		       "malfunction (code 0x%016llx).\n", mcck.mcck_code);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#302: FILE: arch/s390/kernel/nmi.c:88:
+		printk(KERN_EMERG "mcck: task: %s, pid: %d.\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#338: FILE: arch/s390/kernel/nmi.c:124:
+	asm volatile(

CHECK:SPACING: No space is necessary after a cast
#351: FILE: arch/s390/kernel/nmi.c:137:
+		fpt_save_area = (void *) S390_lowcore.extended_save_area_addr;

CHECK:BRACES: braces {} should be used on all arms of this statement
#354: FILE: arch/s390/kernel/nmi.c:140:
+		if (!mci->fc) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#362: FILE: arch/s390/kernel/nmi.c:148:
+		} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#365: FILE: arch/s390/kernel/nmi.c:151:
+		asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#385: FILE: arch/s390/kernel/nmi.c:171:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#404: FILE: arch/s390/kernel/nmi.c:190:
+		asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#408: FILE: arch/s390/kernel/nmi.c:194:
+		asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#423: FILE: arch/s390/kernel/nmi.c:209:
+		asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#428: FILE: arch/s390/kernel/nmi.c:214:
+		asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#435: FILE: arch/s390/kernel/nmi.c:221:
+	asm volatile(

CHECK:SPACING: No space is necessary after a cast
#478: FILE: arch/s390/kernel/nmi.c:264:
+	mci = (struct mci *) &S390_lowcore.mcck_interruption_code;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#491: FILE: arch/s390/kernel/nmi.c:277:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<29);
 			              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#491: FILE: arch/s390/kernel/nmi.c:277:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<29);
 			                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#491: FILE: arch/s390/kernel/nmi.c:277:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<29);
 			                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#492: FILE: arch/s390/kernel/nmi.c:278:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#492: FILE: arch/s390/kernel/nmi.c:278:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#492: FILE: arch/s390/kernel/nmi.c:278:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#492: FILE: arch/s390/kernel/nmi.c:278:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#493: FILE: arch/s390/kernel/nmi.c:279:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#493: FILE: arch/s390/kernel/nmi.c:279:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#493: FILE: arch/s390/kernel/nmi.c:279:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#493: FILE: arch/s390/kernel/nmi.c:279:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#494: FILE: arch/s390/kernel/nmi.c:280:
+				  1ULL<<30 | 1ULL<<21 | 1ULL<<20 | 1ULL<<17 |
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#494: FILE: arch/s390/kernel/nmi.c:280:
+				  1ULL<<30 | 1ULL<<21 | 1ULL<<20 | 1ULL<<17 |
 				                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#494: FILE: arch/s390/kernel/nmi.c:280:
+				  1ULL<<30 | 1ULL<<21 | 1ULL<<20 | 1ULL<<17 |
 				                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#494: FILE: arch/s390/kernel/nmi.c:280:
+				  1ULL<<30 | 1ULL<<21 | 1ULL<<20 | 1ULL<<17 |
 				                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#495: FILE: arch/s390/kernel/nmi.c:281:
+				  1ULL<<16);
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#497: FILE: arch/s390/kernel/nmi.c:283:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<57 | 1ULL<<50 |
 			              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#497: FILE: arch/s390/kernel/nmi.c:283:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<57 | 1ULL<<50 |
 			                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#497: FILE: arch/s390/kernel/nmi.c:283:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<57 | 1ULL<<50 |
 			                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#497: FILE: arch/s390/kernel/nmi.c:283:
+			z_mcic = (1ULL<<63 | 1ULL<<59 | 1ULL<<57 | 1ULL<<50 |
 			                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#498: FILE: arch/s390/kernel/nmi.c:284:
+				  1ULL<<29);
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#499: FILE: arch/s390/kernel/nmi.c:285:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#499: FILE: arch/s390/kernel/nmi.c:285:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#499: FILE: arch/s390/kernel/nmi.c:285:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#499: FILE: arch/s390/kernel/nmi.c:285:
+			o_mcic = (1ULL<<43 | 1ULL<<42 | 1ULL<<41 | 1ULL<<40 |
 			                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#500: FILE: arch/s390/kernel/nmi.c:286:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#500: FILE: arch/s390/kernel/nmi.c:286:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#500: FILE: arch/s390/kernel/nmi.c:286:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#500: FILE: arch/s390/kernel/nmi.c:286:
+				  1ULL<<36 | 1ULL<<35 | 1ULL<<34 | 1ULL<<32 |
 				                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#501: FILE: arch/s390/kernel/nmi.c:287:
+				  1ULL<<30 | 1ULL<<20 | 1ULL<<17 | 1ULL<<16);
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#501: FILE: arch/s390/kernel/nmi.c:287:
+				  1ULL<<30 | 1ULL<<20 | 1ULL<<17 | 1ULL<<16);
 				                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#501: FILE: arch/s390/kernel/nmi.c:287:
+				  1ULL<<30 | 1ULL<<20 | 1ULL<<17 | 1ULL<<16);
 				                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#501: FILE: arch/s390/kernel/nmi.c:287:
+				  1ULL<<30 | 1ULL<<20 | 1ULL<<17 | 1ULL<<16);
 				                                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#508: FILE: arch/s390/kernel/nmi.c:294:
+				s390_handle_damage("processing backup machine "
+						   "check with damage.");

WARNING:SPLIT_STRING: quoted string split across lines
#528: FILE: arch/s390/kernel/nmi.c:314:
+			s390_handle_damage("received instruction processing "
+					   "damage machine check.");

CHECK:SPACING: No space is necessary after a cast
#538: FILE: arch/s390/kernel/nmi.c:324:
+			mcck->mcck_code = *(unsigned long long *) mci;

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: arch/s390/kernel/nmi.c:352:
+		s390_handle_damage("received storage error uncorrected "
+				   "machine check.");

WARNING:SPLIT_STRING: quoted string split across lines
#570: FILE: arch/s390/kernel/nmi.c:356:
+		s390_handle_damage("received storage key-error uncorrected "
+				   "machine check.");

WARNING:SPLIT_STRING: quoted string split across lines
#574: FILE: arch/s390/kernel/nmi.c:360:
+		s390_handle_damage("received storage degradation machine "
+				   "check.");

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#606: FILE: arch/s390/kernel/process.c:42:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#627: FILE: arch/s390/kvm/kvm-s390.c:26:
+#include <asm/nmi.h>

WARNING:INCLUDE_LINUX: Use #include <linux/nmi.h> instead of <asm/nmi.h>
#709: FILE: drivers/s390/cio/cio.c:33:
+#include <asm/nmi.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#727: FILE: drivers/s390/cio/crw.c:1:
+/*

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rsc < 0'
#754: FILE: drivers/s390/cio/crw.c:28:
+	if ((rsc < 0) || (rsc >= NR_RSCS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rsc >= NR_RSCS'
#754: FILE: drivers/s390/cio/crw.c:28:
+	if ((rsc < 0) || (rsc >= NR_RSCS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rsc < 0'
#767: FILE: drivers/s390/cio/crw.c:41:
+	if ((rsc < 0) || (rsc >= NR_RSCS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rsc >= NR_RSCS'
#767: FILE: drivers/s390/cio/crw.c:41:
+	if ((rsc < 0) || (rsc >= NR_RSCS))

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#770: FILE: drivers/s390/cio/crw.c:44:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#790: FILE: drivers/s390/cio/crw.c:64:
+			printk(KERN_WARNING"%s: Code does not support more "

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#790: FILE: drivers/s390/cio/crw.c:64:
+			printk(KERN_WARNING"%s: Code does not support more "

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:SPLIT_STRING: quoted string split across lines
#791: FILE: drivers/s390/cio/crw.c:65:
+			printk(KERN_WARNING"%s: Code does not support more "
+			       "than two chained crws; please report to "

WARNING:SPLIT_STRING: quoted string split across lines
#792: FILE: drivers/s390/cio/crw.c:66:
+			       "than two chained crws; please report to "
+			       "linux390@de.ibm.com!\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#794: FILE: drivers/s390/cio/crw.c:68:
+			printk(KERN_WARNING"%s: crw reports slct=%d, oflw=%d, "

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#794: FILE: drivers/s390/cio/crw.c:68:
+			printk(KERN_WARNING"%s: crw reports slct=%d, oflw=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#795: FILE: drivers/s390/cio/crw.c:69:
+			printk(KERN_WARNING"%s: crw reports slct=%d, oflw=%d, "
+			       "chn=%d, rsc=%X, anc=%d, erc=%X, rsid=%X\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#799: FILE: drivers/s390/cio/crw.c:73:
+			printk(KERN_WARNING"%s: This was crw number %x in the "

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#799: FILE: drivers/s390/cio/crw.c:73:
+			printk(KERN_WARNING"%s: This was crw number %x in the "

WARNING:SPLIT_STRING: quoted string split across lines
#800: FILE: drivers/s390/cio/crw.c:74:
+			printk(KERN_WARNING"%s: This was crw number %x in the "
+			       "chain\n", __func__, chain);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#809: FILE: drivers/s390/cio/crw.c:83:
+		printk(KERN_DEBUG "crw_info : CRW reports slct=%d, oflw=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#810: FILE: drivers/s390/cio/crw.c:84:
+		printk(KERN_DEBUG "crw_info : CRW reports slct=%d, oflw=%d, "
+		       "chn=%d, rsc=%X, anc=%d, erc=%X, rsid=%X\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162528.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 26 warnings, 64 checks, 803 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162528.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
