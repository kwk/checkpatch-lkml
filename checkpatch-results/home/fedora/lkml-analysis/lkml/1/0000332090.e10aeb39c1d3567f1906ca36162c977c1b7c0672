WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: libcap/cap_flag.c:24:
+    if (raised && good_cap_t(cap_d) && value >= 0 && value < _cap_names_num$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: libcap/cap_flag.c:48:
+    if (good_cap_t(cap_d) && no_values > 0 && no_values <= _cap_names_num$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set >= 0'
#70: FILE: libcap/cap_flag.c:48:
+    if (good_cap_t(cap_d) && no_values > 0 && no_values <= _cap_names_num
 	&& (set >= 0) && (set < NUMBER_OF_CAP_SETS)
 	&& (raise == CAP_SET || raise == CAP_CLEAR) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set < NUMBER_OF_CAP_SETS'
#70: FILE: libcap/cap_flag.c:48:
+    if (good_cap_t(cap_d) && no_values > 0 && no_values <= _cap_names_num
 	&& (set >= 0) && (set < NUMBER_OF_CAP_SETS)
 	&& (raise == CAP_SET || raise == CAP_CLEAR) ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#74: FILE: libcap/cap_flag.c:52:
 	for (i=0; i<no_values; ++i) {
+	    if (array_values[i] < 0 || array_values[i] >= _cap_names_num) {

WARNING:TABSTOP: Statements should start on a tabstop
#76: FILE: libcap/cap_flag.c:53:
+	    if (array_values[i] < 0 || array_values[i] >= _cap_names_num) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#112: FILE: libcap/cap_text.c:80:
+	if (n >= _cap_names_num)
 	    return -1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#120: FILE: libcap/cap_text.c:87:
+	for (n = _cap_names_num; n--; )
 	    if (_cap_names[n] && (s = namcmp(str.constp, _cap_names[n]))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: libcap/cap_text.c:279:
+    for (n = _cap_names_num; n--; )$

WARNING:TABSTOP: Statements should start on a tabstop
#138: FILE: libcap/cap_text.c:295:
+	    for (n = 0; n != _cap_names_num; n++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: libcap/cap_text.c:337:
+    DIR *dirp;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#152: FILE: libcap/cap_text.c:338:
+    FILE *filp;
           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: libcap/cap_text.c:338:
+    FILE *filp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: libcap/cap_text.c:339:
+    struct dirent *dent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: libcap/cap_text.c:340:
+    char pathname[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: libcap/cap_text.c:341:
+    char **local_cap_names;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: libcap/cap_text.c:342:
+    unsigned int i, code, local_cap_names_num;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#159: FILE: libcap/cap_text.c:345:
+    filp = fopen(SYSFS_CAP_BASE "/index", "rb");
     ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: libcap/cap_text.c:345:
+    filp = fopen(SYSFS_CAP_BASE "/index", "rb");$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#160: FILE: libcap/cap_text.c:346:
+    if (!filp)
          ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: libcap/cap_text.c:346:
+    if (!filp)$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#162: FILE: libcap/cap_text.c:348:
+    if (fscanf(filp, "%u", &local_cap_names_num) != 1) {
                ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: libcap/cap_text.c:348:
+    if (fscanf(filp, "%u", &local_cap_names_num) != 1) {$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#163: FILE: libcap/cap_text.c:349:
+	fclose(filp);
 	       ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: libcap/cap_text.c:351:
+    }$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#166: FILE: libcap/cap_text.c:352:
+    fclose(filp);
            ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: libcap/cap_text.c:352:
+    fclose(filp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: libcap/cap_text.c:354:
+    local_cap_names_num++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: libcap/cap_text.c:355:
+    local_cap_names = malloc(sizeof(char *) * local_cap_names_num);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: libcap/cap_text.c:356:
+    if (!local_cap_names)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: libcap/cap_text.c:358:
+    memset(local_cap_names, 0, sizeof(char *) * local_cap_names_num);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: libcap/cap_text.c:361:
+    dirp = opendir(SYSFS_CAP_BASE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: libcap/cap_text.c:362:
+    if (!dirp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: libcap/cap_text.c:365:
+    while (!!(dent = readdir(dirp))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#180: FILE: libcap/cap_text.c:366:
+	if (!!strncmp("cap_", dent->d_name, 4))
+	    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#181: FILE: libcap/cap_text.c:367:
+	    continue;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#184: FILE: libcap/cap_text.c:370:
+	filp = fopen(pathname, "rb");
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#185: FILE: libcap/cap_text.c:371:
+	if (!filp)
 	     ^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#185: FILE: libcap/cap_text.c:371:
+	if (!filp)
+	    goto error2;

WARNING:TABSTOP: Statements should start on a tabstop
#186: FILE: libcap/cap_text.c:372:
+	    goto error2;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#187: FILE: libcap/cap_text.c:373:
+	if (fscanf(filp, "%u", &code) != 1 || code >= local_cap_names_num) {
 	           ^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#187: FILE: libcap/cap_text.c:373:
+	if (fscanf(filp, "%u", &code) != 1 || code >= local_cap_names_num) {
+	    fclose(filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#188: FILE: libcap/cap_text.c:374:
+	    fclose(filp);
 	           ^^^^

WARNING:TABSTOP: Statements should start on a tabstop
#189: FILE: libcap/cap_text.c:375:
+	    goto error2;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#191: FILE: libcap/cap_text.c:377:
+	fclose(filp);
 	       ^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#194: FILE: libcap/cap_text.c:380:
+	if (!local_cap_names[code])
+	    goto error2;

WARNING:TABSTOP: Statements should start on a tabstop
#195: FILE: libcap/cap_text.c:381:
+	    goto error2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: libcap/cap_text.c:382:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: libcap/cap_text.c:383:
+    _cap_names = local_cap_names;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: libcap/cap_text.c:384:
+    _cap_names_num = local_cap_names_num;$

WARNING:INDENTED_LABEL: labels should not be indented
#200: FILE: libcap/cap_text.c:386:
+  error2:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: libcap/cap_text.c:387:
+    for (i=0; i < local_cap_names_num; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#201: FILE: libcap/cap_text.c:387:
+    for (i=0; i < local_cap_names_num; i++)
           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: libcap/cap_text.c:389:
+    closedir(dirp);$

WARNING:INDENTED_LABEL: labels should not be indented
#204: FILE: libcap/cap_text.c:390:
+  error1:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: libcap/cap_text.c:391:
+    free(local_cap_names);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: libcap/cap_text.c:393:
+    return;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332090.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 54 warnings, 2 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332090.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
