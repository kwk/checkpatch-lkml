WARNING:TYPO_SPELLING: 'implemtation' may be misspelled - perhaps 'implementation'?
#32: 
Christophs's mm_counter+percpu implemtation has scalability at updates but
                               ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
read-side had some problems. Inspired by that, I tried to write percpu-cache

WARNING:TYPO_SPELLING: 'progam' may be misspelled - perhaps 'program'?
#58: 
Tiny test progam on x86-64/4core/2socket machine shows (small) improvements.
          ^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#136: FILE: include/linux/mm_types.h:201:
+typedef atomic_long_t mm_counter_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#138: FILE: include/linux/mm_types.h:203:
+typedef unsigned long mm_counter_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: mm/memory.c:124:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#240: FILE: mm/memory.c:131:
+};
+static DEFINE_PER_CPU(struct pcp_mm_cache, curr_mmc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: mm/memory.c:144:
+	long ret = atomic_long_read(&mm->counters[member]);
+	if (ret < 0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: include/linux/mm.h:867:
+extern void set_mm_counter(struct mm_struct *mm, int member, long value);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#563: FILE: include/linux/mm.h:868:
+extern unsigned long get_mm_counter(struct mm_struct *mm, int member);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#564: FILE: include/linux/mm.h:869:
+extern void add_mm_counter(struct mm_struct *mm, int member, long value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/linux/mm.h:870:
+extern void sync_tsk_mm_counters(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#566: FILE: include/linux/mm.h:871:
+extern void init_mm_counters(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#569: FILE: include/linux/mm.h:874:
+extern void prepare_mm_switch(struct task_struct *prev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: include/linux/mm.h:875:
+extern void prepare_mm_switch(struct task_struct *prev,
+				 struct task_struct *next);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mm' - possible side-effects?
#581: FILE: include/linux/mm.h:886:
+#define get_mm_rss(mm)			\
+	(get_mm_counter(mm, MM_FILEPAGES) +\
+	 get_mm_counter(mm, MM_ANONPAGES))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mm' - possible side-effects?
#585: FILE: include/linux/mm.h:890:
+#define update_hiwater_rss(mm)	do {			\
+	unsigned long _rss = get_mm_rss(mm);		\
+	if ((mm)->hiwater_rss < _rss)			\
+		(mm)->hiwater_rss = _rss;		\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mm' - possible side-effects?
#591: FILE: include/linux/mm.h:896:
+#define update_hiwater_vm(mm)	do {			\
+	if ((mm)->hiwater_vm < (mm)->total_vm)		\
+		(mm)->hiwater_vm = (mm)->total_vm;	\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#615: FILE: include/linux/mm.h:920:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040096.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 13 checks, 483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040096.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
