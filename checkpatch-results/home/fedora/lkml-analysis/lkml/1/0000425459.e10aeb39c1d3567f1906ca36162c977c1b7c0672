WARNING:REPEATED_WORD: Possible repeated word: 'cpuset'
#223: FILE: Documentation/cpusets.txt:496:
+# mount -t container -o cpuset cpuset /dev/cpuset

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: include/linux/cpuset.h:77:
+extern int current_cpuset_is_being_rebound(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#369: FILE: init/Kconfig:348:
+config PROC_PID_CPUSET
+	bool "Include legacy /proc/<pid>/cpuset file"
+	depends on CPUSETS
+	default y
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#468: FILE: kernel/cpuset.c:116:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: kernel/cpuset.c:266:
+ * silently switch it to mount "container" instead */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#652: FILE: kernel/cpuset.c:273:
+	int ret = -ENODEV;
+	if (container_fs) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: kernel/cpuset.c:516:
+            cpus_empty(trialcs.cpus_allowed))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: kernel/cpuset.c:516:
+	if (container_task_count(cs->css.container) &&
+            cpus_empty(trialcs.cpus_allowed))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: kernel/cpuset.c:516:
+            cpus_empty(trialcs.cpus_allowed))$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#885: FILE: kernel/cpuset.c:572:
+	guarantee_online_mems(task_cs(tsk),&tsk->mems_allowed);
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#885: FILE: kernel/cpuset.c:572:
+	guarantee_online_mems(task_cs(tsk),&tsk->mems_allowed);
 	                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1599: FILE: kernel/cpuset.c:1164:
+	if ((err = container_add_file(cont, &cft_cpus)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1602: FILE: kernel/cpuset.c:1166:
+	if ((err = container_add_file(cont, &cft_mems)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1605: FILE: kernel/cpuset.c:1168:
+	if ((err = container_add_file(cont, &cft_cpu_exclusive)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1608: FILE: kernel/cpuset.c:1170:
+	if ((err = container_add_file(cont, &cft_mem_exclusive)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1611: FILE: kernel/cpuset.c:1172:
+	if ((err = container_add_file(cont, &cft_memory_migrate)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1614: FILE: kernel/cpuset.c:1174:
+	if ((err = container_add_file(cont, &cft_memory_pressure)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1617: FILE: kernel/cpuset.c:1176:
+	if ((err = container_add_file(cont, &cft_spread_page)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1620: FILE: kernel/cpuset.c:1178:
+	if ((err = container_add_file(cont, &cft_spread_slab)) < 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1773: FILE: kernel/cpuset.c:1262:
 
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425459.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 5 warnings, 4 checks, 1985 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425459.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
