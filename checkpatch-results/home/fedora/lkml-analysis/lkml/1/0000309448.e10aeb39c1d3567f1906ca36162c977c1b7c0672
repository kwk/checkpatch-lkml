WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
http://download.cypress.com.edgesuite.net/design_resources/datasheets/contents/cy7c68300c_8.pdf).

WARNING:TYPO_SPELLING: 'unsual' may be misspelled - perhaps 'unusual'?
#50: 
proto_handler, and an unsual entry.
                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that open parenthesis '('
#65: FILE: drivers/usb/storage/unusual_devs.h:1592:
+UNUSUAL_DEV(  0x04b4, 0x6830, 0x0000, 0x9999,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: drivers/usb/storage/unusual_devs.h:1593:
+UNUSUAL_DEV(  0x04b4, 0x6830, 0x0000, 0x9999,
+		"Cypress",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/usb/storage/cypress_atacb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/usb/storage/cypress_atacb.c:18:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: drivers/usb/storage/cypress_atacb.c:19:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#134: FILE: drivers/usb/storage/cypress_atacb.c:54:
+	switch((save_cmnd[1] >> 1) & 0xf) {
+		case 3:
+		case 4:
+		case 5:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: drivers/usb/storage/cypress_atacb.c:54:
+	switch((save_cmnd[1] >> 1) & 0xf) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/usb/storage/cypress_atacb.c:66:
+ ^I/* this value can change, but most(all ?) manufacturers keep the cypress$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: drivers/usb/storage/cypress_atacb.c:66:
+ ^I/* this value can change, but most(all ?) manufacturers keep the cypress$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/usb/storage/cypress_atacb.c:66:
+ ^I/* this value can change, but most(all ?) manufacturers keep the cypress$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#168: FILE: drivers/usb/storage/cypress_atacb.c:88:
+			if (save_cmnd[3] || save_cmnd[5] || save_cmnd[7] || save_cmnd[9]
+					|| save_cmnd[11])

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#172: FILE: drivers/usb/storage/cypress_atacb.c:92:
+	}
+	else { /* ATA12 */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#172: FILE: drivers/usb/storage/cypress_atacb.c:92:
+	else { /* ATA12 */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#181: FILE: drivers/usb/storage/cypress_atacb.c:101:
+
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srb->cmnd[12] == ATA_CMD_SET_FEATURES'
#183: FILE: drivers/usb/storage/cypress_atacb.c:103:
+	if ((srb->cmnd[12] == ATA_CMD_SET_FEATURES)
+			&& (srb->cmnd[6] == SETFEATURES_XFER))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srb->cmnd[6] == SETFEATURES_XFER'
#183: FILE: drivers/usb/storage/cypress_atacb.c:103:
+	if ((srb->cmnd[12] == ATA_CMD_SET_FEATURES)
+			&& (srb->cmnd[6] == SETFEATURES_XFER))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#184: FILE: drivers/usb/storage/cypress_atacb.c:104:
+	if ((srb->cmnd[12] == ATA_CMD_SET_FEATURES)
+			&& (srb->cmnd[6] == SETFEATURES_XFER))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#188: FILE: drivers/usb/storage/cypress_atacb.c:108:
+		srb->cmnd[2] |= (1<<7);
 		                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/usb/storage/cypress_atacb.c:110:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/usb/storage/cypress_atacb.c:118:
+	if (srb->result == SAM_STAT_CHECK_CONDITION &&
+			memcmp(srb->sense_buffer, usb_stor_sense_invalidCDB,

CHECK:CAMELCASE: Avoid CamelCase: <usb_stor_sense_invalidCDB>
#198: FILE: drivers/usb/storage/cypress_atacb.c:118:
+			memcmp(srb->sense_buffer, usb_stor_sense_invalidCDB,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/usb/storage/cypress_atacb.c:119:
+			memcmp(srb->sense_buffer, usb_stor_sense_invalidCDB,
+				sizeof(usb_stor_sense_invalidCDB)) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/usb/storage/cypress_atacb.c:129:
+	if ((srb->result != (DID_ERROR << 16) &&
+				srb->result != (DID_ABORT << 16)) &&

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#241: FILE: drivers/usb/storage/cypress_atacb.c:161:
+		 * (see 11.1 Error translation ­ ATA device error to SCSI error map)
 		                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/usb/storage/cypress_atacb.c:193:
+	memcpy(srb->sense_buffer,
+			usb_stor_sense_invalidCDB,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#286: FILE: drivers/usb/storage/cypress_atacb.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#303: FILE: drivers/usb/storage/cypress_atacb.h:18:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#304: FILE: drivers/usb/storage/cypress_atacb.h:19:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: drivers/usb/storage/cypress_atacb.h:24:
+extern void cypress_atacb_passthrough(struct scsi_cmnd*, struct us_data*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#321: FILE: drivers/usb/storage/Kconfig:148:
+config USB_STORAGE_CYPRESS_ATACB
+	bool "SAT emulation on Cypress USB/ATA Bridge with ATACB"
+	depends on USB_STORAGE
+	---help---
+	  Say Y here if you want to use SAT (ata pass through) on devices based
+	  on the Cypress USB/ATA bridge supporting ATACB. This will allow you
+	  to use tools to tune and monitor your drive (like hdparm or smartctl).
+
+	  If you say no here your device will still work with the standard usb
+	  mass storage class.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/usb/storage/transport.c:591:
+		if (us->subclass == US_SC_RBC || us->subclass == US_SC_SCSI ||
+				us->subclass == US_SC_CYP_ATACB)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309448.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 7 warnings, 17 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309448.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
