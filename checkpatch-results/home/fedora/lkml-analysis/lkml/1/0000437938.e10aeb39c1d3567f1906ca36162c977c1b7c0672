ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: arch/i386/kernel/nmi.c:244:
+ ^I^Ireturn;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#809: FILE: arch/i386/kernel/nmi.c:244:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: arch/i386/kernel/nmi.c:244:
+ ^I^Ireturn;$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#858: FILE: arch/i386/kernel/nmi.c:258:
+		/* FALL THROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1026: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:1:
+/* local apic based NMI watchdog for various CPUs.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1027: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:2:
+/* local apic based NMI watchdog for various CPUs.
+   This file also handles reservation of performance counters for coordination

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1033: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:8:
+   Original code for K7/P6 written by Keith Owens */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1054: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:29:
+	int (*setup)(unsigned nmi_hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1055: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:30:
+	void (*rearm)(struct nmi_watchdog_ctlblk *wd, unsigned nmi_hz);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1056: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:31:
+	void (*stop)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1057: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:32:
+	unsigned perfctr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1058: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:33:
+	unsigned evntsel;

WARNING:CONST_STRUCT: struct wd_ops should normally be const
#1062: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:37:
+static struct wd_ops *wd_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1096: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:71:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1107: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:82:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1117: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:92:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1129: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:104:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1139: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:114:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1151: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:126:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1156: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:131:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1157: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:132:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi_bit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1158: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:133:
+EXPORT_SYMBOL(reserve_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1159: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:134:
+EXPORT_SYMBOL(release_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1160: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:135:
+EXPORT_SYMBOL(reserve_evntsel_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1161: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:136:
+EXPORT_SYMBOL(release_evntsel_nmi);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1165: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:140:
+	BUG_ON(nmi_watchdog != NMI_LOCAL_APIC);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1173: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:148:
+	BUG_ON(atomic_read(&nmi_active) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1178: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:153:
+	BUG_ON(nmi_watchdog != NMI_LOCAL_APIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1188: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:163:
+		printk(KERN_ERR "NMI watchdog: cannot reserve perfctrs\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1214: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:189:
+ ^Iif (counter_val > 0x7fffffffULL) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1214: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:189:
+ ^Iif (counter_val > 0x7fffffffULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:189:
+ ^Iif (counter_val > 0x7fffffffULL) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1216: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:191:
+		u64 count = (u64)cpu_khz * 1000;
+		do_div(count, 0x7fffffffUL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1223: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:198:
+write_watchdog_counter(unsigned int perfctr_msr, const char *descr, unsigned nmi_hz)

ERROR:SPACING: space required before the open parenthesis '('
#1228: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:203:
+	if(descr)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#1229: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:204:
+		Dprintk("setting %s to -0x%08Lx\n", descr, count);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1229: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:204:
+		Dprintk("setting %s to -0x%08Lx\n", descr, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1234: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:209:
+static void write_watchdog_counter32(unsigned int perfctr_msr,
+		const char *descr, unsigned nmi_hz)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1234: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:209:
+		const char *descr, unsigned nmi_hz)

ERROR:SPACING: space required before the open parenthesis '('
#1239: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:214:
+	if(descr)

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1240: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:215:
+		Dprintk("setting %s to -0x%08Lx\n", descr, count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1245: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:220:
+/* AMD K7/K8/Family10h/Family11h support. AMD keeps this interface
+   nicely stable so there is not much variety */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1245: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:220:
+   nicely stable so there is not much variety */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1247: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:222:
+#define K7_EVNTSEL_ENABLE	(1 << 22)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1248: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:223:
+#define K7_EVNTSEL_INT		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1249: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:224:
+#define K7_EVNTSEL_OS		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1250: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:225:
+#define K7_EVNTSEL_USR		(1 << 16)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1254: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:229:
+static int setup_k7_watchdog(unsigned nmi_hz)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1272: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:247:
+	write_watchdog_counter(perfctr_msr, "K7_PERFCTR0",nmi_hz);
 	                                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1308: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:283:
+static void single_msr_rearm(struct nmi_watchdog_ctlblk *wd, unsigned nmi_hz)

WARNING:CONST_STRUCT: struct wd_ops should normally be const
#1314: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:289:
+static struct wd_ops k7_wd_ops = {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1322: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:297:
+	.checkbit = 1ULL<<63,
 	                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1327: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:302:
+#define P6_EVNTSEL0_ENABLE	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1328: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:303:
+#define P6_EVNTSEL_INT		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1329: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:304:
+#define P6_EVNTSEL_OS		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1330: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:305:
+#define P6_EVNTSEL_USR		(1 << 16)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1334: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:309:
+static int setup_p6_watchdog(unsigned nmi_hz)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1353: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:328:
+	write_watchdog_counter32(perfctr_msr, "P6_PERFCTR0",nmi_hz);
 	                                                   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1364: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:339:
+static void p6_rearm(struct nmi_watchdog_ctlblk *wd, unsigned nmi_hz)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1369: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:344:
+	 * ArchPerfom/Core Duo also needs this */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1372: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:347:
+	write_watchdog_counter32(wd->perfctr_msr, NULL,nmi_hz);
 	                                              ^

WARNING:CONST_STRUCT: struct wd_ops should normally be const
#1375: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:350:
+static struct wd_ops p6_wd_ops = {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1383: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:358:
+	.checkbit = 1ULL<<39,
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1388: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:363:
+#define MSR_P4_MISC_ENABLE_PERF_AVAIL	(1<<7)
                                      	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1388: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:363:
+#define MSR_P4_MISC_ENABLE_PERF_AVAIL	(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1389: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:364:
+#define P4_ESCR_EVENT_SELECT(N)	((N)<<25)
                                	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1390: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:365:
+#define P4_ESCR_OS		(1<<3)
                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1390: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:365:
+#define P4_ESCR_OS		(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1391: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:366:
+#define P4_ESCR_USR		(1<<2)
                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1391: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:366:
+#define P4_ESCR_USR		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1392: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:367:
+#define P4_CCCR_OVF_PMI0	(1<<26)
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1392: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:367:
+#define P4_CCCR_OVF_PMI0	(1<<26)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1393: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:368:
+#define P4_CCCR_OVF_PMI1	(1<<27)
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1393: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:368:
+#define P4_CCCR_OVF_PMI1	(1<<27)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1394: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:369:
+#define P4_CCCR_THRESHOLD(N)	((N)<<20)
                             	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1395: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:370:
+#define P4_CCCR_COMPLEMENT	(1<<19)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1395: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:370:
+#define P4_CCCR_COMPLEMENT	(1<<19)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1396: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:371:
+#define P4_CCCR_COMPARE		(1<<18)
                        		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1396: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:371:
+#define P4_CCCR_COMPARE		(1<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1397: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:372:
+#define P4_CCCR_REQUIRED	(3<<16)
                         	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1398: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:373:
+#define P4_CCCR_ESCR_SELECT(N)	((N)<<13)
                               	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1399: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:374:
+#define P4_CCCR_ENABLE		(1<<12)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1399: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:374:
+#define P4_CCCR_ENABLE		(1<<12)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1400: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:375:
+#define P4_CCCR_OVF ^I^I(1<<31)$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1400: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:375:
+#define P4_CCCR_OVF 		(1<<31)
                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1400: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:375:
+#define P4_CCCR_OVF 		(1<<31)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1403: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:378:
+/* Set up IQ_COUNTER0 to behave like a clock, by having IQ_CCCR0 filter
+   CRU_ESCR0 (with any non-null event selector) through a complemented

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1404: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:379:
+   max threshold. [IA32-Vol3, Section 14.9.9] */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1406: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:381:
+static int setup_p4_watchdog(unsigned nmi_hz)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1423: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:398:
+        ^Iebx = cpuid_ebx(1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1423: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:398:
+        ^Iebx = cpuid_ebx(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:398:
+        ^Iebx = cpuid_ebx(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1424: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:399:
+^I        apicid = (ebx >> 24) & 0xff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1425: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:400:
+        ^Iht_num = apicid & 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1425: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:400:
+        ^Iht_num = apicid & 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:400:
+        ^Iht_num = apicid & 1;$

CHECK:BRACES: Unbalanced braces around else statement
#1426: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:401:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:425:
+^I ^I| P4_ESCR_OS$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1450: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:425:
+^I ^I| P4_ESCR_OS$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1473: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:448:
+	struct nmi_watchdog_ctlblk *wd = &__get_cpu_var(nmi_watchdog_ctlblk);
+	wrmsr(wd->cccr_msr, 0, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1509: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:484:
+static void p4_rearm(struct nmi_watchdog_ctlblk *wd, unsigned nmi_hz)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1511: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:486:
+	unsigned dummy;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:488:
+ ^I * P4 quirks:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1513: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:488:
+ ^I * P4 quirks:$

WARNING:CONST_STRUCT: struct wd_ops should normally be const
#1527: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:502:
+static struct wd_ops p4_wd_ops = {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1536: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:511:
+	.checkbit = 1ULL<<39,
 	                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1540: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:515:
+/* Watchdog using the Intel architected PerfMon. Used for Core2 and hopefully
+   all future Intel CPUs. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1540: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:515:
+   all future Intel CPUs. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1545: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:520:
+static int setup_intel_arch_watchdog(unsigned nmi_hz)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eax.full
#1559: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:534:
+	cpuid(10, &(eax.full), &ebx, &unused, &unused);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1560: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:535:
+	if ((eax.split.mask_length < (ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX+1)) ||
 	                                                                     ^

WARNING:CONST_STRUCT: struct wd_ops should normally be const
#1590: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:565:
+static struct wd_ops intel_arch_wd_ops = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1636: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:611:
+int lapic_watchdog_init(unsigned nmi_hz)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1645: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:620:
+		printk(KERN_ERR "Cannot setup NMI watchdog on CPU %d\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1659: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:634:
+unsigned lapic_adjust_nmi_hz(unsigned hz)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1659: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:634:
+unsigned lapic_adjust_nmi_hz(unsigned hz)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1662: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:637:
+	struct nmi_watchdog_ctlblk *wd = &__get_cpu_var(nmi_watchdog_ctlblk);
+	if (wd->perfctr_msr == MSR_P6_PERFCTR0 ||

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1668: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:643:
+int lapic_wd_event(unsigned nmi_hz)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1672: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:647:
+	u64 ctr;
+	rdmsrl(wd->perfctr_msr, ctr);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wd_ops"
#1682: FILE: arch/i386/kernel/cpu/perfctr-watchdog.c:657:
+	return wd_ops != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1693: FILE: include/asm-i386/nmi.h:54:
+int lapic_watchdog_init(unsigned nmi_hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1694: FILE: include/asm-i386/nmi.h:55:
+int lapic_wd_event(unsigned nmi_hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1695: FILE: include/asm-i386/nmi.h:56:
+unsigned lapic_adjust_nmi_hz(unsigned hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1695: FILE: include/asm-i386/nmi.h:56:
+unsigned lapic_adjust_nmi_hz(unsigned hz);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 73 warnings, 39 checks, 1622 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
