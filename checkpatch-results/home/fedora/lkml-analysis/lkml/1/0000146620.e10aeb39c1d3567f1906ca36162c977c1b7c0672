WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#87: 
 drivers/ide/ide-cd.c           |  525 +++++++++++++---------------------------

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#781: FILE: drivers/ide/ht6560b.c:332:
+^I.tp_ops ^I^I= &ht6560b_tp_ops,$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#927: FILE: drivers/ide/ide-atapi.c:319:
+		int uptodate, error;
 		    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#940: FILE: drivers/ide/ide-atapi.c:370:
 		} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#953: FILE: drivers/ide/ide-atapi.c:381:
+			error = uptodate ? 0 : -EIO;
 			        ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pc->buf"
#1007: FILE: drivers/ide/ide-atapi.c:415:
+	if (drive->media == ide_floppy && pc->buf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1207: FILE: drivers/ide/ide-cd.c:263:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#1208: FILE: drivers/ide/ide-cd.c:264:
+	} else

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1496: FILE: drivers/ide/ide-cd.c:662:
+		uptodate = 1;
 		^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1517: FILE: drivers/ide/ide-cd.c:685:
 				printk(KERN_ERR PFX "%s: %s: data underrun "
+					"(%u bytes)\n", drive->name, __func__,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1530: FILE: drivers/ide/ide-cd.c:694:
+			uptodate = cmd->nleft ? 0 : 1;
 			^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1531: FILE: drivers/ide/ide-cd.c:695:
+			if (uptodate == 0)
 			    ^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#1661: FILE: drivers/ide/ide-cd.c:733:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1662: FILE: drivers/ide/ide-cd.c:734:
+			printk(KERN_ERR PFX "%s: confused, missing data\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1663: FILE: drivers/ide/ide-cd.c:735:
+			printk(KERN_ERR PFX "%s: confused, missing data\n",
+				drive->name);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1692: FILE: drivers/ide/ide-cd.c:763:
+		if (sense && uptodate)
 		             ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1697: FILE: drivers/ide/ide-cd.c:768:
+				uptodate = 1;
 				^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1699: FILE: drivers/ide/ide-cd.c:770:
+			if (uptodate <= 0 && rq->errors == 0)
 			    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1703: FILE: drivers/ide/ide-cd.c:774:
+		if (uptodate == 0)
 		    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1717: FILE: drivers/ide/ide-cd.c:788:
+			if (uptodate == 0 && (cmd->tf_flags & IDE_TFLAG_WRITE))
 			    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1721: FILE: drivers/ide/ide-cd.c:792:
+		ide_complete_rq(drive, uptodate ? 0 : -EIO, nsectors << 9);
 		                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1789: FILE: drivers/ide/ide-cd.c:884:
+	int uptodate = 0, nsectors;
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1811: FILE: drivers/ide/ide-cd.c:903:
+		uptodate = 1;
 		^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1840: FILE: drivers/ide/ide-cd.c:932:
+	ide_complete_rq(drive, uptodate ? 0 : -EIO, nsectors << 9);
 	                       ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2211: FILE: drivers/ide/ide-dma.c:491:
+		printk(KERN_ERR "%s: timeout waiting for DMA\n", drive->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2518: FILE: drivers/ide/ide-generic.c:38:
+      defined(CONFIG_PLAT_OPSPUT)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#3021: FILE: drivers/ide/ide-iops.c:375:
+	if (speed >= XFER_SW_DMA_0) {
[...]
+	} else	if (ata_id_is_cfa(id))
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3193: FILE: drivers/ide/ide-tape.c:301:
+static int idetape_input_buffers(ide_drive_t *drive, struct ide_atapi_pc *pc,
 				  unsigned int bcount)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#3205: FILE: drivers/ide/ide-tape.c:307:
+		if (bh == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3222: FILE: drivers/ide/ide-tape.c:329:
+static int idetape_output_buffers(ide_drive_t *drive, struct ide_atapi_pc *pc,
 				   unsigned int bcount)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#3233: FILE: drivers/ide/ide-tape.c:335:
+		if (bh == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cursg"
#3334: FILE: drivers/ide/ide-taskfile.c:207:
+	if (cursg == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3335: FILE: drivers/ide/ide-taskfile.c:208:
+		cursg = cmd->cursg = sg;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3340: FILE: drivers/ide/ide-taskfile.c:211:
+		unsigned nr_bytes = min(len, cursg->length - cmd->cursg_ofs);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3388: FILE: drivers/ide/ide-taskfile.c:232:
+			cursg = cmd->cursg = sg_next(cmd->cursg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3424: FILE: drivers/ide/ide-taskfile.c:268:
+		nr_bytes = min_t(unsigned, cmd->nleft, drive->mult_count << 9);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3486: FILE: drivers/ide/ide-xfer-mode.c:12:
 static const char *mwdma_str[] =
+	{ "MWDMA0", "MWDMA1", "MWDMA2", "MWDMA3", "MWDMA4" };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3491: FILE: drivers/ide/ide-xfer-mode.c:16:
 static const char *pio_str[] =
+	{ "PIO0", "PIO1", "PIO2", "PIO3", "PIO4", "PIO5", "PIO6" };

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3722: FILE: drivers/ide/ns87415.c:222:
 static void __devinit init_hwif_ns87415 (ide_hwif_t *hwif)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3775: FILE: drivers/ide/ns87415.c:314:
 static const struct ide_port_info ns87415_chipset __devinitdata = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3779: FILE: drivers/ide/ns87415.c:317:
+^I.tp_ops ^I= &ns87415_tp_ops,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4132: FILE: drivers/ide/qd65xx.c:340:
+^I.tp_ops ^I^I= &qd65xx_tp_ops,$

WARNING:HOTPLUG_SECTION: Using __devinitconst is unnecessary
#4396: FILE: drivers/ide/sgiioc4.c:531:
 static const struct ide_port_info sgiioc4_port_info __devinitconst = {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sl82c105_dma_clear', this function's name, in a string
#4433: FILE: drivers/ide/sl82c105.c:197:
+	DBG(("sl82c105_dma_clear(drive:%s)\n", drive->name));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#4567: FILE: drivers/ide/trm290.c:327:
 static const struct ide_port_info trm290_chipset __devinitdata = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4571: FILE: drivers/ide/trm290.c:330:
+^I.tp_ops ^I= &trm290_tp_ops,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hwif_s *' should also have an identifier name
#4911: FILE: include/linux/ide.h:662:
+	void	(*write_devctl)(struct hwif_s *, u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#4911: FILE: include/linux/ide.h:662:
+	void	(*write_devctl)(struct hwif_s *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4915: FILE: include/linux/ide.h:664:
+	void	(*dev_select)(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#4940: FILE: include/linux/ide.h:719:
+	int	(*dma_check)(struct ide_drive_s *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#4940: FILE: include/linux/ide.h:719:
+	int	(*dma_check)(struct ide_drive_s *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#4943: FILE: include/linux/ide.h:721:
+	void	(*dma_clear)(struct ide_drive_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_hwif_t *' should also have an identifier name
#4951: FILE: include/linux/ide.h:1170:
+void ide_write_devctl(ide_hwif_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#4951: FILE: include/linux/ide.h:1170:
+void ide_write_devctl(ide_hwif_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4955: FILE: include/linux/ide.h:1172:
+void ide_dev_select(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4972: FILE: include/linux/ide.h:1224:
+void ide_pio_bytes(ide_drive_t *, struct ide_cmd *, unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#4972: FILE: include/linux/ide.h:1224:
+void ide_pio_bytes(ide_drive_t *, struct ide_cmd *, unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4972: FILE: include/linux/ide.h:1224:
+void ide_pio_bytes(ide_drive_t *, struct ide_cmd *, unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#4972: FILE: include/linux/ide.h:1224:
+void ide_pio_bytes(ide_drive_t *, struct ide_cmd *, unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4983: FILE: include/linux/ide.h:1443:
+int ide_dma_prepare(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#4983: FILE: include/linux/ide.h:1443:
+int ide_dma_prepare(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#4984: FILE: include/linux/ide.h:1444:
+void ide_dma_unmap_sg(ide_drive_t *, struct ide_cmd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_cmd *' should also have an identifier name
#4984: FILE: include/linux/ide.h:1444:
+void ide_dma_unmap_sg(ide_drive_t *, struct ide_cmd *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146620.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 48 warnings, 13 checks, 4279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146620.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
