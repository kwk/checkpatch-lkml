WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#21: 
Subject: [PATCH -mm] file capabilities: accomodate future 64-bit caps
                                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#31: 
Subject: [PATCH -mm] file capabilities: accomodate future 64-bit caps
                                        ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#47: 
	3. To accomodate 64-bit caps, specify that capabilities are
	      ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#69: FILE: include/linux/capability.h:49:
+#define XATTR_CAPS_SZ (4*sizeof(__le32))
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: security/commoncap.c:120:
+	int sz = (size-1)/3;
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#150: FILE: security/commoncap.c:120:
+	int sz = (size-1)/3;
 	                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#155: FILE: security/commoncap.c:125:
+	eff  = le32_to_cpu(dcap->data[3*word]);
 	                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#156: FILE: security/commoncap.c:126:
+	perm = le32_to_cpu(dcap->data[3*word+1]);
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: security/commoncap.c:126:
+	perm = le32_to_cpu(dcap->data[3*word+1]);
 	                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: security/commoncap.c:127:
+	inh  = le32_to_cpu(dcap->data[3*word+2]);
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#157: FILE: security/commoncap.c:127:
+	inh  = le32_to_cpu(dcap->data[3*word+2]);
 	                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#165: FILE: security/commoncap.c:135:
+			eff  = le32_to_cpu(dcap->data[3*word]);
 			                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#166: FILE: security/commoncap.c:136:
+			perm = le32_to_cpu(dcap->data[3*word+1]);
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#166: FILE: security/commoncap.c:136:
+			perm = le32_to_cpu(dcap->data[3*word+1]);
 			                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#167: FILE: security/commoncap.c:137:
+			inh  = le32_to_cpu(dcap->data[3*word+2]);
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: security/commoncap.c:137:
+			inh  = le32_to_cpu(dcap->data[3*word+2]);
 			                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: security/commoncap.c:157:
+static inline int cap_from_disk(struct vfs_cap_data_disk *dcap,
+					struct linux_binprm *bprm, int size)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: security/commoncap.c:166:
+	if ((size-1)%3) {
 	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#211: FILE: security/commoncap.c:166:
+	if ((size-1)%3) {
 	            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#212: FILE: security/commoncap.c:167:
+		printk(KERN_WARNING "%s: size is an invalid size (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: security/commoncap.c:168:
+		printk(KERN_WARNING "%s: size is an invalid size (%d)\n",
+						__FUNCTION__, size);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: security/commoncap.c:168:
+						__FUNCTION__, size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: security/commoncap.c:210:
+		int size;
+		size = inode->i_op->getxattr(dentry, XATTR_NAME_CAPS, NULL, 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460865.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 17 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460865.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
