WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
sd 12:0:0:0: [sdb] Result: hostbyte=DID_BAD_TARGET driverbyte=DRIVER_OK,SUGGEST_OK

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: drivers/ata/Kconfig:43:
+config ATA_RAM
+	tristate "ATA RAM driver"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/ata/ata_ram.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#136: FILE: drivers/ata/ata_ram.c:57:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: drivers/ata/ata_ram.c:74:
+		int tocopy = sg->length;
+		if (tocopy > len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: drivers/ata/ata_ram.c:91:
+	struct ata_ram_host *arhost = qc->ap->private_data;
+	arhost->shadow_tf.flags = ATA_TFLAG_LBA48 | ATA_TFLAG_LBA;

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#246: FILE: drivers/ata/ata_ram.c:167:
+	ata_ram_data_array = kmalloc(pages * sizeof(void *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/ata/ata_ram.c:173:
+		struct page *page = alloc_page(GFP_DATA_PAGE);
+		ata_ram_data_array[i] = page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#273: FILE: drivers/ata/ata_ram.c:194:
+		struct page *page = ata_ram_data_array[i];
+		if (!page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/ata/ata_ram.c:203:
+static void ata_ram_too_big(struct ata_queued_cmd *qc, u64 start,
+							unsigned int len)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: drivers/ata/ata_ram.c:205:
+	printk("Request exceeded device capacity! %llu %u\n", start, len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/ata/ata_ram.c:231:
+static void ata_ram_read(struct ata_queued_cmd *qc, u64 startB,
+							unsigned int lenB)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#315: FILE: drivers/ata/ata_ram.c:236:
+	unsigned i, from_off = start % PAGE_SIZE, data_pfn = start / PAGE_SIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#327: FILE: drivers/ata/ata_ram.c:248:
+		unsigned int sg_copy = sg->length;
+		if (sg_copy > len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/ata/ata_ram.c:287:
+static void ata_ram_write(struct ata_queued_cmd *qc, u64 startB,
+							unsigned int lenB)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#371: FILE: drivers/ata/ata_ram.c:292:
+	unsigned i, to_off = start % PAGE_SIZE, data_pfn = start / PAGE_SIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#383: FILE: drivers/ata/ata_ram.c:304:
+		unsigned int sg_copy = sg->length;
+		if (sg_copy > len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: drivers/ata/ata_ram.c:346:
+	unsigned int length = qc->tf.nsect;
+	if (!length)

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: drivers/ata/ata_ram.c:355:
+	unsigned int length = qc->tf.nsect | qc->tf.hob_nsect << 8;
+	if (!length)

WARNING:LINE_SPACING: Missing a blank line after declarations
#443: FILE: drivers/ata/ata_ram.c:364:
+	unsigned int length = qc->tf.nsect;
+	if (!length)

WARNING:LINE_SPACING: Missing a blank line after declarations
#452: FILE: drivers/ata/ata_ram.c:373:
+	unsigned int length = qc->tf.nsect | qc->tf.hob_nsect << 8;
+	if (!length)

WARNING:LINE_SPACING: Missing a blank line after declarations
#460: FILE: drivers/ata/ata_ram.c:381:
+	struct ata_ram_host *arhost = ap->private_data;
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#460: FILE: drivers/ata/ata_ram.c:381:
+	pr_debug("%s called\n", __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#467: FILE: drivers/ata/ata_ram.c:388:
+	u16 id[256];
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#467: FILE: drivers/ata/ata_ram.c:388:
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#490: FILE: drivers/ata/ata_ram.c:411:
+	pr_debug("%s called\n", __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#542: FILE: drivers/ata/ata_ram.c:463:
+	int next = arhost->last + 1;
+	if (next == ATA_MAX_QUEUE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#554: FILE: drivers/ata/ata_ram.c:475:
+	struct ata_queued_cmd *qc;
+	if (arhost->first == arhost->last)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#590: FILE: drivers/ata/ata_ram.c:511:
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#598: FILE: drivers/ata/ata_ram.c:519:
+	pr_debug("%s called\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/ata/ata_ram.c:530:
+static int ata_ram_softreset(struct ata_link *link, unsigned int *class,
+							unsigned long deadline)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#611: FILE: drivers/ata/ata_ram.c:532:
+	pr_debug("%s called\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: drivers/ata/ata_ram.c:537:
+static int ata_ram_hardreset(struct ata_link *link, unsigned int *class,
+							unsigned long deadline)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#618: FILE: drivers/ata/ata_ram.c:539:
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#625: FILE: drivers/ata/ata_ram.c:546:
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#630: FILE: drivers/ata/ata_ram.c:551:
+	pr_debug("%s called\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: drivers/ata/ata_ram.c:553:
+	ata_do_eh(ap, ata_std_prereset, ata_ram_softreset, ata_ram_hardreset,
+							ata_ram_postreset);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#637: FILE: drivers/ata/ata_ram.c:558:
+	pr_debug("%s called\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#643: FILE: drivers/ata/ata_ram.c:564:
+	pr_debug("%s called\n", __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#746: FILE: drivers/ata/ata_ram.c:667:
+	struct ata_ram_host *arhost = platform_get_drvdata(pdev);
+	ata_host_detach(arhost->host);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316800.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 34 warnings, 7 checks, 692 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316800.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
