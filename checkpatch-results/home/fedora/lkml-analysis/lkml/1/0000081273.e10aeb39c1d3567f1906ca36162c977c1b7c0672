CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: include/linux/flex_array.h:40:
+struct flex_array *flex_array_alloc(int element_size, unsigned int total,
+		gfp_t flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: include/linux/flex_array.h:42:
+int flex_array_prealloc(struct flex_array *fa, unsigned int start,
+		unsigned int end, gfp_t flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: include/linux/flex_array.h:46:
+int flex_array_put(struct flex_array *fa, unsigned int element_nr, void *src,
 		gfp_t flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: lib/flex_array.c:103:
+struct flex_array *flex_array_alloc(int element_size, unsigned int total,
+					gfp_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: lib/flex_array.c:120:
+static int fa_element_to_part_nr(struct flex_array *fa,
+					unsigned int element_nr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: lib/flex_array.c:149:
+static unsigned int index_inside_part(struct flex_array *fa,
+					unsigned int element_nr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: lib/flex_array.c:189:
+int flex_array_put(struct flex_array *fa, unsigned int element_nr, void *src,
+			gfp_t flags)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000081273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 7 checks, 80 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000081273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
