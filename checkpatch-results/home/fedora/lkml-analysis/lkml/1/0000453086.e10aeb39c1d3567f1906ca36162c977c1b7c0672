ERROR:INITIALISED_STATIC: do not initialise statics to 0
#220: FILE: arch/um/os-Linux/sigio.c:326:
+static int pty_output_sigio = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#221: FILE: arch/um/os-Linux/sigio.c:327:
+static int pty_close_sigio = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#232: FILE: arch/um/os-Linux/sigio.c:368:
+static volatile int got_sigio = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#232: FILE: arch/um/os-Linux/sigio.c:368:
+static volatile int got_sigio = 0;

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: arch/um/os-Linux/sigio.c:386:
+	if(openpty(&info->master, &info->slave, NULL, NULL, NULL))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: arch/um/os-Linux/sigio.c:395:
+	if(flags < 0)

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: arch/um/os-Linux/sigio.c:398:
+	if((fcntl(master, F_SETFL, flags | O_NONBLOCK | O_ASYNC) < 0) ||

ERROR:SPACING: space required before the open parenthesis '('
#266: FILE: arch/um/os-Linux/sigio.c:402:
+	if((fcntl(slave, F_SETFL, flags | O_NONBLOCK) < 0))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#269: FILE: arch/um/os-Linux/sigio.c:405:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: space required before the open brace '{'
#279: FILE: arch/um/os-Linux/sigio.c:415:
+	if(pty.err){

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: arch/um/os-Linux/sigio.c:415:
+	if(pty.err){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#280: FILE: arch/um/os-Linux/sigio.c:416:
+		printk("openpty failed, errno = %d\n", -pty.err);

ERROR:SPACING: space required before the open brace '{'
#287: FILE: arch/um/os-Linux/sigio.c:423:
+	if((master == -1) || (slave == -1)){

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: arch/um/os-Linux/sigio.c:423:
+	if((master == -1) || (slave == -1)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#288: FILE: arch/um/os-Linux/sigio.c:424:
+		printk("openpty failed to allocate a pty\n");

ERROR:SPACING: space required before the open parenthesis '('
#298: FILE: arch/um/os-Linux/sigio.c:434:
+	if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: arch/um/os-Linux/sigio.c:437:
+	if(sigaction(SIGIO, NULL, &old) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#305: FILE: arch/um/os-Linux/sigio.c:441:
+	if(sigaction(SIGIO, &new, NULL) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: arch/um/os-Linux/sigio.c:450:
+	if(sigaction(SIGIO, &old, NULL) < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#323: FILE: arch/um/os-Linux/sigio.c:459:
+	printk("Checking that host ptys support output SIGIO...");

WARNING:SPACING: space prohibited before semicolon
#327: FILE: arch/um/os-Linux/sigio.c:463:
+	while(os_write_file(master, buf, sizeof(buf)) > 0) ;

ERROR:SPACING: space required before the open parenthesis '('
#327: FILE: arch/um/os-Linux/sigio.c:463:
+	while(os_write_file(master, buf, sizeof(buf)) > 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: arch/um/os-Linux/sigio.c:463:
+	while(os_write_file(master, buf, sizeof(buf)) > 0) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#328: FILE: arch/um/os-Linux/sigio.c:464:
+	if(errno != EAGAIN)

WARNING:SPACING: space prohibited before semicolon
#330: FILE: arch/um/os-Linux/sigio.c:466:
+	while(((n = os_read_file(slave, buf, sizeof(buf))) > 0) && !got_sigio) ;

ERROR:SPACING: space required before the open parenthesis '('
#330: FILE: arch/um/os-Linux/sigio.c:466:
+	while(((n = os_read_file(slave, buf, sizeof(buf))) > 0) && !got_sigio) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#330: FILE: arch/um/os-Linux/sigio.c:466:
+	while(((n = os_read_file(slave, buf, sizeof(buf))) > 0) && !got_sigio) ;

ERROR:SPACING: space required before the open brace '{'
#332: FILE: arch/um/os-Linux/sigio.c:468:
+	if(got_sigio){

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: arch/um/os-Linux/sigio.c:468:
+	if(got_sigio){

CHECK:BRACES: braces {} should be used on all arms of this statement
#332: FILE: arch/um/os-Linux/sigio.c:468:
+	if(got_sigio){
[...]
+	else if(n == -EAGAIN) printk("No, enabling workaround\n");
[...]
+	else panic("check_sigio : read failed, err = %d\n", n);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#333: FILE: arch/um/os-Linux/sigio.c:469:
+		printk("Yes\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#336: FILE: arch/um/os-Linux/sigio.c:472:
+	else if(n == -EAGAIN) printk("No, enabling workaround\n");

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: arch/um/os-Linux/sigio.c:472:
+	else if(n == -EAGAIN) printk("No, enabling workaround\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#336: FILE: arch/um/os-Linux/sigio.c:472:
+	else if(n == -EAGAIN) printk("No, enabling workaround\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#336: FILE: arch/um/os-Linux/sigio.c:472:
+	}
+	else if(n == -EAGAIN) printk("No, enabling workaround\n");

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#337: FILE: arch/um/os-Linux/sigio.c:473:
+	else panic("check_sigio : read failed, err = %d\n", n);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: arch/um/os-Linux/sigio.c:478:
+	printk("Checking that host ptys support SIGIO on close...");

ERROR:SPACING: space required before the open brace '{'
#345: FILE: arch/um/os-Linux/sigio.c:481:
+	if(got_sigio){

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: arch/um/os-Linux/sigio.c:481:
+	if(got_sigio){

CHECK:BRACES: braces {} should be used on all arms of this statement
#345: FILE: arch/um/os-Linux/sigio.c:481:
+	if(got_sigio){
[...]
+	else printk("No, enabling workaround\n");
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#346: FILE: arch/um/os-Linux/sigio.c:482:
+		printk("Yes\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#349: FILE: arch/um/os-Linux/sigio.c:485:
+	else printk("No, enabling workaround\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#349: FILE: arch/um/os-Linux/sigio.c:485:
+	else printk("No, enabling workaround\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#349: FILE: arch/um/os-Linux/sigio.c:485:
+	}
+	else printk("No, enabling workaround\n");

ERROR:SPACING: space required before the open parenthesis '('
#354: FILE: arch/um/os-Linux/sigio.c:490:
+	if((os_access("/dev/ptmx", OS_ACC_R_OK) < 0) &&

ERROR:SPACING: space required before the open brace '{'
#355: FILE: arch/um/os-Linux/sigio.c:491:
+	   (os_access("/dev/ptyp0", OS_ACC_R_OK) < 0)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: arch/um/os-Linux/sigio.c:492:
+		printk("No pseudo-terminals available - skipping pty SIGIO "

WARNING:SPLIT_STRING: quoted string split across lines
#357: FILE: arch/um/os-Linux/sigio.c:493:
+		printk("No pseudo-terminals available - skipping pty SIGIO "
+		       "check\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453086.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 33 errors, 13 warnings, 2 checks, 178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453086.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
