WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
during boot - dmi_save_oem_strings_devices: out of memory and dmi_string: out of 

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#71: FILE: drivers/firmware/dmi_scan.c:11:
+static char dmi_empty_string[] = "        ";

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#81: FILE: drivers/firmware/dmi_scan.c:26:
+			size_t len = strlen(bp)+1;
 			                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: drivers/firmware/dmi_scan.c:28:
+			size_t cmp_len = len > 8 ? 8 : len;
+			if (!memcmp(bp, dmi_empty_string, cmp_len))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#90: FILE: drivers/firmware/dmi_scan.c:34:
+				printk(KERN_ERR "dmi_string: cannot allocate %Zu bytes.\n", len);

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#90: FILE: drivers/firmware/dmi_scan.c:34:
+				printk(KERN_ERR "dmi_string: cannot allocate %Zu bytes.\n", len);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#99: FILE: drivers/firmware/dmi_scan.c:185:
+static struct dmi_device empty_oem_string_dev =
+			{.name = dmi_empty_string,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: drivers/firmware/dmi_scan.c:195:
+		char* devname = dmi_string(dm, i);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 1 checks, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
