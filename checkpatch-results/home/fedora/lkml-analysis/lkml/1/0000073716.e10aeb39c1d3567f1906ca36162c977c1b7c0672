ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: drivers/char/virtio_console.c:26:
  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: drivers/char/virtio_console.c:27:
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#317: FILE: drivers/char/virtio_console.c:198:
+static ssize_t virtconsole_read(struct file *filp, char __user *ubuf,
                                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/char/virtio_console.c:199:
+static ssize_t virtconsole_read(struct file *filp, char __user *ubuf,
+			       size_t count, loff_t *offp)

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: drivers/char/virtio_console.c:288:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#457: FILE: drivers/char/virtio_console.c:331:
+static ssize_t virtconsole_write(struct file *filp, const char __user *ubuf,
                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#475: FILE: drivers/char/virtio_console.c:341:
+static unsigned int virtconsole_poll(struct file *filp, poll_table *wait)
                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#481: FILE: drivers/char/virtio_console.c:347:
+	poll_wait(filp, &port->waitqueue, wait);
 	          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#492: FILE: drivers/char/virtio_console.c:358:
+static int virtconsole_release(struct inode *inode, struct file *filp)
                                                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#504: FILE: drivers/char/virtio_console.c:370:
+static int virtconsole_open(struct inode *inode, struct file *filp)
                                                               ^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#573: FILE: drivers/char/virtio_console.c:434:
+	BUG_ON(!virtconsole.in_vq);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#584: FILE: drivers/char/virtio_console.c:445:
+}
+/*:*/

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct hv_ops should normally be const
#626: FILE: drivers/char/virtio_console.c:489:
+static struct hv_ops virtio_cons = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#648: FILE: drivers/char/virtio_console.c:511:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#660: FILE: drivers/char/virtio_console.c:523:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#751: FILE: drivers/char/virtio_console.c:613:
+		if (use_multiport()) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#754: FILE: drivers/char/virtio_console.c:616:
+		} else

WARNING:TYPO_SPELLING: 'throught' may be misspelled - perhaps 'thought'?
#878: FILE: drivers/char/virtio_console.c:738:
+ * Cycle throught the list of active ports and return the next port
          ^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1027: FILE: drivers/char/virtio_console.c:883:
+static int __devinit virtcons_probe(struct virtio_device *vdev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*virtconsole.config)...) over kzalloc(sizeof(struct virtio_console_config)...)
#1065: FILE: drivers/char/virtio_console.c:912:
+		virtconsole.config = kzalloc(sizeof(struct virtio_console_config)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#1123: FILE: drivers/char/virtio_console.c:944:
+	if (multiport) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1134: FILE: drivers/char/virtio_console.c:955:
+	} else

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1161: FILE: drivers/char/virtio_console.c:975:
+#if 0 /* hvc_console is compiled in, at least on Fedora. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1324: FILE: include/linux/virtio_console.h:54:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1339: FILE: include/linux/virtio_console.h:69:
+} __attribute__((packed));

CHECK:BIT_MACRO: Prefer using the BIT macro
#1342: FILE: include/linux/virtio_console.h:72:
+#define VIRTIO_CONSOLE_ID_INTERNAL	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1344: FILE: include/linux/virtio_console.h:74:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 12 warnings, 13 checks, 1272 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
