WARNING:REPEATED_WORD: Possible repeated word: 'to'
#39: 
change the mconf bus range from [0,0xff] to to [0, 0x3f]

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#57: FILE: arch/x86/pci/mmconfig-shared.c:377:
+static int __devinit check_mmconf(const struct dmi_system_id *d)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config_num != 1'
#61: FILE: arch/x86/pci/mmconfig-shared.c:381:
+	if ((pci_mmcfg_config_num != 1) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config == NULL'
#61: FILE: arch/x86/pci/mmconfig-shared.c:381:
+	if ((pci_mmcfg_config_num != 1) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config[0].address == 0'
#61: FILE: arch/x86/pci/mmconfig-shared.c:381:
+	if ((pci_mmcfg_config_num != 1) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_mmcfg_config"
#62: FILE: arch/x86/pci/mmconfig-shared.c:382:
+	    (pci_mmcfg_config == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#74: FILE: arch/x86/pci/mmconfig-shared.c:394:
+static struct dmi_system_id __devinitdata mmconf_dmi_table[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after mmconf_dmi_table[]
#74: FILE: arch/x86/pci/mmconfig-shared.c:394:
+static struct dmi_system_id __devinitdata mmconf_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: arch/x86/pci/mmconfig-shared.c:408:
+        dmi_check_system(mmconf_dmi_table);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/x86/pci/mmconfig-shared.c:408:
+        dmi_check_system(mmconf_dmi_table);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000252494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 4 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000252494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
