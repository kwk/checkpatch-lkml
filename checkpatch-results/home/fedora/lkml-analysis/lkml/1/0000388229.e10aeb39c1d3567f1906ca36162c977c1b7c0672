CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#57: FILE: kexec/crashdump-elf.c:39:
+	uint64_t vmcoreinfo_addr, vmcoreinfo_len;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#67: FILE: kexec/crashdump-elf.c:52:
+	if (get_kernel_vmcoreinfo(&vmcoreinfo_addr, &vmcoreinfo_len) == 0) {
+		has_vmcoreinfo = 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#84: FILE: kexec/crashdump-elf.c:162:
+		phdr->p_offset  = phdr->p_paddr = vmcoreinfo_addr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#86: FILE: kexec/crashdump-elf.c:164:
+		phdr->p_filesz	= phdr->p_memsz	= vmcoreinfo_len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#106: FILE: kexec/crashdump.c:113:
+int get_kernel_vmcoreinfo(uint64_t *addr, uint64_t *len)

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#127: FILE: kexec/crashdump.c:134:
+	count = sscanf(line, "%Lx %Lx", &temp, &temp2);

CHECK:SPACING: No space is necessary after a cast
#131: FILE: kexec/crashdump.c:138:
+	*addr = (uint64_t) temp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#132: FILE: kexec/crashdump.c:139:
+	*len = (uint64_t) temp2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#143: FILE: kexec/crashdump.h:5:
+extern int get_kernel_vmcoreinfo(uint64_t *addr, uint64_t *len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: kexec/crashdump.h:5:
+extern int get_kernel_vmcoreinfo(uint64_t *addr, uint64_t *len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388229.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 8 checks, 83 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388229.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
