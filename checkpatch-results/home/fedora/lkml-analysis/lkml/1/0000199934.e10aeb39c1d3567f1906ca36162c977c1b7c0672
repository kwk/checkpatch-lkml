WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#253: FILE: arch/x86/kernel/signal_32.c:195:
+} __attribute__((packed)) retcode = {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#267: FILE: arch/x86/kernel/signal_32.c:206:
+} __attribute__((packed)) rt_retcode = {

CHECK:BRACES: braces {} should be used on all arms of this statement
#307: FILE: arch/x86/kernel/signal_32.c:419:
+	if (used_math()) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#309: FILE: arch/x86/kernel/signal_32.c:421:
+		frame = (void __user *)round_down(

CHECK:BRACES: Unbalanced braces around else statement
#314: FILE: arch/x86/kernel/signal_32.c:426:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#339: FILE: arch/x86/kernel/signal_32.c:451:
+	/* Set up to return from userspace.  If provided, use a stub
+	   already in userspace.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#339: FILE: arch/x86/kernel/signal_32.c:451:
+	   already in userspace.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#357: FILE: arch/x86/kernel/signal_32.c:469:
+	/* This also works for non SA_SIGINFO handlers because they expect the
+	   next argument after the signal number on the stack. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#357: FILE: arch/x86/kernel/signal_32.c:469:
+	   next argument after the signal number on the stack. */

CHECK:SPACING: No space is necessary after a cast
#360: FILE: arch/x86/kernel/signal_32.c:472:
+	regs->ip = (unsigned long) ka->sa.sa_handler;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#365: FILE: arch/x86/kernel/signal_32.c:477:
+	/* Set up the CS register to run signal handlers in 64-bit mode,
+	   even if the handler happens to be interrupting 32-bit code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#365: FILE: arch/x86/kernel/signal_32.c:477:
+	   even if the handler happens to be interrupting 32-bit code. */

CHECK:SPACING: No space is necessary after a cast
#459: FILE: arch/x86/kernel/signal_32.c:571:
+	regs = (struct pt_regs *) &__unused;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#465: FILE: arch/x86/kernel/signal_32.c:577:
+	if (__get_user(set.sig[0], &frame->sc.oldmask) || (_NSIG_WORDS > 1
+		&& __copy_from_user(&set.sig[1], &frame->extramask,

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#480: FILE: arch/x86/kernel/signal_32.c:592:
+	if (show_unhandled_signals && printk_ratelimit()) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: arch/x86/kernel/signal_32.c:593:
+		printk("%s%s[%d] bad frame in sigreturn frame:"

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: arch/x86/kernel/signal_32.c:594:
+		printk("%s%s[%d] bad frame in sigreturn frame:"
+			"%p ip:%lx sp:%lx oeax:%lx",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#487: FILE: arch/x86/kernel/signal_32.c:599:
+		printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#487: FILE: arch/x86/kernel/signal_32.c:599:
+		printk(KERN_CONT "\n");

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#559: FILE: arch/x86/kernel/signal_64.c:185:
+} __attribute__((packed)) retcode = {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#570: FILE: arch/x86/kernel/signal_64.c:196:
+} __attribute__((packed)) rt_retcode = {

CHECK:SPACING: No space is necessary after a cast
#599: FILE: arch/x86/kernel/signal_64.c:220:
+		return (void __user *) -1L;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: arch/x86/kernel/signal_64.c:229:
+		if ((regs->ss & 0xffff) != __USER_DS &&
+			!(ka->sa.sa_flags & SA_RESTORER) &&

CHECK:SPACING: No space is necessary after a cast
#618: FILE: arch/x86/kernel/signal_64.c:231:
+			sp = (unsigned long) ka->sa.sa_restorer;

CHECK:SPACING: No space is necessary after a cast
#623: FILE: arch/x86/kernel/signal_64.c:236:
+		*fpstate = (struct _fpstate *) sp;

CHECK:SPACING: No space is necessary after a cast
#635: FILE: arch/x86/kernel/signal_64.c:248:
+	return (void __user *) sp;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199934.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 11 checks, 832 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199934.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
