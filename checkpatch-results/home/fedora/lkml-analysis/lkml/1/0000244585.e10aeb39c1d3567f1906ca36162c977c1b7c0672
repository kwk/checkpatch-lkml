ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)'
#26: 
Signed-off-by: Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: debug/mdb-list.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#33: FILE: debug/mdb-list.h:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: debug/mdb-list.h:28:
+*   suggestions, and comments about this software.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#68: FILE: debug/mdb-list.h:38:
+typedef struct _ACCELERATOR

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#69: FILE: debug/mdb-list.h:39:
+typedef struct _ACCELERATOR
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: debug/mdb-list.h:40:
+    struct _ACCELERATOR *accelNext;$

CHECK:CAMELCASE: Avoid CamelCase: <accelNext>
#70: FILE: debug/mdb-list.h:40:
+    struct _ACCELERATOR *accelNext;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: debug/mdb-list.h:41:
+    struct _ACCELERATOR *accelPrior;$

CHECK:CAMELCASE: Avoid CamelCase: <accelPrior>
#71: FILE: debug/mdb-list.h:41:
+    struct _ACCELERATOR *accelPrior;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: debug/mdb-list.h:42:
+    unsigned long (*accelRoutine)(unsigned long key, void *p, struct _ACCELERATOR *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <accelRoutine>
#72: FILE: debug/mdb-list.h:42:
+    unsigned long (*accelRoutine)(unsigned long key, void *p, struct _ACCELERATOR *parser);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: debug/mdb-list.h:43:
+    unsigned long (*accelRoutineHelp)(unsigned long key, struct _ACCELERATOR *parser);$

CHECK:CAMELCASE: Avoid CamelCase: <accelRoutineHelp>
#73: FILE: debug/mdb-list.h:43:
+    unsigned long (*accelRoutineHelp)(unsigned long key, struct _ACCELERATOR *parser);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: debug/mdb-list.h:44:
+    unsigned long accelFlags;$

CHECK:CAMELCASE: Avoid CamelCase: <accelFlags>
#74: FILE: debug/mdb-list.h:44:
+    unsigned long accelFlags;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: debug/mdb-list.h:45:
+    unsigned long key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: debug/mdb-list.h:46:
+    unsigned long supervisorCommand;$

CHECK:CAMELCASE: Avoid CamelCase: <supervisorCommand>
#76: FILE: debug/mdb-list.h:46:
+    unsigned long supervisorCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: debug/mdb-list.h:47:
+    unsigned char *shortHelp;$

CHECK:CAMELCASE: Avoid CamelCase: <shortHelp>
#77: FILE: debug/mdb-list.h:47:
+    unsigned char *shortHelp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: debug/mdb-list.h:50:
+typedef struct _ALT_DEBUGGER $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#80: FILE: debug/mdb-list.h:50:
+typedef struct _ALT_DEBUGGER 

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#81: FILE: debug/mdb-list.h:51:
+typedef struct _ALT_DEBUGGER 
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: debug/mdb-list.h:52:
+    struct _ALT_DEBUGGER *altDebugNext;$

CHECK:CAMELCASE: Avoid CamelCase: <altDebugNext>
#82: FILE: debug/mdb-list.h:52:
+    struct _ALT_DEBUGGER *altDebugNext;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: debug/mdb-list.h:53:
+    struct _ALT_DEBUGGER *altDebugPrior;$

CHECK:CAMELCASE: Avoid CamelCase: <altDebugPrior>
#83: FILE: debug/mdb-list.h:53:
+    struct _ALT_DEBUGGER *altDebugPrior;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: debug/mdb-list.h:54:
+    int (*AlternateDebugger)(int reason, int error, void *frame);$

CHECK:CAMELCASE: Avoid CamelCase: <AlternateDebugger>
#84: FILE: debug/mdb-list.h:54:
+    int (*AlternateDebugger)(int reason, int error, void *frame);

CHECK:CAMELCASE: Avoid CamelCase: <AlternateDebuggerRoutine>
#87: FILE: debug/mdb-list.h:57:
+extern int AlternateDebuggerRoutine(int reason, int error, void *frame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: debug/mdb-list.h:57:
+extern int AlternateDebuggerRoutine(int reason, int error, void *frame);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <AddAlternateDebugger>
#88: FILE: debug/mdb-list.h:58:
+extern unsigned long AddAlternateDebugger(ALT_DEBUGGER *Debugger);

CHECK:CAMELCASE: Avoid CamelCase: <Debugger>
#88: FILE: debug/mdb-list.h:58:
+extern unsigned long AddAlternateDebugger(ALT_DEBUGGER *Debugger);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: debug/mdb-list.h:58:
+extern unsigned long AddAlternateDebugger(ALT_DEBUGGER *Debugger);

CHECK:CAMELCASE: Avoid CamelCase: <RemoveAlternateDebugger>
#89: FILE: debug/mdb-list.h:59:
+extern unsigned long RemoveAlternateDebugger(ALT_DEBUGGER *Debugger);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: debug/mdb-list.h:59:
+extern unsigned long RemoveAlternateDebugger(ALT_DEBUGGER *Debugger);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#91: FILE: debug/mdb-list.h:61:
+typedef struct _DEBUGGER_PARSER {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: debug/mdb-list.h:62:
+    struct _DEBUGGER_PARSER *debugNext;$

CHECK:CAMELCASE: Avoid CamelCase: <debugNext>
#92: FILE: debug/mdb-list.h:62:
+    struct _DEBUGGER_PARSER *debugNext;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: debug/mdb-list.h:63:
+    struct _DEBUGGER_PARSER *debugPrior;$

CHECK:CAMELCASE: Avoid CamelCase: <debugPrior>
#93: FILE: debug/mdb-list.h:63:
+    struct _DEBUGGER_PARSER *debugPrior;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: debug/mdb-list.h:64:
+    unsigned long (*DebugCommandParser)(unsigned char *commandLine,$

CHECK:CAMELCASE: Avoid CamelCase: <DebugCommandParser>
#94: FILE: debug/mdb-list.h:64:
+    unsigned long (*DebugCommandParser)(unsigned char *commandLine,

CHECK:CAMELCASE: Avoid CamelCase: <commandLine>
#94: FILE: debug/mdb-list.h:64:
+    unsigned long (*DebugCommandParser)(unsigned char *commandLine,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: debug/mdb-list.h:65:
+    unsigned long (*DebugCommandParser)(unsigned char *commandLine,
+			       StackFrame *stackFrame, unsigned long Exception,

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#95: FILE: debug/mdb-list.h:65:
+			       StackFrame *stackFrame, unsigned long Exception,

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#95: FILE: debug/mdb-list.h:65:
+			       StackFrame *stackFrame, unsigned long Exception,

CHECK:CAMELCASE: Avoid CamelCase: <Exception>
#95: FILE: debug/mdb-list.h:65:
+			       StackFrame *stackFrame, unsigned long Exception,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: debug/mdb-list.h:67:
+    unsigned long (*DebugCommandParserHelp)(unsigned char *commandLine,$

CHECK:CAMELCASE: Avoid CamelCase: <DebugCommandParserHelp>
#97: FILE: debug/mdb-list.h:67:
+    unsigned long (*DebugCommandParserHelp)(unsigned char *commandLine,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: debug/mdb-list.h:68:
+    unsigned long (*DebugCommandParserHelp)(unsigned char *commandLine,
+				   struct _DEBUGGER_PARSER *parser);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: debug/mdb-list.h:69:
+    unsigned long parserFlags;$

CHECK:CAMELCASE: Avoid CamelCase: <parserFlags>
#99: FILE: debug/mdb-list.h:69:
+    unsigned long parserFlags;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: debug/mdb-list.h:70:
+    unsigned char *debugCommandName;$

CHECK:CAMELCASE: Avoid CamelCase: <debugCommandName>
#100: FILE: debug/mdb-list.h:70:
+    unsigned char *debugCommandName;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: debug/mdb-list.h:71:
+    unsigned long debugCommandNameLength;$

CHECK:CAMELCASE: Avoid CamelCase: <debugCommandNameLength>
#101: FILE: debug/mdb-list.h:71:
+    unsigned long debugCommandNameLength;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: debug/mdb-list.h:72:
+    unsigned long supervisorCommand;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: debug/mdb-list.h:73:
+    unsigned char *shortHelp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: debug/mdb-list.h:74:
+    unsigned long controlTransfer;$

CHECK:CAMELCASE: Avoid CamelCase: <controlTransfer>
#104: FILE: debug/mdb-list.h:74:
+    unsigned long controlTransfer;

CHECK:CAMELCASE: Avoid CamelCase: <DebuggerParserRoutine>
#107: FILE: debug/mdb-list.h:77:
+extern unsigned long DebuggerParserRoutine(unsigned char *command, unsigned char *commandLine,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: debug/mdb-list.h:77:
+extern unsigned long DebuggerParserRoutine(unsigned char *command, unsigned char *commandLine,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: debug/mdb-list.h:78:
+extern unsigned long DebuggerParserRoutine(unsigned char *command, unsigned char *commandLine,
+			   StackFrame *stackFrame, unsigned long Exception);

CHECK:CAMELCASE: Avoid CamelCase: <DebuggerParserHelpRoutine>
#109: FILE: debug/mdb-list.h:79:
+extern unsigned long DebuggerParserHelpRoutine(unsigned char *command, unsigned char *commandLine);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: debug/mdb-list.h:79:
+extern unsigned long DebuggerParserHelpRoutine(unsigned char *command, unsigned char *commandLine);

CHECK:CAMELCASE: Avoid CamelCase: <AddDebuggerCommandParser>
#110: FILE: debug/mdb-list.h:80:
+extern unsigned long AddDebuggerCommandParser(DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: debug/mdb-list.h:80:
+extern unsigned long AddDebuggerCommandParser(DEBUGGER_PARSER *parser);

CHECK:CAMELCASE: Avoid CamelCase: <RemoveDebuggerCommandParser>
#111: FILE: debug/mdb-list.h:81:
+extern unsigned long RemoveDebuggerCommandParser(DEBUGGER_PARSER *parser);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: debug/mdb-list.h:81:
+extern unsigned long RemoveDebuggerCommandParser(DEBUGGER_PARSER *parser);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000244585.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 26 warnings, 40 checks, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000244585.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
