WARNING:BAD_SIGN_OFF: Duplicate signature
#342: 
Signed-off-by: Jeff Dike <jdike@linux.intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#366: FILE: include/asm-i386/cmpxchg.h:1:
+#ifndef __ASM_CMPXCHG_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: include/asm-i386/cmpxchg.h:6:
+#define xchg(ptr,v) ((__typeof__(*(ptr)))__xchg((unsigned long)(v),(ptr),sizeof(*(ptr))))
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: include/asm-i386/cmpxchg.h:6:
+#define xchg(ptr,v) ((__typeof__(*(ptr)))__xchg((unsigned long)(v),(ptr),sizeof(*(ptr))))
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: include/asm-i386/cmpxchg.h:6:
+#define xchg(ptr,v) ((__typeof__(*(ptr)))__xchg((unsigned long)(v),(ptr),sizeof(*(ptr))))
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#371: FILE: include/asm-i386/cmpxchg.h:6:
+#define xchg(ptr,v) ((__typeof__(*(ptr)))__xchg((unsigned long)(v),(ptr),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: include/asm-i386/cmpxchg.h:8:
+#define tas(ptr) (xchg((ptr),1))
                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#378: FILE: include/asm-i386/cmpxchg.h:13:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: include/asm-i386/cmpxchg.h:30:
+static inline void __set_64bit (unsigned long long * ptr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: include/asm-i386/cmpxchg.h:30:
+static inline void __set_64bit (unsigned long long * ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: include/asm-i386/cmpxchg.h:31:
+static inline void __set_64bit (unsigned long long * ptr,
+		unsigned int low, unsigned int high)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#398: FILE: include/asm-i386/cmpxchg.h:33:
+	__asm__ __volatile__ (

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: include/asm-i386/cmpxchg.h:43:
+		:	"ax","dx","memory");
 		 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: include/asm-i386/cmpxchg.h:43:
+		:	"ax","dx","memory");
 		 	         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: include/asm-i386/cmpxchg.h:46:
+static inline void __set_64bit_constant (unsigned long long *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: include/asm-i386/cmpxchg.h:47:
+static inline void __set_64bit_constant (unsigned long long *ptr,
+						 unsigned long long value)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#414: FILE: include/asm-i386/cmpxchg.h:49:
+	__set_64bit(ptr,(unsigned int)(value), (unsigned int)((value)>>32ULL));
 	               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#414: FILE: include/asm-i386/cmpxchg.h:49:
+	__set_64bit(ptr,(unsigned int)(value), (unsigned int)((value)>>32ULL));
 	                                                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#416: FILE: include/asm-i386/cmpxchg.h:51:
+}
+#define ll_low(x)	*(((unsigned int*)&(x))+0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#416: FILE: include/asm-i386/cmpxchg.h:51:
+#define ll_low(x)	*(((unsigned int*)&(x))+0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#416: FILE: include/asm-i386/cmpxchg.h:51:
+#define ll_low(x)	*(((unsigned int*)&(x))+0)
                  	                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#416: FILE: include/asm-i386/cmpxchg.h:51:
+#define ll_low(x)	*(((unsigned int*)&(x))+0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#417: FILE: include/asm-i386/cmpxchg.h:52:
+#define ll_high(x)	*(((unsigned int*)&(x))+1)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: include/asm-i386/cmpxchg.h:52:
+#define ll_high(x)	*(((unsigned int*)&(x))+1)
                   	                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#417: FILE: include/asm-i386/cmpxchg.h:52:
+#define ll_high(x)	*(((unsigned int*)&(x))+1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: include/asm-i386/cmpxchg.h:54:
+static inline void __set_64bit_var (unsigned long long *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: include/asm-i386/cmpxchg.h:55:
+static inline void __set_64bit_var (unsigned long long *ptr,
+			 unsigned long long value)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#422: FILE: include/asm-i386/cmpxchg.h:57:
+	__set_64bit(ptr,ll_low(value), ll_high(value));
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: include/asm-i386/cmpxchg.h:60:
+#define set_64bit(ptr,value) \
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#425: FILE: include/asm-i386/cmpxchg.h:60:
+#define set_64bit(ptr,value) \
+(__builtin_constant_p(value) ? \
+ __set_64bit_constant(ptr, value) : \
+ __set_64bit_var(ptr, value) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#425: FILE: include/asm-i386/cmpxchg.h:60:
+#define set_64bit(ptr,value) \
+(__builtin_constant_p(value) ? \
+ __set_64bit_constant(ptr, value) : \
+ __set_64bit_var(ptr, value) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: include/asm-i386/cmpxchg.h:62:
+ __set_64bit_constant(ptr, value) : \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: include/asm-i386/cmpxchg.h:63:
+ __set_64bit_var(ptr, value) )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#428: FILE: include/asm-i386/cmpxchg.h:63:
+ __set_64bit_var(ptr, value) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: include/asm-i386/cmpxchg.h:65:
+#define _set_64bit(ptr,value) \
                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#430: FILE: include/asm-i386/cmpxchg.h:65:
+#define _set_64bit(ptr,value) \
+(__builtin_constant_p(value) ? \
+ __set_64bit(ptr, (unsigned int)(value), (unsigned int)((value)>>32ULL) ) : \
+ __set_64bit(ptr, ll_low(value), ll_high(value)) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#430: FILE: include/asm-i386/cmpxchg.h:65:
+#define _set_64bit(ptr,value) \
+(__builtin_constant_p(value) ? \
+ __set_64bit(ptr, (unsigned int)(value), (unsigned int)((value)>>32ULL) ) : \
+ __set_64bit(ptr, ll_low(value), ll_high(value)) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: include/asm-i386/cmpxchg.h:67:
+ __set_64bit(ptr, (unsigned int)(value), (unsigned int)((value)>>32ULL) ) : \$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#432: FILE: include/asm-i386/cmpxchg.h:67:
+ __set_64bit(ptr, (unsigned int)(value), (unsigned int)((value)>>32ULL) ) : \
                                                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#432: FILE: include/asm-i386/cmpxchg.h:67:
+ __set_64bit(ptr, (unsigned int)(value), (unsigned int)((value)>>32ULL) ) : \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: include/asm-i386/cmpxchg.h:68:
+ __set_64bit(ptr, ll_low(value), ll_high(value)) )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#433: FILE: include/asm-i386/cmpxchg.h:68:
+ __set_64bit(ptr, ll_low(value), ll_high(value)) )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: include/asm-i386/cmpxchg.h:77:
+static inline unsigned long __xchg(unsigned long x, volatile void * ptr, int size)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#442: FILE: include/asm-i386/cmpxchg.h:77:
+static inline unsigned long __xchg(unsigned long x, volatile void * ptr, int size)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#444: FILE: include/asm-i386/cmpxchg.h:79:
+	switch (size) {
+		case 1:
[...]
+		case 2:
[...]
+		case 4:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#447: FILE: include/asm-i386/cmpxchg.h:82:
+				:"=q" (x)
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#448: FILE: include/asm-i386/cmpxchg.h:83:
+				:"m" (*__xg(ptr)), "0" (x)
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#449: FILE: include/asm-i386/cmpxchg.h:84:
+				:"memory");
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#453: FILE: include/asm-i386/cmpxchg.h:88:
+				:"=r" (x)
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#454: FILE: include/asm-i386/cmpxchg.h:89:
+				:"m" (*__xg(ptr)), "0" (x)
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#455: FILE: include/asm-i386/cmpxchg.h:90:
+				:"memory");
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#459: FILE: include/asm-i386/cmpxchg.h:94:
+				:"=r" (x)
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#460: FILE: include/asm-i386/cmpxchg.h:95:
+				:"m" (*__xg(ptr)), "0" (x)
 				^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#461: FILE: include/asm-i386/cmpxchg.h:96:
+				:"memory");
 				^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#475: FILE: include/asm-i386/cmpxchg.h:110:
+#define cmpxchg(ptr,o,n)\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#475: FILE: include/asm-i386/cmpxchg.h:110:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#475: FILE: include/asm-i386/cmpxchg.h:110:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: include/asm-i386/cmpxchg.h:111:
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: include/asm-i386/cmpxchg.h:112:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: include/asm-i386/cmpxchg.h:113:
+#define sync_cmpxchg(ptr,o,n)\
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: include/asm-i386/cmpxchg.h:113:
+#define sync_cmpxchg(ptr,o,n)\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#478: FILE: include/asm-i386/cmpxchg.h:113:
+#define sync_cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__sync_cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: include/asm-i386/cmpxchg.h:114:
+	((__typeof__(*(ptr)))__sync_cmpxchg((ptr),(unsigned long)(o),\
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: include/asm-i386/cmpxchg.h:115:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: include/asm-i386/cmpxchg.h:116:
+#define cmpxchg_local(ptr,o,n)\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: include/asm-i386/cmpxchg.h:116:
+#define cmpxchg_local(ptr,o,n)\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#481: FILE: include/asm-i386/cmpxchg.h:116:
+#define cmpxchg_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: include/asm-i386/cmpxchg.h:117:
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: include/asm-i386/cmpxchg.h:118:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#486: FILE: include/asm-i386/cmpxchg.h:121:
+static inline unsigned long __cmpxchg(volatile void *ptr, unsigned long old,

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: include/asm-i386/cmpxchg.h:125:
+	unsigned long prev;
+	switch (size) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#518: FILE: include/asm-i386/cmpxchg.h:153:
+static inline unsigned long __sync_cmpxchg(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: include/asm-i386/cmpxchg.h:154:
+static inline unsigned long __sync_cmpxchg(volatile void *ptr,
+					    unsigned long old,

WARNING:LINE_SPACING: Missing a blank line after declarations
#523: FILE: include/asm-i386/cmpxchg.h:158:
+	unsigned long prev;
+	switch (size) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#546: FILE: include/asm-i386/cmpxchg.h:181:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: include/asm-i386/cmpxchg.h:182:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,
+			unsigned long old, unsigned long new, int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#550: FILE: include/asm-i386/cmpxchg.h:185:
+	unsigned long prev;
+	switch (size) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#580: FILE: include/asm-i386/cmpxchg.h:215:
+extern unsigned long cmpxchg_386_u8(volatile void *, u8, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#580: FILE: include/asm-i386/cmpxchg.h:215:
+extern unsigned long cmpxchg_386_u8(volatile void *, u8, u8);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#581: FILE: include/asm-i386/cmpxchg.h:216:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#581: FILE: include/asm-i386/cmpxchg.h:216:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void *' should also have an identifier name
#581: FILE: include/asm-i386/cmpxchg.h:216:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#581: FILE: include/asm-i386/cmpxchg.h:216:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#581: FILE: include/asm-i386/cmpxchg.h:216:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#582: FILE: include/asm-i386/cmpxchg.h:217:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#582: FILE: include/asm-i386/cmpxchg.h:217:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void *' should also have an identifier name
#582: FILE: include/asm-i386/cmpxchg.h:217:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#582: FILE: include/asm-i386/cmpxchg.h:217:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#582: FILE: include/asm-i386/cmpxchg.h:217:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#584: FILE: include/asm-i386/cmpxchg.h:219:
+static inline unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: include/asm-i386/cmpxchg.h:220:
+static inline unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,
+				      unsigned long new, int size)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: include/asm-i386/cmpxchg.h:233:
+#define cmpxchg(ptr,o,n)						\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: include/asm-i386/cmpxchg.h:233:
+#define cmpxchg(ptr,o,n)						\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#598: FILE: include/asm-i386/cmpxchg.h:233:
+#define cmpxchg(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'o' - possible side-effects?
#598: FILE: include/asm-i386/cmpxchg.h:233:
+#define cmpxchg(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#598: FILE: include/asm-i386/cmpxchg.h:233:
+#define cmpxchg(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: include/asm-i386/cmpxchg.h:244:
+#define cmpxchg_local(ptr,o,n)						\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: include/asm-i386/cmpxchg.h:244:
+#define cmpxchg_local(ptr,o,n)						\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#609: FILE: include/asm-i386/cmpxchg.h:244:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'o' - possible side-effects?
#609: FILE: include/asm-i386/cmpxchg.h:244:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#609: FILE: include/asm-i386/cmpxchg.h:244:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#624: FILE: include/asm-i386/cmpxchg.h:259:
+static inline unsigned long long __cmpxchg64(volatile void *ptr, unsigned long long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: include/asm-i386/cmpxchg.h:260:
+static inline unsigned long long __cmpxchg64(volatile void *ptr, unsigned long long old,
+				      unsigned long long new)

WARNING:LINE_SPACING: Missing a blank line after declarations
#628: FILE: include/asm-i386/cmpxchg.h:263:
+	unsigned long long prev;
+	__asm__ __volatile__(LOCK_PREFIX "cmpxchg8b %3"

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#638: FILE: include/asm-i386/cmpxchg.h:273:
+static inline unsigned long long __cmpxchg64_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: include/asm-i386/cmpxchg.h:274:
+static inline unsigned long long __cmpxchg64_local(volatile void *ptr,
+			unsigned long long old, unsigned long long new)

WARNING:LINE_SPACING: Missing a blank line after declarations
#642: FILE: include/asm-i386/cmpxchg.h:277:
+	unsigned long long prev;
+	__asm__ __volatile__("cmpxchg8b %3"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#652: FILE: include/asm-i386/cmpxchg.h:287:
+#define cmpxchg64(ptr,o,n)\
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#652: FILE: include/asm-i386/cmpxchg.h:287:
+#define cmpxchg64(ptr,o,n)\
                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#652: FILE: include/asm-i386/cmpxchg.h:287:
+#define cmpxchg64(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg64((ptr),(unsigned long long)(o),\
+					(unsigned long long)(n)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: include/asm-i386/cmpxchg.h:288:
+	((__typeof__(*(ptr)))__cmpxchg64((ptr),(unsigned long long)(o),\
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#655: FILE: include/asm-i386/cmpxchg.h:290:
+#define cmpxchg64_local(ptr,o,n)\
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#655: FILE: include/asm-i386/cmpxchg.h:290:
+#define cmpxchg64_local(ptr,o,n)\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#655: FILE: include/asm-i386/cmpxchg.h:290:
+#define cmpxchg64_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg64_local((ptr),(unsigned long long)(o),\
+					(unsigned long long)(n)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#656: FILE: include/asm-i386/cmpxchg.h:291:
+	((__typeof__(*(ptr)))__cmpxchg64_local((ptr),(unsigned long long)(o),\
 	                                            ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 51 errors, 30 warnings, 34 checks, 757 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437001.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
