WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#define FD_UNSEQ_BASE	(1U << 28)

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'ioclt' may be misspelled - perhaps 'ioctl'?
#34: 
The sys_dup2() system call (and the F_DUPFD ioclt) understand values from
                                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
In sys_dup2(), if the FD_UNSEQ_ALLOC bit of "newfd" is set, the syscall will

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#define FD_UNSEQ_ALLOC	(1U << 30)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/file.h:92:
+extern struct fd_map *files_fdmap_alloc(struct files_struct *files,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/file.h:94:
+extern int __get_unused_fd_unseq(struct files_struct *files, int fd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/file.h:96:
+extern int get_unused_fd_unseq(struct files_struct *files, int fd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/file.h:100:
+extern struct file *fcheck_files(struct files_struct *files, unsigned int fd);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#133: FILE: include/linux/file.h:112:
+	return files->fmap ? files->fmap: files_fdmap_alloc(files, 0);
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#151: FILE: fs/fcntl.c:32:
+		fdmap_set_fdflags(files->fmap, fd, flag ? 0: FDMAP_F_CLOEXEC,
 		                                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#152: FILE: fs/fcntl.c:33:
+				  flag ? FDMAP_F_CLOEXEC: 0);
 				                        ^

CHECK:BRACES: Unbalanced braces around else statement
#153: FILE: fs/fcntl.c:34:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#174: FILE: fs/fcntl.c:53:
+	if (fmap && fdmap_fdof(fmap, fd))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#176: FILE: fs/fcntl.c:55:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#242: FILE: fs/fcntl.c:130:
+	if (start >= FD_UNSEQ_BASE)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#244: FILE: fs/fcntl.c:132:
+	else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: fs/fcntl.c:153:
+	struct file * file, *tofree = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: fs/fcntl.c:170:
+			err = __get_unused_fd_unseq(files,
+				newfd & FD_UNSEQ_ALLOC ? FDMAP_HINT_ANY:

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#299: FILE: fs/fcntl.c:170:
+				newfd & FD_UNSEQ_ALLOC ? FDMAP_HINT_ANY:
 				                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: fs/fcntl.c:192:
+		 * done.  --sct */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#338: FILE: fs/fcntl.c:199:
+		if (FD_ISSET(newfd, fdt->open_fds)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#341: FILE: fs/fcntl.c:202:
+		} else

CHECK:SPACING: No space is necessary after a cast
#393: FILE: kernel/exit.c:422:
+	filp_close(file, (struct files_struct *) priv);

CHECK:BRACES: braces {} should be used on all arms of this statement
#516: FILE: fs/open.c:951:
+		if (nfmap) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#525: FILE: fs/open.c:960:
+		} else

WARNING:TYPO_SPELLING: 'temporarly' may be misspelled - perhaps 'temporarily'?
#543: FILE: fs/open.c:978:
+ * descriptor map should be resized, the held lock will be temporarly released
                                                            ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: fs/open.c:1023:
+int get_unused_fd_unseq(struct files_struct *files, int fd,
+			 unsigned long flags)

CHECK:BRACES: braces {} should be used on all arms of this statement
#603: FILE: fs/open.c:1038:
+	if (fmap && fdmap_fdof(fmap, fd))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#605: FILE: fs/open.c:1040:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#627: FILE: fs/open.c:1070:
+		BUG_ON(fdt->fd[fd] != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fdt->fd[fd]"
#627: FILE: fs/open.c:1070:
+		BUG_ON(fdt->fd[fd] != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#646: FILE: fs/open.c:1179:
+		filp = fdmap_file_get(files->fmap, fd);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#647: FILE: fs/open.c:1180:
+		if (!filp)
 		     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#653: FILE: fs/open.c:1186:
+		filp = fdt->fd[fd];
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#654: FILE: fs/open.c:1187:
+		if (!filp)
 		     ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#729: FILE: include/linux/init_task.h:31:
+^I.fd_array^I= { NULL, }, ^I^I^I\$

CHECK:BIT_MACRO: Prefer using the BIT macro
#758: FILE: include/asm-generic/fcntl.h:9:
+#define FD_UNSEQ_BASE	(1U << 28)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'Speacial' may be misspelled - perhaps 'Special'?
#761: FILE: include/asm-generic/fcntl.h:12:
+ * Speacial value for non sequential file descriptors, to tell to
    ^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#764: FILE: include/asm-generic/fcntl.h:15:
+#define FD_UNSEQ_ALLOC	(1U << 30)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 13 warnings, 21 checks, 687 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
