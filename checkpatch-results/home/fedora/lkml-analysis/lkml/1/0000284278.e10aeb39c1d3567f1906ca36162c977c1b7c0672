WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#134: FILE: drivers/hwmon/ibmaem.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#152: FILE: drivers/hwmon/ibmaem.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#153: FILE: drivers/hwmon/ibmaem.c:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#258: FILE: drivers/hwmon/ibmaem.c:125:
+	struct mutex		lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#334: FILE: drivers/hwmon/ibmaem.c:201:
+};
+static struct aem_iana_id system_x_id = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#344: FILE: drivers/hwmon/ibmaem.c:211:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#349: FILE: drivers/hwmon/ibmaem.c:216:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#356: FILE: drivers/hwmon/ibmaem.c:223:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#365: FILE: drivers/hwmon/ibmaem.c:232:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#375: FILE: drivers/hwmon/ibmaem.c:242:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#380: FILE: drivers/hwmon/ibmaem.c:247:
+} __attribute__ ((packed));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: drivers/hwmon/ibmaem.c:274:
+static int aem_init_ipmi_data(struct aem_ipmi_data *data,
+				 int iface, struct device *bmc)

WARNING:SPLIT_STRING: quoted string split across lines
#429: FILE: drivers/hwmon/ibmaem.c:296:
+		dev_err(bmc, "Unable to register user with IPMI "
+			"interface %d\n", data->interface);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/hwmon/ibmaem.c:366:
+		dev_err(data->bmc_device, "Mismatch between received msgid "
+			"(%02x) and transmitted msgid (%02x)!\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#512: FILE: drivers/hwmon/ibmaem.c:379:
+	if (msg->msg.data_len > 1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#518: FILE: drivers/hwmon/ibmaem.c:385:
+	} else

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#567: FILE: drivers/hwmon/ibmaem.c:434:
+static SENSOR_DEVICE_ATTR(name, S_IRUGO, show_name, NULL, 0);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPLIT_STRING: quoted string split across lines
#649: FILE: drivers/hwmon/ibmaem.c:516:
+		dev_err(&data->fw.pdev->dev, "Unable to register hwmon "
+			"device for IPMI interface %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: drivers/hwmon/ibmaem.c:585:
+static int aem_find_aem2(struct aem_ipmi_data *data,
+			    struct aem_find_instance_resp *fi_resp,

WARNING:SPLIT_STRING: quoted string split across lines
#796: FILE: drivers/hwmon/ibmaem.c:663:
+		dev_err(&data->fw.pdev->dev, "Unable to register hwmon "
+			"device for IPMI interface %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#837: FILE: drivers/hwmon/ibmaem.c:704:
+			dev_err(probe->bmc_device, "Unknown AEM v%d; please "
+				"report this to the maintainer.\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#989: FILE: drivers/hwmon/ibmaem.c:856:
+	struct type##_data * a = container_of(fwdata, \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1022: FILE: drivers/hwmon/ibmaem.c:889:
+	struct type##_data * a = container_of(fwdata, struct type##_data, fw); \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1036: FILE: drivers/hwmon/ibmaem.c:903:
+	struct type##_data * a = container_of(fwdata, struct type##_data, fw); \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1050: FILE: drivers/hwmon/ibmaem.c:917:
+	struct type##_data * a = container_of(fwdata, struct type##_data, fw); \

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1051: FILE: drivers/hwmon/ibmaem.c:918:
+	int temp = simple_strtol(buf, NULL, 10); \

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'num_sensors' may be better as '(num_sensors)' to avoid precedence issues
#1064: FILE: drivers/hwmon/ibmaem.c:931:
+#define AEM_REMOVE_SENSORS(type, num_sensors) \
+static void type##_remove_sensors(struct type##_data *data) \
+{ \
+	int i; \
+\
+	for (i = 0; i < num_sensors; i++) { \
+		if (!data->sensors[i].dev_attr.attr.name) \
+			continue; \
+		device_remove_file(&data->fw.pdev->dev, \
+				   &data->sensors[i].dev_attr); \
+	} \
+\
+	device_remove_file(&data->fw.pdev->dev, \
+			   &sensor_dev_attr_name.dev_attr); \
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1092: FILE: drivers/hwmon/ibmaem.c:959:
+		sensors[idx].dev_attr.attr.mode = S_IRUGO;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1108: FILE: drivers/hwmon/ibmaem.c:975:
+		sensors[idx].dev_attr.attr.mode = S_IRUGO | S_IWUSR;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1174: FILE: drivers/hwmon/ibmaem.c:1041:
+	struct aem2_data *a2 = container_of(fwdata, struct aem2_data, fw);
+	update_aem2_sensors(a2);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1187: FILE: drivers/hwmon/ibmaem.c:1054:
+	struct aem2_data *a2 = container_of(fwdata, struct aem2_data, fw);
+	update_aem2_sensors(a2);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1235: FILE: drivers/hwmon/ibmaem.c:1102:
+{"power3_average", ^I  aem2_show_pcap_value,^IPOWER_AUX},$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1257: FILE: drivers/hwmon/ibmaem.c:1124:
+		printk(KERN_ERR "Can't register aem_driver\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1270: FILE: drivers/hwmon/ibmaem.c:1137:
+
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 21 warnings, 8 checks, 1221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
