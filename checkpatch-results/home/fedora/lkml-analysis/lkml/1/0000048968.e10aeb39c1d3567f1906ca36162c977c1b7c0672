WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
which doesn't look a sysctl file. Annotation can be viewed as a debug thing,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: fs/proc/panic-note.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: fs/proc/panic-note.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: fs/proc/panic-note.c:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:TYPO_SPELLING: 'inadvertant' may be misspelled - perhaps 'inadvertent'?
#113: FILE: fs/proc/panic-note.c:38:
+ * an inadvertant denial of service attack that might happen if someone with
       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: fs/proc/panic-note.c:41:
+ * suicide. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#134: FILE: fs/proc/panic-note.c:59:
+};
+static const struct file_operations panic_note_fops;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#135: FILE: fs/proc/panic-note.c:60:
+static struct inode_operations panic_note_iops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void panic_note_print() should probably be void panic_note_print(void)
#142: FILE: fs/proc/panic-note.c:67:
+void panic_note_print()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: fs/proc/panic-note.c:74:
+	 * by someone else */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nl"
#160: FILE: fs/proc/panic-note.c:85:
+		if (nl == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#185: FILE: fs/proc/panic-note.c:110:
+	if (pos >= size)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#188: FILE: fs/proc/panic-note.c:113:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#199: FILE: fs/proc/panic-note.c:124:
+ * @filp:	Pointer to information on the file
     ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: fs/proc/panic-note.c:126:
+ * ^I^Idata$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#208: FILE: fs/proc/panic-note.c:133:
+static ssize_t panic_note_read(struct file *filp, char __user *buf,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: fs/proc/panic-note.c:134:
+static ssize_t panic_note_read(struct file *filp, char __user *buf,
+	size_t nbytes, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#233: FILE: fs/proc/panic-note.c:158:
+ * @filp:	Pointer to information on the file
     ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: fs/proc/panic-note.c:160:
+ * ^I^Idata$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#242: FILE: fs/proc/panic-note.c:167:
+static ssize_t panic_note_write(struct file *filp, const char __user *buf,
                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: fs/proc/panic-note.c:168:
+static ssize_t panic_note_write(struct file *filp, const char __user *buf,
+	size_t nbytes, loff_t *ppos)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#252: FILE: fs/proc/panic-note.c:177:
+	 * add to the end. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: fs/proc/panic-note.c:182:
+	if (retval == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: fs/proc/panic-note.c:184:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: fs/proc/panic-note.c:188:
+			memset(panic_note_state.p + panic_note_state.n,
+				0, pos - panic_note_state.n);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: fs/proc/panic-note.c:192:
+		result = copy_from_user(panic_note_state.p + pos, buf,
+			retval);

CHECK:BRACES: braces {} should be used on all arms of this statement
#269: FILE: fs/proc/panic-note.c:194:
+		if (result != 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#271: FILE: fs/proc/panic-note.c:196:
+		else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#272: FILE: fs/proc/panic-note.c:197:
+		else {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: fs/proc/panic-note.c:199:
+			 * size */

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: fs/proc/panic-note.c:202:
+				struct inode *inode;
+				inode = filp->f_path.dentry->d_inode;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#290: FILE: fs/proc/panic-note.c:215:
+static int panic_note_open(struct inode *inode, struct file *filp)
                                                              ^^^^

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#314: FILE: fs/proc/panic-note.c:239:
+static struct inode_operations panic_note_iops = {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: fs/proc/panic-note.c:248:
+	 * it. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!panic_note_entry"
#326: FILE: fs/proc/panic-note.c:251:
+	if (panic_note_entry == NULL) {

WARNING:REPEATED_WORD: Possible repeated word: 'when'
#336: FILE: fs/proc/panic-note.c:261:
+	 * we won't be able to get when when the kernel runs out of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#337: FILE: fs/proc/panic-note.c:262:
+	 * memory. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!panic_note_state.p"
#340: FILE: fs/proc/panic-note.c:265:
+	if (panic_note_state.p == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "panic_note_state.p"
#359: FILE: fs/proc/panic-note.c:284:
+	if (panic_note_state.p != NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#378: FILE: include/linux/kernel.h:316:
+extern void panic_note_print(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#407: FILE: lib/Kconfig.debug:1048:
+config PANIC_NOTE
+	bool "Create file for user space data to be reported at panic time"
+	default n
+	help
+	  This creates a pseudo-file, named /proc/panic_note, into which
+	  user space data can be written. If a panic occurs, the contents
+	  of the file will be included in the failure report.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048968.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 22 warnings, 17 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048968.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
