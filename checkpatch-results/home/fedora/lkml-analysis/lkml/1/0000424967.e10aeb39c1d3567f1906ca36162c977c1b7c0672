WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#85: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/video/backlight/ltv350qv.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#167: FILE: drivers/video/backlight/ltv350qv.c:78:
+	msleep(15);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#245: FILE: drivers/video/backlight/ltv350qv.c:156:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#267: FILE: drivers/video/backlight/ltv350qv.c:178:
+	msleep(1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#320: FILE: drivers/video/backlight/ltv350qv.c:231:
+static int __devinit ltv350qv_probe(struct spi_device *spi)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lcd)...) over kzalloc(sizeof(struct ltv350qv)...)
#326: FILE: drivers/video/backlight/ltv350qv.c:237:
+	lcd = kzalloc(sizeof(struct ltv350qv), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#356: FILE: drivers/video/backlight/ltv350qv.c:267:
+static int __devexit ltv350qv_remove(struct spi_device *spi)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#436: FILE: drivers/video/backlight/ltv350qv.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#465: FILE: drivers/video/backlight/ltv350qv.h:30:
+#define LTV_IM			(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#466: FILE: drivers/video/backlight/ltv350qv.h:31:
+#define LTV_NMD			(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#467: FILE: drivers/video/backlight/ltv350qv.h:32:
+#define LTV_SSMD		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#468: FILE: drivers/video/backlight/ltv350qv.h:33:
+#define LTV_REV			(1 <<  7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#473: FILE: drivers/video/backlight/ltv350qv.h:38:
+#define LTV_DS_D_TO_S		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#476: FILE: drivers/video/backlight/ltv350qv.h:41:
+#define LTV_CHS_480		(1 <<  9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#479: FILE: drivers/video/backlight/ltv350qv.h:44:
+#define LTV_DF_RGBX		(1 <<  6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#482: FILE: drivers/video/backlight/ltv350qv.h:47:
+#define LTV_RGB_BGR		(1 <<  2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#488: FILE: drivers/video/backlight/ltv350qv.h:53:
+#define LTV_VSPL_ACTIVE_HIGH	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#490: FILE: drivers/video/backlight/ltv350qv.h:55:
+#define LTV_HSPL_ACTIVE_HIGH	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#492: FILE: drivers/video/backlight/ltv350qv.h:57:
+#define LTV_DPL_SAMPLE_FALLING	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#494: FILE: drivers/video/backlight/ltv350qv.h:59:
+#define LTV_EPL_ACTIVE_HIGH	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#496: FILE: drivers/video/backlight/ltv350qv.h:61:
+#define LTV_SS_RIGHT_TO_LEFT	(1 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#497: FILE: drivers/video/backlight/ltv350qv.h:62:
+#define LTV_STB			(1 <<  1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#501: FILE: drivers/video/backlight/ltv350qv.h:66:
+#define LTV_GAON		(1 <<  5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#502: FILE: drivers/video/backlight/ltv350qv.h:67:
+#define LTV_SDR			(1 <<  3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#506: FILE: drivers/video/backlight/ltv350qv.h:71:
+#define LTV_NW_INV_1LINE	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#508: FILE: drivers/video/backlight/ltv350qv.h:73:
+#define LTV_DSC			(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#509: FILE: drivers/video/backlight/ltv350qv.h:74:
+#define LTV_GIF			(1 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#510: FILE: drivers/video/backlight/ltv350qv.h:75:
+#define LTV_FHN			(1 <<  7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#519: FILE: drivers/video/backlight/ltv350qv.h:84:
+#define LTV_VCOM_DISABLE	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#520: FILE: drivers/video/backlight/ltv350qv.h:85:
+#define LTV_VCOMOUT_ENABLE	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#521: FILE: drivers/video/backlight/ltv350qv.h:86:
+#define LTV_POWER_ON		(1 <<  9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#526: FILE: drivers/video/backlight/ltv350qv.h:91:
+#define LTV_VCOML_ENABLE	(1 << 13)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424967.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 25 checks, 461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424967.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
