WARNING:REPEATED_WORD: Possible repeated word: 'ctxsw'
#47: 
                         ctxsw  ctxsw  ctxsw ctxsw  ctxsw   ctxsw   ctxsw

WARNING:REPEATED_WORD: Possible repeated word: 'ctxsw'
#61: 
                         ctxsw  ctxsw  ctxsw ctxsw  ctxsw   ctxsw   ctxsw

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#110: 
(7)	sum_{t}^{T}(time_{t}) = sum_{t}^{T}(round(time / weight_sum) * weight_{t})

WARNING:TYPO_SPELLING: 'bascially' may be misspelled - perhaps 'basically'?
#112: 
This is bascially what CFS currently does and it demonstrates the basic
        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Everytime' may be misspelled - perhaps 'Every time'?
#208: 
Everytime time_sum_off exceeds time_sum_max, time_sum_off and
^^^^^^^^^

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#248: 
similiar problem as FAIR_GROUP_SCHED, that enqueue_task/dequeue_task can
^^^^^^^^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#298: FILE: include/linux/sched.h:894:
+	unsigned int		on_rq, queued;;

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: kernel/sched.c:749:
+        3567, 3102, 2703, 2351, 2048, 1783, 1551, 1351, 1177, 1024,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: kernel/sched.c:749:
+        3567, 3102, 2703, 2351, 2048, 1783, 1551, 1351, 1177, 1024,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: kernel/sched.c:750:
+        892, 776, 676, 588, 512, 446, 388, 338, 294, 256,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: kernel/sched.c:750:
+        892, 776, 676, 588, 512, 446, 388, 338, 294, 256,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: kernel/sched.c:751:
+        223, 194, 169, 147, 128, 111, 97, 84, 74, 64,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: kernel/sched.c:751:
+        223, 194, 169, 147, 128, 111, 97, 84, 74, 64,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: kernel/sched.c:752:
+        56, 49, 42, 37, 32, 28, 24, 21, 18, 16$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: kernel/sched.c:752:
+        56, 49, 42, 37, 32, 28, 24, 21, 18, 16$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#496: FILE: kernel/sched.c:884:
+}
+static inline void dec_load(struct rq *rq, const struct task_struct *p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#638: FILE: kernel/sched.c:6567:
+		rq->ls.load_update_last = rq->ls.load_update_start = sched_clock();

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#668: FILE: kernel/sched_norm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#696: FILE: kernel/sched_norm.c:29:
+}
+static inline kclock_t kclock_min(kclock_t x, kclock_t y)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#718: FILE: kernel/sched_norm.c:51:
+unsigned int sysctl_sched_granularity __read_mostly = 2000000000ULL/HZ;
                                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#729: FILE: kernel/sched_norm.c:62:
+							10000000000ULL/HZ;
 							              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#739: FILE: kernel/sched_norm.c:72:
+unsigned int sysctl_sched_wakeup_granularity __read_mostly = 1000000000ULL/HZ;
                                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#761: FILE: kernel/sched_norm.c:94:
+		SCHED_FEAT_FAIR_SLEEPERS	*1 |
 		                        	^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#762: FILE: kernel/sched_norm.c:95:
+		SCHED_FEAT_SLEEPER_AVG		*1 |
 		                      		^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#763: FILE: kernel/sched_norm.c:96:
+		SCHED_FEAT_SLEEPER_LOAD_AVG	*1 |
 		                           	^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#764: FILE: kernel/sched_norm.c:97:
+		SCHED_FEAT_PRECISE_CPU_LOAD	*1 |
 		                           	^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#765: FILE: kernel/sched_norm.c:98:
+		SCHED_FEAT_START_DEBIT		*1 |
 		                      		^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#766: FILE: kernel/sched_norm.c:99:
+		SCHED_FEAT_SKIP_INITIAL		*0;
 		                       		^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#768: FILE: kernel/sched_norm.c:101:
+extern struct sched_class fair_sched_class;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#776: FILE: kernel/sched_norm.c:109:
+		avg += (kclock_t)((int)(cfs_rq->time_sum_off >> MSHIFT) / cfs_rq->weight_sum) << MSHIFT;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'se' may be better as '(se)' to avoid precedence issues
#794: FILE: kernel/sched_norm.c:127:
+#define entity_is_task(se)	(!se->my_q)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#812: FILE: kernel/sched_norm.c:145:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#829: FILE: kernel/sched_norm.c:162:
+	se->time_key = key = se->time_norm + (se->req_weight_inv >> 1);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#857: FILE: kernel/sched_norm.c:190:
+						     kclock_max(se->time_norm, cfs_rq->run_end_curr));

WARNING:LINE_SPACING: Missing a blank line after declarations
#872: FILE: kernel/sched_norm.c:205:
+		struct rb_node *next = rb_next(&se->run_node);
+		cfs_rq->rb_leftmost = next ? rb_entry(next, struct sched_entity, run_node) : NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#898: FILE: kernel/sched_norm.c:231:
+		kclock_t oldsum = cfs_rq->time_sum_off;
+		cfs_rq->time_sum_off = sum;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#899: FILE: kernel/sched_norm.c:232:
+		printk("%ld:%Lx,%Lx,%p,%p,%d\n", cfs_rq->nr_running, sum, oldsum, cfs_rq->curr, se2, inc_curr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#899: FILE: kernel/sched_norm.c:232:
+		printk("%ld:%Lx,%Lx,%p,%p,%d\n", cfs_rq->nr_running, sum, oldsum, cfs_rq->curr, se2, inc_curr);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#899: FILE: kernel/sched_norm.c:232:
+		printk("%ld:%Lx,%Lx,%p,%p,%d\n", cfs_rq->nr_running, sum, oldsum, cfs_rq->curr, se2, inc_curr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#904: FILE: kernel/sched_norm.c:237:
+#define verify_queue(q,c,s)	((void)0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#904: FILE: kernel/sched_norm.c:237:
+#define verify_queue(q,c,s)	((void)0)
                         ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#990: FILE: kernel/sched_norm.c:323:
+		cfs_rq->time_sum_off -= (se->time_norm - cfs_rq->time_norm_base) << se->weight_shift;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#996: FILE: kernel/sched_norm.c:329:
+		cfs_rq->time_sum_off -= (se->time_norm - cfs_rq->time_norm_base) << se->weight_shift;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#997: FILE: kernel/sched_norm.c:330:
+		BUG_ON(cfs_rq->time_sum_off);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1003: FILE: kernel/sched_norm.c:336:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1019: FILE: kernel/sched_norm.c:352:
+	cfs_rq->run_end = cfs_rq->run_end_curr = cfs_rq->run_start + se->req_weight_inv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: kernel/sched_norm.c:389:
+                cfs_rq->time_sum_off -= cfs_rq->time_sum_max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: kernel/sched_norm.c:389:
+                cfs_rq->time_sum_off -= cfs_rq->time_sum_max;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: kernel/sched_norm.c:390:
+                cfs_rq->time_norm_base += cfs_rq->time_norm_inc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: kernel/sched_norm.c:390:
+                cfs_rq->time_norm_base += cfs_rq->time_norm_inc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: kernel/sched_norm.c:391:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: kernel/sched_norm.c:391:
+        }$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'se' - possible side-effects?
#1076: FILE: kernel/sched_norm.c:409:
+#define for_each_sched_entity(se) \
+		for (; se; se = se->parent)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#1106: FILE: kernel/sched_norm.c:439:
+#define for_each_leaf_cfs_rq(rq, cfs_rq) \
+	list_for_each_entry(cfs_rq, &rq->leaf_cfs_rq_list, leaf_cfs_rq_list)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'se' - possible side-effects?
#1120: FILE: kernel/sched_norm.c:453:
+#define for_each_sched_entity(se) \
+		for (; se; se = NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#1147: FILE: kernel/sched_norm.c:480:
+#define for_each_leaf_cfs_rq(rq, cfs_rq) \
+		for (cfs_rq = &rq->cfs; cfs_rq; cfs_rq = NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cfs_rq' - possible side-effects?
#1147: FILE: kernel/sched_norm.c:480:
+#define for_each_leaf_cfs_rq(rq, cfs_rq) \
+		for (cfs_rq = &rq->cfs; cfs_rq; cfs_rq = NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1201: FILE: kernel/sched_norm.c:534:
+	struct sched_entity *next;
+	__update_rq_clock(rq);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1236: FILE: kernel/sched_norm.c:569:
+	    curr->se.time_norm - p->se.time_norm >= cfs_rq->curr->load.inv_weight * (kclock_t)gran) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1377: FILE: kernel/sched_norm.c:710:
+		nr_moved = balance_tasks(this_rq, this_cpu, busiest,
+				max_nr_move, maxload, sd, idle, all_pinned,

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1493: FILE: kernel/sched_debug.c:43:
+		((long long)((rq->cfs.fair_clock << 16) - p->se.time_norm) * p->se.load.weight) >> 20,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 29 warnings, 23 checks, 1258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000385216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
