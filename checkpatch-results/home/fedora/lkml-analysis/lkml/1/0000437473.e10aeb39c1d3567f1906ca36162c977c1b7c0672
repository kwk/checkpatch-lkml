WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
request structs being popped off the stack while still queued. Stack corruption

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#88: FILE: arch/m68k/kernel/setup.c:518:
+static int __init adb_probe_sync_enable (char *str) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: arch/m68k/kernel/setup.c:518:
+static int __init adb_probe_sync_enable (char *str) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#89: FILE: arch/m68k/kernel/setup.c:519:
+	extern int __adb_probe_sync;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: arch/m68k/kernel/setup.c:520:
+	extern int __adb_probe_sync;
+	__adb_probe_sync = 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#94: FILE: arch/m68k/kernel/setup.c:524:
+__setup("adb_sync", adb_probe_sync_enable);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#191: FILE: drivers/macintosh/via-macii.c:125:
+static int request_is_queued(struct adb_request *req) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: drivers/macintosh/via-macii.c:128:
+	unsigned long flags;
+	local_irq_save(flags);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#214: FILE: drivers/macintosh/via-macii.c:161:
+	if (err) goto out;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#219: FILE: drivers/macintosh/via-macii.c:165:
+	if (err) goto out;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#241: FILE: drivers/macintosh/via-macii.c:183:
+	last_status = via[B] & (ST_MASK|CTLR_IRQ);
 	                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#277: FILE: drivers/macintosh/via-macii.c:209:
+	if (!autopoll_devs) return;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: drivers/macintosh/via-macii.c:217:
+	BUG_ON(request_is_queued(&req));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/macintosh/via-macii.c:220:
+^I            ADB_READREG(next_device, 0));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: drivers/macintosh/via-macii.c:241:
+	BUG_ON(request_is_queued(req));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#352: FILE: drivers/macintosh/via-macii.c:248:
+		while (!req->complete) {
+			macii_poll();
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#355: FILE: drivers/macintosh/via-macii.c:251:
+		BUG_ON(request_is_queued(req));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#403: FILE: drivers/macintosh/via-macii.c:291:
+	if (!autopoll_devs) return 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current_req"
#407: FILE: drivers/macintosh/via-macii.c:295:
+	if (current_req == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/macintosh/via-macii.c:300:
+^I^I            ADB_READREG(ffs(autopoll_devs) - 1, 0));$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#420: FILE: drivers/macintosh/via-macii.c:308:
+static inline int need_autopoll(void) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#455: FILE: drivers/macintosh/via-macii.c:338:
+	udelay(3000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#455: FILE: drivers/macintosh/via-macii.c:338:
+	udelay(3000);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#513: FILE: drivers/macintosh/via-macii.c:350:
+	BUG_ON(req == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#513: FILE: drivers/macintosh/via-macii.c:350:
+	BUG_ON(req == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#515: FILE: drivers/macintosh/via-macii.c:352:
+	BUG_ON(macii_state != idle);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#602: FILE: drivers/macintosh/via-macii.c:402:
+	BUG_ON(entered++);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#605: FILE: drivers/macintosh/via-macii.c:405:
+	status = via[B] & (ST_MASK|CTLR_IRQ);
 	                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#612: FILE: drivers/macintosh/via-macii.c:412:
+				BUG_ON(current_req != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current_req"
#612: FILE: drivers/macintosh/via-macii.c:412:
+				BUG_ON(current_req != NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'x == 0xFF'
#629: FILE: drivers/macintosh/via-macii.c:418:
+			if ((status & CTLR_IRQ) && (x == 0xFF)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#690: FILE: drivers/macintosh/via-macii.c:451:
+						if (need_autopoll())

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#708: FILE: drivers/macintosh/via-macii.c:477:
+			BUG_ON((status & ST_MASK) == ST_CMD ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#784: FILE: drivers/macintosh/via-macii.c:506:
+				BUG_ON(reply_len > 15);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437473.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 17 warnings, 8 checks, 799 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437473.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
