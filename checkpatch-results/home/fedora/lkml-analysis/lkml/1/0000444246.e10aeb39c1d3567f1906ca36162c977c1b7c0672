WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Sensable Phantom is a up to 7DOF force feedback (up to 6DOF FF) device. It's

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#58: FILE: MAINTAINERS:3117:
+P:	Jiri Slaby
+M:	jirislaby@gmail.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: drivers/input/misc/Kconfig:101:
+config PHANTOM
+	tristate "Sensable PHANToM"
+	depends on PCI && INPUT_FF_MEMLESS
+	help
+	  Say Y here if you want to build a driver for Sensable PHANToM device.
+
+	  If you choose to build module, its name will be phantom. If unsure,
+	  say N here.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: drivers/input/misc/phantom.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'an userspace' may be misspelled - perhaps 'a userspace'?
#105: FILE: drivers/input/misc/phantom.c:9:
+ *  You need an userspace library to cooperate with this driver. It (and other
              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#119: FILE: drivers/input/misc/phantom.c:23:
+#include <asm/io.h>

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'phantom_status', this function's name, in a string
#155: FILE: drivers/input/misc/phantom.c:59:
+	pr_debug("phantom_status %lx %lx\n", dev->status, newstat);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#157: FILE: drivers/input/misc/phantom.c:61:
+	if (!(dev->status & PHB_RUNNING) && (newstat & PHB_RUNNING)) {
[...]
+	} else if ((dev->status & PHB_RUNNING) && !(newstat & PHB_RUNNING))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#181: FILE: drivers/input/misc/phantom.c:85:
+	wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: drivers/input/misc/phantom.c:98:
+static int phantom_play(struct input_dev *idev, void *data,
+		struct ff_effect *eff)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#209: FILE: drivers/input/misc/phantom.c:113:
+		printk(KERN_INFO "phantom: phantom is used, but the device was"

WARNING:SPLIT_STRING: quoted string split across lines
#210: FILE: drivers/input/misc/phantom.c:114:
+		printk(KERN_INFO "phantom: phantom is used, but the device was"
+				"not reset since last module load\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#210: FILE: drivers/input/misc/phantom.c:114:
+		printk(KERN_INFO "phantom: phantom is used, but the device was"
+				"not reset since last module load\n");

WARNING:MEMORY_BARRIER: memory barrier without comment
#229: FILE: drivers/input/misc/phantom.c:133:
+	wmb();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idev"
#232: FILE: drivers/input/misc/phantom.c:136:
+	if (unlikely(idev == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#256: FILE: drivers/input/misc/phantom.c:160:
+static void __devinit phantom_init_idev(const struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/input/misc/phantom.c:161:
+static void __devinit phantom_init_idev(const struct pci_dev *pdev,
+		struct phantom_device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#284: FILE: drivers/input/misc/phantom.c:188:
+static int __devinit phantom_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/input/misc/phantom.c:189:
+static int __devinit phantom_probe(struct pci_dev *pdev,
+	const struct pci_device_id *pci_id)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht"
#300: FILE: drivers/input/misc/phantom.c:204:
+	if (pht == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht->caddr"
#306: FILE: drivers/input/misc/phantom.c:210:
+	if (pht->caddr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht->iaddr"
#311: FILE: drivers/input/misc/phantom.c:215:
+	if (pht->iaddr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht->oaddr"
#316: FILE: drivers/input/misc/phantom.c:220:
+	if (pht->oaddr == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/input/misc/phantom.c:227:
+	retval = request_irq(pdev->irq, phantom_isr,
+			IRQF_SHARED | IRQF_DISABLED, "phantom", pht);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pht->idev"
#330: FILE: drivers/input/misc/phantom.c:234:
+	if (pht->idev == NULL) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#373: FILE: drivers/input/misc/phantom.c:277:
+static void __devexit phantom_remove(struct pci_dev *pdev)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#410: FILE: drivers/input/misc/phantom.c:314:
+static struct pci_device_id phantom_pci_tbl[] __devinitdata = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#440: FILE: drivers/input/misc/phantom.c:344:
+		printk(KERN_ERR "phantom: can't register phantom class\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#445: FILE: drivers/input/misc/phantom.c:349:
+		printk(KERN_ERR "phantom: can't create sysfs version file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#451: FILE: drivers/input/misc/phantom.c:355:
+		printk(KERN_ERR "phantom: can't register pci driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#455: FILE: drivers/input/misc/phantom.c:359:
+	printk(KERN_INFO "Phantom Linux Driver, version " PHANTOM_VERSION ", "

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: drivers/input/misc/phantom.c:360:
+	printk(KERN_INFO "Phantom Linux Driver, version " PHANTOM_VERSION ", "
+			"init OK\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000444246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 11 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000444246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
