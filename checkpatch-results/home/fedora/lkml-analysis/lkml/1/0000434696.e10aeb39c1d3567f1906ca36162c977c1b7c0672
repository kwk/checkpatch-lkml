ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: include/linux/mm_types.h:53:
+^I    ^Ivoid **lockless_freelist;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: include/linux/mm_types.h:53:
+^I    ^Ivoid **lockless_freelist;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: mm/slub.c:84:
+ * ^I^I^IThe cpu slab may be equipped with an additioanl$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: mm/slub.c:85:
+ * ^I^I^Ilockless_freelist that allows lockless access to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: mm/slub.c:86:
+ * ^I^I^Ifree objects in addition to the regular freelist$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: mm/slub.c:87:
+ * ^I^I^Ithat requires the slab lock.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: mm/slub.c:91:
+ * ^I^I^Ithe fast path and disables lockless freelists.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: mm/slub.c:1366:
+static void *__slab_alloc(struct kmem_cache *s,
+		gfp_t gfpflags, int node, void *addr, struct page *page)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#279: FILE: mm/slub.c:1457:
+static void __always_inline *slab_alloc(struct kmem_cache *s,
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#279: FILE: mm/slub.c:1457:
+static void __always_inline *slab_alloc(struct kmem_cache *s,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: mm/slub.c:1467:
+	if (unlikely(!page || !page->lockless_freelist ||
+			(node != -1 && page_to_nid(page) != node)))

CHECK:BRACES: Unbalanced braces around else statement
#293: FILE: mm/slub.c:1471:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: mm/slub.c:1502:
+static void __slab_free(struct kmem_cache *s, struct page *page,
 					void *x, void *addr)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#360: FILE: mm/slub.c:1572:
+static void __always_inline slab_free(struct kmem_cache *s,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: mm/slub.c:1573:
+static void __always_inline slab_free(struct kmem_cache *s,
+			struct page *page, void *x, void *addr)

CHECK:BRACES: braces {} should be used on all arms of this statement
#367: FILE: mm/slub.c:1579:
+	if (likely(page == s->cpu_slab[smp_processor_id()] &&
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: mm/slub.c:1580:
+	if (likely(page == s->cpu_slab[smp_processor_id()] &&
+						!SlabDebug(page))) {

CHECK:CAMELCASE: Avoid CamelCase: <SlabDebug>
#368: FILE: mm/slub.c:1580:
+						!SlabDebug(page))) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Unbalanced braces around else statement
#371: FILE: mm/slub.c:1583:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434696.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 6 warnings, 10 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434696.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
