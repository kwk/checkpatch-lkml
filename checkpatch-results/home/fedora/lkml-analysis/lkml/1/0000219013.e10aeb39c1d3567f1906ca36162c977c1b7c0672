WARNING:TYPO_SPELLING: 'supercedes' may be misspelled - perhaps 'supersedes'?
#55: 
Also supercedes the "mm: show node to memory section relationship
     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#127: FILE: Documentation/ABI/testing/sysfs-devices-memory:48:
+		root can toggle the the online/offline state of a removable

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: arch/sh/mm/init.c:280:
+	ret = __add_pages(nid, pgdat->node_zones + ZONE_NORMAL,
+				start_pfn, nr_pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/base/memory.c:349:
+static int add_memory_block(int nid, struct mem_section *section,
+			unsigned long state, int phys_device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/base/memory.c:466:
+		err = add_memory_block(0, __nr_to_section(i), MEM_ONLINE,
+					0, BOOT);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'page' may be better as '(page)' to avoid precedence issues
#358: FILE: drivers/base/node.c:230:
+#define page_initialized(page)  (page->lru.next)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/base/node.c:293:
+		sysfs_remove_link(&node_devices[nid].sysdev.kobj,
+			 kobject_name(&mem_blk->sysdev.kobj));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#475: FILE: include/linux/memory.h:82:
+extern int register_new_memory(int, struct mem_section *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#475: FILE: include/linux/memory.h:82:
+extern int register_new_memory(int, struct mem_section *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mem_section *' should also have an identifier name
#475: FILE: include/linux/memory.h:82:
+extern int register_new_memory(int, struct mem_section *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#480: FILE: include/linux/memory.h:87:
+extern struct memory_block *find_memory_block(struct mem_section *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mem_section *' should also have an identifier name
#480: FILE: include/linux/memory.h:87:
+extern struct memory_block *find_memory_block(struct mem_section *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#497: FILE: include/linux/memory_hotplug.h:75:
+extern int __add_pages(int nid, struct zone *zone, unsigned long start_pfn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: include/linux/memory_hotplug.h:76:
+extern int __add_pages(int nid, struct zone *zone, unsigned long start_pfn,
 	unsigned long nr_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#517: FILE: include/linux/node.h:39:
+extern int register_mem_sect_under_node(struct memory_block *mem_blk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: include/linux/node.h:40:
+extern int register_mem_sect_under_node(struct memory_block *mem_blk,
+						int nid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#519: FILE: include/linux/node.h:41:
+extern int unregister_mem_sect_under_nodes(struct memory_block *mem_blk);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#527: FILE: include/linux/node.h:59:
 }
+static inline int register_mem_sect_under_node(struct memory_block *mem_blk,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: include/linux/node.h:60:
+static inline int register_mem_sect_under_node(struct memory_block *mem_blk,
+							int nid)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#532: FILE: include/linux/node.h:64:
+}
+static inline int unregister_mem_sect_under_nodes(struct memory_block *mem_blk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: mm/memory_hotplug.c:220:
+static int __add_section(int nid, struct zone *zone,
+				unsigned long phys_start_pfn)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: mm/memory_hotplug.c:278:
+int __add_pages(int nid, struct zone *zone, unsigned long phys_start_pfn,
 		 unsigned long nr_pages)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 17 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
