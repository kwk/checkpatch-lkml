WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#34: 
inspects VMAs or that trys to keep track of how much of the
                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#80: FILE: fs/proc/task_mmu.c:570:
+	int out_len = PAGEMAP_ENTRY_SIZE_BYTES;
+	if (pm->count < PAGEMAP_ENTRY_SIZE_BYTES)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#125: FILE: fs/proc/task_mmu.c:606:
+		unsigned long pfn = PAGEMAP_NO_PAGE_PRESENT;
+		if (pte_present(*pte))

WARNING:SPACING: Unnecessary space before function pointer arguments
#294: FILE: include/linux/mm.h:753:
+	int (*pte_hole) (unsigned long, unsigned long, void *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#294: FILE: include/linux/mm.h:753:
+	int (*pte_hole) (unsigned long, unsigned long, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#294: FILE: include/linux/mm.h:753:
+	int (*pte_hole) (unsigned long, unsigned long, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#294: FILE: include/linux/mm.h:753:
+	int (*pte_hole) (unsigned long, unsigned long, void *);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#317: FILE: lib/pagewalk.c:14:
+		if (err)
+		       break;

WARNING:TABSTOP: Statements should start on a tabstop
#318: FILE: lib/pagewalk.c:15:
+		       break;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#333: FILE: lib/pagewalk.c:31:
+		if (pmd_none(*pmd)) {
[...]
+		} else if (pmd_none_or_clear_bad(pmd))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#368: FILE: lib/pagewalk.c:55:
+		if (pud_none(*pud)) {
[...]
+		} else if (pud_none_or_clear_bad(pud))
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#400: FILE: lib/pagewalk.c:91:
+		if (pgd_none(*pgd)) {
[...]
+		} else if (pgd_none_or_clear_bad(pgd))
[...]

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 0 checks, 344 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
