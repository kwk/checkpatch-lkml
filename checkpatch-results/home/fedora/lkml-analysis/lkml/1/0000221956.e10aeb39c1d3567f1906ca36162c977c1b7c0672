WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#54: FILE: MAINTAINERS:1683:
+P:	Matti Linnanvuori
+M:	matti.linnanvuori@ascom.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: drivers/net/wan/Kconfig:505:
+config ETP_STREAM
+	tristate "ETP raw bitstream and sensitivity support"
+	depends on ETP
+	help
+	  Driver for ETP raw bitstream and sensitivity.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called etp_stream.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#105: FILE: drivers/net/wan/etp.h:1:
+/* etp.h */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#108: FILE: drivers/net/wan/etp.h:4:
+/*
+	Copyright (C) 2005 Jouni Kujala, Flexibilis Oy.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <REG_RXDESCxA_CHy>
#160: FILE: drivers/net/wan/etp.h:56:
+#define REG_RXDESCxA_CHy(x, y) (0x10000 + (x) * 0x8 + (y) * 0x80)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <REG_RXDESCxB_CHy>
#161: FILE: drivers/net/wan/etp.h:57:
+#define REG_RXDESCxB_CHy(x, y) (0x10004 + (x) * 0x8 + (y) * 0x80)

CHECK:CAMELCASE: Avoid CamelCase: <REG_TXDESCxA_CHy>
#163: FILE: drivers/net/wan/etp.h:59:
+#define REG_TXDESCxA_CHy(x, y) (0x18000 + (x) * 0x8 + (y) * 0x80)

CHECK:CAMELCASE: Avoid CamelCase: <REG_TXDESCxB_CHy>
#164: FILE: drivers/net/wan/etp.h:60:
+#define REG_TXDESCxB_CHy(x, y) (0x18004 + (x) * 0x8 + (y) * 0x80)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#167: FILE: drivers/net/wan/etp.h:63:
+	uint32_t desc_a;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#168: FILE: drivers/net/wan/etp.h:64:
+	uint32_t desc_b;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#172: FILE: drivers/net/wan/etp.h:68:
+	uint32_t desc_a;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#173: FILE: drivers/net/wan/etp.h:69:
+	uint32_t desc_b;

CHECK:BIT_MACRO: Prefer using the BIT macro
#178: FILE: drivers/net/wan/etp.h:74:
+#define LVDS_ENABLE_MASK	(1 << 20)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#179: FILE: drivers/net/wan/etp.h:75:
+#define LVDS_ENABLE		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: drivers/net/wan/etp.h:77:
+#define E1_RESET_MASK	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#182: FILE: drivers/net/wan/etp.h:78:
+#define E1_RESET_ENABLE	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#184: FILE: drivers/net/wan/etp.h:80:
+#define E1_HIGH_Z_MASK		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#185: FILE: drivers/net/wan/etp.h:81:
+#define E1_HIFH_Z_ENABLE	(1 << 22)

CHECK:CAMELCASE: Avoid CamelCase: <LEDx_SHIFT>
#207: FILE: drivers/net/wan/etp.h:103:
+#define LEDx_SHIFT(x)	((x) * 2)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: drivers/net/wan/etp.h:105:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#225: FILE: drivers/net/wan/etp.h:121:
+#define E1_DIR_MASK		(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#226: FILE: drivers/net/wan/etp.h:122:
+#define E1_DIR_READ		(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#228: FILE: drivers/net/wan/etp.h:124:
+#define E1_ACCESS_ON		(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#237: FILE: drivers/net/wan/etp.h:133:
+#define INT_2_E1_INT		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#238: FILE: drivers/net/wan/etp.h:134:
+#define INT_2_E1_ACCESS_DONE	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#247: FILE: drivers/net/wan/etp.h:143:
+#define INT_RECEIVED		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#248: FILE: drivers/net/wan/etp.h:144:
+#define INT_TRANSMITTED		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: drivers/net/wan/etp.h:145:
+#define INT_RX_DROPPED		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#250: FILE: drivers/net/wan/etp.h:146:
+#define INT_TX_UNDERF		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#252: FILE: drivers/net/wan/etp.h:148:
+#define INT2_RX_RESYNC		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#253: FILE: drivers/net/wan/etp.h:149:
+#define INT2_TX_RESYNC		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#260: FILE: drivers/net/wan/etp.h:156:
+#define HDLC_CRC_16		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#262: FILE: drivers/net/wan/etp.h:158:
+#define HDLC_CRC_DELAY		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#264: FILE: drivers/net/wan/etp.h:160:
+#define HDLC_RETINA_FLAG	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#277: FILE: drivers/net/wan/etp.h:173:
+#define DMA_ENABLE_MASK			(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#278: FILE: drivers/net/wan/etp.h:174:
+#define DMA_ENABLE			(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#288: FILE: drivers/net/wan/etp.h:184:
+#define RX_DESCB_FIFO_ERR	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#289: FILE: drivers/net/wan/etp.h:185:
+#define RX_DESCB_SIZE_ERR	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#290: FILE: drivers/net/wan/etp.h:186:
+#define RX_DESCB_CRC_ERR	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#291: FILE: drivers/net/wan/etp.h:187:
+#define RX_DESCB_OCTET_ERR	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#292: FILE: drivers/net/wan/etp.h:188:
+#define RX_DESCB_TRANSFER	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#295: FILE: drivers/net/wan/etp.h:191:
+#define TX_DESCB_FIFO_ERR	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#296: FILE: drivers/net/wan/etp.h:192:
+#define TX_DESCB_TRANSFER	(1 << 31)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#303: FILE: drivers/net/wan/etp.h:199:
+#define TX_TIMEOUT	(1*HZ)	/* 1 sec in jiffies */
                   	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#316: FILE: drivers/net/wan/etp.h:212:
+	uint8_t e1_timeslot[E1_TIMESLOTS_PER_CHANNEL];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#345: FILE: drivers/net/wan/etp.h:241:
+	uint32_t __iomem *reg_ch_rxctrl;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#347: FILE: drivers/net/wan/etp.h:243:
+	uint32_t __iomem *reg_ch_txctrl;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#350: FILE: drivers/net/wan/etp.h:246:
+	uint32_t hdlc_mode_g704_used_timeslots;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#363: FILE: drivers/net/wan/etp.h:259:
+	void (*rx_callback) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#363: FILE: drivers/net/wan/etp.h:259:
+	void (*rx_callback) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#364: FILE: drivers/net/wan/etp.h:260:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#365: FILE: drivers/net/wan/etp.h:261:
+			     unsigned read,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#375: FILE: drivers/net/wan/etp.h:271:
+	void (*tx_callback) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#375: FILE: drivers/net/wan/etp.h:271:
+	void (*tx_callback) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: drivers/net/wan/etp.h:272:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#377: FILE: drivers/net/wan/etp.h:273:
+			     unsigned written,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#395: FILE: drivers/net/wan/etp.h:291:
+	uint32_t tx_clock_source;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#401: FILE: drivers/net/wan/etp.h:297:
+	uint32_t __iomem *reg_if_rxctrl;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#402: FILE: drivers/net/wan/etp.h:298:
+	uint32_t __iomem *reg_if_txctrl;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#403: FILE: drivers/net/wan/etp.h:299:
+	uint32_t __iomem *reg_if_rxctrl1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#404: FILE: drivers/net/wan/etp.h:300:
+	uint32_t __iomem *reg_if_txctrl1;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#408: FILE: drivers/net/wan/etp.h:304:
+typedef void (*etp_idt_callback_t) (unsigned device);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#423: FILE: drivers/net/wan/etp.h:319:
+	uint32_t led_register_value;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#424: FILE: drivers/net/wan/etp.h:320:
+	spinlock_t lock2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#425: FILE: drivers/net/wan/etp.h:321:
+	uint32_t reg_int_mask2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#428: FILE: drivers/net/wan/etp.h:324:
+	uint8_t __iomem *ioaddr;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#429: FILE: drivers/net/wan/etp.h:325:
+	spinlock_t lock0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#430: FILE: drivers/net/wan/etp.h:326:
+	uint32_t reg_int_mask0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#433: FILE: drivers/net/wan/etp.h:329:
+extern unsigned get_led(const struct etp_interface_private *ip);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#433: FILE: drivers/net/wan/etp.h:329:
+extern unsigned get_led(const struct etp_interface_private *ip);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#437: FILE: drivers/net/wan/etp.h:333:
+static inline struct etp_device_private *get_dev_priv(unsigned device)

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/net/wan/etp.h:336:
+	struct etp_device_private *card;
+	rcu_read_lock();

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#448: FILE: drivers/net/wan/etp.h:343:
etp_channel_private *cp)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: drivers/net/wan/etp.h:348:
+static inline unsigned device_number(const struct etp_device_private *dp)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: drivers/net/wan/etp.h:356:
+	void (*rx_callback) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#461: FILE: drivers/net/wan/etp.h:356:
+	void (*rx_callback) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#462: FILE: drivers/net/wan/etp.h:357:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#463: FILE: drivers/net/wan/etp.h:358:
+			     unsigned read,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#465: FILE: drivers/net/wan/etp.h:360:
+	void (*tx_callback) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#465: FILE: drivers/net/wan/etp.h:360:
+	void (*tx_callback) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#466: FILE: drivers/net/wan/etp.h:361:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#467: FILE: drivers/net/wan/etp.h:362:
+			     unsigned written,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#469: FILE: drivers/net/wan/etp.h:364:
+	void (*idt_int_callback) (unsigned device);

WARNING:SPACING: Unnecessary space before function pointer arguments
#469: FILE: drivers/net/wan/etp.h:364:
+	void (*idt_int_callback) (unsigned device);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#470: FILE: drivers/net/wan/etp.h:365:
+	unsigned device, interface;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#492: FILE: drivers/net/wan/etp.h:386:
+static inline unsigned interface_number(const struct etp_interface_private *ip)

WARNING:TYPO_SPELLING: 'fuctions' may be misspelled - perhaps 'functions'?
#497: FILE: drivers/net/wan/etp.h:391:
+/* Registers callback fuctions. */
                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#498: FILE: drivers/net/wan/etp.h:392:
+extern int etp_register_callbacks(const struct etp_callback_struct *callback);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#501: FILE: drivers/net/wan/etp.h:395:
+extern int etp_if_open(unsigned device,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: drivers/net/wan/etp.h:395:
+extern int etp_if_open(unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#502: FILE: drivers/net/wan/etp.h:396:
+		       unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#503: FILE: drivers/net/wan/etp.h:397:
+		       unsigned if_mode,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#504: FILE: drivers/net/wan/etp.h:398:
+		       unsigned rx_slots,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#505: FILE: drivers/net/wan/etp.h:399:
+		       unsigned tx_slots);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#512: FILE: drivers/net/wan/etp.h:405:
+extern int etp_frame(unsigned device, unsigned interface, bool frame);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#512: FILE: drivers/net/wan/etp.h:405:
+extern int etp_frame(unsigned device, unsigned interface, bool frame);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#512: FILE: drivers/net/wan/etp.h:405:
+extern int etp_frame(unsigned device, unsigned interface, bool frame);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#515: FILE: drivers/net/wan/etp.h:408:
+extern int etp_if_close(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#515: FILE: drivers/net/wan/etp.h:408:
+extern int etp_if_close(unsigned device, unsigned interface);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#515: FILE: drivers/net/wan/etp.h:408:
+extern int etp_if_close(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#518: FILE: drivers/net/wan/etp.h:411:
+int etp_tx_on(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#518: FILE: drivers/net/wan/etp.h:411:
+int etp_tx_on(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#521: FILE: drivers/net/wan/etp.h:414:
+int etp_tx_off(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#521: FILE: drivers/net/wan/etp.h:414:
+int etp_tx_off(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#524: FILE: drivers/net/wan/etp.h:417:
+int etp_rx_on(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#524: FILE: drivers/net/wan/etp.h:417:
+int etp_rx_on(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#527: FILE: drivers/net/wan/etp.h:420:
+int etp_rx_off(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#527: FILE: drivers/net/wan/etp.h:420:
+int etp_rx_off(unsigned device, unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#530: FILE: drivers/net/wan/etp.h:423:
+int etp_if_settings(unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#531: FILE: drivers/net/wan/etp.h:424:
+		    unsigned interface,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#532: FILE: drivers/net/wan/etp.h:425:
+		    uint32_t clock_source,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#533: FILE: drivers/net/wan/etp.h:426:
+		    unsigned hdlc_mode,	/* HDLC_MODE_XXX  */

WARNING:LINE_SPACING: Missing a blank line after declarations
#534: FILE: drivers/net/wan/etp.h:427:
+		    unsigned hdlc_mode,	/* HDLC_MODE_XXX  */
+		    uint32_t hdlc_mode_g704_used_timeslots);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#537: FILE: drivers/net/wan/etp.h:430:
+int etp_ext_output_clock(unsigned device, uint32_t clock_source);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#540: FILE: drivers/net/wan/etp.h:433:
+int etp_nco_adjust(unsigned device, uint32_t nco_addend_value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#542: FILE: drivers/net/wan/etp.h:435:
+extern unsigned etp_number;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#544: FILE: drivers/net/wan/etp.h:437:
+static inline unsigned etp_number_devices(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#550: FILE: drivers/net/wan/etp.h:443:
+int etp_device_status_get(unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#553: FILE: drivers/net/wan/etp.h:446:
+int etp_interface_status_get(unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#553: FILE: drivers/net/wan/etp.h:446:
+int etp_interface_status_get(unsigned device, unsigned interface,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#556: FILE: drivers/net/wan/etp.h:449:
+extern uint32_t etp_rx_on_get(const struct etp_channel_private *cp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#558: FILE: drivers/net/wan/etp.h:451:
+extern uint32_t etp_tx_on_get(const struct etp_channel_private *cp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#565: FILE: drivers/net/wan/etp.h:458:
+int etp_idt_offset(unsigned card_number, unsigned span);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#565: FILE: drivers/net/wan/etp.h:458:
+int etp_idt_offset(unsigned card_number, unsigned span);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#571: FILE: drivers/net/wan/etp_ioctl.h:1:
+/* etp_ioctl.h */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#574: FILE: drivers/net/wan/etp_ioctl.h:4:
+/*
+	Copyright (C) 2005 Jouni Kujala, Flexibilis Oy.

CHECK:CAMELCASE: Avoid CamelCase: <LOCAL_CLK_kHz>
#612: FILE: drivers/net/wan/etp_ioctl.h:42:
+#define LOCAL_CLK_kHz		32768	/* local crystal on the board */

CHECK:CAMELCASE: Avoid CamelCase: <COUNTER_TO_kHz>
#614: FILE: drivers/net/wan/etp_ioctl.h:44:
+#define COUNTER_TO_kHz(x) ((x) * (LOCAL_CLK_kHz / CLOCK_COUNTER_PERIOD))

CHECK:CAMELCASE: Avoid CamelCase: <PCM_RATE_kHz>
#616: FILE: drivers/net/wan/etp_ioctl.h:46:
+#define PCM_RATE_kHz			8

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#620: FILE: drivers/net/wan/etp_ioctl.h:50:
+	uint32_t nco_addend_value;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#625: FILE: drivers/net/wan/etp_ioctl.h:55:
+	uint32_t ext_output_clock_source;	/* CLOCK_SOURCE_XXXX */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#636: FILE: drivers/net/wan/etp_ioctl.h:66:
+	uint32_t tx_on;	/* 0 no, DMA_ENABLE_MASK yes */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#637: FILE: drivers/net/wan/etp_ioctl.h:67:
+	uint32_t rx_on;	/* 0 no, DMA_ENABLE_MASK yes */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#638: FILE: drivers/net/wan/etp_ioctl.h:68:
+	uint32_t tx_clock_source;	/* CLOCK_SOURCE_XXXX */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#646: FILE: drivers/net/wan/etp_ioctl.h:76:
+	uint32_t hdlc_mode_g704_used_timeslots;	/* timeslots for HDLC frame */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#661: FILE: drivers/net/wan/etp_ioctl.h:91:
+	uint32_t tx_clock_source;	/* CLOCK_SOURCE_XXX */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#663: FILE: drivers/net/wan/etp_ioctl.h:93:
+	uint32_t hdlc_mode_g704_used_timeslots;	/* timeslots for HDLC frame */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#667: FILE: drivers/net/wan/etp_ioctl.h:97:
+	uint32_t clock_source;	/* CLOCK_SOURCE_X */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#671: FILE: drivers/net/wan/etp_ioctl.h:101:
+	uint32_t nco_addend_value;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#715: FILE: drivers/net/wan/etp_idt.h:1:
+/* etp_idt.h */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#718: FILE: drivers/net/wan/etp_idt.h:4:
+/*
+	Copyright (C) 2005 Jouni Kujala, Flexibilis Oy.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#742: FILE: drivers/net/wan/etp_idt.h:28:
+static inline unsigned if_to_idt_if_etp(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#742: FILE: drivers/net/wan/etp_idt.h:28:
+static inline unsigned if_to_idt_if_etp(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#748: FILE: drivers/net/wan/etp_idt.h:34:
+static inline unsigned if_to_idt_if_etp104(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#748: FILE: drivers/net/wan/etp_idt.h:34:
+static inline unsigned if_to_idt_if_etp104(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#753: FILE: drivers/net/wan/etp_idt.h:39:
+static inline unsigned idt_if_to_if_etp(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#753: FILE: drivers/net/wan/etp_idt.h:39:
+static inline unsigned idt_if_to_if_etp(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#759: FILE: drivers/net/wan/etp_idt.h:45:
+static inline unsigned idt_if_to_if_etp104(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#759: FILE: drivers/net/wan/etp_idt.h:45:
+static inline unsigned idt_if_to_if_etp104(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#764: FILE: drivers/net/wan/etp_idt.h:50:
+extern unsigned int etp_if_to_idt_if(unsigned interface,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: drivers/net/wan/etp_idt.h:50:
+extern unsigned int etp_if_to_idt_if(unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#772: FILE: drivers/net/wan/etp_idt.h:57:
+static inline unsigned idt_offset_down(const struct etp_device_private *device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#773: FILE: drivers/net/wan/etp_idt.h:58:
+				       unsigned span)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#778: FILE: drivers/net/wan/etp_idt.h:63:
+extern void idt_init_default(struct etp_device_private *dp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#779: FILE: drivers/net/wan/etp_idt.h:64:
+extern int idt_open_if_hdlc_g703(struct etp_device_private *dp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#779: FILE: drivers/net/wan/etp_idt.h:64:
+extern int idt_open_if_hdlc_g703(struct etp_device_private *dp,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#780: FILE: drivers/net/wan/etp_idt.h:65:
+				 unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#781: FILE: drivers/net/wan/etp_idt.h:66:
+extern int idt_open_if_hdlc_g704(struct etp_device_private *dp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#781: FILE: drivers/net/wan/etp_idt.h:66:
+extern int idt_open_if_hdlc_g704(struct etp_device_private *dp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#782: FILE: drivers/net/wan/etp_idt.h:67:
+				 unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#783: FILE: drivers/net/wan/etp_idt.h:68:
+extern int idt_open_if_timeslot(struct etp_device_private *dp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#783: FILE: drivers/net/wan/etp_idt.h:68:
+extern int idt_open_if_timeslot(struct etp_device_private *dp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#784: FILE: drivers/net/wan/etp_idt.h:69:
+				unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#785: FILE: drivers/net/wan/etp_idt.h:70:
+extern int idt_open_if_stream(struct etp_device_private *dp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#785: FILE: drivers/net/wan/etp_idt.h:70:
+extern int idt_open_if_stream(struct etp_device_private *dp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#786: FILE: drivers/net/wan/etp_idt.h:71:
+			      unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#787: FILE: drivers/net/wan/etp_idt.h:72:
+extern int idt_close_if(struct etp_device_private *dp, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#787: FILE: drivers/net/wan/etp_idt.h:72:
+extern int idt_close_if(struct etp_device_private *dp, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#787: FILE: drivers/net/wan/etp_idt.h:72:
+extern int idt_close_if(struct etp_device_private *dp, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#788: FILE: drivers/net/wan/etp_idt.h:73:
+extern int etp_idt_reset(unsigned device);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#788: FILE: drivers/net/wan/etp_idt.h:73:
+extern int etp_idt_reset(unsigned device);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#790: FILE: drivers/net/wan/etp_idt.h:75:
+extern int etp_read_idt_register_lock(unsigned device, unsigned reg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#790: FILE: drivers/net/wan/etp_idt.h:75:
+extern int etp_read_idt_register_lock(unsigned device, unsigned reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#790: FILE: drivers/net/wan/etp_idt.h:75:
+extern int etp_read_idt_register_lock(unsigned device, unsigned reg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#791: FILE: drivers/net/wan/etp_idt.h:76:
+extern int etp_read_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#791: FILE: drivers/net/wan/etp_idt.h:76:
+extern int etp_read_idt_register_if_lock(unsigned device, unsigned reg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#791: FILE: drivers/net/wan/etp_idt.h:76:
+extern int etp_read_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#792: FILE: drivers/net/wan/etp_idt.h:77:
+					 unsigned interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#794: FILE: drivers/net/wan/etp_idt.h:79:
+static inline unsigned read_idt_register(uint32_t __iomem *ioaddr,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#794: FILE: drivers/net/wan/etp_idt.h:79:
+static inline unsigned read_idt_register(uint32_t __iomem *ioaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: drivers/net/wan/etp_idt.h:80:
+static inline unsigned read_idt_register(uint32_t __iomem *ioaddr,
+{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#797: FILE: drivers/net/wan/etp_idt.h:81:
+	unsigned value;

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: drivers/net/wan/etp_idt.h:82:
+	unsigned value;
+	while (readl_relaxed(ioaddr) & E1_ACCESS_ON)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#808: FILE: drivers/net/wan/etp_idt.h:92:
+static inline void write_idt_register(uint32_t __iomem *ioaddr, unsigned value)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#808: FILE: drivers/net/wan/etp_idt.h:92:
+static inline void write_idt_register(uint32_t __iomem *ioaddr, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#815: FILE: drivers/net/wan/etp_idt.h:99:
+static inline unsigned etp_value(unsigned reg, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#815: FILE: drivers/net/wan/etp_idt.h:99:
+static inline unsigned etp_value(unsigned reg, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#815: FILE: drivers/net/wan/etp_idt.h:99:
+static inline unsigned etp_value(unsigned reg, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#821: FILE: drivers/net/wan/etp_idt.h:105:
+extern int etp_write_idt_register_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#821: FILE: drivers/net/wan/etp_idt.h:105:
+extern int etp_write_idt_register_lock(unsigned device, unsigned reg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#821: FILE: drivers/net/wan/etp_idt.h:105:
+extern int etp_write_idt_register_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#822: FILE: drivers/net/wan/etp_idt.h:106:
+				       unsigned value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#823: FILE: drivers/net/wan/etp_idt.h:107:
+extern int etp_write_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#823: FILE: drivers/net/wan/etp_idt.h:107:
+extern int etp_write_idt_register_if_lock(unsigned device, unsigned reg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: drivers/net/wan/etp_idt.h:107:
+extern int etp_write_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#824: FILE: drivers/net/wan/etp_idt.h:108:
+					  unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#825: FILE: drivers/net/wan/etp_idt.h:109:
+					  unsigned value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#827: FILE: drivers/net/wan/etp_idt.h:111:
+extern int idt_set_ref_clk(struct etp_device_private *dp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#828: FILE: drivers/net/wan/etp_idt.h:112:
+			   unsigned interface);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#829: FILE: drivers/net/wan/etp_idt.h:113:
+extern int idt_get_ref_clk(struct etp_device_private *dp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#836: FILE: drivers/net/wan/etp_idt.c:1:
+/* etp_idt.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#839: FILE: drivers/net/wan/etp_idt.c:4:
+/*
+	Copyright (C) 2006 Jouni Kujala, Flexibilis Oy.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#859: FILE: drivers/net/wan/etp_idt.c:24:
+int etp_read_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#859: FILE: drivers/net/wan/etp_idt.c:24:
+int etp_read_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#860: FILE: drivers/net/wan/etp_idt.c:25:
+				  unsigned interface)

WARNING:LINE_SPACING: Missing a blank line after declarations
#863: FILE: drivers/net/wan/etp_idt.c:28:
+	const int offset = etp_idt_offset(device, interface);
+	if (unlikely(offset < 0))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#870: FILE: drivers/net/wan/etp_idt.c:35:
+write_idt_register_if(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#870: FILE: drivers/net/wan/etp_idt.c:35:
+write_idt_register_if(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#871: FILE: drivers/net/wan/etp_idt.c:36:
+		      unsigned interface, unsigned value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#871: FILE: drivers/net/wan/etp_idt.c:36:
+		      unsigned interface, unsigned value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#873: FILE: drivers/net/wan/etp_idt.c:38:
+static inline unsigned int idt_if_to_if(unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#884: FILE: drivers/net/wan/etp_idt.c:49:
+unsigned int etp_if_to_idt_if(unsigned interface, unsigned short pci_device_id)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#895: FILE: drivers/net/wan/etp_idt.c:60:
+int etp_idt_reset(unsigned device)

WARNING:LINE_SPACING: Missing a blank line after declarations
#899: FILE: drivers/net/wan/etp_idt.c:64:
+	int error;
+	etp_down(etp);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#909: FILE: drivers/net/wan/etp_idt.c:74:
+		msleep(2);	/* should be at least 2 ms */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#922: FILE: drivers/net/wan/etp_idt.c:87:
+	const unsigned device = device_number(dp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#978: FILE: drivers/net/wan/etp_idt.c:143:
+			  unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#980: FILE: drivers/net/wan/etp_idt.c:145:
+	const unsigned device = device_number(dp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#999: FILE: drivers/net/wan/etp_idt.c:164:
+			  unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1001: FILE: drivers/net/wan/etp_idt.c:166:
+	const unsigned device = device_number(dp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1019: FILE: drivers/net/wan/etp_idt.c:184:
+int idt_open_if_timeslot(struct etp_device_private *dp, unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1021: FILE: drivers/net/wan/etp_idt.c:186:
+	const unsigned device = device_number(dp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1039: FILE: drivers/net/wan/etp_idt.c:204:
+int idt_open_if_stream(struct etp_device_private *dp, unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1041: FILE: drivers/net/wan/etp_idt.c:206:
+	const unsigned device = device_number(dp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1059: FILE: drivers/net/wan/etp_idt.c:224:
+int idt_close_if(struct etp_device_private *dp, unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1066: FILE: drivers/net/wan/etp_idt.c:231:
+int etp_read_idt_register_lock(unsigned device, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1066: FILE: drivers/net/wan/etp_idt.c:231:
+int etp_read_idt_register_lock(unsigned device, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1068: FILE: drivers/net/wan/etp_idt.c:233:
+	unsigned value;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1070: FILE: drivers/net/wan/etp_idt.c:235:
+	uint32_t __iomem *ioaddr = (uint32_t __iomem *)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1083: FILE: drivers/net/wan/etp_idt.c:248:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1088: FILE: drivers/net/wan/etp_idt.c:253:
+int etp_idt_offset(unsigned card_number, unsigned span)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1088: FILE: drivers/net/wan/etp_idt.c:253:
+int etp_idt_offset(unsigned card_number, unsigned span)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1093: FILE: drivers/net/wan/etp_idt.c:258:
+	int offset;
+	mutex_lock(mutex);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1104: FILE: drivers/net/wan/etp_idt.c:269:
+write_idt_register_if(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1104: FILE: drivers/net/wan/etp_idt.c:269:
+write_idt_register_if(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1105: FILE: drivers/net/wan/etp_idt.c:270:
+		      unsigned interface, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1105: FILE: drivers/net/wan/etp_idt.c:270:
+		      unsigned interface, unsigned value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1110: FILE: drivers/net/wan/etp_idt.c:275:
+		unsigned int i = IDT_INTERFACES - 1u;
+		do {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1118: FILE: drivers/net/wan/etp_idt.c:283:
+		return error;
+	} else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1119: FILE: drivers/net/wan/etp_idt.c:284:
+		unsigned offset = idt_offset_down(get_dev_priv(device),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1125: FILE: drivers/net/wan/etp_idt.c:290:
+int etp_write_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1125: FILE: drivers/net/wan/etp_idt.c:290:
+int etp_write_idt_register_if_lock(unsigned device, unsigned reg,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1126: FILE: drivers/net/wan/etp_idt.c:291:
+				   unsigned interface, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1126: FILE: drivers/net/wan/etp_idt.c:291:
+				   unsigned interface, unsigned value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1131: FILE: drivers/net/wan/etp_idt.c:296:
+		unsigned int i = IDT_INTERFACES - 1u;
+		do {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1139: FILE: drivers/net/wan/etp_idt.c:304:
+		return error;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1141: FILE: drivers/net/wan/etp_idt.c:306:
+		int offset = etp_idt_offset(device, interface);
+		if (unlikely(offset == -ENXIO))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1148: FILE: drivers/net/wan/etp_idt.c:313:
+int etp_write_idt_register_lock(unsigned device, unsigned reg, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1148: FILE: drivers/net/wan/etp_idt.c:313:
+int etp_write_idt_register_lock(unsigned device, unsigned reg, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1148: FILE: drivers/net/wan/etp_idt.c:313:
+int etp_write_idt_register_lock(unsigned device, unsigned reg, unsigned value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1151: FILE: drivers/net/wan/etp_idt.c:316:
+	struct etp_device_private *etp = get_dev_priv(device);
+	mutex_lock(&etp->mutex);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1164: FILE: drivers/net/wan/etp_idt.c:329:
+int idt_set_ref_clk(struct etp_device_private *dp, unsigned interface)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1167: FILE: drivers/net/wan/etp_idt.c:332:
+	unsigned short pci_device_id = dp->pci_dev->device;
+	return etp_write_idt_register_lock(device_number(dp),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1177: FILE: drivers/net/wan/etp_idt.c:342:
+	unsigned short pci_device_id = dp->pci_dev->device;
+	return idt_if_to_if(0xf &

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1186: FILE: drivers/net/wan/etp_proc.c:1:
+/* etp_proc.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1189: FILE: drivers/net/wan/etp_proc.c:4:
+/*
+	Copyright (C) 2005 Jouni Kujala, Flexibilis Oy.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1209: FILE: drivers/net/wan/etp_proc.c:24:
+int etp_device_status_get(unsigned device,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1214: FILE: drivers/net/wan/etp_proc.c:29:
+	int error;
+	if (unlikely(device >= etp_number_devices()))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1219: FILE: drivers/net/wan/etp_proc.c:34:
+		uint8_t __iomem *ioaddr = dp->ioaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1220: FILE: drivers/net/wan/etp_proc.c:35:
+		uint8_t __iomem *ioaddr = dp->ioaddr;
+		device_status->nco_addend_value =

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1250: FILE: drivers/net/wan/etp_proc.c:65:
+int etp_interface_status_get(unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1250: FILE: drivers/net/wan/etp_proc.c:65:
+int etp_interface_status_get(unsigned device, unsigned interface,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1256: FILE: drivers/net/wan/etp_proc.c:71:
+	struct etp_interface_private *ip;
+	if (unlikely(device >= etp_number_devices()

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1257: FILE: drivers/net/wan/etp_proc.c:72:
+	if (unlikely(device >= etp_number_devices()
+		     || interface > INTERFACES_PER_DEVICE - 1))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1276: FILE: drivers/net/wan/etp_proc.c:91:
+		status_struct->loss_of_signal = ip->los
+		    || ip->if_mode == IF_MODE_CLOSED;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1289: FILE: drivers/net/wan/idt82p2288.h:1:
+/* Author: Flexibilis Oy / Petri Anttila */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1292: FILE: drivers/net/wan/idt82p2288.h:4:
+/*
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1311: FILE: drivers/net/wan/idt82p2288.h:23:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1576: FILE: drivers/net/wan/etp_stream/etp_stream.h:1:
+/* etp_stream.h */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1588: FILE: drivers/net/wan/etp_stream/etp_stream.h:13:
+#define ETP_STREAM_OVERFLOW (1 << ETP_STREAM_OVERFLOW_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1589: FILE: drivers/net/wan/etp_stream/etp_stream.h:14:
+#define ETP_STREAM_UNDERFLOW (1 << ETP_STREAM_UNDERFLOW_BIT)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1596: FILE: drivers/net/wan/etp_stream/etp_stream.c:1:
+/**

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1641: FILE: drivers/net/wan/etp_stream/etp_stream.c:46:
+	unsigned char timeslot0;/* The number of open streaming G.704 files
+				   using timeslot 0. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1641: FILE: drivers/net/wan/etp_stream/etp_stream.c:46:
+				   using timeslot 0. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1643: FILE: drivers/net/wan/etp_stream/etp_stream.c:48:
+	bool out;		/* 1 if out of basic frame synchronization,
+				   else 0. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1643: FILE: drivers/net/wan/etp_stream/etp_stream.c:48:
+				   else 0. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1649: FILE: drivers/net/wan/etp_stream/etp_stream.c:54:
+	unsigned number;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1654: FILE: drivers/net/wan/etp_stream/etp_stream.c:59:
+static unsigned number; /* The number of the cards handled by this module. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1662: FILE: drivers/net/wan/etp_stream/etp_stream.c:67:
+	/* Starting timeslot and timeslot range length and first past timeslot
+	   range end. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1662: FILE: drivers/net/wan/etp_stream/etp_stream.c:67:
+	   range end. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1675: FILE: drivers/net/wan/etp_stream/etp_stream.c:80:
+		unsigned card = number - 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1676: FILE: drivers/net/wan/etp_stream/etp_stream.c:81:
+		unsigned card = number - 1;
+		do {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1678: FILE: drivers/net/wan/etp_stream/etp_stream.c:83:
+			struct etp_card *my_card = cards + card;
+			cancel_delayed_work_sync(&my_card->work);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1684: FILE: drivers/net/wan/etp_stream/etp_stream.c:89:
+static inline unsigned read_slot(loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1690: FILE: drivers/net/wan/etp_stream/etp_stream.c:95:
+static void notify_reception(unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1691: FILE: drivers/net/wan/etp_stream/etp_stream.c:96:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1692: FILE: drivers/net/wan/etp_stream/etp_stream.c:97:
+			     unsigned can_be_read,

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1715: FILE: drivers/net/wan/etp_stream/etp_stream.c:120:
+	if (waitqueue_active(queue))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1719: FILE: drivers/net/wan/etp_stream/etp_stream.c:124:
+static inline unsigned write_slot(loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1725: FILE: drivers/net/wan/etp_stream/etp_stream.c:130:
+static void notify_transmission(unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1726: FILE: drivers/net/wan/etp_stream/etp_stream.c:131:
+				unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1727: FILE: drivers/net/wan/etp_stream/etp_stream.c:132:
+				unsigned can_be_written,

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1749: FILE: drivers/net/wan/etp_stream/etp_stream.c:154:
+	if (waitqueue_active(queue))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1756: FILE: drivers/net/wan/etp_stream/etp_stream.c:161:
+	uint8_t last = slot->e1_frame[FRAMES_IN_SLOT - 1u].e1_timeslot[0];

WARNING:LINE_SPACING: Missing a blank line after declarations
#1757: FILE: drivers/net/wan/etp_stream/etp_stream.c:162:
+	uint8_t last = slot->e1_frame[FRAMES_IN_SLOT - 1u].e1_timeslot[0];
+	if (last & 0x40)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1763: FILE: drivers/net/wan/etp_stream/etp_stream.c:168:
+static void clear_alarm_indications(unsigned device, unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1763: FILE: drivers/net/wan/etp_stream/etp_stream.c:168:
+static void clear_alarm_indications(unsigned device, unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1777: FILE: drivers/net/wan/etp_stream/etp_stream.c:182:
+	    unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1777: FILE: drivers/net/wan/etp_stream/etp_stream.c:182:
+	    unsigned device, unsigned interface,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1786: FILE: drivers/net/wan/etp_stream/etp_stream.c:191:
+			int error;
+			rtnl_lock();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1795: FILE: drivers/net/wan/etp_stream/etp_stream.c:200:
+				error = etp_write_idt_register_if_lock(device,
+							E1_TRNCVR_E1_MODE_REG,

WARNING:SPLIT_STRING: quoted string split across lines
#1800: FILE: drivers/net/wan/etp_stream/etp_stream.c:205:
+						 "Failed to disable multi-frame"
+						 ": %d\n", error);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1818: FILE: drivers/net/wan/etp_stream/etp_stream.c:223:
+	const unsigned device = card->number;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1822: FILE: drivers/net/wan/etp_stream/etp_stream.c:227:
+	unsigned interface = 0u;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1823: FILE: drivers/net/wan/etp_stream/etp_stream.c:228:
+	unsigned interface = 0u;
+	do {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1826: FILE: drivers/net/wan/etp_stream/etp_stream.c:231:
+		struct etp_interface_private *ip = interfaces + interface;
+		down_write(&ip->semaphore);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1831: FILE: drivers/net/wan/etp_stream/etp_stream.c:236:
+/* Timeslot 0 used. */		unsigned alarm;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1833: FILE: drivers/net/wan/etp_stream/etp_stream.c:238:
+				bool red;
+				if (unlikely(atomic_read(&etp->reset)))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1835: FILE: drivers/net/wan/etp_stream/etp_stream.c:240:
+				alarm = etp_read_idt_register_if_lock(

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 48)
#1842: FILE: drivers/net/wan/etp_stream/etp_stream.c:247:
+/* No red alarm. */			if (!frame(ip->ch_priv.tx +
[...]
+						queue_delayed_work(etp->queue,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ip->ch_priv.last_tx_slot_transmitted'
#1844: FILE: drivers/net/wan/etp_stream/etp_stream.c:249:
+						   ip->ch_priv.
+						   last_tx_slot_transmitted)) {

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ip->ch_priv.this_netdev->dev'
#1856: FILE: drivers/net/wan/etp_stream/etp_stream.c:261:
+						dev_warn(&ip->ch_priv.
+							 this_netdev->dev,

WARNING:SPLIT_STRING: quoted string split across lines
#1858: FILE: drivers/net/wan/etp_stream/etp_stream.c:263:
+							 "Failed to set to "
+							 "stream mode: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1862: FILE: drivers/net/wan/etp_stream/etp_stream.c:267:
+						clear_alarm_indications(device,
+								interface);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1871: FILE: drivers/net/wan/etp_stream/etp_stream.c:276:
+static void etp_idt_int_callback(unsigned device)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1874: FILE: drivers/net/wan/etp_stream/etp_stream.c:279:
+	struct etp_card *card = &cards[device];
+	queue_work(get_dev_priv(device)->queue, &card->work.work);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1877: FILE: drivers/net/wan/etp_stream/etp_stream.c:282:
+static inline void save_read(loff_t *ppos, unsigned slot, unsigned frame,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1877: FILE: drivers/net/wan/etp_stream/etp_stream.c:282:
+static inline void save_read(loff_t *ppos, unsigned slot, unsigned frame,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1878: FILE: drivers/net/wan/etp_stream/etp_stream.c:283:
+			     unsigned timeslot)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1892: FILE: drivers/net/wan/etp_stream/etp_stream.c:297:
+static int etp_open(struct inode *inode, struct file *filp)
                                                       ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1894: FILE: drivers/net/wan/etp_stream/etp_stream.c:299:
+	unsigned minor = MINOR(inode->i_rdev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1895: FILE: drivers/net/wan/etp_stream/etp_stream.c:300:
+	unsigned card = minor >> 3;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1897: FILE: drivers/net/wan/etp_stream/etp_stream.c:302:
+	struct etp_file *file;
+	if (unlikely(card >= number))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*file)...) over kmalloc(sizeof(struct etp_file)...)
#1901: FILE: drivers/net/wan/etp_stream/etp_stream.c:306:
+	file = kmalloc(sizeof(struct etp_file), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1903: FILE: drivers/net/wan/etp_stream/etp_stream.c:308:
+		unsigned interface_number = minor & (INTERFACES_PER_DEVICE - 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1904: FILE: drivers/net/wan/etp_stream/etp_stream.c:309:
+		unsigned interface_number = minor & (INTERFACES_PER_DEVICE - 1);
+		filp->private_data = file;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1923: FILE: drivers/net/wan/etp_stream/etp_stream.c:328:
+static int etp_close(struct inode *inode, struct file *filp)
                                                        ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1926: FILE: drivers/net/wan/etp_stream/etp_stream.c:331:
+	struct etp_file *file = filp->private_data;
+	if (!hlist_unhashed(&file->node)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1927: FILE: drivers/net/wan/etp_stream/etp_stream.c:332:
+		const unsigned card_number = file->card;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1928: FILE: drivers/net/wan/etp_stream/etp_stream.c:333:
+		const unsigned interface_number = file->interface;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1933: FILE: drivers/net/wan/etp_stream/etp_stream.c:338:
+		struct mutex *mutex = &interface->mutex;
+		mutex_lock(mutex); /* Protect list and memory integrity. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1955: FILE: drivers/net/wan/etp_stream/etp_stream.c:360:
+static inline unsigned read_frame(loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1960: FILE: drivers/net/wan/etp_stream/etp_stream.c:365:
+static inline unsigned read_timeslot(loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1970: FILE: drivers/net/wan/etp_stream/etp_stream.c:375:
+	const unsigned device = file->card;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1971: FILE: drivers/net/wan/etp_stream/etp_stream.c:376:
+	const unsigned interface_number = file->interface;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1974: FILE: drivers/net/wan/etp_stream/etp_stream.c:379:
+	unsigned reading, reading_frame, reading_slot, rx_slots, beyond;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1975: FILE: drivers/net/wan/etp_stream/etp_stream.c:380:
+	unsigned starting;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1983: FILE: drivers/net/wan/etp_stream/etp_stream.c:388:
+	struct rw_semaphore *semaphore = &ip->semaphore;
+	down_write(semaphore);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx"
#1985: FILE: drivers/net/wan/etp_stream/etp_stream.c:390:
+	if (unlikely(rx == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2002: FILE: drivers/net/wan/etp_stream/etp_stream.c:407:
+		unsigned slots;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2003: FILE: drivers/net/wan/etp_stream/etp_stream.c:408:
+		unsigned slots;
+		if (unlikely(reading == interface->receiving &&

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2041: FILE: drivers/net/wan/etp_stream/etp_stream.c:446:
+static inline unsigned write_frame(loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2046: FILE: drivers/net/wan/etp_stream/etp_stream.c:451:
+static inline unsigned write_timeslot(loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2057: FILE: drivers/net/wan/etp_stream/etp_stream.c:462:
+	const unsigned device = file->card;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2058: FILE: drivers/net/wan/etp_stream/etp_stream.c:463:
+	const unsigned interface_number = file->interface;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'interface_privates[interface_number].ch_priv'
#2065: FILE: drivers/net/wan/etp_stream/etp_stream.c:470:
+		&get_dev_priv(device)->interface_privates[interface_number].
+		ch_priv;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2066: FILE: drivers/net/wan/etp_stream/etp_stream.c:471:
+	unsigned writing;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2067: FILE: drivers/net/wan/etp_stream/etp_stream.c:472:
+	unsigned writing_frame;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2068: FILE: drivers/net/wan/etp_stream/etp_stream.c:473:
+	unsigned tx_slots;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2069: FILE: drivers/net/wan/etp_stream/etp_stream.c:474:
+	unsigned writing_slot;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2070: FILE: drivers/net/wan/etp_stream/etp_stream.c:475:
+	unsigned beyond;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2071: FILE: drivers/net/wan/etp_stream/etp_stream.c:476:
+	unsigned starting;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2073: FILE: drivers/net/wan/etp_stream/etp_stream.c:478:
+	struct rw_semaphore *semaphore = &this_if_priv(channel)->semaphore;
+	down_write(semaphore);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#2075: FILE: drivers/net/wan/etp_stream/etp_stream.c:480:
+	if (unlikely(slot == NULL)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2088: FILE: drivers/net/wan/etp_stream/etp_stream.c:493:
+		unsigned length;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2089: FILE: drivers/net/wan/etp_stream/etp_stream.c:494:
+		unsigned length;
+		if (unlikely(writing == interface->transmitting &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#2136: FILE: drivers/net/wan/etp_stream/etp_stream.c:541:
+	unsigned long flow;
+	poll_wait(file, &interface->queue, wait);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2165: FILE: drivers/net/wan/etp_stream/etp_stream.c:570:
+	struct rw_semaphore *semaphore = &interface->semaphore;
+	mutex_lock(mutex);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2205: FILE: drivers/net/wan/etp_stream/etp_stream.c:610:
+			unsigned g704 =

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2207: FILE: drivers/net/wan/etp_stream/etp_stream.c:612:
+			unsigned g704_old = oldlength <

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2210: FILE: drivers/net/wan/etp_stream/etp_stream.c:615:
+			error = etp_write_idt_register_if_lock(card_number,
+							E1_TRNCVR_E1_MODE_REG,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2219: FILE: drivers/net/wan/etp_stream/etp_stream.c:624:
+				my_interface->timeslot0 += g704 && (!g704_old
+								    || slot !=

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2242: FILE: drivers/net/wan/etp_stream/etp_stream.c:647:
+	uint32_t slots = (uint32_t)write_slot(file->position) -

WARNING:LINE_SPACING: Missing a blank line after declarations
#2260: FILE: drivers/net/wan/etp_stream/etp_stream.c:665:
+			unsigned char interface = file->interface;
+			return etp_fill(file, get_dev_priv(card)->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'interface_privates[interface].ch_priv.tx_slots'
#2262: FILE: drivers/net/wan/etp_stream/etp_stream.c:667:
+						interface_privates[interface].
+						ch_priv.tx_slots, file->length,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2268: FILE: drivers/net/wan/etp_stream/etp_stream.c:673:
+			struct etp_file *file = file_p->private_data;
+			return atomic_xchg(&file->exceptions, ETP_STREAM_CLEAR);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2275: FILE: drivers/net/wan/etp_stream/etp_stream.c:680:
+			unsigned data = arg == (unsigned long)-10 ? 0x15 : 0x54;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2277: FILE: drivers/net/wan/etp_stream/etp_stream.c:682:
+			struct etp_file *file = file_p->private_data;
+			return etp_write_idt_register_if_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2277: FILE: drivers/net/wan/etp_stream/etp_stream.c:682:
+			return etp_write_idt_register_if_lock(

WARNING:LINE_SPACING: Missing a blank line after declarations
#2287: FILE: drivers/net/wan/etp_stream/etp_stream.c:692:
+			struct etp_file *file = file_p->private_data;
+			return etp_read_idt_register_if_lock(file->card,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2294: FILE: drivers/net/wan/etp_stream/etp_stream.c:699:
+			struct etp_file *interface = file_p->private_data;
+			return get_dev_priv(interface->card)->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'interface_privates[interface->interface].ch_priv.tx_slots'
#2296: FILE: drivers/net/wan/etp_stream/etp_stream.c:701:
+				interface_privates[interface->interface].
+				ch_priv.tx_slots;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#2312: FILE: drivers/net/wan/etp_stream/etp_stream.c:717:
+	int32_t offset = loffset;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#2314: FILE: drivers/net/wan/etp_stream/etp_stream.c:719:
+	int32_t slot_offset, frame_offset, slot, frame, writing;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2319: FILE: drivers/net/wan/etp_stream/etp_stream.c:724:
+	struct rw_semaphore *semaphore = &ip->semaphore;
+	down_write(semaphore);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#2328: FILE: drivers/net/wan/etp_stream/etp_stream.c:733:
+		int32_t fill = -etp_fill(file, slots, length, card, interface);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2329: FILE: drivers/net/wan/etp_stream/etp_stream.c:734:
+		int32_t fill = -etp_fill(file, slots, length, card, interface);
+		if (unlikely(offset < fill)) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#2335: FILE: drivers/net/wan/etp_stream/etp_stream.c:740:
+			int32_t limit = (int32_t)slots * FRAMES_IN_SLOT *

WARNING:CONST_STRUCT: struct file_operations should normally be const
#2386: FILE: drivers/net/wan/etp_stream/etp_stream.c:791:
+static struct file_operations etp_char_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2399: FILE: drivers/net/wan/etp_stream/etp_stream.c:804:
+	unsigned index;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2401: FILE: drivers/net/wan/etp_stream/etp_stream.c:806:
+	int error;
+	number = etp_number_devices();

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cards)...) over kzalloc(sizeof(struct etp_card)...)
#2404: FILE: drivers/net/wan/etp_stream/etp_stream.c:809:
+	cards = kzalloc(sizeof(struct etp_card) * number, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#2404: FILE: drivers/net/wan/etp_stream/etp_stream.c:809:
+	cards = kzalloc(sizeof(struct etp_card) * number, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cards"
#2405: FILE: drivers/net/wan/etp_stream/etp_stream.c:810:
+	if (unlikely(cards == NULL))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2410: FILE: drivers/net/wan/etp_stream/etp_stream.c:815:
+		unsigned interface;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2411: FILE: drivers/net/wan/etp_stream/etp_stream.c:816:
+		unsigned interface;
+		card->number = index;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2445: FILE: drivers/net/wan/etp_main.c:1:
+/* etp_main.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2448: FILE: drivers/net/wan/etp_main.c:4:
+/*
+	Copyright (C) 2006 Jouni Kujala, Flexibilis Oy.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2503: FILE: drivers/net/wan/etp_main.c:59:
+static struct pci_device_id etp_pci_tbl[] __devinitdata = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2525: FILE: drivers/net/wan/etp_main.c:81:
+static int etp_char_open(struct inode *inode, struct file *filp);
                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2526: FILE: drivers/net/wan/etp_main.c:82:
+static int etp_char_ioctl(struct inode *inode, struct file *filp,
                                                             ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#2531: FILE: drivers/net/wan/etp_main.c:87:
+static struct file_operations etp_char_fops = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2547: FILE: drivers/net/wan/etp_main.c:103:
+		printk(KERN_WARNING

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2570: FILE: drivers/net/wan/etp_main.c:126:
+static int etp_if_close_down(unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2575: FILE: drivers/net/wan/etp_main.c:131:
+static unsigned if_to_led(unsigned interface)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2575: FILE: drivers/net/wan/etp_main.c:131:
+static unsigned if_to_led(unsigned interface)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2583: FILE: drivers/net/wan/etp_main.c:139:
+static void set_led(uint32_t new_value, struct etp_interface_private *ip,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2584: FILE: drivers/net/wan/etp_main.c:140:
+		    unsigned interface, struct etp_device_private *dp)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#2586: FILE: drivers/net/wan/etp_main.c:142:
+	uint8_t __iomem *ioaddr = dp->ioaddr;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2588: FILE: drivers/net/wan/etp_main.c:144:
+	/* The idea here is that we do not need to read the old value from
+	   device because we know what we have written there. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2588: FILE: drivers/net/wan/etp_main.c:144:
+	   device because we know what we have written there. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2589: FILE: drivers/net/wan/etp_main.c:145:
+	uint32_t old = dp->led_register_value;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2590: FILE: drivers/net/wan/etp_main.c:146:
+	uint32_t temp = old;	/* LED value temp */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2610: FILE: drivers/net/wan/etp_main.c:166:
+	unsigned int interface = interface_number(ip);
+	return (dp->led_register_value >> LEDx_SHIFT(if_to_led(interface))) &

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2614: FILE: drivers/net/wan/etp_main.c:170:
+static int __devinit etp_init_device(struct pci_dev *pdev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2621: FILE: drivers/net/wan/etp_main.c:177:
+	unsigned channel;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2623: FILE: drivers/net/wan/etp_main.c:179:
+	struct mutex *device_mutex = &dp->mutex;
+	cancel_delayed_work(&dp->led);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2629: FILE: drivers/net/wan/etp_main.c:185:
+		const unsigned mode = ip->if_mode;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2631: FILE: drivers/net/wan/etp_main.c:187:
+		struct etp_channel_private *cp = &ip->ch_priv;
+		if (mode >= IF_MODE_TIMESLOT) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2637: FILE: drivers/net/wan/etp_main.c:193:
+			struct net_device *dev = cp->this_netdev;
+			if (dev) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2667: FILE: drivers/net/wan/etp_main.c:223:
+	unsigned channel;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2669: FILE: drivers/net/wan/etp_main.c:225:
+	unsigned irq;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2671: FILE: drivers/net/wan/etp_main.c:227:
+	struct etp_interface_private *interfaces;
+	pci_set_power_state(pdev, PCI_D0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2695: FILE: drivers/net/wan/etp_main.c:251:
+		struct net_device *dev = cp->this_netdev;
+		if (likely(dev)) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2709: FILE: drivers/net/wan/etp_main.c:265:
+static void __devexit etp_remove_device(struct pci_dev *pdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2725: FILE: drivers/net/wan/etp_main.c:281:
+	int ret = pci_register_driver(&etp_driver);
+	if (unlikely(ret))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2737: FILE: drivers/net/wan/etp_main.c:293:
+	unsigned device;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2738: FILE: drivers/net/wan/etp_main.c:294:
+	unsigned device;
+	pci_unregister_driver(&etp_driver);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2743: FILE: drivers/net/wan/etp_main.c:299:
+		struct workqueue_struct *queue = card->queue;
+		if (queue)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2764: FILE: drivers/net/wan/etp_main.c:320:
+static void rx_null_callback(unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2764: FILE: drivers/net/wan/etp_main.c:320:
+static void rx_null_callback(unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2765: FILE: drivers/net/wan/etp_main.c:321:
+			     unsigned can_be, const struct slot_struct *rx)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2769: FILE: drivers/net/wan/etp_main.c:325:
+static void tx_null_callback(unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2769: FILE: drivers/net/wan/etp_main.c:325:
+static void tx_null_callback(unsigned device, unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2770: FILE: drivers/net/wan/etp_main.c:326:
+			     unsigned can_be, struct slot_struct *tx)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cp->pppdevice
#2789: FILE: drivers/net/wan/etp_main.c:345:
+			&(cp->pppdevice);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#2793: FILE: drivers/net/wan/etp_main.c:349:
+		if (unlikely(!netdev)) {
[...]
+				"cannot allocate net device\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2842: FILE: drivers/net/wan/etp_main.c:398:
+	struct net_device *device = cp->this_netdev;
+	if (unlikely(device == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#2842: FILE: drivers/net/wan/etp_main.c:398:
+	if (unlikely(device == NULL))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2939: FILE: drivers/net/wan/etp_main.c:495:
+				uint32_t clock_source,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2940: FILE: drivers/net/wan/etp_main.c:496:
+				unsigned hdlc_mode,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2945: FILE: drivers/net/wan/etp_main.c:501:
+	struct net_device *netdev = cp->this_netdev;
+	if (cp->hdlc_mode != hdlc_mode) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2949: FILE: drivers/net/wan/etp_main.c:505:
+			int error;
+			etp_free_netdev(cp);

WARNING:SPLIT_STRING: quoted string split across lines
#2980: FILE: drivers/net/wan/etp_main.c:536:
+				dev_warn(&netdev->dev, "Interface open: "
+					 "cannot change clocking\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#3001: FILE: drivers/net/wan/etp_main.c:557:
+		int error;
+		if (likely(!atomic_read(&dp->reset))) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3017: FILE: drivers/net/wan/etp_main.c:573:
+	unsigned interface = 0u;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3018: FILE: drivers/net/wan/etp_main.c:574:
+	unsigned interface = 0u;
+	do {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3025: FILE: drivers/net/wan/etp_main.c:581:
+	unsigned interface = 0u;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3026: FILE: drivers/net/wan/etp_main.c:582:
+	unsigned interface = 0u;
+	do {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3031: FILE: drivers/net/wan/etp_main.c:587:
+static int __devinit etp_init_device(struct pci_dev *pdev,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3035: FILE: drivers/net/wan/etp_main.c:591:
+	uint8_t __iomem *ioaddr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card->pci_dev"
#3043: FILE: drivers/net/wan/etp_main.c:599:
+		if (card->pci_dev == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof(struct etp_device_private)...)
#3048: FILE: drivers/net/wan/etp_main.c:604:
+	card = kzalloc(sizeof(struct etp_device_private), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card"
#3049: FILE: drivers/net/wan/etp_main.c:605:
+	if (unlikely(card == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cards"
#3053: FILE: drivers/net/wan/etp_main.c:609:
+	if (unlikely(cards == NULL)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3066: FILE: drivers/net/wan/etp_main.c:622:
+		struct etp_channel_private *cp = &ip->ch_priv;
+		init_rwsem(&ip->semaphore);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioaddr"
#3123: FILE: drivers/net/wan/etp_main.c:679:
+	if (unlikely(ioaddr == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card->queue"
#3184: FILE: drivers/net/wan/etp_main.c:740:
+	if (likely(card->queue == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!queue"
#3187: FILE: drivers/net/wan/etp_main.c:743:
+		if (unlikely(queue == NULL)) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#3227: FILE: drivers/net/wan/etp_main.c:783:
+static void __devexit etp_remove_device(struct pci_dev *pdev)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3232: FILE: drivers/net/wan/etp_main.c:788:
+	uint8_t __iomem *ioaddr = dp->ioaddr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3233: FILE: drivers/net/wan/etp_main.c:789:
+	const unsigned device = device_number(dp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around interfaces[i]
#3243: FILE: drivers/net/wan/etp_main.c:799:
+		struct etp_interface_private *ip = &(interfaces[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3244: FILE: drivers/net/wan/etp_main.c:800:
+		struct etp_interface_private *ip = &(interfaces[i]);
+		switch (ip->if_mode) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around interfaces[i]
#3259: FILE: drivers/net/wan/etp_main.c:815:
+		struct etp_interface_private *ip = &(interfaces[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3260: FILE: drivers/net/wan/etp_main.c:816:
+		struct etp_interface_private *ip = &(interfaces[i]);
+		etp_free_netdev(&ip->ch_priv);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3279: FILE: drivers/net/wan/etp_main.c:835:
+static int etp_char_open(struct inode *inode, struct file *filp)
                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3290: FILE: drivers/net/wan/etp_main.c:846:
+static int etp_char_ioctl(struct inode *inode, struct file *filp,
                                                             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3307: FILE: drivers/net/wan/etp_main.c:863:
+			struct etp_ioctl_open open_struct;
+			if (unlikely(__copy_from_user(&open_struct,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3312: FILE: drivers/net/wan/etp_main.c:868:
+			error = etp_if_open(device, open_struct.interface,
+				open_struct.if_mode, open_struct.rx_slots,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3339: FILE: drivers/net/wan/etp_main.c:895:
+			struct etp_ioctl_interface_settings settings_struct;
+			if (unlikely(__copy_from_user

WARNING:LINE_SPACING: Missing a blank line after declarations
#3353: FILE: drivers/net/wan/etp_main.c:909:
+			struct etp_ioctl_ext_output_clock clock_struct;
+			if (unlikely(__copy_from_user(&clock_struct,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3364: FILE: drivers/net/wan/etp_main.c:920:
+			struct etp_ioctl_nco_adjust nco_struct;
+			if (unlikely(__copy_from_user(&nco_struct,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3375: FILE: drivers/net/wan/etp_main.c:931:
+			struct etp_device_status_struct status_struct;
+			error = etp_device_status_get(device, &status_struct);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3387: FILE: drivers/net/wan/etp_main.c:943:
+			struct etp_interface_status_struct status_struct;
+			if (unlikely(__copy_from_user(&status_struct,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3404: FILE: drivers/net/wan/etp_main.c:960:
+			return -ENXIO;
+		} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3406: FILE: drivers/net/wan/etp_main.c:962:
+			struct etp_ioctl_e1_access e1_struct;
+			if (unlikely(__copy_from_user(&e1_struct,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3411: FILE: drivers/net/wan/etp_main.c:967:
+				e1_struct.data = etp_read_idt_register_lock(

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'e1_struct.address'
#3414: FILE: drivers/net/wan/etp_main.c:970:
+								e1_struct.
+								address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3417: FILE: drivers/net/wan/etp_main.c:973:
+				error = etp_write_idt_register_lock(device,
+								e1_struct.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'e1_struct.address'
#3418: FILE: drivers/net/wan/etp_main.c:974:
+								e1_struct.
+								address,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3432: FILE: drivers/net/wan/etp_main.c:988:
+			return -ENXIO;
+		} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3436: FILE: drivers/net/wan/etp_main.c:992:
+			struct etp_channel_private *cp;
+			if (unlikely(__copy_from_user(&poll_struct,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3457: FILE: drivers/net/wan/etp_main.c:1013:
+					  unsigned channel_number,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3461: FILE: drivers/net/wan/etp_main.c:1017:
+	spinlock_t *lock = &dp->lock0;
+	spin_lock(lock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3470: FILE: drivers/net/wan/etp_main.c:1026:
+				       unsigned channel_number,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3480: FILE: drivers/net/wan/etp_main.c:1036:
+				unsigned interface,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3484: FILE: drivers/net/wan/etp_main.c:1040:
+	struct napi_struct *napi = &cp->napi;
+	cp->interrupt = true;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3496: FILE: drivers/net/wan/etp_main.c:1052:
+	bool disable;
+	spin_lock(lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3509: FILE: drivers/net/wan/etp_main.c:1065:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3531: FILE: drivers/net/wan/etp_main.c:1087:
+	uint8_t __iomem *ioaddr = dp->ioaddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3534: FILE: drivers/net/wan/etp_main.c:1090:
+	uint32_t intr_status_0 = readl(ioaddr + REG_INT_STAT0);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3535: FILE: drivers/net/wan/etp_main.c:1091:
+	uint32_t intr_status_2 = readl_relaxed(ioaddr + REG_INT_STAT2);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3538: FILE: drivers/net/wan/etp_main.c:1094:
+	/* Clear interrupts (only those visible in status,
+	   not those that happened after reading status) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3538: FILE: drivers/net/wan/etp_main.c:1094:
+	   not those that happened after reading status) */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3553: FILE: drivers/net/wan/etp_main.c:1109:
+		uint32_t ch_intr_status =

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#3573: FILE: drivers/net/wan/etp_main.c:1129:
+							      *netdev_stats,
 							      ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3574: FILE: drivers/net/wan/etp_main.c:1130:
+							      uint32_t desc_b,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3594: FILE: drivers/net/wan/etp_main.c:1150:
+		return true;
+	} else { /* OK, no error. */

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#3603: FILE: drivers/net/wan/etp_main.c:1159:
+							      *netdev_stats,
 							      ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3604: FILE: drivers/net/wan/etp_main.c:1160:
+							      uint32_t desc_b,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3618: FILE: drivers/net/wan/etp_main.c:1174:
+	unsigned d = cp->last_rx_desc_received;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3620: FILE: drivers/net/wan/etp_main.c:1176:
+	struct sk_buff *skb;
+	for (;;) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3623: FILE: drivers/net/wan/etp_main.c:1179:
+		uint32_t descb = readl(&rxdesc->desc_b);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3624: FILE: drivers/net/wan/etp_main.c:1180:
+		uint32_t descb = readl(&rxdesc->desc_b);
+		if (descb & RX_DESCB_TRANSFER)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3629: FILE: drivers/net/wan/etp_main.c:1185:
+			uint32_t length = descb & RX_DESCB_LENGT_MASK;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3630: FILE: drivers/net/wan/etp_main.c:1186:
+			bool error = etp_update_rx_descriptor_statistics_netdev(

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#3650: FILE: drivers/net/wan/etp_main.c:1206:
+						__constant_htons(ETH_P_WAN_PPP);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3664: FILE: drivers/net/wan/etp_main.c:1220:
+						if (skb->pkt_type ==

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3670: FILE: drivers/net/wan/etp_main.c:1226:
+						if (skb->pkt_type ==

WARNING:LINE_SPACING: Missing a blank line after declarations
#3684: FILE: drivers/net/wan/etp_main.c:1240:
+			dma_addr_t bus_address;
+			skb_reserve(skb, NET_IP_ALIGN);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3729: FILE: drivers/net/wan/etp_main.c:1285:
+	uint32_t desc_b;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3731: FILE: drivers/net/wan/etp_main.c:1287:
+	struct txdesc __iomem *txdesc;
+	while (((desc_b =

WARNING:LINE_SPACING: Missing a blank line after declarations
#3737: FILE: drivers/net/wan/etp_main.c:1293:
+		dma_addr_t address;
+		etp_update_tx_descriptor_statistics_netdev(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3737: FILE: drivers/net/wan/etp_main.c:1293:
+		etp_update_tx_descriptor_statistics_netdev(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3749: FILE: drivers/net/wan/etp_main.c:1305:
+			unsigned written = slot + 1u;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3750: FILE: drivers/net/wan/etp_main.c:1306:
+			unsigned written = slot + 1u;
+			written *= written < slots;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3770: FILE: drivers/net/wan/etp_main.c:1326:
+	uint32_t desc_b;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3779: FILE: drivers/net/wan/etp_main.c:1335:
+		etp_update_rx_descriptor_statistics_netdev(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3783: FILE: drivers/net/wan/etp_main.c:1339:
+		/* update counters pointing to last received descriptors & slots
+		   and increase last received descriptor counter */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3783: FILE: drivers/net/wan/etp_main.c:1339:
+		   and increase last received descriptor counter */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3793: FILE: drivers/net/wan/etp_main.c:1349:
+			unsigned read = slot + 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3794: FILE: drivers/net/wan/etp_main.c:1350:
+			unsigned read = slot + 1;
+			read *= read < slots;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3806: FILE: drivers/net/wan/etp_main.c:1362:
+	unsigned d;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3807: FILE: drivers/net/wan/etp_main.c:1363:
+	uint32_t desc_b;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3819: FILE: drivers/net/wan/etp_main.c:1375:
+		uint32_t length = desc_b & TX_DESCB_LENGT_MASK;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3820: FILE: drivers/net/wan/etp_main.c:1376:
+		uint32_t length = desc_b & TX_DESCB_LENGT_MASK;
+		pci_unmap_single(this_device_priv(cp)->pci_dev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp->tx_descriptor[cp->last_tx_desc_transmitted].skb"
#3835: FILE: drivers/net/wan/etp_main.c:1391:
+	    cp->tx_descriptor[cp->last_tx_desc_transmitted].skb == NULL &&

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3842: FILE: drivers/net/wan/etp_main.c:1398:
+					 unsigned channel_number,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3847: FILE: drivers/net/wan/etp_main.c:1403:
+	spinlock_t *lock = &dp->lock0;
+	spin_lock_irqsave(lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3867: FILE: drivers/net/wan/etp_main.c:1423:
+		struct etp_device_private *dp;
+		do {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3881: FILE: drivers/net/wan/etp_main.c:1437:
+		int poll = 0;
+		do {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3883: FILE: drivers/net/wan/etp_main.c:1439:
+			struct net_device *dev = cp->this_netdev;
+			cp->interrupt = false;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3913: FILE: drivers/net/wan/etp_main.c:1469:
+	struct etp_device_private *dp = cp->this_dev_priv;
+	local_irq_disable();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3921: FILE: drivers/net/wan/etp_main.c:1477:
+	unsigned d;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3922: FILE: drivers/net/wan/etp_main.c:1478:
+	unsigned d;
+	for (d = 0u; d < DESCRIPTORS_PER_CHANNEL; d++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3926: FILE: drivers/net/wan/etp_main.c:1482:
+		struct txdesc __iomem *txdesc;
+		writel(0u, &rxdesc->desc_b);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3937: FILE: drivers/net/wan/etp_main.c:1493:
+	unsigned d;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3938: FILE: drivers/net/wan/etp_main.c:1494:
+	unsigned d;
+	for (d = 0u; d < DESCRIPTORS_PER_CHANNEL; d++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3941: FILE: drivers/net/wan/etp_main.c:1497:
+		struct sk_buff *skb = rx->skb;
+		if (skb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#3941: FILE: drivers/net/wan/etp_main.c:1497:
+		if (skb != NULL) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3955: FILE: drivers/net/wan/etp_main.c:1511:
+	unsigned channel_number = cp->channel_number;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3958: FILE: drivers/net/wan/etp_main.c:1514:
+	unsigned d;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3959: FILE: drivers/net/wan/etp_main.c:1515:
+	uint8_t __iomem *ioaddr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#4078: FILE: drivers/net/wan/etp_main.c:1634:
+		if (unlikely(skb == NULL))

WARNING:LINE_SPACING: Missing a blank line after declarations
#4086: FILE: drivers/net/wan/etp_main.c:1642:
+			struct rxdesc __iomem *rxdesc;
+			pci_unmap_addr_set(rx, address, address);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#4119: FILE: drivers/net/wan/etp_main.c:1675:
+	struct etp_channel_private *cp
+		= ((struct etp_netdev_priv *)(netdev_priv(dev)))->cp;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4120: FILE: drivers/net/wan/etp_main.c:1676:
+	unsigned last_transmitted;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4121: FILE: drivers/net/wan/etp_main.c:1677:
+	uint8_t *data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4123: FILE: drivers/net/wan/etp_main.c:1679:
+	unsigned tx_length = skb->len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4129: FILE: drivers/net/wan/etp_main.c:1685:
+		uint32_t *s_addr = &ip_header->saddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4130: FILE: drivers/net/wan/etp_main.c:1686:
+		uint32_t *d_addr = &ip_header->daddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4131: FILE: drivers/net/wan/etp_main.c:1687:
+		uint32_t *d_addr = &ip_header->daddr;
+		if (skb->len < sizeof(struct ethhdr) + sizeof(struct iphdr))

CHECK:SPACING: No space is necessary after a cast
#4133: FILE: drivers/net/wan/etp_main.c:1689:
+		((u8 *) s_addr)[3] ^= 4;

CHECK:SPACING: No space is necessary after a cast
#4134: FILE: drivers/net/wan/etp_main.c:1690:
+		((u8 *) d_addr)[3] ^= 4;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4168: FILE: drivers/net/wan/etp_main.c:1724:
+			struct txdesc __iomem *txdesc;
+			last_transmitted = cp->last_tx_desc_transmitted;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4184: FILE: drivers/net/wan/etp_main.c:1740:
+		unsigned next = (last_transmitted + 1u) &

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cp->tx_descriptor[next].skb"
#4188: FILE: drivers/net/wan/etp_main.c:1744:
+		if (cp->tx_descriptor[next].skb != NULL)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4200: FILE: drivers/net/wan/etp_main.c:1756:
+	uint8_t __iomem *ioaddr, *reg_rst_ctrl;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4201: FILE: drivers/net/wan/etp_main.c:1757:
+	unsigned d = cp->channel_number;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4202: FILE: drivers/net/wan/etp_main.c:1758:
+	uint32_t __iomem *reg_if_txctrl = ip->reg_if_txctrl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4235: FILE: drivers/net/wan/etp_main.c:1791:
+		struct sk_buff *skb = tx->skb;
+		if (skb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#4235: FILE: drivers/net/wan/etp_main.c:1791:
+		if (skb != NULL) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#4249: FILE: drivers/net/wan/etp_main.c:1805:
+	struct etp_channel_private *cp
+		= ((struct etp_netdev_priv *)(netdev_priv(dev)))->cp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4252: FILE: drivers/net/wan/etp_main.c:1808:
+	struct etp_device_private *dp = this_dev_priv(ip);
+	if (unlikely(!netif_device_present(dev)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4259: FILE: drivers/net/wan/etp_main.c:1815:
+static inline int idt_los(unsigned device, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4259: FILE: drivers/net/wan/etp_main.c:1815:
+static inline int idt_los(unsigned device, unsigned offset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4270: FILE: drivers/net/wan/etp_main.c:1826:
+	spinlock_t *lock = &dp->lock2;
+	spin_lock_irq(lock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4282: FILE: drivers/net/wan/etp_main.c:1838:
+	unsigned interface;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4283: FILE: drivers/net/wan/etp_main.c:1839:
+	const unsigned device = device_number(dp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4285: FILE: drivers/net/wan/etp_main.c:1841:
+	struct mutex *mutex = &dp->idt;
+	if (unlikely(atomic_read(&dp->reset)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4297: FILE: drivers/net/wan/etp_main.c:1853:
+		unsigned mode;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4301: FILE: drivers/net/wan/etp_main.c:1857:
+		struct net_device *this_netdev;
+		if (unlikely(offset < 0))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4339: FILE: drivers/net/wan/etp_main.c:1894:
+/* Work called to read IDT chip for setting LEDs right after 4
+static void led_work(struct work_struct *work)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4350: FILE: drivers/net/wan/etp_main.c:1904:
+/* ---------- Functions of etp kernel interface (defined in etp.h)
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4356: FILE: drivers/net/wan/etp_main.c:1910:
+	unsigned interface = callback_p->interface;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4359: FILE: drivers/net/wan/etp_main.c:1913:
+	unsigned index = callback_p->index;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4362: FILE: drivers/net/wan/etp_main.c:1916:
+	void (*rx_callback) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#4362: FILE: drivers/net/wan/etp_main.c:1916:
+	void (*rx_callback) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4363: FILE: drivers/net/wan/etp_main.c:1917:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4364: FILE: drivers/net/wan/etp_main.c:1918:
+			     unsigned read,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4367: FILE: drivers/net/wan/etp_main.c:1921:
+	void (*rx_old) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#4367: FILE: drivers/net/wan/etp_main.c:1921:
+	void (*rx_old) (unsigned device,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct slot_struct *' should also have an identifier name
#4367: FILE: drivers/net/wan/etp_main.c:1921:
+	void (*rx_old) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4368: FILE: drivers/net/wan/etp_main.c:1922:
+			unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4369: FILE: drivers/net/wan/etp_main.c:1923:
+			unsigned read,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4371: FILE: drivers/net/wan/etp_main.c:1925:
+	void (*tx_callback) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#4371: FILE: drivers/net/wan/etp_main.c:1925:
+	void (*tx_callback) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4372: FILE: drivers/net/wan/etp_main.c:1926:
+			     unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4373: FILE: drivers/net/wan/etp_main.c:1927:
+			     unsigned written,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4375: FILE: drivers/net/wan/etp_main.c:1929:
+	void (*tx_old) (unsigned device,

WARNING:SPACING: Unnecessary space before function pointer arguments
#4375: FILE: drivers/net/wan/etp_main.c:1929:
+	void (*tx_old) (unsigned device,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct slot_struct *' should also have an identifier name
#4375: FILE: drivers/net/wan/etp_main.c:1929:
+	void (*tx_old) (unsigned device,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4376: FILE: drivers/net/wan/etp_main.c:1930:
+			unsigned interface,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4377: FILE: drivers/net/wan/etp_main.c:1931:
+			unsigned written,

WARNING:LINE_SPACING: Missing a blank line after declarations
#4380: FILE: drivers/net/wan/etp_main.c:1934:
+	int error = 0;
+	mutex_lock(mutex);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4417: FILE: drivers/net/wan/etp_main.c:1971:
+int etp_frame(unsigned device, unsigned interface, bool frame)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4417: FILE: drivers/net/wan/etp_main.c:1971:
+int etp_frame(unsigned device, unsigned interface, bool frame)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4421: FILE: drivers/net/wan/etp_main.c:1975:
+		return -ENXIO;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4428: FILE: drivers/net/wan/etp_main.c:1982:
+			int error = idt_open_if_timeslot(dp, interface);
+			if (unlikely(error))

WARNING:LINE_SPACING: Missing a blank line after declarations
#4434: FILE: drivers/net/wan/etp_main.c:1988:
+			int error = idt_open_if_stream(dp, interface);
+			if (unlikely(error))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4445: FILE: drivers/net/wan/etp_main.c:1999:
+int etp_if_open(unsigned device,	/* The number of the device. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4446: FILE: drivers/net/wan/etp_main.c:2000:
+		unsigned interface,	/* The number of the interface. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4447: FILE: drivers/net/wan/etp_main.c:2001:
+		unsigned if_mode,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4448: FILE: drivers/net/wan/etp_main.c:2002:
+		unsigned rx_slots,	/* The size of the rx buffer. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4449: FILE: drivers/net/wan/etp_main.c:2003:
+		unsigned rx_slots,	/* The size of the rx buffer. */
+		unsigned tx_slots)	/* The size of the rx buffer. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4449: FILE: drivers/net/wan/etp_main.c:2003:
+		unsigned tx_slots)	/* The size of the rx buffer. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4455: FILE: drivers/net/wan/etp_main.c:2009:
+	unsigned d;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4461: FILE: drivers/net/wan/etp_main.c:2015:
+	if (unlikely(tx_slots < MIN_SLOTS
+		     || tx_slots > MAX_SLOTS

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4462: FILE: drivers/net/wan/etp_main.c:2016:
+		     || tx_slots > MAX_SLOTS
+		     || rx_slots < MIN_SLOTS

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4463: FILE: drivers/net/wan/etp_main.c:2017:
+		     || rx_slots < MIN_SLOTS
+		     || rx_slots > MAX_SLOTS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp->tx"
#4501: FILE: drivers/net/wan/etp_main.c:2055:
+	if (unlikely(cp->tx == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp->rx"
#4508: FILE: drivers/net/wan/etp_main.c:2062:
+	if (unlikely(cp->rx == NULL)) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4541: FILE: drivers/net/wan/etp_main.c:2095:
+		uint8_t __iomem *ioaddr = dp->ioaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4542: FILE: drivers/net/wan/etp_main.c:2096:
+		uint8_t __iomem *ioaddr = dp->ioaddr;
+		queue_status_work(dp, ioaddr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4546: FILE: drivers/net/wan/etp_main.c:2100:
+			struct timer_list *timer = &cp->timer;
+			timer->expires = jiffies + HZ / 1000ul;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4571: FILE: drivers/net/wan/etp_main.c:2125:
+static int etp_if_close_down(unsigned interface, struct etp_device_private *dp,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4575: FILE: drivers/net/wan/etp_main.c:2129:
+	uint8_t __iomem *ioaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4579: FILE: drivers/net/wan/etp_main.c:2133:
+	unsigned char mode = ip->if_mode;
+	if (unlikely(net_device == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!net_device"
#4579: FILE: drivers/net/wan/etp_main.c:2133:
+	if (unlikely(net_device == NULL))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4622: FILE: drivers/net/wan/etp_main.c:2176:
+int etp_if_close(unsigned device, /* The number of the device. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4623: FILE: drivers/net/wan/etp_main.c:2177:
+		 unsigned interface) /* The number of the interface. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#4629: FILE: drivers/net/wan/etp_main.c:2183:
+	int error;
+	down_write(ip_semaphore);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4642: FILE: drivers/net/wan/etp_main.c:2196:
+	struct etp_channel_private *cp = &ip->ch_priv;
+	if (unlikely(ip->if_mode < IF_MODE_TIMESLOT)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4644: FILE: drivers/net/wan/etp_main.c:2198:
+		struct net_device *device = cp->this_netdev;
+		if (device)

WARNING:SPLIT_STRING: quoted string split across lines
#4646: FILE: drivers/net/wan/etp_main.c:2200:
+			dev_warn(&device->dev, "Cannot set transmitter on "
+				 "because not in timeslot or stream mode\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4660: FILE: drivers/net/wan/etp_main.c:2214:
+int etp_tx_on(unsigned device, unsigned channel)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4660: FILE: drivers/net/wan/etp_main.c:2214:
+int etp_tx_on(unsigned device, unsigned channel)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4666: FILE: drivers/net/wan/etp_main.c:2220:
+	struct rw_semaphore *ip_semaphore;
+	if (unlikely(device >= etp_number || channel >= INTERFACES_PER_DEVICE))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4682: FILE: drivers/net/wan/etp_main.c:2236:
+	unsigned mode = ip->if_mode;

WARNING:SPLIT_STRING: quoted string split across lines
#4687: FILE: drivers/net/wan/etp_main.c:2241:
+		dev_warn(&cp->this_netdev->dev, "Cannot set transmitter off "
+			 "because not in timeslot or stream mode\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4704: FILE: drivers/net/wan/etp_main.c:2258:
+int etp_tx_off(unsigned device, unsigned channel)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4704: FILE: drivers/net/wan/etp_main.c:2258:
+int etp_tx_off(unsigned device, unsigned channel)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4710: FILE: drivers/net/wan/etp_main.c:2264:
+	int error;
+	if (unlikely(device >= etp_number || channel >= INTERFACES_PER_DEVICE))

WARNING:LINE_SPACING: Missing a blank line after declarations
#4725: FILE: drivers/net/wan/etp_main.c:2279:
+	struct etp_channel_private *cp = &ip->ch_priv;
+	if (unlikely(ip->if_mode < IF_MODE_TIMESLOT)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4727: FILE: drivers/net/wan/etp_main.c:2281:
+		struct net_device *device = cp->this_netdev;
+		if (device)

WARNING:SPLIT_STRING: quoted string split across lines
#4729: FILE: drivers/net/wan/etp_main.c:2283:
+			dev_warn(&device->dev, "Cannot set receiver on "
+				 "because not in timeslot or stream mode\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4739: FILE: drivers/net/wan/etp_main.c:2293:
+int etp_rx_on(unsigned device, unsigned channel)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4739: FILE: drivers/net/wan/etp_main.c:2293:
+int etp_rx_on(unsigned device, unsigned channel)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4745: FILE: drivers/net/wan/etp_main.c:2299:
+	struct rw_semaphore *ip_semaphore;
+	if (unlikely(device >= etp_number || channel >= INTERFACES_PER_DEVICE))

WARNING:LINE_SPACING: Missing a blank line after declarations
#4762: FILE: drivers/net/wan/etp_main.c:2316:
+	struct etp_channel_private *cp = &ip->ch_priv;
+	if (unlikely(ip->if_mode == IF_MODE_HDLC)) {

WARNING:SPLIT_STRING: quoted string split across lines
#4764: FILE: drivers/net/wan/etp_main.c:2318:
+		dev_warn(&cp->this_netdev->dev, "Cannot set receiver off "
+			 "because not in timeslot or stream mode\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4775: FILE: drivers/net/wan/etp_main.c:2329:
+int etp_rx_off(unsigned device,	/* The number of the device. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4776: FILE: drivers/net/wan/etp_main.c:2330:
+	       unsigned channel)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4782: FILE: drivers/net/wan/etp_main.c:2336:
+	int error;
+	if (unlikely(device >= etp_number || channel >= INTERFACES_PER_DEVICE))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4795: FILE: drivers/net/wan/etp_main.c:2349:
+int etp_if_settings(unsigned device, /* The number of the device */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4796: FILE: drivers/net/wan/etp_main.c:2350:
+		    unsigned channel, /* The number of interface */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4797: FILE: drivers/net/wan/etp_main.c:2351:
+		    uint32_t clock_source, /* whence the transmit clock comes */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4798: FILE: drivers/net/wan/etp_main.c:2352:
+		    unsigned hdlc_mode,

WARNING:LINE_SPACING: Missing a blank line after declarations
#4805: FILE: drivers/net/wan/etp_main.c:2359:
+	struct rw_semaphore *ip_semaphore;
+	if (unlikely(device >= etp_number || channel >= INTERFACES_PER_DEVICE))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4824: FILE: drivers/net/wan/etp_main.c:2378:
+int etp_ext_output_clock(unsigned device, uint32_t clock_source)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4829: FILE: drivers/net/wan/etp_main.c:2383:
+	struct rw_semaphore *ip_semaphore;
+	if (unlikely(device >= etp_number))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4845: FILE: drivers/net/wan/etp_main.c:2399:
+int etp_nco_adjust(unsigned device, uint32_t nco_addend_value)

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4848: FILE: drivers/net/wan/etp_main.c:2402:
+	struct mutex *mutex;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4850: FILE: drivers/net/wan/etp_main.c:2404:
+	int error;
+	if (unlikely(device >= etp_number))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4870: FILE: drivers/net/wan/syncppp.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4890: FILE: drivers/net/wan/syncppp.c:21:
+/*
+ * Synchronous PPP/Cisco link level subroutines.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#4905: FILE: drivers/net/wan/syncppp.c:36:
+ * $Id: syncppp.c,v 1.18 2000/04/11 05:25:31 asj Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#4927: FILE: drivers/net/wan/syncppp.c:58:
+#include <asm/uaccess.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4940: FILE: drivers/net/wan/syncppp.c:70:
+#define PPP_IPCP        0x8021          /* Internet Protocol Control
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4982: FILE: drivers/net/wan/syncppp.c:112:
+};
+#define PPP_HEADER_LEN          sizeof (struct ppp_header)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4982: FILE: drivers/net/wan/syncppp.c:112:
+#define PPP_HEADER_LEN          sizeof (struct ppp_header)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4982: FILE: drivers/net/wan/syncppp.c:112:
+#define PPP_HEADER_LEN          sizeof (struct ppp_header)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4989: FILE: drivers/net/wan/syncppp.c:119:
+};
+#define LCP_HEADER_LEN          sizeof (struct lcp_header)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4989: FILE: drivers/net/wan/syncppp.c:119:
+#define LCP_HEADER_LEN          sizeof (struct lcp_header)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4989: FILE: drivers/net/wan/syncppp.c:119:
+#define LCP_HEADER_LEN          sizeof (struct lcp_header)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4999: FILE: drivers/net/wan/syncppp.c:129:
+};
+#define CISCO_PACKET_LEN 18

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5009: FILE: drivers/net/wan/syncppp.c:139:
+static void sppp_keepalive (unsigned long dummy);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5010: FILE: drivers/net/wan/syncppp.c:140:
+static void sppp_cp_send (struct sppp *sp, u16 proto, u8 type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5011: FILE: drivers/net/wan/syncppp.c:141:
+static void sppp_cp_send (struct sppp *sp, u16 proto, u8 type,
+	u8 ident, u16 len, void *data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5012: FILE: drivers/net/wan/syncppp.c:142:
+static void sppp_cisco_send (struct sppp *sp, int type, u32 par1, u32 par2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5013: FILE: drivers/net/wan/syncppp.c:143:
+static void sppp_lcp_input (struct sppp *sp, struct sk_buff *m);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5014: FILE: drivers/net/wan/syncppp.c:144:
+static void sppp_cisco_input (struct sppp *sp, struct sk_buff *m);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5015: FILE: drivers/net/wan/syncppp.c:145:
+static void sppp_ipcp_input (struct sppp *sp, struct sk_buff *m);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5016: FILE: drivers/net/wan/syncppp.c:146:
+static void sppp_lcp_open (struct sppp *sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5017: FILE: drivers/net/wan/syncppp.c:147:
+static void sppp_ipcp_open (struct sppp *sp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5019: FILE: drivers/net/wan/syncppp.c:149:
+static int sppp_lcp_conf_parse_options (struct sppp *sp, struct lcp_header *h,
+	int len, u32 *magic);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5020: FILE: drivers/net/wan/syncppp.c:150:
+static void sppp_cp_timeout (unsigned long arg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5021: FILE: drivers/net/wan/syncppp.c:151:
+static char *sppp_lcp_type_name (u8 type);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5022: FILE: drivers/net/wan/syncppp.c:152:
+static char *sppp_ipcp_type_name (u8 type);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5038: FILE: drivers/net/wan/syncppp.c:168:
+	struct sk_buff *skb;
+	while ((skb = skb_dequeue(&tx_queue)) != NULL)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5043: FILE: drivers/net/wan/syncppp.c:173:
+/*
+ *	Interface down stub

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5044: FILE: drivers/net/wan/syncppp.c:174:
+ */^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5050: FILE: drivers/net/wan/syncppp.c:180:
+	sp->pp_link_state=SPPP_LINK_DOWN;
 	                 ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5054: FILE: drivers/net/wan/syncppp.c:184:
+/*
+ * Timeout routine activations.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5057: FILE: drivers/net/wan/syncppp.c:187:
+static void sppp_set_timeout(struct sppp *p,int s)
                                            ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5059: FILE: drivers/net/wan/syncppp.c:189:
+	if (! (p->pp_flags & PP_TIMO))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#5059: FILE: drivers/net/wan/syncppp.c:189:
+	if (! (p->pp_flags & PP_TIMO))
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5062: FILE: drivers/net/wan/syncppp.c:192:
+		p->pp_timer.function=sppp_cp_timeout;
 		                    ^

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#5063: FILE: drivers/net/wan/syncppp.c:193:
+		p->pp_timer.expires=jiffies+s*HZ;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5063: FILE: drivers/net/wan/syncppp.c:193:
+		p->pp_timer.expires=jiffies+s*HZ;
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5063: FILE: drivers/net/wan/syncppp.c:193:
+		p->pp_timer.expires=jiffies+s*HZ;
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5064: FILE: drivers/net/wan/syncppp.c:194:
+		p->pp_timer.data=(unsigned long)p;
 		                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5072: FILE: drivers/net/wan/syncppp.c:202:
+	if (p->pp_flags & PP_TIMO)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5094: FILE: drivers/net/wan/syncppp.c:224:
+static void sppp_input (struct net_device *dev, struct sk_buff *skb)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5100: FILE: drivers/net/wan/syncppp.c:230:
+	skb->dev=dev;
 	        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5103: FILE: drivers/net/wan/syncppp.c:233:
+	if (dev->flags & IFF_RUNNING)
+	{

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#5106: FILE: drivers/net/wan/syncppp.c:236:
+		sp->ibytes+= skb->len + 3;
 		          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5113: FILE: drivers/net/wan/syncppp.c:243:
+			printk (KERN_DEBUG "%s: input packet is too small, %d bytes\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5113: FILE: drivers/net/wan/syncppp.c:243:
+			printk (KERN_DEBUG "%s: input packet is too small, %d bytes\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5121: FILE: drivers/net/wan/syncppp.c:251:
+	skb_pull(skb,sizeof(struct ppp_header));
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5124: FILE: drivers/net/wan/syncppp.c:254:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5133: FILE: drivers/net/wan/syncppp.c:263:
+				printk (KERN_WARNING "%s: PPP packet in Cisco mode <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5133: FILE: drivers/net/wan/syncppp.c:263:
+				printk (KERN_WARNING "%s: PPP packet in Cisco mode <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5141: FILE: drivers/net/wan/syncppp.c:271:
+				sppp_cp_send (sp, PPP_LCP, LCP_PROTO_REJ,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5142: FILE: drivers/net/wan/syncppp.c:272:
+				sppp_cp_send (sp, PPP_LCP, LCP_PROTO_REJ,
+					++sp->pp_seq, skb->len + 2,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5145: FILE: drivers/net/wan/syncppp.c:275:
+				printk (KERN_WARNING "%s: invalid input protocol <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5145: FILE: drivers/net/wan/syncppp.c:275:
+				printk (KERN_WARNING "%s: invalid input protocol <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5150: FILE: drivers/net/wan/syncppp.c:280:
+			sppp_lcp_input (sp, skb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5154: FILE: drivers/net/wan/syncppp.c:284:
+				sppp_ipcp_input (sp, skb);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5156: FILE: drivers/net/wan/syncppp.c:286:
+				printk(KERN_DEBUG "IPCP when still waiting LCP finish.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#5160: FILE: drivers/net/wan/syncppp.c:290:
+				if(sp->pp_flags&PP_DEBUG)
 				               ^

ERROR:SPACING: space required before the open parenthesis '('
#5160: FILE: drivers/net/wan/syncppp.c:290:
+				if(sp->pp_flags&PP_DEBUG)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5161: FILE: drivers/net/wan/syncppp.c:291:
+					printk(KERN_DEBUG "Yow an IP frame.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5162: FILE: drivers/net/wan/syncppp.c:292:
+				skb->protocol=htons(ETH_P_IP);
 				             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5172: FILE: drivers/net/wan/syncppp.c:302:
+				skb->protocol=htons(ETH_P_IPX);
 				             ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#5184: FILE: drivers/net/wan/syncppp.c:314:
+		if (! (sp->pp_flags & PP_CISCO)) {
 		    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5186: FILE: drivers/net/wan/syncppp.c:316:
+				printk (KERN_WARNING "%s: Cisco packet in PPP mode <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5186: FILE: drivers/net/wan/syncppp.c:316:
+				printk (KERN_WARNING "%s: Cisco packet in PPP mode <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5195: FILE: drivers/net/wan/syncppp.c:325:
+			sppp_cisco_input (sp, skb);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5199: FILE: drivers/net/wan/syncppp.c:329:
+			skb->protocol=htons(ETH_P_IP);
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5206: FILE: drivers/net/wan/syncppp.c:336:
+			skb->protocol=htons(ETH_P_IPX);
 			             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5218: FILE: drivers/net/wan/syncppp.c:348:
+		printk (KERN_WARNING "%s: invalid input packet <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5218: FILE: drivers/net/wan/syncppp.c:348:
+		printk (KERN_WARNING "%s: invalid input packet <0x%x 0x%x 0x%x>\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#5226: FILE: drivers/net/wan/syncppp.c:356:
+	return;
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5229: FILE: drivers/net/wan/syncppp.c:359:
+/*
+ *	Handle transmit packets.

WARNING:LINE_SPACING: Missing a blank line after declarations
#5239: FILE: drivers/net/wan/syncppp.c:369:
+	struct ppp_header *h;
+	skb_push(skb,sizeof(struct ppp_header));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5239: FILE: drivers/net/wan/syncppp.c:369:
+	skb_push(skb,sizeof(struct ppp_header));
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5240: FILE: drivers/net/wan/syncppp.c:370:
+	h=(struct ppp_header *)skb->data;
 	 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5241: FILE: drivers/net/wan/syncppp.c:371:
+	if(sp->pp_flags&PP_CISCO)
+	{

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#5241: FILE: drivers/net/wan/syncppp.c:371:
+	if(sp->pp_flags&PP_CISCO)
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#5241: FILE: drivers/net/wan/syncppp.c:371:
+	if(sp->pp_flags&PP_CISCO)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5246: FILE: drivers/net/wan/syncppp.c:376:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#5246: FILE: drivers/net/wan/syncppp.c:376:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5251: FILE: drivers/net/wan/syncppp.c:381:
+	if(sp->pp_flags & PP_CISCO)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#5251: FILE: drivers/net/wan/syncppp.c:381:
+	if(sp->pp_flags & PP_CISCO)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5255: FILE: drivers/net/wan/syncppp.c:385:
+	else switch(type)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#5255: FILE: drivers/net/wan/syncppp.c:385:
+	else switch(type)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#5255: FILE: drivers/net/wan/syncppp.c:385:
+	else switch(type)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#5255: FILE: drivers/net/wan/syncppp.c:385:
+	}
+	else switch(type)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5272: FILE: drivers/net/wan/syncppp.c:402:
+/*
+ * Send keepalive packets, every 10 seconds.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5275: FILE: drivers/net/wan/syncppp.c:405:
+static void sppp_keepalive (unsigned long dummy)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5282: FILE: drivers/net/wan/syncppp.c:412:
+	for (sp=spppq; sp; sp=sp->pp_next)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5282: FILE: drivers/net/wan/syncppp.c:412:
+	for (sp=spppq; sp; sp=sp->pp_next)
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5282: FILE: drivers/net/wan/syncppp.c:412:
+	for (sp=spppq; sp; sp=sp->pp_next)
 	                     ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#5287: FILE: drivers/net/wan/syncppp.c:417:
+		if (! (sp->pp_flags & PP_KEEPALIVE) ||
 		    ^

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#5288: FILE: drivers/net/wan/syncppp.c:418:
+		    ! (dev->flags & IFF_UP))
 		    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#5294: FILE: drivers/net/wan/syncppp.c:424:
+		if (! (sp->pp_flags & PP_CISCO) &&
 		    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5302: FILE: drivers/net/wan/syncppp.c:432:
+			printk (KERN_WARNING "%s: protocol down\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5302: FILE: drivers/net/wan/syncppp.c:432:
+			printk (KERN_WARNING "%s: protocol down\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5303: FILE: drivers/net/wan/syncppp.c:433:
+			if_down (dev);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#5304: FILE: drivers/net/wan/syncppp.c:434:
+			if (! (sp->pp_flags & PP_CISCO)) {
 			    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5309: FILE: drivers/net/wan/syncppp.c:439:
+				sppp_clear_timeout (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5311: FILE: drivers/net/wan/syncppp.c:441:
+				sppp_lcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5317: FILE: drivers/net/wan/syncppp.c:447:
+			sppp_cisco_send (sp, CISCO_KEEPALIVE_REQ, ++sp->pp_seq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5318: FILE: drivers/net/wan/syncppp.c:448:
+			sppp_cisco_send (sp, CISCO_KEEPALIVE_REQ, ++sp->pp_seq,
+				sp->pp_rseq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5320: FILE: drivers/net/wan/syncppp.c:450:
+			__be32 nmagic = htonl (sp->lcp.magic);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5321: FILE: drivers/net/wan/syncppp.c:451:
+			__be32 nmagic = htonl (sp->lcp.magic);
+			sp->lcp.echoid = ++sp->pp_seq;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5322: FILE: drivers/net/wan/syncppp.c:452:
+			sppp_cp_send (sp, PPP_LCP, LCP_ECHO_REQ,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5323: FILE: drivers/net/wan/syncppp.c:453:
+			sppp_cp_send (sp, PPP_LCP, LCP_ECHO_REQ,
+				sp->lcp.echoid, 4, &nmagic);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5330: FILE: drivers/net/wan/syncppp.c:460:
+	sppp_keepalive_timer.expires=jiffies+10*HZ;
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5330: FILE: drivers/net/wan/syncppp.c:460:
+	sppp_keepalive_timer.expires=jiffies+10*HZ;
 	                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5330: FILE: drivers/net/wan/syncppp.c:460:
+	sppp_keepalive_timer.expires=jiffies+10*HZ;
 	                                       ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5335: FILE: drivers/net/wan/syncppp.c:465:
+/*
+ * Handle incoming PPP Link Control Protocol packets.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5338: FILE: drivers/net/wan/syncppp.c:468:
+static void sppp_lcp_input (struct sppp *sp, struct sk_buff *skb)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5348: FILE: drivers/net/wan/syncppp.c:478:
+			printk (KERN_WARNING "%s: invalid lcp packet length: %d bytes\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5348: FILE: drivers/net/wan/syncppp.c:478:
+			printk (KERN_WARNING "%s: invalid lcp packet length: %d bytes\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5353: FILE: drivers/net/wan/syncppp.c:483:
+	skb_pull(skb,sizeof(struct lcp_header *));
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5354: FILE: drivers/net/wan/syncppp.c:484:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#5355: FILE: drivers/net/wan/syncppp.c:485:
+	if (sp->pp_flags & PP_DEBUG)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#5358: FILE: drivers/net/wan/syncppp.c:488:
+		char state = '?';
+		switch (sp->lcp.state) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#5359: FILE: drivers/net/wan/syncppp.c:489:
+		case LCP_STATE_CLOSED:   state = 'C'; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#5360: FILE: drivers/net/wan/syncppp.c:490:
+		case LCP_STATE_ACK_RCVD: state = 'R'; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#5361: FILE: drivers/net/wan/syncppp.c:491:
+		case LCP_STATE_ACK_SENT: state = 'S'; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#5362: FILE: drivers/net/wan/syncppp.c:492:
+		case LCP_STATE_OPENED:   state = 'O'; break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5364: FILE: drivers/net/wan/syncppp.c:494:
+		printk (KERN_WARNING "%s: lcp input(%c): %d bytes <%s id=%xh len=%xh",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5364: FILE: drivers/net/wan/syncppp.c:494:
+		printk (KERN_WARNING "%s: lcp input(%c): %d bytes <%s id=%xh len=%xh",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5366: FILE: drivers/net/wan/syncppp.c:496:
+			sppp_lcp_type_name (h->type), h->ident, ntohs (h->len));

CHECK:SPACING: No space is necessary after a cast
#5368: FILE: drivers/net/wan/syncppp.c:498:
+			sppp_print_bytes ((u8*) (h+1), len-4);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#5368: FILE: drivers/net/wan/syncppp.c:498:
+			sppp_print_bytes ((u8*) (h+1), len-4);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5368: FILE: drivers/net/wan/syncppp.c:498:
+			sppp_print_bytes ((u8*) (h+1), len-4);
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5368: FILE: drivers/net/wan/syncppp.c:498:
+			sppp_print_bytes ((u8*) (h+1), len-4);
 			                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5369: FILE: drivers/net/wan/syncppp.c:499:
+		printk (">\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5369: FILE: drivers/net/wan/syncppp.c:499:
+		printk (">\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->len'
#5371: FILE: drivers/net/wan/syncppp.c:501:
+	if (len > ntohs (h->len))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5376: FILE: drivers/net/wan/syncppp.c:506:
+		sppp_cp_send (sp, PPP_LCP, LCP_CODE_REJ, ++sp->pp_seq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5377: FILE: drivers/net/wan/syncppp.c:507:
+		sppp_cp_send (sp, PPP_LCP, LCP_CODE_REJ, ++sp->pp_seq,
+			skb->len, h);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5382: FILE: drivers/net/wan/syncppp.c:512:
+				printk (KERN_DEBUG"%s: invalid lcp configure request packet

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5382: FILE: drivers/net/wan/syncppp.c:512:
+				printk (KERN_DEBUG"%s: invalid lcp configure request packet

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5392: FILE: drivers/net/wan/syncppp.c:521:
+				printk (KERN_WARNING "%s: loopback\n",
 				                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5392: FILE: drivers/net/wan/syncppp.c:521:
+				printk (KERN_WARNING "%s: loopback\n",
 				                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5399: FILE: drivers/net/wan/syncppp.c:528:
+				printk (KERN_DEBUG "%s: conf req: magic glitch\n",
 				                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5399: FILE: drivers/net/wan/syncppp.c:528:
+				printk (KERN_DEBUG "%s: conf req: magic glitch\n",
 				                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5399: FILE: drivers/net/wan/syncppp.c:528:
+				printk (KERN_DEBUG "%s: conf req: magic glitch\n",
 				                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5462: FILE: drivers/net/wan/syncppp.c:591:
+			printk (KERN_INFO "%s: protocol up\n", dev->name);
 			                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5462: FILE: drivers/net/wan/syncppp.c:591:
+			printk (KERN_INFO "%s: protocol up\n", dev->name);
 			                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5485: FILE: drivers/net/wan/syncppp.c:614:
+					printk (KERN_DEBUG "%s: conf nak: magic glitch\n",
 					                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5485: FILE: drivers/net/wan/syncppp.c:614:
+					printk (KERN_DEBUG "%s: conf nak: magic glitch\n",
 					                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5485: FILE: drivers/net/wan/syncppp.c:614:
+					printk (KERN_DEBUG "%s: conf nak: magic glitch\n",
 					                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5498: FILE: drivers/net/wan/syncppp.c:627:
+		 * to avoid endless req-nack loop. */

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5537: FILE: drivers/net/wan/syncppp.c:666:
+				printk (KERN_WARNING "%s: invalid lcp echo request packet length:
 				                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5537: FILE: drivers/net/wan/syncppp.c:666:
+				printk (KERN_WARNING "%s: invalid lcp echo request packet length:
 				                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#5537: FILE: drivers/net/wan/syncppp.c:666:
+				printk (KERN_WARNING "%s: invalid lcp echo request packet length:
 				                                                                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#5542: FILE: drivers/net/wan/syncppp.c:670:
+		if (ntohl (*(__be32*)(h+1)) == sp->lcp.magic) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5542: FILE: drivers/net/wan/syncppp.c:670:
+		if (ntohl (*(__be32*)(h+1)) == sp->lcp.magic) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5542: FILE: drivers/net/wan/syncppp.c:670:
+		if (ntohl (*(__be32*)(h+1)) == sp->lcp.magic) {
 		                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5544: FILE: drivers/net/wan/syncppp.c:672:
+			printk (KERN_WARNING "%s: loopback\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5544: FILE: drivers/net/wan/syncppp.c:672:
+			printk (KERN_WARNING "%s: loopback\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5545: FILE: drivers/net/wan/syncppp.c:673:
+			if_down (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5550: FILE: drivers/net/wan/syncppp.c:678:
+			sppp_clear_timeout (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5552: FILE: drivers/net/wan/syncppp.c:680:
+			sppp_lcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5555: FILE: drivers/net/wan/syncppp.c:683:
+		*(__be32 *)(h+1) = htonl (sp->lcp.magic);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5555: FILE: drivers/net/wan/syncppp.c:683:
+		*(__be32 *)(h+1) = htonl (sp->lcp.magic);
 		             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5556: FILE: drivers/net/wan/syncppp.c:684:
+		sppp_cp_send (sp, PPP_LCP, LCP_ECHO_REPLY, h->ident, len-4, h+1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5556: FILE: drivers/net/wan/syncppp.c:684:
+		sppp_cp_send (sp, PPP_LCP, LCP_ECHO_REPLY, h->ident, len-4, h+1);
 		                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5556: FILE: drivers/net/wan/syncppp.c:684:
+		sppp_cp_send (sp, PPP_LCP, LCP_ECHO_REPLY, h->ident, len-4, h+1);
 		                                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5563: FILE: drivers/net/wan/syncppp.c:691:
+				printk (KERN_WARNING "%s: invalid lcp echo reply packet length:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5563: FILE: drivers/net/wan/syncppp.c:691:
+				printk (KERN_WARNING "%s: invalid lcp echo reply packet length:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5575: FILE: drivers/net/wan/syncppp.c:702:
+/*
+ * Handle incoming Cisco keepalive protocol packets.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5575: FILE: drivers/net/wan/syncppp.c:702:
+ * Handle incoming Cisco keepalive protocol packets.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5576: FILE: drivers/net/wan/syncppp.c:703:
+ */$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5584: FILE: drivers/net/wan/syncppp.c:711:
+	if (!pskb_may_pull(skb, sizeof(struct cisco_packet))
+	    || (skb->len != CISCO_PACKET_LEN

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5585: FILE: drivers/net/wan/syncppp.c:712:
+	    || (skb->len != CISCO_PACKET_LEN
+		&& skb->len != CISCO_BIG_PACKET_LEN)) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5587: FILE: drivers/net/wan/syncppp.c:714:
+			printk (KERN_WARNING "%s: invalid cisco packet length: %d bytes\n",
 			                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5587: FILE: drivers/net/wan/syncppp.c:714:
+			printk (KERN_WARNING "%s: invalid cisco packet length: %d bytes\n",
 			                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5587: FILE: drivers/net/wan/syncppp.c:714:
+			printk (KERN_WARNING "%s: invalid cisco packet length: %d bytes\n",
 			                                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5587: FILE: drivers/net/wan/syncppp.c:714:
+			printk (KERN_WARNING "%s: invalid cisco packet length: %d bytes\n",
 			                                                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                       ^

ERROR:SPACING: spaces required around that '<' (ctx:WxO)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                                     ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#5594: FILE: drivers/net/wan/syncppp.c:721:
+		printk (KERN_WARNING "%s: cisco input: %d bytes <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5601: FILE: drivers/net/wan/syncppp.c:728:
+			printk (KERN_WARNING "%s: unknown cisco packet type: 0x%x\n",
 			                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5601: FILE: drivers/net/wan/syncppp.c:728:
+			printk (KERN_WARNING "%s: unknown cisco packet type: 0x%x\n",
 			                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5601: FILE: drivers/net/wan/syncppp.c:728:
+			printk (KERN_WARNING "%s: unknown cisco packet type: 0x%x\n",
 			                                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5601: FILE: drivers/net/wan/syncppp.c:728:
+			printk (KERN_WARNING "%s: unknown cisco packet type: 0x%x\n",
 			                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5612: FILE: drivers/net/wan/syncppp.c:739:
+			 * Probably, the line is in loopback mode. */

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5615: FILE: drivers/net/wan/syncppp.c:742:
+				printk (KERN_WARNING "%s: loopback\n",
 				                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5615: FILE: drivers/net/wan/syncppp.c:742:
+				printk (KERN_WARNING "%s: loopback\n",
 				                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5633: FILE: drivers/net/wan/syncppp.c:760:
+			printk (KERN_INFO "%s: protocol up\n", dev->name);
 			                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5633: FILE: drivers/net/wan/syncppp.c:760:
+			printk (KERN_INFO "%s: protocol up\n", dev->name);
 			                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5657: FILE: drivers/net/wan/syncppp.c:784:
+#endif^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5664: FILE: drivers/net/wan/syncppp.c:791:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5666: FILE: drivers/net/wan/syncppp.c:793:
+/*
+ * Send PPP LCP packet.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5666: FILE: drivers/net/wan/syncppp.c:793:
+ * Send PPP LCP packet.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5667: FILE: drivers/net/wan/syncppp.c:794:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5683: FILE: drivers/net/wan/syncppp.c:810:
+^I$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                          ^

ERROR:SPACING: spaces required around that '<' (ctx:WxO)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5698: FILE: drivers/net/wan/syncppp.c:825:
+		printk (KERN_WARNING "%s: %s output <%s id=%xh len=%xh",
 		                                                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#5700: FILE: drivers/net/wan/syncppp.c:827:
+			proto==PPP_LCP ? "lcp" : "ipcp",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#5706: FILE: drivers/net/wan/syncppp.c:833:
+		printk (">\n");
 		         ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5716: FILE: drivers/net/wan/syncppp.c:843:
+/*
+ * Send Cisco keepalive packet.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5716: FILE: drivers/net/wan/syncppp.c:843:
+ * Send Cisco keepalive packet.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5717: FILE: drivers/net/wan/syncppp.c:844:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5732: FILE: drivers/net/wan/syncppp.c:859:
+^I^I$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                      ^

ERROR:SPACING: spaces required around that '<' (ctx:WxO)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                             ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#5748: FILE: drivers/net/wan/syncppp.c:875:
+		printk (KERN_WARNING "%s: cisco output: <%xh %xh %xh %xh %xh-%xh>\n",
 		                                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5758: FILE: drivers/net/wan/syncppp.c:885:
+ *^Isppp_close - close down a synchronous PPP or Cisco HDLC link$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5759: FILE: drivers/net/wan/syncppp.c:886:
+ *^I@dev: The network device to drop the link of$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5760: FILE: drivers/net/wan/syncppp.c:887:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5761: FILE: drivers/net/wan/syncppp.c:888:
+ *^IThis drops the logical interface to the channel. It is not$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5762: FILE: drivers/net/wan/syncppp.c:889:
+ *^Idone politely as we assume we will also be dropping DTR. Any$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5763: FILE: drivers/net/wan/syncppp.c:890:
+ *^Itimeouts are killed.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5764: FILE: drivers/net/wan/syncppp.c:891:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5784: FILE: drivers/net/wan/syncppp.c:911:
+ *^Isppp_open - open a synchronous PPP or Cisco HDLC link$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5785: FILE: drivers/net/wan/syncppp.c:912:
+ *^I@dev:^INetwork device to activate$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5786: FILE: drivers/net/wan/syncppp.c:913:
+ *^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5786: FILE: drivers/net/wan/syncppp.c:913:
+ *^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5787: FILE: drivers/net/wan/syncppp.c:914:
+ *^IClose down any existing synchronous session and commence$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5788: FILE: drivers/net/wan/syncppp.c:915:
+ *^Ifrom scratch. In the PPP case this means negotiating LCP/IPCP$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5789: FILE: drivers/net/wan/syncppp.c:916:
+ *^Iand friends, while for Cisco HDLC we simply need to start sending$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5790: FILE: drivers/net/wan/syncppp.c:917:
+ *^Ikeepalives$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5791: FILE: drivers/net/wan/syncppp.c:918:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5814: FILE: drivers/net/wan/syncppp.c:941:
+ *^Isppp_reopen - notify of physical link loss$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5815: FILE: drivers/net/wan/syncppp.c:942:
+ *^I@dev: Device that lost the link$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5816: FILE: drivers/net/wan/syncppp.c:943:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5817: FILE: drivers/net/wan/syncppp.c:944:
+ *^IThis function informs the synchronous protocol code that$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5818: FILE: drivers/net/wan/syncppp.c:945:
+ *^Ithe underlying link died (for example a carrier drop on X.21)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5819: FILE: drivers/net/wan/syncppp.c:946:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5820: FILE: drivers/net/wan/syncppp.c:947:
+ *^IWe increment the magic numbers to ensure that if the other end$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5821: FILE: drivers/net/wan/syncppp.c:948:
+ *^Ifailed to notice we will correctly start a new session. It happens$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5822: FILE: drivers/net/wan/syncppp.c:949:
+ *^Ido to the nature of telco circuits is that you can lose carrier on$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5823: FILE: drivers/net/wan/syncppp.c:950:
+ *^Ione endonly.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5824: FILE: drivers/net/wan/syncppp.c:951:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5825: FILE: drivers/net/wan/syncppp.c:952:
+ *^IHaving done this we go back to negotiating. This function may$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5826: FILE: drivers/net/wan/syncppp.c:953:
+ *^Ibe called from an interrupt context.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5827: FILE: drivers/net/wan/syncppp.c:954:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5855: FILE: drivers/net/wan/syncppp.c:982:
+ *^Isppp_change_mtu - Change the link MTU$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5856: FILE: drivers/net/wan/syncppp.c:983:
+ *^I@dev:^IDevice to change MTU on$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5857: FILE: drivers/net/wan/syncppp.c:984:
+ *^I@new_mtu: New MTU$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5858: FILE: drivers/net/wan/syncppp.c:985:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5859: FILE: drivers/net/wan/syncppp.c:986:
+ *^IChange the MTU on the link. This can only be called with$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5860: FILE: drivers/net/wan/syncppp.c:987:
+ *^Ithe link down. It returns an error if the link is up or$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5861: FILE: drivers/net/wan/syncppp.c:988:
+ *^Ithe mtu is out of range.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5862: FILE: drivers/net/wan/syncppp.c:989:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5873: FILE: drivers/net/wan/syncppp.c:1000:
+ *^Isppp_do_ioctl - Ioctl handler for ppp/hdlc$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5874: FILE: drivers/net/wan/syncppp.c:1001:
+ *^I@dev: Device subject to ioctl$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5875: FILE: drivers/net/wan/syncppp.c:1002:
+ *^I@ifr: Interface request block from the user$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5876: FILE: drivers/net/wan/syncppp.c:1003:
+ *^I@cmd: Command that is being issued$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5877: FILE: drivers/net/wan/syncppp.c:1004:
+ *^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5877: FILE: drivers/net/wan/syncppp.c:1004:
+ *^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5878: FILE: drivers/net/wan/syncppp.c:1005:
+ *^IThis function handles the ioctls that may be issued by the user$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5879: FILE: drivers/net/wan/syncppp.c:1006:
+ *^Ito control the settings of a PPP/HDLC link. It does both busy$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5880: FILE: drivers/net/wan/syncppp.c:1007:
+ *^Iand security checks. This function is intended to be wrapped by$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5881: FILE: drivers/net/wan/syncppp.c:1008:
+ *^Icallers who wish to add additional ioctl calls of their own.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5882: FILE: drivers/net/wan/syncppp.c:1009:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5890: FILE: drivers/net/wan/syncppp.c:1017:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5893: FILE: drivers/net/wan/syncppp.c:1020:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5926: FILE: drivers/net/wan/syncppp.c:1053:
+ *^Isppp_attach - attach synchronous PPP/HDLC to a device$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5927: FILE: drivers/net/wan/syncppp.c:1054:
+ *^I@pd:^IPPP device to initialise$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5928: FILE: drivers/net/wan/syncppp.c:1055:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5929: FILE: drivers/net/wan/syncppp.c:1056:
+ *^IThis initialises the PPP/HDLC support on an interface. At the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5930: FILE: drivers/net/wan/syncppp.c:1057:
+ *^Itime of calling the dev element must point to the network device$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5931: FILE: drivers/net/wan/syncppp.c:1058:
+ *^Ithat this interface is attached to. The interface should not yet$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5932: FILE: drivers/net/wan/syncppp.c:1059:
+ *^Ibe registered.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5933: FILE: drivers/net/wan/syncppp.c:1060:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5968: FILE: drivers/net/wan/syncppp.c:1095:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5970: FILE: drivers/net/wan/syncppp.c:1097:
+	/*
+	 *	Device specific setup. All but interrupt handler and

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5973: FILE: drivers/net/wan/syncppp.c:1100:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#5982: FILE: drivers/net/wan/syncppp.c:1109:
+	/*
+	 *	These 4 are callers but MUST also call sppp_ functions

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5989: FILE: drivers/net/wan/syncppp.c:1116:
+#endif^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5997: FILE: drivers/net/wan/syncppp.c:1124:
+ *^Isppp_detach - release PPP resources from a device$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5998: FILE: drivers/net/wan/syncppp.c:1125:
+ *^I@dev:^INetwork device to release$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5999: FILE: drivers/net/wan/syncppp.c:1126:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6000: FILE: drivers/net/wan/syncppp.c:1127:
+ *^IStop and free up any PPP/HDLC resources used by this$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6001: FILE: drivers/net/wan/syncppp.c:1128:
+ *^Iinterface. This must be called before the device is$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6002: FILE: drivers/net/wan/syncppp.c:1129:
+ *^Ifreed.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6003: FILE: drivers/net/wan/syncppp.c:1130:
+ */$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#6028: FILE: drivers/net/wan/syncppp.c:1155:
+/*
+ * Analyze the LCP Configure-Request options list

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6028: FILE: drivers/net/wan/syncppp.c:1155:
+ * Analyze the LCP Configure-Request options list$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6029: FILE: drivers/net/wan/syncppp.c:1156:
+ * for the presence of unknown options.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6030: FILE: drivers/net/wan/syncppp.c:1157:
+ * If the request contains unknown options, build and$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6031: FILE: drivers/net/wan/syncppp.c:1158:
+ * send Configure-reject packet, containing only unknown options.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6032: FILE: drivers/net/wan/syncppp.c:1159:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#6088: FILE: drivers/net/wan/syncppp.c:1215:
+			printk (KERN_WARNING "%s: invalid ipcp packet length: %d bytes\n",
 			                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#6088: FILE: drivers/net/wan/syncppp.c:1215:
+			printk (KERN_WARNING "%s: invalid ipcp packet length: %d bytes\n",
 			                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#6088: FILE: drivers/net/wan/syncppp.c:1215:
+			printk (KERN_WARNING "%s: invalid ipcp packet length: %d bytes\n",
 			                                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#6088: FILE: drivers/net/wan/syncppp.c:1215:
+			printk (KERN_WARNING "%s: invalid ipcp packet length: %d bytes\n",
 			                                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                      ^

ERROR:SPACING: spaces required around that '<' (ctx:WxO)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#6095: FILE: drivers/net/wan/syncppp.c:1222:
+		printk (KERN_WARNING "%s: ipcp input: %d bytes <%s id=%xh len=%xh",
 		                                                              ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#6100: FILE: drivers/net/wan/syncppp.c:1227:
+		printk (">\n");
 		         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#6112: FILE: drivers/net/wan/syncppp.c:1239:
+				printk (KERN_WARNING "%s: invalid ipcp configure request packet
 				                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#6112: FILE: drivers/net/wan/syncppp.c:1239:
+				printk (KERN_WARNING "%s: invalid ipcp configure request packet
 				                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6118: FILE: drivers/net/wan/syncppp.c:1244:
+			sppp_cp_send (sp, PPP_IPCP, LCP_CONF_REJ, h->ident,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6119: FILE: drivers/net/wan/syncppp.c:1245:
+			sppp_cp_send (sp, PPP_IPCP, LCP_CONF_REJ, h->ident,
+				len-4, h+1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6119: FILE: drivers/net/wan/syncppp.c:1245:
+				len-4, h+1);
 				   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6119: FILE: drivers/net/wan/syncppp.c:1245:
+				len-4, h+1);
 				        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6124: FILE: drivers/net/wan/syncppp.c:1250:
+				sppp_ipcp_open (sp);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#6125: FILE: drivers/net/wan/syncppp.c:1251:
+				/* fall through... */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6132: FILE: drivers/net/wan/syncppp.c:1258:
+			sppp_cp_send (sp, PPP_IPCP, IPCP_CONF_ACK, h->ident,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6133: FILE: drivers/net/wan/syncppp.c:1259:
+			sppp_cp_send (sp, PPP_IPCP, IPCP_CONF_ACK, h->ident,
+				0, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6144: FILE: drivers/net/wan/syncppp.c:1270:
+		sppp_clear_timeout (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6148: FILE: drivers/net/wan/syncppp.c:1274:
+			sppp_set_timeout (sp, 5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6159: FILE: drivers/net/wan/syncppp.c:1285:
+		sppp_clear_timeout (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6161: FILE: drivers/net/wan/syncppp.c:1287:
+		sppp_ipcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6168: FILE: drivers/net/wan/syncppp.c:1294:
+		sppp_cp_send (sp, PPP_IPCP, IPCP_TERM_ACK, h->ident, 0, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6172: FILE: drivers/net/wan/syncppp.c:1298:
+		sppp_ipcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6182: FILE: drivers/net/wan/syncppp.c:1308:
+static void sppp_lcp_open (struct sppp *sp)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#6186: FILE: drivers/net/wan/syncppp.c:1312:
+	if (! sp->lcp.magic)
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6189: FILE: drivers/net/wan/syncppp.c:1315:
+	opt[1] = sizeof (opt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6195: FILE: drivers/net/wan/syncppp.c:1321:
+	sppp_cp_send (sp, PPP_LCP, LCP_CONF_REQ, sp->lcp.confid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6196: FILE: drivers/net/wan/syncppp.c:1322:
+	sppp_cp_send (sp, PPP_LCP, LCP_CONF_REQ, sp->lcp.confid,
+		sizeof (opt), &opt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6196: FILE: drivers/net/wan/syncppp.c:1322:
+		sizeof (opt), &opt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6197: FILE: drivers/net/wan/syncppp.c:1323:
+	sppp_set_timeout (sp, 2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6200: FILE: drivers/net/wan/syncppp.c:1326:
+static void sppp_ipcp_open (struct sppp *sp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6203: FILE: drivers/net/wan/syncppp.c:1329:
+	sppp_cp_send (sp, PPP_IPCP, IPCP_CONF_REQ, sp->ipcp.confid, 0, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6204: FILE: drivers/net/wan/syncppp.c:1330:
+	sppp_set_timeout (sp, 2);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#6208: FILE: drivers/net/wan/syncppp.c:1334:
+/*
+ * Process PPP control protocol timeouts.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6211: FILE: drivers/net/wan/syncppp.c:1337:
+static void sppp_cp_timeout (unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#6213: FILE: drivers/net/wan/syncppp.c:1339:
+	struct sppp *sp = (struct sppp*) arg;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#6213: FILE: drivers/net/wan/syncppp.c:1339:
+	struct sppp *sp = (struct sppp*) arg;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#6219: FILE: drivers/net/wan/syncppp.c:1345:
+	if (! (sp->pp_if->flags & IFF_UP) || (sp->pp_flags & PP_CISCO)) {
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6226: FILE: drivers/net/wan/syncppp.c:1352:
+		sppp_lcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6230: FILE: drivers/net/wan/syncppp.c:1356:
+		sppp_lcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6235: FILE: drivers/net/wan/syncppp.c:1361:
+		sppp_lcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6242: FILE: drivers/net/wan/syncppp.c:1368:
+			sppp_ipcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6246: FILE: drivers/net/wan/syncppp.c:1372:
+			sppp_ipcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6251: FILE: drivers/net/wan/syncppp.c:1377:
+			sppp_ipcp_open (sp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6263: FILE: drivers/net/wan/syncppp.c:1389:
+static char *sppp_lcp_type_name (u8 type)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#6265: FILE: drivers/net/wan/syncppp.c:1391:
+	static char buf [8];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:LINE_SPACING: Missing a blank line after declarations
#6266: FILE: drivers/net/wan/syncppp.c:1392:
+	static char buf [8];
+	switch (type) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6279: FILE: drivers/net/wan/syncppp.c:1405:
+	sprintf (buf, "%xh", type);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#6280: FILE: drivers/net/wan/syncppp.c:1406:
+	return (buf);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6283: FILE: drivers/net/wan/syncppp.c:1409:
+static char *sppp_ipcp_type_name (u8 type)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#6285: FILE: drivers/net/wan/syncppp.c:1411:
+	static char buf [8];

WARNING:LINE_SPACING: Missing a blank line after declarations
#6286: FILE: drivers/net/wan/syncppp.c:1412:
+	static char buf [8];
+	switch (type) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6295: FILE: drivers/net/wan/syncppp.c:1421:
+	sprintf (buf, "%xh", type);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#6296: FILE: drivers/net/wan/syncppp.c:1422:
+	return (buf);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6301: FILE: drivers/net/wan/syncppp.c:1427:
+	printk (" %x", *p++);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6301: FILE: drivers/net/wan/syncppp.c:1427:
+	printk (" %x", *p++);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6303: FILE: drivers/net/wan/syncppp.c:1429:
+		printk ("-%x", *p++);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6303: FILE: drivers/net/wan/syncppp.c:1429:
+		printk ("-%x", *p++);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6321: FILE: drivers/net/wan/syncppp.c:1446:
+static int sppp_rcv(struct sk_buff *skb, struct net_device *dev,
+{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#6327: FILE: drivers/net/wan/syncppp.c:1452:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6329: FILE: drivers/net/wan/syncppp.c:1454:
+	sppp_input(dev,skb);
 	              ^

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#6334: FILE: drivers/net/wan/syncppp.c:1459:
+	.type	= __constant_htons(ETH_P_WAN_PPP),

WARNING:SPLIT_STRING: quoted string split across lines
#6341: FILE: drivers/net/wan/syncppp.c:1466:
+	KERN_INFO "Linux port (c) 1998 Building Number Three Ltd & "
+		  "Jan \"Yenya\" Kasprzak.\n";

ERROR:SPACING: space required before the open parenthesis '('
#6345: FILE: drivers/net/wan/syncppp.c:1470:
+	if(debug)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#6346: FILE: drivers/net/wan/syncppp.c:1471:
+		debug=PP_DEBUG;
 		     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6347: FILE: drivers/net/wan/syncppp.c:1472:
+	printk(banner);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6353: FILE: drivers/net/wan/syncppp.c:1478:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6368: FILE: include/net/syncppp.h:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6404: FILE: include/net/syncppp.h:37:
+struct sppp
+{

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#6405: FILE: include/net/syncppp.h:38:
+	struct sppp *	pp_next;	/* next interface in keepalive list */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6413: FILE: include/net/syncppp.h:46:
+	u32		ibytes,obytes;	/* Bytes in/out */
 	   		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6414: FILE: include/net/syncppp.h:47:
+	u32		ipkts,opkts;	/* Packets in/out */
 	   		     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#6422: FILE: include/net/syncppp.h:55:
+{^I$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6422: FILE: include/net/syncppp.h:55:
+struct ppp_device
+{	

WARNING:LINE_SPACING: Missing a blank line after declarations
#6430: FILE: include/net/syncppp.h:63:
+	struct ppp_device **ppp = dev->ml_priv;
+	BUG_ON((*ppp)->dev != dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#6430: FILE: include/net/syncppp.h:63:
+	BUG_ON((*ppp)->dev != dev);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6448: FILE: include/net/syncppp.h:80:
+#define IPCP_STATE_CLOSED       0       /* IPCP state: closed
+#define IPCP_STATE_ACK_RCVD     1       /* IPCP state: conf-ack received */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6455: FILE: include/net/syncppp.h:87:
+void sppp_attach (struct ppp_device *pd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6456: FILE: include/net/syncppp.h:88:
+void sppp_detach (struct net_device *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6457: FILE: include/net/syncppp.h:89:
+int sppp_do_ioctl (struct net_device *dev, struct ifreq *ifr, int cmd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6458: FILE: include/net/syncppp.h:90:
+struct sk_buff *sppp_dequeue (struct net_device *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6459: FILE: include/net/syncppp.h:91:
+int sppp_isempty (struct net_device *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6460: FILE: include/net/syncppp.h:92:
+void sppp_flush (struct net_device *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6461: FILE: include/net/syncppp.h:93:
+int sppp_open (struct net_device *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6462: FILE: include/net/syncppp.h:94:
+int sppp_reopen (struct net_device *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#6463: FILE: include/net/syncppp.h:95:
+int sppp_close (struct net_device *dev);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6467: FILE: include/net/syncppp.h:99:
+#define SPPPIOCPPP	(SIOCDEVPRIVATE+1)
                   	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6468: FILE: include/net/syncppp.h:100:
+#define SPPPIOCDEBUG	(SIOCDEVPRIVATE+2)
                     	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6469: FILE: include/net/syncppp.h:101:
+#define SPPPIOCSFLAGS	(SIOCDEVPRIVATE+3)
                      	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6470: FILE: include/net/syncppp.h:102:
+#define SPPPIOCGFLAGS	(SIOCDEVPRIVATE+4)
                      	               ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221956.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 116 errors, 670 warnings, 261 checks, 6365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221956.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
