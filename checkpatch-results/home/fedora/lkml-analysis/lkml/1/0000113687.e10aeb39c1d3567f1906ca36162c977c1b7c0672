WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Add support for communication over IEEE 802.15.4 networks. This implementation

WARNING:TYPO_SPELLING: 'maitained' may be misspelled - perhaps 'maintained'?
#44: 
reworked to better suit the linux networking model, and is now maitained
                                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/net/ieee802154/af_ieee802154.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'inteface' may be misspelled - perhaps 'interface'?
#79: FILE: include/net/ieee802154/af_ieee802154.h:2:
+ * IEEE 802.15.4 inteface for userspace
                  ^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: include/net/ieee802154/af_ieee802154.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: include/net/ieee802154/af_ieee802154.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: include/net/ieee802154/mac_def.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#159: FILE: include/net/ieee802154/mac_def.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#160: FILE: include/net/ieee802154/mac_def.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#179: FILE: include/net/ieee802154/mac_def.h:36:
+#define IEEE802154_FC_TYPE(x)		((x & IEEE802154_FC_TYPE_MASK) >> IEEE802154_FC_TYPE_SHIFT)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'v' - possible side-effects?
#180: FILE: include/net/ieee802154/mac_def.h:37:
+#define IEEE802154_FC_SET_TYPE(v, x)	do {	\
+	v = (((v) & ~IEEE802154_FC_TYPE_MASK) | \
+	    (((x) << IEEE802154_FC_TYPE_SHIFT) & IEEE802154_FC_TYPE_MASK)); \
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#180: FILE: include/net/ieee802154/mac_def.h:37:
+#define IEEE802154_FC_SET_TYPE(v, x)	do {	\
+	v = (((v) & ~IEEE802154_FC_TYPE_MASK) | \
+	    (((x) << IEEE802154_FC_TYPE_SHIFT) & IEEE802154_FC_TYPE_MASK)); \
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:BIT_MACRO: Prefer using the BIT macro
#185: FILE: include/net/ieee802154/mac_def.h:42:
+#define IEEE802154_FC_SECEN		(1 << 3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#186: FILE: include/net/ieee802154/mac_def.h:43:
+#define IEEE802154_FC_FRPEND		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#187: FILE: include/net/ieee802154/mac_def.h:44:
+#define IEEE802154_FC_ACK_REQ		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#188: FILE: include/net/ieee802154/mac_def.h:45:
+#define IEEE802154_FC_INTRA_PAN		(1 << 6)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: include/net/ieee802154/mac_def.h:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#300: FILE: include/net/ieee802154/mac_def.h:157:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#303: FILE: include/net/ieee802154/mac_def.h:160:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#310: FILE: include/net/ieee802154/netdevice.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#325: FILE: include/net/ieee802154/netdevice.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#326: FILE: include/net/ieee802154/netdevice.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:BIT_MACRO: Prefer using the BIT macro
#357: FILE: include/net/ieee802154/netdevice.h:48:
+#define MAC_CB_FLAG_ACKREQ		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#358: FILE: include/net/ieee802154/netdevice.h:49:
+#define MAC_CB_FLAG_SECEN		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#359: FILE: include/net/ieee802154/netdevice.h:50:
+#define MAC_CB_FLAG_INTRAPAN		(1 << 5)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: include/net/ieee802154/netdevice.h:82:
+	int (*assoc_req)(struct net_device *dev,
+			struct ieee802154_addr *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: include/net/ieee802154/netdevice.h:85:
+	int (*assoc_resp)(struct net_device *dev,
+			struct ieee802154_addr *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: include/net/ieee802154/netdevice.h:88:
+	int (*disassoc_req)(struct net_device *dev,
+			struct ieee802154_addr *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: include/net/ieee802154/netdevice.h:91:
+	int (*start_req)(struct net_device *dev,
+			struct ieee802154_addr *addr,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#416: FILE: include/net/ieee802154/netdevice.h:107:
+static inline struct ieee802154_mlme_ops *ieee802154_mlme_ops(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: include/net/ieee802154/netdevice.h:115:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#455: FILE: net/ieee802154/Kconfig:1:
+config IEEE802154
+	tristate "IEEE Std 802.15.4 Low-Rate Wireless Personal Area Networks support (EXPERIMENTAL)"
+	depends on EXPERIMENTAL
+	---help---
+	  IEEE Std 802.15.4 defines a low data rate, low power and low
+	  complexity short range wireless personal area networks. It was
+	  designed to organise networks of sensors, switches, etc automation
+	  devices. Maximum allowed data rate is 250 kb/s and typical personal
+	  operating space around 10m.
+
+	  Say Y here to compile LR-WPAN support into the kernel or say M to
+	  compile it as modules.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#483: FILE: net/ieee802154/af802154.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#498: FILE: net/ieee802154/af802154.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#499: FILE: net/ieee802154/af802154.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: net/ieee802154/af802154.h:34:
+struct net_device *ieee802154_get_dev(struct net *net,
+		struct ieee802154_addr *addr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#525: FILE: net/ieee802154/af_ieee802154.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#540: FILE: net/ieee802154/af_ieee802154.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#541: FILE: net/ieee802154/af_ieee802154.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#566: FILE: net/ieee802154/af_ieee802154.c:42:
+#define DBG_DUMP(data, len) { \
+	int i; \
+	pr_debug("function: %s: data: len %d:\n", __func__, len); \
+	for (i = 0; i < len; i++) {\
+		pr_debug("%02x: %02x\n", i, (data)[i]); \
+	} \
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#575: FILE: net/ieee802154/af_ieee802154.c:51:
+/*
+ * Utility function for families

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: net/ieee802154/af_ieee802154.c:54:
+struct net_device *ieee802154_get_dev(struct net *net,
+		struct ieee802154_addr *addr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: net/ieee802154/af_ieee802154.c:96:
+		pr_warning("Unsupported ieee802154 address type: %d\n",
+				addr->addr_type);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#637: FILE: net/ieee802154/af_ieee802154.c:113:
+}
+static int ieee802154_sock_sendmsg(struct kiocb *iocb, struct socket *sock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: net/ieee802154/af_ieee802154.c:114:
+static int ieee802154_sock_sendmsg(struct kiocb *iocb, struct socket *sock,
+		struct msghdr *msg, size_t len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: net/ieee802154/af_ieee802154.c:122:
+static int ieee802154_sock_bind(struct socket *sock, struct sockaddr *uaddr,
+		int addr_len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: net/ieee802154/af_ieee802154.c:133:
+static int ieee802154_sock_connect(struct socket *sock, struct sockaddr *uaddr,
+			int addr_len, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: net/ieee802154/af_ieee802154.c:144:
+static int ieee802154_dev_ioctl(struct sock *sk, struct ifreq __user *arg,
+		unsigned int cmd)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#677: FILE: net/ieee802154/af_ieee802154.c:153:
+	ifr.ifr_name[IFNAMSIZ-1] = 0;
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: net/ieee802154/af_ieee802154.c:169:
+static int ieee802154_sock_ioctl(struct socket *sock, unsigned int cmd,
+		unsigned long arg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#763: FILE: net/ieee802154/af_ieee802154.c:239:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#765: FILE: net/ieee802154/af_ieee802154.c:241:
+/*
+ * Create a socket. Initialise the socket, blank the addresses

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: net/ieee802154/af_ieee802154.c:245:
+static int ieee802154_create(struct net *net, struct socket *sock,
+		int protocol)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: net/ieee802154/af_ieee802154.c:303:
+static int ieee802154_rcv(struct sk_buff *skb, struct net_device *dev,
+	struct packet_type *pt, struct net_device *orig_dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#850: FILE: net/ieee802154/af_ieee802154.c:326:
+
+

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#852: FILE: net/ieee802154/af_ieee802154.c:328:
+	.type = __constant_htons(ETH_P_IEEE802154),

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#884: FILE: net/ieee802154/af_ieee802154.c:360:
+}
+static void __exit af_ieee802154_remove(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#903: FILE: net/ieee802154/dgram.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#918: FILE: net/ieee802154/dgram.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#919: FILE: net/ieee802154/dgram.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#955: FILE: net/ieee802154/dgram.c:53:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1032: FILE: net/ieee802154/dgram.c:130:
+		int amount = atomic_read(&sk->sk_wmem_alloc);
+		return put_user(amount, (int __user *)arg);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#1043: FILE: net/ieee802154/dgram.c:141:
+		if (skb != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1045: FILE: net/ieee802154/dgram.c:143:
+			/*
+			 * We will only return the amount

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1050: FILE: net/ieee802154/dgram.c:148:
+			amount = skb->len - (3+8+8);
 			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1050: FILE: net/ieee802154/dgram.c:148:
+			amount = skb->len - (3+8+8);
 			                        ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1056: FILE: net/ieee802154/dgram.c:154:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: net/ieee802154/dgram.c:160:
+static int dgram_connect(struct sock *sk, struct sockaddr *uaddr,
+			int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1103: FILE: net/ieee802154/dgram.c:201:
+static int dgram_sendmsg(struct kiocb *iocb, struct sock *sk,
+		struct msghdr *msg, size_t size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1106: FILE: net/ieee802154/dgram.c:204:
+	unsigned mtu;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1130: FILE: net/ieee802154/dgram.c:228:
+	skb = sock_alloc_send_skb(sk, LL_ALLOCATED_SPACE(dev) + size,
+			msg->msg_flags & MSG_DONTWAIT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: net/ieee802154/dgram.c:240:
+	err = dev_hard_header(skb, dev, ETH_P_IEEE802154, &ro->dst_addr,
+			ro->bound ? &ro->src_addr : NULL, size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1179: FILE: net/ieee802154/dgram.c:277:
+static int dgram_recvmsg(struct kiocb *iocb, struct sock *sk,
+		struct msghdr *msg, size_t len, int noblock, int flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1225: FILE: net/ieee802154/dgram.c:323:
+static inline int ieee802154_match_sock(u8 *hw_addr, u16 pan_id,
+		u16 short_addr, struct dgram_sock *ro)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1235: FILE: net/ieee802154/dgram.c:333:
+	if (ro->src_addr.addr_type == IEEE802154_ADDR_SHORT &&
+		     pan_id == ro->src_addr.pan_id &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1250: FILE: net/ieee802154/dgram.c:348:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: net/ieee802154/dgram.c:356:
+		if (ieee802154_match_sock(dev->dev_addr, pan_id, short_addr,
+					dgram_sk(sk))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1261: FILE: net/ieee802154/dgram.c:359:
+				struct sk_buff *clone;
+				clone = skb_clone(skb, GFP_ATOMIC);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1270: FILE: net/ieee802154/dgram.c:368:
+	if (prev)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1272: FILE: net/ieee802154/dgram.c:370:
+	else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1303: FILE: net/ieee802154/raw.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1318: FILE: net/ieee802154/raw.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1319: FILE: net/ieee802154/raw.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1397: FILE: net/ieee802154/raw.c:95:
+static int raw_connect(struct sock *sk, struct sockaddr *uaddr,
+			int addr_len)

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1399: FILE: net/ieee802154/raw.c:97:
+	return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1411: FILE: net/ieee802154/raw.c:109:
+	unsigned mtu;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: net/ieee802154/raw.c:141:
+	skb = sock_alloc_send_skb(sk, LL_ALLOCATED_SPACE(dev) + size,
+			msg->msg_flags & MSG_DONTWAIT, &err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1520: FILE: net/ieee802154/raw.c:218:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1531: FILE: net/ieee802154/raw.c:229:
+		    sk->sk_bound_dev_if == dev->ifindex) {
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 23 warnings, 53 checks, 1421 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
