WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#71: FILE: fs/notify/dnotify/dnotify.c:33:
+static void clear_mark_dir_notify(struct fsnotify_mark_entry *entry, struct inode *inode, unsigned long mask, unsigned int flags);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#72: FILE: fs/notify/dnotify/dnotify.c:34:
+static int should_send_event_dir_notify(struct fsnotify_group *group, struct inode *inode, unsigned long mask);

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: fs/notify/dnotify/dnotify.c:45:
+	struct fsnotify_mark_entry *entry;
+	list_for_each_entry(entry, &inode->i_fsnotify_mark_entries, i_list) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dn"
#102: FILE: fs/notify/dnotify/dnotify.c:61:
+	for (; dn != NULL; dn = dn->dn_next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: fs/notify/dnotify/dnotify.c:87:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'alreay' may be misspelled - perhaps 'already'?
#134: FILE: fs/notify/dnotify/dnotify.c:93:
+	/* unlikely since we alreay passed should_send_event_dir_notify() */
 	                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#146: FILE: fs/notify/dnotify/dnotify.c:105:
+		if (dn->dn_mask & FS_DN_MULTISHOT)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#148: FILE: fs/notify/dnotify/dnotify.c:107:
+		else {

WARNING:LONG_LINE: line length of 154 exceeds 100 columns
#165: FILE: fs/notify/dnotify/dnotify.c:124:
+static void clear_mark_dir_notify(struct fsnotify_mark_entry *entry, struct inode *inode, unsigned long mask __attribute__ ((unused)), unsigned int flags)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#165: FILE: fs/notify/dnotify/dnotify.c:124:
+static void clear_mark_dir_notify(struct fsnotify_mark_entry *entry, struct inode *inode, unsigned long mask __attribute__ ((unused)), unsigned int flags)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#172: FILE: fs/notify/dnotify/dnotify.c:131:
+	BUG_ON(!S_ISDIR(inode->i_mode));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#197: FILE: fs/notify/dnotify/dnotify.c:156:
+static int should_send_event_dir_notify(struct fsnotify_group *group, struct inode *inode, unsigned long mask)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: fs/notify/dnotify/dnotify.c:162:
+	/* !dir_notify_enable should never get here, don't waste time checking
+	if (!dir_notify_enable)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: fs/notify/dnotify/dnotify.c:163:
+		return 0; */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!entry->private"
#256: FILE: fs/notify/dnotify/dnotify.c:211:
+	if (entry->private == NULL) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#336: FILE: fs/notify/dnotify/dnotify.c:287:
+	dnotify_group = fsnotify_find_group(INT_MAX, INT_MAX, ALL_DNOTIFY_EVENTS, &dnotify_fsnotify_ops);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: fs/notify/dnotify/dnotify.c:301:
+	 * take a group reference for it.  */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!entry->private"
#351: FILE: fs/notify/dnotify/dnotify.c:302:
+	if (entry->private == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#377: FILE: fs/notify/dnotify/dnotify.c:324:
+	 * inode mark */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199669.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 5 checks, 616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199669.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
