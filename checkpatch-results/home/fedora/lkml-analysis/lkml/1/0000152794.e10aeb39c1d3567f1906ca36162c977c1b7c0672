WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> > Good question. Keeping current expectation in mind, yes these are expected

WARNING:TYPO_SPELLING: 'achive' may be misspelled - perhaps 'achieve'?
#57: 
> > It will not be easy to achive it given the constraints we have got in
                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'targetting' may be misspelled - perhaps 'targeting'?
#59: 
> > queue in certain situations. So to begin with I am targetting that
                                                       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#103: 
places it really makes sense, but it atleast gives us something to play and
                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'competion' may be misspelled - perhaps 'competition'?
#127: 
  of disk bandwidth in the face of competion from continusouly backlogged
                                   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'commnad' may be misspelled - perhaps 'command'?
#129: 
  and disks with commnad queuing.
                 ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: block/elevator-fq.h:566:
+extern ssize_t elv_fairness_show(struct request_queue *q, char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: block/elevator-fq.h:567:
+extern ssize_t elv_fairness_store(struct request_queue *q, const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: block/elevator-fq.h:568:
+extern ssize_t elv_fairness_store(struct request_queue *q, const char *name,
+						size_t count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: block/elevator-fq.c:1855:
+ssize_t elv_fairness_store(struct request_queue *q, const char *name,
+			  size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#220: FILE: block/elevator-fq.c:1863:
+	data = simple_strtoul(p, &p, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#331: FILE: block/elevator-fq.c:2866:
+		if (elv_ioq_class_idle(ioq))
[...]
-		else if (sync && !ioq->nr_queued)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#354: FILE: block/blk-sysfs.c:287:
+	.attr = {.name = "fairness", .mode = S_IRUGO | S_IWUSR },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152794.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 5 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152794.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
