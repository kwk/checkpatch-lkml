CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#50: FILE: fs/cramfs/inode.c:330:
+static int cramfs_readdir_ondisk(struct dentry *dentry, void *dirent,
+			filldir_t filldir, loff_t *pos)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'd->d_inode'
#88: FILE: fs/cramfs/inode.c:390:
+		if (!d || (d->d_inode))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#107: FILE: fs/cramfs/inode.c:407:
+static int cramfs_readdir(struct file *filp, void *dirent, filldir_t filldir)
                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: fs/cramfs/inode.c:432:
+static int cramfs_test_filldir(void * __buf, const char * name, int namlen,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: fs/cramfs/inode.c:432:
+static int cramfs_test_filldir(void * __buf, const char * name, int namlen,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: fs/cramfs/inode.c:433:
+static int cramfs_test_filldir(void * __buf, const char * name, int namlen,
+				loff_t offset, u64 ino, unsigned int d_type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: fs/cramfs/inode.c:445:
+	int ret;
+	if (!dentry->d_inode || !S_ISDIR(dentry->d_inode->i_mode))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 2 warnings, 3 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273273.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
