WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
http://download.cypress.com.edgesuite.net/design_resources/datasheets/contents/cy7c68300c_8.pdf).

WARNING:TYPO_SPELLING: 'unsual' may be misspelled - perhaps 'unusual'?
#44: 
and an unsual entry.
       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/usb/storage/protocol.c:157:
+static void emulate_pass_thru_with_atacb(struct scsi_cmnd *srb,
+				       struct us_data *us)

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: drivers/usb/storage/protocol.c:160:
+	unsigned char save_cmnd[MAX_COMMAND_SIZE];
+	memcpy(save_cmnd, srb->cmnd, sizeof(save_cmnd));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#85: FILE: drivers/usb/storage/protocol.c:167:
+	switch((save_cmnd[1] >> 1) & 0xf) {
+		case 3:
+		case 4:
+		case 5:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#85: FILE: drivers/usb/storage/protocol.c:167:
+	switch((save_cmnd[1] >> 1) & 0xf) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/usb/storage/protocol.c:179:
+ ^I/* this value can change, but most(all ?) manufacturers keep the cypress$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/usb/storage/protocol.c:179:
+ ^I/* this value can change, but most(all ?) manufacturers keep the cypress$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/usb/storage/protocol.c:179:
+ ^I/* this value can change, but most(all ?) manufacturers keep the cypress$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#119: FILE: drivers/usb/storage/protocol.c:201:
+			if (save_cmnd[3] || save_cmnd[5] || save_cmnd[7] || save_cmnd[9]
+					|| save_cmnd[11])

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#123: FILE: drivers/usb/storage/protocol.c:205:
+	}
+	else { /* ATA12 */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#123: FILE: drivers/usb/storage/protocol.c:205:
+	else { /* ATA12 */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#132: FILE: drivers/usb/storage/protocol.c:214:
+
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srb->cmnd[12] == ATA_CMD_SET_FEATURES'
#134: FILE: drivers/usb/storage/protocol.c:216:
+	if ((srb->cmnd[12] == ATA_CMD_SET_FEATURES)
+			&& (srb->cmnd[6] == SETFEATURES_XFER))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srb->cmnd[6] == SETFEATURES_XFER'
#134: FILE: drivers/usb/storage/protocol.c:216:
+	if ((srb->cmnd[12] == ATA_CMD_SET_FEATURES)
+			&& (srb->cmnd[6] == SETFEATURES_XFER))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#135: FILE: drivers/usb/storage/protocol.c:217:
+	if ((srb->cmnd[12] == ATA_CMD_SET_FEATURES)
+			&& (srb->cmnd[6] == SETFEATURES_XFER))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#139: FILE: drivers/usb/storage/protocol.c:221:
+		srb->cmnd[2] |= (1<<7);
 		                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: drivers/usb/storage/protocol.c:223:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/usb/storage/protocol.c:231:
+	if (srb->result == SAM_STAT_CHECK_CONDITION &&
+			memcmp(srb->sense_buffer, usb_stor_sense_invalidCDB,

CHECK:CAMELCASE: Avoid CamelCase: <usb_stor_sense_invalidCDB>
#149: FILE: drivers/usb/storage/protocol.c:231:
+			memcmp(srb->sense_buffer, usb_stor_sense_invalidCDB,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/usb/storage/protocol.c:232:
+			memcmp(srb->sense_buffer, usb_stor_sense_invalidCDB,
+				sizeof(usb_stor_sense_invalidCDB)) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: drivers/usb/storage/protocol.c:241:
+	if ((srb->result != (DID_ERROR << 16) &&
+				srb->result != (DID_ABORT << 16)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/usb/storage/protocol.c:305:
+	memcpy(srb->sense_buffer,
+			usb_stor_sense_invalidCDB,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/usb/storage/protocol.c:314:
+void usb_stor_transparent_scsi_command_atacb(struct scsi_cmnd *srb,
+				       struct us_data *us)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: drivers/usb/storage/protocol.h:50:
+extern void usb_stor_transparent_scsi_command_atacb(struct scsi_cmnd*,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd*' should also have an identifier name
#292: FILE: drivers/usb/storage/protocol.h:50:
+extern void usb_stor_transparent_scsi_command_atacb(struct scsi_cmnd*,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct us_data*' should also have an identifier name
#292: FILE: drivers/usb/storage/protocol.h:50:
+extern void usb_stor_transparent_scsi_command_atacb(struct scsi_cmnd*,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/usb/storage/protocol.h:51:
+extern void usb_stor_transparent_scsi_command_atacb(struct scsi_cmnd*,
+		struct us_data*);

ERROR:SPACING: space prohibited after that open parenthesis '('
#307: FILE: drivers/usb/storage/unusual_devs.h:1591:
+UNUSUAL_DEV(  0x04b4, 0x6830, 0x0000, 0x9999,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/usb/storage/unusual_devs.h:1592:
+UNUSUAL_DEV(  0x04b4, 0x6830, 0x0000, 0x9999,
+		"Cypress",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309723.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 7 warnings, 18 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309723.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
