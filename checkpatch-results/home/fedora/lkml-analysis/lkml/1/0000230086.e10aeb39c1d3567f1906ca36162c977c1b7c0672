WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#55: FILE: drivers/input/lirc/Kconfig:28:
+config LIRC_CMDIR
+	tristate "CommandIR USB Transceiver"
+	default n
+	depends on LIRC_DEV
+	help
+	  Driver for the CommandIR USB Transceiver
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/input/lirc/commandir.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#120: FILE: drivers/input/lirc/commandir.c:38:
+static struct usb_device_id cmdir_table[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <curTXFill>
#136: FILE: drivers/input/lirc/commandir.c:54:
+static int curTXFill;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddr>
#147: FILE: drivers/input/lirc/commandir.c:65:
+	__u8 bulk_in_endpointAddr; /* the address of the bulk in endpoint */

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddr>
#148: FILE: drivers/input/lirc/commandir.c:66:
+	__u8 bulk_out_endpointAddr; /* the address of the bulk out endpoint */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#151: FILE: drivers/input/lirc/commandir.c:69:
+};
+#define to_skel_dev(d) container_of(d, struct usb_skel, kref)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#153: FILE: drivers/input/lirc/commandir.c:71:
+static struct file_operations cmdir_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#161: FILE: drivers/input/lirc/commandir.c:79:
+ * and to have the device registered with devfs and the driver core */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: drivers/input/lirc/commandir.c:84:
+	 *		S_IRGRP | S_IWGRP | S_IROTH, */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: drivers/input/lirc/commandir.c:95:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/input/lirc/commandir.c:108:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/input/lirc/commandir.c:142:
+		err("%s - error, can't find device for minor %d",
+		     __func__, subminor);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#256: FILE: drivers/input/lirc/commandir.c:174:
+	if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#268: FILE: drivers/input/lirc/commandir.c:186:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#272: FILE: drivers/input/lirc/commandir.c:190:
+		    (endpoint->bEndpointAddress & USB_DIR_IN) &&

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#273: FILE: drivers/input/lirc/commandir.c:191:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#276: FILE: drivers/input/lirc/commandir.c:194:
+			buffer_size = endpoint->wMaxPacketSize;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#314: FILE: drivers/input/lirc/commandir.c:232:
+		minor = minor-USB_CMDIR_MINOR_BASE;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: drivers/input/lirc/commandir.c:247:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#351: FILE: drivers/input/lirc/commandir.c:269:
+		minor = minor-USB_CMDIR_MINOR_BASE;
 		             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#374: FILE: drivers/input/lirc/commandir.c:292:
+	if (dev == NULL)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#388: FILE: drivers/input/lirc/commandir.c:306:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: drivers/input/lirc/commandir.c:313:
+				       USB_CMDIR_MINOR_BASE+device_num);
 				                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#411: FILE: drivers/input/lirc/commandir.c:329:
+		multiplier = multiplier*0x10;
 		                       ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#416: FILE: drivers/input/lirc/commandir.c:334:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#433: FILE: drivers/input/lirc/commandir.c:351:
+	return;
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: drivers/input/lirc/commandir.c:361:
+^I * ^I^I " TX Enabled: 1, 2, 3, 4\n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#444: FILE: drivers/input/lirc/commandir.c:362:
+^I * ^I^I " RX: commandirx\n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: drivers/input/lirc/commandir.c:363:
+^I * ^I^I " LCD: commandirx\n" */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#445: FILE: drivers/input/lirc/commandir.c:363:
+	 * 		 " LCD: commandirx\n" */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#447: FILE: drivers/input/lirc/commandir.c:365:
+	cmdir_var[9] = ASCII0+device_num;
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#448: FILE: drivers/input/lirc/commandir.c:366:
+	cmdir_var[50] = ASCII0+rx_device;
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#449: FILE: drivers/input/lirc/commandir.c:367:
+	cmdir_var[67] = ASCII0+lcd_device;
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#456: FILE: drivers/input/lirc/commandir.c:374:
+		multiplier = multiplier*0x10;
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#458: FILE: drivers/input/lirc/commandir.c:376:
+	if (transmitters & (multiplier*0x01)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#463: FILE: drivers/input/lirc/commandir.c:381:
+	if (transmitters & (multiplier*0x02)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#466: FILE: drivers/input/lirc/commandir.c:384:
+			cmdir_var[next_pos-2] = ',';
 			                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#470: FILE: drivers/input/lirc/commandir.c:388:
+	if (transmitters & (multiplier*0x04)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#473: FILE: drivers/input/lirc/commandir.c:391:
+			cmdir_var[next_pos-2] = ',';
 			                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#477: FILE: drivers/input/lirc/commandir.c:395:
+	if (transmitters & (multiplier*0x08)) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#480: FILE: drivers/input/lirc/commandir.c:398:
+			cmdir_var[next_pos-2] = ',';
 			                  ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#485: FILE: drivers/input/lirc/commandir.c:403:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#492: FILE: drivers/input/lirc/commandir.c:410:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#506: FILE: drivers/input/lirc/commandir.c:424:
+	if (((int)*ppos) == 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#513: FILE: drivers/input/lirc/commandir.c:431:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#524: FILE: drivers/input/lirc/commandir.c:442:
+	struct usb_interface *interface;
+	interface = usb_find_interface(&cmdir_driver,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/input/lirc/commandir.c:443:
+	interface = usb_find_interface(&cmdir_driver,
+			USB_CMDIR_MINOR_BASE+rx_device);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#525: FILE: drivers/input/lirc/commandir.c:443:
+			USB_CMDIR_MINOR_BASE+rx_device);
 			                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: drivers/input/lirc/commandir.c:454:
+	retval = usb_bulk_msg(dev->udev, usb_rcvbulkpipe(dev->udev,
+						dev->bulk_in_endpointAddr),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#538: FILE: drivers/input/lirc/commandir.c:456:
+		 &length, HZ*10);
 		            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#540: FILE: drivers/input/lirc/commandir.c:458:
+		if (!memcpy(buffer, dev->bulk_in_buffer, length))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#542: FILE: drivers/input/lirc/commandir.c:460:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#550: FILE: drivers/input/lirc/commandir.c:468:
+	/*
+	else {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#554: FILE: drivers/input/lirc/commandir.c:472:
+	/* printk(KERN_INFO "CommandIR Reporting TX buffer at %d bytes. \n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#555: FILE: drivers/input/lirc/commandir.c:473:
+^I * ^I  curTXFill); */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#555: FILE: drivers/input/lirc/commandir.c:473:
+	 * 	  curTXFill); */

CHECK:CAMELCASE: Avoid CamelCase: <changeType>
#566: FILE: drivers/input/lirc/commandir.c:484:
+	int changeType = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#572: FILE: drivers/input/lirc/commandir.c:490:
+	 * won't keep calling this function */

CHECK:CAMELCASE: Avoid CamelCase: <cNothing>
#593: FILE: drivers/input/lirc/commandir.c:511:
+	changeType = cNothing;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 0'
#602: FILE: drivers/input/lirc/commandir.c:520:
+			if ((i > 0) && ((local_buffer[i - 1] == 'R')
+			    || (local_buffer[i - 1] == 'r')))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#603: FILE: drivers/input/lirc/commandir.c:521:
+			if ((i > 0) && ((local_buffer[i - 1] == 'R')
+			    || (local_buffer[i - 1] == 'r')))

CHECK:CAMELCASE: Avoid CamelCase: <cRX>
#604: FILE: drivers/input/lirc/commandir.c:522:
+				changeType = cRX;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 1'
#608: FILE: drivers/input/lirc/commandir.c:526:
+			if ((i > 1) && ((local_buffer[i - 1] == 'E')
+			    || (local_buffer[i - 1] == 'e'))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#609: FILE: drivers/input/lirc/commandir.c:527:
+			if ((i > 1) && ((local_buffer[i - 1] == 'E')
+			    || (local_buffer[i - 1] == 'e'))) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#610: FILE: drivers/input/lirc/commandir.c:528:
+				if ((local_buffer[i-2] == 'R')
 				                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#611: FILE: drivers/input/lirc/commandir.c:529:
+				if ((local_buffer[i-2] == 'R')
+				    || (local_buffer[i-2] == 'r'))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#611: FILE: drivers/input/lirc/commandir.c:529:
+				    || (local_buffer[i-2] == 'r'))
 				                      ^

CHECK:CAMELCASE: Avoid CamelCase: <cRESET>
#612: FILE: drivers/input/lirc/commandir.c:530:
+					changeType = cRESET;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 0'
#617: FILE: drivers/input/lirc/commandir.c:535:
+			if ((i > 0) && ((local_buffer[i - 1] == 'F')
+			    || (local_buffer[i - 1] == 'f')))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#618: FILE: drivers/input/lirc/commandir.c:536:
+			if ((i > 0) && ((local_buffer[i - 1] == 'F')
+			    || (local_buffer[i - 1] == 'f')))

CHECK:CAMELCASE: Avoid CamelCase: <cFLASH>
#619: FILE: drivers/input/lirc/commandir.c:537:
+				changeType = cFLASH;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 0'
#623: FILE: drivers/input/lirc/commandir.c:541:
+			if ((i > 0) && ((local_buffer[i - 1] == 'L')
+			    || (local_buffer[i - 1] == 'l')))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#624: FILE: drivers/input/lirc/commandir.c:542:
+			if ((i > 0) && ((local_buffer[i - 1] == 'L')
+			    || (local_buffer[i - 1] == 'l')))

CHECK:CAMELCASE: Avoid CamelCase: <cLCD>
#625: FILE: drivers/input/lirc/commandir.c:543:
+				changeType = cLCD;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/input/lirc/commandir.c:563:
+					retval = write_core(ctrl_buffer,
+						MCU_CTRL_SIZE,

CHECK:BRACES: braces {} should be used on all arms of this statement
#648: FILE: drivers/input/lirc/commandir.c:566:
+					if (retval != MCU_CTRL_SIZE) {
[...]
+					} else
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#649: FILE: drivers/input/lirc/commandir.c:567:
+						if (retval == -ENODEV)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SPLIT_STRING: quoted string split across lines
#651: FILE: drivers/input/lirc/commandir.c:569:
+							err("Device %d "
+							    "unplugged", minor);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#652: FILE: drivers/input/lirc/commandir.c:570:
+						else

WARNING:SPLIT_STRING: quoted string split across lines
#654: FILE: drivers/input/lirc/commandir.c:572:
+							err("Error on write to "
+							    "%d", minor);

CHECK:BRACES: Unbalanced braces around else statement
#656: FILE: drivers/input/lirc/commandir.c:574:
+					} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: drivers/input/lirc/commandir.c:583:
+					retval = write_core(ctrl_buffer,
+						MCU_CTRL_SIZE,

CHECK:BRACES: braces {} should be used on all arms of this statement
#668: FILE: drivers/input/lirc/commandir.c:586:
+					if (retval != MCU_CTRL_SIZE) {
[...]
+					} else
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#669: FILE: drivers/input/lirc/commandir.c:587:
+						if (retval == -ENODEV)

WARNING:SPLIT_STRING: quoted string split across lines
#671: FILE: drivers/input/lirc/commandir.c:589:
+							err("Device %d "
+							    "unplugged", minor);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#672: FILE: drivers/input/lirc/commandir.c:590:
+						else

WARNING:SPLIT_STRING: quoted string split across lines
#674: FILE: drivers/input/lirc/commandir.c:592:
+							err("Error on write to "
+							    "%d", minor);

CHECK:BRACES: Unbalanced braces around else statement
#676: FILE: drivers/input/lirc/commandir.c:594:
+					} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'equalsign > 0'
#699: FILE: drivers/input/lirc/commandir.c:617:
+			if ((equalsign > 0) && (local_buffer[i] > 32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'local_buffer[i] > 32'
#699: FILE: drivers/input/lirc/commandir.c:617:
+			if ((equalsign > 0) && (local_buffer[i] > 32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'changeType != cNothing'
#707: FILE: drivers/input/lirc/commandir.c:625:
+	if ((changeType != cNothing) && (equalsign == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'equalsign == 0'
#707: FILE: drivers/input/lirc/commandir.c:625:
+	if ((changeType != cNothing) && (equalsign == 0))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#722: FILE: drivers/input/lirc/commandir.c:640:
+	 * mbodkin, Sept 8, 2005 */

WARNING:LINE_SPACING: Missing a blank line after declarations
#724: FILE: drivers/input/lirc/commandir.c:642:
+	int ret = 0;
+	if (debug_commandir == 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#726: FILE: drivers/input/lirc/commandir.c:644:
+		printk(KERN_INFO "cmdir_write at %d\n", (int)tp.tv_usec);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cmdir_write', this function's name, in a string
#726: FILE: drivers/input/lirc/commandir.c:644:
+		printk(KERN_INFO "cmdir_write at %d\n", (int)tp.tv_usec);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#731: FILE: drivers/input/lirc/commandir.c:649:
+		printk(KERN_INFO "cmdir_write returning 0\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cmdir_write', this function's name, in a string
#731: FILE: drivers/input/lirc/commandir.c:649:
+		printk(KERN_INFO "cmdir_write returning 0\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#736: FILE: drivers/input/lirc/commandir.c:654:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#743: FILE: drivers/input/lirc/commandir.c:661:
+	int ret = 0;
+	if ((nexttofill + 1) % (QUEUELENGTH - 1) == nexttosend) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#744: FILE: drivers/input/lirc/commandir.c:662:
+	if ((nexttofill + 1) % (QUEUELENGTH - 1) == nexttosend) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#746: FILE: drivers/input/lirc/commandir.c:664:
+		printk(KERN_INFO "Too many packets backlogged "

WARNING:SPLIT_STRING: quoted string split across lines
#747: FILE: drivers/input/lirc/commandir.c:665:
+		printk(KERN_INFO "Too many packets backlogged "
+		       "in CommandIR Queue.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#755: FILE: drivers/input/lirc/commandir.c:673:
+	 *        count, nexttofill); */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#762: FILE: drivers/input/lirc/commandir.c:680:
+
+}

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int send_queue() should probably be int send_queue(void)
#764: FILE: drivers/input/lirc/commandir.c:682:
+int send_queue()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#768: FILE: drivers/input/lirc/commandir.c:686:
+	int ret = 0;
+	if (debug_commandir == 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#770: FILE: drivers/input/lirc/commandir.c:688:
+		printk(KERN_INFO "Send_queue() at %d\n", (int)tp.tv_usec);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#783: FILE: drivers/input/lirc/commandir.c:701:
+			 * otherwise wait until room */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#787: FILE: drivers/input/lirc/commandir.c:705:
+					printk(KERN_INFO "Sending packet data "

WARNING:SPLIT_STRING: quoted string split across lines
#788: FILE: drivers/input/lirc/commandir.c:706:
+					printk(KERN_INFO "Sending packet data "
+					       "at %d\n", (int)tp.tv_usec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/input/lirc/commandir.c:709:
+				ret = cmdir_write_queue(ourbuffers[nexttosend],
+				      ourbufferlengths[nexttosend], NULL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#796: FILE: drivers/input/lirc/commandir.c:714:
+^I^I^I^I^I * ^I(nexttosend + 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#797: FILE: drivers/input/lirc/commandir.c:715:
+^I^I^I^I^I * ^I% (QUEUELENGTH - 1); */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#797: FILE: drivers/input/lirc/commandir.c:715:
+					 * 	% (QUEUELENGTH - 1); */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#800: FILE: drivers/input/lirc/commandir.c:718:
+					return 0; /*send_queue(); */
+				} else

CHECK:BRACES: Unbalanced braces around else statement
#800: FILE: drivers/input/lirc/commandir.c:718:
+				} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#804: FILE: drivers/input/lirc/commandir.c:722:
+				return 1;
+			} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#807: FILE: drivers/input/lirc/commandir.c:725:
+					printk(KERN_INFO "Not time to send yet "

WARNING:SPLIT_STRING: quoted string split across lines
#808: FILE: drivers/input/lirc/commandir.c:726:
+					printk(KERN_INFO "Not time to send yet "
+					       "- starting timer at %d.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#810: FILE: drivers/input/lirc/commandir.c:728:
+					printk(KERN_INFO "Enabling timer.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#817: FILE: drivers/input/lirc/commandir.c:735:
+				printk(KERN_INFO "No more data to send %d!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#827: FILE: drivers/input/lirc/commandir.c:745:
+			printk(KERN_INFO "Already sending\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#833: FILE: drivers/input/lirc/commandir.c:751:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#837: FILE: drivers/input/lirc/commandir.c:755:
+	 * for non-zero last_tx's. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#840: FILE: drivers/input/lirc/commandir.c:758:
+	int now_sec = 0, now_usec = 0;
+	if (debug_commandir == 1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#841: FILE: drivers/input/lirc/commandir.c:759:
+		printk(KERN_INFO "waittotx(%d)\n", usecs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#861: FILE: drivers/input/lirc/commandir.c:779:
+			printk(KERN_INFO "Testing for the right second, now = "

WARNING:SPLIT_STRING: quoted string split across lines
#862: FILE: drivers/input/lirc/commandir.c:780:
+			printk(KERN_INFO "Testing for the right second, now = "
+			       "%d %d, wait = %d %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#868: FILE: drivers/input/lirc/commandir.c:786:
+				printk(KERN_INFO "Setting last_tx_sec to %d.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'now_sec == wait_until_sec'
#875: FILE: drivers/input/lirc/commandir.c:793:
+		if ((now_sec == wait_until_sec)
+		    && (now_usec > wait_until_usec)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'now_usec > wait_until_usec'
#875: FILE: drivers/input/lirc/commandir.c:793:
+		if ((now_sec == wait_until_sec)
+		    && (now_usec > wait_until_usec)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#876: FILE: drivers/input/lirc/commandir.c:794:
+		if ((now_sec == wait_until_sec)
+		    && (now_usec > wait_until_usec)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#878: FILE: drivers/input/lirc/commandir.c:796:
+				printk(KERN_INFO "Setting last_tx_sec to %d.\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#893: FILE: drivers/input/lirc/commandir.c:811:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#915: FILE: drivers/input/lirc/commandir.c:833:
+			printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#929: FILE: drivers/input/lirc/commandir.c:847:
+			if (transmitters & (0x01*multiplier))
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#931: FILE: drivers/input/lirc/commandir.c:849:
+			if (transmitters & (0x02*multiplier))
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#933: FILE: drivers/input/lirc/commandir.c:851:
+			if (transmitters & (0x04*multiplier))
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#935: FILE: drivers/input/lirc/commandir.c:853:
+			if (transmitters & (0x08*multiplier))
 			                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#941: FILE: drivers/input/lirc/commandir.c:859:
+				retval = write_core(buffer, count,
+					 callback_fct, i);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#952: FILE: drivers/input/lirc/commandir.c:870:
+			multiplier = multiplier*0x10;
 			                       ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#955: FILE: drivers/input/lirc/commandir.c:873:
+		return retval;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#958: FILE: drivers/input/lirc/commandir.c:876:
+		return write_core(buffer, count, callback_fct, lcd_device);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#961: FILE: drivers/input/lirc/commandir.c:879:
+		return write_core(buffer, count, callback_fct, def_device);
+		break;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#966: FILE: drivers/input/lirc/commandir.c:884:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#977: FILE: drivers/input/lirc/commandir.c:895:
+	char *buf = NULL;
+	interface = usb_find_interface(&cmdir_driver,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#978: FILE: drivers/input/lirc/commandir.c:896:
+	interface = usb_find_interface(&cmdir_driver,
+			USB_CMDIR_MINOR_BASE + device_num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#995: FILE: drivers/input/lirc/commandir.c:913:
+	buf = usb_buffer_alloc(dev->udev, count,
+		GFP_KERNEL, &urb->transfer_dma);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callback_fct"
#1005: FILE: drivers/input/lirc/commandir.c:923:
+	if (callback_fct == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1007: FILE: drivers/input/lirc/commandir.c:925:
+		usb_fill_bulk_urb(urb, dev->udev,
+			  usb_sndbulkpipe(dev->udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: drivers/input/lirc/commandir.c:926:
+			  usb_sndbulkpipe(dev->udev,
+				dev->bulk_out_endpointAddr),

CHECK:SPACING: No space is necessary after a cast
#1009: FILE: drivers/input/lirc/commandir.c:927:
+			  buf, count, (void *) cmdir_write_bulk_callback, dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1012: FILE: drivers/input/lirc/commandir.c:930:
+		usb_fill_bulk_urb(urb, dev->udev,
+			  usb_sndbulkpipe(dev->udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: drivers/input/lirc/commandir.c:931:
+			  usb_sndbulkpipe(dev->udev,
+				dev->bulk_out_endpointAddr),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1027: FILE: drivers/input/lirc/commandir.c:945:
+	 * core will eventually free it entirely */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1040: FILE: drivers/input/lirc/commandir.c:958:
+	struct usb_skel *dev;
+	dev = (struct usb_skel *)urb->context;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1043: FILE: drivers/input/lirc/commandir.c:961:
+		printk(KERN_INFO "callback()\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1050: FILE: drivers/input/lirc/commandir.c:968:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1071: FILE: drivers/input/lirc/commandir.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1107: FILE: drivers/input/lirc/commandir.h:37:
+extern int cmdir_write(unsigned char *buffer, int count,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1109: FILE: drivers/input/lirc/commandir.h:39:
+extern ssize_t cmdir_read(unsigned char *buffer, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1110: FILE: drivers/input/lirc/commandir.h:40:
+extern int set_tx_channels(unsigned int next_tx);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1112: FILE: drivers/input/lirc/commandir.h:42:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1145: FILE: drivers/input/lirc/lirc_cmdir.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1164: FILE: drivers/input/lirc/lirc_cmdir.c:20:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1165: FILE: drivers/input/lirc/lirc_cmdir.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1168: FILE: drivers/input/lirc/lirc_cmdir.c:24:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1189: FILE: drivers/input/lirc/lirc_cmdir.c:45:
+			printk(KERN_DEBUG fmt, ## args);	\

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1197: FILE: drivers/input/lirc/lirc_cmdir.c:53:
+	(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1199: FILE: drivers/input/lirc/lirc_cmdir.c:55:
+	LIRC_CAN_SET_SEND_CARRIER|
 	                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1200: FILE: drivers/input/lirc/lirc_cmdir.c:56:
+	LIRC_CAN_SEND_PULSE|
 	                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1201: FILE: drivers/input/lirc/lirc_cmdir.c:57:
+	LIRC_CAN_SET_TRANSMITTER_MASK|
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1213: FILE: drivers/input/lirc/lirc_cmdir.c:69:
+static unsigned char cmdir_char[4*WBUF_LEN];
                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1223: FILE: drivers/input/lirc/lirc_cmdir.c:79:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1227: FILE: drivers/input/lirc/lirc_cmdir.c:83:
+#define MAX_UDELAY_US (MAX_UDELAY_MS*1000)
                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1240: FILE: drivers/input/lirc/lirc_cmdir.c:96:
+static unsigned int get_time_value(unsigned int firstint,
+			unsigned int secondint, unsigned char overflow)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1245: FILE: drivers/input/lirc/lirc_cmdir.c:101:
+		t_answer = secondint - firstint + overflow*65536;
 		                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1261: FILE: drivers/input/lirc/lirc_cmdir.c:117:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1276: FILE: drivers/input/lirc/lirc_cmdir.c:132:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1284: FILE: drivers/input/lirc/lirc_cmdir.c:140:
+			printk(LIRC_DRIVER_NAME ": device is unplugged\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1288: FILE: drivers/input/lirc/lirc_cmdir.c:144:
+		printk(LIRC_DRIVER_NAME ": usb error = %d\n", retval);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1302: FILE: drivers/input/lirc/lirc_cmdir.c:158:
+			printk(LIRC_DRIVER_NAME ": device is now plugged in\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1324: FILE: drivers/input/lirc/lirc_cmdir.c:180:
+		printk(LIRC_DRIVER_NAME ": freq set to %dHz\n", freq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1326: FILE: drivers/input/lirc/lirc_cmdir.c:182:
+		printk(LIRC_DRIVER_NAME ": freq unchanged\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1328: FILE: drivers/input/lirc/lirc_cmdir.c:184:
+
+}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1363: FILE: drivers/input/lirc/lirc_cmdir.c:219:
+	num_data_values = num_data_bytes/3;
 	                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1366: FILE: drivers/input/lirc/lirc_cmdir.c:222:
+		tmp_char_buffer[i*4] = orig_rxbuffer[(i+1)*3];
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1366: FILE: drivers/input/lirc/lirc_cmdir.c:222:
+		tmp_char_buffer[i*4] = orig_rxbuffer[(i+1)*3];
 		                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1366: FILE: drivers/input/lirc/lirc_cmdir.c:222:
+		tmp_char_buffer[i*4] = orig_rxbuffer[(i+1)*3];
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1367: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1367: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1367: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1367: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1367: FILE: drivers/input/lirc/lirc_cmdir.c:223:
+		tmp_char_buffer[i*4+1] = orig_rxbuffer[(i+1)*3+1];
 		                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1368: FILE: drivers/input/lirc/lirc_cmdir.c:224:
+		tmp_char_buffer[i*4+2] = 0;
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1368: FILE: drivers/input/lirc/lirc_cmdir.c:224:
+		tmp_char_buffer[i*4+2] = 0;
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1369: FILE: drivers/input/lirc/lirc_cmdir.c:225:
+		tmp_char_buffer[i*4+3] = 0;
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1369: FILE: drivers/input/lirc/lirc_cmdir.c:225:
+		tmp_char_buffer[i*4+3] = 0;
 		                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: drivers/input/lirc/lirc_cmdir.c:230:
+	memcpy((unsigned char *)tmp_int_buffer, tmp_char_buffer,
+						(num_data_values*4));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1374: FILE: drivers/input/lirc/lirc_cmdir.c:230:
+						(num_data_values*4));
 						                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1379: FILE: drivers/input/lirc/lirc_cmdir.c:235:
+		final_data_buffer[0] = get_time_value(last_mc_time,
+						tmp_int_buffer[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1383: FILE: drivers/input/lirc/lirc_cmdir.c:239:
+		final_data_buffer[0] = get_time_value(last_mc_time,
+						tmp_int_buffer[0],

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1392: FILE: drivers/input/lirc/lirc_cmdir.c:248:
+		orig_index = (i + 1)*3 + 2;
 		                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1409: FILE: drivers/input/lirc/lirc_cmdir.c:265:
+		printk(KERN_ERR  LIRC_DRIVER_NAME ": lirc_buffer is full\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1417: FILE: drivers/input/lirc/lirc_cmdir.c:273:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <tooFull>
#1424: FILE: drivers/input/lirc/lirc_cmdir.c:280:
+	int tooFull = 5;  /* read up to 5 packets */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1437: FILE: drivers/input/lirc/lirc_cmdir.c:293:
+					printk(KERN_ALERT LIRC_DRIVER_NAME

WARNING:TYPO_SPELLING: 'supress' may be misspelled - perhaps 'suppress'?
#1442: FILE: drivers/input/lirc/lirc_cmdir.c:298:
+				/* supress errors */
 				   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1443: FILE: drivers/input/lirc/lirc_cmdir.c:299:
+				printk(KERN_ALERT LIRC_DRIVER_NAME

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1450: FILE: drivers/input/lirc/lirc_cmdir.c:306:
+			return -ENODATA;
+		} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1453: FILE: drivers/input/lirc/lirc_cmdir.c:309:
+				printk(LIRC_DRIVER_NAME

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1463: FILE: drivers/input/lirc/lirc_cmdir.c:319:
+					return 0;
+				else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1483: FILE: drivers/input/lirc/lirc_cmdir.c:339:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: drivers/input/lirc/lirc_cmdir.c:341:
+static ssize_t lirc_write(struct file *file, const char *buf,
+			 size_t n, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1532: FILE: drivers/input/lirc/lirc_cmdir.c:388:
+		cmdir_char[cmdir_cnt+1] = lobyte;
 		                    ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1567: FILE: drivers/input/lirc/lirc_cmdir.c:423:
+	dprintk("Total elapsed time is: %d. \n", total_time_elapsed);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1582: FILE: drivers/input/lirc/lirc_cmdir.c:438:
+#if 0 /* enable this for backwards compatibility */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1589: FILE: drivers/input/lirc/lirc_cmdir.c:445:
+
+

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1602: FILE: drivers/input/lirc/lirc_cmdir.c:458:
+		if (!(hardware.features&LIRC_CAN_SET_TRANSMITTER_MASK))
 		                       ^

CHECK:SPACING: No space is necessary after a cast
#1604: FILE: drivers/input/lirc/lirc_cmdir.c:460:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1615: FILE: drivers/input/lirc/lirc_cmdir.c:471:
+		return 0;
+		break;

CHECK:SPACING: No space is necessary after a cast
#1623: FILE: drivers/input/lirc/lirc_cmdir.c:479:
+				(unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1629: FILE: drivers/input/lirc/lirc_cmdir.c:485:
+		if (!(hardware.features&LIRC_CAN_SEND_MASK))
 		                       ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1638: FILE: drivers/input/lirc/lirc_cmdir.c:494:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1639: FILE: drivers/input/lirc/lirc_cmdir.c:495:
+		return -ENOSYS;
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1645: FILE: drivers/input/lirc/lirc_cmdir.c:501:
+		if (!(hardware.features&LIRC_CAN_SET_SEND_DUTY_CYCLE))
 		                       ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1659: FILE: drivers/input/lirc/lirc_cmdir.c:515:
+		return 0;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1677: FILE: drivers/input/lirc/lirc_cmdir.c:533:
+		return 0;
+		break;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1685: FILE: drivers/input/lirc/lirc_cmdir.c:541:
+static struct file_operations lirc_fops = {

WARNING:SPLIT_STRING: quoted string split across lines
#1710: FILE: drivers/input/lirc/lirc_cmdir.c:566:
+MODULE_DESCRIPTION("InnovationOne driver for "
+		   "CommandIR USB infrared transceiver");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1718: FILE: drivers/input/lirc/lirc_cmdir.c:574:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1724: FILE: drivers/input/lirc/lirc_cmdir.c:580:
+		printk(KERN_ERR  LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1735: FILE: drivers/input/lirc/lirc_cmdir.c:591:
+	printk(KERN_INFO  LIRC_DRIVER_NAME  ": module removed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1740: FILE: drivers/input/lirc/lirc_cmdir.c:596:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1747: FILE: drivers/input/lirc/lirc_cmdir.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1766: FILE: drivers/input/lirc/lirc_cmdir.h:20:
+extern int cmdir_write(unsigned char *buffer, int count,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1768: FILE: drivers/input/lirc/lirc_cmdir.h:22:
+extern ssize_t cmdir_read(unsigned char *buffer, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1769: FILE: drivers/input/lirc/lirc_cmdir.h:23:
+extern int set_tx_channels(unsigned int next_tx);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230086.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 96 warnings, 142 checks, 1691 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230086.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
