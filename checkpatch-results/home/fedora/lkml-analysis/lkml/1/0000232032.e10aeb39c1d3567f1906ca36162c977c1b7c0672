CHECK:BRACES: braces {} should be used on all arms of this statement
#126: FILE: kernel/panic.c:197:
+	if (tainted_mask) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#137: FILE: kernel/panic.c:208:
+	} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#159: FILE: kernel/sysctl.c:155:
+static int proc_taint(struct ctl_table *table, int write, struct file *filp,
                                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: kernel/sysctl.c:156:
+static int proc_taint(struct ctl_table *table, int write, struct file *filp,
 			       void __user *buffer, size_t *lenp, loff_t *ppos);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: kernel/sysctl.c:385:
+^I^I.maxlen ^I= sizeof(long),$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#216: FILE: kernel/sysctl.c:2243:
+static int proc_taint(struct ctl_table *table, int write, struct file *filp,
                                                                        ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: kernel/sysctl.c:2244:
+static int proc_taint(struct ctl_table *table, int write, struct file *filp,
 			       void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#232: FILE: kernel/sysctl.c:2255:
+	err = proc_doulongvec_minmax(&t, write, filp, buffer, lenp, ppos);
 	                                        ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: kernel/sysctl.c:2265:
+		int i;
+		for (i = 0; i < BITS_PER_LONG && tmptaint >> i; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after unsafe_smp
#300: FILE: arch/x86/kernel/smpboot.c:282:
+static int __cpuinitdata unsafe_smp;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#325: FILE: arch/x86/kernel/smpboot.c:414:
+		printk(KERN_INFO "WARNING: This combination of AMD"

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: arch/x86/kernel/smpboot.c:415:
+		printk(KERN_INFO "WARNING: This combination of AMD"
+			"processors is not suitable for SMP.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#326: FILE: arch/x86/kernel/smpboot.c:415:
+		printk(KERN_INFO "WARNING: This combination of AMD"
+			"processors is not suitable for SMP.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 4 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
