WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: drivers/block/drbd/drbd_worker.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#57: FILE: drivers/block/drbd/drbd_worker.c:2:
+/*
+   drbd_worker.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: drivers/block/drbd/drbd_worker.c:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#102: FILE: drivers/block/drbd/drbd_worker.c:47:
+#define SLEEP_TIME (HZ/10)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#104: FILE: drivers/block/drbd/drbd_worker.c:49:
+STATIC int w_make_ov_request(struct drbd_conf *mdev, struct drbd_work *w, int cancel);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: drivers/block/drbd/drbd_worker.c:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: drivers/block/drbd/drbd_worker.c:54:
+/* defined here:
+   drbd_md_io_complete

WARNING:TYPO_SPELLING: 'follwing' may be misspelled - perhaps 'following'?
#118: FILE: drivers/block/drbd/drbd_worker.c:63:
+ * For all these callbacks, note the follwing:
                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: drivers/block/drbd/drbd_worker.c:70:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#127: FILE: drivers/block/drbd/drbd_worker.c:72:
+/* About the global_state_lock
+   Each state transition on an device holds a read lock. In case we have

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: drivers/block/drbd/drbd_worker.c:74:
+   we need stable states on all devices for that.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/block/drbd/drbd_worker.c:85:
+	 * drbd_md_sync_page_io explicitly tests bio_uptodate(bio); */

CHECK:CAMELCASE: Avoid CamelCase: <Tl_epoch_entry>
#157: FILE: drivers/block/drbd/drbd_worker.c:102:
+	struct Tl_epoch_entry *e = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#159: FILE: drivers/block/drbd/drbd_worker.c:104:
+	int uptodate = bio_flagged(bio, BIO_UPTODATE);
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#164: FILE: drivers/block/drbd/drbd_worker.c:109:
+	if (!error && !uptodate) {
 	               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#166: FILE: drivers/block/drbd/drbd_worker.c:111:
+		 * fail the request by clearing the uptodate flag,
 		                                    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#168: FILE: drivers/block/drbd/drbd_worker.c:113:
+		 * do we want to drbd_WARN() on this? */

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeEE>
#187: FILE: drivers/block/drbd/drbd_worker.c:132:
+	MTRACE(TraceTypeEE, TraceLvlAll,

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlAll>
#187: FILE: drivers/block/drbd/drbd_worker.c:132:
+	MTRACE(TraceTypeEE, TraceLvlAll,

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#205: FILE: drivers/block/drbd/drbd_worker.c:150:
+	int uptodate = bio_flagged(bio, BIO_UPTODATE);
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#210: FILE: drivers/block/drbd/drbd_worker.c:155:
+	if (!error && !uptodate) {
 	               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#212: FILE: drivers/block/drbd/drbd_worker.c:157:
+		 * fail the request by clearing the uptodate flag,
 		                                    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/block/drbd/drbd_worker.c:159:
+		 * do we want to drbd_WARN() on this? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#219: FILE: drivers/block/drbd/drbd_worker.c:164:
+	 * alas it is not reliable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#242: FILE: drivers/block/drbd/drbd_worker.c:187:
+	 * (as soon as we release the req_lock) */

WARNING:TYPO_SPELLING: 'colision' may be misspelled - perhaps 'collision'?
#254: FILE: drivers/block/drbd/drbd_worker.c:199:
+	/* No hlist_del_init(&e->colision) here, we did not send the Ack yet,
 	                         ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#257: FILE: drivers/block/drbd/drbd_worker.c:202:
+	 * (e_end_block/e_end_resync_block) or from _drbd_clear_done_ee */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#279: FILE: drivers/block/drbd/drbd_worker.c:224:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'comming' may be misspelled - perhaps 'coming'?
#281: FILE: drivers/block/drbd/drbd_worker.c:226:
+/* read, readA or write requests on Primary comming from drbd_make_request
                                             ^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#289: FILE: drivers/block/drbd/drbd_worker.c:234:
+	int uptodate = bio_flagged(bio, BIO_UPTODATE);
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#291: FILE: drivers/block/drbd/drbd_worker.c:236:
+	if (!error && !uptodate) {
 	               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#293: FILE: drivers/block/drbd/drbd_worker.c:238:
+		 * fail the request by clearing the uptodate flag,
 		                                    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#295: FILE: drivers/block/drbd/drbd_worker.c:240:
+		 * do we want to drbd_WARN() on this? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: drivers/block/drbd/drbd_worker.c:266:
+	 * when it is done and had a local write error, see comments there */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w_io_error', this function's name, in a string
#326: FILE: drivers/block/drbd/drbd_worker.c:271:
+		ERR("Sending in w_io_error() failed\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#336: FILE: drivers/block/drbd/drbd_worker.c:281:
+	 * to give the disk the chance to relocate that block */

CHECK:CAMELCASE: Avoid CamelCase: <Connected>
#341: FILE: drivers/block/drbd/drbd_worker.c:286:
+	    mdev->state.conn < Connected ||

CHECK:CAMELCASE: Avoid CamelCase: <Inconsistent>
#342: FILE: drivers/block/drbd/drbd_worker.c:287:
+	    mdev->state.pdsk <= Inconsistent) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#360: FILE: drivers/block/drbd/drbd_worker.c:305:
+STATIC void drbd_csum(struct drbd_conf *mdev, struct crypto_hash *tfm, struct bio *bio, void *digest)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <CsumRSRequest>
#406: FILE: drivers/block/drbd/drbd_worker.c:351:
+						     CsumRSRequest);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#436: FILE: drivers/block/drbd/drbd_worker.c:381:
+	e = drbd_alloc_ee(mdev, DRBD_MAGIC+0xbeef, sector, size, GFP_TRY);
 	                                  ^

CHECK:SPACING: No space is necessary after a cast
#459: FILE: drivers/block/drbd/drbd_worker.c:404:
+	struct drbd_conf *mdev = (struct drbd_conf *) data;

CHECK:CAMELCASE: Avoid CamelCase: <VerifyS>
#466: FILE: drivers/block/drbd/drbd_worker.c:411:
+		if (mdev->state.conn == VerifyS)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/block/drbd/drbd_worker.c:428:
+int w_make_resync_request(struct drbd_conf *mdev,
+		struct drbd_work *w, int cancel)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w_make_resync_request', this function's name, in a string
#496: FILE: drivers/block/drbd/drbd_worker.c:441:
+		ERR("Confused in w_make_resync_request()! cstate < Connected");

CHECK:CAMELCASE: Avoid CamelCase: <SyncTarget>
#500: FILE: drivers/block/drbd/drbd_worker.c:445:
+	if (mdev->state.conn != SyncTarget)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w_make_resync_request', this function's name, in a string
#501: FILE: drivers/block/drbd/drbd_worker.c:446:
+		ERR("%s in w_make_resync_request\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/block/drbd/drbd_worker.c:447:
+		ERR("%s in w_make_resync_request\n",
+			conns_to_name(mdev->state.conn));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#506: FILE: drivers/block/drbd/drbd_worker.c:451:
+		/* Since we only need to access mdev->rsync a
+		   inc_local_if_state(mdev,Failed) would be sufficient, but

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#508: FILE: drivers/block/drbd/drbd_worker.c:453:
+		   all */

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#513: FILE: drivers/block/drbd/drbd_worker.c:458:
+	/* All goto requeses have to happend after this block: inc_local() */
 	                             ^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: drivers/block/drbd/drbd_worker.c:460:
+	number = SLEEP_TIME*mdev->sync_conf.rate / ((BM_BLOCK_SIZE/1024)*HZ);
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#515: FILE: drivers/block/drbd/drbd_worker.c:460:
+	number = SLEEP_TIME*mdev->sync_conf.rate / ((BM_BLOCK_SIZE/1024)*HZ);
 	                                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: drivers/block/drbd/drbd_worker.c:460:
+	number = SLEEP_TIME*mdev->sync_conf.rate / ((BM_BLOCK_SIZE/1024)*HZ);
 	                                                                ^

WARNING:TYPO_SPELLING: 'Aditionally' may be misspelled - perhaps 'Additionally'?
#550: FILE: drivers/block/drbd/drbd_worker.c:495:
+		 * Aditionally always align bigger requests, in order to
 		   ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#565: FILE: drivers/block/drbd/drbd_worker.c:510:
+			if (sector & ((1<<(align+3))-1))
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#565: FILE: drivers/block/drbd/drbd_worker.c:510:
+			if (sector & ((1<<(align+3))-1))
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#565: FILE: drivers/block/drbd/drbd_worker.c:510:
+			if (sector & ((1<<(align+3))-1))
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#569: FILE: drivers/block/drbd/drbd_worker.c:514:
+			if (((bit+1) & BM_BLOCKS_PER_BM_EXT_MASK) == 0)
 			         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#575: FILE: drivers/block/drbd/drbd_worker.c:520:
+			 * adjustment below */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#576: FILE: drivers/block/drbd/drbd_worker.c:521:
+			if (drbd_bm_test_bit(mdev, bit+1) != 1)
 			                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: drivers/block/drbd/drbd_worker.c:530:
+		 * reset the offset to start the next drbd_bm_find_next from */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#591: FILE: drivers/block/drbd/drbd_worker.c:536:
+		if (sector + (size>>9) > capacity)
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#592: FILE: drivers/block/drbd/drbd_worker.c:537:
+			size = (capacity-sector)<<9;
 			                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#592: FILE: drivers/block/drbd/drbd_worker.c:537:
+			size = (capacity-sector)<<9;
 			                        ^

CHECK:CAMELCASE: Avoid CamelCase: <RSDataRequest>
#606: FILE: drivers/block/drbd/drbd_worker.c:551:
+			if (!drbd_send_drequest(mdev, RSDataRequest,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/block/drbd/drbd_worker.c:552:
+			if (!drbd_send_drequest(mdev, RSDataRequest,
+					       sector, size, ID_SYNCER)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w_make_ov_request', this function's name, in a string
#644: FILE: drivers/block/drbd/drbd_worker.c:589:
+		ERR("Confused in w_make_ov_request()! cstate < Connected");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#648: FILE: drivers/block/drbd/drbd_worker.c:593:
+	number = SLEEP_TIME*mdev->sync_conf.rate / ((BM_BLOCK_SIZE/1024)*HZ);
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#648: FILE: drivers/block/drbd/drbd_worker.c:593:
+	number = SLEEP_TIME*mdev->sync_conf.rate / ((BM_BLOCK_SIZE/1024)*HZ);
 	                                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#648: FILE: drivers/block/drbd/drbd_worker.c:593:
+	number = SLEEP_TIME*mdev->sync_conf.rate / ((BM_BLOCK_SIZE/1024)*HZ);
 	                                                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#663: FILE: drivers/block/drbd/drbd_worker.c:608:
+		if (sector + (size>>9) > capacity)
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#664: FILE: drivers/block/drbd/drbd_worker.c:609:
+			size = (capacity-sector)<<9;
 			                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#664: FILE: drivers/block/drbd/drbd_worker.c:609:
+			size = (capacity-sector)<<9;
 			                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#685: FILE: drivers/block/drbd/drbd_worker.c:630:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#714: FILE: drivers/block/drbd/drbd_worker.c:659:
+	 * resync LRU would be wrong. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#719: FILE: drivers/block/drbd/drbd_worker.c:664:
+		 * is not finished by now).   Retry in 100ms. */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*w)...) over kmalloc(sizeof(struct drbd_work)...)
#724: FILE: drivers/block/drbd/drbd_worker.c:669:
+		w = kmalloc(sizeof(struct drbd_work), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#737: FILE: drivers/block/drbd/drbd_worker.c:682:
+	dbdt = Bit2KB(db/dt);
 	                ^

CHECK:CAMELCASE: Avoid CamelCase: <Bit2KB>
#737: FILE: drivers/block/drbd/drbd_worker.c:682:
+	dbdt = Bit2KB(db/dt);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#747: FILE: drivers/block/drbd/drbd_worker.c:692:
+	/* This protects us against multiple calls (that can happen in the presence
+	   of application IO), and against connectivity loss just before we arrive here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#747: FILE: drivers/block/drbd/drbd_worker.c:692:
+	   of application IO), and against connectivity loss just before we arrive here. */

CHECK:CAMELCASE: Avoid CamelCase: <VerifyT>
#755: FILE: drivers/block/drbd/drbd_worker.c:700:
+	     (os.conn == VerifyS || os.conn == VerifyT) ?

CHECK:CAMELCASE: Avoid CamelCase: <PausedSyncT>
#770: FILE: drivers/block/drbd/drbd_worker.c:715:
+		if (os.conn == SyncTarget || os.conn == PausedSyncT)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#778: FILE: drivers/block/drbd/drbd_worker.c:723:
+			(t < 100000) ? ((s*100)/t) : (s/(t/100));
 			                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#778: FILE: drivers/block/drbd/drbd_worker.c:723:
+			(t < 100000) ? ((s*100)/t) : (s/(t/100));
 			                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#778: FILE: drivers/block/drbd/drbd_worker.c:723:
+			(t < 100000) ? ((s*100)/t) : (s/(t/100));
 			                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#778: FILE: drivers/block/drbd/drbd_worker.c:723:
+			(t < 100000) ? ((s*100)/t) : (s/(t/100));
 			                                  ^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#793: FILE: drivers/block/drbd/drbd_worker.c:738:
+			ns.pdsk = UpToDate;
 			          ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <UpToDate>
#793: FILE: drivers/block/drbd/drbd_worker.c:738:
+			ns.pdsk = UpToDate;

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#795: FILE: drivers/block/drbd/drbd_worker.c:740:
+			ns.disk = UpToDate;
 			          ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#799: FILE: drivers/block/drbd/drbd_worker.c:744:
+		ns.disk = UpToDate;
 		          ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#800: FILE: drivers/block/drbd/drbd_worker.c:745:
+		ns.pdsk = UpToDate;
 		          ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#805: FILE: drivers/block/drbd/drbd_worker.c:750:
+				int i;
+				for (i = Bitmap ; i <= History_end ; i++)

CHECK:CAMELCASE: Avoid CamelCase: <Bitmap>
#805: FILE: drivers/block/drbd/drbd_worker.c:750:
+				for (i = Bitmap ; i <= History_end ; i++)

CHECK:CAMELCASE: Avoid CamelCase: <History_end>
#805: FILE: drivers/block/drbd/drbd_worker.c:750:
+				for (i = Bitmap ; i <= History_end ; i++)

CHECK:CAMELCASE: Avoid CamelCase: <Current>
#807: FILE: drivers/block/drbd/drbd_worker.c:752:
+				drbd_uuid_set(mdev, Bitmap, mdev->bc->md.uuid[Current]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#818: FILE: drivers/block/drbd/drbd_worker.c:763:
+			 * know of the peer. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#820: FILE: drivers/block/drbd/drbd_worker.c:765:
+			int i;
+			for (i = Current ; i <= History_end ; i++)

CHECK:CAMELCASE: Avoid CamelCase: <ChgStateVerbose>
#825: FILE: drivers/block/drbd/drbd_worker.c:770:
+	_drbd_set_state(mdev, ns, ChgStateVerbose, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <DataReply>
#862: FILE: drivers/block/drbd/drbd_worker.c:807:
+		ok = drbd_send_block(mdev, DataReply, e);

CHECK:CAMELCASE: Avoid CamelCase: <NegDReply>
#868: FILE: drivers/block/drbd/drbd_worker.c:813:
+		ok = drbd_send_ack(mdev, NegDReply, e);

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#903: FILE: drivers/block/drbd/drbd_worker.c:848:
+	if (inc_local_if_state(mdev, Failed)) {

CHECK:CAMELCASE: Avoid CamelCase: <RSDataReply>
#911: FILE: drivers/block/drbd/drbd_worker.c:856:
+			ok = drbd_send_block(mdev, RSDataReply, e);

WARNING:SPLIT_STRING: quoted string split across lines
#915: FILE: drivers/block/drbd/drbd_worker.c:860:
+				ERR("Not sending RSDataReply, "
+				    "partner DISKLESS!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <NegRSDReply>
#923: FILE: drivers/block/drbd/drbd_worker.c:868:
+		ok = drbd_send_ack(mdev, NegRSDReply, e);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#968: FILE: drivers/block/drbd/drbd_worker.c:913:
+		 * introducing more locking mechanisms */

CHECK:CAMELCASE: Avoid CamelCase: <RSIsInSync>
#983: FILE: drivers/block/drbd/drbd_worker.c:928:
+			ok = drbd_send_ack(mdev, RSIsInSync, e);

CHECK:CAMELCASE: Avoid CamelCase: <OVReply>
#1033: FILE: drivers/block/drbd/drbd_worker.c:978:
+						     digest, digest_size, OVReply);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1052: FILE: drivers/block/drbd/drbd_worker.c:997:
+		mdev->ov_last_oos_size += size>>9;
 		                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1055: FILE: drivers/block/drbd/drbd_worker.c:1000:
+		mdev->ov_last_oos_size = size>>9;
 		                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1076: FILE: drivers/block/drbd/drbd_worker.c:1021:
+	 * the resync lru has been cleaned up already */

CHECK:CAMELCASE: Avoid CamelCase: <OVResult>
#1107: FILE: drivers/block/drbd/drbd_worker.c:1052:
+	ok = drbd_send_ack_ex(mdev, OVResult, e->sector, e->size,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Barrier_Packet>
#1132: FILE: drivers/block/drbd/drbd_worker.c:1077:
+	struct Drbd_Barrier_Packet *p = &mdev->data.sbuf.Barrier;

CHECK:CAMELCASE: Avoid CamelCase: <Barrier>
#1132: FILE: drivers/block/drbd/drbd_worker.c:1077:
+	struct Drbd_Barrier_Packet *p = &mdev->data.sbuf.Barrier;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1139: FILE: drivers/block/drbd/drbd_worker.c:1084:
+	 * but compare with the head of w_clear_epoch */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1152: FILE: drivers/block/drbd/drbd_worker.c:1097:
+	 * or (on connection loss) in w_clear_epoch.  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: drivers/block/drbd/drbd_worker.c:1099:
+	ok = _drbd_send_cmd(mdev, mdev->data.socket, Barrier,
+				(struct Drbd_Header *)p, sizeof(*p), 0);

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Header>
#1154: FILE: drivers/block/drbd/drbd_worker.c:1099:
+				(struct Drbd_Header *)p, sizeof(*p), 0);

CHECK:CAMELCASE: Avoid CamelCase: <UnplugRemote>
#1164: FILE: drivers/block/drbd/drbd_worker.c:1109:
+	return drbd_send_short_cmd(mdev, UnplugRemote);

CHECK:CAMELCASE: Avoid CamelCase: <DataRequest>
#1199: FILE: drivers/block/drbd/drbd_worker.c:1144:
+	ok = drbd_send_drequest(mdev, DataRequest, req->sector, req->size,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1204: FILE: drivers/block/drbd/drbd_worker.c:1149:
+		 * so this is probably redundant */

CHECK:CAMELCASE: Avoid CamelCase: <NetworkFailure>
#1206: FILE: drivers/block/drbd/drbd_worker.c:1151:
+			drbd_force_state(mdev, NS(conn, NetworkFailure));

CHECK:CAMELCASE: Avoid CamelCase: <SyncSource>
#1222: FILE: drivers/block/drbd/drbd_worker.c:1167:
+		if ((odev->state.conn >= SyncSource &&

CHECK:CAMELCASE: Avoid CamelCase: <StandAlone>
#1245: FILE: drivers/block/drbd/drbd_worker.c:1190:
+		if (odev->state.conn == StandAlone && odev->state.disk == Diskless)

CHECK:CAMELCASE: Avoid CamelCase: <Diskless>
#1245: FILE: drivers/block/drbd/drbd_worker.c:1190:
+		if (odev->state.conn == StandAlone && odev->state.disk == Diskless)

CHECK:CAMELCASE: Avoid CamelCase: <ChgStateHard>
#1248: FILE: drivers/block/drbd/drbd_worker.c:1193:
+			rv |= (__drbd_set_state(_NS(odev, aftr_isp, 1), ChgStateHard, NULL)

WARNING:SPACING: space prohibited before semicolon
#1276: FILE: drivers/block/drbd/drbd_worker.c:1221:
+				       != SS_NothingToDo) ;

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeResync>
#1324: FILE: drivers/block/drbd/drbd_worker.c:1269:
+	MTRACE(TraceTypeResync, TraceLvlSummary,

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlSummary>
#1324: FILE: drivers/block/drbd/drbd_worker.c:1269:
+	MTRACE(TraceTypeResync, TraceLvlSummary,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1336: FILE: drivers/block/drbd/drbd_worker.c:1281:
+		/* Since application IO was locked out during WFBitMapT and
+		   WFSyncUUID we are still unmodified. Before going to SyncTarget

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1337: FILE: drivers/block/drbd/drbd_worker.c:1282:
+		   we check that we might make the data inconsistent. */

WARNING:SPLIT_STRING: quoted string split across lines
#1342: FILE: drivers/block/drbd/drbd_worker.c:1287:
+			INFO("before-resync-target handler returned %d, "
+			     "dropping connection.\n", r);

CHECK:CAMELCASE: Avoid CamelCase: <Disconnecting>
#1343: FILE: drivers/block/drbd/drbd_worker.c:1288:
+			drbd_force_state(mdev, NS(conn, Disconnecting));

CHECK:CAMELCASE: Avoid CamelCase: <Negotiating>
#1350: FILE: drivers/block/drbd/drbd_worker.c:1295:
+	if (!inc_local_if_state(mdev, Negotiating)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1355: FILE: drivers/block/drbd/drbd_worker.c:1300:
+	if (side == SyncTarget) {
[...]
+	} else /* side == SyncSource */ {
[...]

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1364: FILE: drivers/block/drbd/drbd_worker.c:1309:
+		D_ASSERT(mdev->state.disk == UpToDate);
 		                             ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: drivers/block/drbd/drbd_worker.c:1347:
+		     (unsigned long) mdev->rs_total << (BM_BLOCK_SIZE_B-10),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1402: FILE: drivers/block/drbd/drbd_worker.c:1347:
+		     (unsigned long) mdev->rs_total << (BM_BLOCK_SIZE_B-10),
 		                                                       ^

CHECK:SPACING: No space is necessary after a cast
#1403: FILE: drivers/block/drbd/drbd_worker.c:1348:
+		     (unsigned long) mdev->rs_total);

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1419: FILE: drivers/block/drbd/drbd_worker.c:1364:
+int drbd_worker(struct Drbd_thread *thi)
                                     ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_thread>
#1419: FILE: drivers/block/drbd/drbd_worker.c:1364:
+int drbd_worker(struct Drbd_thread *thi)

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1428: FILE: drivers/block/drbd/drbd_worker.c:1373:
+	while (get_t_state(thi) == Running) {
 	                   ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Running>
#1428: FILE: drivers/block/drbd/drbd_worker.c:1373:
+	while (get_t_state(thi) == Running) {

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1448: FILE: drivers/block/drbd/drbd_worker.c:1393:
+			ERR_IF (get_t_state(thi) == Running)
 			                    ^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1448: FILE: drivers/block/drbd/drbd_worker.c:1393:
+			ERR_IF (get_t_state(thi) == Running)

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1453: FILE: drivers/block/drbd/drbd_worker.c:1398:
+		if (get_t_state(thi) != Running)
 		                ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1456: FILE: drivers/block/drbd/drbd_worker.c:1401:
+		/* With this break, we have done a down() but not consumed
+		   the entry from the list. The cleanup code takes care of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1457: FILE: drivers/block/drbd/drbd_worker.c:1402:
+		   this...   */

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#1468: FILE: drivers/block/drbd/drbd_worker.c:1413:
+			 * asender, whatnot? could break even more ugly,
 			   ^^^^^^^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1481: FILE: drivers/block/drbd/drbd_worker.c:1426:
+			/* drbd_WARN("worker: a callback failed! \n"); */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1484: FILE: drivers/block/drbd/drbd_worker.c:1429:
+				drbd_force_state(mdev,
+						NS(conn, NetworkFailure));

WARNING:CONSIDER_COMPLETION: consider using a completion
#1503: FILE: drivers/block/drbd/drbd_worker.c:1448:
+	sema_init(&mdev->data.work.s, 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1513: FILE: drivers/block/drbd/drbd_worker.c:1458:
+	 * wait here for the Exiting receiver. */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141064.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 71 warnings, 82 checks, 1465 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141064.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
