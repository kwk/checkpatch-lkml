WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This patch introduces a sample kernel module to demonstrate the use of Hardware

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: samples/Kconfig:42:
+config SAMPLE_HW_BREAKPOINT
+	tristate "Build kernel hardware breakpoint examples -- loadable modules only"
+	depends on m
+	help
+	  This builds kernel hardware breakpoint example modules.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: samples/hw_breakpoint/data_breakpoint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'everytime' may be misspelled - perhaps 'every time'?
#90: FILE: samples/hw_breakpoint/data_breakpoint.c:6:
+ * prints a backtrace is invoked everytime a write operation is performed on
                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#110: FILE: samples/hw_breakpoint/data_breakpoint.c:26:
+	printk(KERN_INFO "pid_max_hbkpt ENABLED\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#116: FILE: samples/hw_breakpoint/data_breakpoint.c:32:
+	printk(KERN_INFO "pid_max_hbkpt DISABLED\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#122: FILE: samples/hw_breakpoint/data_breakpoint.c:38:
+	printk(KERN_INFO "pid_max value is changed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#124: FILE: samples/hw_breakpoint/data_breakpoint.c:40:
+	printk(KERN_INFO "Dump stack from pid_max_hbkpt_handler\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pid_max_hbkpt_handler', this function's name, in a string
#124: FILE: samples/hw_breakpoint/data_breakpoint.c:40:
+	printk(KERN_INFO "Dump stack from pid_max_hbkpt_handler\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#144: FILE: samples/hw_breakpoint/data_breakpoint.c:60:
+	if (ret < 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#145: FILE: samples/hw_breakpoint/data_breakpoint.c:61:
+		printk(KERN_INFO "Breakpoint registration failed\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#147: FILE: samples/hw_breakpoint/data_breakpoint.c:63:
+		return ret;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#147: FILE: samples/hw_breakpoint/data_breakpoint.c:63:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#148: FILE: samples/hw_breakpoint/data_breakpoint.c:64:
+		printk(KERN_INFO "HW Breakpoint for pid_max write installed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#156: FILE: samples/hw_breakpoint/data_breakpoint.c:72:
+	printk(KERN_INFO "HW Breakpoint for pid_max write uninstalled\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167550.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 2 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167550.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
