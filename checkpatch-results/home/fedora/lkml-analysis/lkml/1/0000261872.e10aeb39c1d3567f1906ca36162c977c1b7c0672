WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: include/asm-x86/uaccess.h:1:
+#ifndef _ASM_UACCES_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#109: FILE: include/asm-x86/uaccess.h:46:
+#define __range_not_ok(addr, size)					\
+({									\
+	unsigned long flag, roksum;					\
+	__chk_user_ptr(addr);						\
+	asm("# range_ok\n\r"						\
+	    "add %3,%1 ; sbb %0,%0 ; cmp %1,%4 ; sbb $0,%0"		\
+	    : "=&r" (flag), "=r" (roksum)				\
+	    : "1" (addr), "g" ((long)(size)),				\
+	      "g" (current_thread_info()->addr_limit.seg));		\
+	flag;								\
+})

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: include/asm-x86/uaccess.h:96:
+extern int fixup_exception(struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: include/asm-x86/uaccess.h:113:
+extern int __get_user_1(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/asm-x86/uaccess.h:114:
+extern int __get_user_2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/asm-x86/uaccess.h:115:
+extern int __get_user_4(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/asm-x86/uaccess.h:116:
+extern int __get_user_8(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/asm-x86/uaccess.h:117:
+extern int __get_user_bad(void);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#182: FILE: include/asm-x86/uaccess.h:119:
+#define __get_user_x(size, ret, x, ptr)		      \
+	asm volatile("call __get_user_" #size	      \
+		     : "=a" (ret),"=d" (x)	      \
+		     : "0" (ptr))		      \
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: include/asm-x86/uaccess.h:121:
+		     : "=a" (ret),"=d" (x)	      \
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261872.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 1 warnings, 7 checks, 359 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261872.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
