WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: fs/nilfs2/inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: fs/nilfs2/inode.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#71: FILE: fs/nilfs2/inode.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: fs/nilfs2/inode.c:34:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#117: FILE: fs/nilfs2/inode.c:64:
+		printk(KERN_ERR "nilfs_get_block: bmap_lookup returns "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nilfs_get_block', this function's name, in a string
#117: FILE: fs/nilfs2/inode.c:64:
+		printk(KERN_ERR "nilfs_get_block: bmap_lookup returns "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#118: FILE: fs/nilfs2/inode.c:65:
+		printk(KERN_ERR "nilfs_get_block: bmap_lookup returns "
+		       "buffer_head pointer (blkoff=%llu, blknum=%lu)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: fs/nilfs2/inode.c:67:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#141: FILE: fs/nilfs2/inode.c:88:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nilfs_get_block', this function's name, in a string
#142: FILE: fs/nilfs2/inode.c:89:
+				       "nilfs_get_block: a race condition "

WARNING:SPLIT_STRING: quoted string split across lines
#143: FILE: fs/nilfs2/inode.c:90:
+				       "nilfs_get_block: a race condition "
+				       "while inserting a data block. "

WARNING:SPLIT_STRING: quoted string split across lines
#144: FILE: fs/nilfs2/inode.c:91:
+				       "while inserting a data block. "
+				       "(inode number=%lu, file block "

WARNING:SPLIT_STRING: quoted string split across lines
#145: FILE: fs/nilfs2/inode.c:92:
+				       "(inode number=%lu, file block "
+				       "offset=%llu)\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: fs/nilfs2/inode.c:95:
+				BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: fs/nilfs2/inode.c:107:
+		map_bh(bh_result, inode->i_sb, 0); /* dbn must be changed
+						      to proper value */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: fs/nilfs2/inode.c:107:
+						      to proper value */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#163: FILE: fs/nilfs2/inode.c:110:
+		/* not found is not error (e.g. hole); must return without
+		   the mapped state flag. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#163: FILE: fs/nilfs2/inode.c:110:
+		   the mapped state flag. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: fs/nilfs2/inode.c:140:
+			   struct list_head *pages, unsigned nr_pages)

CHECK:BRACES: braces {} should be used on all arms of this statement
#213: FILE: fs/nilfs2/inode.c:160:
+	if (wbc->sync_mode == WB_SYNC_ALL) {
[...]
+	} else if (wbc->for_reclaim)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: fs/nilfs2/inode.c:177:
+		unsigned nr_dirty = 1 << (PAGE_SHIFT - inode->i_blkbits);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: fs/nilfs2/inode.c:185:
+			     loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: fs/nilfs2/inode.c:185:
+			     loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#257: FILE: fs/nilfs2/inode.c:204:
+			   loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#257: FILE: fs/nilfs2/inode.c:204:
+			   loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#261: FILE: fs/nilfs2/inode.c:208:
+	unsigned start = pos & (PAGE_CACHE_SIZE - 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: fs/nilfs2/inode.c:209:
+	unsigned nr_dirty;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#296: FILE: fs/nilfs2/inode.c:243:
+struct address_space_operations nilfs_aops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: braces {} should be used on all arms of this statement
#337: FILE: fs/nilfs2/inode.c:284:
+	if (dir->i_mode & S_ISGID) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#341: FILE: fs/nilfs2/inode.c:288:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#346: FILE: fs/nilfs2/inode.c:293:
+	inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#381: FILE: fs/nilfs2/inode.c:328:
+		goto failed_acl; /* never occur. When supporting
+				    nilfs_init_acl(), proper cancellation of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#382: FILE: fs/nilfs2/inode.c:329:
+				    above jobs should be considered */

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#390: FILE: fs/nilfs2/inode.c:337:
+	iput(inode);  /* raw_inode will be deleted through
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#391: FILE: fs/nilfs2/inode.c:338:
+	iput(inode);  /* raw_inode will be deleted through
+			 generic_delete_inode() */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#391: FILE: fs/nilfs2/inode.c:338:
+			 generic_delete_inode() */

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#396: FILE: fs/nilfs2/inode.c:343:
+	iput(inode);  /* if i_nlink == 1, generic_forget_inode() will be
 	^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#397: FILE: fs/nilfs2/inode.c:344:
+	iput(inode);  /* if i_nlink == 1, generic_forget_inode() will be
+			 called */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#397: FILE: fs/nilfs2/inode.c:344:
+			 called */

CHECK:SPACING: No space is necessary after a cast
#409: FILE: fs/nilfs2/inode.c:356:
+	(void) nilfs_ifile_delete_inode(sbi->s_ifile, inode->i_ino);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#458: FILE: fs/nilfs2/inode.c:405:
+#if 0

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#487: FILE: fs/nilfs2/inode.c:434:
+		err = nilfs_cpfile_get_checkpoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#493: FILE: fs/nilfs2/inode.c:440:
+			nilfs_cpfile_put_checkpoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#542: FILE: fs/nilfs2/inode.c:489:
+		init_special_inode(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#605: FILE: fs/nilfs2/inode.c:552:
+	/* When extending inode, nilfs->ns_inode_size should be checked
+	   for substitutions of appended fields */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#605: FILE: fs/nilfs2/inode.c:552:
+	   for substitutions of appended fields */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#625: FILE: fs/nilfs2/inode.c:572:
+		/* XXX: call with has_bmap = 0 is a workaround to avoid
+		   deadlock of bmap. This delays update of i_bmap to just

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#626: FILE: fs/nilfs2/inode.c:573:
+		   before writing */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#684: FILE: fs/nilfs2/inode.c:631:
+	BUG_ON(ret);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#690: FILE: fs/nilfs2/inode.c:637:
+	inode->i_mtime = inode->i_ctime = CURRENT_TIME;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#697: FILE: fs/nilfs2/inode.c:644:
+	/* May construct a logical segment and may fail in sync mode.
+	   But truncate has no return value. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#697: FILE: fs/nilfs2/inode.c:644:
+	   But truncate has no return value. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#714: FILE: fs/nilfs2/inode.c:661:
+	BUG_ON(err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#725: FILE: fs/nilfs2/inode.c:672:
+	/* May construct a logical segment and may fail in sync mode.
+	   But delete_inode has no return value. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#725: FILE: fs/nilfs2/inode.c:672:
+	   But delete_inode has no return value. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#757: FILE: fs/nilfs2/inode.c:704:
+	if (ii->i_bh == NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ii->i_bh"
#757: FILE: fs/nilfs2/inode.c:704:
+	if (ii->i_bh == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#764: FILE: fs/nilfs2/inode.c:711:
+		if (ii->i_bh == NULL)
[...]
+		else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ii->i_bh"
#764: FILE: fs/nilfs2/inode.c:711:
+		if (ii->i_bh == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#766: FILE: fs/nilfs2/inode.c:713:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#770: FILE: fs/nilfs2/inode.c:717:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#794: FILE: fs/nilfs2/inode.c:741:
+			 unsigned nr_dirty)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#808: FILE: fs/nilfs2/inode.c:755:
+		/* Because this routine may race with nilfs_dispose_list(),
+		   we have to check NILFS_I_QUEUED here, too. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#808: FILE: fs/nilfs2/inode.c:755:
+		   we have to check NILFS_I_QUEUED here, too. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!igrab"
#809: FILE: fs/nilfs2/inode.c:756:
+		if (list_empty(&ii->i_dirty) && igrab(inode) == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#811: FILE: fs/nilfs2/inode.c:758:
+			/* This will happen when somebody is freeing
+			   this inode. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#811: FILE: fs/nilfs2/inode.c:758:
+			   this inode. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#817: FILE: fs/nilfs2/inode.c:764:
+			return -EINVAL; /* NILFS_I_DIRTY may remain for
+					   freeing inode */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#817: FILE: fs/nilfs2/inode.c:764:
+					   freeing inode */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228153.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 51 warnings, 17 checks, 819 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228153.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
