WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#80: FILE: drivers/scsi/sg.c:762:
+sg_locked_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)
                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#89: FILE: drivers/scsi/sg.c:1082:
+sg_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)
                       ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#92: FILE: drivers/scsi/sg.c:1085:
+	int ret;
+	lock_kernel();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#93: FILE: drivers/scsi/sg.c:1086:
+	ret = sg_locked_ioctl(filp, cmd_in, arg);
 	                      ^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#101: FILE: drivers/scsi/sg.c:1093:
+typedef struct sg_compat_req_info { /* used by SG_GET_REQUEST_TABLE ioctl() */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/scsi/sg.c:1094:
+    char req_state;     /* 0 -> not used, 1 -> written, 2 -> ready to read */$

WARNING:TYPO_SPELLING: 'interruped' may be misspelled - perhaps 'interrupted'?
#103: FILE: drivers/scsi/sg.c:1095:
+    char orphan;        /* 0 -> normal request, 1 -> from interruped SG_IO */
                                                           ^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/scsi/sg.c:1095:
+    char orphan;        /* 0 -> normal request, 1 -> from interruped SG_IO */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/scsi/sg.c:1096:
+    char sg_io_owned;   /* 0 -> complete with read(), 1 -> owned by SG_IO */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/scsi/sg.c:1097:
+    char problem;       /* 0 -> no problem detected, 1 -> error to report */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/scsi/sg.c:1098:
+    int pack_id;        /* pack_id associated with request */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/scsi/sg.c:1099:
+    compat_uptr_t usr_ptr; /* user provided pointer (in new interface) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/scsi/sg.c:1100:
+    unsigned int duration; /* millisecs elapsed since written (req_state==1)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: drivers/scsi/sg.c:1101:
+    unsigned int duration; /* millisecs elapsed since written (req_state==1)
+			      or request duration (req_state==2) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#109: FILE: drivers/scsi/sg.c:1101:
+			      or request duration (req_state==2) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/scsi/sg.c:1102:
+    int unused;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#123: FILE: drivers/scsi/sg.c:1115:
+};
+#define BLKTRACESETUP32 _IOWR(0x12, 115, struct compat_blk_user_trace_setup)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#125: FILE: drivers/scsi/sg.c:1117:
+static long sg_compat_locked_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)
                                                 ^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Sg_request>
#131: FILE: drivers/scsi/sg.c:1123:
+	Sg_request *srp;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#176: FILE: drivers/scsi/sg.c:1168:
+		return sg_locked_ioctl(filp, cmd_in,
 		                       ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: drivers/scsi/sg.c:1172:
+	SCSI_LOG_TIMEOUT(3, printk("sg_compat_ioctl: %s, cmd=0x%x\n",

CHECK:SPACING: No space is necessary after a cast
#181: FILE: drivers/scsi/sg.c:1173:
+				   sdp->disk->disk_name, (int) cmd_in));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#185: FILE: drivers/scsi/sg.c:1177:
+		if (!access_ok(VERIFY_WRITE, p, SZ_SG_REQ_INFO * SG_MAX_QUEUE))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#187: FILE: drivers/scsi/sg.c:1179:
+			return -EFAULT;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#187: FILE: drivers/scsi/sg.c:1179:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/scsi/sg.c:1184:
+			rinfo = kmalloc(SZ_SG_COMPAT_REQ_INFO * SG_MAX_QUEUE,
+								GFP_KERNEL);

CHECK:BRACES: Unbalanced braces around else statement
#208: FILE: drivers/scsi/sg.c:1200:
+					else {

CHECK:SPACING: No space is necessary after a cast
#220: FILE: drivers/scsi/sg.c:1212:
+					   (unsigned long) srp->header.usr_ptr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/scsi/sg.c:1217:
+			ret = __copy_to_user(p, rinfo,
+						SZ_SG_COMPAT_REQ_INFO * SG_MAX_QUEUE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/scsi/sg.c:1237:
+		ret = do_blk_trace_setup(sdp->device->request_queue,
+					       sdp->disk->disk_name,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#272: FILE: drivers/scsi/sg.c:1262:
+static long sg_compat_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)
                                          ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: drivers/scsi/sg.c:1265:
+	int ret;
+	lock_kernel();

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#276: FILE: drivers/scsi/sg.c:1266:
+	ret = sg_compat_locked_ioctl(filp, cmd_in, arg);
 	                             ^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 10 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
