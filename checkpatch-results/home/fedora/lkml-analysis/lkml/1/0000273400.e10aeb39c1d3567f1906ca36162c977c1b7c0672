WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
This patch adds 64-bit futex support for x86-64.  As can be seen, it consists

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: include/asm-x86/futex.h:15:
+  do {^I^I^I^I^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#54: FILE: include/asm-x86/futex.h:24:
+		       "+m" (*(u32 __user *) uaddr)		\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: include/asm-x86/futex.h:27:
+  } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: include/asm-x86/futex.h:30:
+  do {^I^I^I^I^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#70: FILE: include/asm-x86/futex.h:44:
+		       "+m" (*(u32 __user *) uaddr), "=&r" (tem)\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: include/asm-x86/futex.h:47:
+  } while (0)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#76: FILE: include/asm-x86/futex.h:50:
+#define __futex_atomic64_op1(insn, ret, oldval, uaddr, oparg)	\
+	asm volatile("1:\t" insn "\n"				\
+		     "2:\t.section .fixup,\"ax\"\n"		\
+		     "3:\tmov\t%3, %1\n"			\
+		     "\tjmp\t2b\n"				\
+		     "\t.previous\n"				\
+		     _ASM_EXTABLE(1b, 3b)			\
+		     : "=r" (oldval), "=r" (ret),		\
+		       "+m" (*(u32 __user *) uaddr)		\
+		     : "i" (-EFAULT), "0" (oparg), "1" (0))

CHECK:SPACING: No space is necessary after a cast
#84: FILE: include/asm-x86/futex.h:58:
+		       "+m" (*(u32 __user *) uaddr)		\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: include/asm-x86/futex.h:61:
+#define __futex_atomic64_op2(insn, ret, oldval, uaddr, oparg)	\
+	asm volatile("1:\tmovq	%q2, %q0\n"			\
+		     "\tmovq\t%q0, %q3\n"				\
+		     "\t" insn "\n"				\
+		     "2:\tlock; cmpxchgq %q3, %2\n"		\
+		     "\tjnz\t1b\n"				\
+		     "3:\t.section .fixup,\"ax\"\n"		\
+		     "4:\tmov\t%5, %1\n"			\
+		     "\tjmp\t3b\n"				\
+		     "\t.previous\n"				\
+		     _ASM_EXTABLE(1b, 4b)			\
+		     _ASM_EXTABLE(2b, 4b)			\
 		     : "=&a" (oldval), "=&r" (ret),		\
+		       "+m" (*(u64 __user *) uaddr), "=&r" (tem)\
 		     : "r" (oparg), "i" (-EFAULT), "1" (0))

CHECK:SPACING: No space is necessary after a cast
#101: FILE: include/asm-x86/futex.h:74:
+		       "+m" (*(u64 __user *) uaddr), "=&r" (tem)\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: include/asm-x86/futex.h:140:
+^I^Ibreak;^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273400.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 4 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000273400.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
