WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
We have been looking into the linux kernel direct IO scalability issues with

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: block/ll_rw_blk.c:1587:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: block/ll_rw_blk.c:1642:
 
+

WARNING:NAKED_SSCANF: unchecked sscanf return value
#251: FILE: block/ll_rw_blk.c:3846:
+	sscanf(page, "%d", &q->cpu_binding);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#251: FILE: block/ll_rw_blk.c:3846:
+	sscanf(page, "%d", &q->cpu_binding);

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: block/ll_rw_blk.c:3853:
+	int count;
+	count = queue_var_show(q->cpu_binding, (page));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#272: FILE: block/ll_rw_blk.c:3993:
+	.attr = {.name = "cpu_binding", .mode = S_IRUGO | S_IWUSR },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: block/ll_rw_blk.c:3994:
+ ^I.show = queue_cpu_binding_show,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: block/ll_rw_blk.c:3994:
+ ^I.show = queue_cpu_binding_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: block/ll_rw_blk.c:3994:
+ ^I.show = queue_cpu_binding_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: block/ll_rw_blk.c:3995:
+ ^I.store = queue_cpu_binding_store,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: block/ll_rw_blk.c:3995:
+ ^I.store = queue_cpu_binding_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: block/ll_rw_blk.c:3995:
+ ^I.store = queue_cpu_binding_store,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#277: FILE: block/ll_rw_blk.c:3998:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: block/ll_rw_blk.c:4011:
+ ^I&queue_cpu_binding_entry.attr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: block/ll_rw_blk.c:4011:
+ ^I&queue_cpu_binding_entry.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: block/ll_rw_blk.c:4011:
+ ^I&queue_cpu_binding_entry.attr,$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#386: FILE: include/linux/workqueue.h:171:
+extern int FASTCALL(queue_work_on_cpu(struct workqueue_struct *wq, struct work_struct *work, int cpu));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: include/linux/workqueue.h:171:
+extern int FASTCALL(queue_work_on_cpu(struct workqueue_struct *wq, struct work_struct *work, int cpu));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#414: FILE: kernel/workqueue.c:227:
+		BUG_ON(!list_empty(&work->entry));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: kernel/workqueue.c:368:
+ ^Istruct sched_param param = { .sched_priority = MAX_RT_PRIO-1 };$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#429: FILE: kernel/workqueue.c:368:
+ ^Istruct sched_param param = { .sched_priority = MAX_RT_PRIO-1 };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: kernel/workqueue.c:368:
+ ^Istruct sched_param param = { .sched_priority = MAX_RT_PRIO-1 };$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#429: FILE: kernel/workqueue.c:368:
+ 	struct sched_param param = { .sched_priority = MAX_RT_PRIO-1 };
  	                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: kernel/workqueue.c:373:
+ ^Iif (!strncmp(cwq->wq->name, "kblockd", 7))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: kernel/workqueue.c:373:
+ ^Iif (!strncmp(cwq->wq->name, "kblockd", 7))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/workqueue.c:373:
+ ^Iif (!strncmp(cwq->wq->name, "kblockd", 7))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: kernel/workqueue.c:374:
+ ^I^Isched_setscheduler(current, SCHED_FIFO, &param);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: kernel/workqueue.c:374:
+ ^I^Isched_setscheduler(current, SCHED_FIFO, &param);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: kernel/workqueue.c:374:
+ ^I^Isched_setscheduler(current, SCHED_FIFO, &param);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: kernel/workqueue.c:375:
+ ^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: kernel/workqueue.c:375:
+ ^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: kernel/workqueue.c:375:
+ ^Ielse$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: kernel/workqueue.c:376:
+ ^I^Iset_user_nice(current, -5);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#438: FILE: kernel/workqueue.c:376:
+ ^I^Iset_user_nice(current, -5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: kernel/workqueue.c:376:
+ ^I^Iset_user_nice(current, -5);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399486.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 23 warnings, 5 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399486.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
