CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#41: 
Samuel Thibault, le Wed 06 Feb 2008 02:04:23 +0000, a écrit :
                                                      ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#42: 
> Andrew Morton, le Tue 05 Feb 2008 16:58:53 -0800, a écrit :
                                                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/linux/console.h:125:
+extern int braille_register_console(struct console *, int index,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct console *' should also have an identifier name
#144: FILE: include/linux/console.h:125:
+extern int braille_register_console(struct console *, int index,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: include/linux/console.h:126:
+extern int braille_register_console(struct console *, int index,
+		char *console_options, char *braille_options);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/console.h:127:
+extern int braille_unregister_console(struct console *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct console *' should also have an identifier name
#146: FILE: include/linux/console.h:127:
+extern int braille_unregister_console(struct console *);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#176: FILE: kernel/printk.c:781:
+		if (strcmp(console_cmdline[i].name, name) == 0 &&
[...]
+				if (!brl_options)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: kernel/printk.c:782:
+		if (strcmp(console_cmdline[i].name, name) == 0 &&
+			  console_cmdline[i].index == idx) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#212: FILE: kernel/printk.c:816:
+			printk(KERN_ERR "need port name after brl=\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: kernel/printk.c:1152:
+			braille_register_console(console,
+					console_cmdline[i].index,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#294: FILE: drivers/accessibility/braille/braille_console.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#313: FILE: drivers/accessibility/braille/braille_console.c:20:
+ * along with the program ; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#314: FILE: drivers/accessibility/braille/braille_console.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#348: FILE: drivers/accessibility/braille/braille_console.c:55:
+		kd_mksound(freq, HZ/10);
 		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <lastVC>
#364: FILE: drivers/accessibility/braille/braille_console.c:71:
+static int lastVC = -1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#372: FILE: drivers/accessibility/braille/braille_console.c:79:
+	unsigned char data[1 + 1 + 2*WIDTH + 2 + 1], csum = 0, *c;
 	                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#480: FILE: drivers/accessibility/braille/braille_console.c:187:
+				if (vc_x > 0) {
[...]
+				} else if (vc_y >= 1) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#487: FILE: drivers/accessibility/braille/braille_console.c:194:
+					vc_x = vc->vc_cols-WIDTH;
 					                  ^

CHECK:BRACES: Unbalanced braces around else statement
#488: FILE: drivers/accessibility/braille/braille_console.c:195:
+				} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#492: FILE: drivers/accessibility/braille/braille_console.c:199:
+				if (vc_x + WIDTH < vc->vc_cols) {
[...]
+				} else if (vc_y + 1 < vc->vc_rows) {
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#498: FILE: drivers/accessibility/braille/braille_console.c:205:
+				} else

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#522: FILE: drivers/accessibility/braille/braille_console.c:229:
+				vc_y = vc->vc_rows-1;
 				                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: drivers/accessibility/braille/braille_console.c:242:
+		unsigned char type = KTYP(param->value) - 0xf0;
+		if (type == KT_SPEC) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/accessibility/braille/braille_console.c:249:
+				on_off = vc_kbd_led(kbd_table + fg_console,
+						VC_CAPSLOCK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/accessibility/braille/braille_console.c:253:
+				on_off = vc_kbd_led(kbd_table + fg_console,
+						VC_NUMLOCK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/accessibility/braille/braille_console.c:257:
+				on_off = vc_kbd_led(kbd_table + fg_console,
+						VC_SCROLLOCK);

WARNING:LINE_SPACING: Missing a blank line after declarations
#577: FILE: drivers/accessibility/braille/braille_console.c:284:
+	struct vc_data *vc = param->vc;
+	switch (code) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#585: FILE: drivers/accessibility/braille/braille_console.c:292:
+		unsigned char c = param->c;
+		if (vc->vc_num != fg_console)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#603: FILE: drivers/accessibility/braille/braille_console.c:310:
+			/* Fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#615: FILE: drivers/accessibility/braille/braille_console.c:322:
+					(WIDTH-1) * sizeof(*console_buf));
 					      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#618: FILE: drivers/accessibility/braille/braille_console.c:325:
+			console_buf[console_cursor-1] = c;
 			                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#621: FILE: drivers/accessibility/braille/braille_console.c:328:
+		if (console_show)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#623: FILE: drivers/accessibility/braille/braille_console.c:330:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/accessibility/braille/braille_console.c:363:
+int braille_register_console(struct console *console, int index,
+		char *console_options, char *braille_options)

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: drivers/accessibility/braille/braille_console.c:366:
+	int ret;
+	if (!console_options)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#695: FILE: drivers/accessibility/Kconfig:1:
+menuconfig ACCESSIBILITY
+	bool "Accessibility support"
+	---help---
+	  Enable a submenu where accessibility items may be enabled.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#703: FILE: drivers/accessibility/Kconfig:9:
+config A11Y_BRAILLE_CONSOLE
+	bool "Console on braille device"
+	depends on SERIAL_CORE_CONSOLE
+	---help---
+	  Enables console output on a braille device connected to a 8250
+	  serial port. For now only the VisioBraille device is supported.
+
+	  To actually enable it, you need to pass option
+	  console=brl,ttyS0
+	  to the kernel. Options are the same as for serial console.
+
+	  If unsure, say N.
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317260.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 12 warnings, 24 checks, 608 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317260.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
