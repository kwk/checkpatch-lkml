WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
Support SR-IOV capability. By default, this feature is not enabled and the SR-IOV device behaves as traditional PCI device. After it's enabled, each Virtual Function's PCI configuration space can be accessed using its own Bus, Device and Function Number (Routing ID). Each Virtual Function also has PCI Memory Space, which is used to map its own register set.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#66: FILE: drivers/pci/Kconfig:61:
+config PCI_IOV
+	bool "PCI SR-IOV support"
+	depends on PCI && HOTPLUG
+	select PCI_MSI
+	select PCI_ARI
+	select HOTPLUG_PCI
+	default n
+	help
+	  This allows device drivers to enable Single Root I/O Virtualization.

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/pci/iov.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#92: FILE: drivers/pci/iov.c:2:
+ * drivers/pci/iov.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: drivers/pci/iov.c:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#111: FILE: drivers/pci/iov.c:21:
+#define notify(dev, event, id, param) ({ \
+	dev->iov->cb ? dev->iov->cb(dev, event, id, param) : 0; \
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#111: FILE: drivers/pci/iov.c:21:
+#define notify(dev, event, id, param) ({ \
+	dev->iov->cb ? dev->iov->cb(dev, event, id, param) : 0; \
+})

CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: drivers/pci/iov.c:25:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: drivers/pci/iov.c:49:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#182: FILE: drivers/pci/iov.c:92:
+	BUG_ON(!bus);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: drivers/pci/iov.c:125:
+		BUG_ON(rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/pci/iov.c:153:
+	rc = notify(vslot->dev, PCI_IOV_VF_ENABLE,
+		     vslot->id, vslot->slot->info->param);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/pci/iov.c:202:
+	rc = notify(vslot->dev, PCI_IOV_VF_SETPARAM,
+		     vslot->id, vslot->slot->info->param);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: drivers/pci/iov.c:215:
+	rc = notify(vslot->dev, PCI_IOV_VF_GETPARAM,
+		     vslot->id, vslot->slot->info->param);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#360: FILE: drivers/pci/iov.c:270:
+	BUG_ON(!bus);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#567: FILE: drivers/pci/iov.c:477:
+	BUG_ON(!dev->iov);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#578: FILE: drivers/pci/iov.c:488:
+	BUG_ON(!dev->iov);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#634: FILE: drivers/pci/iov.c:544:
+	BUG_ON(!dev->iov);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#704: FILE: drivers/pci/pci.h:170:
+	int (*cb)(struct pci_dev *, int, int, char *);	/* event callback */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#704: FILE: drivers/pci/pci.h:170:
+	int (*cb)(struct pci_dev *, int, int, char *);	/* event callback */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#704: FILE: drivers/pci/pci.h:170:
+	int (*cb)(struct pci_dev *, int, int, char *);	/* event callback */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#704: FILE: drivers/pci/pci.h:170:
+	int (*cb)(struct pci_dev *, int, int, char *);	/* event callback */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#708: FILE: drivers/pci/pci.h:174:
+extern int pci_iov_init(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: drivers/pci/pci.h:175:
+extern void pci_iov_release(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: drivers/pci/pci.h:176:
+extern int pci_iov_bus_range(struct pci_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#711: FILE: drivers/pci/pci.h:177:
+extern int pci_iov_resource_align(struct pci_dev *dev, int resno);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#712: FILE: drivers/pci/pci.h:178:
+extern int pci_iov_resource_bar(struct pci_dev *dev, int resno,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#719: FILE: drivers/pci/pci.h:185:
+}
+static inline void pci_iov_release(struct pci_dev *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#722: FILE: drivers/pci/pci.h:188:
+}
+extern inline int pci_iov_bus_range(struct pci_bus *bus)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#726: FILE: drivers/pci/pci.h:192:
+}
+static inline int pci_iov_resource_align(struct pci_dev *dev, int resno)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#730: FILE: drivers/pci/pci.h:196:
+}
+static inline int pci_iov_resource_bar(struct pci_dev *dev, int resno,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#809: FILE: include/linux/pci.h:1179:
+extern int pci_iov_enable(struct pci_dev *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#811: FILE: include/linux/pci.h:1181:
+extern void pci_iov_disable(struct pci_dev *dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: include/linux/pci.h:1184:
+static inline int pci_iov_enable(struct pci_dev *dev,
+			  int (*notify)(struct pci_dev *, int, int, char *))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#818: FILE: include/linux/pci.h:1188:
+}
+static inline void pci_iov_disable(struct pci_dev *dev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 21 checks, 756 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
