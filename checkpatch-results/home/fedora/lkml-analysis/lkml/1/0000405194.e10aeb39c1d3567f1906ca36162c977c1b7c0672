WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
On Mon, 16 Jul 2007 21:46:46 +0200 "Remy Bohmer" <l.pinguin@gmail.com> wrot=

WARNING:TYPO_SPELLING: 'machanism' may be misspelled - perhaps 'mechanism'?
#46: 
> I am looking for some tool/kernel machanism that enables me to track
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/relay.h:181:
+extern ssize_t relay_kernel_read(char *buffer,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#211: FILE: kernel/relay.c:1033:
+	kernel_reader = filp ? 0 : 1;
 	                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#217: FILE: kernel/relay.c:1038:
+	if (filp)
 	    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#236: FILE: kernel/relay.c:1059:
+	if (filp)
 	    ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: kernel/relay.c:1085:
+	read_descriptor_t desc;
+	desc.written = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#302: FILE: include/linux/logdev.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'debuging' may be misspelled - perhaps 'debugging'?
#303: FILE: include/linux/logdev.h:2:
+ * Logdevice - A device used to record debuging information in the kernel.
                                        ^^^^^^^^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#390: FILE: include/linux/logdev.h:89:
+#define logdev_print_on() LOGDEV_SW_SET(LOGDEV_SW_PRINT_ENABLED);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#391: FILE: include/linux/logdev.h:90:
+#define logdev_print_off() LOGDEV_SW_CLEAR(LOGDEV_SW_PRINT_ENABLED);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#394: FILE: include/linux/logdev.h:93:
+#define logdev_switch_on() LOGDEV_SW_SET(LOGDEV_SW_SWITCH_ENABLED);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#395: FILE: include/linux/logdev.h:94:
+#define logdev_switch_off() LOGDEV_SW_CLEAR(LOGDEV_SW_SWITCH_ENABLED);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#398: FILE: include/linux/logdev.h:97:
+#define logdev_mark_on() LOGDEV_SW_SET(LOGDEV_SW_MARKER_ENABLED);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#399: FILE: include/linux/logdev.h:98:
+#define logdev_mark_off() LOGDEV_SW_CLEAR(LOGDEV_SW_MARKER_ENABLED);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#407: FILE: include/linux/logdev.h:106:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#410: FILE: include/linux/logdev.h:109:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#412: FILE: include/linux/logdev.h:111:
+	__attribute__ ((format (printf, 3, 4)));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: include/linux/logdev.h:124:
+#define LOGDEV(x,y...) logdev_##x(y)
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#426: FILE: include/linux/logdev.h:125:
+#define LOGPRINTS(func,x...) do { if (logdev_print_ison()) LOGDEV(func,x); } while(0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#426: FILE: include/linux/logdev.h:125:
+#define LOGPRINTS(func,x...) do { if (logdev_print_ison()) LOGDEV(func,x); } while(0)
                                                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#426: FILE: include/linux/logdev.h:125:
+#define LOGPRINTS(func,x...) do { if (logdev_print_ison()) LOGDEV(func,x); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: include/linux/logdev.h:130:
+#define LOGPRINT(x...) LOGDEV(print,x)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#432: FILE: include/linux/logdev.h:131:
+#define LOGTPRINT(x...) LOGDEV(print_time,x)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: include/linux/logdev.h:132:
+#define LOGTFPRINT(x...) LOGDEV(print_time_func,__FUNCTION__,__LINE__,x)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: include/linux/logdev.h:132:
+#define LOGTFPRINT(x...) LOGDEV(print_time_func,__FUNCTION__,__LINE__,x)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: include/linux/logdev.h:132:
+#define LOGTFPRINT(x...) LOGDEV(print_time_func,__FUNCTION__,__LINE__,x)
                                                                      ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#433: FILE: include/linux/logdev.h:132:
+#define LOGTFPRINT(x...) LOGDEV(print_time_func,__FUNCTION__,__LINE__,x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: include/linux/logdev.h:138:
+#define lprint(x...) LOGPRINTS(print,x)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/linux/logdev.h:139:
+#define ltprint(x...) LOGPRINTS(print_time,x)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: include/linux/logdev.h:140:
+#define lfprint(x...) LOGPRINTS(print_time_func,__FUNCTION__,__LINE__,x)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: include/linux/logdev.h:140:
+#define lfprint(x...) LOGPRINTS(print_time_func,__FUNCTION__,__LINE__,x)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: include/linux/logdev.h:140:
+#define lfprint(x...) LOGPRINTS(print_time_func,__FUNCTION__,__LINE__,x)
                                                                      ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#441: FILE: include/linux/logdev.h:140:
+#define lfprint(x...) LOGPRINTS(print_time_func,__FUNCTION__,__LINE__,x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: include/linux/logdev.h:145:
+#define _lnprint(func,x,y...) func( x "%s\n", y)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: include/linux/logdev.h:145:
+#define _lnprint(func,x,y...) func( x "%s\n", y)
                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#446: FILE: include/linux/logdev.h:145:
+#define _lnprint(func,x,y...) func( x "%s\n", y)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: include/linux/logdev.h:146:
+#define lnprint(x...) _lnprint(lprint,x,"")
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: include/linux/logdev.h:146:
+#define lnprint(x...) _lnprint(lprint,x,"")
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#448: FILE: include/linux/logdev.h:147:
+#define ltnprint(x...) _lnprint(ltprint,x,"")
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#448: FILE: include/linux/logdev.h:147:
+#define ltnprint(x...) _lnprint(ltprint,x,"")
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: include/linux/logdev.h:148:
+#define lfnprint(x...) _lnprint(lfprint,x,"")
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: include/linux/logdev.h:148:
+#define lfnprint(x...) _lnprint(lfprint,x,"")
                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#463: FILE: include/linux/logdev.h:162:
+#define logdev_dump() do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#464: FILE: include/linux/logdev.h:163:
+#define logdev_record(id, size, data) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#465: FILE: include/linux/logdev.h:164:
+#define logdev_record_switch(prev, next) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#467: FILE: include/linux/logdev.h:166:
+#define LOGPRINT(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#468: FILE: include/linux/logdev.h:167:
+#define LOGTPRINT(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: include/linux/logdev.h:168:
+#define LOGTFPRINT(x...) do {} while(0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#471: FILE: include/linux/logdev.h:170:
+#define logdev_print_ison() ( 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#471: FILE: include/linux/logdev.h:170:
+#define logdev_print_ison() ( 0 )

ERROR:SPACING: space required before the open parenthesis '('
#472: FILE: include/linux/logdev.h:171:
+#define logdev_print_on() do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: include/linux/logdev.h:172:
+#define logdev_print_off() do {} while(0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#475: FILE: include/linux/logdev.h:174:
+#define logdev_switch_ison() ( 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#475: FILE: include/linux/logdev.h:174:
+#define logdev_switch_ison() ( 0 )

ERROR:SPACING: space required before the open parenthesis '('
#476: FILE: include/linux/logdev.h:175:
+#define logdev_switch_on() do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#477: FILE: include/linux/logdev.h:176:
+#define logdev_switch_off() do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: include/linux/logdev.h:178:
+#define logdev_print(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: include/linux/logdev.h:180:
+#define lprint(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#482: FILE: include/linux/logdev.h:181:
+#define ltprint(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: include/linux/logdev.h:182:
+#define lfprint(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: include/linux/logdev.h:184:
+#define lnprint(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: include/linux/logdev.h:185:
+#define ltnprint(x...) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#487: FILE: include/linux/logdev.h:186:
+#define lfnprint(x...) do {} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: include/linux/logdev.h:188:
+#define logdev_register_callback(i,f) do {} while(0)
                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: include/linux/logdev.h:188:
+#define logdev_register_callback(i,f) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#490: FILE: include/linux/logdev.h:189:
+#define logdev_unregister_callback(i) do {} while(0)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#523: FILE: lib/Kconfig.debug:631:
+choice
+	prompt "Logdev Backend"
+	depends on LOGDEV
+	default LOGDEV_RINGBUF
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#528: FILE: lib/Kconfig.debug:636:
+config LOGDEV_RINGBUF
+	bool "Logdev internal ring buffer"
+	---help---
+	  Logdev needs a backend to store the data as it is logged.
+	  this is done in memory, to record without much digression
+	  in performance of machine.  With this option logdev creates
+	  its own simple memory ring buffer.  This allows it to record
+	  things really early in the boot process.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#537: FILE: lib/Kconfig.debug:645:
+config LOGDEV_RELAY
+	bool "Logdev with relayfs (BROKEN)"
+	---help---
+	  Logdev needs a backend to store the data as it is logged.
+	  this is done in memory, to record without much digression
+	  in performance of machine.  With this option logdev uses
+	  relayfs as its back end.  This makes it more standard to
+	  other things in the kernel, and for userspace.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#557: FILE: lib/Kconfig.debug:665:
+config LOGDEV_PRINT_ENABLED
+	bool "Default Logdev prints should be enabled on startup"
+	depends on LOGDEV
+	help
+	  Enable this if you expect the LOGPRINT macros to be enabled
+	  as soon as the logdev device is loaded. Otherwise you must
+	  enable it with /proc/logdev/print
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#565: FILE: lib/Kconfig.debug:673:
+config LOGDEV_SWITCH_ENABLED
+	bool "Default Logdev printing of context switches on startup"
+	depends on LOGDEV
+	help
+	  Enable this if you expect the LOGSWITCH macros to be enabled
+	  as soon as the logdev device is loaded. Otherwise you must
+	  enable it with /proc/logdev/switch
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: drivers/char/sysrq.c:198:
+        /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: drivers/char/sysrq.c:199:
+         * Not so atomic, but we really don't care!$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: drivers/char/sysrq.c:200:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: drivers/char/sysrq.c:201:
+        if (logdev_switch_ison()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/char/sysrq.c:201:
+        if (logdev_switch_ison()) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: drivers/char/sysrq.c:202:
+                logdev_switch_off();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/char/sysrq.c:202:
+                logdev_switch_off();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: drivers/char/sysrq.c:203:
+                printk("logdev_switch now off\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/char/sysrq.c:203:
+                printk("logdev_switch now off\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#630: FILE: drivers/char/sysrq.c:203:
+                printk("logdev_switch now off\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/char/sysrq.c:204:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/char/sysrq.c:204:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/char/sysrq.c:205:
+                logdev_switch_on();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/char/sysrq.c:205:
+                logdev_switch_on();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/char/sysrq.c:206:
+                printk("logdev_switch now on\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/char/sysrq.c:206:
+                printk("logdev_switch now on\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#633: FILE: drivers/char/sysrq.c:206:
+                printk("logdev_switch now on\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: drivers/char/sysrq.c:207:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/char/sysrq.c:207:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: drivers/char/sysrq.c:387:
+        &sysrq_togglelogdevswitch_op,^I/* f */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/char/sysrq.c:387:
+        &sysrq_togglelogdevswitch_op,^I/* f */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: drivers/char/sysrq.c:389:
+        &sysrq_dumplog_op,^I^I/* g */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/char/sysrq.c:389:
+        &sysrq_dumplog_op,^I^I/* g */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#719: FILE: kernel/logdev/logdev.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#736: FILE: kernel/logdev/logdev.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#737: FILE: kernel/logdev/logdev.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#756: FILE: kernel/logdev/logdev.c:38:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#757: FILE: kernel/logdev/logdev.c:39:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/kdebug.h> instead of <asm/kdebug.h>
#758: FILE: kernel/logdev/logdev.c:40:
+#include <asm/kdebug.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#770: FILE: kernel/logdev/logdev.c:52:
+	lfnprint("(%s) from %p",func,__builtin_return_address(0));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#770: FILE: kernel/logdev/logdev.c:52:
+	lfnprint("(%s) from %p",func,__builtin_return_address(0));
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#781: FILE: kernel/logdev/logdev.c:63:
+	long x = (long)a - (long)b;
+	return x > 0 ? 1 : x < 0 ? -1 : 0;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#785: FILE: kernel/logdev/logdev.c:67:
+#define logdev_counter_inc() atomic_inc_return(&logdev_counter);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#792: FILE: kernel/logdev/logdev.c:74:
+#define check_cpu(cpu) ({ \
+			static int once = 1;				\
+			int x;						\
+			if (unlikely(x = (cpu >= LOGDEV_CPUS)) && once) { \
+				once = 0;				\
+				printk("BUG %s:%d: cpu %d doesn't fit logdev cpus\n", \
+				       __FILE__, __LINE__, cpu);	\
+			}						\
+			x;						\
+		})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cpu' may be better as '(cpu)' to avoid precedence issues
#792: FILE: kernel/logdev/logdev.c:74:
+#define check_cpu(cpu) ({ \
+			static int once = 1;				\
+			int x;						\
+			if (unlikely(x = (cpu >= LOGDEV_CPUS)) && once) { \
+				once = 0;				\
+				printk("BUG %s:%d: cpu %d doesn't fit logdev cpus\n", \
+				       __FILE__, __LINE__, cpu);	\
+			}						\
+			x;						\
+		})

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu >= LOGDEV_CPUS'
#795: FILE: kernel/logdev/logdev.c:77:
+			if (unlikely(x = (cpu >= LOGDEV_CPUS)) && once) { \

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#795: FILE: kernel/logdev/logdev.c:77:
+			if (unlikely(x = (cpu >= LOGDEV_CPUS)) && once) { \

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#797: FILE: kernel/logdev/logdev.c:79:
+				printk("BUG %s:%d: cpu %d doesn't fit logdev cpus\n", \

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#805: FILE: kernel/logdev/logdev.c:87:
+int logdev_copy_to_dev(struct logdev_dev *dev, const void *dat,

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#820: FILE: kernel/logdev/logdev.c:102:
+__setup("logdevprint", option_logdev_print);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#821: FILE: kernel/logdev/logdev.c:103:
+__setup("logdevswitch", option_logdev_switch);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#841: FILE: kernel/logdev/logdev.c:123:
+	cb = kmalloc(sizeof(*cb),GFP_KERNEL);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#848: FILE: kernel/logdev/logdev.c:130:
+	list_for_each(p,&logdev_callbacks) {
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#848: FILE: kernel/logdev/logdev.c:130:
+	list_for_each(p,&logdev_callbacks) {
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: kernel/logdev/logdev.c:134:
+			spin_unlock_irqrestore(&logdev_callbacks_lock,flags);
 			                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#876: FILE: kernel/logdev/logdev.c:158:
+	list_for_each(p,&logdev_callbacks) {
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#876: FILE: kernel/logdev/logdev.c:158:
+	list_for_each(p,&logdev_callbacks) {
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#883: FILE: kernel/logdev/logdev.c:165:
+		spin_unlock_irqrestore(&logdev_callbacks_lock,flags);
 		                                             ^

ERROR:POINTER_LOCATION: "foo __kprobes  bar" should be "foo __kprobes bar"
#911: FILE: kernel/logdev/logdev.c:193:
+void __kprobes  logdev_record_switch(struct task_struct *prev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#949: FILE: kernel/logdev/logdev.c:231:
+	logdev_copy_to_dev(dev,&hdr,sizeof(hdr));
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#949: FILE: kernel/logdev/logdev.c:231:
+	logdev_copy_to_dev(dev,&hdr,sizeof(hdr));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#949: FILE: kernel/logdev/logdev.c:231:
+	logdev_copy_to_dev(dev,&hdr,sizeof(hdr));
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#950: FILE: kernel/logdev/logdev.c:232:
+	logdev_copy_to_dev(dev,&rs,sizeof(rs));
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#950: FILE: kernel/logdev/logdev.c:232:
+	logdev_copy_to_dev(dev,&rs,sizeof(rs));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#950: FILE: kernel/logdev/logdev.c:232:
+	logdev_copy_to_dev(dev,&rs,sizeof(rs));
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#962: FILE: kernel/logdev/logdev.c:244:
+	int len=0;
 	       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#983: FILE: kernel/logdev/logdev.c:265:
+		buffer[PAGE_SIZE-1] = 0;
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1009: FILE: kernel/logdev/logdev.c:291:
+	int len=0;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1028: FILE: kernel/logdev/logdev.c:310:
+	va_start(va,str);
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1033: FILE: kernel/logdev/logdev.c:315:
+		buffer[PAGE_SIZE-1] = 0;
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1082: FILE: kernel/logdev/logdev.c:364:
+	va_start(va,str);
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1087: FILE: kernel/logdev/logdev.c:369:
+		buffer[PAGE_SIZE-1] = 0;
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: kernel/logdev/logdev.c:421:
+	va_start(va,str);
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1144: FILE: kernel/logdev/logdev.c:426:
+		buffer[PAGE_SIZE-1] = 0;
 		                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1236: FILE: kernel/logdev/logdev.c:518:
+		int cnt = total_size - tsize;
+		if (cnt > PAGE_SIZE)

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#1253: FILE: kernel/logdev/logdev.c:535:
+ * passed in. You can read it out later with logdev_record_read. But you wont
                                                                          ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1326: FILE: kernel/logdev/logdev.c:608:
+	for_each_present_cpu(cpu) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#1357: FILE: kernel/logdev/logdev.c:639:
+			if (!f)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1359: FILE: kernel/logdev/logdev.c:641:
+			else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1399: FILE: kernel/logdev/logdev.c:681:
+	switch (hdr[cpu].id) {
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1411: FILE: kernel/logdev/logdev.c:693:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1422: FILE: kernel/logdev/logdev.c:704:
+			usec_rem = do_div(t, 1000000000)/1000;
 			                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1425: FILE: kernel/logdev/logdev.c:707:
+			printk("[%5lu.%06lu] ",

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1431: FILE: kernel/logdev/logdev.c:713:
+		/* fall through */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1436: FILE: kernel/logdev/logdev.c:718:
+			printk("cpu:%d ",cpu);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1436: FILE: kernel/logdev/logdev.c:718:
+			printk("cpu:%d ",cpu);
 			                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1439: FILE: kernel/logdev/logdev.c:721:
+				printk("%s:%d ",file, line);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1439: FILE: kernel/logdev/logdev.c:721:
+				printk("%s:%d ",file, line);
 				               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1441: FILE: kernel/logdev/logdev.c:723:
+		for (i=r; i < hdr[cpu].size; i += r) {
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1443: FILE: kernel/logdev/logdev.c:725:
+			if (count > PAGE_SIZE-1)
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1444: FILE: kernel/logdev/logdev.c:726:
+				count = PAGE_SIZE-1;
 				                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1449: FILE: kernel/logdev/logdev.c:731:
+			printk("%s", kern_buffer[cpu]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1459: FILE: kernel/logdev/logdev.c:741:
+		printk(">>>> IN LOGDEV SWITCH <<<< cpu:%d \n", cpu);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1459: FILE: kernel/logdev/logdev.c:741:
+		printk(">>>> IN LOGDEV SWITCH <<<< cpu:%d \n", cpu);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1461: FILE: kernel/logdev/logdev.c:743:
+		logdev_copy_from_dev(dev,&rs,sizeof(rs));
 		                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1461: FILE: kernel/logdev/logdev.c:743:
+		logdev_copy_from_dev(dev,&rs,sizeof(rs));
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1461: FILE: kernel/logdev/logdev.c:743:
+		logdev_copy_from_dev(dev,&rs,sizeof(rs));
 		                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1464: FILE: kernel/logdev/logdev.c:746:
+		usec_rem = do_div(t, 1000000000)/1000;
 		                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1467: FILE: kernel/logdev/logdev.c:749:
+		printk("CPU=%d [%5lu.%06lu] ",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1468: FILE: kernel/logdev/logdev.c:750:
+		       cpu, secs,usec_rem);
 		                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1470: FILE: kernel/logdev/logdev.c:752:
+		printk("%s:%d(%d:%d:%d) -->> ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1477: FILE: kernel/logdev/logdev.c:759:
+		printk("%s:%d(%d:%d:%d)\n",

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1493: FILE: kernel/logdev/logdev.c:775:
+		logdev_copy_from_dev(dev,&custom,sizeof(custom));
 		                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1493: FILE: kernel/logdev/logdev.c:775:
+		logdev_copy_from_dev(dev,&custom,sizeof(custom));
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1493: FILE: kernel/logdev/logdev.c:775:
+		logdev_copy_from_dev(dev,&custom,sizeof(custom));
 		                                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1496: FILE: kernel/logdev/logdev.c:778:
+		i = len = hdr[cpu].size - sizeof(hdr[0]) - sizeof(custom);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1503: FILE: kernel/logdev/logdev.c:785:
+		logdev_copy_from_dev(dev,kern_buffer[cpu],i);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1503: FILE: kernel/logdev/logdev.c:785:
+		logdev_copy_from_dev(dev,kern_buffer[cpu],i);
 		                                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1518: FILE: kernel/logdev/logdev.c:800:
+			int count = len - i;
+			if (count > PAGE_SIZE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1520: FILE: kernel/logdev/logdev.c:802:
+			logdev_copy_from_dev(dev,kern_buffer[cpu],count);
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1520: FILE: kernel/logdev/logdev.c:802:
+			logdev_copy_from_dev(dev,kern_buffer[cpu],count);
 			                                         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1525: FILE: kernel/logdev/logdev.c:807:
+		if (p == &logdev_callbacks) {
+			printk("skipping! LOGDEV_CUSTOM id %d\n",custom.id);
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1526: FILE: kernel/logdev/logdev.c:808:
+			printk("skipping! LOGDEV_CUSTOM id %d\n",custom.id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1526: FILE: kernel/logdev/logdev.c:808:
+			printk("skipping! LOGDEV_CUSTOM id %d\n",custom.id);
 			                                        ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1534: FILE: kernel/logdev/logdev.c:816:
+		if (!dev->corrupted) {
[...]
+		} else
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1536: FILE: kernel/logdev/logdev.c:818:
+			printk(">>>>> Unknown logdev header, cpu %d buffer "

WARNING:SPLIT_STRING: quoted string split across lines
#1537: FILE: kernel/logdev/logdev.c:819:
+			printk(">>>>> Unknown logdev header, cpu %d buffer "
+			       "may be corrupted from this point on\n", cpu);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#1538: FILE: kernel/logdev/logdev.c:820:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1539: FILE: kernel/logdev/logdev.c:821:
+			printk("CPU %d >>> corrupted header <<<\n", cpu);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1555: FILE: kernel/logdev/logdev.c:837:
+				       hdr[next_cpu].counter) <= 0) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1556: FILE: kernel/logdev/logdev.c:838:
+		BUG_ON(hdr[cpu].id == LOGDEV_HDR_DONE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1566: FILE: kernel/logdev/logdev.c:848:
+		if ((logdev_copy_from_dev(dev,&hdr[cpu],sizeof(hdr[0])))
 		                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1566: FILE: kernel/logdev/logdev.c:848:
+		if ((logdev_copy_from_dev(dev,&hdr[cpu],sizeof(hdr[0])))
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1566: FILE: kernel/logdev/logdev.c:848:
+		if ((logdev_copy_from_dev(dev,&hdr[cpu],sizeof(hdr[0])))
 		                                       ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1589: FILE: kernel/logdev/logdev.c:871:
+	static int started  = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1591: FILE: kernel/logdev/logdev.c:873:
+	extern int in_logdump;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1625: FILE: kernel/logdev/logdev.c:907:
+	printk("****** Starting Logdev Dump ********\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1631: FILE: kernel/logdev/logdev.c:913:
+	for_each_present_cpu(cpu) {
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1640: FILE: kernel/logdev/logdev.c:922:
+			printk("Warning buffer for CPU %d is corrupted\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1682: FILE: kernel/logdev/logdev.c:964:
+		BUG_ON(this_cpu < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1683: FILE: kernel/logdev/logdev.c:965:
+		BUG_ON(!last_cpu && next_cpu < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1684: FILE: kernel/logdev/logdev.c:966:
+		BUG_ON(dev->init != LOGDEV_DEV_SUSPENDED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1685: FILE: kernel/logdev/logdev.c:967:
+		BUG_ON(hdr[cpu].id == LOGDEV_HDR_DONE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1695: FILE: kernel/logdev/logdev.c:977:
+	printk( ">>>>> done <<<<<\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#1695: FILE: kernel/logdev/logdev.c:977:
+	printk( ">>>>> done <<<<<\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1701: FILE: kernel/logdev/logdev.c:983:
+		if (dev_suspended(dev)) {
+		    dev->init = LOGDEV_DEV_RUNNING;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1708: FILE: kernel/logdev/logdev.c:990:
+
+	}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1757: FILE: kernel/logdev/logdev.c:1039:
+static int logdev_open_generic(struct inode *inode, struct file *filp)
                                                                  ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1763: FILE: kernel/logdev/logdev.c:1045:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1764: FILE: kernel/logdev/logdev.c:1046:
+static ssize_t logdev_debug_sw_read(struct file *filp, char __user *ubuf,
                                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1765: FILE: kernel/logdev/logdev.c:1047:
+static ssize_t logdev_debug_sw_read(struct file *filp, char __user *ubuf,
+				size_t cnt, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1769: FILE: kernel/logdev/logdev.c:1051:
+	int var = !!(logdev_switches & (1<<bit));
 	                                 ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1777: FILE: kernel/logdev/logdev.c:1059:
+static ssize_t logdev_debug_sw_write(struct file *filp,
                                                   ^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1787: FILE: kernel/logdev/logdev.c:1069:
+		BUG();

ERROR:SPACING: space required before the open parenthesis '('
#1794: FILE: kernel/logdev/logdev.c:1076:
+	if(copy_from_user(&buf, ubuf, cnt))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1799: FILE: kernel/logdev/logdev.c:1081:
+	val = simple_strtoul(buf, NULL, 10) ? bit : 0;

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1808: FILE: kernel/logdev/logdev.c:1090:
+static struct file_operations logdev_debug_sw_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1814: FILE: kernel/logdev/logdev.c:1096:
+static ssize_t logdev_debug_read(struct file *filp, char __user *ubuf,
                                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1815: FILE: kernel/logdev/logdev.c:1097:
+static ssize_t logdev_debug_read(struct file *filp, char __user *ubuf,
+				size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1826: FILE: kernel/logdev/logdev.c:1108:
+static ssize_t logdev_debug_write(struct file *filp, char __user *ubuf,
                                                ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#1836: FILE: kernel/logdev/logdev.c:1118:
+	if(copy_from_user(&buf, ubuf, cnt))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1841: FILE: kernel/logdev/logdev.c:1123:
+	val = simple_strtoul(buf, NULL, 10);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1850: FILE: kernel/logdev/logdev.c:1132:
+static struct file_operations logdev_debug_rdonly_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1855: FILE: kernel/logdev/logdev.c:1137:
+static struct file_operations logdev_debug_rdwr_fops = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1875: FILE: kernel/logdev/logdev.c:1157:
+		printk("can't create logdev debugfs\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1879: FILE: kernel/logdev/logdev.c:1161:
+		printk("debugfs not configured in. Can't access logdev "

WARNING:SPLIT_STRING: quoted string split across lines
#1880: FILE: kernel/logdev/logdev.c:1162:
+		printk("debugfs not configured in. Can't access logdev "
+		       "from userspace\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1889: FILE: kernel/logdev/logdev.c:1171:
+				       (void*)LOGDEV_SW_SWITCH_ENABLED,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1892: FILE: kernel/logdev/logdev.c:1174:
+				      (void*)LOGDEV_SW_PRINT_ENABLED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1896: FILE: kernel/logdev/logdev.c:1178:
+	d_mark = debugfs_create_file("mark", 0644, logdev_d,
+				      (void*)LOGDEV_SW_MARKER_ENABLED,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1896: FILE: kernel/logdev/logdev.c:1178:
+				      (void*)LOGDEV_SW_MARKER_ENABLED,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1912: FILE: kernel/logdev/logdev.c:1194:
+	for (i=0; i < LOGDEV_CPUS; i++) {
 	      ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1925: FILE: kernel/logdev/logdev.c:1207:
+	static int init = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1932: FILE: kernel/logdev/logdev.c:1214:
+	printk("Logdevice: copyright Steven Rostedt, Kihon Technologies Inc."

WARNING:SPLIT_STRING: quoted string split across lines
#1933: FILE: kernel/logdev/logdev.c:1215:
+	printk("Logdevice: copyright Steven Rostedt, Kihon Technologies Inc."
+	       " (Version %s)\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1937: FILE: kernel/logdev/logdev.c:1219:
+	for_each_present_cpu(cpu) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1939: FILE: kernel/logdev/logdev.c:1221:
+			printk(KERN_WARNING "More present cpus (%d) than "

WARNING:SPLIT_STRING: quoted string split across lines
#1940: FILE: kernel/logdev/logdev.c:1222:
+			printk(KERN_WARNING "More present cpus (%d) than "
+			       "NR_CPUS (%d)\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1941: FILE: kernel/logdev/logdev.c:1223:
+			       cpu,LOGDEV_CPUS);
 			          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1945: FILE: kernel/logdev/logdev.c:1227:
+		printk("Initializing logdev for cpu: %d\n",cpu);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1945: FILE: kernel/logdev/logdev.c:1227:
+		printk("Initializing logdev for cpu: %d\n",cpu);
 		                                          ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1977: FILE: kernel/logdev/logdev.c:1259:
+EXPORT_SYMBOL_GPL(logdev_record_switch);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1978: FILE: kernel/logdev/logdev.c:1260:
+EXPORT_SYMBOL_GPL(logdev_print);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1979: FILE: kernel/logdev/logdev.c:1261:
+EXPORT_SYMBOL_GPL(logdev_print_time);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1980: FILE: kernel/logdev/logdev.c:1262:
+EXPORT_SYMBOL_GPL(logdev_print_time_func);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1981: FILE: kernel/logdev/logdev.c:1263:
+EXPORT_SYMBOL_GPL(logdev_record);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1982: FILE: kernel/logdev/logdev.c:1264:
+EXPORT_SYMBOL_GPL(logdev_record_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1983: FILE: kernel/logdev/logdev.c:1265:
+EXPORT_SYMBOL_GPL(logdev_record_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1984: FILE: kernel/logdev/logdev.c:1266:
+EXPORT_SYMBOL_GPL(logdev_dump);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1993: FILE: kernel/logdev/logdev_priv.h:1:
+#ifndef _LOG_DEV_PRIV_H

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2020: FILE: kernel/logdev/logdev_priv.h:28:
+	spinlock_t lock;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2025: FILE: kernel/logdev/logdev_priv.h:33:
+#define get_logdev(cpu) &per_cpu(logdev_dev, cpu)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2050: FILE: kernel/logdev/logdev_probe.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2067: FILE: kernel/logdev/logdev_probe.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2068: FILE: kernel/logdev/logdev_probe.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#2084: FILE: kernel/logdev/logdev_probe.c:35:
+#include <asm/atomic.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2089: FILE: kernel/logdev/logdev_probe.c:40:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2090: FILE: kernel/logdev/logdev_probe.c:41:
+#  define DPRINTK(x...) printk(x)

ERROR:SPACING: space required before the open parenthesis '('
#2092: FILE: kernel/logdev/logdev_probe.c:43:
+#  define DPRINTK(x...) do { } while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2211: FILE: kernel/logdev/logdev_probe.c:162:
+	char func_symbol[KSYM_NAME_LEN+1];
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2219: FILE: kernel/logdev/logdev_probe.c:170:
+	char var_symbol[KSYM_NAME_LEN+1];
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2264: FILE: kernel/logdev/logdev_probe.c:215:
+	usec_rem = do_div(t, 1000000000)/1000;
 	                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2267: FILE: kernel/logdev/logdev_probe.c:218:
+	printk("[%5lu.%06lu] cpu:%d ",

WARNING:LINE_SPACING: Missing a blank line after declarations
#2285: FILE: kernel/logdev/logdev_probe.c:236:
+		int sz = size;
+		if (sz > PAGE_SIZE-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2285: FILE: kernel/logdev/logdev_probe.c:236:
+		if (sz > PAGE_SIZE-1)
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2286: FILE: kernel/logdev/logdev_probe.c:237:
+			sz = PAGE_SIZE-1;
 			              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2289: FILE: kernel/logdev/logdev_probe.c:240:
+		printk("%s", probe_buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2297: FILE: kernel/logdev/logdev_probe.c:248:
+static const char * logdev_print_hdr(int cpu,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2305: FILE: kernel/logdev/logdev_probe.c:256:
+	printk("%s:%d ", probe_buf, hdr->pid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2307: FILE: kernel/logdev/logdev_probe.c:258:
+	printk("func: ");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2309: FILE: kernel/logdev/logdev_probe.c:260:
+	printk(" (%p) ", (void*)hdr->addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2309: FILE: kernel/logdev/logdev_probe.c:260:
+	printk(" (%p) ", (void*)hdr->addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2322: FILE: kernel/logdev/logdev_probe.c:273:
+		printk("CPU[%d] Bad probe var record!\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2330: FILE: kernel/logdev/logdev_probe.c:281:
+		printk("var: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2332: FILE: kernel/logdev/logdev_probe.c:283:
+		printk(" (%p) = %08lx",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2333: FILE: kernel/logdev/logdev_probe.c:284:
+		       (void*)lp->var,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2336: FILE: kernel/logdev/logdev_probe.c:287:
+	printk("\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2338: FILE: kernel/logdev/logdev_probe.c:289:
+
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2348: FILE: kernel/logdev/logdev_probe.c:299:
+		printk("CPU[%d] Bad probe func record!\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2358: FILE: kernel/logdev/logdev_probe.c:309:
+	printk("\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2360: FILE: kernel/logdev/logdev_probe.c:311:
+
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2370: FILE: kernel/logdev/logdev_probe.c:321:
+		printk("CPU[%d] Bad probe curr record!\n",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2380: FILE: kernel/logdev/logdev_probe.c:331:
+	printk(" index:%d = %p", lp->index, (void*)lp->value);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2380: FILE: kernel/logdev/logdev_probe.c:331:
+	printk(" index:%d = %p", lp->index, (void*)lp->value);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2382: FILE: kernel/logdev/logdev_probe.c:333:
+	printk("\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2384: FILE: kernel/logdev/logdev_probe.c:335:
+
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2394: FILE: kernel/logdev/logdev_probe.c:345:
+		printk("CPU[%d] Bad probe curr record!\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2403: FILE: kernel/logdev/logdev_probe.c:354:
+		printk(" preempt_count:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2410: FILE: kernel/logdev/logdev_probe.c:361:
+	printk("0x%lx", lp->value);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2412: FILE: kernel/logdev/logdev_probe.c:363:
+	printk("\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2414: FILE: kernel/logdev/logdev_probe.c:365:
+
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2435: FILE: kernel/logdev/logdev_probe.c:386:
+		printk("Unknown probe callback id %x\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2440: FILE: kernel/logdev/logdev_probe.c:391:
+}
+/* ------------------ end cut for user space printing ------------------- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2442: FILE: kernel/logdev/logdev_probe.c:393:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2470: FILE: kernel/logdev/logdev_probe.c:421:
+		lp.value = *(unsigned long*)(p->var);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2483: FILE: kernel/logdev/logdev_probe.c:434:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2526: FILE: kernel/logdev/logdev_probe.c:477:
+	lp.str_size = i+1;
 	               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2544: FILE: kernel/logdev/logdev_probe.c:495:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2560: FILE: kernel/logdev/logdev_probe.c:511:
+	ptr = (unsigned long*)((char*)current + p->index);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2560: FILE: kernel/logdev/logdev_probe.c:511:
+	ptr = (unsigned long*)((char*)current + p->index);

ERROR:SPACING: space required before the open parenthesis '('
#2591: FILE: kernel/logdev/logdev_probe.c:542:
+	switch(lp.type) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2715: FILE: kernel/logdev/logdev_probe.c:666:
+	int ret;
+	ret = longjmp_break_handler(p, regs);

ERROR:SPACING: space required before the open parenthesis '('
#2833: FILE: kernel/logdev/logdev_probe.c:784:
+	if(copy_from_user(uprobe, arg, sizeof(*uprobe)))

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2873: FILE: kernel/logdev/logdev_probe.c:824:
+	if (uprobe)
+		kfree(uprobe);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2875: FILE: kernel/logdev/logdev_probe.c:826:
+	if (lh)
+		kfree(lh);

ERROR:SPACING: space required before the open parenthesis '('
#2894: FILE: kernel/logdev/logdev_probe.c:845:
+	if(copy_from_user(uprobe, arg, sizeof(*uprobe)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2917: FILE: kernel/logdev/logdev_probe.c:868:
+		fmt1 = kmalloc(uprobe->fmt1_size+1, GFP_KERNEL);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2928: FILE: kernel/logdev/logdev_probe.c:879:
+			fmt2 = kmalloc(uprobe->fmt2_size+1, GFP_KERNEL);
 			                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2950: FILE: kernel/logdev/logdev_probe.c:901:
+	DPRINTK("%s FAILED\n",__FUNCTION__);
 	                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2950: FILE: kernel/logdev/logdev_probe.c:901:
+	DPRINTK("%s FAILED\n",__FUNCTION__);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2952: FILE: kernel/logdev/logdev_probe.c:903:
+	if (fmt1)
+		kfree(fmt1);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2954: FILE: kernel/logdev/logdev_probe.c:905:
+	if (fmt2)
+		kfree(fmt2);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2956: FILE: kernel/logdev/logdev_probe.c:907:
+	if (uprobe)
+		kfree(uprobe);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2958: FILE: kernel/logdev/logdev_probe.c:909:
+	if (lh)
+		kfree(lh);

ERROR:SPACING: space required before the open parenthesis '('
#2975: FILE: kernel/logdev/logdev_probe.c:926:
+	if(copy_from_user(uprobe, arg, sizeof(*uprobe)))

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3018: FILE: kernel/logdev/logdev_probe.c:969:
+	if (uprobe)
+		kfree(uprobe);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3020: FILE: kernel/logdev/logdev_probe.c:971:
+	if (lh)
+		kfree(lh);

ERROR:SPACING: space required before the open parenthesis '('
#3037: FILE: kernel/logdev/logdev_probe.c:988:
+	if(copy_from_user(uprobe, arg, sizeof(*uprobe)))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#3048: FILE: kernel/logdev/logdev_probe.c:999:
+	switch(probe->type) {
+		case LOGPROBE_TYPE_PREEMPT:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#3048: FILE: kernel/logdev/logdev_probe.c:999:
+	switch(probe->type) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3087: FILE: kernel/logdev/logdev_probe.c:1038:
+	if (uprobe)
+		kfree(uprobe);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3089: FILE: kernel/logdev/logdev_probe.c:1040:
+	if (lh)
+		kfree(lh);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3093: FILE: kernel/logdev/logdev_probe.c:1044:
+static int logdev_probe_ioctl(struct inode *inode, struct file *filp,
                                                                 ^^^^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3151: FILE: kernel/logdev/logdev_probe.c:1102:
+			if (lp->func.fmt1)
+				kfree(lp->func.fmt1);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3153: FILE: kernel/logdev/logdev_probe.c:1104:
+			if (lp->func.fmt2)
+				kfree(lp->func.fmt2);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3159: FILE: kernel/logdev/logdev_probe.c:1110:
+			if (lp->curr.prefix)
+				kfree(lp->curr.prefix);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3165: FILE: kernel/logdev/logdev_probe.c:1116:
+			if (lp->var.prefix)
+				kfree(lp->var.prefix);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3168: FILE: kernel/logdev/logdev_probe.c:1119:
+			printk(KERN_WARNING "unregistering logdev probe of"

WARNING:SPLIT_STRING: quoted string split across lines
#3169: FILE: kernel/logdev/logdev_probe.c:1120:
+			printk(KERN_WARNING "unregistering logdev probe of"
+			       "unknown type %d\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#3169: FILE: kernel/logdev/logdev_probe.c:1120:
+			printk(KERN_WARNING "unregistering logdev probe of"
+			       "unknown type %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3189: FILE: kernel/logdev/logdev_probe.c:1140:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3239: FILE: kernel/logdev/logdev_probe.c:1190:
+	seq_printf(m,"%s : %p\n",
 	            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3241: FILE: kernel/logdev/logdev_probe.c:1192:
+		   (void*)p->addr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3257: FILE: kernel/logdev/logdev_probe.c:1208:
+			seq_printf(m,"\t%s : %p\n",
 			            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3259: FILE: kernel/logdev/logdev_probe.c:1210:
+				   (void*)watch->var);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3264: FILE: kernel/logdev/logdev_probe.c:1215:
+			seq_printf(m,"\tfmt1: %s\n",
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3267: FILE: kernel/logdev/logdev_probe.c:1218:
+			seq_printf(m,"\tfmt2: %s\n",
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3273: FILE: kernel/logdev/logdev_probe.c:1224:
+		seq_printf(m,"\tindex: %d (0x%x)\n",
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3276: FILE: kernel/logdev/logdev_probe.c:1227:
+			seq_printf(m,"\tprefix: %s\n",
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3284: FILE: kernel/logdev/logdev_probe.c:1235:
+			seq_printf(m,"\tpreempt_count\n");
 			            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#3284: FILE: kernel/logdev/logdev_probe.c:1235:
+			seq_printf(m,"\tpreempt_count\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3287: FILE: kernel/logdev/logdev_probe.c:1238:
+			seq_printf(m,"\tunknown type\n");
 			            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#3287: FILE: kernel/logdev/logdev_probe.c:1238:
+			seq_printf(m,"\tunknown type\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3290: FILE: kernel/logdev/logdev_probe.c:1241:
+			seq_printf(m,"\tprefix: %s\n",
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3295: FILE: kernel/logdev/logdev_probe.c:1246:
+		seq_printf(m,"tunknown type %d\n",
 		            ^

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#3301: FILE: kernel/logdev/logdev_probe.c:1252:
+static struct seq_operations logdev_seq_op = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3310: FILE: kernel/logdev/logdev_probe.c:1261:
+static int logdev_probe_open (struct inode *inode, struct file *filp)
                                                                 ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3310: FILE: kernel/logdev/logdev_probe.c:1261:
+static int logdev_probe_open (struct inode *inode, struct file *filp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3314: FILE: kernel/logdev/logdev_probe.c:1265:
+	ret = seq_open(filp, &logdev_seq_op);
 	               ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3317: FILE: kernel/logdev/logdev_probe.c:1268:
+		struct seq_file *m = filp->private_data;
+		m->private = inode->i_private;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3323: FILE: kernel/logdev/logdev_probe.c:1274:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3324: FILE: kernel/logdev/logdev_probe.c:1275:
+static struct file_operations logdev_probe_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3334: FILE: kernel/logdev/logdev_probe.c:1285:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3353: FILE: kernel/logdev/logdev_probe.c:1304:
+		printk("logdev_probe: Warning, couldn't allocate func buffer\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3365: FILE: kernel/logdev/logdev_relay.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3382: FILE: kernel/logdev/logdev_relay.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3383: FILE: kernel/logdev/logdev_relay.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3413: FILE: kernel/logdev/logdev_relay.c:49:
+};
+DEFINE_PER_CPU(struct logdev_dev_priv, logdev_dev_priv);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3414: FILE: kernel/logdev/logdev_relay.c:50:
+#define get_logdev_priv(cpu) &per_cpu(logdev_dev_priv, cpu)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3419: FILE: kernel/logdev/logdev_relay.c:55:
+#define get_logdev_priv(cpu) &per_cpu(logdev_dev_priv, cpu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3430: FILE: kernel/logdev/logdev_relay.c:66:
+int logdev_copy_to_dev(struct logdev_dev *ldev, const void *dat,
+			      int size)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3448: FILE: kernel/logdev/logdev_relay.c:84:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3480: FILE: kernel/logdev/logdev_relay.c:116:
+static struct rchan_callbacks logdev_relay_callbacks =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3520: FILE: kernel/logdev/logdev_relay.c:156:
+	for_each_present_cpu(cpu) {
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3545: FILE: kernel/logdev/logdev_ringbuf.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3562: FILE: kernel/logdev/logdev_ringbuf.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3563: FILE: kernel/logdev/logdev_ringbuf.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#3590: FILE: kernel/logdev/logdev_ringbuf.c:46:
+#include <asm/uaccess.h>

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3615: FILE: kernel/logdev/logdev_ringbuf.c:71:
+	return (void*)__get_free_pages(GFP_KERNEL,order);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3615: FILE: kernel/logdev/logdev_ringbuf.c:71:
+	return (void*)__get_free_pages(GFP_KERNEL,order);
 	                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3617: FILE: kernel/logdev/logdev_ringbuf.c:73:
+	return alloc_bootmem((1<<order)*PAGE_SIZE);
 	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3617: FILE: kernel/logdev/logdev_ringbuf.c:73:
+	return alloc_bootmem((1<<order)*PAGE_SIZE);
 	                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3647: FILE: kernel/logdev/logdev_ringbuf.c:103:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3650: FILE: kernel/logdev/logdev_ringbuf.c:106:
+ssize_t logdev_write(struct file *filp, const char *buf, size_t count,
                                   ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3667: FILE: kernel/logdev/logdev_ringbuf.c:123:
+	if (copy_from_user(user_buffer,buf,count)) {
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3667: FILE: kernel/logdev/logdev_ringbuf.c:123:
+	if (copy_from_user(user_buffer,buf,count)) {
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3672: FILE: kernel/logdev/logdev_ringbuf.c:128:
+	spin_lock_irqsave(&ldev->lock,flags);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3673: FILE: kernel/logdev/logdev_ringbuf.c:129:
+	count = logdev_copy_to_dev(ldev,user_buffer,count);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3673: FILE: kernel/logdev/logdev_ringbuf.c:129:
+	count = logdev_copy_to_dev(ldev,user_buffer,count);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3674: FILE: kernel/logdev/logdev_ringbuf.c:130:
+	spin_unlock_irqrestore(&ldev->lock,flags);
 	                                  ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3685: FILE: kernel/logdev/logdev_ringbuf.c:141:
+ssize_t logdev_read(struct file *filp, char *buf, size_t count, loff_t *f_pos)
                                  ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3699: FILE: kernel/logdev/logdev_ringbuf.c:155:
+	spin_lock_irqsave(&ldev->lock,flags);
 	                             ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3702: FILE: kernel/logdev/logdev_ringbuf.c:158:
+	if (!dev->size) {
+

WARNING:IF_1: Consider removing the #if 1 and its #endif
#3704: FILE: kernel/logdev/logdev_ringbuf.c:160:
+#if 1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3716: FILE: kernel/logdev/logdev_ringbuf.c:172:
+			DECLARE_WAITQUEUE(wait,current);
 			                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3717: FILE: kernel/logdev/logdev_ringbuf.c:173:
+			DECLARE_WAITQUEUE(wait,current);
+			current->state = TASK_INTERRUPTIBLE;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3718: FILE: kernel/logdev/logdev_ringbuf.c:174:
+			add_wait_queue(&dev->wait,&wait);
 			                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#3718: FILE: kernel/logdev/logdev_ringbuf.c:174:
+			add_wait_queue(&dev->wait,&wait);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3719: FILE: kernel/logdev/logdev_ringbuf.c:175:
+			spin_unlock_irqrestore(&ldev->lock,flags);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3721: FILE: kernel/logdev/logdev_ringbuf.c:177:
+			spin_lock_irqsave(&ldev->lock,flags);
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3722: FILE: kernel/logdev/logdev_ringbuf.c:178:
+			remove_wait_queue(&dev->wait,&wait);
 			                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#3722: FILE: kernel/logdev/logdev_ringbuf.c:178:
+			remove_wait_queue(&dev->wait,&wait);
 			                             ^

ERROR:SPACING: space required before the open parenthesis '('
#3729: FILE: kernel/logdev/logdev_ringbuf.c:185:
+		} while(1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3735: FILE: kernel/logdev/logdev_ringbuf.c:191:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3736: FILE: kernel/logdev/logdev_ringbuf.c:192:
+	count = logdev_copy_from_dev(ldev,user_buffer,count);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3736: FILE: kernel/logdev/logdev_ringbuf.c:192:
+	count = logdev_copy_from_dev(ldev,user_buffer,count);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3742: FILE: kernel/logdev/logdev_ringbuf.c:198:
+	spin_unlock_irqrestore(&ldev->lock,flags);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3746: FILE: kernel/logdev/logdev_ringbuf.c:202:
+		if (copy_to_user(buf,user_buffer,count))
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3746: FILE: kernel/logdev/logdev_ringbuf.c:202:
+		if (copy_to_user(buf,user_buffer,count))
 		                                ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3755: FILE: kernel/logdev/logdev_ringbuf.c:211:
+static int logdev_ioctl(struct inode *inode, struct file *filp,
                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3761: FILE: kernel/logdev/logdev_ringbuf.c:217:
+static int logdev_close(struct inode *inode, struct file *filp)
                                                           ^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3763: FILE: kernel/logdev/logdev_ringbuf.c:219:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3769: FILE: kernel/logdev/logdev_ringbuf.c:225:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3770: FILE: kernel/logdev/logdev_ringbuf.c:226:
+static int logdev_open (struct inode *inode, struct file *filp)
                                                           ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3770: FILE: kernel/logdev/logdev_ringbuf.c:226:
+static int logdev_open (struct inode *inode, struct file *filp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3778: FILE: kernel/logdev/logdev_ringbuf.c:234:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#3781: FILE: kernel/logdev/logdev_ringbuf.c:237:
+ *	Poll implemention.
   	     ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3784: FILE: kernel/logdev/logdev_ringbuf.c:240:
+logdev_poll(struct file *filp, poll_table *wait)
                          ^^^^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3786: FILE: kernel/logdev/logdev_ringbuf.c:242:
+	struct logdev_dev *dev = (struct logdev_dev*)filp->private_data;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3790: FILE: kernel/logdev/logdev_ringbuf.c:246:
+#if 0

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3792: FILE: kernel/logdev/logdev_ringbuf.c:248:
+		poll_wait(filp, &app->read_wait, wait);
 		          ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3801: FILE: kernel/logdev/logdev_ringbuf.c:257:
+static struct file_operations logdev_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3813: FILE: kernel/logdev/logdev_ringbuf.c:269:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3845: FILE: kernel/logdev/logdev_ringbuf.c:301:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3849: FILE: kernel/logdev/logdev_ringbuf.c:305:
+	for (p = (void *)1; p && l < *pos; p = s_next(m,p,&l))
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3849: FILE: kernel/logdev/logdev_ringbuf.c:305:
+	for (p = (void *)1; p && l < *pos; p = s_next(m,p,&l))
 	                                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#3849: FILE: kernel/logdev/logdev_ringbuf.c:305:
+	for (p = (void *)1; p && l < *pos; p = s_next(m,p,&l))
 	                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3859: FILE: kernel/logdev/logdev_ringbuf.c:315:
+	struct logdev_dev *dev = m->private;
+	spin_unlock(&dev->lock);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3874: FILE: kernel/logdev/logdev_ringbuf.c:330:
+		seq_printf(m,"Logdev:\n");
 		            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#3874: FILE: kernel/logdev/logdev_ringbuf.c:330:
+		seq_printf(m,"Logdev:\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3875: FILE: kernel/logdev/logdev_ringbuf.c:331:
+		seq_printf(m,"\tlen:\t%d\n",dev->len);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3875: FILE: kernel/logdev/logdev_ringbuf.c:331:
+		seq_printf(m,"\tlen:\t%d\n",dev->len);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3876: FILE: kernel/logdev/logdev_ringbuf.c:332:
+		seq_printf(m,"\tsize:\t%d\n",dev->size);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3876: FILE: kernel/logdev/logdev_ringbuf.c:332:
+		seq_printf(m,"\tsize:\t%d\n",dev->size);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3877: FILE: kernel/logdev/logdev_ringbuf.c:333:
+		seq_printf(m,"\tstart:\t%d\n",dev->start);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3877: FILE: kernel/logdev/logdev_ringbuf.c:333:
+		seq_printf(m,"\tstart:\t%d\n",dev->start);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3878: FILE: kernel/logdev/logdev_ringbuf.c:334:
+		seq_printf(m,"\tend:\t%d\n",dev->end);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3878: FILE: kernel/logdev/logdev_ringbuf.c:334:
+		seq_printf(m,"\tend:\t%d\n",dev->end);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3879: FILE: kernel/logdev/logdev_ringbuf.c:335:
+		seq_printf(m,"\tcorrupted:%d\n",dev->corrupted);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3879: FILE: kernel/logdev/logdev_ringbuf.c:335:
+		seq_printf(m,"\tcorrupted:%d\n",dev->corrupted);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3880: FILE: kernel/logdev/logdev_ringbuf.c:336:
+		seq_printf(m,"\n\tEntries:\n");
 		            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#3880: FILE: kernel/logdev/logdev_ringbuf.c:336:
+		seq_printf(m,"\n\tEntries:\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3883: FILE: kernel/logdev/logdev_ringbuf.c:339:
+		i = (int)((char*)entry - (char*)dev->entry) /

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#3883: FILE: kernel/logdev/logdev_ringbuf.c:339:
+		i = (int)((char*)entry - (char*)dev->entry) /

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3886: FILE: kernel/logdev/logdev_ringbuf.c:342:
+		seq_printf(m,"\t  %d:\t%8u : %8u\tsize: %lu\n", i,
 		            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3891: FILE: kernel/logdev/logdev_ringbuf.c:347:
+
+

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#3895: FILE: kernel/logdev/logdev_ringbuf.c:351:
+static struct seq_operations logdev_proc_op = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3902: FILE: kernel/logdev/logdev_ringbuf.c:358:
+static int logdev_entries_open (struct inode *inode, struct file *file)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3909: FILE: kernel/logdev/logdev_ringbuf.c:365:
+		struct seq_file *m = file->private_data;
+		m->private = inode->i_private;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3915: FILE: kernel/logdev/logdev_ringbuf.c:371:
+static struct file_operations logdev_entries_fops = {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3942: FILE: kernel/logdev/logdev_ringbuf.c:398:
+			logdev_malloc(sizeof(struct logdev_entry)*dev->len);
 			                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3946: FILE: kernel/logdev/logdev_ringbuf.c:402:
+		memset(dev->entry,0,sizeof(*dev->entry)*dev->len);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3946: FILE: kernel/logdev/logdev_ringbuf.c:402:
+		memset(dev->entry,0,sizeof(*dev->entry)*dev->len);
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3946: FILE: kernel/logdev/logdev_ringbuf.c:402:
+		memset(dev->entry,0,sizeof(*dev->entry)*dev->len);
 		                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3948: FILE: kernel/logdev/logdev_ringbuf.c:404:
+		for (i=0,entry=dev->entry; i<dev->len; i++,entry++) {
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3948: FILE: kernel/logdev/logdev_ringbuf.c:404:
+		for (i=0,entry=dev->entry; i<dev->len; i++,entry++) {
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3948: FILE: kernel/logdev/logdev_ringbuf.c:404:
+		for (i=0,entry=dev->entry; i<dev->len; i++,entry++) {
 		              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#3948: FILE: kernel/logdev/logdev_ringbuf.c:404:
+		for (i=0,entry=dev->entry; i<dev->len; i++,entry++) {
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#3948: FILE: kernel/logdev/logdev_ringbuf.c:404:
+		for (i=0,entry=dev->entry; i<dev->len; i++,entry++) {
 		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3972: FILE: kernel/logdev/logdev_ringbuf.c:428:
+		for (i=0, entry=dev->entry; i<dev->len; i++,entry++)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3972: FILE: kernel/logdev/logdev_ringbuf.c:428:
+		for (i=0, entry=dev->entry; i<dev->len; i++,entry++)
 		               ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#3972: FILE: kernel/logdev/logdev_ringbuf.c:428:
+		for (i=0, entry=dev->entry; i<dev->len; i++,entry++)
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#3972: FILE: kernel/logdev/logdev_ringbuf.c:428:
+		for (i=0, entry=dev->entry; i<dev->len; i++,entry++)
 		                                           ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3998: FILE: kernel/logdev/logdev_ringbuf.c:454:
+	for_each_present_cpu(cpu) {
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4016: FILE: kernel/logdev/logdev_ringbuf.c:472:
+			sprintf(buf,"%d",cpu);
 			           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4016: FILE: kernel/logdev/logdev_ringbuf.c:472:
+			sprintf(buf,"%d",cpu);
 			                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4032: FILE: kernel/logdev/logdev_ringbuf.h:1:
+#ifndef __LINUX_LOGDEV_RINGBUF_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4056: FILE: kernel/logdev/logdev_ringbuf.h:25:
+#define get_logdev_priv(cpu) &per_cpu(logdev_dev_priv, cpu)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4058: FILE: kernel/logdev/logdev_ringbuf.h:27:
+#define LOGDEV_ENTRY_SIZE(e) ((((e)->tail - (e)->head)) & (PAGE_SIZE-1))
                                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#4058: FILE: kernel/logdev/logdev_ringbuf.h:27:
+#define LOGDEV_ENTRY_SIZE(e) ((((e)->tail - (e)->head)) & (PAGE_SIZE-1))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4059: FILE: kernel/logdev/logdev_ringbuf.h:28:
+#define LOGDEV_ENTRY_FREE(e) ((PAGE_SIZE-1) - LOGDEV_ENTRY_SIZE(e))
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4060: FILE: kernel/logdev/logdev_ringbuf.h:29:
+#define LOGDEV_ENTRY_ADD(e,x) ((e) = ((e) + x) & (PAGE_SIZE-1))
                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4060: FILE: kernel/logdev/logdev_ringbuf.h:29:
+#define LOGDEV_ENTRY_ADD(e,x) ((e) = ((e) + x) & (PAGE_SIZE-1))
                                                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#4060: FILE: kernel/logdev/logdev_ringbuf.h:29:
+#define LOGDEV_ENTRY_ADD(e,x) ((e) = ((e) + x) & (PAGE_SIZE-1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#4060: FILE: kernel/logdev/logdev_ringbuf.h:29:
+#define LOGDEV_ENTRY_ADD(e,x) ((e) = ((e) + x) & (PAGE_SIZE-1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4061: FILE: kernel/logdev/logdev_ringbuf.h:30:
+#define LOGDEV_ENTRY_INC(e) LOGDEV_ENTRY_ADD(e,1)
                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4062: FILE: kernel/logdev/logdev_ringbuf.h:31:
+#define LOGDEV_ENTRY_MAX (PAGE_SIZE-1)
                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4072: FILE: kernel/logdev/logdev_ringbuf.h:41:
+		printk("logdev_copy_from_dev: size < 0 ???\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4087: FILE: kernel/logdev/logdev_ringbuf.h:56:
+		if (copy > (used=LOGDEV_ENTRY_SIZE(entry)))
 		                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#4087: FILE: kernel/logdev/logdev_ringbuf.h:56:
+		if (copy > (used=LOGDEV_ENTRY_SIZE(entry)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4089: FILE: kernel/logdev/logdev_ringbuf.h:58:
+		if (entry->head+copy > PAGE_SIZE)
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4091: FILE: kernel/logdev/logdev_ringbuf.h:60:
+		memcpy(buf,entry->dat+entry->head,copy);
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4091: FILE: kernel/logdev/logdev_ringbuf.h:60:
+		memcpy(buf,entry->dat+entry->head,copy);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4091: FILE: kernel/logdev/logdev_ringbuf.h:60:
+		memcpy(buf,entry->dat+entry->head,copy);
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4092: FILE: kernel/logdev/logdev_ringbuf.h:61:
+		LOGDEV_ENTRY_ADD(entry->head,copy);
 		                            ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4098: FILE: kernel/logdev/logdev_ringbuf.h:67:
+
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4115: FILE: kernel/logdev/logdev_ringbuf.h:84:
+		logdev_copy_from_dev(ldev,(char*)&hdr,sizeof(hdr));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4115: FILE: kernel/logdev/logdev_ringbuf.h:84:
+		logdev_copy_from_dev(ldev,(char*)&hdr,sizeof(hdr));
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4115: FILE: kernel/logdev/logdev_ringbuf.h:84:
+		logdev_copy_from_dev(ldev,(char*)&hdr,sizeof(hdr));
 		                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#4128: FILE: kernel/logdev/logdev_ringbuf.h:97:
+			int count = hdr.size - size;
+			if (count > LOGDEV_ENTRY_SIZE(entry))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4132: FILE: kernel/logdev/logdev_ringbuf.h:101:
+			LOGDEV_ENTRY_ADD(entry->head,count);
 			                            ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4135: FILE: kernel/logdev/logdev_ringbuf.h:104:
+				entry->head = entry->tail = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4145: FILE: kernel/logdev/logdev_ringbuf.h:114:
+	entry->head = entry->tail = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4146: FILE: kernel/logdev/logdev_ringbuf.h:115:
+	dev->start = (dev->start+1) % dev->len;
 	                        ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#4148: FILE: kernel/logdev/logdev_ringbuf.h:117:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#4161: FILE: kernel/logdev/logdev_ringbuf.h:130:
+		int free;
+		if (LOGDEV_ENTRY_SIZE(entry) == LOGDEV_ENTRY_MAX) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4162: FILE: kernel/logdev/logdev_ringbuf.h:131:
+			dev->end = (dev->end+1) % dev->len;
 			                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4167: FILE: kernel/logdev/logdev_ringbuf.h:136:
+			if (dev->end == dev->start) {
+				move_start_to_next_entry(ldev);
+			}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4172: FILE: kernel/logdev/logdev_ringbuf.h:141:
+		if (copy > (free=LOGDEV_ENTRY_FREE(entry)))
 		                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#4172: FILE: kernel/logdev/logdev_ringbuf.h:141:
+		if (copy > (free=LOGDEV_ENTRY_FREE(entry)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4174: FILE: kernel/logdev/logdev_ringbuf.h:143:
+		if (entry->tail+copy > PAGE_SIZE)
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4176: FILE: kernel/logdev/logdev_ringbuf.h:145:
+		memcpy(entry->dat+entry->tail,buf,copy);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4176: FILE: kernel/logdev/logdev_ringbuf.h:145:
+		memcpy(entry->dat+entry->tail,buf,copy);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4176: FILE: kernel/logdev/logdev_ringbuf.h:145:
+		memcpy(entry->dat+entry->tail,buf,copy);
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4177: FILE: kernel/logdev/logdev_ringbuf.h:146:
+		LOGDEV_ENTRY_ADD(entry->tail,copy);
 		                            ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4183: FILE: kernel/logdev/logdev_ringbuf.h:152:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4187: FILE: kernel/logdev/logdev_ringbuf.h:156:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4218: FILE: include/asm-i386/logdev_marker.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4226: FILE: include/asm-i386/logdev_marker.h:9:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4280: FILE: include/asm-i386/logdev_marker.h:63:
+			printk("unknown reg type %d\n", reg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4287: FILE: include/asm-i386/logdev_marker.h:70:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4322: FILE: include/asm-i386/logdev_marker.h:105:
+		extern void __logdev_caller__ ## label(void);	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4332: FILE: include/asm-i386/logdev_marker.h:115:
+		extern void __logdev_caller__ ## label(typeof(arg1));	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#4332: FILE: include/asm-i386/logdev_marker.h:115:
+		extern void __logdev_caller__ ## label(typeof(arg1));	\

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4345: FILE: include/asm-i386/logdev_marker.h:128:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#4345: FILE: include/asm-i386/logdev_marker.h:128:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg2)' should also have an identifier name
#4345: FILE: include/asm-i386/logdev_marker.h:128:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4361: FILE: include/asm-i386/logdev_marker.h:144:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#4361: FILE: include/asm-i386/logdev_marker.h:144:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg2)' should also have an identifier name
#4361: FILE: include/asm-i386/logdev_marker.h:144:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg3)' should also have an identifier name
#4361: FILE: include/asm-i386/logdev_marker.h:144:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4380: FILE: include/asm-i386/logdev_marker.h:163:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#4380: FILE: include/asm-i386/logdev_marker.h:163:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg2)' should also have an identifier name
#4380: FILE: include/asm-i386/logdev_marker.h:163:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg3)' should also have an identifier name
#4380: FILE: include/asm-i386/logdev_marker.h:163:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg4)' should also have an identifier name
#4380: FILE: include/asm-i386/logdev_marker.h:163:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4405: FILE: include/linux/logdev_marker.h:1:
+/*

ERROR:SPACING: space required before the open parenthesis '('
#4432: FILE: include/linux/logdev_marker.h:28:
+	} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#4437: FILE: include/linux/logdev_marker.h:33:
+	} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4440: FILE: include/linux/logdev_marker.h:36:
+#define LD_MARK1(label,arg1)		LD_DOCALL(label,arg1)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4440: FILE: include/linux/logdev_marker.h:36:
+#define LD_MARK1(label,arg1)		LD_DOCALL(label,arg1)
                             		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4441: FILE: include/linux/logdev_marker.h:37:
+#define LD_MARK2(label,arg1,arg2)	LD_DOCALL(label,arg1,arg2)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4441: FILE: include/linux/logdev_marker.h:37:
+#define LD_MARK2(label,arg1,arg2)	LD_DOCALL(label,arg1,arg2)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4441: FILE: include/linux/logdev_marker.h:37:
+#define LD_MARK2(label,arg1,arg2)	LD_DOCALL(label,arg1,arg2)
                                  	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4441: FILE: include/linux/logdev_marker.h:37:
+#define LD_MARK2(label,arg1,arg2)	LD_DOCALL(label,arg1,arg2)
                                  	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4442: FILE: include/linux/logdev_marker.h:38:
+#define LD_MARK3(label,arg1,arg2,arg3)	LD_DOCALL(label,arg1,arg2,arg3)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4442: FILE: include/linux/logdev_marker.h:38:
+#define LD_MARK3(label,arg1,arg2,arg3)	LD_DOCALL(label,arg1,arg2,arg3)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4442: FILE: include/linux/logdev_marker.h:38:
+#define LD_MARK3(label,arg1,arg2,arg3)	LD_DOCALL(label,arg1,arg2,arg3)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4442: FILE: include/linux/logdev_marker.h:38:
+#define LD_MARK3(label,arg1,arg2,arg3)	LD_DOCALL(label,arg1,arg2,arg3)
                                       	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4442: FILE: include/linux/logdev_marker.h:38:
+#define LD_MARK3(label,arg1,arg2,arg3)	LD_DOCALL(label,arg1,arg2,arg3)
                                       	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4442: FILE: include/linux/logdev_marker.h:38:
+#define LD_MARK3(label,arg1,arg2,arg3)	LD_DOCALL(label,arg1,arg2,arg3)
                                       	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4443: FILE: include/linux/logdev_marker.h:39:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4443: FILE: include/linux/logdev_marker.h:39:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4443: FILE: include/linux/logdev_marker.h:39:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4443: FILE: include/linux/logdev_marker.h:39:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4) \
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4444: FILE: include/linux/logdev_marker.h:40:
+		LD_DOCALL(label,arg1,arg2,arg3,arg4)
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4444: FILE: include/linux/logdev_marker.h:40:
+		LD_DOCALL(label,arg1,arg2,arg3,arg4)
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4444: FILE: include/linux/logdev_marker.h:40:
+		LD_DOCALL(label,arg1,arg2,arg3,arg4)
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4444: FILE: include/linux/logdev_marker.h:40:
+		LD_DOCALL(label,arg1,arg2,arg3,arg4)
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#4448: FILE: include/linux/logdev_marker.h:44:
+#define LD_MARK(label)				do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4449: FILE: include/linux/logdev_marker.h:45:
+#define LD_MARK1(label,arg1)			do { } while(0)
                       ^

ERROR:SPACING: space required before the open parenthesis '('
#4449: FILE: include/linux/logdev_marker.h:45:
+#define LD_MARK1(label,arg1)			do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4450: FILE: include/linux/logdev_marker.h:46:
+#define LD_MARK2(label,arg1,arg2)		do { } while(0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4450: FILE: include/linux/logdev_marker.h:46:
+#define LD_MARK2(label,arg1,arg2)		do { } while(0)
                            ^

ERROR:SPACING: space required before the open parenthesis '('
#4450: FILE: include/linux/logdev_marker.h:46:
+#define LD_MARK2(label,arg1,arg2)		do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4451: FILE: include/linux/logdev_marker.h:47:
+#define LD_MARK3(label,arg1,arg2,arg3)		do { } while(0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4451: FILE: include/linux/logdev_marker.h:47:
+#define LD_MARK3(label,arg1,arg2,arg3)		do { } while(0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4451: FILE: include/linux/logdev_marker.h:47:
+#define LD_MARK3(label,arg1,arg2,arg3)		do { } while(0)
                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#4451: FILE: include/linux/logdev_marker.h:47:
+#define LD_MARK3(label,arg1,arg2,arg3)		do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4452: FILE: include/linux/logdev_marker.h:48:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4)	do { } while(0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4452: FILE: include/linux/logdev_marker.h:48:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4)	do { } while(0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4452: FILE: include/linux/logdev_marker.h:48:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4)	do { } while(0)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4452: FILE: include/linux/logdev_marker.h:48:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4)	do { } while(0)
                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#4452: FILE: include/linux/logdev_marker.h:48:
+#define LD_MARK4(label,arg1,arg2,arg3,arg4)	do { } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4456: FILE: include/linux/logdev_marker.h:52:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4461: FILE: include/linux/logdev_marker.h:57:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4521: FILE: kernel/logdev/logdev_marker.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4538: FILE: kernel/logdev/logdev_marker.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4539: FILE: kernel/logdev/logdev_marker.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#4556: FILE: kernel/logdev/logdev_marker.c:36:
+#include <asm/atomic.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#4563: FILE: kernel/logdev/logdev_marker.c:43:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4564: FILE: kernel/logdev/logdev_marker.c:44:
+#  define DPRINTK(x...) printk(x)

ERROR:SPACING: space required before the open parenthesis '('
#4566: FILE: kernel/logdev/logdev_marker.c:46:
+#  define DPRINTK(x...) do { } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4614: FILE: kernel/logdev/logdev_marker.c:94:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4624: FILE: kernel/logdev/logdev_marker.c:104:
+	for (i=0; i < p->args; i++)
 	      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4644: FILE: kernel/logdev/logdev_marker.c:124:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4648: FILE: kernel/logdev/logdev_marker.c:128:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4663: FILE: kernel/logdev/logdev_marker.c:143:
+		list_for_each_entry(probe, &logdev_probes, list) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4674: FILE: kernel/logdev/logdev_marker.c:154:
+				printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#4702: FILE: kernel/logdev/logdev_marker.c:182:
+static int logdev_mark_ioctl(struct inode *inode, struct file *filp,
                                                                ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4775: FILE: kernel/logdev/logdev_marker.c:255:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4829: FILE: kernel/logdev/logdev_marker.c:309:
+	char namebuf[KSYM_NAME_LEN+1];
 	                          ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4838: FILE: kernel/logdev/logdev_marker.c:318:
+		   (void*)lm->address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4844: FILE: kernel/logdev/logdev_marker.c:324:
+			seq_printf(m, "  (%s+%#lx/%#lx [%s])", sym, offset,
+				size, modname);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#4848: FILE: kernel/logdev/logdev_marker.c:328:
+	seq_printf(m, "\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4850: FILE: kernel/logdev/logdev_marker.c:330:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4851: FILE: kernel/logdev/logdev_marker.c:331:
+	seq_printf(m, "\tfunc address:\t%p", (void*)lm->func.func0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4856: FILE: kernel/logdev/logdev_marker.c:336:
+		int strsz = sizeof(STR(LD_CALLER_NAME))-1;
 		                                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#4858: FILE: kernel/logdev/logdev_marker.c:338:
+		if (strncmp(STR(LD_CALLER_NAME), sym, strsz)==0)
 		                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4863: FILE: kernel/logdev/logdev_marker.c:343:
+			seq_printf(m, "  (%s+%#lx/%#lx [%s])", sym, offset,
+				size, modname);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#4867: FILE: kernel/logdev/logdev_marker.c:347:
+	seq_printf(m, "\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4869: FILE: kernel/logdev/logdev_marker.c:349:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4871: FILE: kernel/logdev/logdev_marker.c:351:
+	for (i=0; i < lm->args; i++) {
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4875: FILE: kernel/logdev/logdev_marker.c:355:
+	seq_printf(m,"\n");
 	            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#4875: FILE: kernel/logdev/logdev_marker.c:355:
+	seq_printf(m,"\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#4879: FILE: kernel/logdev/logdev_marker.c:359:
+static struct seq_operations logdev_seq_op = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#4888: FILE: kernel/logdev/logdev_marker.c:368:
+static int logdev_mark_open (struct inode *inode, struct file *filp)
                                                                ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4888: FILE: kernel/logdev/logdev_marker.c:368:
+static int logdev_mark_open (struct inode *inode, struct file *filp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#4892: FILE: kernel/logdev/logdev_marker.c:372:
+	ret = seq_open(filp, &logdev_seq_op);
 	               ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#4895: FILE: kernel/logdev/logdev_marker.c:375:
+		struct seq_file *m = filp->private_data;
+		m->private = inode->i_private;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4901: FILE: kernel/logdev/logdev_marker.c:381:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4902: FILE: kernel/logdev/logdev_marker.c:382:
+static struct file_operations logdev_mark_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4910: FILE: kernel/logdev/logdev_marker.c:390:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#4911: FILE: kernel/logdev/logdev_marker.c:391:
+static int logdev_open_generic(struct inode *inode, struct file *filp)
                                                                  ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4917: FILE: kernel/logdev/logdev_marker.c:397:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#4918: FILE: kernel/logdev/logdev_marker.c:398:
+static ssize_t logdev_debug_mark_read(struct file *filp, char __user *ubuf,
                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#4929: FILE: kernel/logdev/logdev_marker.c:409:
+static ssize_t logdev_debug_mark_write(struct file *filp,
                                                     ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#4939: FILE: kernel/logdev/logdev_marker.c:419:
+	if(copy_from_user(&buf, ubuf, cnt))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#4944: FILE: kernel/logdev/logdev_marker.c:424:
+	val = simple_strtoul(buf, NULL, 10) ? 1 : 0;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4956: FILE: kernel/logdev/logdev_marker.c:436:
+static struct file_operations logdev_debug_mark_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4964: FILE: kernel/logdev/logdev_marker.c:444:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4965: FILE: kernel/logdev/logdev_marker.c:445:
+extern unsigned long __logdev_marker_start;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4966: FILE: kernel/logdev/logdev_marker.c:446:
+extern unsigned long __logdev_marker_end;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4986: FILE: kernel/logdev/logdev_marker.c:466:
+			printk(KERN_WARNING "logdev_marker: ran out of memory!\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#4986: FILE: kernel/logdev/logdev_marker.c:466:
+		if (!probe) {
+			printk(KERN_WARNING "logdev_marker: ran out of memory!\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4993: FILE: kernel/logdev/logdev_marker.c:473:
+		probe->label = (char*)*p++;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4996: FILE: kernel/logdev/logdev_marker.c:476:
+			printk(KERN_WARNING "logdev_marker: corrupted mark section\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5000: FILE: kernel/logdev/logdev_marker.c:480:
+		for (i=0; i < probe->args; i++) {
 		      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5006: FILE: kernel/logdev/logdev_marker.c:486:
+			printk(KERN_WARNING "logdev_marker: unknown reg\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#5015: FILE: kernel/logdev/logdev_marker.c:495:
+			    (void*)LOGDEV_SW_MARKER_ENABLED,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5068: FILE: kernel/logdev/logdev_tracers.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5085: FILE: kernel/logdev/logdev_tracers.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5086: FILE: kernel/logdev/logdev_tracers.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5103: FILE: kernel/logdev/logdev_tracers.c:36:
+};
+/* ---------------- end here for user space headers -------------------- */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5116: FILE: kernel/logdev/logdev_tracers.c:49:
+	usec_rem = do_div(t, 1000000000)/1000;
 	                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5119: FILE: kernel/logdev/logdev_tracers.c:52:
+	printk("[%5lu.%06lu] cpu:%d ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5145: FILE: kernel/logdev/logdev_tracers.c:78:
+		printk("Unknown marker callback id %x\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5150: FILE: kernel/logdev/logdev_tracers.c:83:
+}
+/* ------------------ end cut for user space printing ------------------- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5152: FILE: kernel/logdev/logdev_tracers.c:85:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5159: FILE: kernel/logdev/logdev_tracers.c:92:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5162: FILE: kernel/logdev/logdev_tracers.c:95:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5175: FILE: include/asm-x86_64/logdev_marker.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5183: FILE: include/asm-x86_64/logdev_marker.h:9:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5261: FILE: include/asm-x86_64/logdev_marker.h:87:
+			printk("unknown reg type %d\n", reg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5268: FILE: include/asm-x86_64/logdev_marker.h:94:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5323: FILE: include/asm-x86_64/logdev_marker.h:149:
+		extern void __logdev_caller__ ## label(void);	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5333: FILE: include/asm-x86_64/logdev_marker.h:159:
+		extern void __logdev_caller__ ## label(typeof(arg1));	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#5333: FILE: include/asm-x86_64/logdev_marker.h:159:
+		extern void __logdev_caller__ ## label(typeof(arg1));	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5346: FILE: include/asm-x86_64/logdev_marker.h:172:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#5346: FILE: include/asm-x86_64/logdev_marker.h:172:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg2)' should also have an identifier name
#5346: FILE: include/asm-x86_64/logdev_marker.h:172:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5363: FILE: include/asm-x86_64/logdev_marker.h:189:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#5363: FILE: include/asm-x86_64/logdev_marker.h:189:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg2)' should also have an identifier name
#5363: FILE: include/asm-x86_64/logdev_marker.h:189:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg3)' should also have an identifier name
#5363: FILE: include/asm-x86_64/logdev_marker.h:189:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5384: FILE: include/asm-x86_64/logdev_marker.h:210:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg1)' should also have an identifier name
#5384: FILE: include/asm-x86_64/logdev_marker.h:210:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg2)' should also have an identifier name
#5384: FILE: include/asm-x86_64/logdev_marker.h:210:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg3)' should also have an identifier name
#5384: FILE: include/asm-x86_64/logdev_marker.h:210:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

WARNING:FUNCTION_ARGUMENTS: function definition argument 'typeof(arg4)' should also have an identifier name
#5384: FILE: include/asm-x86_64/logdev_marker.h:210:
+		extern void __logdev_caller__ ## label(typeof(arg1),	\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#5491: FILE: kernel/logdev/logdev_tracers.c:41:
+#define LOGMARK_E_ID(x) ((LOGMARK_EXAMPLE_ID << 16)|(x))
                                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5524: FILE: kernel/logdev/logdev_tracers.c:95:
+	printk("%s:%d(%d:%d:%d) -->> ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5531: FILE: kernel/logdev/logdev_tracers.c:102:
+	printk("%s:%d(%d:%d:%d)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5563: FILE: kernel/logdev/logdev_tracers.c:147:
+	/*
+	if ((strncmp(prev->comm, "sched_football", 14) != 0) &&

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5674: FILE: kernel/logdev/logdev_tracers.c:187:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5684: FILE: kernel/logdev/logdev_tracers.c:197:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000405194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 273 errors, 242 warnings, 123 checks, 5326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000405194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
