WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#60: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: include/scsi/osd_initiator.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#97: FILE: include/scsi/osd_initiator.h:33:
+	unsigned def_timeout;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_dev *' should also have an identifier name
#100: FILE: include/scsi/osd_initiator.h:36:
+void osd_dev_init(struct osd_dev *, struct scsi_device *scsi_dev);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_dev *' should also have an identifier name
#101: FILE: include/scsi/osd_initiator.h:37:
+void osd_dev_fini(struct osd_dev *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: include/scsi/osd_initiator.h:52:
+		unsigned alloc_size; /* 0 here means not allocated by us */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#117: FILE: include/scsi/osd_initiator.h:53:
+		unsigned total_bytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#129: FILE: include/scsi/osd_initiator.h:65:
+	unsigned timeout;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: include/scsi/osd_initiator.h:66:
+	unsigned retries;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_dev *' should also have an identifier name
#182: FILE: include/scsi/osd_initiator.h:118:
+struct osd_request *osd_start_request(struct osd_dev *, gfp_t gfp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: include/scsi/osd_initiator.h:142:
+int osd_finalize_request(struct osd_request *or,
+	u8 options, const void *cap, const u8 *cap_key);

WARNING:TYPO_SPELLING: 'calles' may be misspelled - perhaps 'calls'?
#225: FILE: include/scsi/osd_initiator.h:161:
+ * Optionally calles @done with @private as parameter. or->async_error has the
               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: include/scsi/osd_initiator.h:165:
+int osd_execute_request_async(struct osd_request *or,
+	osd_req_done_fn *done, void *private);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#249: FILE: include/scsi/osd_initiator.h:185:
+void osd_req_set_master_seed_xchg(struct osd_request *, ...);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#250: FILE: include/scsi/osd_initiator.h:186:
+void osd_req_set_master_key(struct osd_request *, ...);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#252: FILE: include/scsi/osd_initiator.h:188:
+void osd_req_format(struct osd_request *, u64 tot_capacity);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#259: FILE: include/scsi/osd_initiator.h:195:
+int osd_req_list_dev_partitions(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: include/scsi/osd_initiator.h:196:
+int osd_req_list_dev_partitions(struct osd_request *,
+	osd_id initial_id, struct osd_obj_id_list *list, unsigned nelem);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#260: FILE: include/scsi/osd_initiator.h:196:
+	osd_id initial_id, struct osd_obj_id_list *list, unsigned nelem);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#262: FILE: include/scsi/osd_initiator.h:198:
+void osd_req_flush_obsd(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: include/scsi/osd_initiator.h:199:
+void osd_req_flush_obsd(struct osd_request *,
+	enum osd_options_flush_scope_values);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#265: FILE: include/scsi/osd_initiator.h:201:
+void osd_req_perform_scsi_command(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: include/scsi/osd_initiator.h:202:
+void osd_req_perform_scsi_command(struct osd_request *,
+	const u8 *cdb, ...);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#267: FILE: include/scsi/osd_initiator.h:203:
+void osd_req_task_management(struct osd_request *, ...);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#272: FILE: include/scsi/osd_initiator.h:208:
+void osd_req_create_partition(struct osd_request *, osd_id partition);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#273: FILE: include/scsi/osd_initiator.h:209:
+void osd_req_remove_partition(struct osd_request *, osd_id partition);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#275: FILE: include/scsi/osd_initiator.h:211:
+void osd_req_set_partition_key(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: include/scsi/osd_initiator.h:212:
+void osd_req_set_partition_key(struct osd_request *,
+	osd_id partition, u8 new_key_id[OSD_CRYPTO_KEYID_SIZE],

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#284: FILE: include/scsi/osd_initiator.h:220:
+int osd_req_list_partition_collections(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: include/scsi/osd_initiator.h:221:
+int osd_req_list_partition_collections(struct osd_request *,
+	osd_id partition, osd_id initial_id, struct osd_obj_id_list *list,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#286: FILE: include/scsi/osd_initiator.h:222:
+	unsigned nelem);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#293: FILE: include/scsi/osd_initiator.h:229:
+int osd_req_list_partition_objects(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: include/scsi/osd_initiator.h:230:
+int osd_req_list_partition_objects(struct osd_request *,
+	osd_id partition, osd_id initial_id, struct osd_obj_id_list *list,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#295: FILE: include/scsi/osd_initiator.h:231:
+	unsigned nelem);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#297: FILE: include/scsi/osd_initiator.h:233:
+void osd_req_flush_partition(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: include/scsi/osd_initiator.h:234:
+void osd_req_flush_partition(struct osd_request *,
+	osd_id partition, enum osd_options_flush_scope_values);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#303: FILE: include/scsi/osd_initiator.h:239:
+void osd_req_create_collection(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#303: FILE: include/scsi/osd_initiator.h:239:
+void osd_req_create_collection(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: include/scsi/osd_initiator.h:240:
+void osd_req_create_collection(struct osd_request *,
+	const struct osd_obj_id *);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#305: FILE: include/scsi/osd_initiator.h:241:
+void osd_req_remove_collection(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#305: FILE: include/scsi/osd_initiator.h:241:
+void osd_req_remove_collection(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/scsi/osd_initiator.h:242:
+void osd_req_remove_collection(struct osd_request *,
+	const struct osd_obj_id *);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#309: FILE: include/scsi/osd_initiator.h:245:
+int osd_req_list_collection_objects(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#309: FILE: include/scsi/osd_initiator.h:245:
+int osd_req_list_collection_objects(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: include/scsi/osd_initiator.h:246:
+int osd_req_list_collection_objects(struct osd_request *,
+	const struct osd_obj_id *, osd_id initial_id,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: include/scsi/osd_initiator.h:247:
+	struct osd_obj_id_list *list, unsigned nelem);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#314: FILE: include/scsi/osd_initiator.h:250:
+void osd_req_query(struct osd_request *, ...);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#316: FILE: include/scsi/osd_initiator.h:252:
+void osd_req_flush_collection(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#316: FILE: include/scsi/osd_initiator.h:252:
+void osd_req_flush_collection(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: include/scsi/osd_initiator.h:253:
+void osd_req_flush_collection(struct osd_request *,
+	const struct osd_obj_id *, enum osd_options_flush_scope_values);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#319: FILE: include/scsi/osd_initiator.h:255:
+void osd_req_get_member_attrs(struct osd_request *, ...);/* V2-only NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#320: FILE: include/scsi/osd_initiator.h:256:
+void osd_req_set_member_attrs(struct osd_request *, ...);/* V2-only NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#325: FILE: include/scsi/osd_initiator.h:261:
+void osd_req_create_object(struct osd_request *, struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_obj_id *' should also have an identifier name
#325: FILE: include/scsi/osd_initiator.h:261:
+void osd_req_create_object(struct osd_request *, struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#326: FILE: include/scsi/osd_initiator.h:262:
+void osd_req_remove_object(struct osd_request *, struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_obj_id *' should also have an identifier name
#326: FILE: include/scsi/osd_initiator.h:262:
+void osd_req_remove_object(struct osd_request *, struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#328: FILE: include/scsi/osd_initiator.h:264:
+void osd_req_write(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#328: FILE: include/scsi/osd_initiator.h:264:
+void osd_req_write(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: include/scsi/osd_initiator.h:265:
+void osd_req_write(struct osd_request *,
+	const struct osd_obj_id *, struct bio *data_out, u64 offset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#330: FILE: include/scsi/osd_initiator.h:266:
+void osd_req_append(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#330: FILE: include/scsi/osd_initiator.h:266:
+void osd_req_append(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: include/scsi/osd_initiator.h:267:
+void osd_req_append(struct osd_request *,
+	const struct osd_obj_id *, struct bio *data_out);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#332: FILE: include/scsi/osd_initiator.h:268:
+void osd_req_create_write(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#332: FILE: include/scsi/osd_initiator.h:268:
+void osd_req_create_write(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: include/scsi/osd_initiator.h:269:
+void osd_req_create_write(struct osd_request *,
+	const struct osd_obj_id *, struct bio *data_out, u64 offset);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#334: FILE: include/scsi/osd_initiator.h:270:
+void osd_req_clear(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#334: FILE: include/scsi/osd_initiator.h:270:
+void osd_req_clear(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: include/scsi/osd_initiator.h:271:
+void osd_req_clear(struct osd_request *,
+	const struct osd_obj_id *, u64 offset, u64 len);/* NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#336: FILE: include/scsi/osd_initiator.h:272:
+void osd_req_punch(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#336: FILE: include/scsi/osd_initiator.h:272:
+void osd_req_punch(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: include/scsi/osd_initiator.h:273:
+void osd_req_punch(struct osd_request *,
+	const struct osd_obj_id *, u64 offset, u64 len);/* V2-only NI */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#339: FILE: include/scsi/osd_initiator.h:275:
+void osd_req_flush_object(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#339: FILE: include/scsi/osd_initiator.h:275:
+void osd_req_flush_object(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: include/scsi/osd_initiator.h:276:
+void osd_req_flush_object(struct osd_request *,
+	const struct osd_obj_id *, enum osd_options_flush_scope_values,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#343: FILE: include/scsi/osd_initiator.h:279:
+void osd_req_read(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#343: FILE: include/scsi/osd_initiator.h:279:
+void osd_req_read(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: include/scsi/osd_initiator.h:280:
+void osd_req_read(struct osd_request *,
+	const struct osd_obj_id *, struct bio *data_in, u64 offset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#351: FILE: include/scsi/osd_initiator.h:287:
+void osd_req_get_attributes(struct osd_request *, const struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#351: FILE: include/scsi/osd_initiator.h:287:
+void osd_req_get_attributes(struct osd_request *, const struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#354: FILE: include/scsi/osd_initiator.h:290:
+void osd_req_set_attributes(struct osd_request *, const struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_obj_id *' should also have an identifier name
#354: FILE: include/scsi/osd_initiator.h:290:
+void osd_req_set_attributes(struct osd_request *, const struct osd_obj_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#367: FILE: include/scsi/osd_initiator.h:303:
+int osd_req_add_set_attr_list(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_attr *' should also have an identifier name
#367: FILE: include/scsi/osd_initiator.h:303:
+int osd_req_add_set_attr_list(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: include/scsi/osd_initiator.h:304:
+int osd_req_add_set_attr_list(struct osd_request *,
+	const struct osd_attr *, unsigned nelem);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#368: FILE: include/scsi/osd_initiator.h:304:
+	const struct osd_attr *, unsigned nelem);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#371: FILE: include/scsi/osd_initiator.h:307:
+int osd_req_add_get_attr_list(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct osd_attr *' should also have an identifier name
#371: FILE: include/scsi/osd_initiator.h:307:
+int osd_req_add_get_attr_list(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: include/scsi/osd_initiator.h:308:
+int osd_req_add_get_attr_list(struct osd_request *,
+	const struct osd_attr *, unsigned nelem);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#372: FILE: include/scsi/osd_initiator.h:308:
+	const struct osd_attr *, unsigned nelem);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#380: FILE: include/scsi/osd_initiator.h:316:
+int osd_req_decode_get_attr_list(struct osd_request *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_attr *' should also have an identifier name
#380: FILE: include/scsi/osd_initiator.h:316:
+int osd_req_decode_get_attr_list(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: include/scsi/osd_initiator.h:317:
+int osd_req_decode_get_attr_list(struct osd_request *,
+	struct osd_attr *, int *nelem, void **iterator);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct osd_request *' should also have an identifier name
#392: FILE: include/scsi/osd_initiator.h:328:
+int osd_req_add_get_attr_page(struct osd_request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: include/scsi/osd_initiator.h:329:
+int osd_req_add_get_attr_page(struct osd_request *,
+	u32 page_id, void *attr_page_data, unsigned max_page_len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#393: FILE: include/scsi/osd_initiator.h:329:
+	u32 page_id, void *attr_page_data, unsigned max_page_len,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#403: FILE: include/scsi/osd_protocol.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_ADDITIONAL_CDB_LENGTH>
#426: FILE: include/scsi/osd_protocol.h:24:
+	OSDv1_ADDITIONAL_CDB_LENGTH = 192,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_TOTAL_CDB_LEN>
#427: FILE: include/scsi/osd_protocol.h:25:
+	OSDv1_TOTAL_CDB_LEN = OSDv1_ADDITIONAL_CDB_LENGTH + 8,

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_CAP_LEN>
#428: FILE: include/scsi/osd_protocol.h:26:
+	OSDv1_CAP_LEN = 80,

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_OFFSET_MIN_SHIFT>
#512: FILE: include/scsi/osd_protocol.h:110:
+	OSDv1_OFFSET_MIN_SHIFT = 8,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#521: FILE: include/scsi/osd_protocol.h:119:
+osd_cdb_offset __osd_encode_offset(u64 offset, unsigned *padding,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: include/scsi/osd_protocol.h:120:
+osd_cdb_offset __osd_encode_offset(u64 offset, unsigned *padding,
+	int min_shift, int max_shift);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#528: FILE: include/scsi/osd_protocol.h:126:
+static inline osd_cdb_offset osd_encode_offset_v1(u64 offset, unsigned *padding)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#545: FILE: include/scsi/osd_protocol.h:143:
+/*32*/^I^I^I__be32 ^I^Ilist_identifier;/* Rarely used */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#579: FILE: include/scsi/osd_protocol.h:177:
+/*62*/			u8		set_attr_val[80-62];
       			  		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#581: FILE: include/scsi/osd_protocol.h:179:
+/*52*/		u8 get_set_attributes_parameters[80-52];
       		                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Name>
#616: FILE: include/scsi/osd_protocol.h:214:
+#define OSD_ACT___(Name, Num) \

CHECK:CAMELCASE: Avoid CamelCase: <Num>
#616: FILE: include/scsi/osd_protocol.h:214:
+#define OSD_ACT___(Name, Num) \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#616: FILE: include/scsi/osd_protocol.h:214:
+#define OSD_ACT___(Name, Num) \
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num), \
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(0x8800 + Num),

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Num' - possible side-effects?
#616: FILE: include/scsi/osd_protocol.h:214:
+#define OSD_ACT___(Name, Num) \
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num), \
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(0x8800 + Num),

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Num' may be better as '(Num)' to avoid precedence issues
#616: FILE: include/scsi/osd_protocol.h:214:
+#define OSD_ACT___(Name, Num) \
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num), \
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(0x8800 + Num),

CHECK:CAMELCASE: Avoid CamelCase: <OSD_ACT_##Name>
#617: FILE: include/scsi/osd_protocol.h:215:
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num), \

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#617: FILE: include/scsi/osd_protocol.h:215:
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num), \

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_ACT_##Name>
#618: FILE: include/scsi/osd_protocol.h:216:
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(0x8800 + Num),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#618: FILE: include/scsi/osd_protocol.h:216:
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(0x8800 + Num),

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#621: FILE: include/scsi/osd_protocol.h:219:
+#define OSD_ACT_V2(Name, Num) \
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num),

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Num' may be better as '(Num)' to avoid precedence issues
#621: FILE: include/scsi/osd_protocol.h:219:
+#define OSD_ACT_V2(Name, Num) \
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#622: FILE: include/scsi/osd_protocol.h:220:
+	OSD_ACT_##Name = __constant_cpu_to_be16(0x8880 + Num),

CHECK:CAMELCASE: Avoid CamelCase: <Num1>
#624: FILE: include/scsi/osd_protocol.h:222:
+#define OSD_ACT_V1_V2(Name, Num1, Num2) \

CHECK:CAMELCASE: Avoid CamelCase: <Num2>
#624: FILE: include/scsi/osd_protocol.h:222:
+#define OSD_ACT_V1_V2(Name, Num1, Num2) \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#624: FILE: include/scsi/osd_protocol.h:222:
+#define OSD_ACT_V1_V2(Name, Num1, Num2) \
+	OSD_ACT_##Name = __constant_cpu_to_be16(Num2), \
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(Num1),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#625: FILE: include/scsi/osd_protocol.h:223:
+	OSD_ACT_##Name = __constant_cpu_to_be16(Num2), \

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#626: FILE: include/scsi/osd_protocol.h:224:
+	OSDv1_ACT_##Name = __constant_cpu_to_be16(Num1),

CHECK:CAMELCASE: Avoid CamelCase: <OSDv1_ATTRIBUTES_ELEM_ALIGN>
#683: FILE: include/scsi/osd_protocol.h:281:
+	OSDv1_ATTRIBUTES_ELEM_ALIGN = 1,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#691: FILE: include/scsi/osd_protocol.h:289:
+static inline unsigned osdv1_attr_list_elem_size(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#691: FILE: include/scsi/osd_protocol.h:289:
+static inline unsigned osdv1_attr_list_elem_size(unsigned len)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#701: FILE: include/scsi/osd_protocol.h:299:
+^IOSD_ATTR_LIST_GET = 0x1, ^I/* descriptors only */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#726: FILE: include/scsi/osd_protocol.h:324:
+static inline unsigned osdv1_list_size(struct osdv1_attributes_list_header *h)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: include/scsi/osd_protocol.h:352:
+static inline bool osd_is_obj_list_done(struct osd_obj_id_list *list,
+	bool *is_changed)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#757: FILE: include/scsi/osd_protocol.h:355:
+	return 0 != list->continuation_id;

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#850: FILE: include/scsi/osd_protocol.h:448:
+/*10*/	u8 audit[30-10];
       	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#851: FILE: include/scsi/osd_protocol.h:449:
+/*30*/	u8 discriminator[42-30];
       	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#854: FILE: include/scsi/osd_protocol.h:452:
+	u8 permissions_bit_mask[54-49];
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#869: FILE: include/scsi/osd_protocol.h:467:
+		u8 object_descriptor[80-56];/*24*/
 		                       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#883: FILE: include/scsi/osd_protocol.h:481:
+ * @bit_mask: ^IUse an ORed list of enum osd_capability_bit_masks values$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#889: FILE: include/scsi/osd_protocol.h:487:
+static inline void osd_sec_set_caps(struct osd_capability_head *cap,
+	u16 bit_mask)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#906: FILE: include/scsi/osd_sec.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#935: FILE: include/scsi/osd_sec.h:30:
+void osd_sec_init_nosec_doall_caps(void *caps,
+	const struct osd_obj_id *obj, bool is_collection, const bool is_v1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#940: FILE: include/scsi/osd_sec.h:35:
+ * with cap_key */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#944: FILE: include/scsi/osd_sec.h:39:
+ * Check for osd_is_sec_alldata() was done prior to calling this. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#957: FILE: include/scsi/osd_types.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208474.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 90 warnings, 48 checks, 914 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000208474.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
