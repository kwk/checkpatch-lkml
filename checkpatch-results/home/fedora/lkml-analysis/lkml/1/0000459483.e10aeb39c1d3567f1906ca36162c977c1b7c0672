WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> >  drivers/i2c/busses/i2c-bfin-twi.c  |  589 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

WARNING:TYPO_SPELLING: 'Abreviations' may be misspelled - perhaps 'Abbreviations'?
#46: 
> I'd prefer i2c-blackfin-gpio and i2c-blackfin-twi. Abreviations tend to
                                                     ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'abreviations' may be misspelled - perhaps 'abbreviations'?
#50: 
There are tons of code using bfin abreviations for
                                  ^^^^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'Etc'
#111: 
> Etc etc, all the options should start with I2C_BLACKFIN.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#225: FILE: drivers/i2c/busses/Kconfig:94:
+config I2C_BLACKFIN_GPIO
+	tristate "Blackfin GPIO based I2C interface"
+	depends on I2C && BLACKFIN && EXPERIMENTAL
+	select I2C_ALGOBIT
+	help
+	  Say Y here if you have an Blackfin BF5xx based
+	  system and are using GPIO lines for an I2C bus.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#256: FILE: drivers/i2c/busses/Kconfig:125:
+config I2C_BLACKFIN_TWI
+	tristate "Blackfin TWI I2C support"
+	depends on I2C && (BF534 || BF536 || BF537)
+	help
+	  This is the TWI I2C device driver for Blackfin 534/536/537.
+	  This driver can also be built as a module.  If so, the module
+	  will be called i2c-bfin-twi.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#280: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:1:
+/****************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:11:
+ *   you are free to modify and/or redistribute it   ^I        *$

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#303: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:24:
+#include <asm/gpio.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#328: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:49:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:59:
+^I.owner ^I= THIS_MODULE,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:60:
+^I.id ^I= I2C_HW_B_HHBF,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:61:
+^I.algo_data ^I= &bit_hhbf_data,$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#346: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:67:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#348: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:69:
+		printk(KERN_ERR "%s: gpio_request GPIO %d failed \n", __func__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#348: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:69:
+		printk(KERN_ERR "%s: gpio_request GPIO %d failed \n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:70:
+		printk(KERN_ERR "%s: gpio_request GPIO %d failed \n", __func__,
+				CONFIG_I2C_BLACKFIN_GPIO_SCL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#354: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:75:
+		printk(KERN_ERR "%s: gpio_request GPIO %d failed \n", __func__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#354: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:75:
+		printk(KERN_ERR "%s: gpio_request GPIO %d failed \n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:76:
+		printk(KERN_ERR "%s: gpio_request GPIO %d failed \n", __func__,
+				CONFIG_I2C_BLACKFIN_GPIO_SDA);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: drivers/i2c/busses/i2c-bfin-gpio.c:80:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#385: FILE: drivers/i2c/busses/i2c-bfin-twi.c:1:
+/****************************************************************

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: drivers/i2c/busses/i2c-bfin-twi.c:8:
+ *   you are free to modify and/or redistribute it   ^I        *$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#421: FILE: drivers/i2c/busses/i2c-bfin-twi.c:37:
+struct bfin_twi_iface
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#422: FILE: drivers/i2c/busses/i2c-bfin-twi.c:38:
+	struct mutex		twi_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#424: FILE: drivers/i2c/busses/i2c-bfin-twi.c:40:
+	spinlock_t		lock;

CHECK:CAMELCASE: Avoid CamelCase: <transPtr>
#427: FILE: drivers/i2c/busses/i2c-bfin-twi.c:43:
+	u8			*transPtr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <readNum>
#428: FILE: drivers/i2c/busses/i2c-bfin-twi.c:44:
+	int			readNum;

CHECK:CAMELCASE: Avoid CamelCase: <writeNum>
#429: FILE: drivers/i2c/busses/i2c-bfin-twi.c:45:
+	int			writeNum;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iface->transPtr
#469: FILE: drivers/i2c/busses/i2c-bfin-twi.c:85:
+			*(iface->transPtr) = bfin_read_TWI_RCV_DATA8();

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#479: FILE: drivers/i2c/busses/i2c-bfin-twi.c:95:
+					iface->readNum = *iface->transPtr+1;
 					                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#531: FILE: drivers/i2c/busses/i2c-bfin-twi.c:147:
+				bfin_write_TWI_MASTER_CTL(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#538: FILE: drivers/i2c/busses/i2c-bfin-twi.c:154:
+				bfin_write_TWI_MASTER_CTL(

ERROR:SPACING: space prohibited after that open parenthesis '('
#541: FILE: drivers/i2c/busses/i2c-bfin-twi.c:157:
+					( iface->readNum << 6));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#598: FILE: drivers/i2c/busses/i2c-bfin-twi.c:214:
+	struct bfin_twi_iface* iface = adap->algo_data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#618: FILE: drivers/i2c/busses/i2c-bfin-twi.c:234:
+			printk(KERN_ERR "i2c-bfin-twi: 10 bits addr \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#618: FILE: drivers/i2c/busses/i2c-bfin-twi.c:234:
+			printk(KERN_ERR "i2c-bfin-twi: 10 bits addr \

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#627: FILE: drivers/i2c/busses/i2c-bfin-twi.c:243:
+		iface->writeNum = iface->readNum = pmsg->len;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#641: FILE: drivers/i2c/busses/i2c-bfin-twi.c:257:
+		if (pmsg->flags & I2C_M_RD)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#643: FILE: drivers/i2c/busses/i2c-bfin-twi.c:259:
+		else {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#654: FILE: drivers/i2c/busses/i2c-bfin-twi.c:270:
+		bfin_write_TWI_INT_STAT(MERR|MCOMP|XMTSERV|RCVSERV);
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#654: FILE: drivers/i2c/busses/i2c-bfin-twi.c:270:
+		bfin_write_TWI_INT_STAT(MERR|MCOMP|XMTSERV|RCVSERV);
 		                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#654: FILE: drivers/i2c/busses/i2c-bfin-twi.c:270:
+		bfin_write_TWI_INT_STAT(MERR|MCOMP|XMTSERV|RCVSERV);
 		                                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#658: FILE: drivers/i2c/busses/i2c-bfin-twi.c:274:
+			((iface->read_write == I2C_SMBUS_READ)?
 			                                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#662: FILE: drivers/i2c/busses/i2c-bfin-twi.c:278:
+		if (pmsg->len > 0 && pmsg->len <= 255)
[...]
+		else if (pmsg->len > 255) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#667: FILE: drivers/i2c/busses/i2c-bfin-twi.c:283:
+		} else

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#676: FILE: drivers/i2c/busses/i2c-bfin-twi.c:292:
+			((CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ>100) ? FAST : 0));
 			                                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#700: FILE: drivers/i2c/busses/i2c-bfin-twi.c:316:
+			u8 command, int size, union i2c_smbus_data * data)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#702: FILE: drivers/i2c/busses/i2c-bfin-twi.c:318:
+	struct bfin_twi_iface* iface = adap->algo_data;

ERROR:SPACING: space required before the open parenthesis '('
#710: FILE: drivers/i2c/busses/i2c-bfin-twi.c:326:
+	while(bfin_read_TWI_MASTER_STAT() & BUSBUSY) {

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#719: FILE: drivers/i2c/busses/i2c-bfin-twi.c:335:
+	/* Prepare datas & select mode */
 	           ^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#726: FILE: drivers/i2c/busses/i2c-bfin-twi.c:342:
+		if (data == NULL)
[...]
+		else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#726: FILE: drivers/i2c/busses/i2c-bfin-twi.c:342:
+		if (data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#728: FILE: drivers/i2c/busses/i2c-bfin-twi.c:344:
+		else {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#768: FILE: drivers/i2c/busses/i2c-bfin-twi.c:384:
+			iface->writeNum = data->block[0]+1;
 			                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#791: FILE: drivers/i2c/busses/i2c-bfin-twi.c:407:
+	bfin_write_TWI_INT_STAT(MERR|MCOMP|XMTSERV|RCVSERV);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#791: FILE: drivers/i2c/busses/i2c-bfin-twi.c:407:
+	bfin_write_TWI_INT_STAT(MERR|MCOMP|XMTSERV|RCVSERV);
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#791: FILE: drivers/i2c/busses/i2c-bfin-twi.c:407:
+	bfin_write_TWI_INT_STAT(MERR|MCOMP|XMTSERV|RCVSERV);
 	                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#808: FILE: drivers/i2c/busses/i2c-bfin-twi.c:424:
+		if (iface->writeNum + 1 <= 255)
[...]
+		else {
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#809: FILE: drivers/i2c/busses/i2c-bfin-twi.c:425:
+			bfin_write_TWI_MASTER_CTL((iface->writeNum+1) << 6);
 			                                          ^

CHECK:BRACES: Unbalanced braces around else statement
#810: FILE: drivers/i2c/busses/i2c-bfin-twi.c:426:
+		else {

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#816: FILE: drivers/i2c/busses/i2c-bfin-twi.c:432:
+			((CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ>100) ? FAST : 0));
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#824: FILE: drivers/i2c/busses/i2c-bfin-twi.c:440:
+			bfin_write_TWI_MASTER_CTL((iface->writeNum+1) << 6);
 			                                          ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#829: FILE: drivers/i2c/busses/i2c-bfin-twi.c:445:
+			((CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ>100) ? FAST : 0));
 			                                 ^

CHECK:BRACES: Unbalanced braces around else statement
#844: FILE: drivers/i2c/busses/i2c-bfin-twi.c:460:
+					else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#857: FILE: drivers/i2c/busses/i2c-bfin-twi.c:473:
+				if (iface->readNum > 0
+					&& iface->readNum <= 255)

ERROR:SPACING: space prohibited after that open parenthesis '('
#861: FILE: drivers/i2c/busses/i2c-bfin-twi.c:477:
+					bfin_write_TWI_MASTER_CTL( 0xff << 6 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#861: FILE: drivers/i2c/busses/i2c-bfin-twi.c:477:
+					bfin_write_TWI_MASTER_CTL( 0xff << 6 );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: drivers/i2c/busses/i2c-bfin-twi.c:519:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around twi_iface.twi_lock
#915: FILE: drivers/i2c/busses/i2c-bfin-twi.c:531:
+	mutex_init(&(twi_iface.twi_lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: drivers/i2c/busses/i2c-bfin-twi.c:550:
+	rc = request_irq(twi_iface.irq, bfin_twi_interrupt_entry,
+		SA_INTERRUPT, "i2c-bfin-twi", &twi_iface);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#936: FILE: drivers/i2c/busses/i2c-bfin-twi.c:552:
+		printk(KERN_ERR "i2c-bfin-twi: can't get IRQ %d !\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: drivers/i2c/busses/i2c-bfin-twi.c:553:
+		printk(KERN_ERR "i2c-bfin-twi: can't get IRQ %d !\n",
+			twi_iface.irq);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#946: FILE: drivers/i2c/busses/i2c-bfin-twi.c:562:
+		bfin_write_TWI_CLKDIV((( 5*1024 / 400 ) << 8) |
 		                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#946: FILE: drivers/i2c/busses/i2c-bfin-twi.c:562:
+		bfin_write_TWI_CLKDIV((( 5*1024 / 400 ) << 8) |

ERROR:SPACING: space prohibited before that close parenthesis ')'
#946: FILE: drivers/i2c/busses/i2c-bfin-twi.c:562:
+		bfin_write_TWI_CLKDIV((( 5*1024 / 400 ) << 8) |

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#947: FILE: drivers/i2c/busses/i2c-bfin-twi.c:563:
+			(( 5*1024 / 400 ) & 0xFF));
 			    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#947: FILE: drivers/i2c/busses/i2c-bfin-twi.c:563:
+			(( 5*1024 / 400 ) & 0xFF));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#947: FILE: drivers/i2c/busses/i2c-bfin-twi.c:563:
+			(( 5*1024 / 400 ) & 0xFF));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#949: FILE: drivers/i2c/busses/i2c-bfin-twi.c:565:
+		bfin_write_TWI_CLKDIV((( 5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ ) << 8) |
 		                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#949: FILE: drivers/i2c/busses/i2c-bfin-twi.c:565:
+		bfin_write_TWI_CLKDIV((( 5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ ) << 8) |

ERROR:SPACING: space prohibited before that close parenthesis ')'
#949: FILE: drivers/i2c/busses/i2c-bfin-twi.c:565:
+		bfin_write_TWI_CLKDIV((( 5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ ) << 8) |

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#950: FILE: drivers/i2c/busses/i2c-bfin-twi.c:566:
+			(( 5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ ) & 0xFF));
 			    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#950: FILE: drivers/i2c/busses/i2c-bfin-twi.c:566:
+			(( 5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ ) & 0xFF));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#950: FILE: drivers/i2c/busses/i2c-bfin-twi.c:566:
+			(( 5*1024 / CONFIG_I2C_BLACKFIN_TWI_CLK_KHZ ) & 0xFF));

ERROR:SPACING: space required before the open parenthesis '('
#957: FILE: drivers/i2c/busses/i2c-bfin-twi.c:573:
+	if(rc < 0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000459483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 22 warnings, 43 checks, 750 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000459483.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
