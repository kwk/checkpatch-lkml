CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/rcupdate.h:55:
+extern void synchronize_rcu(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/linux/rcupdate.h:56:
+extern void synchronize_rcu_bh(void);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#62: FILE: include/linux/rcupdate.h:56:
+extern void synchronize_rcu_bh(void);

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/linux/rcupdate.h:57:
+extern void rcu_barrier(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: include/linux/rcupdate.h:58:
+extern void rcu_barrier_bh(void);

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_bh', prefer 'rcu_barrier' instead
#64: FILE: include/linux/rcupdate.h:58:
+extern void rcu_barrier_bh(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/rcupdate.h:59:
+extern void rcu_barrier_sched(void);

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_sched', prefer 'rcu_barrier' instead
#65: FILE: include/linux/rcupdate.h:59:
+extern void rcu_barrier_sched(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: include/linux/rcupdate.h:60:
+extern void synchronize_sched_expedited(void);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#66: FILE: include/linux/rcupdate.h:60:
+extern void synchronize_sched_expedited(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/rcupdate.h:61:
+extern int sched_expedited_torture_stats(char *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/linux/rcupdate.h:64:
+extern void rcu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/linux/rcupdate.h:65:
+extern void rcu_scheduler_starting(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/rcupdate.h:66:
+extern int rcu_needs_cpu(int cpu);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh_expedited', prefer 'synchronize_rcu_expedited' instead
#105: FILE: include/linux/rcupreempt.h:82:
+static inline void synchronize_rcu_bh_expedited(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#107: FILE: include/linux/rcupreempt.h:84:
+	synchronize_rcu_bh();  /* Placeholder for new rcupreempt impl. */

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#124: FILE: include/linux/rcutree.h:291:
+	synchronize_sched_expedited();

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh_expedited', prefer 'synchronize_rcu_expedited' instead
#127: FILE: include/linux/rcutree.h:294:
+static inline void synchronize_rcu_bh_expedited(void)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#129: FILE: include/linux/rcutree.h:296:
+	synchronize_sched_expedited();

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#161: FILE: kernel/rcupdate.c:110:
+void synchronize_rcu_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#170: FILE: kernel/rcupdate.c:119:
+	call_rcu_bh(&rcu.head, wakeme_after_rcu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->task"
#217: FILE: kernel/sched.c:7074:
+		if (req->task != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#220: FILE: kernel/sched.c:7077:
+		} else if (likely(cpu == (badcpu = smp_processor_id()))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'migration_thread', this function's name, in a string
#226: FILE: kernel/sched.c:7083:
+			WARN_ONCE(1, "migration_thread() on CPU %d, expected %d\n", badcpu, cpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#244: FILE: kernel/sched.c:10581:
+void synchronize_sched_expedited(void)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#265: FILE: kernel/sched.c:10602:
+	for_each_online_cpu(cpu) {
+		 cnt += sprintf(&page[cnt], " %d:%d",

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched_expedited', prefer 'synchronize_rcu_expedited' instead
#286: FILE: kernel/sched.c:10623:
+void synchronize_sched_expedited(void)

CHECK:BRACES: braces {} should be used on all arms of this statement
#301: FILE: kernel/sched.c:10638:
+		if (trycount++ < 10)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#303: FILE: kernel/sched.c:10640:
+		else {

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#304: FILE: kernel/sched.c:10641:
+			synchronize_sched();

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#340: FILE: kernel/sched.c:10677:
+		synchronize_sched();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000102033.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 17 warnings, 13 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000102033.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
