WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#49: FILE: drivers/video/c2p.c:24:
+#define _transp(d, i1, i2, shift, mask)				\
+	do {							\
+		u32 t = (d[i1] ^ (d[i2] >> shift)) & mask;	\
+		d[i1] ^= t;					\
+		d[i2] ^= t << shift;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i1' - possible side-effects?
#49: FILE: drivers/video/c2p.c:24:
+#define _transp(d, i1, i2, shift, mask)				\
+	do {							\
+		u32 t = (d[i1] ^ (d[i2] >> shift)) & mask;	\
+		d[i1] ^= t;					\
+		d[i2] ^= t << shift;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i2' - possible side-effects?
#49: FILE: drivers/video/c2p.c:24:
+#define _transp(d, i1, i2, shift, mask)				\
+	do {							\
+		u32 t = (d[i1] ^ (d[i2] >> shift)) & mask;	\
+		d[i1] ^= t;					\
+		d[i2] ^= t << shift;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'shift' - possible side-effects?
#49: FILE: drivers/video/c2p.c:24:
+#define _transp(d, i1, i2, shift, mask)				\
+	do {							\
+		u32 t = (d[i1] ^ (d[i2] >> shift)) & mask;	\
+		d[i1] ^= t;					\
+		d[i2] ^= t << shift;				\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift' may be better as '(shift)' to avoid precedence issues
#49: FILE: drivers/video/c2p.c:24:
+#define _transp(d, i1, i2, shift, mask)				\
+	do {							\
+		u32 t = (d[i1] ^ (d[i2] >> shift)) & mask;	\
+		d[i1] ^= t;					\
+		d[i2] ^= t << shift;				\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mask' may be better as '(mask)' to avoid precedence issues
#49: FILE: drivers/video/c2p.c:24:
+#define _transp(d, i1, i2, shift, mask)				\
+	do {							\
+		u32 t = (d[i1] ^ (d[i2] >> shift)) & mask;	\
+		d[i1] ^= t;					\
+		d[i2] ^= t << shift;				\
+	} while (0)

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#64: FILE: drivers/video/c2p.c:36:
+		return 0x55555555;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#70: FILE: drivers/video/c2p.c:40:
+		return 0x33333333;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#76: FILE: drivers/video/c2p.c:44:
+		return 0x0f0f0f0f;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#82: FILE: drivers/video/c2p.c:48:
+		return 0x00ff00ff;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#90: FILE: drivers/video/c2p.c:52:
+		return 0x0000ffff;
+		break;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#127: FILE: drivers/video/c2p.c:57:
+#define transp_nx1(d, n)					\
+	do {							\
+		u32 mask = get_mask(n);				\
+		/* First block */				\
+		_transp(d, 0, 1, n, mask);			\
+		/* Second block */				\
+		_transp(d, 2, 3, n, mask);			\
+		/* Third block */				\
+		_transp(d, 4, 5, n, mask);			\
+		/* Fourth block */				\
+		_transp(d, 6, 7, n, mask);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#127: FILE: drivers/video/c2p.c:57:
+#define transp_nx1(d, n)					\
+	do {							\
+		u32 mask = get_mask(n);				\
+		/* First block */				\
+		_transp(d, 0, 1, n, mask);			\
+		/* Second block */				\
+		_transp(d, 2, 3, n, mask);			\
+		/* Third block */				\
+		_transp(d, 4, 5, n, mask);			\
+		/* Fourth block */				\
+		_transp(d, 6, 7, n, mask);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#140: FILE: drivers/video/c2p.c:70:
+#define transp_nx2(d, n)					\
+	do {							\
+		u32 mask = get_mask(n);				\
+		/* First block */				\
+		_transp(d, 0, 2, n, mask);			\
+		_transp(d, 1, 3, n, mask);			\
+		/* Second block */				\
+		_transp(d, 4, 6, n, mask);			\
+		_transp(d, 5, 7, n, mask);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#140: FILE: drivers/video/c2p.c:70:
+#define transp_nx2(d, n)					\
+	do {							\
+		u32 mask = get_mask(n);				\
+		/* First block */				\
+		_transp(d, 0, 2, n, mask);			\
+		_transp(d, 1, 3, n, mask);			\
+		/* Second block */				\
+		_transp(d, 4, 6, n, mask);			\
+		_transp(d, 5, 7, n, mask);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#151: FILE: drivers/video/c2p.c:81:
+#define transp_nx4(d, n)					\
+	do {							\
+		u32 mask = get_mask(n);				\
+		_transp(d, 0, 4, n, mask);			\
+		_transp(d, 1, 5, n, mask);			\
+		_transp(d, 2, 6, n, mask);			\
+		_transp(d, 3, 7, n, mask);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#151: FILE: drivers/video/c2p.c:81:
+#define transp_nx4(d, n)					\
+	do {							\
+		u32 mask = get_mask(n);				\
+		_transp(d, 0, 4, n, mask);			\
+		_transp(d, 1, 5, n, mask);			\
+		_transp(d, 2, 6, n, mask);			\
+		_transp(d, 3, 7, n, mask);			\
+	} while (0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#269: FILE: drivers/video/c2p.c:177:
+	dst += dy*dst_nextline+(dx & ~31);
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#269: FILE: drivers/video/c2p.c:177:
+	dst += dy*dst_nextline+(dx & ~31);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#272: FILE: drivers/video/c2p.c:180:
+	last = ~(~0UL >> ((dst_idx+width) % 32));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#277: FILE: drivers/video/c2p.c:185:
+		if (dst_idx+width <= 32) {
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: drivers/video/c2p.c:189:
+			memcpy((u8 *)d+dst_idx, c, width);
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#293: FILE: drivers/video/c2p.c:201:
+				memcpy((u8 *)d+dst_idx, c, w);
 				              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#299: FILE: drivers/video/c2p.c:207:
+				w = width-w;
 				         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#314: FILE: drivers/video/c2p.c:222:
+				memset((u8 *)d+w, 0, 32-w);
 				              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#314: FILE: drivers/video/c2p.c:222:
+				memset((u8 *)d+w, 0, 32-w);
 				                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000186549.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 21 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000186549.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
