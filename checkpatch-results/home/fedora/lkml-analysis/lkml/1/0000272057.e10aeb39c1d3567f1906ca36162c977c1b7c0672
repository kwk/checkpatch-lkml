WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
This is an updated patch to enable Oprofile module to switch between different

WARNING:LINE_SPACING: Missing a blank line after declarations
#66: FILE: arch/x86/oprofile/nmi_int.c:86:
+	struct op_msrs *msrs = &__get_cpu_var(cpu_msrs);
+	model->switch_ctrs(msrs);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: arch/x86/oprofile/op_model_athlon.c:57:
+		int hw_counter = i % NUM_HARDWARE_COUNTERS;
+		if (reserve_perfctr_nmi(MSR_K7_PERFCTR0 + hw_counter))

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: arch/x86/oprofile/op_model_athlon.c:65:
+		int hw_control = i % NUM_HARDWARE_CONTROLS;
+		if (reserve_evntsel_nmi(MSR_K7_EVNTSEL0 + hw_control))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: arch/x86/oprofile/op_model_athlon.c:137:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: arch/x86/oprofile/op_model_athlon.c:146:
+		int offset = i + __get_cpu_var(switch_index);
+		if (!reset_value[offset])

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: arch/x86/oprofile/op_model_athlon.c:191:
 
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#293: FILE: arch/x86/oprofile/op_model_athlon.c:202:
+		int offset = i + s;
+		if (!reset_value[offset])

CHECK:SPACING: No space is necessary after a cast
#298: FILE: arch/x86/oprofile/op_model_athlon.c:207:
+				(unsigned int) -1 - low - 1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's > NUM_HARDWARE_COUNTERS'
#303: FILE: arch/x86/oprofile/op_model_athlon.c:212:
+	if ((s > NUM_HARDWARE_COUNTERS) || (counter_config[s].count == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[s].count == 0'
#303: FILE: arch/x86/oprofile/op_model_athlon.c:212:
+	if ((s > NUM_HARDWARE_COUNTERS) || (counter_config[s].count == 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#303: FILE: arch/x86/oprofile/op_model_athlon.c:212:
+	if ((s > NUM_HARDWARE_COUNTERS) || (counter_config[s].count == 0)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#306: FILE: arch/x86/oprofile/op_model_athlon.c:215:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: arch/x86/oprofile/op_model_athlon.c:221:
+		int offset = i + s;
+		if ((counter_config[offset].enabled)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'counter_config[offset].enabled'
#312: FILE: arch/x86/oprofile/op_model_athlon.c:221:
+		if ((counter_config[offset].enabled)
+					&& (CTR_IS_RESERVED(msrs, i))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#313: FILE: arch/x86/oprofile/op_model_athlon.c:222:
+		if ((counter_config[offset].enabled)
+					&& (CTR_IS_RESERVED(msrs, i))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: arch/x86/oprofile/op_model_athlon.c:227:
+			CTR_WRITE(counter_config[offset].save_count_low,
+					msrs, i);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: arch/x86/oprofile/op_model_athlon.c:245:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: drivers/oprofile/oprof.c:195:
+	if ((timeout_jiffies = msecs_to_jiffies(val_msec)) == MAX_JIFFY_OFFSET)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#478: FILE: drivers/oprofile/oprof.c:202:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: drivers/oprofile/oprofile_files.c:23:
+static ssize_t timeout_read(struct file *file, char __user *buf,
+		size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#543: FILE: drivers/oprofile/oprofile_files.c:29:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: drivers/oprofile/oprofile_files.c:31:
+static ssize_t timeout_write(struct file *file, char const __user *buf,
+		size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: drivers/oprofile/oprofile_files.c:55:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000272057.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 16 checks, 491 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000272057.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
