WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
[ Reviewers: This is in drivers/xen to keep it close to the code it is and will be using.  Would people

WARNING:TYPO_SPELLING: 'compatibilty' may be misspelled - perhaps 'compatibility'?
#85: FILE: drivers/xen/Kconfig:40:
+         the compatibilty mount point /proc/xen if it is running on
              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: drivers/xen/xenbus/xenbus_probe.c:59:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#137: FILE: drivers/xen/xenbus/xenbus_probe.c:190:
+		.dev_attrs= xenbus_dev_attrs,
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#179: FILE: drivers/xen/xenfs/super.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#205: FILE: drivers/xen/xenfs/super.c:27:
+		[2] = {"xenbus", &xenbus_file_ops, S_IRUSR|S_IWUSR},
 		                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#205: FILE: drivers/xen/xenfs/super.c:27:
+		[2] = {"xenbus", &xenbus_file_ops, S_IRUSR|S_IWUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#231: FILE: drivers/xen/xenfs/super.c:53:
+	printk(KERN_INFO "XENFS: not registering filesystem on non-xen platform\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#248: FILE: drivers/xen/xenfs/xenbus.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#336: FILE: drivers/xen/xenfs/xenbus.c:89:
+	struct mutex reply_mutex;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#339: FILE: drivers/xen/xenfs/xenbus.c:92:
+static ssize_t xenbus_file_read(struct file *filp,
                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/xen/xenfs/xenbus.c:93:
+static ssize_t xenbus_file_read(struct file *filp,
+			       char __user *ubuf,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb"
#388: FILE: drivers/xen/xenfs/xenbus.c:141:
+	if (rb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#463: FILE: drivers/xen/xenfs/xenbus.c:216:
+	if (!ret) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#467: FILE: drivers/xen/xenfs/xenbus.c:220:
+	} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#475: FILE: drivers/xen/xenfs/xenbus.c:228:
+static ssize_t xenbus_file_write(struct file *filp,
                                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/xen/xenfs/xenbus.c:229:
+static ssize_t xenbus_file_write(struct file *filp,
+				const char __user *ubuf,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#481: FILE: drivers/xen/xenfs/xenbus.c:234:
+	uint32_t msg_type;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'u->len < sizeof(u->u.msg)'
#499: FILE: drivers/xen/xenfs/xenbus.c:252:
+	if ((u->len < sizeof(u->u.msg)) ||
+	    (u->len < (sizeof(u->u.msg) + u->u.msg.len)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#533: FILE: drivers/xen/xenfs/xenbus.c:286:
+			trans->handle.id = simple_strtoul(reply, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#539: FILE: drivers/xen/xenfs/xenbus.c:292:
+			BUG_ON(&trans->list == &u->transactions);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!token"
#568: FILE: drivers/xen/xenfs/xenbus.c:321:
+		if (token == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!watch"
#576: FILE: drivers/xen/xenfs/xenbus.c:329:
+			if (watch == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#581: FILE: drivers/xen/xenfs/xenbus.c:334:
+				kmalloc(strlen(path)+1, GFP_KERNEL);
 				                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!watch->watch.node"
#582: FILE: drivers/xen/xenfs/xenbus.c:335:
+			if (watch->watch.node == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#590: FILE: drivers/xen/xenfs/xenbus.c:343:
+				kmalloc(strlen(token)+1, GFP_KERNEL);
 				                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!watch->token"
#591: FILE: drivers/xen/xenfs/xenbus.c:344:
+			if (watch->token == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#648: FILE: drivers/xen/xenfs/xenbus.c:401:
+static int xenbus_file_open(struct inode *inode, struct file *filp)
                                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#655: FILE: drivers/xen/xenfs/xenbus.c:408:
+	nonseekable_open(inode, filp);
 	                        ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!u"
#658: FILE: drivers/xen/xenfs/xenbus.c:411:
+	if (u == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#673: FILE: drivers/xen/xenfs/xenbus.c:426:
+static int xenbus_file_release(struct inode *inode, struct file *filp)
                                                                  ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#717: FILE: drivers/xen/xenfs/xenfs.h:1:
+#ifndef _XENFS_XENBUS_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 14 warnings, 17 checks, 635 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
