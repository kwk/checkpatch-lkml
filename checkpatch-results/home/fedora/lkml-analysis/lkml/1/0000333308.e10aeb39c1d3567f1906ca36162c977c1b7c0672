WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/block/dst/alg_linear.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: drivers/block/dst/alg_linear.c:38:
+	dprintk("%s: disk_size: %llu, node_size: %llu.\n",
+			__func__, st->disk_size, n->size);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/block/dst/alg_linear.c:80:
+^I.add_node ^I= dst_linear_add_node,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: drivers/block/dst/alg_linear.c:81:
+^I.del_node ^I= dst_linear_del_node,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#127: FILE: drivers/block/dst/alg_linear.c:86:
+static int __devinit alg_linear_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#136: FILE: drivers/block/dst/alg_linear.c:95:
+static void __devexit alg_linear_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: drivers/block/dst/alg_mirror.c:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#176: FILE: drivers/block/dst/alg_mirror.c:24:
+struct dst_write_entry
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#181: FILE: drivers/block/dst/alg_mirror.c:29:
+};
+#define DST_LOG_ENTRIES_PER_PAGE	(PAGE_SIZE/sizeof(struct dst_write_entry))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#181: FILE: drivers/block/dst/alg_mirror.c:29:
+#define DST_LOG_ENTRIES_PER_PAGE	(PAGE_SIZE/sizeof(struct dst_write_entry))
                                 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#186: FILE: drivers/block/dst/alg_mirror.c:34:
+struct dst_mirror_node_data
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#193: FILE: drivers/block/dst/alg_mirror.c:41:
+struct dst_mirror_log
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#199: FILE: drivers/block/dst/alg_mirror.c:47:
+struct dst_mirror_priv
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/block/dst/alg_mirror.c:55:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#208: FILE: drivers/block/dst/alg_mirror.c:56:
+	spinlock_t		resync_wait_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#213: FILE: drivers/block/dst/alg_mirror.c:61:
+	spinlock_t		backlog_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#221: FILE: drivers/block/dst/alg_mirror.c:69:
+	spinlock_t		log_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#226: FILE: drivers/block/dst/alg_mirror.c:74:
+struct dst_mirror_sync_container
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: drivers/block/dst/alg_mirror.c:91:
+		struct dst_mirror_priv *priv = n->priv;
+		printk(KERN_NOTICE "%s: not synced node n: %p.\n", __func__, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#243: FILE: drivers/block/dst/alg_mirror.c:91:
+		printk(KERN_NOTICE "%s: not synced node n: %p.\n", __func__, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#257: FILE: drivers/block/dst/alg_mirror.c:105:
+		printk(KERN_NOTICE "%s: node: %p, %llu:%llu synchronization "

WARNING:SPLIT_STRING: quoted string split across lines
#258: FILE: drivers/block/dst/alg_mirror.c:106:
+		printk(KERN_NOTICE "%s: node: %p, %llu:%llu synchronization "
+				"has been completed.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/block/dst/alg_mirror.c:114:
+static ssize_t dst_mirror_mark_dirty(struct device *dev, struct device_attribute *attr,
+			 const char *buf, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/block/dst/alg_mirror.c:126:
+static ssize_t dst_mirror_mark_clean(struct device *dev, struct device_attribute *attr,
+			 const char *buf, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/block/dst/alg_mirror.c:143:
+static ssize_t dst_mirror_show_state(struct device *dev, struct device_attribute *attr,
+			char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/block/dst/alg_mirror.c:151:
+static ssize_t dst_mirror_show_resync_timeout(struct device *dev, struct device_attribute *attr,
+			char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/block/dst/alg_mirror.c:160:
+static ssize_t dst_mirror_show_resync_size(struct device *dev, struct device_attribute *attr,
+			char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: drivers/block/dst/alg_mirror.c:169:
+static ssize_t dst_mirror_set_resync_size(struct device *dev, struct device_attribute *attr,
+			 const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#327: FILE: drivers/block/dst/alg_mirror.c:175:
+	size = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/block/dst/alg_mirror.c:186:
+static ssize_t dst_mirror_show_log_num(struct device *dev, struct device_attribute *attr,
+			char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/block/dst/alg_mirror.c:195:
+static ssize_t dst_mirror_set_resync_timeout(struct device *dev, struct device_attribute *attr,
+			 const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#353: FILE: drivers/block/dst/alg_mirror.c:201:
+	tm = simple_strtoul(buf, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#364: FILE: drivers/block/dst/alg_mirror.c:212:
+	__ATTR(dirty, S_IWUSR, NULL, dst_mirror_mark_dirty),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#365: FILE: drivers/block/dst/alg_mirror.c:213:
+	__ATTR(clean, S_IWUSR, NULL, dst_mirror_mark_clean),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#366: FILE: drivers/block/dst/alg_mirror.c:214:
+	__ATTR(resync_size, S_IWUSR | S_IRUGO, dst_mirror_show_resync_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/block/dst/alg_mirror.c:215:
+	__ATTR(resync_size, S_IWUSR | S_IRUGO, dst_mirror_show_resync_size,
+			dst_mirror_set_resync_size),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#368: FILE: drivers/block/dst/alg_mirror.c:216:
+	__ATTR(resync_timeout, S_IWUSR | S_IRUGO, dst_mirror_show_resync_timeout,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/block/dst/alg_mirror.c:217:
+	__ATTR(resync_timeout, S_IWUSR | S_IRUGO, dst_mirror_show_resync_timeout,
+			dst_mirror_set_resync_timeout),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#370: FILE: drivers/block/dst/alg_mirror.c:218:
+	__ATTR(state, S_IRUSR, dst_mirror_show_state, NULL),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#371: FILE: drivers/block/dst/alg_mirror.c:219:
+	__ATTR(log_num, S_IRUSR, dst_mirror_show_log_num, NULL),

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#379: FILE: drivers/block/dst/alg_mirror.c:227:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#379: FILE: drivers/block/dst/alg_mirror.c:227:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/block/dst/alg_mirror.c:229:
+			err = device_create_file(&n->device,
+					&dst_mirror_attrs[i]);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#392: FILE: drivers/block/dst/alg_mirror.c:240:
+struct dst_mirror_ndp
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: drivers/block/dst/alg_mirror.c:250:
+	dprintk("%s: completing request: cmp: %p, err: %d.\n",
+			__func__, cmp, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/block/dst/alg_mirror.c:276:
+static int dst_mirror_process_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata, int op)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cmp)...) over kzalloc(sizeof(struct dst_mirror_ndp)...)
#436: FILE: drivers/block/dst/alg_mirror.c:284:
+	cmp = kzalloc(sizeof(struct dst_mirror_ndp), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/block/dst/alg_mirror.c:328:
+		dst_fill_request(&req, bio, bio->bi_sector, n,
+				&dst_mirror_ndp_bio_endio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: drivers/block/dst/alg_mirror.c:336:
+	dprintk("%s: waiting for completion: bio: %p, cmp: %p.\n",
+			__func__, bio, cmp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op != WRITE'
#493: FILE: drivers/block/dst/alg_mirror.c:341:
+	if (!err && (op != WRITE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/block/dst/alg_mirror.c:368:
+static int dst_mirror_read_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/block/dst/alg_mirror.c:377:
+static int dst_mirror_write_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/block/dst/alg_mirror.c:380:
+	dprintk("%s: writing new age: %llx, node: %p %llu-%llu.\n",
+			__func__, ndata->age, n, n->start, n->size);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cmp)...) over kzalloc(sizeof(struct dst_mirror_ndp)...)
#546: FILE: drivers/block/dst/alg_mirror.c:394:
+	cmp = kzalloc(sizeof(struct dst_mirror_ndp), GFP_KERNEL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#552: FILE: drivers/block/dst/alg_mirror.c:400:
+		BUG_ON(!q);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#555: FILE: drivers/block/dst/alg_mirror.c:403:
+	for (i=0; i<log->nr_pages; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#555: FILE: drivers/block/dst/alg_mirror.c:403:
+	for (i=0; i<log->nr_pages; ++i) {
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#567: FILE: drivers/block/dst/alg_mirror.c:415:
+		bio->bi_sector = n->size + to_sector(i*PAGE_SIZE);
 		                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: drivers/block/dst/alg_mirror.c:418:
+		err = bio_add_pc_page(q, bio,
+				virt_to_page(log->entries[i]), PAGE_SIZE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/block/dst/alg_mirror.c:434:
+			dst_fill_request(&req, bio, bio->bi_sector, n,
+					&dst_mirror_ndp_bio_endio);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#628: FILE: drivers/block/dst/alg_mirror.c:476:
+		printk(KERN_NOTICE "%s: first age: %llx -> %llx. "

WARNING:SPLIT_STRING: quoted string split across lines
#629: FILE: drivers/block/dst/alg_mirror.c:477:
+		printk(KERN_NOTICE "%s: first age: %llx -> %llx. "
+			"Old will be set to new for the first node.\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#648: FILE: drivers/block/dst/alg_mirror.c:496:
+		if (fp->old_age != p->data.age) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#651: FILE: drivers/block/dst/alg_mirror.c:499:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#683: FILE: drivers/block/dst/alg_mirror.c:531:
+		printk(KERN_NOTICE "%s: node %llu:%llu is not synced with the first one: "

WARNING:SPLIT_STRING: quoted string split across lines
#684: FILE: drivers/block/dst/alg_mirror.c:532:
+		printk(KERN_NOTICE "%s: node %llu:%llu is not synced with the first one: "
+					"first_age: %llx, new_age: %llx, full: %d.\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#685: FILE: drivers/block/dst/alg_mirror.c:533:
+					__func__, n->start, n->start+n->size,
 					                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: drivers/block/dst/alg_mirror.c:537:
+^I       ^Iif (clean_on_sync)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: drivers/block/dst/alg_mirror.c:537:
+^I       ^Iif (clean_on_sync)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#693: FILE: drivers/block/dst/alg_mirror.c:541:
+		printk(KERN_NOTICE "%s: node %llu:%llu is in sync with the first node.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/block/dst/alg_mirror.c:542:
+		printk(KERN_NOTICE "%s: node %llu:%llu is in sync with the first node.\n",
+				__func__, n->start, n->start+n->size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#694: FILE: drivers/block/dst/alg_mirror.c:542:
+				__func__, n->start, n->start+n->size);
 				                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#697: FILE: drivers/block/dst/alg_mirror.c:545:
+	printk("%s: n: %p, shared_head: %p, age: old: %llx, new: %llx.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/block/dst/alg_mirror.c:546:
+	printk("%s: n: %p, shared_head: %p, age: old: %llx, new: %llx.\n",
+			__func__, n, n->shared_head, p->old_age, fp->data.age);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/block/dst/alg_mirror.c:570:
+	dprintk("%s: req: %p, bio: %p, req->bio: %p, err: %d.\n",
+			__func__, req, bio, req->bio, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/block/dst/alg_mirror.c:577:
+static int dst_mirror_process_request_nosync(struct dst_request *req,
+		struct dst_node *n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: drivers/block/dst/alg_mirror.c:596:
+		dprintk("%s: clone: %p, bio: %p, req: %p.\n",
+				__func__, clone, req->bio, req);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: drivers/block/dst/alg_mirror.c:619:
+	dprintk("%s: req: %p, n: %p, bdev: %p, err: %d.\n",
+			__func__, req, n, n->bdev, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: drivers/block/dst/alg_mirror.c:662:
+		dst_fill_request(&req, sc->bio, sc->start - n->start,
+				n, &kst_bio_endio);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: drivers/block/dst/alg_mirror.c:696:
+ * and full resync is scheduled. $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#880: FILE: drivers/block/dst/alg_mirror.c:728:
+		log->nr_pages = (pd->num*sizeof(struct dst_write_entry))>>PAGE_SHIFT;
 		                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#880: FILE: drivers/block/dst/alg_mirror.c:728:
+		log->nr_pages = (pd->num*sizeof(struct dst_write_entry))>>PAGE_SHIFT;
 		                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#887: FILE: drivers/block/dst/alg_mirror.c:735:
+		pd->num = min(allowed_disk, allowed_ram)/sizeof(struct dst_write_entry);
 		                                        ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#889: FILE: drivers/block/dst/alg_mirror.c:737:
+		pd->write_idx = pd->resync_idx = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#893: FILE: drivers/block/dst/alg_mirror.c:741:
+	log->entries = kzalloc(log->nr_pages * sizeof(void *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#897: FILE: drivers/block/dst/alg_mirror.c:745:
+	for (i=0; i<log->nr_pages; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#897: FILE: drivers/block/dst/alg_mirror.c:745:
+	for (i=0; i<log->nr_pages; ++i) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#903: FILE: drivers/block/dst/alg_mirror.c:751:
+	printk(KERN_INFO "%s: mirror write log contains %u entries (%u pages).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/block/dst/alg_mirror.c:752:
+	printk(KERN_INFO "%s: mirror write log contains %u entries (%u pages).\n",
+			__func__, pd->num, log->nr_pages);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#921: FILE: drivers/block/dst/alg_mirror.c:769:
+	for (i=0; i<priv->log.nr_pages; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#921: FILE: drivers/block/dst/alg_mirror.c:769:
+	for (i=0; i<priv->log.nr_pages; ++i)
 	           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct dst_mirror_priv)...)
#938: FILE: drivers/block/dst/alg_mirror.c:786:
+	priv = kzalloc(sizeof(struct dst_mirror_priv), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#945: FILE: drivers/block/dst/alg_mirror.c:793:
+	priv->resync_size = to_sector(1024*1024*100ULL);
 	                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#945: FILE: drivers/block/dst/alg_mirror.c:793:
+	priv->resync_size = to_sector(1024*1024*100ULL);
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#962: FILE: drivers/block/dst/alg_mirror.c:810:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1023: FILE: drivers/block/dst/alg_mirror.c:871:
+		dprintk("%s: completing resync request, start: %llu, size: %llu.\n",
+				__func__, priv->resync_start, priv->resync_size);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1042: FILE: drivers/block/dst/alg_mirror.c:890:
+	for (i=pnum; i<priv->log.nr_pages; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1042: FILE: drivers/block/dst/alg_mirror.c:890:
+	for (i=pnum; i<priv->log.nr_pages; ++i) {
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1043: FILE: drivers/block/dst/alg_mirror.c:891:
+		for (j=pidx; j<DST_LOG_ENTRIES_PER_PAGE; ++j) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1043: FILE: drivers/block/dst/alg_mirror.c:891:
+		for (j=pidx; j<DST_LOG_ENTRIES_PER_PAGE; ++j) {
 		              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1047: FILE: drivers/block/dst/alg_mirror.c:895:
+				pd->resync_idx = i*DST_LOG_ENTRIES_PER_PAGE + j;
 				                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: drivers/block/dst/alg_mirror.c:910:
+	dprintk("%s: bio: %p, err: %d, size: %u, op: %s.\n",
+			__func__, bio, err, bio->bi_size,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1063: FILE: drivers/block/dst/alg_mirror.c:911:
+			(bio_rw(bio) != WRITE)?"read":"write");
 			                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1063: FILE: drivers/block/dst/alg_mirror.c:911:
+			(bio_rw(bio) != WRITE)?"read":"write");
 			                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: drivers/block/dst/alg_mirror.c:934:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1087: FILE: drivers/block/dst/alg_mirror.c:935:
+		if (err)
[...]
+		else if (!priv->full_resync) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: drivers/block/dst/alg_mirror.c:954:
+static int dst_mirror_sync_block(struct dst_node *n,
+		u64 start, u32 size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: drivers/block/dst/alg_mirror.c:965:
+	dprintk("%s: [all in sectors] start: %llu, size: %u, nr_pages: %u, disk_size: %llu.\n",
+			__func__, (u64)to_sector(start), (unsigned int)to_sector(size),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sc)...) over kmalloc(sizeof(struct dst_mirror_sync_container)...)
#1125: FILE: drivers/block/dst/alg_mirror.c:973:
+		sc = kmalloc(sizeof(struct dst_mirror_sync_container), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: drivers/block/dst/alg_mirror.c:994:
+			err = bio_add_pc_page(n->st->queue, bio, page,
+					min_t(u32, PAGE_SIZE, size), 0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1163: FILE: drivers/block/dst/alg_mirror.c:1011:
+		dst_mirror_check_resync_complete(n, i-1, 0);
 		                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: drivers/block/dst/alg_mirror.c:1077:
+	if (test_bit(DST_NODE_NOTSYNC, &req->node->flags) &&
+			pd->write_idx == pd->resync_idx)

WARNING:SPLIT_STRING: quoted string split across lines
#1247: FILE: drivers/block/dst/alg_mirror.c:1095:
+	dprintk("%s: req: %p, priv: %p err: %d, bio: %p, "
+			"cnt: %d, orig_size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/block/dst/alg_mirror.c:1106:
+static int dst_mirror_process_request(struct dst_request *req,
+		struct dst_node *n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: drivers/block/dst/alg_mirror.c:1146:
+	if (test_bit(DST_NODE_NOTSYNC, &node->flags) &&
+			oreq->start >= priv->resync_start &&

WARNING:LONG_LINE_STRING: line length of 114 exceeds 100 columns
#1301: FILE: drivers/block/dst/alg_mirror.c:1149:
+		dprintk("%s: queueing request: start: %llu, size: %llu, resync window start: %llu, size: %llu.\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1302: FILE: drivers/block/dst/alg_mirror.c:1150:
+		dprintk("%s: queueing request: start: %llu, size: %llu, resync window start: %llu, size: %llu.\n",
+				__func__, oreq->start, (u64)to_sector(oreq->orig_size),

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1317: FILE: drivers/block/dst/alg_mirror.c:1165:
+	orig_num = num = atomic_read(&req->node->shared_num) + 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1321: FILE: drivers/block/dst/alg_mirror.c:1169:
+	dprintk("\n%s: req: %p, mirror to %d nodes.\n",
+			__func__, req, num);

WARNING:SPLIT_STRING: quoted string split across lines
#1330: FILE: drivers/block/dst/alg_mirror.c:1178:
+			dprintk("\n%s: req: %p, start: %llu, size: %llu, "
+					"num: %d, n: %p, state: %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: drivers/block/dst/alg_mirror.c:1193:
+		dprintk("%s: req: %p, num: %d, err: %d.\n",
+				__func__, req, num, err);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1436: FILE: drivers/block/dst/alg_mirror.c:1284:
+	int (*remap[])(struct dst_request *) =
+		{&dst_mirror_read, &dst_mirror_write};

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1453: FILE: drivers/block/dst/alg_mirror.c:1301:
+			req = list_entry(priv->resync_wait_list.next,
+					struct dst_request,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1464: FILE: drivers/block/dst/alg_mirror.c:1312:
+		dprintk("%s: queued request n: %p, req: %p, start: %llu, size: %llu, num: %d.\n",
+				__func__, n, req, req->start, (u64)to_sector(req->size), num);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1489: FILE: drivers/block/dst/alg_mirror.c:1337:
+	dprintk("%s: ", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1527: FILE: drivers/block/dst/alg_mirror.c:1375:
+	printk("%s: node write_idx: %u, resync_idx: %u, num: %u, sync write_idx: %u, num: %u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1528: FILE: drivers/block/dst/alg_mirror.c:1376:
+	printk("%s: node write_idx: %u, resync_idx: %u, num: %u, sync write_idx: %u, num: %u.\n",
+			__func__, pd->write_idx, pd->resync_idx, pd->num, spd->write_idx, spd->num);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1529: FILE: drivers/block/dst/alg_mirror.c:1377:
+	printk("%s: sync request: start: %llu, size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1530: FILE: drivers/block/dst/alg_mirror.c:1378:
+	printk("%s: sync request: start: %llu, size: %llu.\n",
+			__func__, start, (u64)to_sector(size));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1543: FILE: drivers/block/dst/alg_mirror.c:1391:
+ * window, which slides from the start of the node to the end. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1569: FILE: drivers/block/dst/alg_mirror.c:1417:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1590: FILE: drivers/block/dst/alg_mirror.c:1438:
+	printk(KERN_NOTICE "%s: node: %p [%d], %llu:%llu %s synchronization has been started "

WARNING:SPLIT_STRING: quoted string split across lines
#1591: FILE: drivers/block/dst/alg_mirror.c:1439:
+	printk(KERN_NOTICE "%s: node: %p [%d], %llu:%llu %s synchronization has been started "
+			"from %llu, allowed: %llu, total: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1616: FILE: drivers/block/dst/alg_mirror.c:1464:
+	err = dst_mirror_sync_block(n, to_bytes(priv->resync_start),
+			to_bytes(total));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1629: FILE: drivers/block/dst/alg_mirror.c:1477:
+	dprintk("%s: err: %d, revents: %x, notsync: %d.\n",
+			__func__, err, revents,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1636: FILE: drivers/block/dst/alg_mirror.c:1484:
+^I^I   ^I(err == -EPIPE || err == -ECONNRESET)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1636: FILE: drivers/block/dst/alg_mirror.c:1484:
+^I^I   ^I(err == -EPIPE || err == -ECONNRESET)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1636: FILE: drivers/block/dst/alg_mirror.c:1484:
+	if (!(revents & (POLLERR | POLLHUP)) &&
+		   	(err == -EPIPE || err == -ECONNRESET)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1643: FILE: drivers/block/dst/alg_mirror.c:1491:
+	if (atomic_read(&st->node->shared_num) == 0 &&
+			!st->node->shared_head) {

WARNING:SPLIT_STRING: quoted string split across lines
#1645: FILE: drivers/block/dst/alg_mirror.c:1493:
+		dprintk("%s: this node is the only one in the mirror, "
+				"can not mark it notsync.\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1653: FILE: drivers/block/dst/alg_mirror.c:1501:
+	list_for_each_entry_safe(req, tmp, &st->request_list,
+					request_list_entry) {

WARNING:SPLIT_STRING: quoted string split across lines
#1656: FILE: drivers/block/dst/alg_mirror.c:1504:
+		dprintk("%s: requeue [%c], start: %llu, idx: %d,"
+				" num: %d, size: %llu, offset: %u, err: %d.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1657: FILE: drivers/block/dst/alg_mirror.c:1505:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1657: FILE: drivers/block/dst/alg_mirror.c:1505:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#1703: FILE: drivers/block/dst/alg_mirror.c:1551:
+		if (printk_ratelimit())

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1722: FILE: drivers/block/dst/alg_mirror.c:1570:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1722: FILE: drivers/block/dst/alg_mirror.c:1570:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		           ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1736: FILE: drivers/block/dst/alg_mirror.c:1584:
+static int __devinit alg_mirror_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1755: FILE: drivers/block/dst/alg_mirror.c:1603:
+static void __devexit alg_mirror_exit(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333308.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 43 warnings, 78 checks, 1719 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333308.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
