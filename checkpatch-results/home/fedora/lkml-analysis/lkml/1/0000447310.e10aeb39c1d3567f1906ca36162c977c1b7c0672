WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#45: FILE: fs/unionfs/main.c:184:
+int check_branch(struct nameidata *nd)
                                    ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: fs/unionfs/main.c:235:
+	int perms =  __parse_branch_mode(name);
+	if (perms == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#159: FILE: fs/unionfs/super.c:154:
+	struct nameidata nd;
 	                 ^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: fs/unionfs/super.c:158:
+		printk("unionfs: no branch specified for mode change.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: fs/unionfs/super.c:162:
+		printk("unionfs: branch \"%s\" requires a mode.\n", optarg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: fs/unionfs/super.c:168:
+		printk("unionfs: invalid mode \"%s\" for \"%s\".\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#184: FILE: fs/unionfs/super.c:179:
+	err = path_lookup(optarg, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#186: FILE: fs/unionfs/super.c:181:
+		printk(KERN_WARNING "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#187: FILE: fs/unionfs/super.c:182:
+		printk(KERN_WARNING "unionfs: error accessing "
+		       "hidden directory \"%s\" (error %d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#191: FILE: fs/unionfs/super.c:186:
+	for (idx=0; idx<cur_branches; idx++)
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#191: FILE: fs/unionfs/super.c:186:
+	for (idx=0; idx<cur_branches; idx++)
 	               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#192: FILE: fs/unionfs/super.c:187:
+		if (nd.mnt == new_lower_paths[idx].mnt &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#193: FILE: fs/unionfs/super.c:188:
+		    nd.dentry == new_lower_paths[idx].dentry)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#195: FILE: fs/unionfs/super.c:190:
+	path_release(&nd);	/* no longer needed */
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#198: FILE: fs/unionfs/super.c:193:
+		printk(KERN_WARNING "unionfs: branch \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#199: FILE: fs/unionfs/super.c:194:
+		printk(KERN_WARNING "unionfs: branch \"%s\" "
+		       "not found\n", optarg);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#217: FILE: fs/unionfs/super.c:212:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#226: FILE: fs/unionfs/super.c:221:
+	err = path_lookup(optarg, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#228: FILE: fs/unionfs/super.c:223:
+		printk(KERN_WARNING "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#229: FILE: fs/unionfs/super.c:224:
+		printk(KERN_WARNING "unionfs: error accessing "
+		       "hidden directory \"%s\" (error %d)\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#233: FILE: fs/unionfs/super.c:228:
+	for (idx=0; idx < cur_branches; idx++)
 	        ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#234: FILE: fs/unionfs/super.c:229:
+		if (nd.mnt == new_lower_paths[idx].mnt &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#235: FILE: fs/unionfs/super.c:230:
+		    nd.dentry == new_lower_paths[idx].dentry)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#237: FILE: fs/unionfs/super.c:232:
+	path_release(&nd);	/* no longer needed */
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#239: FILE: fs/unionfs/super.c:234:
+		printk(KERN_WARNING "unionfs: branch \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: fs/unionfs/super.c:235:
+		printk(KERN_WARNING "unionfs: branch \"%s\" "
+		       "not found\n", optarg);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#260: FILE: fs/unionfs/super.c:255:
+		memmove(&new_data[idx], &new_data[idx+1],
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: fs/unionfs/super.c:257:
+		memmove(&new_lower_paths[idx], &new_lower_paths[idx+1],
 		                                                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#280: FILE: fs/unionfs/super.c:275:
+	char *new_branch , *modename = NULL;
 	                 ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#281: FILE: fs/unionfs/super.c:276:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#309: FILE: fs/unionfs/super.c:304:
+	err = path_lookup(optarg, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#311: FILE: fs/unionfs/super.c:306:
+		printk(KERN_WARNING "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#312: FILE: fs/unionfs/super.c:307:
+		printk(KERN_WARNING "unionfs: error accessing "
+		       "hidden directory \"%s\" (error %d)\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#316: FILE: fs/unionfs/super.c:311:
+	for (idx=0; idx < cur_branches; idx++)
 	        ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#317: FILE: fs/unionfs/super.c:312:
+		if (nd.mnt == new_lower_paths[idx].mnt &&
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#318: FILE: fs/unionfs/super.c:313:
+		    nd.dentry == new_lower_paths[idx].dentry)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#320: FILE: fs/unionfs/super.c:315:
+	path_release(&nd);	/* no longer needed */
 	              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#322: FILE: fs/unionfs/super.c:317:
+		printk(KERN_WARNING "unionfs: branch \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: fs/unionfs/super.c:318:
+		printk(KERN_WARNING "unionfs: branch \"%s\" "
+		       "not found\n", optarg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#341: FILE: fs/unionfs/super.c:336:
+		printk(KERN_WARNING "unionfs: null new branch\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#345: FILE: fs/unionfs/super.c:340:
+	err = path_lookup(new_branch, LOOKUP_FOLLOW, &nd);
 	                                              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#347: FILE: fs/unionfs/super.c:342:
+		printk(KERN_WARNING "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: fs/unionfs/super.c:343:
+		printk(KERN_WARNING "unionfs: error accessing "
+		       "hidden directory \"%s\" (error %d)\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#353: FILE: fs/unionfs/super.c:348:
+	if ((err = check_branch(&nd))) {
 	                         ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#353: FILE: fs/unionfs/super.c:348:
+	if ((err = check_branch(&nd))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#354: FILE: fs/unionfs/super.c:349:
+		printk(KERN_WARNING "unionfs: hidden directory "

WARNING:SPLIT_STRING: quoted string split across lines
#355: FILE: fs/unionfs/super.c:350:
+		printk(KERN_WARNING "unionfs: hidden directory "
+		       "\"%s\" is not a valid branch\n", optarg);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#356: FILE: fs/unionfs/super.c:351:
+		path_release(&nd);
 		              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#364: FILE: fs/unionfs/super.c:359:
+	 * We don't release nd here; it's kept until umount/remount.
 	                    ^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#368: FILE: fs/unionfs/super.c:363:
+		memmove(&new_data[idx+1], &new_data[idx],
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#370: FILE: fs/unionfs/super.c:365:
+		memmove(&new_lower_paths[idx+1], &new_lower_paths[idx],
 		                            ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#373: FILE: fs/unionfs/super.c:368:
+	new_lower_paths[idx].dentry = nd.dentry;
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#374: FILE: fs/unionfs/super.c:369:
+	new_lower_paths[idx].mnt = nd.mnt;
 	                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#376: FILE: fs/unionfs/super.c:371:
+	new_data[idx].sb = nd.dentry->d_sb;
 	                   ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: fs/unionfs/super.c:381:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#436: FILE: fs/unionfs/super.c:429:
+		printk(KERN_WARNING

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#455: FILE: fs/unionfs/super.c:448:
+	optionstmp = tmp_to_free = kstrdup(options, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#460: FILE: fs/unionfs/super.c:453:
+	new_branches = cur_branches = sbmax(sb); /* current no. branches */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#461: FILE: fs/unionfs/super.c:454:
+	add_branches = del_branches = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#481: FILE: fs/unionfs/super.c:474:
+		printk(KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: fs/unionfs/super.c:502:
+	tmp_lower_paths = kcalloc(max_branches,
+			   sizeof(struct path), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#519: FILE: fs/unionfs/super.c:512:
+	for (i=0; i<cur_branches; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#519: FILE: fs/unionfs/super.c:512:
+	for (i=0; i<cur_branches; i++)
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#562: FILE: fs/unionfs/super.c:555:
+			printk("unionfs: all remount options require "

WARNING:SPLIT_STRING: quoted string split across lines
#563: FILE: fs/unionfs/super.c:556:
+			printk("unionfs: all remount options require "
+			       "an argument (%s).\n", optname);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#577: FILE: fs/unionfs/super.c:570:
+				printk("unionfs: command exceeds %d branches\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#612: FILE: fs/unionfs/super.c:605:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#619: FILE: fs/unionfs/super.c:612:
+		printk(KERN_WARNING

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#641: FILE: fs/unionfs/super.c:634:
+	if (new_branches < max_branches) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: fs/unionfs/super.c:730:
+	printk("unionfs: new generation number %d\n", i);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#741: FILE: fs/unionfs/super.c:734:
+	 * The code above falls through to the next label, and releases the

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#751: FILE: fs/unionfs/super.c:744:
+		for (i=0; i<new_branches; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#751: FILE: fs/unionfs/super.c:744:
+		for (i=0; i<new_branches; i++)
 		           ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#782: FILE: fs/unionfs/union.h:414:
+extern int check_branch(struct nameidata *nd);
                                           ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#782: FILE: fs/unionfs/union.h:414:
+extern int check_branch(struct nameidata *nd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#783: FILE: fs/unionfs/union.h:415:
+extern int __parse_branch_mode(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#784: FILE: fs/unionfs/union.h:416:
+extern int parse_branch_mode(const char *name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447310.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 54 warnings, 13 checks, 732 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447310.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
