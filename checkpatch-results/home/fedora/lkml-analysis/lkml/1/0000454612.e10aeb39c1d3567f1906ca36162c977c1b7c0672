WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
--- linux-2.6.21-rc3-mm2/net/x25/x25_forward.c.old	2007-03-19 02:28:34.000000000 +0100

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#40: FILE: net/x25/x25_forward.c:29:
+	if ((rt = x25_get_route(dest_addr)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#80: FILE: net/x25/x25_forward.c:29:
+	if ((rt = x25_get_route(dest_addr)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#92: FILE: net/x25/x25_forward.c:32:
+	if ((neigh_new = x25_get_neigh(rt->dev)) == NULL) {

WARNING:TYPO_SPELLING: 'shouldnt' may be misspelled - perhaps 'shouldn't'?
#93: FILE: net/x25/x25_forward.c:33:
+		/* This shouldnt happen, if it occurs somehow
 		        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#117: FILE: net/x25/x25_forward.c:42:
+	if (rt->dev == from->dev) {
+		goto out_put_nb;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'shouldnt' may be misspelled - perhaps 'shouldn't'?
#135: FILE: net/x25/x25_forward.c:47:
+	 * established LCI? It shouldnt happen, just in case..
 	                       ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#141: FILE: net/x25/x25_forward.c:53:
+			printk(KERN_WARNING "X.25: call request for lci which is already registered!, transmitting but not registering new pair\n");

ERROR:SPACING: space required before the open brace '{'
#150: FILE: net/x25/x25_forward.c:60:
+	if (!same_lci){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#151: FILE: net/x25/x25_forward.c:61:
+		if ((new_frwd = kmalloc(sizeof(struct x25_forward),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_frwd)...) over kmalloc(sizeof(struct x25_forward)...)
#151: FILE: net/x25/x25_forward.c:61:
+		if ((new_frwd = kmalloc(sizeof(struct x25_forward),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: net/x25/x25_forward.c:62:
+		if ((new_frwd = kmalloc(sizeof(struct x25_forward),
+						GFP_ATOMIC)) == NULL){

ERROR:SPACING: space required before the open brace '{'
#167: FILE: net/x25/x25_forward.c:75:
+	if ( (skbn = skb_clone(skb, GFP_ATOMIC)) == NULL){

ERROR:SPACING: space prohibited after that open parenthesis '('
#167: FILE: net/x25/x25_forward.c:75:
+	if ( (skbn = skb_clone(skb, GFP_ATOMIC)) == NULL){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#167: FILE: net/x25/x25_forward.c:75:
+	if ( (skbn = skb_clone(skb, GFP_ATOMIC)) == NULL){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#167: FILE: net/x25/x25_forward.c:75:
+	if ( (skbn = skb_clone(skb, GFP_ATOMIC)) == NULL){
+		goto out_put_nb;
+	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454612.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 6 warnings, 2 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454612.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
