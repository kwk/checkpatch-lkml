WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#70: 
Alejandro Riveira Fernández (1):
                      ^

WARNING:TYPO_SPELLING: 'missleading' may be misspelled - perhaps 'misleading'?
#71: 
      sata_via.c: Remove missleading comment.
                         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#362: FILE: drivers/ata/ahci.c:694:
+				   "implemented port map (0x%x) contains more "
+				   "ports than nr_ports (%u), using nr_ports\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#401: FILE: drivers/ata/ata_piix.c:1606:
+static int __devinit piix_init_one(struct pci_dev *pdev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#430: FILE: drivers/ata/pata_of_platform.c:17:
 static int __devinit pata_of_platform_probe(struct of_device *ofdev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sg_next"
#456: FILE: drivers/ata/sata_fsl.c:359:
+		    sg_next(sg) != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: drivers/ata/sata_mv.c:202:
+^IHC_MAIN_RSVD_SOC ^I= (0x3fffffb << 6),     /* bits 31-9, 7-6 */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: drivers/ata/sata_mv.c:498:
+static void mv_soc_enable_leds(struct mv_host_priv *hpriv,
+				      void __iomem *mmio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/ata/sata_mv.c:500:
+static void mv_soc_read_preamp(struct mv_host_priv *hpriv, int idx,
+				      void __iomem *mmio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/ata/sata_mv.c:502:
+static int mv_soc_reset_hc(struct mv_host_priv *hpriv,
+				  void __iomem *mmio, unsigned int n_hc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/ata/sata_mv.c:504:
+static void mv_soc_reset_flash(struct mv_host_priv *hpriv,
+				      void __iomem *mmio);

WARNING:LINE_SPACING: Missing a blank line after declarations
#570: FILE: drivers/ata/sata_mv.c:791:
+	struct mv_host_priv *hpriv = host->private_data;
+	return hpriv->base;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/ata/sata_mv.c:2235:
+static void mv_soc_enable_leds(struct mv_host_priv *hpriv,
+				      void __iomem *mmio)

WARNING:RETURN_VOID: void function return statements are not generally useful
#662: FILE: drivers/ata/sata_mv.c:2238:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: drivers/ata/sata_mv.c:2241:
+static void mv_soc_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: drivers/ata/sata_mv.c:2256:
+static void mv_soc_reset_hc_port(struct mv_host_priv *hpriv,
+					void __iomem *mmio, unsigned int port)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: drivers/ata/sata_mv.c:2283:
+static void mv_soc_reset_one_hc(struct mv_host_priv *hpriv,
+				       void __iomem *mmio)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#715: FILE: drivers/ata/sata_mv.c:2291:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: drivers/ata/sata_mv.c:2296:
+static int mv_soc_reset_hc(struct mv_host_priv *hpriv,
+				  void __iomem *mmio, unsigned int n_hc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/ata/sata_mv.c:2309:
+static void mv_soc_reset_flash(struct mv_host_priv *hpriv,
+				      void __iomem *mmio)

WARNING:RETURN_VOID: void function return statements are not generally useful
#736: FILE: drivers/ata/sata_mv.c:2312:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#741: FILE: drivers/ata/sata_mv.c:2317:
+	return;
+}

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#804: FILE: drivers/ata/sata_mv.c:2746:
+		dev_printk(KERN_ERR, host->dev,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#820: FILE: drivers/ata/sata_mv.c:2783:
 	if (rc)
+	goto done;

WARNING:LINE_SPACING: Missing a blank line after declarations
#852: FILE: drivers/ata/sata_mv.c:2834:
+			unsigned int offset = port_mmio - mmio;
+			ata_port_pbar_desc(ap, MV_PRIMARY_BAR, -1, "mmio");

WARNING:SPLIT_STRING: quoted string split across lines
#880: FILE: drivers/ata/sata_mv.c:2866:
+		VPRINTK("HC MAIN IRQ cause/mask=0x%08x/0x%08x "
+			"PCI int cause/mask=0x%08x/0x%08x\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#913: FILE: drivers/ata/sata_mv.c:2895:
+	const struct ata_port_info *ppi[] =
+	    { &mv_port_info[chip_soc], NULL };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#926: FILE: drivers/ata/sata_mv.c:2902:
+		dev_printk(KERN_INFO, &pdev->dev, "version " DRV_VERSION "\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#942: FILE: drivers/ata/sata_mv.c:2916:
+	if (res == NULL)

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#966: FILE: drivers/ata/sata_mv.c:2940:
+	dev_printk(KERN_INFO, &pdev->dev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#967: FILE: drivers/ata/sata_mv.c:2941:
+		   "slots %u ports %d\n", (unsigned)MV_MAX_Q_DEPTH,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#982: FILE: drivers/ata/sata_mv.c:2956:
+static int __devexit mv_platform_remove(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1003: FILE: drivers/ata/sata_mv.c:2977:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1057: FILE: drivers/ata/sata_mv.c:3163:
+static int __devexit mv_platform_remove(struct platform_device *pdev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1145: FILE: drivers/ata/sata_nv.c:786:
+		/** We have to set the DMA mask to 32-bit if either port is in
+		    ATAPI mode, since they are on the same PCI device which is

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1152: FILE: drivers/ata/sata_nv.c:793:
+		    Note: Setting 32-bit mask should not fail. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1196: FILE: drivers/ata/sata_nv.c:1188:
+	/* Ensure DMA mask is set to 32-bit before allocating legacy PRD and
+	   pad buffers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1196: FILE: drivers/ata/sata_nv.c:1188:
+	   pad buffers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1212: FILE: drivers/ata/sata_nv.c:1212:
+	/* Now that the legacy PRD and padding buffer are allocated we can
+	   safely raise the DMA mask to allocate the CPB/APRD table.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: drivers/ata/sata_nv.c:1215:
+	   needed. */

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1263: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1268: FILE: include/linux/ata_platform.h:1:
+#ifndef __LINUX_ATA_PLATFORM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1278: FILE: include/linux/ata_platform.h:11:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1285: FILE: include/linux/ata_platform.h:18:
+extern int __devinit __pata_platform_probe(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1285: FILE: include/linux/ata_platform.h:18:
+extern int __devinit __pata_platform_probe(struct device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1292: FILE: include/linux/ata_platform.h:25:
+extern int __devexit __pata_platform_remove(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1292: FILE: include/linux/ata_platform.h:25:
+extern int __devexit __pata_platform_remove(struct device *dev);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 29 warnings, 17 checks, 1039 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
