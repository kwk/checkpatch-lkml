CHECK:CAMELCASE: Avoid CamelCase: <moxaCard>
#88: FILE: drivers/char/moxa.c:168:
+static int moxaCard;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <boardType>
#106: FILE: drivers/char/moxa.c:277:
+	switch (brd->boardType) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/char/moxa.c:308:
+static int moxa_load_bios(struct moxa_board_conf *brd, const u8 *buf,
+		size_t len)

CHECK:CAMELCASE: Avoid CamelCase: <baseAddr>
#139: FILE: drivers/char/moxa.c:310:
+	void __iomem *baseAddr = brd->basemem;

CHECK:CAMELCASE: Avoid CamelCase: <Control_reg>
#142: FILE: drivers/char/moxa.c:313:
+	writeb(HW_reset, baseAddr + Control_reg);	/* reset */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#143: FILE: drivers/char/moxa.c:314:
+	msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <C218_KeyCode>
#154: FILE: drivers/char/moxa.c:325:
+		if (tmp != C218_KeyCode)

CHECK:CAMELCASE: Avoid CamelCase: <CP204J_KeyCode>
#159: FILE: drivers/char/moxa.c:330:
+		if (tmp != CP204J_KeyCode)

CHECK:CAMELCASE: Avoid CamelCase: <C320_KeyCode>
#164: FILE: drivers/char/moxa.c:335:
+		if (tmp != C320_KeyCode)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#168: FILE: drivers/char/moxa.c:339:
+			printk(KERN_ERR "moxa: bios upload failed -- CPU/Basic "

WARNING:SPLIT_STRING: quoted string split across lines
#169: FILE: drivers/char/moxa.c:340:
+			printk(KERN_ERR "moxa: bios upload failed -- CPU/Basic "
+					"module not found\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#177: FILE: drivers/char/moxa.c:348:
+	printk(KERN_ERR "moxa: bios upload failed -- board not found\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/char/moxa.c:353:
+static int moxa_load_320b(struct moxa_board_conf *brd, const u8 *ptr,
+		size_t len)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#187: FILE: drivers/char/moxa.c:358:
+		printk(KERN_ERR "moxa: invalid 320 bios -- too short\n");

CHECK:CAMELCASE: Avoid CamelCase: <DynPage_addr>
#193: FILE: drivers/char/moxa.c:364:
+	memcpy_toio(baseAddr + DynPage_addr, ptr, 7168);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/char/moxa.c:372:
+static int moxa_load_c218(struct moxa_board_conf *brd, const void *ptr,
+		size_t len)

CHECK:CAMELCASE: Avoid CamelCase: <C218_LoadBuf>
#224: FILE: drivers/char/moxa.c:395:
+			memcpy_toio(baseAddr + C218_LoadBuf, ptr + j,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/char/moxa.c:396:
+			memcpy_toio(baseAddr + C218_LoadBuf, ptr + j,
+					len2 << 1);

CHECK:CAMELCASE: Avoid CamelCase: <C218DLoad_len>
#228: FILE: drivers/char/moxa.c:399:
+			writew(len2, baseAddr + C218DLoad_len);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#233: FILE: drivers/char/moxa.c:404:
+				msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#244: FILE: drivers/char/moxa.c:415:
+			msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <Magic_no>
#253: FILE: drivers/char/moxa.c:424:
+		if (readw(baseAddr + Magic_no) == Magic_code)

CHECK:CAMELCASE: Avoid CamelCase: <Magic_code>
#253: FILE: drivers/char/moxa.c:424:
+		if (readw(baseAddr + Magic_no) == Magic_code)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#255: FILE: drivers/char/moxa.c:426:
+		msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <Disable_IRQ>
#260: FILE: drivers/char/moxa.c:431:
+	writew(1, baseAddr + Disable_IRQ);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#265: FILE: drivers/char/moxa.c:436:
+		msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <intNdx>
#271: FILE: drivers/char/moxa.c:442:
+	brd->intNdx = baseAddr + IRQindex;

CHECK:CAMELCASE: Avoid CamelCase: <IRQindex>
#271: FILE: drivers/char/moxa.c:442:
+	brd->intNdx = baseAddr + IRQindex;

CHECK:CAMELCASE: Avoid CamelCase: <intPend>
#272: FILE: drivers/char/moxa.c:443:
+	brd->intPend = baseAddr + IRQpending;

CHECK:CAMELCASE: Avoid CamelCase: <IRQpending>
#272: FILE: drivers/char/moxa.c:443:
+	brd->intPend = baseAddr + IRQpending;

CHECK:CAMELCASE: Avoid CamelCase: <intTable>
#273: FILE: drivers/char/moxa.c:444:
+	brd->intTable = baseAddr + IRQtable;

CHECK:CAMELCASE: Avoid CamelCase: <IRQtable>
#273: FILE: drivers/char/moxa.c:444:
+	brd->intTable = baseAddr + IRQtable;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/char/moxa.c:450:
+static int moxa_load_c320(struct moxa_board_conf *brd, const void *ptr,
+		size_t len)

CHECK:CAMELCASE: Avoid CamelCase: <C320_LoadBuf>
#298: FILE: drivers/char/moxa.c:469:
+			memcpy_toio(baseAddr + C320_LoadBuf, ptr + j,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/char/moxa.c:470:
+			memcpy_toio(baseAddr + C320_LoadBuf, ptr + j,
+					len2 << 1);

CHECK:CAMELCASE: Avoid CamelCase: <C320DLoad_len>
#301: FILE: drivers/char/moxa.c:472:
+			writew(len2, baseAddr + C320DLoad_len);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#306: FILE: drivers/char/moxa.c:477:
+				msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#317: FILE: drivers/char/moxa.c:488:
+			msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#328: FILE: drivers/char/moxa.c:499:
+		msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <busType>
#333: FILE: drivers/char/moxa.c:504:
+	if (brd->busType == MOXA_BUS_TYPE_PCI) {	/* ASIC board */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#347: FILE: drivers/char/moxa.c:518:
+		msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <Module_cnt>
#352: FILE: drivers/char/moxa.c:523:
+	j = readw(baseAddr + Module_cnt);

CHECK:CAMELCASE: Avoid CamelCase: <numPorts>
#355: FILE: drivers/char/moxa.c:526:
+	brd->numPorts = j * 8;

CHECK:CAMELCASE: Avoid CamelCase: <Module_no>
#356: FILE: drivers/char/moxa.c:527:
+	writew(j, baseAddr + Module_no);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#361: FILE: drivers/char/moxa.c:532:
+		msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/char/moxa.c:545:
+static int moxa_load_code(struct moxa_board_conf *brd, const void *ptr,
+		size_t len)

CHECK:CAMELCASE: Avoid CamelCase: <ofsAddr>
#376: FILE: drivers/char/moxa.c:547:
+	void __iomem *ofsAddr, *baseAddr = brd->basemem;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#381: FILE: drivers/char/moxa.c:552:
+		printk(KERN_ERR "moxa: C2XX bios length is not even\n");

CHECK:CAMELCASE: Avoid CamelCase: <chkPort>
#394: FILE: drivers/char/moxa.c:565:
+			port->chkPort = 1;

CHECK:CAMELCASE: Avoid CamelCase: <curBaud>
#395: FILE: drivers/char/moxa.c:566:
+			port->curBaud = 9600L;

CHECK:CAMELCASE: Avoid CamelCase: <DCDState>
#396: FILE: drivers/char/moxa.c:567:
+			port->DCDState = 0;

CHECK:CAMELCASE: Avoid CamelCase: <tableAddr>
#397: FILE: drivers/char/moxa.c:568:
+			port->tableAddr = baseAddr + Extern_table +

CHECK:CAMELCASE: Avoid CamelCase: <Extern_table>
#397: FILE: drivers/char/moxa.c:568:
+			port->tableAddr = baseAddr + Extern_table +

CHECK:CAMELCASE: Avoid CamelCase: <Extern_size>
#398: FILE: drivers/char/moxa.c:569:
+					Extern_size * i;

CHECK:CAMELCASE: Avoid CamelCase: <Page_rxb>
#402: FILE: drivers/char/moxa.c:573:
+			writew(C218rx_spage + i * C218buf_pageno, ofsAddr + Page_rxb);

CHECK:CAMELCASE: Avoid CamelCase: <EndPage_rxb>
#403: FILE: drivers/char/moxa.c:574:
+			writew(readw(ofsAddr + Page_rxb) + C218rx_pageno, ofsAddr + EndPage_rxb);

CHECK:CAMELCASE: Avoid CamelCase: <Page_txb>
#405: FILE: drivers/char/moxa.c:576:
+			writew(C218tx_spage + i * C218buf_pageno, ofsAddr + Page_txb);

CHECK:CAMELCASE: Avoid CamelCase: <EndPage_txb>
#406: FILE: drivers/char/moxa.c:577:
+			writew(readw(ofsAddr + Page_txb) + C218tx_pageno, ofsAddr + EndPage_txb);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#408: FILE: drivers/char/moxa.c:579:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#427: FILE: drivers/char/moxa.c:598:
+				writew(readw(ofsAddr + Page_rxb) + C320p8rx_pgno, ofsAddr + EndPage_rxb);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#429: FILE: drivers/char/moxa.c:600:
+				writew(readw(ofsAddr + Page_txb) + C320p8tx_pgno, ofsAddr + EndPage_txb);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#436: FILE: drivers/char/moxa.c:607:
+				writew(readw(ofsAddr + Page_rxb) + C320p16rx_pgno, ofsAddr + EndPage_rxb);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#438: FILE: drivers/char/moxa.c:609:
+				writew(readw(ofsAddr + Page_txb) + C320p16tx_pgno, ofsAddr + EndPage_txb);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#445: FILE: drivers/char/moxa.c:616:
+				writew(readw(ofsAddr + Page_rxb) + C320p24rx_pgno, ofsAddr + EndPage_rxb);

CHECK:CAMELCASE: Avoid CamelCase: <Ofs_txb>
#452: FILE: drivers/char/moxa.c:623:
+				writew(C320p32tx_ofs, ofsAddr + Ofs_txb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/char/moxa.c:678:
+		if (lens[a] && len + lens[a] <= fw->size &&
+				moxa_check_fw(&fw->data[len]))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#508: FILE: drivers/char/moxa.c:679:
+			printk(KERN_WARNING "moxa firmware: unexpected input "

WARNING:SPLIT_STRING: quoted string split across lines
#509: FILE: drivers/char/moxa.c:680:
+			printk(KERN_WARNING "moxa firmware: unexpected input "
+				"at offset %u, but going on\n", (u32)len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/char/moxa.c:690:
+		sprintf(rsn, "bad length: %u (should be %u)", (u32)fw->size,
+				(u32)len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#551: FILE: drivers/char/moxa.c:722:
+	printk(KERN_ERR "firmware failed to load, reason: %s\n", rsn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#576: FILE: drivers/char/moxa.c:747:
+		printk(KERN_ERR "request_firmware failed\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#588: FILE: drivers/char/moxa.c:759:
 static int __devinit moxa_pci_probe(struct pci_dev *pdev,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != MOXA_GET_CONF'
#1012: FILE: drivers/char/moxa.c:1641:
+		if ((cmd != MOXA_GET_CONF) && (cmd != MOXA_GETDATACOUNT) &&
+		    (cmd != MOXA_GET_IOQUEUE) && (cmd != MOXA_GET_MAJOR) &&
 		    (cmd != MOXA_GET_CUMAJOR) && (cmd != MOXA_GETMSTATUS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != MOXA_GETDATACOUNT'
#1012: FILE: drivers/char/moxa.c:1641:
+		if ((cmd != MOXA_GET_CONF) && (cmd != MOXA_GETDATACOUNT) &&
+		    (cmd != MOXA_GET_IOQUEUE) && (cmd != MOXA_GET_MAJOR) &&
 		    (cmd != MOXA_GET_CUMAJOR) && (cmd != MOXA_GETMSTATUS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != MOXA_GET_IOQUEUE'
#1012: FILE: drivers/char/moxa.c:1641:
+		if ((cmd != MOXA_GET_CONF) && (cmd != MOXA_GETDATACOUNT) &&
+		    (cmd != MOXA_GET_IOQUEUE) && (cmd != MOXA_GET_MAJOR) &&
 		    (cmd != MOXA_GET_CUMAJOR) && (cmd != MOXA_GETMSTATUS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != MOXA_GET_MAJOR'
#1012: FILE: drivers/char/moxa.c:1641:
+		if ((cmd != MOXA_GET_CONF) && (cmd != MOXA_GETDATACOUNT) &&
+		    (cmd != MOXA_GET_IOQUEUE) && (cmd != MOXA_GET_MAJOR) &&
 		    (cmd != MOXA_GET_CUMAJOR) && (cmd != MOXA_GETMSTATUS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != MOXA_GET_CUMAJOR'
#1012: FILE: drivers/char/moxa.c:1641:
+		if ((cmd != MOXA_GET_CONF) && (cmd != MOXA_GETDATACOUNT) &&
+		    (cmd != MOXA_GET_IOQUEUE) && (cmd != MOXA_GET_MAJOR) &&
 		    (cmd != MOXA_GET_CUMAJOR) && (cmd != MOXA_GETMSTATUS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != MOXA_GETMSTATUS'
#1012: FILE: drivers/char/moxa.c:1641:
+		if ((cmd != MOXA_GET_CONF) && (cmd != MOXA_GETDATACOUNT) &&
+		    (cmd != MOXA_GET_IOQUEUE) && (cmd != MOXA_GET_MAJOR) &&
 		    (cmd != MOXA_GET_CUMAJOR) && (cmd != MOXA_GETMSTATUS))

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1418: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1423: FILE: drivers/char/moxa.h:1:
+#ifndef MOXA_H_FILE

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <C218_ConfBase>
#1435: FILE: drivers/char/moxa.h:13:
+#define C218_ConfBase	0x800

CHECK:CAMELCASE: Avoid CamelCase: <C218_TestRx>
#1442: FILE: drivers/char/moxa.h:20:
+#define C218_TestRx	(C218_ConfBase + 0x10)	/* 8 bytes for 8 ports    */

CHECK:CAMELCASE: Avoid CamelCase: <C218_TestTx>
#1443: FILE: drivers/char/moxa.h:21:
+#define C218_TestTx	(C218_ConfBase + 0x18)	/* 8 bytes for 8 ports    */

CHECK:CAMELCASE: Avoid CamelCase: <C218_RXerr>
#1444: FILE: drivers/char/moxa.h:22:
+#define C218_RXerr	(C218_ConfBase + 0x20)	/* 8 bytes for 8 ports    */

CHECK:CAMELCASE: Avoid CamelCase: <C218_ErrFlag>
#1445: FILE: drivers/char/moxa.h:23:
+#define C218_ErrFlag	(C218_ConfBase + 0x28)	/* 8 bytes for 8 ports    */

CHECK:CAMELCASE: Avoid CamelCase: <C320_ConfBase>
#1454: FILE: drivers/char/moxa.h:32:
+#define C320_ConfBase	0x800

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1458: FILE: drivers/char/moxa.h:36:
+#define C320_status	C320_ConfBase + 0	/* BIOS running status    */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1459: FILE: drivers/char/moxa.h:37:
+#define C320_diag	C320_ConfBase + 2	/* diagnostic status      */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1460: FILE: drivers/char/moxa.h:38:
+#define C320_key	C320_ConfBase + 4	/* WORD (0320H for C320) */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1461: FILE: drivers/char/moxa.h:39:
+#define C320DLoad_len	C320_ConfBase + 6	/* WORD           */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1462: FILE: drivers/char/moxa.h:40:
+#define C320check_sum	C320_ConfBase + 8	/* WORD           */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1463: FILE: drivers/char/moxa.h:41:
+#define C320chksum_ok	C320_ConfBase + 0x0a	/* WORD (1:ok)            */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1464: FILE: drivers/char/moxa.h:42:
+#define C320bapi_len	C320_ConfBase + 0x0c	/* WORD           */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1465: FILE: drivers/char/moxa.h:43:
+#define C320UART_no	C320_ConfBase + 0x0e	/* WORD           */

CHECK:CAMELCASE: Avoid CamelCase: <FixPage_addr>
#1469: FILE: drivers/char/moxa.h:47:
+#define FixPage_addr	0x0000	/* starting addr of static page  */

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOTrig1>
#1525: FILE: drivers/char/moxa.h:103:
+#define	RxFIFOTrig1	0

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOTrig4>
#1526: FILE: drivers/char/moxa.h:104:
+#define	RxFIFOTrig4	1

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOTrig8>
#1527: FILE: drivers/char/moxa.h:105:
+#define	RxFIFOTrig8	2

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOTrig14>
#1528: FILE: drivers/char/moxa.h:106:
+#define	RxFIFOTrig14	3

CHECK:CAMELCASE: Avoid CamelCase: <Config_base>
#1535: FILE: drivers/char/moxa.h:113:
+#define Config_base	(DRAM_global + 0x108)

CHECK:CAMELCASE: Avoid CamelCase: <IntrRx>
#1544: FILE: drivers/char/moxa.h:122:
+#define IntrRx		0x01	/* receiver data O.K.             */

CHECK:CAMELCASE: Avoid CamelCase: <IntrTx>
#1545: FILE: drivers/char/moxa.h:123:
+#define IntrTx		0x02	/* transmit buffer empty  */

CHECK:CAMELCASE: Avoid CamelCase: <IntrFunc>
#1546: FILE: drivers/char/moxa.h:124:
+#define IntrFunc	0x04	/* function complete              */

CHECK:CAMELCASE: Avoid CamelCase: <IntrBreak>
#1547: FILE: drivers/char/moxa.h:125:
+#define IntrBreak	0x08	/* received break         */

CHECK:CAMELCASE: Avoid CamelCase: <IntrLine>
#1548: FILE: drivers/char/moxa.h:126:
+#define IntrLine	0x10	/* line status change

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1549: FILE: drivers/char/moxa.h:127:
+#define IntrLine	0x10	/* line status change
+				   for transmitter                */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1549: FILE: drivers/char/moxa.h:127:
+				   for transmitter                */

CHECK:CAMELCASE: Avoid CamelCase: <IntrIntr>
#1550: FILE: drivers/char/moxa.h:128:
+#define IntrIntr	0x20	/* received INTR code             */

CHECK:CAMELCASE: Avoid CamelCase: <IntrQuit>
#1551: FILE: drivers/char/moxa.h:129:
+#define IntrQuit	0x40	/* received QUIT code             */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1552: FILE: drivers/char/moxa.h:130:
+#define IntrEOF ^I0x80^I/* received EOF code              */$

CHECK:CAMELCASE: Avoid CamelCase: <IntrEOF>
#1552: FILE: drivers/char/moxa.h:130:
+#define IntrEOF 	0x80	/* received EOF code              */

WARNING:TYPO_SPELLING: 'tigger' may be misspelled - perhaps 'trigger'?
#1554: FILE: drivers/char/moxa.h:132:
+#define IntrRxTrigger 	0x100	/* rx data count reach tigger value */
                       	     	                       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1554: FILE: drivers/char/moxa.h:132:
+#define IntrRxTrigger ^I0x100^I/* rx data count reach tigger value */$

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxTrigger>
#1554: FILE: drivers/char/moxa.h:132:
+#define IntrRxTrigger 	0x100	/* rx data count reach tigger value */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1555: FILE: drivers/char/moxa.h:133:
+#define IntrTxTrigger ^I0x200^I/* tx data count below trigger value */$

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxTrigger>
#1555: FILE: drivers/char/moxa.h:133:
+#define IntrTxTrigger 	0x200	/* tx data count below trigger value */

CHECK:CAMELCASE: Avoid CamelCase: <Card_model_no>
#1558: FILE: drivers/char/moxa.h:136:
+#define Card_model_no	(Config_base + 2)

CHECK:CAMELCASE: Avoid CamelCase: <Total_ports>
#1559: FILE: drivers/char/moxa.h:137:
+#define Total_ports	(Config_base + 4)

CHECK:CAMELCASE: Avoid CamelCase: <Timer_10ms>
#1562: FILE: drivers/char/moxa.h:140:
+#define Timer_10ms	(Config_base + 14)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1572: FILE: drivers/char/moxa.h:150:
+#define Extern_table	0x400	/* Base address of the external table
+				   (24 words *    64) total 3K bytes

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1573: FILE: drivers/char/moxa.h:151:
+				   (24 words * 128) total 6K bytes */

CHECK:CAMELCASE: Avoid CamelCase: <RXrptr>
#1575: FILE: drivers/char/moxa.h:153:
+#define RXrptr		0x00	/* read pointer for RX buffer     */

CHECK:CAMELCASE: Avoid CamelCase: <RXwptr>
#1576: FILE: drivers/char/moxa.h:154:
+#define RXwptr		0x02	/* write pointer for RX buffer    */

CHECK:CAMELCASE: Avoid CamelCase: <TXrptr>
#1577: FILE: drivers/char/moxa.h:155:
+#define TXrptr		0x04	/* read pointer for TX buffer     */

CHECK:CAMELCASE: Avoid CamelCase: <TXwptr>
#1578: FILE: drivers/char/moxa.h:156:
+#define TXwptr		0x06	/* write pointer for TX buffer    */

CHECK:CAMELCASE: Avoid CamelCase: <HostStat>
#1579: FILE: drivers/char/moxa.h:157:
+#define HostStat	0x08	/* IRQ flag and general flag      */

CHECK:CAMELCASE: Avoid CamelCase: <FlagStat>
#1580: FILE: drivers/char/moxa.h:158:
+#define FlagStat	0x0A

CHECK:CAMELCASE: Avoid CamelCase: <FlowControl>
#1581: FILE: drivers/char/moxa.h:159:
+#define FlowControl	0x0C	/* B7 B6 B5 B4 B3 B2 B1 B0              */

CHECK:CAMELCASE: Avoid CamelCase: <Break_cnt>
#1587: FILE: drivers/char/moxa.h:165:
+#define Break_cnt	0x0E	/* received break count   */

CHECK:CAMELCASE: Avoid CamelCase: <CD180TXirq>
#1588: FILE: drivers/char/moxa.h:166:
+#define CD180TXirq	0x10	/* if non-0: enable TX irq        */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1589: FILE: drivers/char/moxa.h:167:
+#define RX_mask ^I0x12$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1590: FILE: drivers/char/moxa.h:168:
+#define TX_mask ^I0x14$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1591: FILE: drivers/char/moxa.h:169:
+#define Ofs_rxb ^I0x16$

CHECK:CAMELCASE: Avoid CamelCase: <Ofs_rxb>
#1591: FILE: drivers/char/moxa.h:169:
+#define Ofs_rxb 	0x16

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1592: FILE: drivers/char/moxa.h:170:
+#define Ofs_txb ^I0x18$

CHECK:CAMELCASE: Avoid CamelCase: <Data_error>
#1597: FILE: drivers/char/moxa.h:175:
+#define Data_error	0x22

CHECK:CAMELCASE: Avoid CamelCase: <RxTrigger>
#1598: FILE: drivers/char/moxa.h:176:
+#define RxTrigger	0x28

CHECK:CAMELCASE: Avoid CamelCase: <TxTrigger>
#1599: FILE: drivers/char/moxa.h:177:
+#define TxTrigger	0x2a

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1601: FILE: drivers/char/moxa.h:179:
+#define rRXwptr ^I0x34$

CHECK:CAMELCASE: Avoid CamelCase: <rRXwptr>
#1601: FILE: drivers/char/moxa.h:179:
+#define rRXwptr 	0x34

CHECK:CAMELCASE: Avoid CamelCase: <Low_water>
#1602: FILE: drivers/char/moxa.h:180:
+#define Low_water	0x36

CHECK:CAMELCASE: Avoid CamelCase: <FuncCode>
#1604: FILE: drivers/char/moxa.h:182:
+#define FuncCode	0x40

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1605: FILE: drivers/char/moxa.h:183:
+#define FuncArg ^I0x42$

CHECK:CAMELCASE: Avoid CamelCase: <FuncArg>
#1605: FILE: drivers/char/moxa.h:183:
+#define FuncArg 	0x42

CHECK:CAMELCASE: Avoid CamelCase: <FuncArg1>
#1606: FILE: drivers/char/moxa.h:184:
+#define FuncArg1	0x44

CHECK:CAMELCASE: Avoid CamelCase: <Page_size>
#1634: FILE: drivers/char/moxa.h:212:
+#define Page_size	0x2000

CHECK:CAMELCASE: Avoid CamelCase: <Page_mask>
#1635: FILE: drivers/char/moxa.h:213:
+#define Page_mask	(Page_size - 1)

CHECK:CAMELCASE: Avoid CamelCase: <WakeupRx>
#1668: FILE: drivers/char/moxa.h:246:
+#define WakeupRx	0x01

CHECK:CAMELCASE: Avoid CamelCase: <WakeupTx>
#1669: FILE: drivers/char/moxa.h:247:
+#define WakeupTx	0x02

CHECK:CAMELCASE: Avoid CamelCase: <WakeupBreak>
#1670: FILE: drivers/char/moxa.h:248:
+#define WakeupBreak	0x08

CHECK:CAMELCASE: Avoid CamelCase: <WakeupLine>
#1671: FILE: drivers/char/moxa.h:249:
+#define WakeupLine	0x10

CHECK:CAMELCASE: Avoid CamelCase: <WakeupIntr>
#1672: FILE: drivers/char/moxa.h:250:
+#define WakeupIntr	0x20

CHECK:CAMELCASE: Avoid CamelCase: <WakeupQuit>
#1673: FILE: drivers/char/moxa.h:251:
+#define WakeupQuit	0x40

CHECK:CAMELCASE: Avoid CamelCase: <WakeupEOF>
#1674: FILE: drivers/char/moxa.h:252:
+#define WakeupEOF	0x80	/* used in VTIME control */

CHECK:CAMELCASE: Avoid CamelCase: <WakeupRxTrigger>
#1675: FILE: drivers/char/moxa.h:253:
+#define WakeupRxTrigger	0x100

CHECK:CAMELCASE: Avoid CamelCase: <WakeupTxTrigger>
#1676: FILE: drivers/char/moxa.h:254:
+#define WakeupTxTrigger	0x200

CHECK:CAMELCASE: Avoid CamelCase: <Rx_over>
#1680: FILE: drivers/char/moxa.h:258:
+#define Rx_over		0x01

CHECK:CAMELCASE: Avoid CamelCase: <Xoff_state>
#1681: FILE: drivers/char/moxa.h:259:
+#define Xoff_state	0x02

CHECK:CAMELCASE: Avoid CamelCase: <Tx_flowOff>
#1682: FILE: drivers/char/moxa.h:260:
+#define Tx_flowOff	0x04

CHECK:CAMELCASE: Avoid CamelCase: <Tx_enable>
#1683: FILE: drivers/char/moxa.h:261:
+#define Tx_enable	0x08

CHECK:CAMELCASE: Avoid CamelCase: <Tx_FlowCtl>
#1692: FILE: drivers/char/moxa.h:270:
+#define Tx_FlowCtl	4

CHECK:CAMELCASE: Avoid CamelCase: <Rx_FlowCtl>
#1693: FILE: drivers/char/moxa.h:271:
+#define Rx_FlowCtl	8

CHECK:CAMELCASE: Avoid CamelCase: <LowWater>
#1696: FILE: drivers/char/moxa.h:274:
+#define LowWater	128

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000330987.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 41 warnings, 114 checks, 1650 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000330987.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
