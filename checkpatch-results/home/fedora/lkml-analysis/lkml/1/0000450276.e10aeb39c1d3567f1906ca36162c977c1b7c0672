WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#20: 
Subject: [PATCH 1/2] Generic Virtual Memmap suport for SPARSEMEM
                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#define pfn_to_page(pfn)     (vmemmap + (pfn))

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#define page_to_pfn(page)    ((page) - vmemmap)

WARNING:REPEATED_WORD: Possible repeated word: 'etc'
#59: 
for FLATMEM, DISCONTIG etc etc.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: mm/sparse.c:222:
+			alloc_pages_node(node, GFP_KERNEL,
+				get_order(size));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: mm/sparse.c:224:
+		BUG_ON(!page);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#125: FILE: mm/sparse.c:226:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: mm/sparse.c:231:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: mm/sparse.c:238:
+static void vmemmap_pop_pmd(pud_t *pud, unsigned long addr,
+				unsigned long end, int node)

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: mm/sparse.c:246:
+  ^I^Iif (pmd_none(*pmd)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: mm/sparse.c:246:
+  ^I^Iif (pmd_none(*pmd)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: mm/sparse.c:246:
+  ^I^Iif (pmd_none(*pmd)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: mm/sparse.c:247:
+  ^I^I^Ivoid *block;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: mm/sparse.c:247:
+  ^I^I^Ivoid *block;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: mm/sparse.c:247:
+  ^I^I^Ivoid *block;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: mm/sparse.c:252:
+			pte = pfn_pte(__pa(block) >> PAGE_SHIFT,
+						PAGE_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: mm/sparse.c:263:
+static void vmemmap_pop_pud(pgd_t *pgd, unsigned long addr,
+					unsigned long end, int node)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#169: FILE: mm/sparse.c:270:
+				pud++, addr += PUD_SIZE) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: mm/sparse.c:273:
+			pud_populate(&init_mm, pud,
+				vmemmap_alloc_block(PAGE_SIZE, node));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: mm/sparse.c:280:
+static void vmemmap_populate(struct page *start_page, unsigned long nr,
+								int node)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#188: FILE: mm/sparse.c:289:
+				pgd++, addr += PGDIR_SIZE) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: mm/sparse.c:292:
+			pgd_populate(&init_mm, pgd,
+				vmemmap_alloc_block(PAGE_SIZE, node));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000450276.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 9 warnings, 11 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000450276.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
