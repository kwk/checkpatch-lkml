WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: mm/stackdbg.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPLIT_STRING: quoted string split across lines
#100: FILE: mm/stackdbg.c:40:
+MODULE_PARM_DESC(stacksize, "maximum stack size in kb to trigger"
+			"[default=" STR(DEF_STACKSIZE) "]");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#104: FILE: mm/stackdbg.c:44:
+MODULE_PARM_DESC(mode, "monitor mode: 0=disabled, 1=enabled"
+			"[default=" STR(DEF_MODE) "]");

WARNING:SPLIT_STRING: quoted string split across lines
#108: FILE: mm/stackdbg.c:48:
+MODULE_PARM_DESC(ticks, "monitoring interval in ticks"
+			"[default=" STR(DEF_TICKS) "]");

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#118: FILE: mm/stackdbg.c:58:
+	v = simple_strtoul(opt, &p, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#127: FILE: mm/stackdbg.c:67:
+	v = simple_strtoul(opt, &p, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#136: FILE: mm/stackdbg.c:76:
+	v = simple_strtoul(opt, &p, 10);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#144: FILE: mm/stackdbg.c:84:
+__setup("stackmon=", stackmon_setup);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#156: FILE: mm/stackdbg.c:96:
+	if (mm == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#165: FILE: mm/stackdbg.c:105:
+		cur_stack = esp-t->stack_start;
 		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#167: FILE: mm/stackdbg.c:107:
+		cur_stack = t->stack_start-esp;
 		                          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#170: FILE: mm/stackdbg.c:110:
+		if (

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#171: FILE: mm/stackdbg.c:111:
+			(cur_stack >= stacksize*1024) &&
 			                       ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#174: FILE: mm/stackdbg.c:114:
+			printk(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: mm/stackdbg.c:114:
+			printk(

WARNING:SPLIT_STRING: quoted string split across lines
#176: FILE: mm/stackdbg.c:116:
+			"pid:%d (%s) tid:%d stack size %lu "
+			"exceeds max stack size.\n"

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#221: FILE: mm/stackdbg.c:161:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#238: FILE: mm/stackdbg.c:178:
+	printk(KERN_INFO "stack watch driver enabled with max stack %lu kb.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: mm/stackdbg.c:179:
+	printk(KERN_INFO "stack watch driver enabled with max stack %lu kb.\n",
+		stacksize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: mm/stackdbg.c:182:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#250: FILE: mm/stackdbg.c:190:
+		printk(KERN_INFO "stack watch driver disabled.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: mm/stackdbg.c:195:
+static ssize_t mode_store(struct kobject *kobj, struct kobj_attribute *attr,
+				const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#259: FILE: mm/stackdbg.c:199:
+	new_mode = simple_strtoul(buf, NULL, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: mm/stackdbg.c:212:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: mm/stackdbg.c:215:
+static ssize_t mode_show(struct kobject *kobj, struct kobj_attribute *attr,
+				char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: mm/stackdbg.c:221:
+static ssize_t stacksize_store(struct kobject *kobj,
+					struct kobj_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#286: FILE: mm/stackdbg.c:226:
+	new_stacksize = simple_strtoul(buf, NULL, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: mm/stackdbg.c:235:
+static ssize_t stacksize_show(struct kobject *kobj,
+				struct kobj_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: mm/stackdbg.c:241:
+static ssize_t ticks_store(struct kobject *kobj, struct kobj_attribute *attr,
+				const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#305: FILE: mm/stackdbg.c:245:
+	new_ticks = simple_strtoul(buf, NULL, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: mm/stackdbg.c:254:
+static ssize_t ticks_show(struct kobject *kobj, struct kobj_attribute *attr,
+				char *buf)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178090.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 17 checks, 341 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178090.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
