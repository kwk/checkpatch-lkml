CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#51: FILE: drivers/pci/dmar.c:663:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#57: FILE: drivers/pci/dmar.c:669:
+			return 1;
+		else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#69: FILE: drivers/pci/dmar.c:681:
+
+}

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#83: FILE: drivers/pci/dmar.c:695:
+			return 1;
+		else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#102: FILE: drivers/pci/dmar.c:714:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: drivers/pci/intel-iommu.h:243:
+#define QI_IOTLB_DID(did) ^I(((u64)did) << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: drivers/pci/intel-iommu.h:244:
+#define QI_IOTLB_DR(dr) ^I(((u64)dr) << 7)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: drivers/pci/intel-iommu.h:245:
+#define QI_IOTLB_DW(dw) ^I(((u64)dw) << 6)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: drivers/pci/intel-iommu.h:246:
+#define QI_IOTLB_GRAN(gran) ^I(((u64)gran) >> (DMA_TLB_FLUSH_GRANU_OFFSET-4))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#134: FILE: drivers/pci/intel-iommu.h:246:
+#define QI_IOTLB_GRAN(gran) 	(((u64)gran) >> (DMA_TLB_FLUSH_GRANU_OFFSET-4))
                             	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#142: FILE: drivers/pci/intel-iommu.h:254:
+#define QI_CC_GRAN(gran)	(((u64)gran) >> (DMA_CCMD_INVL_GRANU_OFFSET-4))
                         	                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: drivers/pci/intel-iommu.h:321:
+extern int qi_flush_context(struct intel_iommu *iommu, u16 did, u16 sid,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/pci/intel-iommu.h:322:
+^I^I^I        u8 fm, u64 type, int non_present_entry_flush);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/pci/intel-iommu.h:322:
+extern int qi_flush_context(struct intel_iommu *iommu, u16 did, u16 sid,
+			        u8 fm, u64 type, int non_present_entry_flush);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: drivers/pci/intel-iommu.h:323:
+extern int qi_flush_iotlb(struct intel_iommu *iommu, u16 did, u64 addr,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 8 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
