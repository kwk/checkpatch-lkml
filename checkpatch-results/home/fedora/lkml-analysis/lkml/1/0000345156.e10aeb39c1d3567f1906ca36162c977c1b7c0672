WARNING:TYPO_SPELLING: 'ommitted' may be misspelled - perhaps 'omitted'?
#83: FILE: Documentation/kernel-parameters.txt:817:
+			If this cmdline argument is ommitted, every softirq
 			                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#98: FILE: kernel/softirq.c:70:
+static int  default_prio = MAX_USER_RT_PRIO/2;
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: kernel/softirq.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#108: FILE: kernel/softirq.c:777:
+static const char *softirq_names [] =

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#108: FILE: kernel/softirq.c:777:
+static const char *softirq_names [] =

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#109: FILE: kernel/softirq.c:778:
+static const char *softirq_names [] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: kernel/softirq.c:779:
+  [HI_SOFTIRQ]^I^I= "high",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: kernel/softirq.c:780:
+  [SCHED_SOFTIRQ]^I= "sched",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: kernel/softirq.c:781:
+  [TIMER_SOFTIRQ]^I= "timer",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: kernel/softirq.c:782:
+  [NET_TX_SOFTIRQ]^I= "net-tx",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/softirq.c:783:
+  [NET_RX_SOFTIRQ]^I= "net-rx",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/softirq.c:784:
+  [BLOCK_SOFTIRQ]^I= "block",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/softirq.c:785:
+  [TASKLET_SOFTIRQ]^I= "tasklet",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/softirq.c:787:
+  [HRTIMER_SOFTIRQ]^I= "hrtimer",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/softirq.c:789:
+  [RCU_SOFTIRQ]^I^I= "rcu",$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "name"
#192: FILE: kernel/softirq.c:1083:
+		if (name != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#193: FILE: kernel/softirq.c:1084:
+			printk(KERN_INFO

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#194: FILE: kernel/softirq.c:1085:
+				"No priority specified for 'softirq-%s', " \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prio <= 0'
#197: FILE: kernel/softirq.c:1088:
+		if ((prio <= 0) || (prio >= MAX_USER_RT_PRIO))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prio >= MAX_USER_RT_PRIO'
#197: FILE: kernel/softirq.c:1088:
+		if ((prio <= 0) || (prio >= MAX_USER_RT_PRIO))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "name"
#200: FILE: kernel/softirq.c:1091:
+		if (name != NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#201: FILE: kernel/softirq.c:1092:
+			printk(KERN_INFO "Using priority %d for 'softirq-%s'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: kernel/softirq.c:1093:
+			printk(KERN_INFO "Using priority %d for 'softirq-%s'\n",
+				prio, name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#219: FILE: kernel/softirq.c:1110:
+	printk(KERN_INFO "Default softirq priority: %d\n", default_prio);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#233: FILE: kernel/softirq.c:1124:
+__setup("sirq_pmap=", softirq_prio_map_setup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345156.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 8 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345156.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
