WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: mincore.c:47:
+        struct file** file_struct)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: mincore.c:47:
+static long do_mincore(unsigned long addr, unsigned char *vec, unsigned long pages,
+        struct file** file_struct)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: mincore.c:47:
+        struct file** file_struct)$

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#60: FILE: mincore.c:47:
+        struct file** file_struct)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: mincore.c:69:
+    /* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: mincore.c:73:
+    if ( *file_struct == NULL && vma->vm_file )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#74: FILE: mincore.c:73:
+    if ( *file_struct == NULL && vma->vm_file )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#74: FILE: mincore.c:73:
+    if ( *file_struct == NULL && vma->vm_file )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!file_struct"
#74: FILE: mincore.c:73:
+    if ( *file_struct == NULL && vma->vm_file )

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: mincore.c:74:
+        *file_struct = vma->vm_file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: mincore.c:74:
+        *file_struct = vma->vm_file;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: mincore.c:79:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: mincore.c:79:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: mincore.c:131:
+    static struct file* file = NULL;$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#89: FILE: mincore.c:131:
+    static struct file* file = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#89: FILE: mincore.c:131:
+    static struct file* file = NULL;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452426.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 6 warnings, 2 checks, 44 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452426.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
