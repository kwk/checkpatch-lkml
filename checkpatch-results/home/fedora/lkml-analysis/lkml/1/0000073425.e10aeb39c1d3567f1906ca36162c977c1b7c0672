WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
[RFC PATCH 1/19] Target_Core_Mod Asymmetric Logical Unit Assignment (ALUA) support

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#47: 
This patch adds explict (via SET_TARGET_PORT_GROUPS) implict (via ConfigFS) ALUA support
                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#47: 
This patch adds explict (via SET_TARGET_PORT_GROUPS) implict (via ConfigFS) ALUA support
                                                     ^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'also'
#48: 
supporting all primary and secondary access states.  This also also supports both the 

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#60: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: drivers/target/target_core_alua.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'assigntment' may be misspelled - perhaps 'assignment'?
#68: FILE: drivers/target/target_core_alua.c:4:
+ * This file contains SPC-3 compliant asymmetric logical unit assigntment (ALUA)
                                                               ^^^^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: drivers/target/target_core_alua.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#87: FILE: drivers/target/target_core_alua.c:23:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/target/target_core_alua.c:64:
+	list_for_each_entry(tg_pt_gp, &T10_ALUA(su_dev)->tg_pt_gps_list,
+			tg_pt_gp_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#138: FILE: drivers/target/target_core_alua.c:74:
+		buf[off++] |= (atomic_read(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: drivers/target/target_core_alua.c:108:
+		list_for_each_entry(tg_pt_gp_mem, &tg_pt_gp->tg_pt_gp_mem_list,
+				tg_pt_gp_mem_list) {

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#202: FILE: drivers/target/target_core_alua.c:138:
+ * SET_TARGET_PORT_GROUPS for explict ALUA operation.
                               ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#223: FILE: drivers/target/target_core_alua.c:159:
+	 * Determine if explict ALUA via SET_TARGET_PORT_GROUPS is allowed
 	                ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#228: FILE: drivers/target/target_core_alua.c:164:
+		printk(KERN_ERR "Unable to access *l_tg_pt_gp_mem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#235: FILE: drivers/target/target_core_alua.c:171:
+		printk(KERN_ERR "Unable to access *l_l_tg_pt_gp\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#242: FILE: drivers/target/target_core_alua.c:178:
+		printk(KERN_INFO "Unable to process SET_TARGET_PORT_GROUPS"

WARNING:SPLIT_STRING: quoted string split across lines
#243: FILE: drivers/target/target_core_alua.c:179:
+		printk(KERN_INFO "Unable to process SET_TARGET_PORT_GROUPS"
+				" while TPGS_EXPLICT_ALUA is disabled\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/target/target_core_alua.c:227:
+			list_for_each_entry(tg_pt_gp,
+					&T10_ALUA(su_dev)->tg_pt_gps_list,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/target/target_core_alua.c:240:
+				ret = core_alua_do_port_transition(tg_pt_gp,
+						dev, l_port, nacl,

WARNING:TYPO_SPELLING: 'identifer' may be misspelled - perhaps 'identifier'?
#323: FILE: drivers/target/target_core_alua.c:259:
+			 * Locate the matching relative target port identifer
 			                                            ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/target/target_core_alua.c:264:
+			list_for_each_entry(port, &dev->dev_sep_list,
+							sep_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#335: FILE: drivers/target/target_core_alua.c:271:
+				ret = core_alua_set_tg_pt_secondary_state(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#358: FILE: drivers/target/target_core_alua.c:294:
+static inline int core_alua_state_optimized(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#370: FILE: drivers/target/target_core_alua.c:306:
+static inline int core_alua_state_nonoptimized(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#386: FILE: drivers/target/target_core_alua.c:322:
+static inline int core_alua_state_standby(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#434: FILE: drivers/target/target_core_alua.c:370:
+static inline int core_alua_state_unavailable(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#474: FILE: drivers/target/target_core_alua.c:410:
+static inline int core_alua_state_transition(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#509: FILE: drivers/target/target_core_alua.c:445:
+int core_alua_state_check_nop(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#520: FILE: drivers/target/target_core_alua.c:456:
+int core_alua_state_check(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#539: FILE: drivers/target/target_core_alua.c:475:
+		printk(KERN_INFO "ALUA: Got secondary offline status for local"

WARNING:SPLIT_STRING: quoted string split across lines
#540: FILE: drivers/target/target_core_alua.c:476:
+		printk(KERN_INFO "ALUA: Got secondary offline status for local"
+				" target port\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#545: FILE: drivers/target/target_core_alua.c:481:
+	 /*
+	 * Second, obtain the t10_alua_tg_pt_gp_member_t pointer to the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#557: FILE: drivers/target/target_core_alua.c:493:
+	 * Process ALUA_ACCESS_STATE_ACTIVE_OPTMIZED in a seperate conditional
 	                                                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'complier' may be misspelled - perhaps 'compiler'?
#558: FILE: drivers/target/target_core_alua.c:494:
+	 * statement so the complier knows explictly to check this case first.
 	                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'explictly' may be misspelled - perhaps 'explicitly'?
#558: FILE: drivers/target/target_core_alua.c:494:
+	 * statement so the complier knows explictly to check this case first.
 	                                   ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#579: FILE: drivers/target/target_core_alua.c:515:
+		printk(KERN_ERR "Unknown ALUA access state: 0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/target/target_core_alua.c:516:
+		printk(KERN_ERR "Unknown ALUA access state: 0x%02x\n",
+				out_alua_state);

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#588: FILE: drivers/target/target_core_alua.c:524:
+ * Check implict and explict ALUA state change request.
          ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#588: FILE: drivers/target/target_core_alua.c:524:
+ * Check implict and explict ALUA state change request.
                      ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#611: FILE: drivers/target/target_core_alua.c:547:
+		printk(KERN_ERR "Unknown ALUA access state: 0x%02x\n", state);

WARNING:TYPO_SPELLING: 'Explict' may be misspelled - perhaps 'Explicit'?
#644: FILE: drivers/target/target_core_alua.c:580:
+		return "Altered by Explict STPG";
 		                   ^^^^^^^

WARNING:TYPO_SPELLING: 'Implict' may be misspelled - perhaps 'Implicit'?
#646: FILE: drivers/target/target_core_alua.c:582:
+		return "Altered by Implict ALUA";
 		                   ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#658: FILE: drivers/target/target_core_alua.c:594:
+int core_alua_check_nonop_delay(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#684: FILE: drivers/target/target_core_alua.c:620:
+int core_alua_write_tpg_metadata(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#698: FILE: drivers/target/target_core_alua.c:634:
+		printk(KERN_ERR "filp_open(%s) for ALUA metadata failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: drivers/target/target_core_alua.c:635:
+		printk(KERN_ERR "filp_open(%s) for ALUA metadata failed\n",
+			path);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#712: FILE: drivers/target/target_core_alua.c:648:
+		printk(KERN_ERR "Error writing ALUA metadata file: %s\n", path);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#724: FILE: drivers/target/target_core_alua.c:660:
+int core_alua_update_tpg_primary_metadata(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: drivers/target/target_core_alua.c:673:
+	len = snprintf(md_buf, tg_pt_gp->tg_pt_gp_md_buf_len,
+			"tg_pt_gp_id=%hu\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/target/target_core_alua.c:680:
+	snprintf(path, 512, "/var/target/alua/tpgs_%s/%s",
+		&wwn->unit_serial[0],

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#750: FILE: drivers/target/target_core_alua.c:686:
+int core_alua_do_transition_tg_pt(

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#756: FILE: drivers/target/target_core_alua.c:692:
+	int explict)
 	    ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: drivers/target/target_core_alua.c:705:
+	atomic_set(&tg_pt_gp->tg_pt_gp_alua_access_state,
+			ALUA_ACCESS_STATE_TRANSITION);

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#770: FILE: drivers/target/target_core_alua.c:706:
+	tg_pt_gp->tg_pt_gp_alua_access_status = (explict) ?
 	                                         ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/target/target_core_alua.c:717:
+	list_for_each_entry(mem, &tg_pt_gp->tg_pt_gp_mem_list,
+				tg_pt_gp_mem_list) {

WARNING:TYPO_SPELLING: 'CHAGED' may be misspelled - perhaps 'CHANGED'?
#788: FILE: drivers/target/target_core_alua.c:724:
+		 * ACCESS STATE CHAGED.
 		                ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#803: FILE: drivers/target/target_core_alua.c:739:
+		list_for_each_entry(se_deve, &port->sep_alua_list,
+					alua_port_list) {

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#805: FILE: drivers/target/target_core_alua.c:741:
+			if (explict &&
 			    ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nacl != NULL'
#805: FILE: drivers/target/target_core_alua.c:741:
+			if (explict &&
+			   (nacl != NULL) && (nacl == lacl->se_lun_nacl) &&
+			   (l_port != NULL) && (l_port == port))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nacl == lacl->se_lun_nacl'
#805: FILE: drivers/target/target_core_alua.c:741:
+			if (explict &&
+			   (nacl != NULL) && (nacl == lacl->se_lun_nacl) &&
+			   (l_port != NULL) && (l_port == port))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l_port != NULL'
#805: FILE: drivers/target/target_core_alua.c:741:
+			if (explict &&
+			   (nacl != NULL) && (nacl == lacl->se_lun_nacl) &&
+			   (l_port != NULL) && (l_port == port))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l_port == port'
#805: FILE: drivers/target/target_core_alua.c:741:
+			if (explict &&
+			   (nacl != NULL) && (nacl == lacl->se_lun_nacl) &&
+			   (l_port != NULL) && (l_port == port))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/target/target_core_alua.c:742:
+			if (explict &&
+			   (nacl != NULL) && (nacl == lacl->se_lun_nacl) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nacl"
#806: FILE: drivers/target/target_core_alua.c:742:
+			   (nacl != NULL) && (nacl == lacl->se_lun_nacl) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l_port"
#807: FILE: drivers/target/target_core_alua.c:743:
+			   (l_port != NULL) && (l_port == port))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/target/target_core_alua.c:747:
+			core_scsi3_ua_allocate(lacl->se_lun_nacl,
+				se_deve->mapped_lun, 0x2A,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/target/target_core_alua.c:772:
+		core_alua_update_tpg_primary_metadata(tg_pt_gp,
+					new_state, md_buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#844: FILE: drivers/target/target_core_alua.c:780:
+	printk(KERN_INFO "Successful %s ALUA transition TG PT Group: %s ID: %hu"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#844: FILE: drivers/target/target_core_alua.c:780:
+	printk(KERN_INFO "Successful %s ALUA transition TG PT Group: %s ID: %hu"
+		" from primary access state %s to %s\n", (explict) ? "explict" :
+		"implict", config_item_name(&tg_pt_gp->tg_pt_gp_group.cg_item),
+		tg_pt_gp->tg_pt_gp_id, core_alua_dump_state(old_state),
+		core_alua_dump_state(new_state));

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#845: FILE: drivers/target/target_core_alua.c:781:
+		" from primary access state %s to %s\n", (explict) ? "explict" :
 		                                          ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#845: FILE: drivers/target/target_core_alua.c:781:
+		" from primary access state %s to %s\n", (explict) ? "explict" :
 		                                                      ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#845: FILE: drivers/target/target_core_alua.c:781:
+	printk(KERN_INFO "Successful %s ALUA transition TG PT Group: %s ID: %hu"
+		" from primary access state %s to %s\n", (explict) ? "explict" :

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#846: FILE: drivers/target/target_core_alua.c:782:
+		"implict", config_item_name(&tg_pt_gp->tg_pt_gp_group.cg_item),
 		 ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#853: FILE: drivers/target/target_core_alua.c:789:
+int core_alua_do_port_transition(

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#859: FILE: drivers/target/target_core_alua.c:795:
+	int explict)
 	    ^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#876: FILE: drivers/target/target_core_alua.c:812:
+		printk("Unable to allocate buf for ALUA metadata\n");

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#897: FILE: drivers/target/target_core_alua.c:833:
+					md_buf, new_state, explict);
 					                   ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: drivers/target/target_core_alua.c:833:
+		core_alua_do_transition_tg_pt(l_tg_pt_gp, l_port, l_nacl,
+					md_buf, new_state, explict);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/target/target_core_alua.c:846:
+	list_for_each_entry(lu_gp_mem, &lu_gp->lu_gp_mem_list,
+				lu_gp_mem_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#911: FILE: drivers/target/target_core_alua.c:847:
+				lu_gp_mem_list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: drivers/target/target_core_alua.c:856:
+		list_for_each_entry(tg_pt_gp,
+				&T10_ALUA(su_dev)->tg_pt_gps_list,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#922: FILE: drivers/target/target_core_alua.c:858:
+				tg_pt_gp_list) {
+

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#951: FILE: drivers/target/target_core_alua.c:887:
+					nacl, md_buf, new_state, explict);
 					                         ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#951: FILE: drivers/target/target_core_alua.c:887:
+			core_alua_do_transition_tg_pt(tg_pt_gp, port,
+					nacl, md_buf, new_state, explict);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#965: FILE: drivers/target/target_core_alua.c:901:
+	printk(KERN_INFO "Successfully processed LU Group: %s all ALUA TG PT"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#965: FILE: drivers/target/target_core_alua.c:901:
+	printk(KERN_INFO "Successfully processed LU Group: %s all ALUA TG PT"
+		" Group IDs: %hu %s transition to primary state: %s\n",
+		config_item_name(&lu_gp->lu_gp_group.cg_item),
+		l_tg_pt_gp->tg_pt_gp_id, (explict) ? "explict" : "implict",
+		core_alua_dump_state(new_state));

WARNING:SPLIT_STRING: quoted string split across lines
#966: FILE: drivers/target/target_core_alua.c:902:
+	printk(KERN_INFO "Successfully processed LU Group: %s all ALUA TG PT"
+		" Group IDs: %hu %s transition to primary state: %s\n",

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#968: FILE: drivers/target/target_core_alua.c:904:
+		l_tg_pt_gp->tg_pt_gp_id, (explict) ? "explict" : "implict",
 		                          ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#968: FILE: drivers/target/target_core_alua.c:904:
+		l_tg_pt_gp->tg_pt_gp_id, (explict) ? "explict" : "implict",
 		                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#968: FILE: drivers/target/target_core_alua.c:904:
+		l_tg_pt_gp->tg_pt_gp_id, (explict) ? "explict" : "implict",
 		                                                  ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#980: FILE: drivers/target/target_core_alua.c:916:
+int core_alua_update_tpg_secondary_metadata(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#994: FILE: drivers/target/target_core_alua.c:930:
+	len = snprintf(wwn, 512, "%s",
+			TPG_TFO(se_tpg)->tpg_get_wwn(se_tpg));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tpg_get_tag"
#996: FILE: drivers/target/target_core_alua.c:932:
+	if (TPG_TFO(se_tpg)->tpg_get_tag != NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#997: FILE: drivers/target/target_core_alua.c:933:
+		snprintf(wwn+len, 1024-len, "+%hu",
 		            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#997: FILE: drivers/target/target_core_alua.c:933:
+		snprintf(wwn+len, 1024-len, "+%hu",
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: drivers/target/target_core_alua.c:934:
+		snprintf(wwn+len, 1024-len, "+%hu",
+				TPG_TFO(se_tpg)->tpg_get_tag(se_tpg));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1006: FILE: drivers/target/target_core_alua.c:942:
+	snprintf(path, 512, "/var/target/alua/%s/%s/lun_%u",
+			TPG_TFO(se_tpg)->get_fabric_name(), wwn,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1012: FILE: drivers/target/target_core_alua.c:948:
+int core_alua_set_tg_pt_secondary_state(

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#1015: FILE: drivers/target/target_core_alua.c:951:
+	int explict,
 	    ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1027: FILE: drivers/target/target_core_alua.c:963:
+		printk(KERN_ERR "Unable to complete secondary state"

WARNING:SPLIT_STRING: quoted string split across lines
#1028: FILE: drivers/target/target_core_alua.c:964:
+		printk(KERN_ERR "Unable to complete secondary state"
+				" transition\n");

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#1042: FILE: drivers/target/target_core_alua.c:978:
+	port->sep_tg_pt_secondary_stat = (explict) ?
 	                                  ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1046: FILE: drivers/target/target_core_alua.c:982:
+	printk(KERN_INFO "Successful %s ALUA transition TG PT Group: %s ID: %hu"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1046: FILE: drivers/target/target_core_alua.c:982:
+	printk(KERN_INFO "Successful %s ALUA transition TG PT Group: %s ID: %hu"
+		" to secondary access state: %s\n", (explict) ? "explict" :
+		"implict", config_item_name(&tg_pt_gp->tg_pt_gp_group.cg_item),
+		tg_pt_gp->tg_pt_gp_id, (offline) ? "OFFLINE" : "ONLINE");

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#1047: FILE: drivers/target/target_core_alua.c:983:
+		" to secondary access state: %s\n", (explict) ? "explict" :
 		                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#1047: FILE: drivers/target/target_core_alua.c:983:
+		" to secondary access state: %s\n", (explict) ? "explict" :
 		                                                 ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1047: FILE: drivers/target/target_core_alua.c:983:
+	printk(KERN_INFO "Successful %s ALUA transition TG PT Group: %s ID: %hu"
+		" to secondary access state: %s\n", (explict) ? "explict" :

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#1048: FILE: drivers/target/target_core_alua.c:984:
+		"implict", config_item_name(&tg_pt_gp->tg_pt_gp_group.cg_item),
 		 ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1065: FILE: drivers/target/target_core_alua.c:1001:
+			printk(KERN_ERR "Unable to allocate md_buf for"

WARNING:SPLIT_STRING: quoted string split across lines
#1066: FILE: drivers/target/target_core_alua.c:1002:
+			printk(KERN_ERR "Unable to allocate md_buf for"
+				" secondary ALUA access metadata\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/target/target_core_alua.c:1007:
+		core_alua_update_tpg_secondary_metadata(tg_pt_gp_mem, port,
+				md_buf, md_buf_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1086: FILE: drivers/target/target_core_alua.c:1022:
+		printk(KERN_ERR "Unable to allocate t10_alua_lu_gp_t\n");

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1095: FILE: drivers/target/target_core_alua.c:1031:
+		lu_gp->lu_gp_id = se_global->alua_lu_gps_counter++;;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1111: FILE: drivers/target/target_core_alua.c:1047:
+		printk(KERN_ERR "ALUA LU Group already has a valid ID,"

WARNING:SPLIT_STRING: quoted string split across lines
#1112: FILE: drivers/target/target_core_alua.c:1048:
+		printk(KERN_ERR "ALUA LU Group already has a valid ID,"
+			" ignoring request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1118: FILE: drivers/target/target_core_alua.c:1054:
+		printk(KERN_ERR "Maximum ALUA se_global->alua_lu_gps_count:"

WARNING:SPLIT_STRING: quoted string split across lines
#1119: FILE: drivers/target/target_core_alua.c:1055:
+		printk(KERN_ERR "Maximum ALUA se_global->alua_lu_gps_count:"
+				" 0x0000ffff reached\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1133: FILE: drivers/target/target_core_alua.c:1069:
+			printk(KERN_ERR "ALUA Logical Unit Group ID: %hu"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1133: FILE: drivers/target/target_core_alua.c:1069:
+			printk(KERN_ERR "ALUA Logical Unit Group ID: %hu"
+				" already exists, ignoring request\n",
+				lu_gp_id);

WARNING:SPLIT_STRING: quoted string split across lines
#1134: FILE: drivers/target/target_core_alua.c:1070:
+			printk(KERN_ERR "ALUA Logical Unit Group ID: %hu"
+				" already exists, ignoring request\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1150: FILE: drivers/target/target_core_alua.c:1086:
+t10_alua_lu_gp_member_t *core_alua_allocate_lu_gp_mem(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1157: FILE: drivers/target/target_core_alua.c:1093:
+		printk(KERN_ERR "Unable to allocate t10_alua_lu_gp_member_t\n");

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1192: FILE: drivers/target/target_core_alua.c:1128:
+		msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1199: FILE: drivers/target/target_core_alua.c:1135:
+	list_for_each_entry_safe(lu_gp_mem, lu_gp_mem_tmp,
+				&lu_gp->lu_gp_mem_list, lu_gp_mem_list) {

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#1208: FILE: drivers/target/target_core_alua.c:1144:
+		 * lu_gp_mem is assoicated with a single
 		                ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1218: FILE: drivers/target/target_core_alua.c:1154:
+			__core_alua_attach_lu_gp_mem(lu_gp_mem,
+					se_global->default_lu_gp);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1245: FILE: drivers/target/target_core_alua.c:1181:
+		msleep(10);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1295: FILE: drivers/target/target_core_alua.c:1231:
+void __core_alua_attach_lu_gp_mem(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1310: FILE: drivers/target/target_core_alua.c:1246:
+void __core_alua_drop_lu_gp_mem(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1322: FILE: drivers/target/target_core_alua.c:1258:
+t10_alua_tg_pt_gp_t *core_alua_allocate_tg_pt_gp(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1331: FILE: drivers/target/target_core_alua.c:1267:
+		printk(KERN_ERR "Unable to allocate t10_alua_tg_pt_gp_t\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1342: FILE: drivers/target/target_core_alua.c:1278:
+	atomic_set(&tg_pt_gp->tg_pt_gp_alua_access_state,
+		ALUA_ACCESS_STATE_ACTIVE_OPTMIZED);

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#1344: FILE: drivers/target/target_core_alua.c:1280:
+	 * Enable both explict and implict ALUA support by default
 	               ^^^^^^^

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#1344: FILE: drivers/target/target_core_alua.c:1280:
+	 * Enable both explict and implict ALUA support by default
 	                           ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1368: FILE: drivers/target/target_core_alua.c:1304:
+int core_alua_set_tg_pt_gp_id(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1379: FILE: drivers/target/target_core_alua.c:1315:
+		printk(KERN_ERR "ALUA TG PT Group already has a valid ID,"

WARNING:SPLIT_STRING: quoted string split across lines
#1380: FILE: drivers/target/target_core_alua.c:1316:
+		printk(KERN_ERR "ALUA TG PT Group already has a valid ID,"
+			" ignoring request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1386: FILE: drivers/target/target_core_alua.c:1322:
+		printk(KERN_ERR "Maximum ALUA alua_tg_pt_gps_count:"

WARNING:SPLIT_STRING: quoted string split across lines
#1387: FILE: drivers/target/target_core_alua.c:1323:
+		printk(KERN_ERR "Maximum ALUA alua_tg_pt_gps_count:"
+			" 0x0000ffff reached\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1397: FILE: drivers/target/target_core_alua.c:1333:
+	list_for_each_entry(tg_pt_gp_tmp, &T10_ALUA(su_dev)->tg_pt_gps_list,
+			tg_pt_gp_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1402: FILE: drivers/target/target_core_alua.c:1338:
+			printk(KERN_ERR "ALUA Target Port Group ID: %hu already"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1402: FILE: drivers/target/target_core_alua.c:1338:
+			printk(KERN_ERR "ALUA Target Port Group ID: %hu already"
+				" exists, ignoring request\n", tg_pt_gp_id);

WARNING:SPLIT_STRING: quoted string split across lines
#1403: FILE: drivers/target/target_core_alua.c:1339:
+			printk(KERN_ERR "ALUA Target Port Group ID: %hu already"
+				" exists, ignoring request\n", tg_pt_gp_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1412: FILE: drivers/target/target_core_alua.c:1348:
+	list_add_tail(&tg_pt_gp->tg_pt_gp_list,
+			&T10_ALUA(su_dev)->tg_pt_gps_list);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1419: FILE: drivers/target/target_core_alua.c:1355:
+t10_alua_tg_pt_gp_member_t *core_alua_allocate_tg_pt_gp_mem(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1425: FILE: drivers/target/target_core_alua.c:1361:
+	tg_pt_gp_mem = kmem_cache_zalloc(t10_alua_tg_pt_gp_mem_cache,
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1427: FILE: drivers/target/target_core_alua.c:1363:
+		printk(KERN_ERR "Unable to allocate t10_alua_tg_pt_gp_member_t\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1441: FILE: drivers/target/target_core_alua.c:1377:
+void core_alua_free_tg_pt_gp(

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#1451: FILE: drivers/target/target_core_alua.c:1387:
+	 * no assications *OR* explict ALUA via SET_TARGET_PORT_GROUPS
 	                       ^^^^^^^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1465: FILE: drivers/target/target_core_alua.c:1401:
+		msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1472: FILE: drivers/target/target_core_alua.c:1408:
+	list_for_each_entry_safe(tg_pt_gp_mem, tg_pt_gp_mem_tmp,
+			&tg_pt_gp->tg_pt_gp_mem_list, tg_pt_gp_mem_list) {

WARNING:TYPO_SPELLING: 'assoicated' may be misspelled - perhaps 'associated'?
#1480: FILE: drivers/target/target_core_alua.c:1416:
+		 * tg_pt_gp_mem is assoicated with a single
 		                   ^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1489: FILE: drivers/target/target_core_alua.c:1425:
+		if (tg_pt_gp != T10_ALUA(su_dev)->default_tg_pt_gp) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1491: FILE: drivers/target/target_core_alua.c:1427:
+			__core_alua_attach_tg_pt_gp_mem(tg_pt_gp_mem,
+					T10_ALUA(su_dev)->default_tg_pt_gp);

CHECK:BRACES: Unbalanced braces around else statement
#1492: FILE: drivers/target/target_core_alua.c:1428:
+		} else

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1518: FILE: drivers/target/target_core_alua.c:1454:
+		msleep(10);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1537: FILE: drivers/target/target_core_alua.c:1473:
+t10_alua_tg_pt_gp_t *core_alua_get_tg_pt_gp_by_name(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1546: FILE: drivers/target/target_core_alua.c:1482:
+	list_for_each_entry(tg_pt_gp, &T10_ALUA(su_dev)->tg_pt_gps_list,
+			tg_pt_gp_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1561: FILE: drivers/target/target_core_alua.c:1497:
+void core_alua_put_tg_pt_gp_from_name(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1574: FILE: drivers/target/target_core_alua.c:1510:
+void __core_alua_attach_tg_pt_gp_mem(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1582: FILE: drivers/target/target_core_alua.c:1518:
+	list_add_tail(&tg_pt_gp_mem->tg_pt_gp_mem_list,
+			&tg_pt_gp->tg_pt_gp_mem_list);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1590: FILE: drivers/target/target_core_alua.c:1526:
+void __core_alua_drop_tg_pt_gp_mem(

WARNING:SPLIT_STRING: quoted string split across lines
#1623: FILE: drivers/target/target_core_alua.c:1559:
+		len += sprintf(page, "TG Port Alias: %s\nTG Port Group ID:"
+			" %hu\nTG Port Primary Access State: %s\nTG Port "

WARNING:SPLIT_STRING: quoted string split across lines
#1624: FILE: drivers/target/target_core_alua.c:1560:
+			" %hu\nTG Port Primary Access State: %s\nTG Port "
+			"Primary Access Status: %s\nTG Port Secondary Access"

WARNING:SPLIT_STRING: quoted string split across lines
#1625: FILE: drivers/target/target_core_alua.c:1561:
+			"Primary Access Status: %s\nTG Port Secondary Access"
+			" State: %s\nTG Port Secondary Access Status: %s\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1627: FILE: drivers/target/target_core_alua.c:1563:
+			core_alua_dump_state(atomic_read(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1629: FILE: drivers/target/target_core_alua.c:1565:
+			core_alua_dump_status(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1641: FILE: drivers/target/target_core_alua.c:1577:
+ssize_t core_alua_store_tg_pt_gp_info(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1658: FILE: drivers/target/target_core_alua.c:1594:
+		printk(KERN_WARNING "SPC3_ALUA_EMULATED not enabled for"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1658: FILE: drivers/target/target_core_alua.c:1594:
+		printk(KERN_WARNING "SPC3_ALUA_EMULATED not enabled for"
+			" %s/tpgt_%hu/%s\n", TPG_TFO(tpg)->tpg_get_wwn(tpg),
+			TPG_TFO(tpg)->tpg_get_tag(tpg),
+			config_item_name(&lun->lun_group.cg_item));

WARNING:SPLIT_STRING: quoted string split across lines
#1659: FILE: drivers/target/target_core_alua.c:1595:
+		printk(KERN_WARNING "SPC3_ALUA_EMULATED not enabled for"
+			" %s/tpgt_%hu/%s\n", TPG_TFO(tpg)->tpg_get_wwn(tpg),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1666: FILE: drivers/target/target_core_alua.c:1602:
+		printk(KERN_ERR "ALUA Target Port Group alias too large!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1682: FILE: drivers/target/target_core_alua.c:1618:
+		tg_pt_gp_new = core_alua_get_tg_pt_gp_by_name(su_dev,
+					strstrip(buf));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1690: FILE: drivers/target/target_core_alua.c:1626:
+		printk(KERN_ERR "NULL se_port_t->sep_alua_tg_pt_gp_mem pointer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1702: FILE: drivers/target/target_core_alua.c:1638:
+			printk(KERN_INFO "Target_Core_ConfigFS: Moving"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1702: FILE: drivers/target/target_core_alua.c:1638:
+			printk(KERN_INFO "Target_Core_ConfigFS: Moving"
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"
+				" alua/%s, ID: %hu back to"
+				" default_tg_pt_gp\n",
+				TPG_TFO(tpg)->tpg_get_wwn(tpg),
+				TPG_TFO(tpg)->tpg_get_tag(tpg),
+				config_item_name(&lun->lun_group.cg_item),
+				config_item_name(
+					&tg_pt_gp->tg_pt_gp_group.cg_item),
+				tg_pt_gp->tg_pt_gp_id);

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1702: FILE: drivers/target/target_core_alua.c:1638:
+			printk(KERN_INFO "Target_Core_ConfigFS: Moving"
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"
+				" alua/%s, ID: %hu back to"
+				" default_tg_pt_gp\n",
+				TPG_TFO(tpg)->tpg_get_wwn(tpg),
+				TPG_TFO(tpg)->tpg_get_tag(tpg),
+				config_item_name(&lun->lun_group.cg_item),
+				config_item_name(
+					&tg_pt_gp->tg_pt_gp_group.cg_item),
+				tg_pt_gp->tg_pt_gp_id);

WARNING:SPLIT_STRING: quoted string split across lines
#1703: FILE: drivers/target/target_core_alua.c:1639:
+			printk(KERN_INFO "Target_Core_ConfigFS: Moving"
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"

WARNING:SPLIT_STRING: quoted string split across lines
#1704: FILE: drivers/target/target_core_alua.c:1640:
+				" %s/tpgt_%hu/%s from ALUA Target Port Group:"
+				" alua/%s, ID: %hu back to"

WARNING:SPLIT_STRING: quoted string split across lines
#1705: FILE: drivers/target/target_core_alua.c:1641:
+				" alua/%s, ID: %hu back to"
+				" default_tg_pt_gp\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1709: FILE: drivers/target/target_core_alua.c:1645:
+				config_item_name(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1715: FILE: drivers/target/target_core_alua.c:1651:
+			__core_alua_attach_tg_pt_gp_mem(tg_pt_gp_mem,
+					T10_ALUA(su_dev)->default_tg_pt_gp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1731: FILE: drivers/target/target_core_alua.c:1667:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1731: FILE: drivers/target/target_core_alua.c:1667:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"
+		" Group: alua/%s, ID: %hu\n", (move) ?
+		"Moving" : "Adding", TPG_TFO(tpg)->tpg_get_wwn(tpg),
+		TPG_TFO(tpg)->tpg_get_tag(tpg),
+		config_item_name(&lun->lun_group.cg_item),
+		config_item_name(&tg_pt_gp_new->tg_pt_gp_group.cg_item),
+		tg_pt_gp_new->tg_pt_gp_id);

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1731: FILE: drivers/target/target_core_alua.c:1667:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"
+		" Group: alua/%s, ID: %hu\n", (move) ?
+		"Moving" : "Adding", TPG_TFO(tpg)->tpg_get_wwn(tpg),
+		TPG_TFO(tpg)->tpg_get_tag(tpg),
+		config_item_name(&lun->lun_group.cg_item),
+		config_item_name(&tg_pt_gp_new->tg_pt_gp_group.cg_item),
+		tg_pt_gp_new->tg_pt_gp_id);

WARNING:SPLIT_STRING: quoted string split across lines
#1732: FILE: drivers/target/target_core_alua.c:1668:
+	printk("Target_Core_ConfigFS: %s %s/tpgt_%hu/%s to ALUA Target Port"
+		" Group: alua/%s, ID: %hu\n", (move) ?

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1744: FILE: drivers/target/target_core_alua.c:1680:
+ssize_t core_alua_show_access_type(

WARNING:TYPO_SPELLING: 'Implict' may be misspelled - perhaps 'Implicit'?
#1750: FILE: drivers/target/target_core_alua.c:1686:
+		return sprintf(page, "Implict and Explict\n");
 		                      ^^^^^^^

WARNING:TYPO_SPELLING: 'Explict' may be misspelled - perhaps 'Explicit'?
#1750: FILE: drivers/target/target_core_alua.c:1686:
+		return sprintf(page, "Implict and Explict\n");
 		                                  ^^^^^^^

WARNING:TYPO_SPELLING: 'Implict' may be misspelled - perhaps 'Implicit'?
#1752: FILE: drivers/target/target_core_alua.c:1688:
+		return sprintf(page, "Implict\n");
 		                      ^^^^^^^

WARNING:TYPO_SPELLING: 'Explict' may be misspelled - perhaps 'Explicit'?
#1754: FILE: drivers/target/target_core_alua.c:1690:
+		return sprintf(page, "Explict\n");
 		                      ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1759: FILE: drivers/target/target_core_alua.c:1695:
+ssize_t core_alua_store_access_type(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1767: FILE: drivers/target/target_core_alua.c:1703:
+	ret = strict_strtoul(page, 0, &tmp);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1769: FILE: drivers/target/target_core_alua.c:1705:
+		printk(KERN_ERR "Unable to extract alua_access_type\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 0'
#1772: FILE: drivers/target/target_core_alua.c:1708:
+	if ((tmp != 0) && (tmp != 1) && (tmp != 2) && (tmp != 3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 1'
#1772: FILE: drivers/target/target_core_alua.c:1708:
+	if ((tmp != 0) && (tmp != 1) && (tmp != 2) && (tmp != 3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 2'
#1772: FILE: drivers/target/target_core_alua.c:1708:
+	if ((tmp != 0) && (tmp != 1) && (tmp != 2) && (tmp != 3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 3'
#1772: FILE: drivers/target/target_core_alua.c:1708:
+	if ((tmp != 0) && (tmp != 1) && (tmp != 2) && (tmp != 3)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1773: FILE: drivers/target/target_core_alua.c:1709:
+		printk(KERN_ERR "Illegal value for alua_access_type:"

WARNING:SPLIT_STRING: quoted string split across lines
#1774: FILE: drivers/target/target_core_alua.c:1710:
+		printk(KERN_ERR "Illegal value for alua_access_type:"
+				" %lu\n", tmp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1790: FILE: drivers/target/target_core_alua.c:1726:
+ssize_t core_alua_show_nonop_delay_msecs(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1797: FILE: drivers/target/target_core_alua.c:1733:
+ssize_t core_alua_store_nonop_delay_msecs(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1805: FILE: drivers/target/target_core_alua.c:1741:
+	ret = strict_strtoul(page, 0, &tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1807: FILE: drivers/target/target_core_alua.c:1743:
+		printk(KERN_ERR "Unable to extract nonop_delay_msecs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1811: FILE: drivers/target/target_core_alua.c:1747:
+		printk(KERN_ERR "Passed nonop_delay_msecs: %lu, exceeds"

WARNING:SPLIT_STRING: quoted string split across lines
#1812: FILE: drivers/target/target_core_alua.c:1748:
+		printk(KERN_ERR "Passed nonop_delay_msecs: %lu, exceeds"
+			" ALUA_MAX_NONOP_DELAY_MSECS: %d\n", tmp,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1821: FILE: drivers/target/target_core_alua.c:1757:
+ssize_t core_alua_show_trans_delay_msecs(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1828: FILE: drivers/target/target_core_alua.c:1764:
+ssize_t core_alua_store_trans_delay_msecs(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1836: FILE: drivers/target/target_core_alua.c:1772:
+	ret = strict_strtoul(page, 0, &tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1838: FILE: drivers/target/target_core_alua.c:1774:
+		printk(KERN_ERR "Unable to extract trans_delay_msecs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1842: FILE: drivers/target/target_core_alua.c:1778:
+		printk(KERN_ERR "Passed trans_delay_msecs: %lu, exceeds"

WARNING:SPLIT_STRING: quoted string split across lines
#1843: FILE: drivers/target/target_core_alua.c:1779:
+		printk(KERN_ERR "Passed trans_delay_msecs: %lu, exceeds"
+			" ALUA_MAX_TRANS_DELAY_MSECS: %d\n", tmp,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1852: FILE: drivers/target/target_core_alua.c:1788:
+ssize_t core_alua_show_preferred_bit(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1859: FILE: drivers/target/target_core_alua.c:1795:
+ssize_t core_alua_store_preferred_bit(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1867: FILE: drivers/target/target_core_alua.c:1803:
+	ret = strict_strtoul(page, 0, &tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1869: FILE: drivers/target/target_core_alua.c:1805:
+		printk(KERN_ERR "Unable to extract preferred ALUA value\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 0'
#1872: FILE: drivers/target/target_core_alua.c:1808:
+	if ((tmp != 0) && (tmp != 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 1'
#1872: FILE: drivers/target/target_core_alua.c:1808:
+	if ((tmp != 0) && (tmp != 1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1873: FILE: drivers/target/target_core_alua.c:1809:
+		printk(KERN_ERR "Illegal value for preferred ALUA: %lu\n", tmp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1891: FILE: drivers/target/target_core_alua.c:1827:
+ssize_t core_alua_store_offline_bit(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1903: FILE: drivers/target/target_core_alua.c:1839:
+	ret = strict_strtoul(page, 0, &tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1905: FILE: drivers/target/target_core_alua.c:1841:
+		printk(KERN_ERR "Unable to extract alua_tg_pt_offline value\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 0'
#1908: FILE: drivers/target/target_core_alua.c:1844:
+	if ((tmp != 0) && (tmp != 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 1'
#1908: FILE: drivers/target/target_core_alua.c:1844:
+	if ((tmp != 0) && (tmp != 1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1909: FILE: drivers/target/target_core_alua.c:1845:
+		printk(KERN_ERR "Illegal value for alua_tg_pt_offline: %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1910: FILE: drivers/target/target_core_alua.c:1846:
+		printk(KERN_ERR "Illegal value for alua_tg_pt_offline: %lu\n",
+				tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1915: FILE: drivers/target/target_core_alua.c:1851:
+		printk(KERN_ERR "Unable to locate *tg_pt_gp_mem\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1920: FILE: drivers/target/target_core_alua.c:1856:
+	ret = core_alua_set_tg_pt_secondary_state(tg_pt_gp_mem,
+			lun->lun_sep, 0, (int)tmp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1928: FILE: drivers/target/target_core_alua.c:1864:
+ssize_t core_alua_show_secondary_status(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1936: FILE: drivers/target/target_core_alua.c:1872:
+ssize_t core_alua_store_secondary_status(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1944: FILE: drivers/target/target_core_alua.c:1880:
+	ret = strict_strtoul(page, 0, &tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1946: FILE: drivers/target/target_core_alua.c:1882:
+		printk(KERN_ERR "Unable to extract alua_tg_pt_status\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != ALUA_STATUS_NONE'
#1949: FILE: drivers/target/target_core_alua.c:1885:
+	if ((tmp != ALUA_STATUS_NONE) &&
+	    (tmp != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG) &&
+	    (tmp != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG'
#1949: FILE: drivers/target/target_core_alua.c:1885:
+	if ((tmp != ALUA_STATUS_NONE) &&
+	    (tmp != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG) &&
+	    (tmp != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA'
#1949: FILE: drivers/target/target_core_alua.c:1885:
+	if ((tmp != ALUA_STATUS_NONE) &&
+	    (tmp != ALUA_STATUS_ALTERED_BY_EXPLICT_STPG) &&
+	    (tmp != ALUA_STATUS_ALTERED_BY_IMPLICT_ALUA)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1952: FILE: drivers/target/target_core_alua.c:1888:
+		printk(KERN_ERR "Illegal value for alua_tg_pt_status: %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1953: FILE: drivers/target/target_core_alua.c:1889:
+		printk(KERN_ERR "Illegal value for alua_tg_pt_status: %lu\n",
+				tmp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1962: FILE: drivers/target/target_core_alua.c:1898:
+ssize_t core_alua_show_secondary_write_metadata(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1971: FILE: drivers/target/target_core_alua.c:1907:
+ssize_t core_alua_store_secondary_write_metadata(

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#1979: FILE: drivers/target/target_core_alua.c:1915:
+	ret = strict_strtoul(page, 0, &tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1981: FILE: drivers/target/target_core_alua.c:1917:
+		printk(KERN_ERR "Unable to extract alua_tg_pt_write_md\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 0'
#1984: FILE: drivers/target/target_core_alua.c:1920:
+	if ((tmp != 0) && (tmp != 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != 1'
#1984: FILE: drivers/target/target_core_alua.c:1920:
+	if ((tmp != 0) && (tmp != 1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1985: FILE: drivers/target/target_core_alua.c:1921:
+		printk(KERN_ERR "Illegal value for alua_tg_pt_write_md:"

WARNING:SPLIT_STRING: quoted string split across lines
#1986: FILE: drivers/target/target_core_alua.c:1922:
+		printk(KERN_ERR "Illegal value for alua_tg_pt_write_md:"
+				" %lu\n", tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2010: FILE: drivers/target/target_core_alua.c:1946:
+		printk(KERN_INFO "%s: Using SPC_ALUA_PASSTHROUGH, no ALUA"

WARNING:SPLIT_STRING: quoted string split across lines
#2011: FILE: drivers/target/target_core_alua.c:1947:
+		printk(KERN_INFO "%s: Using SPC_ALUA_PASSTHROUGH, no ALUA"
+			" emulation\n", TRANSPORT(dev)->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2019: FILE: drivers/target/target_core_alua.c:1955:
+		printk(KERN_INFO "%s: Enabling ALUA Emulation for SPC-3"

WARNING:SPLIT_STRING: quoted string split across lines
#2020: FILE: drivers/target/target_core_alua.c:1956:
+		printk(KERN_INFO "%s: Enabling ALUA Emulation for SPC-3"
+			" device\n", TRANSPORT(dev)->name);

WARNING:TYPO_SPELLING: 'Assoicate' may be misspelled - perhaps 'Associate'?
#2022: FILE: drivers/target/target_core_alua.c:1958:
+		 * Assoicate this se_device_t with the default ALUA
 		   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2033: FILE: drivers/target/target_core_alua.c:1969:
+		__core_alua_attach_lu_gp_mem(lu_gp_mem,
+				se_global->default_lu_gp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2036: FILE: drivers/target/target_core_alua.c:1972:
+		printk(KERN_INFO "%s: Adding to default ALUA LU Group:"

WARNING:SPLIT_STRING: quoted string split across lines
#2037: FILE: drivers/target/target_core_alua.c:1973:
+		printk(KERN_INFO "%s: Adding to default ALUA LU Group:"
+			" core/alua/lu_gps/default_lu_gp\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2042: FILE: drivers/target/target_core_alua.c:1978:
+		printk("%s: Disabling ALUA Emulation for SPC-2 device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2043: FILE: drivers/target/target_core_alua.c:1979:
+		printk("%s: Disabling ALUA Emulation for SPC-2 device\n",
+				TRANSPORT(dev)->name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2054: FILE: include/target/target_core_alua.h:1:
+#ifndef TARGET_CORE_ALUA_H

WARNING:TYPO_SPELLING: 'Assignement' may be misspelled - perhaps 'Assignment'?
#2088: FILE: include/target/target_core_alua.h:35:
+ * From spc4r17, Table D.1: ASC and ASCQ Assignement
                                          ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#2102: FILE: include/target/target_core_alua.h:49:
+ * Used for implict and explict ALUA transitional delay, that is disabled
             ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#2102: FILE: include/target/target_core_alua.h:49:
+ * Used for implict and explict ALUA transitional delay, that is disabled
                         ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2108: FILE: include/target/target_core_alua.h:55:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2116: FILE: include/target/target_core_alua.h:63:
+extern int core_scsi3_emulate_report_target_port_groups(struct se_cmd_s *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#2116: FILE: include/target/target_core_alua.h:63:
+extern int core_scsi3_emulate_report_target_port_groups(struct se_cmd_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2117: FILE: include/target/target_core_alua.h:64:
+extern int core_scsi3_emulate_set_target_port_groups(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#2117: FILE: include/target/target_core_alua.h:64:
+extern int core_scsi3_emulate_set_target_port_groups(struct se_cmd_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2118: FILE: include/target/target_core_alua.h:65:
+extern int core_alua_check_transition(int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2118: FILE: include/target/target_core_alua.h:65:
+extern int core_alua_check_transition(int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#2118: FILE: include/target/target_core_alua.h:65:
+extern int core_alua_check_transition(int, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2119: FILE: include/target/target_core_alua.h:66:
+extern int core_alua_check_nonop_delay(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#2119: FILE: include/target/target_core_alua.h:66:
+extern int core_alua_check_nonop_delay(struct se_cmd_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2120: FILE: include/target/target_core_alua.h:67:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2121: FILE: include/target/target_core_alua.h:68:
+extern int core_alua_do_transition_tg_pt(struct t10_alua_tg_pt_gp_s *,
+				struct se_port_s *, struct se_node_acl_s *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2123: FILE: include/target/target_core_alua.h:70:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2124: FILE: include/target/target_core_alua.h:71:
+extern int core_alua_do_port_transition(struct t10_alua_tg_pt_gp_s *,
+				struct se_device_s *, struct se_port_s *,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2126: FILE: include/target/target_core_alua.h:73:
+extern int core_alua_set_tg_pt_secondary_state(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2126: FILE: include/target/target_core_alua.h:73:
+extern int core_alua_set_tg_pt_secondary_state(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_member_s *' should also have an identifier name
#2126: FILE: include/target/target_core_alua.h:73:
+extern int core_alua_set_tg_pt_secondary_state(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_port_t *' should also have an identifier name
#2126: FILE: include/target/target_core_alua.h:73:
+extern int core_alua_set_tg_pt_secondary_state(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2126: FILE: include/target/target_core_alua.h:73:
+extern int core_alua_set_tg_pt_secondary_state(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2126: FILE: include/target/target_core_alua.h:73:
+extern int core_alua_set_tg_pt_secondary_state(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2128: FILE: include/target/target_core_alua.h:75:
+extern char *core_alua_dump_state(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2128: FILE: include/target/target_core_alua.h:75:
+extern char *core_alua_dump_state(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2129: FILE: include/target/target_core_alua.h:76:
+extern char *core_alua_dump_status(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2129: FILE: include/target/target_core_alua.h:76:
+extern char *core_alua_dump_status(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2130: FILE: include/target/target_core_alua.h:77:
+extern struct t10_alua_lu_gp_s *core_alua_allocate_lu_gp(const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2130: FILE: include/target/target_core_alua.h:77:
+extern struct t10_alua_lu_gp_s *core_alua_allocate_lu_gp(const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2130: FILE: include/target/target_core_alua.h:77:
+extern struct t10_alua_lu_gp_s *core_alua_allocate_lu_gp(const char *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2131: FILE: include/target/target_core_alua.h:78:
+extern int core_alua_set_lu_gp_id(struct t10_alua_lu_gp_s *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#2131: FILE: include/target/target_core_alua.h:78:
+extern int core_alua_set_lu_gp_id(struct t10_alua_lu_gp_s *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#2131: FILE: include/target/target_core_alua.h:78:
+extern int core_alua_set_lu_gp_id(struct t10_alua_lu_gp_s *, u16);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2132: FILE: include/target/target_core_alua.h:79:
+extern struct t10_alua_lu_gp_member_s *core_alua_allocate_lu_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2132: FILE: include/target/target_core_alua.h:79:
+extern struct t10_alua_lu_gp_member_s *core_alua_allocate_lu_gp_mem(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#2132: FILE: include/target/target_core_alua.h:79:
+extern struct t10_alua_lu_gp_member_s *core_alua_allocate_lu_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2134: FILE: include/target/target_core_alua.h:81:
+extern void core_alua_free_lu_gp(struct t10_alua_lu_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#2134: FILE: include/target/target_core_alua.h:81:
+extern void core_alua_free_lu_gp(struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2135: FILE: include/target/target_core_alua.h:82:
+extern void core_alua_free_lu_gp_mem(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#2135: FILE: include/target/target_core_alua.h:82:
+extern void core_alua_free_lu_gp_mem(struct se_device_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2136: FILE: include/target/target_core_alua.h:83:
+extern struct t10_alua_lu_gp_s *core_alua_get_lu_gp_by_name(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2136: FILE: include/target/target_core_alua.h:83:
+extern struct t10_alua_lu_gp_s *core_alua_get_lu_gp_by_name(const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2137: FILE: include/target/target_core_alua.h:84:
+extern void core_alua_put_lu_gp_from_name(struct t10_alua_lu_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#2137: FILE: include/target/target_core_alua.h:84:
+extern void core_alua_put_lu_gp_from_name(struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2138: FILE: include/target/target_core_alua.h:85:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_member_s *' should also have an identifier name
#2138: FILE: include/target/target_core_alua.h:85:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#2138: FILE: include/target/target_core_alua.h:85:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2139: FILE: include/target/target_core_alua.h:86:
+extern void __core_alua_attach_lu_gp_mem(struct t10_alua_lu_gp_member_s *,
+					struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2140: FILE: include/target/target_core_alua.h:87:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_member_s *' should also have an identifier name
#2140: FILE: include/target/target_core_alua.h:87:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_lu_gp_s *' should also have an identifier name
#2140: FILE: include/target/target_core_alua.h:87:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2141: FILE: include/target/target_core_alua.h:88:
+extern void __core_alua_drop_lu_gp_mem(struct t10_alua_lu_gp_member_s *,
+					struct t10_alua_lu_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2142: FILE: include/target/target_core_alua.h:89:
+extern void core_alua_drop_lu_gp_dev(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#2142: FILE: include/target/target_core_alua.h:89:
+extern void core_alua_drop_lu_gp_dev(struct se_device_s *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2143: FILE: include/target/target_core_alua.h:90:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2143: FILE: include/target/target_core_alua.h:90:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_subsystem_dev_s *' should also have an identifier name
#2143: FILE: include/target/target_core_alua.h:90:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2143: FILE: include/target/target_core_alua.h:90:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2143: FILE: include/target/target_core_alua.h:90:
+extern struct t10_alua_tg_pt_gp_s *core_alua_allocate_tg_pt_gp(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2145: FILE: include/target/target_core_alua.h:92:
+extern int core_alua_set_tg_pt_gp_id(struct t10_alua_tg_pt_gp_s *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2145: FILE: include/target/target_core_alua.h:92:
+extern int core_alua_set_tg_pt_gp_id(struct t10_alua_tg_pt_gp_s *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#2145: FILE: include/target/target_core_alua.h:92:
+extern int core_alua_set_tg_pt_gp_id(struct t10_alua_tg_pt_gp_s *, u16);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2146: FILE: include/target/target_core_alua.h:93:
+extern struct t10_alua_tg_pt_gp_member_s *core_alua_allocate_tg_pt_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2146: FILE: include/target/target_core_alua.h:93:
+extern struct t10_alua_tg_pt_gp_member_s *core_alua_allocate_tg_pt_gp_mem(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#2146: FILE: include/target/target_core_alua.h:93:
+extern struct t10_alua_tg_pt_gp_member_s *core_alua_allocate_tg_pt_gp_mem(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2148: FILE: include/target/target_core_alua.h:95:
+extern void core_alua_free_tg_pt_gp(struct t10_alua_tg_pt_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2148: FILE: include/target/target_core_alua.h:95:
+extern void core_alua_free_tg_pt_gp(struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2149: FILE: include/target/target_core_alua.h:96:
+extern void core_alua_free_tg_pt_gp_mem(struct se_port_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#2149: FILE: include/target/target_core_alua.h:96:
+extern void core_alua_free_tg_pt_gp_mem(struct se_port_s *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2150: FILE: include/target/target_core_alua.h:97:
+extern struct t10_alua_tg_pt_gp_s *core_alua_get_tg_pt_gp_by_name(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2150: FILE: include/target/target_core_alua.h:97:
+extern struct t10_alua_tg_pt_gp_s *core_alua_get_tg_pt_gp_by_name(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_subsystem_dev_s *' should also have an identifier name
#2150: FILE: include/target/target_core_alua.h:97:
+extern struct t10_alua_tg_pt_gp_s *core_alua_get_tg_pt_gp_by_name(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2150: FILE: include/target/target_core_alua.h:97:
+extern struct t10_alua_tg_pt_gp_s *core_alua_get_tg_pt_gp_by_name(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2152: FILE: include/target/target_core_alua.h:99:
+extern void core_alua_put_tg_pt_gp_from_name(struct t10_alua_tg_pt_gp_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2152: FILE: include/target/target_core_alua.h:99:
+extern void core_alua_put_tg_pt_gp_from_name(struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2153: FILE: include/target/target_core_alua.h:100:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_member_s *' should also have an identifier name
#2153: FILE: include/target/target_core_alua.h:100:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2153: FILE: include/target/target_core_alua.h:100:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2154: FILE: include/target/target_core_alua.h:101:
+extern void __core_alua_attach_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,
+					struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2155: FILE: include/target/target_core_alua.h:102:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_member_s *' should also have an identifier name
#2155: FILE: include/target/target_core_alua.h:102:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2155: FILE: include/target/target_core_alua.h:102:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2156: FILE: include/target/target_core_alua.h:103:
+extern void __core_alua_drop_tg_pt_gp_mem(struct t10_alua_tg_pt_gp_member_s *,
+					struct t10_alua_tg_pt_gp_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2157: FILE: include/target/target_core_alua.h:104:
+extern ssize_t core_alua_show_tg_pt_gp_info(struct se_port_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#2157: FILE: include/target/target_core_alua.h:104:
+extern ssize_t core_alua_show_tg_pt_gp_info(struct se_port_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2157: FILE: include/target/target_core_alua.h:104:
+extern ssize_t core_alua_show_tg_pt_gp_info(struct se_port_s *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2158: FILE: include/target/target_core_alua.h:105:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_port_s *' should also have an identifier name
#2158: FILE: include/target/target_core_alua.h:105:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2158: FILE: include/target/target_core_alua.h:105:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2158: FILE: include/target/target_core_alua.h:105:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: include/target/target_core_alua.h:106:
+extern ssize_t core_alua_store_tg_pt_gp_info(struct se_port_s *, const char *,
+						size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2160: FILE: include/target/target_core_alua.h:107:
+extern ssize_t core_alua_show_access_type(struct t10_alua_tg_pt_gp_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2160: FILE: include/target/target_core_alua.h:107:
+extern ssize_t core_alua_show_access_type(struct t10_alua_tg_pt_gp_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2160: FILE: include/target/target_core_alua.h:107:
+extern ssize_t core_alua_show_access_type(struct t10_alua_tg_pt_gp_s *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2161: FILE: include/target/target_core_alua.h:108:
+extern ssize_t core_alua_store_access_type(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2161: FILE: include/target/target_core_alua.h:108:
+extern ssize_t core_alua_store_access_type(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2161: FILE: include/target/target_core_alua.h:108:
+extern ssize_t core_alua_store_access_type(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2161: FILE: include/target/target_core_alua.h:108:
+extern ssize_t core_alua_store_access_type(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2162: FILE: include/target/target_core_alua.h:109:
+extern ssize_t core_alua_store_access_type(struct t10_alua_tg_pt_gp_s *,
+					const char *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2163: FILE: include/target/target_core_alua.h:110:
+extern ssize_t core_alua_show_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2163: FILE: include/target/target_core_alua.h:110:
+extern ssize_t core_alua_show_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2163: FILE: include/target/target_core_alua.h:110:
+extern ssize_t core_alua_show_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2165: FILE: include/target/target_core_alua.h:112:
+extern ssize_t core_alua_store_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2165: FILE: include/target/target_core_alua.h:112:
+extern ssize_t core_alua_store_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2165: FILE: include/target/target_core_alua.h:112:
+extern ssize_t core_alua_store_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2165: FILE: include/target/target_core_alua.h:112:
+extern ssize_t core_alua_store_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2166: FILE: include/target/target_core_alua.h:113:
+extern ssize_t core_alua_store_nonop_delay_msecs(struct t10_alua_tg_pt_gp_s *,
+					const char *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2167: FILE: include/target/target_core_alua.h:114:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2167: FILE: include/target/target_core_alua.h:114:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2167: FILE: include/target/target_core_alua.h:114:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2168: FILE: include/target/target_core_alua.h:115:
+extern ssize_t core_alua_show_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,
+					char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2169: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2169: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2169: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2169: FILE: include/target/target_core_alua.h:116:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2170: FILE: include/target/target_core_alua.h:117:
+extern ssize_t core_alua_store_trans_delay_msecs(struct t10_alua_tg_pt_gp_s *,
+					const char *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2171: FILE: include/target/target_core_alua.h:118:
+extern ssize_t core_alua_show_preferred_bit(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2171: FILE: include/target/target_core_alua.h:118:
+extern ssize_t core_alua_show_preferred_bit(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2171: FILE: include/target/target_core_alua.h:118:
+extern ssize_t core_alua_show_preferred_bit(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2172: FILE: include/target/target_core_alua.h:119:
+extern ssize_t core_alua_show_preferred_bit(struct t10_alua_tg_pt_gp_s *,
+					char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2173: FILE: include/target/target_core_alua.h:120:
+extern ssize_t core_alua_store_preferred_bit(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_alua_tg_pt_gp_s *' should also have an identifier name
#2173: FILE: include/target/target_core_alua.h:120:
+extern ssize_t core_alua_store_preferred_bit(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2173: FILE: include/target/target_core_alua.h:120:
+extern ssize_t core_alua_store_preferred_bit(struct t10_alua_tg_pt_gp_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2173: FILE: include/target/target_core_alua.h:120:
+extern ssize_t core_alua_store_preferred_bit(struct t10_alua_tg_pt_gp_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2174: FILE: include/target/target_core_alua.h:121:
+extern ssize_t core_alua_store_preferred_bit(struct t10_alua_tg_pt_gp_s *,
+					const char *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2175: FILE: include/target/target_core_alua.h:122:
+extern ssize_t core_alua_show_offline_bit(struct se_lun_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#2175: FILE: include/target/target_core_alua.h:122:
+extern ssize_t core_alua_show_offline_bit(struct se_lun_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2175: FILE: include/target/target_core_alua.h:122:
+extern ssize_t core_alua_show_offline_bit(struct se_lun_s *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2176: FILE: include/target/target_core_alua.h:123:
+extern ssize_t core_alua_store_offline_bit(struct se_lun_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#2176: FILE: include/target/target_core_alua.h:123:
+extern ssize_t core_alua_store_offline_bit(struct se_lun_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2176: FILE: include/target/target_core_alua.h:123:
+extern ssize_t core_alua_store_offline_bit(struct se_lun_s *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2176: FILE: include/target/target_core_alua.h:123:
+extern ssize_t core_alua_store_offline_bit(struct se_lun_s *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2177: FILE: include/target/target_core_alua.h:124:
+extern ssize_t core_alua_store_offline_bit(struct se_lun_s *, const char *,
+					size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2178: FILE: include/target/target_core_alua.h:125:
+extern ssize_t core_alua_show_secondary_status(struct se_lun_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#2178: FILE: include/target/target_core_alua.h:125:
+extern ssize_t core_alua_show_secondary_status(struct se_lun_s *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2178: FILE: include/target/target_core_alua.h:125:
+extern ssize_t core_alua_show_secondary_status(struct se_lun_s *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2179: FILE: include/target/target_core_alua.h:126:
+extern ssize_t core_alua_store_secondary_status(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#2179: FILE: include/target/target_core_alua.h:126:
+extern ssize_t core_alua_store_secondary_status(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2179: FILE: include/target/target_core_alua.h:126:
+extern ssize_t core_alua_store_secondary_status(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2179: FILE: include/target/target_core_alua.h:126:
+extern ssize_t core_alua_store_secondary_status(struct se_lun_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2180: FILE: include/target/target_core_alua.h:127:
+extern ssize_t core_alua_store_secondary_status(struct se_lun_s *,
+					const char *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2181: FILE: include/target/target_core_alua.h:128:
+extern ssize_t core_alua_show_secondary_write_metadata(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#2181: FILE: include/target/target_core_alua.h:128:
+extern ssize_t core_alua_show_secondary_write_metadata(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2181: FILE: include/target/target_core_alua.h:128:
+extern ssize_t core_alua_show_secondary_write_metadata(struct se_lun_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2182: FILE: include/target/target_core_alua.h:129:
+extern ssize_t core_alua_show_secondary_write_metadata(struct se_lun_s *,
+					char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2183: FILE: include/target/target_core_alua.h:130:
+extern ssize_t core_alua_store_secondary_write_metadata(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#2183: FILE: include/target/target_core_alua.h:130:
+extern ssize_t core_alua_store_secondary_write_metadata(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2183: FILE: include/target/target_core_alua.h:130:
+extern ssize_t core_alua_store_secondary_write_metadata(struct se_lun_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2183: FILE: include/target/target_core_alua.h:130:
+extern ssize_t core_alua_store_secondary_write_metadata(struct se_lun_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2184: FILE: include/target/target_core_alua.h:131:
+extern ssize_t core_alua_store_secondary_write_metadata(struct se_lun_s *,
+					const char *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2185: FILE: include/target/target_core_alua.h:132:
+extern int core_setup_alua(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#2185: FILE: include/target/target_core_alua.h:132:
+extern int core_setup_alua(struct se_device_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 241 warnings, 178 checks, 2117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
