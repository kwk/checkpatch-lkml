ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: drivers/ata/Makefile:92:
+quiet_cmd_ata-cmds = ATA-CMD $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: drivers/ata/ata-commands.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#93: FILE: drivers/ata/ata-commands.c:21:
+typedef int bool;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#211: FILE: drivers/ata/bitops.c:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: drivers/ata/bitops.c:18:
+static unsigned maxbit, allocbit;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: drivers/ata/bitops.c:20:
+static void expand_array(unsigned bit)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#232: FILE: drivers/ata/bitops.c:22:
+	unsigned size;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#251: FILE: drivers/ata/bitops.c:41:
+void set_bit(unsigned bit)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#257: FILE: drivers/ata/bitops.c:47:
+static const char *sep(unsigned i, unsigned w)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#257: FILE: drivers/ata/bitops.c:47:
+static const char *sep(unsigned i, unsigned w)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#268: FILE: drivers/ata/bitops.c:58:
+	unsigned i, words = (maxbit + 32) / 32;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/ata/bitops.c:63:
+		fprintf(file, "0x%08x%08xULL,%s", array[i + 1], array[i],
+							sep(i + 1, words));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#276: FILE: drivers/ata/bitops.c:66:
+	for (i = 0; i < words; i++) {
+		fprintf(file, "0x%08x,%s", array[i], sep(i, words));
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#286: FILE: drivers/ata/bitops.c:76:
+	maxbit = allocbit = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#294: FILE: drivers/ata/bitops.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#299: FILE: drivers/ata/bitops.h:6:
+extern void set_bit(unsigned bit);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: drivers/ata/bitops.h:6:
+extern void set_bit(unsigned bit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: drivers/ata/bitops.h:9:
+extern void output_array(FILE *file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: drivers/ata/bitops.h:12:
+extern void free_array(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#323: FILE: drivers/ata/libata-core.c:612:
+unsigned ata_sect_size(u8 command, unsigned dev_sect_size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#323: FILE: drivers/ata/libata-core.c:612:
+unsigned ata_sect_size(u8 command, unsigned dev_sect_size)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#333: FILE: drivers/ata/libata-core.c:622:
+		printk(KERN_ERR "Unknown ata cmd %d, assuming "

WARNING:SPLIT_STRING: quoted string split across lines
#334: FILE: drivers/ata/libata-core.c:623:
+		printk(KERN_ERR "Unknown ata cmd %d, assuming "
+				"512 byte sector size\n", command);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#379: FILE: drivers/ata/libata-core.c:2355:
+	 * a problem around 2050 or so.  Deal with it then.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#406: FILE: drivers/ata/libata-core.c:2490:
+			ata_dev_printk(dev, KERN_ERR, "sector size %lld not "
+					"supported.\n", dev->sect_size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#447: FILE: drivers/ata/libata-scsi.c:488:
+		unsigned sect_size = ata_sect_size(args[0], sdev->sector_size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: drivers/ata/libata-scsi.c:489:
+		unsigned sect_size = ata_sect_size(args[0], sdev->sector_size);
+		argsize = sect_size * args[3];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#573: FILE: include/linux/libata.h:993:
+extern unsigned ata_sect_size(u8 command, unsigned dev_sect_size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#573: FILE: include/linux/libata.h:993:
+extern unsigned ata_sect_size(u8 command, unsigned dev_sect_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#573: FILE: include/linux/libata.h:993:
+extern unsigned ata_sect_size(u8 command, unsigned dev_sect_size);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162317.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 24 warnings, 6 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162317.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
