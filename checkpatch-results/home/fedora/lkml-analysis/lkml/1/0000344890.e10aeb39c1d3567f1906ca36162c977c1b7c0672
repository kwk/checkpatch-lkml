WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: arch/x86/kernel/i387.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#74: FILE: arch/x86/kernel/i387.c:11:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/user.h> instead of <asm/user.h>
#78: FILE: arch/x86/kernel/i387.c:15:
+#include <asm/user.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#80: FILE: arch/x86/kernel/i387.c:17:
+#include <asm/uaccess.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: arch/x86/kernel/i387.c:30:
+	unsigned long mask = 0;
+	clts();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'remeber' may be misspelled - perhaps 'remember'?
#110: FILE: arch/x86/kernel/i387.c:47:
+ * remeber the current task has used the FPU.
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: arch/x86/kernel/i387.c:66:
+	 * or ptrace can call init_fpu */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#173: FILE: arch/x86/kernel/i387.c:110:
+	unsigned long twd = (unsigned long) fxsave->twd;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#178: FILE: arch/x86/kernel/i387.c:115:
+#define FPREG_ADDR(f, n)	((void *)&(f)->st_space + (n) * 16);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#199: FILE: arch/x86/kernel/i387.c:136:
+				if (st->significand[3] & 0x8000) {
[...]
+				} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#221: FILE: arch/x86/kernel/i387.c:158:
+	if (cpu_has_fxsr) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#230: FILE: arch/x86/kernel/i387.c:167:
+	if (cpu_has_fxsr) {
[...]
+	} else {
[...]

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#237: FILE: arch/x86/kernel/i387.c:174:
+#if 0

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#240: FILE: arch/x86/kernel/i387.c:177:
+	if (cpu_has_fxsr) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#250: FILE: arch/x86/kernel/i387.c:187:
+	if (cpu_has_xmm) {
[...]
+	} else {
[...]

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#257: FILE: arch/x86/kernel/i387.c:194:
+#if 0

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#261: FILE: arch/x86/kernel/i387.c:198:
+	if (cpu_has_fxsr) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#270: FILE: arch/x86/kernel/i387.c:207:
+	if (cpu_has_fxsr) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#279: FILE: arch/x86/kernel/i387.c:216:
+	if (cpu_has_fxsr) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#312: FILE: arch/x86/kernel/i387.c:249:
+	from = (struct _fpxreg *) &fxsave->st_space[0];

CHECK:SPACING: No space is necessary after a cast
#345: FILE: arch/x86/kernel/i387.c:282:
+	to = (struct _fpxreg *) &fxsave->st_space[0];

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#407: FILE: arch/x86/kernel/i387.c:344:
+		if (cpu_has_fxsr) {
[...]
+		} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#420: FILE: arch/x86/kernel/i387.c:357:
+	struct task_struct *tsk = current;
+	clear_fpu(tsk);

WARNING:LINE_SPACING: Missing a blank line after declarations
#429: FILE: arch/x86/kernel/i387.c:366:
+	struct task_struct *tsk = current;
+	clear_fpu(tsk);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#442: FILE: arch/x86/kernel/i387.c:379:
+		if (cpu_has_fxsr) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#475: FILE: arch/x86/kernel/i387.c:412:
+		if (cpu_has_fxsr) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#503: FILE: arch/x86/kernel/i387.c:440:
+		if (cpu_has_fxsr) {
[...]
+		} else {
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#535: FILE: arch/x86/kernel/i387.c:472:
+		 * for security reasons */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#577: FILE: arch/x86/kernel/i387.c:514:
+		if (cpu_has_fxsr) {
[...]
+		} else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#609: FILE: arch/x86/kernel/i387.c:546:
+		if (tsk == current)
+		       unlazy_fpu(tsk);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344890.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 25 warnings, 6 checks, 562 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344890.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
