WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#68: FILE: arch/cris/arch-v32/drivers/i2c.c:257:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#100: FILE: arch/cris/arch-v32/drivers/i2c.c:293:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: arch/cris/arch-v32/drivers/i2c.c:389:
+*#--------------------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <theSlave>
#122: FILE: arch/cris/arch-v32/drivers/i2c.c:391:
+i2c_write(unsigned char theSlave, void *data, size_t nbytes)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SIZEOF_PARENTHESIS: sizeof value should be sizeof(value)
#152: FILE: arch/cris/arch-v32/drivers/i2c.c:421:
+			memcpy(&value, data + bytes_wrote, sizeof value);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#179: FILE: arch/cris/arch-v32/drivers/i2c.c:448:
+/*#---------------------------------------------------------------------------
+*#

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: arch/cris/arch-v32/drivers/i2c.c:453:
+*#--------------------------------------------------------------------------*/

WARNING:SIZEOF_PARENTHESIS: sizeof b should be sizeof(b)
#220: FILE: arch/cris/arch-v32/drivers/i2c.c:489:
+			memcpy(data + bytes_read, &b, sizeof b);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#246: FILE: arch/cris/arch-v32/drivers/i2c.c:515:
+/*#---------------------------------------------------------------------------
+*#

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: arch/cris/arch-v32/drivers/i2c.c:742:
+	res = crisv32_io_get_name(&cris_i2c_data,
+		CONFIG_ETRAX_V32_I2C_DATA_PORT);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#338: FILE: arch/cris/arch-v32/drivers/i2c.c:752:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#342: FILE: arch/cris/arch-v32/drivers/i2c.c:756:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#356: FILE: arch/cris/arch-v32/drivers/i2c.c:771:
+	printk(KERN_INFO

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 4 checks, 318 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
