WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> > > single tree [the two will combine without rejects]. Then try to add a 

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#130: FILE: arch/x86/mm/mmio-mod.c:65:
+#if 0 /* XXX: no way gather this info anymore */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#196: FILE: arch/x86/mm/mmio-mod.c:138:
+#if 0 /* XXX: convert this to use tracing */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: arch/x86/mm/mmio-mod.c:298:
+	mmio_trace_record(my_trace->header.type, my_trace->rw.address,
+							my_trace->rw.value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: arch/x86/mm/mmio-mod.c:408:
+	mmio_trace_record(event.header.type, event.map.addr,
+					found_trace ? found_trace->id : -1);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#416: FILE: arch/x86/mm/mmio-mod.c:464:
+#if 0 /* XXX: tracing does not support text entries */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#492: FILE: include/linux/mmiotrace.h:58:
+extern int __init init_mmiotrace(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#493: FILE: include/linux/mmiotrace.h:59:
+extern void enable_mmiotrace(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/linux/mmiotrace.h:60:
+extern void disable_mmiotrace(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#495: FILE: include/linux/mmiotrace.h:61:
+extern void mmio_trace_record(u32 type, unsigned long addr, unsigned long arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#520: FILE: kernel/trace/trace.c:686:
+		static unsigned limit;

WARNING:LINE_SPACING: Missing a blank line after declarations
#521: FILE: kernel/trace/trace.c:687:
+		static unsigned limit;
+		if (limit++ < 12)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#530: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#535: FILE: kernel/trace/trace_mmiotrace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#554: FILE: kernel/trace/trace_mmiotrace.c:20:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#557: FILE: kernel/trace/trace_mmiotrace.c:23:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#565: FILE: kernel/trace/trace_mmiotrace.c:31:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#572: FILE: kernel/trace/trace_mmiotrace.c:38:
+	pr_debug("in %s\n", __func__);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#580: FILE: kernel/trace/trace_mmiotrace.c:46:
+static struct tracer mmio_tracer __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#590: FILE: kernel/trace/trace_mmiotrace.c:56:
+	int ret = init_mmiotrace();
+	if (ret)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#606: FILE: kernel/trace/trace_mmiotrace.c:72:
+		static unsigned limit;

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: kernel/trace/trace_mmiotrace.c:73:
+		static unsigned limit;
+		if (limit++ < 12)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#612: FILE: kernel/trace/trace_mmiotrace.c:78:
+		static unsigned limit;

WARNING:LINE_SPACING: Missing a blank line after declarations
#613: FILE: kernel/trace/trace_mmiotrace.c:79:
+		static unsigned limit;
+		if (limit++ < 12)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304675.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 7 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304675.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
