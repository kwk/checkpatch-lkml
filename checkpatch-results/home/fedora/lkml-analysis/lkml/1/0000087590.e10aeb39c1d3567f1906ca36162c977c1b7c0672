WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#42: 
 Signed-off-by: Mark Allyn <mark.a.allyn@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/staging/rar_register/Kconfig:7:
+config RAR_REGISTER
+	tristate "Intel Restricted Access Region Register Driver"
+	depends on MRST
+	default y
+	---help---
+		This driver allows other kernel drivers access to the
+		contents of the restricted access region registers. 
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/staging/rar_register/Kconfig:13:
+^I^Icontents of the restricted access region registers. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: drivers/staging/rar_register/Makefile:1:
+EXTRA_CFLAGS += -DLITTLE__ENDIAN $

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#106: FILE: drivers/staging/rar_register/Makefile:1:
+EXTRA_CFLAGS += -DLITTLE__ENDIAN 

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: drivers/staging/rar_register/rar_register.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/staging/rar_register/rar_register.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#135: FILE: drivers/staging/rar_register/rar_register.c:18:
+ *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: drivers/staging/rar_register/rar_register.c:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#166: FILE: drivers/staging/rar_register/rar_register.c:49:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: drivers/staging/rar_register/rar_register.c:77:
+
+

WARNING:STATIC_CONST: Move const after static - use 'static const struct RAR_offsets'
#214: FILE: drivers/staging/rar_register/rar_register.c:97:
+static struct RAR_offsets const rar_offsets[] = {

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#240: FILE: drivers/staging/rar_register/rar_register.c:123:
+ * Function that is activated on the succesful probe of the RAR
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#243: FILE: drivers/staging/rar_register/rar_register.c:126:
+int rar_probe(struct pci_dev *dev, const struct pci_device_id *id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#253: FILE: drivers/staging/rar_register/rar_register.c:136:
+int (*my_probe) (struct pci_dev *dev, const struct pci_device_id *id) =

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#257: FILE: drivers/staging/rar_register/rar_register.c:140:
+/* This function is used to retrieved RAR info using the IPC message
+   bus interface */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#257: FILE: drivers/staging/rar_register/rar_register.c:140:
+   bus interface */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: drivers/staging/rar_register/rar_register.c:195:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: drivers/staging/rar_register/rar_register.c:196:
+	
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#332: FILE: drivers/staging/rar_register/rar_register.c:215:
+	if (!result)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/staging/rar_register/rar_register.c:260:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#378: FILE: drivers/staging/rar_register/rar_register.c:261:
+	
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#394: FILE: drivers/staging/rar_register/rar_register.c:277:
+	if (!result)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/staging/rar_register/rar_register.c:290:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#408: FILE: drivers/staging/rar_register/rar_register.c:291:
+	
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!my_pdev"
#438: FILE: drivers/staging/rar_register/rar_register.c:321:
+	if (my_pdev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rar_addr[n].low
#446: FILE: drivers/staging/rar_register/rar_register.c:329:
+					&(rar_addr[n].low)) != 0

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#447: FILE: drivers/staging/rar_register/rar_register.c:330:
+					&(rar_addr[n].low)) != 0
+		    || memrar_get_rar_addr(my_pdev,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rar_addr[n].high
#449: FILE: drivers/staging/rar_register/rar_register.c:332:
+					   &(rar_addr[n].high)) != 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: drivers/staging/rar_register/rar_register.c:355:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: drivers/staging/rar_register/rar_register.c:356:
+        /* Done accessing the device. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: drivers/staging/rar_register/rar_register.c:361:
+		size_t z;
+		for (z = 0; z != MRST_NUM_RAR; ++z)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#478: FILE: drivers/staging/rar_register/rar_register.c:361:
+		for (z = 0; z != MRST_NUM_RAR; ++z)
+		{

WARNING:SPLIT_STRING: quoted string split across lines
#486: FILE: drivers/staging/rar_register/rar_register.c:369:
+				 "BRAR[%u] physical address range = "
+				 "[0x%08x, 0x%08x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#499: FILE: drivers/staging/rar_register/rar_register.c:382:
+ * either PCI, USB, etc).
+*/

WARNING:TYPO_SPELLING: 'activaed' may be misspelled - perhaps 'activated'?
#517: FILE: drivers/staging/rar_register/rar_register.c:400:
+ * Function that is activaed on the succesful probe of the RAR device
                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#517: FILE: drivers/staging/rar_register/rar_register.c:400:
+ * Function that is activaed on the succesful probe of the RAR device
                                     ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#523: FILE: drivers/staging/rar_register/rar_register.c:406:
+	int error;
+	registered = 0;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#530: FILE: drivers/staging/rar_register/rar_register.c:413:
+	if (error)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#540: FILE: drivers/staging/rar_register/rar_register.c:423:
+	if (error)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#558: FILE: drivers/staging/rar_register/rar_register.c:441:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: drivers/staging/rar_register/rar_register.c:451:
+ * $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#579: FILE: drivers/staging/rar_register/rar_register.c:462:
+	if (registered)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#581: FILE: drivers/staging/rar_register/rar_register.c:464:
+		if (start_address == 0
+		    || end_address == 0
+		    || rar_index >= MRST_NUM_RAR
+		    || rar_index < 0)
+		{

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#582: FILE: drivers/staging/rar_register/rar_register.c:465:
+		if (start_address == 0
+		    || end_address == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#583: FILE: drivers/staging/rar_register/rar_register.c:466:
+		    || end_address == 0
+		    || rar_index >= MRST_NUM_RAR

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#584: FILE: drivers/staging/rar_register/rar_register.c:467:
+		    || rar_index >= MRST_NUM_RAR
+		    || rar_index < 0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#588: FILE: drivers/staging/rar_register/rar_register.c:471:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#588: FILE: drivers/staging/rar_register/rar_register.c:471:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#615: FILE: drivers/staging/rar_register/rar_register.c:498:
+	if  (rar_index >= MRST_NUM_RAR || rar_index < 0)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#623: FILE: drivers/staging/rar_register/rar_register.c:506:
+	if (registered)
+	{

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#645: FILE: drivers/staging/rar_register/rar_register.c:528:
+				memrar_set_rar_addr(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#659: FILE: drivers/staging/rar_register/rar_register.c:542:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#661: FILE: drivers/staging/rar_register/rar_register.c:544:
+/*
+  Local Variables:

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000087590.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 18 warnings, 16 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000087590.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
