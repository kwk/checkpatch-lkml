WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
converting MTRR layout from continous to discrete, some time could run out of

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#40: 
converting MTRR layout from continous to discrete, some time could run out of
                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'coverred' may be misspelled - perhaps 'covered'?
#46: 
check ram below 4g is coverred well.
                      ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#64: FILE: arch/x86/kernel/cpu/mtrr/main.c:1099:
+	u64 trim_start, trim_size;
+	trim_start =  start_pfn;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#128: FILE: arch/x86/kernel/cpu/mtrr/main.c:1182:
+		range[nr_range].start = (1ULL<<(32 - PAGE_SHIFT));
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#141: FILE: arch/x86/kernel/cpu/mtrr/main.c:1195:
+	if (range[i].end + 1 < end_pfn) {
+			total_real_trim_size += real_trim_memory(range[i].end + 1, end_pfn);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#141: FILE: arch/x86/kernel/cpu/mtrr/main.c:1195:
+	if (range[i].end + 1 < end_pfn) {
+			total_real_trim_size += real_trim_memory(range[i].end + 1, end_pfn);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#149: FILE: arch/x86/kernel/cpu/mtrr/main.c:1201:
 		printk(KERN_WARNING "WARNING: BIOS bug: CPU MTRRs don't cover"
+			" all of memory, losing %lluMB of RAM.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#162: FILE: arch/x86/kernel/cpu/mtrr/main.c:1206:
+		printk(KERN_INFO "update e820 for mtrr -- end_pfn\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: arch/x86/kernel/cpu/mtrr/main.c:1216:
+		if (range[i].end + 1 < range[i+1].start)
 		                              ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#175: FILE: arch/x86/kernel/cpu/mtrr/main.c:1217:
+			total_real_trim_size += real_trim_memory(range[i].end + 1, range[i+1].start);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#175: FILE: arch/x86/kernel/cpu/mtrr/main.c:1217:
+			total_real_trim_size += real_trim_memory(range[i].end + 1, range[i+1].start);
 			                                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#179: FILE: arch/x86/kernel/cpu/mtrr/main.c:1221:
+		printk(KERN_WARNING "WARNING: BIOS bug: CPU MTRRs don't cover"

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: arch/x86/kernel/cpu/mtrr/main.c:1222:
+		printk(KERN_WARNING "WARNING: BIOS bug: CPU MTRRs don't cover"
+			" all of memory, losing %lluMB of RAM.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#185: FILE: arch/x86/kernel/cpu/mtrr/main.c:1227:
+		printk(KERN_INFO "update e820 for mtrr -- holes\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#203: FILE: arch/x86/kernel/e820_32.c:739:
+u64 __init update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: arch/x86/kernel/e820_32.c:740:
+u64 __init update_memory_range(u64 start, u64 size, unsigned old_type,
 				unsigned new_type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#239: FILE: arch/x86/kernel/e820_64.c:832:
+u64 __init update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: arch/x86/kernel/e820_64.c:833:
+u64 __init update_memory_range(u64 start, u64 size, unsigned old_type,
 				unsigned new_type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#274: FILE: include/asm-x86/e820_32.h:31:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: include/asm-x86/e820_32.h:31:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: include/asm-x86/e820_32.h:32:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,
 				unsigned new_type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#287: FILE: include/asm-x86/e820_64.h:24:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#287: FILE: include/asm-x86/e820_64.h:24:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: include/asm-x86/e820_64.h:25:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,
 				unsigned new_type);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288653.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 9 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288653.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
