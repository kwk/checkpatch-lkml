WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#43: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: arch/arm/plat-orion/include/plat/mvsdio.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#49: FILE: arch/arm/plat-orion/include/plat/mvsdio.h:2:
+ * arch/arm/plat-orion/include/plat/mvsdio.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#77: FILE: drivers/mmc/host/Kconfig:174:
+config MMC_MVSDIO
+	tristate "Marvell MMC/SD/SDIO host driver"
+	depends on PLAT_ORION
+	---help---
+	  This selects the Marvell SDIO host driver.
+	  SDIO may currently be found on the Kirkwood 88F6281 and 88F6192
+	  SoC controllers.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called mvsdio.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/mmc/host/mvsdio.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#147: FILE: drivers/mmc/host/mvsdio.c:39:
+	spinlock_t lock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#203: FILE: drivers/mmc/host/mvsdio.c:95:
+			printk(KERN_DEBUG "%s: fallback to PIO for data "

WARNING:SPLIT_STRING: quoted string split across lines
#204: FILE: drivers/mmc/host/mvsdio.c:96:
+			printk(KERN_DEBUG "%s: fallback to PIO for data "
+					  "at 0x%p size %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#208: FILE: drivers/mmc/host/mvsdio.c:100:
+		return 1;
+	} else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#229: FILE: drivers/mmc/host/mvsdio.c:121:
+	BUG_ON(host->mrq != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#229: FILE: drivers/mmc/host/mvsdio.c:121:
+	BUG_ON(host->mrq != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: drivers/mmc/host/mvsdio.c:223:
+		unsigned int response[8], i;
+		for (i = 0; i < 8; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: drivers/mmc/host/mvsdio.c:238:
+		unsigned int response[3], i;
+		for (i = 0; i < 3; i++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#405: FILE: drivers/mmc/host/mvsdio.c:297:
+		unsigned int response[3], i;
+		for (i = 0; i < 3; i++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#416: FILE: drivers/mmc/host/mvsdio.c:308:
+			u32 err_cmd12 = mvsd_read(MVSD_AUTOCMD12_ERR_STATUS);
+			dev_dbg(host->dev, "c12err 0x%04x\n", err_cmd12);

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: drivers/mmc/host/mvsdio.c:342:
+		int s = host->pio_size;
+		while (s >= 32 && (intr_status & MVSD_NOR_RX_FIFO_8W)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#470: FILE: drivers/mmc/host/mvsdio.c:362:
+				u16 val[2] = {0, 0};
+				val[0] = mvsd_read(MVSD_FIFO);

WARNING:LINE_SPACING: Missing a blank line after declarations
#511: FILE: drivers/mmc/host/mvsdio.c:403:
+				u16 val[2] = {0, 0};
+				memcpy(&val, p, s);

CHECK:BRACES: braces {} should be used on all arms of this statement
#534: FILE: drivers/mmc/host/mvsdio.c:426:
+	if (intr_status & host->intr_en & ~intr_done_mask) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#559: FILE: drivers/mmc/host/mvsdio.c:451:
+			printk(KERN_ERR "%s: unhandled error status %#04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/mmc/host/mvsdio.c:452:
+			printk(KERN_ERR "%s: unhandled error status %#04x\n",
+					mmc_hostname(host->mmc), err_status);

CHECK:BRACES: Unbalanced braces around else statement
#566: FILE: drivers/mmc/host/mvsdio.c:458:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#577: FILE: drivers/mmc/host/mvsdio.c:469:
+	printk(KERN_ERR "%s: unhandled interrupt status=0x%04x en=0x%04x "

WARNING:SPLIT_STRING: quoted string split across lines
#578: FILE: drivers/mmc/host/mvsdio.c:470:
+	printk(KERN_ERR "%s: unhandled interrupt status=0x%04x en=0x%04x "
+			"pio=%d\n", mmc_hostname(host->mmc), intr_status,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#593: FILE: drivers/mmc/host/mvsdio.c:485:
+		printk(KERN_ERR "%s: Timeout waiting for hardware interrupt.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/mmc/host/mvsdio.c:486:
+		printk(KERN_ERR "%s: Timeout waiting for hardware interrupt.\n",
+				mmc_hostname(host->mmc));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#595: FILE: drivers/mmc/host/mvsdio.c:487:
+		printk(KERN_ERR "%s: hw_state=0x%04x, intr_status=0x%04x "

WARNING:SPLIT_STRING: quoted string split across lines
#596: FILE: drivers/mmc/host/mvsdio.c:488:
+		printk(KERN_ERR "%s: hw_state=0x%04x, intr_status=0x%04x "
+				"intr_en=0x%04x\n", mmc_hostname(host->mmc),

WARNING:LINE_SPACING: Missing a blank line after declarations
#629: FILE: drivers/mmc/host/mvsdio.c:521:
+	struct mvsd_host *host = dev;
+	mmc_detect_change(host->mmc, msecs_to_jiffies(100));

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#663: FILE: drivers/mmc/host/mvsdio.c:555:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#669: FILE: drivers/mmc/host/mvsdio.c:561:
+	void __iomem *iobase = host->base;
+	dev_dbg(host->dev, "power up\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#683: FILE: drivers/mmc/host/mvsdio.c:575:
+	void __iomem *iobase = host->base;
+	dev_dbg(host->dev, "power down\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#710: FILE: drivers/mmc/host/mvsdio.c:602:
+		u32 m = DIV_ROUND_UP(host->base_clock, ios->clock) - 1;
+		if (m > MVSD_BASE_DIV_MAX)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#714: FILE: drivers/mmc/host/mvsdio.c:606:
+		host->ns_per_clk = 1000000000 / (host->base_clock / (m+1));
 		                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#716: FILE: drivers/mmc/host/mvsdio.c:608:
+			ios->clock, host->base_clock / (m+1), m);
 			                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#771: FILE: drivers/mmc/host/mvsdio.c:663:
+		struct mbus_dram_window *cs = dram->cs + i;
+		writel(((cs->size - 1) & 0xffff0000) |

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mvsd_data->dram"
#835: FILE: drivers/mmc/host/mvsdio.c:727:
+	if (mvsd_data->dram != NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#841: FILE: drivers/mmc/host/mvsdio.c:733:
+	if (ret) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#842: FILE: drivers/mmc/host/mvsdio.c:734:
+		printk(KERN_ERR "%s: cannot assign irq %d\n", DRIVER_NAME, irq);

CHECK:BRACES: Unbalanced braces around else statement
#844: FILE: drivers/mmc/host/mvsdio.c:736:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/mmc/host/mvsdio.c:822:
+static int mvsd_suspend(struct platform_device *dev, pm_message_t state,
+			   u32 level)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#993: FILE: drivers/mmc/host/mvsdio.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1011: FILE: drivers/mmc/host/mvsdio.h:19:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1024: FILE: drivers/mmc/host/mvsdio.h:32:
+#define MVSD_RSP(i)				(0x020 + ((i)<<2))
                    				             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1052: FILE: drivers/mmc/host/mvsdio.h:60:
+#define MVSD_AUTO_RSP(i)			(0x090 + ((i)<<2))
                         			             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: drivers/mmc/host/mvsdio.h:69:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1067: FILE: drivers/mmc/host/mvsdio.h:75:
+#define MVSD_CMD_RSP_136			(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1071: FILE: drivers/mmc/host/mvsdio.h:79:
+#define MVSD_CMD_CHECK_DATACRC16		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1072: FILE: drivers/mmc/host/mvsdio.h:80:
+#define MVSD_CMD_CHECK_CMDCRC			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1073: FILE: drivers/mmc/host/mvsdio.h:81:
+#define MVSD_CMD_INDX_CHECK			(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1074: FILE: drivers/mmc/host/mvsdio.h:82:
+#define MVSD_CMD_DATA_PRESENT			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1075: FILE: drivers/mmc/host/mvsdio.h:83:
+#define MVSD_UNEXPECTED_RESP			(1 << 7)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1078: FILE: drivers/mmc/host/mvsdio.h:86:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1083: FILE: drivers/mmc/host/mvsdio.h:91:
+#define MVSD_AUTOCMD12_BUSY			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1084: FILE: drivers/mmc/host/mvsdio.h:92:
+#define MVSD_AUTOCMD12_INDX_CHECK		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1091: FILE: drivers/mmc/host/mvsdio.h:99:
+#define MVSD_XFER_MODE_WR_DATA_START		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1092: FILE: drivers/mmc/host/mvsdio.h:100:
+#define MVSD_XFER_MODE_HW_WR_DATA_EN		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1093: FILE: drivers/mmc/host/mvsdio.h:101:
+#define MVSD_XFER_MODE_AUTO_CMD12		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1094: FILE: drivers/mmc/host/mvsdio.h:102:
+#define MVSD_XFER_MODE_INT_CHK_EN		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1095: FILE: drivers/mmc/host/mvsdio.h:103:
+#define MVSD_XFER_MODE_TO_HOST			(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1096: FILE: drivers/mmc/host/mvsdio.h:104:
+#define MVSD_XFER_MODE_STOP_CLK			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1097: FILE: drivers/mmc/host/mvsdio.h:105:
+#define MVSD_XFER_MODE_PIO			(1 << 6)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1099: FILE: drivers/mmc/host/mvsdio.h:107:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1104: FILE: drivers/mmc/host/mvsdio.h:112:
+#define MVSD_HOST_CTRL_PUSH_PULL_EN ^I^I(1 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1104: FILE: drivers/mmc/host/mvsdio.h:112:
+#define MVSD_HOST_CTRL_PUSH_PULL_EN 		(1 << 0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1106: FILE: drivers/mmc/host/mvsdio.h:114:
+#define MVSD_HOST_CTRL_CARD_TYPE_MEM_ONLY ^I(0 << 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1107: FILE: drivers/mmc/host/mvsdio.h:115:
+#define MVSD_HOST_CTRL_CARD_TYPE_IO_ONLY ^I(1 << 1)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1107: FILE: drivers/mmc/host/mvsdio.h:115:
+#define MVSD_HOST_CTRL_CARD_TYPE_IO_ONLY 	(1 << 1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1108: FILE: drivers/mmc/host/mvsdio.h:116:
+#define MVSD_HOST_CTRL_CARD_TYPE_IO_MEM_COMBO ^I(2 << 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1109: FILE: drivers/mmc/host/mvsdio.h:117:
+#define MVSD_HOST_CTRL_CARD_TYPE_IO_MMC ^I(3 << 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1110: FILE: drivers/mmc/host/mvsdio.h:118:
+#define MVSD_HOST_CTRL_CARD_TYPE_MASK^I ^I(3 << 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1112: FILE: drivers/mmc/host/mvsdio.h:120:
+#define MVSD_HOST_CTRL_BIG_ENDIAN ^I^I(1 << 3)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1112: FILE: drivers/mmc/host/mvsdio.h:120:
+#define MVSD_HOST_CTRL_BIG_ENDIAN 		(1 << 3)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1113: FILE: drivers/mmc/host/mvsdio.h:121:
+#define MVSD_HOST_CTRL_LSB_FIRST ^I^I(1 << 4)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1113: FILE: drivers/mmc/host/mvsdio.h:121:
+#define MVSD_HOST_CTRL_LSB_FIRST 		(1 << 4)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1114: FILE: drivers/mmc/host/mvsdio.h:122:
+#define MVSD_HOST_CTRL_DATA_WIDTH_4_BITS ^I(1 << 9)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1114: FILE: drivers/mmc/host/mvsdio.h:122:
+#define MVSD_HOST_CTRL_DATA_WIDTH_4_BITS 	(1 << 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1115: FILE: drivers/mmc/host/mvsdio.h:123:
+#define MVSD_HOST_CTRL_HI_SPEED_EN ^I^I(1 << 10)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1115: FILE: drivers/mmc/host/mvsdio.h:123:
+#define MVSD_HOST_CTRL_HI_SPEED_EN 		(1 << 10)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1117: FILE: drivers/mmc/host/mvsdio.h:125:
+#define MVSD_HOST_CTRL_TMOUT_MAX ^I^I0xf$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1118: FILE: drivers/mmc/host/mvsdio.h:126:
+#define MVSD_HOST_CTRL_TMOUT_MASK ^I^I(0xf << 11)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1119: FILE: drivers/mmc/host/mvsdio.h:127:
+#define MVSD_HOST_CTRL_TMOUT(x) ^I^I((x) << 11)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1120: FILE: drivers/mmc/host/mvsdio.h:128:
+#define MVSD_HOST_CTRL_TMOUT_EN ^I^I(1 << 15)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1120: FILE: drivers/mmc/host/mvsdio.h:128:
+#define MVSD_HOST_CTRL_TMOUT_EN 		(1 << 15)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1122: FILE: drivers/mmc/host/mvsdio.h:130:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1127: FILE: drivers/mmc/host/mvsdio.h:135:
+#define MVSD_SW_RESET_NOW			(1 << 8)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1129: FILE: drivers/mmc/host/mvsdio.h:137:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1134: FILE: drivers/mmc/host/mvsdio.h:142:
+#define MVSD_NOR_CMD_DONE			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1135: FILE: drivers/mmc/host/mvsdio.h:143:
+#define MVSD_NOR_XFER_DONE			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1136: FILE: drivers/mmc/host/mvsdio.h:144:
+#define MVSD_NOR_BLK_GAP_EVT			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1137: FILE: drivers/mmc/host/mvsdio.h:145:
+#define MVSD_NOR_DMA_DONE			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1138: FILE: drivers/mmc/host/mvsdio.h:146:
+#define MVSD_NOR_TX_AVAIL			(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1139: FILE: drivers/mmc/host/mvsdio.h:147:
+#define MVSD_NOR_RX_READY			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1140: FILE: drivers/mmc/host/mvsdio.h:148:
+#define MVSD_NOR_CARD_INT			(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1141: FILE: drivers/mmc/host/mvsdio.h:149:
+#define MVSD_NOR_READ_WAIT_ON			(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1142: FILE: drivers/mmc/host/mvsdio.h:150:
+#define MVSD_NOR_RX_FIFO_8W			(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1143: FILE: drivers/mmc/host/mvsdio.h:151:
+#define MVSD_NOR_TX_FIFO_8W			(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1144: FILE: drivers/mmc/host/mvsdio.h:152:
+#define MVSD_NOR_SUSPEND_ON			(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1145: FILE: drivers/mmc/host/mvsdio.h:153:
+#define MVSD_NOR_AUTOCMD12_DONE			(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1146: FILE: drivers/mmc/host/mvsdio.h:154:
+#define MVSD_NOR_UNEXP_RSP			(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1147: FILE: drivers/mmc/host/mvsdio.h:155:
+#define MVSD_NOR_ERROR				(1 << 15)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1149: FILE: drivers/mmc/host/mvsdio.h:157:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1154: FILE: drivers/mmc/host/mvsdio.h:162:
+#define MVSD_ERR_CMD_TIMEOUT			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1155: FILE: drivers/mmc/host/mvsdio.h:163:
+#define MVSD_ERR_CMD_CRC			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1156: FILE: drivers/mmc/host/mvsdio.h:164:
+#define MVSD_ERR_CMD_ENDBIT			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1157: FILE: drivers/mmc/host/mvsdio.h:165:
+#define MVSD_ERR_CMD_INDEX			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1158: FILE: drivers/mmc/host/mvsdio.h:166:
+#define MVSD_ERR_DATA_TIMEOUT			(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1159: FILE: drivers/mmc/host/mvsdio.h:167:
+#define MVSD_ERR_DATA_CRC			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1160: FILE: drivers/mmc/host/mvsdio.h:168:
+#define MVSD_ERR_DATA_ENDBIT			(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1161: FILE: drivers/mmc/host/mvsdio.h:169:
+#define MVSD_ERR_AUTOCMD12			(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1162: FILE: drivers/mmc/host/mvsdio.h:170:
+#define MVSD_ERR_CMD_STARTBIT			(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1163: FILE: drivers/mmc/host/mvsdio.h:171:
+#define MVSD_ERR_XFER_SIZE			(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1164: FILE: drivers/mmc/host/mvsdio.h:172:
+#define MVSD_ERR_RESP_T_BIT			(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1165: FILE: drivers/mmc/host/mvsdio.h:173:
+#define MVSD_ERR_CRC_ENDBIT			(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1166: FILE: drivers/mmc/host/mvsdio.h:174:
+#define MVSD_ERR_CRC_STARTBIT			(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1167: FILE: drivers/mmc/host/mvsdio.h:175:
+#define MVSD_ERR_CRC_STATUS			(1 << 14)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1169: FILE: drivers/mmc/host/mvsdio.h:177:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1174: FILE: drivers/mmc/host/mvsdio.h:182:
+#define MVSD_AUTOCMD12_ERR_NOTEXE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1175: FILE: drivers/mmc/host/mvsdio.h:183:
+#define MVSD_AUTOCMD12_ERR_TIMEOUT		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1176: FILE: drivers/mmc/host/mvsdio.h:184:
+#define MVSD_AUTOCMD12_ERR_CRC			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1177: FILE: drivers/mmc/host/mvsdio.h:185:
+#define MVSD_AUTOCMD12_ERR_ENDBIT		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1178: FILE: drivers/mmc/host/mvsdio.h:186:
+#define MVSD_AUTOCMD12_ERR_INDEX		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1179: FILE: drivers/mmc/host/mvsdio.h:187:
+#define MVSD_AUTOCMD12_ERR_RESP_T_BIT		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1180: FILE: drivers/mmc/host/mvsdio.h:188:
+#define MVSD_AUTOCMD12_ERR_RESP_STARTBIT	(1 << 6)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 44 warnings, 80 checks, 1113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
