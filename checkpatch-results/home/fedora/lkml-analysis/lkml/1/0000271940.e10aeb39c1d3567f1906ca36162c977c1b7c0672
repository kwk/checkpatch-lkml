CHECK:BIT_MACRO: Prefer using the BIT macro
#104: FILE: kernel/sched.c:249:
+#define CPU_CGROUP_STAT_THRESHOLD (1 << 30)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: kernel/sched.c:262:
+static void __cpu_cgroup_stat_add(struct cpu_cgroup_stat *stat,
+		enum cpu_cgroup_stat_index idx, s64 val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#141: FILE: kernel/sched.c:3914:
+		struct task_group *tg;
+		tg = task_group(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: kernel/sched.c:3916:
+		__cpu_cgroup_stat_add(tg->stat, CPU_CGROUP_STAT_UTIME,
+				cputime_to_msecs(cputime) * NSEC_PER_MSEC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: kernel/sched.c:3981:
+			struct task_group *tg;
+			tg = task_group(p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: kernel/sched.c:3983:
+			__cpu_cgroup_stat_add(tg->stat, CPU_CGROUP_STAT_STIME,
+				cputime_to_msecs(cputime) * NSEC_PER_MSEC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: kernel/sched.c:8369:
+static s64 cpu_cgroup_read_stat(struct cpu_cgroup_stat *stat,
+		enum cpu_cgroup_stat_index idx)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#176: FILE: kernel/sched.c:8372:
+		return nsec_to_clock_t(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: kernel/sched.c:8613:
+static int cpu_cgroup_stats_show(struct cgroup *cgrp, struct cftype *cft,
+		struct cgroup_map_cb *cb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: kernel/sched.c:8618:
+	int i;
+	for (i = 0; i < CPU_CGROUP_STAT_NSTATS; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: kernel/sched.c:8620:
+		s64 val;
+		val = cpu_cgroup_read_stat(stat, i);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*stat)...) over kmalloc(sizeof(struct cpu_cgroup_stat)...)
#218: FILE: kernel/sched.c:8633:
+		stat = kmalloc(sizeof(struct cpu_cgroup_stat)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#221: FILE: kernel/sched.c:8636:
+			percpu_counter_init(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tg->stat)...) over kmalloc(sizeof(struct cpu_cgroup_stat)...)
#239: FILE: kernel/sched.c:8659:
+	tg->stat = kmalloc(sizeof(struct cpu_cgroup_stat), GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271940.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 10 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271940.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
