WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#30: 
From: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: include/trace/block_event_types.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'q' - possible side-effects?
#135: FILE: include/trace/block_event_types.h:11:
+#define Q_DEV(q) (q->bt ? q->bt->dev : 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'q' may be better as '(q)' to avoid precedence issues
#135: FILE: include/trace/block_event_types.h:11:
+#define Q_DEV(q) (q->bt ? q->bt->dev : 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: include/trace/block_event_types.h:17:
+TRACE_FORMAT(block_rq_abort,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: include/trace/block_event_types.h:20:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/trace/block_event_types.h:27:
+TRACE_FORMAT(block_rq_insert,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/trace/block_event_types.h:30:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: include/trace/block_event_types.h:37:
+TRACE_FORMAT(block_rq_issue,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: include/trace/block_event_types.h:40:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: include/trace/block_event_types.h:47:
+TRACE_FORMAT(block_rq_requeue,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: include/trace/block_event_types.h:50:
+	TPFMT("%d:%d %c %llu + %u [%d]",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: include/trace/block_event_types.h:58:
+TRACE_FORMAT(block_rq_complete,
+	TPPROTO(struct request_queue *q, struct request *rq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: include/trace/block_event_types.h:61:
+	TPFMT("%d:%d %c %llu + %u [%d]",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: include/trace/block_event_types.h:69:
+TRACE_FORMAT(block_bio_bounce,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: include/trace/block_event_types.h:72:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: include/trace/block_event_types.h:78:
+TRACE_FORMAT(block_bio_complete,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: include/trace/block_event_types.h:81:
+	TPFMT("%d:%d %c %llu + %u [%d]",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: include/trace/block_event_types.h:88:
+TRACE_FORMAT(block_bio_backmerge,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: include/trace/block_event_types.h:91:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: include/trace/block_event_types.h:97:
+TRACE_FORMAT(block_bio_frontmerge,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: include/trace/block_event_types.h:100:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: include/trace/block_event_types.h:106:
+TRACE_FORMAT(block_bio_queue,
+	TPPROTO(struct request_queue *q, struct bio *bio),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: include/trace/block_event_types.h:109:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: include/trace/block_event_types.h:115:
+TRACE_FORMAT(block_getrq,
+	TPPROTO(struct request_queue *q, struct bio *bio, int rw),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: include/trace/block_event_types.h:118:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: include/trace/block_event_types.h:125:
+TRACE_FORMAT(block_sleeprq,
+	TPPROTO(struct request_queue *q, struct bio *bio, int rw),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: include/trace/block_event_types.h:128:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: include/trace/block_event_types.h:135:
+TRACE_FORMAT(block_plug,
+	TPPROTO(struct request_queue *q),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: include/trace/block_event_types.h:138:
+	TPFMT("%d:%d",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: include/trace/block_event_types.h:142:
+TRACE_FORMAT(block_unplug_timer,
+	TPPROTO(struct request_queue *q),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: include/trace/block_event_types.h:145:
+	TPFMT("%d:%d",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: include/trace/block_event_types.h:149:
+TRACE_FORMAT(block_unplug_io,
+	TPPROTO(struct request_queue *q),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: include/trace/block_event_types.h:152:
+	TPFMT("%d:%d",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: include/trace/block_event_types.h:156:
+TRACE_FORMAT(block_split,
+	TPPROTO(struct request_queue *q, struct bio *bio, unsigned int pdu),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: include/trace/block_event_types.h:159:
+	TPFMT("%d:%d %c %llu + %u",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: include/trace/block_event_types.h:165:
+TRACE_FORMAT(block_remap,
+	TPPROTO(struct request_queue *q, struct bio *bio, dev_t dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: include/trace/block_event_types.h:169:
+	TPFMT("%d:%d %c %llu + %u -> (%d:%d) %llu",
+		MAJOR(Q_DEV(q)), MINOR(Q_DEV(q)),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159431.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 36 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159431.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
