WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
	- add hook to call pfm_handle_switch_timeout() on timer tick for timeout based

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/i386/kernel/process.c:440:
+ ^Ipfm_copy_thread(p);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: arch/i386/kernel/process.c:440:
+ ^Ipfm_copy_thread(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/i386/kernel/process.c:440:
+ ^Ipfm_copy_thread(p);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#200: FILE: arch/i386/kernel/process.c:564:
+	if (test_tsk_thread_flag(next_p, TIF_PERFMON_CTXSW)
+	    || test_tsk_thread_flag(prev_p, TIF_PERFMON_CTXSW))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#212: FILE: arch/i386/kernel/process.c:702:
 	if (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)
+	    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/i386/kernel/signal.c:658:
+ ^I^Ipfm_handle_work(regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: arch/i386/kernel/signal.c:658:
+ ^I^Ipfm_handle_work(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/i386/kernel/signal.c:658:
+ ^I^Ipfm_handle_work(regs);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: arch/i386/oprofile/init.c:18:
+extern int op_perfmon_init(struct oprofile_operations * ops);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#292: FILE: arch/i386/oprofile/init.c:18:
+extern int op_perfmon_init(struct oprofile_operations * ops);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#296: FILE: arch/i386/oprofile/init.c:22:
+extern void op_perfmon_exit(void);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/asm-i386/mach-default/entry_arch.h:35:
+BUILD_INTERRUPT(pmu_interrupt,LOCAL_PERFMON_VECTOR)
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#403: FILE: include/asm-i386/thread_info.h:154:
+#define _TIF_PERFMON_WORK	(1<<TIF_PERFMON_WORK)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#403: FILE: include/asm-i386/thread_info.h:154:
+#define _TIF_PERFMON_WORK	(1<<TIF_PERFMON_WORK)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#404: FILE: include/asm-i386/thread_info.h:155:
+#define _TIF_PERFMON_CTXSW	(1<<TIF_PERFMON_CTXSW)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#404: FILE: include/asm-i386/thread_info.h:155:
+#define _TIF_PERFMON_CTXSW	(1<<TIF_PERFMON_CTXSW)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#413: FILE: include/asm-i386/thread_info.h:165:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON_CTXSW)
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#413: FILE: include/asm-i386/thread_info.h:165:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON_CTXSW)
                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#425: FILE: include/asm-i386/unistd.h:333:
+#define __NR_pfm_write_pmcs	(__NR_pfm_create_context+1)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#426: FILE: include/asm-i386/unistd.h:334:
+#define __NR_pfm_write_pmds	(__NR_pfm_create_context+2)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#427: FILE: include/asm-i386/unistd.h:335:
+#define __NR_pfm_read_pmds	(__NR_pfm_create_context+3)
                           	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#428: FILE: include/asm-i386/unistd.h:336:
+#define __NR_pfm_load_context	(__NR_pfm_create_context+4)
                              	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#429: FILE: include/asm-i386/unistd.h:337:
+#define __NR_pfm_start		(__NR_pfm_create_context+5)
                       		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#430: FILE: include/asm-i386/unistd.h:338:
+#define __NR_pfm_stop		(__NR_pfm_create_context+6)
                      		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#431: FILE: include/asm-i386/unistd.h:339:
+#define __NR_pfm_restart	(__NR_pfm_create_context+7)
                         	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#432: FILE: include/asm-i386/unistd.h:340:
+#define __NR_pfm_create_evtsets	(__NR_pfm_create_context+8)
                                	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#433: FILE: include/asm-i386/unistd.h:341:
+#define __NR_pfm_getinfo_evtsets (__NR_pfm_create_context+9)
                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#434: FILE: include/asm-i386/unistd.h:342:
+#define __NR_pfm_delete_evtsets (__NR_pfm_create_context+10)
                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#435: FILE: include/asm-i386/unistd.h:343:
+#define __NR_pfm_unload_context	(__NR_pfm_create_context+11)
                                	                        ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 7 warnings, 19 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
