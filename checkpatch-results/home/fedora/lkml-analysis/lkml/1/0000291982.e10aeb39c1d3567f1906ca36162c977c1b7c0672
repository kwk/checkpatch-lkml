WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
pages is that pfn_to_page() and page_to_pfn() are returning sensible values.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: mm/internal.h:80:
+extern void mminit_verify_pageflags(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#49: FILE: mm/internal.h:81:
+extern void mminit_verify_page_links(struct page *page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#50: FILE: mm/internal.h:82:
+extern void mminit_verify_page_links(struct page *page,
+		enum zone_type zone, unsigned long nid, unsigned long pfn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: mm/internal.h:96:
+static inline void mminit_verify_page_links(struct page *page,
+		enum zone_type zone, unsigned long nid, unsigned long pfn)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: mm/mm_init.c:21:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_widths",
+		"Section %d Node %d Zone %d Flags %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: mm/mm_init.c:27:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_shifts",
+		"Section %d Node %d Zone %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: mm/mm_init.c:36:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_offsets",
+		"Section %d Node %d Zone %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: mm/mm_init.c:41:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_zoneid",
+		"Zone ID: %d -> %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: mm/mm_init.c:44:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_usage",
+		"location: %d -> %d unused %d -> %d flags %d -> %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: mm/mm_init.c:48:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_nodeflags",
+		"Node not in page flags");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#119: FILE: mm/mm_init.c:53:
+		BUG_ON(shift != SECTIONS_PGSHIFT);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: mm/mm_init.c:57:
+		BUG_ON(shift != NODES_PGSHIFT);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: mm/mm_init.c:61:
+		BUG_ON(shift != ZONES_PGSHIFT);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: mm/mm_init.c:63:
+	BUG_ON((ZONES_MASK << ZONES_PGSHIFT) &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: mm/mm_init.c:69:
+void __meminit mminit_verify_page_links(struct page *page, enum zone_type zone,
+			unsigned long nid, unsigned long pfn)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#137: FILE: mm/mm_init.c:71:
+	BUG_ON(page_to_nid(page) != nid);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#138: FILE: mm/mm_init.c:72:
+	BUG_ON(page_zonenum(page) != zone);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#139: FILE: mm/mm_init.c:73:
+	BUG_ON(page_to_pfn(page) != pfn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: mm/page_alloc.c:2944:
+	mminit_debug_printk(MMINIT_TRACE, "memmap_init",
+			"Initialising map node %d zone %d pfns %lu -> %lu\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291982.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 12 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291982.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
