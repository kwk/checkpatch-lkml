WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
in the file_mmap() hook, which catches the libraries, and inode_permission() 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: security/ibac/ibac_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#155: FILE: security/ibac/ibac_main.c:26:
+	ibac_enabled = simple_strtol(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#159: FILE: security/ibac/ibac_main.c:30:
+__setup("ibac=", ibac_enabled_setup);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#164: FILE: security/ibac/ibac_main.c:35:
+	integrity_enforce = simple_strtol(str, NULL, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#168: FILE: security/ibac/ibac_main.c:39:
+__setup("ibac_enforce=", integrity_enforce_setup);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'file' may be better as '(file)' to avoid precedence issues
#175: FILE: security/ibac/ibac_main.c:46:
+#define get_file_security(file) ((unsigned long)(file->f_security))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'file' may be better as '(file)' to avoid precedence issues
#176: FILE: security/ibac/ibac_main.c:47:
+#define set_file_security(file, val) (file->f_security = (void *)val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#178: FILE: security/ibac/ibac_main.c:49:
+#define get_task_security(task) ((unsigned long)(task->security))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#179: FILE: security/ibac/ibac_main.c:50:
+#define set_task_security(task, val) (task->security = (void *)val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: security/ibac/ibac_main.c:53:
+#define XATTR_MEASURE_SUFFIX_LEN (sizeof (XATTR_MEASURE_SUFFIX) -1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#182: FILE: security/ibac/ibac_main.c:53:
+#define XATTR_MEASURE_SUFFIX_LEN (sizeof (XATTR_MEASURE_SUFFIX) -1)
                                                                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*isec)...) over kzalloc(sizeof(struct ibac_isec_data)...)
#194: FILE: security/ibac/ibac_main.c:65:
+	isec = kzalloc(sizeof(struct ibac_isec_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#281: FILE: security/ibac/ibac_main.c:152:
+		printk(KERN_INFO "ibac: verify_metadata %s failed"

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: security/ibac/ibac_main.c:153:
+		printk(KERN_INFO "ibac: verify_metadata %s failed"
+		       "(rc: %d - status: %d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#290: FILE: security/ibac/ibac_main.c:161:
+			printk(KERN_INFO "ibac: verify_metadata %s "

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: security/ibac/ibac_main.c:162:
+			printk(KERN_INFO "ibac: verify_metadata %s "
+			       "(Integrity status: %s)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#316: FILE: security/ibac/ibac_main.c:187:
+		printk(KERN_INFO "ibac: %s verify_data failed "

WARNING:SPLIT_STRING: quoted string split across lines
#317: FILE: security/ibac/ibac_main.c:188:
+		printk(KERN_INFO "ibac: %s verify_data failed "
+		       "(rc: %d - status: %d)\n", filename, rc, status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#325: FILE: security/ibac/ibac_main.c:196:
+			printk(KERN_INFO "ibac: verify_data %s "

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: security/ibac/ibac_main.c:197:
+			printk(KERN_INFO "ibac: verify_data %s "
+			       "(Integrity status: FAIL)\n", filename);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#348: FILE: security/ibac/ibac_main.c:219:
+				 struct nameidata *nd)
 				                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#357: FILE: security/ibac/ibac_main.c:228:
+	dentry = (!nd || !nd->dentry) ? d_find_alias(inode) : nd->dentry;
 	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#360: FILE: security/ibac/ibac_main.c:231:
+	if (nd) {		/* preferably use fullname */
 	    ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'measure == 1'
#375: FILE: security/ibac/ibac_main.c:246:
+	if (S_ISREG(inode->i_mode) && (measure == 1)
+	    && (mask & MAY_READ)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#376: FILE: security/ibac/ibac_main.c:247:
+	if (S_ISREG(inode->i_mode) && (measure == 1)
+	    && (mask & MAY_READ)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#387: FILE: security/ibac/ibac_main.c:258:
+			printk(KERN_INFO "%s: %s - denied write access"

WARNING:SPLIT_STRING: quoted string split across lines
#388: FILE: security/ibac/ibac_main.c:259:
+			printk(KERN_INFO "%s: %s - denied write access"
+			       " (isec=%d)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#389: FILE: security/ibac/ibac_main.c:260:
+			       __FUNCTION__, fname, isec->mmapped);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#395: FILE: security/ibac/ibac_main.c:266:
+	if (!nd || !nd->dentry)
 	     ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#408: FILE: security/ibac/ibac_main.c:279:
+ * ^Ifile->f_security is 1 or 0.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: security/ibac/ibac_main.c:280:
+ * ^Iinode->i_security->mmapped is the *number* of processes which$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: security/ibac/ibac_main.c:281:
+ * ^I^Ihave this file mmapped(PROT_EXEC), so it can be >1.$

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#450: FILE: security/ibac/ibac_main.c:321:
+ * the file is being closed.  If we ever mmaped it for exec, then
                                          ^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416424.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 10 checks, 531 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416424.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
