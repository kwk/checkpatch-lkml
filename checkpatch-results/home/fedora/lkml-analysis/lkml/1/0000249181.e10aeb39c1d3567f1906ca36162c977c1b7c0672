WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#44: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: drivers/isdn/hardware/mISDN/Kconfig:6:
+config MISDN_HFCPCI
+	tristate "Support for HFC PCI cards"
+	depends on MISDN
+	depends on PCI
+	help
+	  Enable support for cards with Cologne Chip AG's
+          HFC PCI chip.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:20:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:61:
+#define HFCPCI_CONNECT ^I^I0xBC$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:92:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:176:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#271: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:192:
+	u_char fill1[0x20A0-D_FIFO_SIZE]; /* reserved, do not use */
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#273: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:194:
+	u_char fill2[0x20C0-0x20A2]; /* reserved, do not use */
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#275: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:196:
+	struct zt za[MAX_D_FRAMES+1];
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#276: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:197:
+	u_char fill3[0x4000-0x2100]; /* align 16K */
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:201:
+	struct zt	za[MAX_B_FRAMES+1]; /* only range 0x0..0x1F allowed */
 	         	               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#282: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:203:
+	u_char		fill[0x2100-0x2082]; /* alignment */
 	      		           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:206:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#306: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:227:
+#define Write_hfc(a, b, c) (writeb(c, (a->hw.pci_io)+b))
                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <Write_hfc>
#306: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:227:
+#define Write_hfc(a, b, c) (writeb(c, (a->hw.pci_io)+b))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#306: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:227:
+#define Write_hfc(a, b, c) (writeb(c, (a->hw.pci_io)+b))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#306: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:227:
+#define Write_hfc(a, b, c) (writeb(c, (a->hw.pci_io)+b))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#307: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:228:
+#define Read_hfc(a, b) (readb((a->hw.pci_io)+b))
                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Read_hfc>
#307: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:228:
+#define Read_hfc(a, b) (readb((a->hw.pci_io)+b))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#307: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:228:
+#define Read_hfc(a, b) (readb((a->hw.pci_io)+b))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#307: FILE: drivers/isdn/hardware/mISDN/hfc_pci.h:228:
+#define Read_hfc(a, b) (readb((a->hw.pci_io)+b))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#314: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#336: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:23:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#337: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:24:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <HFClist>
#358: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:45:
+static LIST_HEAD(HFClist);

CHECK:CAMELCASE: Avoid CamelCase: <HFClock>
#359: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:46:
+DEFINE_RWLOCK(HFClock);

CHECK:CAMELCASE: Avoid CamelCase: <hfcPCI_hw>
#387: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:74:
+struct hfcPCI_hw {

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#425: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:112:
+#define CLKDEL_TE	0x0e	/* CLKDEL in TE mode */
                  	    	             ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#428: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:115:
+
+

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#473: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:160:
+ * set mode (NT or TE)
                    ^^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#489: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:176:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#504: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:191:
+	printk(KERN_DEBUG "reset_hfcpci: entered\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reset_hfcpci', this function's name, in a string
#504: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:191:
+	printk(KERN_DEBUG "reset_hfcpci: entered\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#506: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:193:
+	printk(KERN_INFO "HFC_PCI: resetting HFC ChipId(%x)\n", val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:199:
+	pci_write_config_word(hc->pdev, PCI_COMMAND,
+	    PCI_ENA_MEMIO + PCI_ENA_MASTER);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#514: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:201:
+	printk(KERN_DEBUG "HFC-PCI status(%x) before reset\n", val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#522: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:209:
+	printk(KERN_DEBUG "HFC-PCI status(%x) after reset\n", val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#530: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:217:
+	printk(KERN_DEBUG "HFC-PCI status(%x) after %dus\n", val, cnt);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#555: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:242:
+	if (Read_hfc(hc, HFCPCI_INT_S1));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#557: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:244:
+	/* set NT/TE mode */
 	          ^^

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#569: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:256:
+	 * ST B-channel send disabled -> continous 1s
 	                                 ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <hfcpci_Timer>
#597: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:284:
+hfcpci_Timer(struct hfc_pci *hc)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#607: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:294:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Sel_BCS>
#612: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:299:
+Sel_BCS(struct hfc_pci *hc, int channel)

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#614: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:301:
+	if (test_bit(FLG_ACTIVE, &hc->bch[0].Flags) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:302:
+	if (test_bit(FLG_ACTIVE, &hc->bch[0].Flags) &&
+		(hc->bch[0].nr & channel))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:305:
+	else if (test_bit(FLG_ACTIVE, &hc->bch[1].Flags) &&
+		(hc->bch[1].nr & channel))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#647: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:334:
+	bzr->za[MAX_B_FRAMES].z2 = cpu_to_le16(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#673: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:360:
+		printk(KERN_DEBUG "hfcpci_clear_fifo_tx%d f1(%x) f2(%x) "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hfcpci_clear_fifo_tx', this function's name, in a string
#673: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:360:
+		printk(KERN_DEBUG "hfcpci_clear_fifo_tx%d f1(%x) f2(%x) "

WARNING:SPLIT_STRING: quoted string split across lines
#674: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:361:
+		printk(KERN_DEBUG "hfcpci_clear_fifo_tx%d f1(%x) f2(%x) "
+		    "z1(%x) z2(%x) state(%x)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#682: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:369:
+	bzt->za[MAX_B_FRAMES].z2 = cpu_to_le16(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#688: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:375:
+		printk(KERN_DEBUG

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hfcpci_clear_fifo_tx', this function's name, in a string
#689: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:376:
+		    "hfcpci_clear_fifo_tx%d f1(%x) f2(%x) z1(%x) z2(%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:387:
+hfcpci_empty_bfifo(struct bchannel *bch, struct bzfifo *bz,
+    u_char *bdata, int count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:387:
+    u_char *bdata, int count)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#707: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:394:
+		printk(KERN_DEBUG "hfcpci_empty_fifo\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count < 4'
#713: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:400:
+	if ((count > MAX_DATA_SIZE + 3) || (count < 4) ||
+	    (*(bdata + (le16_to_cpu(zp->z1) - B_SUB_VAL)))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#716: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:403:
+			printk(KERN_DEBUG "hfcpci_empty_fifo: incoming packet "

WARNING:SPLIT_STRING: quoted string split across lines
#717: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:404:
+			printk(KERN_DEBUG "hfcpci_empty_fifo: incoming packet "
+			    "invalid length %d or crc\n", count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#726: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:413:
+			printk(KERN_WARNING "HFCPCI: receive out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#726: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:413:
+		if (!bch->rx_skb) {
+			printk(KERN_WARNING "HFCPCI: receive out of memory\n");

CHECK:CAMELCASE: Avoid CamelCase: <recv_Bchannel>
#751: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:438:
+		recv_Bchannel(bch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#777: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:464:
+			printk(KERN_DEBUG

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rcnt < 4'
#784: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:471:
+		if ((rcnt > MAX_DFRAME_LEN + 3) || (rcnt < 4) ||
+		    (df->data[le16_to_cpu(zp->z1)])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'df->data[le16_to_cpu(zp->z1)]'
#784: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:471:
+		if ((rcnt > MAX_DFRAME_LEN + 3) || (rcnt < 4) ||
+		    (df->data[le16_to_cpu(zp->z1)])) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#787: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:474:
+				printk(KERN_DEBUG

WARNING:TYPO_SPELLING: 'paket' may be misspelled - perhaps 'packet'?
#788: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:475:
+				    "empty_fifo hfcpci paket inv. len "
 				                       ^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#789: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:476:
+				    "empty_fifo hfcpci paket inv. len "
+				    "%d or crc %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#802: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:489:
+				printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#802: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:489:
+			if (!dch->rx_skb) {
+				printk(KERN_WARNING

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#828: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:515:
+			df->za[df->f2 & D_FREG_MASK].z2 = cpu_to_le16((

CHECK:CAMELCASE: Avoid CamelCase: <recv_Dchannel>
#830: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:517:
+			recv_Dchannel(dch);

CHECK:BRACES: braces {} should be used on all arms of this statement
#863: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:550:
+	if (bch->rx_skb) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#882: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:569:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#883: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:570:
+		printk(KERN_WARNING "HFCPCI: receive out of memory\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#902: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:589:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hc->hw.bswapped'
#903: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:590:
+	if ((bch->nr & 2) && (!hc->hw.bswapped)) {

CHECK:CAMELCASE: Avoid CamelCase: <Begin>
#912: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:599:
+Begin:

CHECK:BRACES: braces {} should be used on all arms of this statement
#914: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:601:
+	if (bz->f1 != bz->f2) {
[...]
+	} else if (test_bit(FLG_TRANSPARENT, &bch->Flags))
[...]
+	else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#916: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:603:
+			printk(KERN_DEBUG "hfcpci rec ch(%x) f1(%d) f2(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:604:
+			printk(KERN_DEBUG "hfcpci rec ch(%x) f1(%d) f2(%d)\n",
+			    bch->nr, bz->f1, bz->f2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#925: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:612:
+			printk(KERN_DEBUG

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#949: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:636:
+
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#964: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:651:
+		printk(KERN_DEBUG "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#964: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:651:
+		printk(KERN_DEBUG "%s\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#971: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:658:
+	df = &((union fifo_area *) (hc->hw.fifos))->d_chan.d_tx;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#974: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:661:
+		printk(KERN_DEBUG "%s:f1(%d) f2(%d) z1(f1)(%x)\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:662:
+		printk(KERN_DEBUG "%s:f1(%d) f2(%d) z1(f1)(%x)\n", __func__,
+		    df->f1, df->f2,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#982: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:669:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#996: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:683:
+		printk(KERN_DEBUG "hfcpci_fill_Dfifo count(%d/%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:684:
+		printk(KERN_DEBUG "hfcpci_fill_Dfifo count(%d/%d)\n",
+			count, maxlen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1000: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:687:
+			printk(KERN_DEBUG "hfcpci_fill_Dfifo no fifo mem\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1034: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:721:
+^Istruct hfc_pci ^I*hc = bch->hw;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1043: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:730:
+		printk(KERN_DEBUG "%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1043: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:730:
+		printk(KERN_DEBUG "%s\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!bch->tx_skb'
#1044: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:731:
+	if ((!bch->tx_skb) || bch->tx_skb->len <= 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hc->hw.bswapped'
#1047: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:734:
+	if ((bch->nr & 2) && (!hc->hw.bswapped)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1059: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:746:
+			printk(KERN_DEBUG "hfcpci_fill_fifo_trans ch(%x) "

WARNING:SPLIT_STRING: quoted string split across lines
#1060: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:747:
+			printk(KERN_DEBUG "hfcpci_fill_fifo_trans ch(%x) "
+			    "cnt(%d) z1(%x) z2(%x)\n", bch->nr, count,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1086: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:773:
+			printk(KERN_DEBUG "hfcpci_FFt fcnt(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1087: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:774:
+			printk(KERN_DEBUG "hfcpci_FFt fcnt(%d) "
+			    "maxl(%d) nz1(%x) dst(%p)\n",

CHECK:CAMELCASE: Avoid CamelCase: <confirm_Bsend>
#1105: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:792:
+			confirm_Bsend(bch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1112: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:799:
+		printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1121: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:808:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1132: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:819:
+		printk(KERN_DEBUG "hfcpci_fill_fifo ch(%x) count(%d/%d)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hfcpci_fill_fifo', this function's name, in a string
#1132: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:819:
+		printk(KERN_DEBUG "hfcpci_fill_fifo ch(%x) count(%d/%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1133: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:820:
+		printk(KERN_DEBUG "hfcpci_fill_fifo ch(%x) count(%d/%d)\n",
+			bch->nr, count, maxlen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1137: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:824:
+			printk(KERN_DEBUG "hfcpci_fill_fifo no fifo mem\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hfcpci_fill_fifo', this function's name, in a string
#1137: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:824:
+			printk(KERN_DEBUG "hfcpci_fill_fifo no fifo mem\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1166: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:853:
+
+

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#1169: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:856:
+ * handle L1 state changes TE
                            ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#1176: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:863:
+		printk(KERN_DEBUG "%s: TE newstate %x\n",
 		                       ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1176: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:863:
+		printk(KERN_DEBUG "%s: TE newstate %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:864:
+		printk(KERN_DEBUG "%s: TE newstate %x\n",
+			__func__, dch->state);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1202: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:889:
+static void
+handle_nt_timer3(struct dchannel *dch) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:902:
+	_queue_data(&dch->dev.D, PH_ACTIVATE_IND,
+	    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1224: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:911:
+		printk(KERN_DEBUG "%s: NT newstate %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1225: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:912:
+		printk(KERN_DEBUG "%s: NT newstate %x\n",
+			__func__, dch->state);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1235: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:922:
+			if (Read_hfc(hc, HFCPCI_INT_S1));

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1237: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:924:
+			udelay(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:954:
+		_queue_data(&dch->dev.D, PH_DEACTIVATE_IND,
+		    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1279: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:966:
+			if (!test_and_clear_bit(FLG_L2_ACTIVATED,
+			    &dch->Flags)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1301: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:988:
+	if (hc->hw.protocol == ISDN_P_NT_S0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1307: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:994:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1361: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1048:
+		_queue_data(&dch->dev.D, cmd, MISDN_ID_ANY, 0, NULL,
+			GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1053:
+		_queue_data(&dch->dev.D, cmd, MISDN_ID_ANY, 0, NULL,
+			GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1370: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1057:
+			printk(KERN_DEBUG "%s: unknown command %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1371: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1058:
+			printk(KERN_DEBUG "%s: unknown command %x\n",
+			    __func__, cmd);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1383: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1070:
+	if (bch->tx_skb && bch->tx_idx < bch->tx_skb->len)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1385: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1072:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1396: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1083:
+	if (dch->tx_skb && dch->tx_idx < dch->tx_skb->len)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1398: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1085:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1423: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1110:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1433: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1120:
+		printk(KERN_DEBUG "HFC-PCI irq %x\n", val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1438: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1125:
+			printk(KERN_DEBUG "ph_state chg %d->%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1126:
+			printk(KERN_DEBUG "ph_state chg %d->%d\n",
+				hc->dch.state, exval);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1457: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1144:
+			printk(KERN_DEBUG "hfcpci spurious 0x08 IRQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1464: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1151:
+			printk(KERN_DEBUG "hfcpci spurious 0x10 IRQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1471: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1158:
+			printk(KERN_DEBUG "hfcpci spurious 0x01 IRQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1478: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1165:
+			printk(KERN_DEBUG "hfcpci spurious 0x02 IRQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1510: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1197:
+		printk(KERN_DEBUG

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1515: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1202:
+	pcm_mode = (bc>>24) & 0xff;
 	              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1518: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1205:
+			printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1521: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1208:
+		rx_slot = (bc>>8) & 0xff;
 		             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1522: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1209:
+		tx_slot = (bc>>16) & 0xff;
 		             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1526: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1213:
+		printk(KERN_WARNING "%s: no pcm channel id but HFC_CFG_PCM\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1527: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1214:
+		printk(KERN_WARNING "%s: no pcm channel id but HFC_CFG_PCM\n",
+		    __func__);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1583: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1270:
+		hfcpci_clear_fifo_rx(hc, (fifo2 & 2)?1:0);
 		                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1583: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1270:
+		hfcpci_clear_fifo_rx(hc, (fifo2 & 2)?1:0);
 		                                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1584: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1271:
+		hfcpci_clear_fifo_tx(hc, (fifo2 & 2)?1:0);
 		                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1584: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1271:
+		hfcpci_clear_fifo_tx(hc, (fifo2 & 2)?1:0);
 		                                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1616: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1303:
+		hfcpci_clear_fifo_rx(hc, (fifo2 & 2)?1:0);
 		                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1616: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1303:
+		hfcpci_clear_fifo_rx(hc, (fifo2 & 2)?1:0);
 		                                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1617: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1304:
+		hfcpci_clear_fifo_tx(hc, (fifo2 & 2)?1:0);
 		                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1617: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1304:
+		hfcpci_clear_fifo_tx(hc, (fifo2 & 2)?1:0);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1643: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1330:
+		printk(KERN_DEBUG "prot not known %x\n", protocol);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'protocol == ISDN_P_NONE'
#1647: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1334:
+		if ((protocol == ISDN_P_NONE) ||
+			(protocol == -1)) {	/* init case */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1648: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1335:
+		if ((protocol == ISDN_P_NONE) ||
+			(protocol == -1)) {	/* init case */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1663: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1350:
+			printk(KERN_DEBUG "%s: Write_hfc: B2_SSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1664: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1351:
+			printk(KERN_DEBUG "%s: Write_hfc: B2_SSL 0x%x\n",
+				__func__, tx_slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1665: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1352:
+			printk(KERN_DEBUG "%s: Write_hfc: B2_RSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1666: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1353:
+			printk(KERN_DEBUG "%s: Write_hfc: B2_RSL 0x%x\n",
+				__func__, rx_slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1672: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1359:
+			printk(KERN_DEBUG "%s: Write_hfc: B1_SSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1673: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1360:
+			printk(KERN_DEBUG "%s: Write_hfc: B1_SSL 0x%x\n",
+				__func__, tx_slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1674: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1361:
+			printk(KERN_DEBUG "%s: Write_hfc: B1_RSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1675: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1362:
+			printk(KERN_DEBUG "%s: Write_hfc: B1_RSL 0x%x\n",
+				__func__, rx_slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1699: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1386:
+		printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1703: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1390:
+		printk(KERN_DEBUG

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1711: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1398:
+		hfcpci_clear_fifo_rx(hc, (chan & 2)?1:0);
 		                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1711: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1398:
+		hfcpci_clear_fifo_rx(hc, (chan & 2)?1:0);
 		                                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1734: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1421:
+		hfcpci_clear_fifo_rx(hc, (chan & 2)?1:0);
 		                                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1734: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1421:
+		hfcpci_clear_fifo_rx(hc, (chan & 2)?1:0);
 		                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1752: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1439:
+		printk(KERN_DEBUG "prot not known %x\n", protocol);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_ctrl_req>
#1796: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1483:
+channel_bctrl(struct bchannel *bch, struct mISDN_ctrl_req *cq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1805: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1492:
+		printk(KERN_WARNING "%s: unknown Op %x\n", __func__, cq->op);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1811: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1498:
+}
+static int

CHECK:CAMELCASE: Avoid CamelCase: <mISDNchannel>
#1812: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1499:
+hfc_bctrl(struct mISDNchannel *ch, u_int cmd, void *arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1820: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1507:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n", __func__, cmd, arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1851: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1538:
+		printk(KERN_WARNING "%s: unknown prim(%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1852: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1539:
+		printk(KERN_WARNING "%s: unknown prim(%x)\n",
+			__func__, cmd);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNdevice>
#1863: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1550:
+	struct mISDNdevice	*dev = container_of(ch, struct mISDNdevice, D);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNhead>
#1867: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1554:
+	struct mISDNhead	*hh = mISDN_HEAD_P(skb);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_HEAD_P>
#1867: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1554:
+	struct mISDNhead	*hh = mISDN_HEAD_P(skb);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1875: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1562:
+		if (ret > 0) { /* direct TX */
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1881: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1568:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1886: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1573:
+		if (hc->hw.protocol == ISDN_P_NT_S0) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1894: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1581:
+				_queue_data(&dch->dev.D, PH_ACTIVATE_IND,
+				    MISDN_ID_ANY, 0, NULL, GFP_ATOMIC);

CHECK:BRACES: Unbalanced braces around else statement
#1900: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1587:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1958: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1645:
+		if (ret > 0) { /* direct TX */
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1965: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1652:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1977: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1664:
+			_queue_data(ch, PH_ACTIVATE_IND, MISDN_ID_ANY, 0,
+				NULL, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1982: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1669:
+		_queue_data(ch, PH_DEACTIVATE_IND, MISDN_ID_ANY, 0,
+			NULL, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1998: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1685:
+	printk(KERN_DEBUG "inithfcpci: entered\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'inithfcpci', this function's name, in a string
#1998: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1685:
+	printk(KERN_DEBUG "inithfcpci: entered\n");

CHECK:SPACING: No space is necessary after a cast
#1999: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1686:
+	hc->dch.timer.function = (void *) hfcpci_dbusy_timer;

CHECK:SPACING: No space is necessary after a cast
#2000: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1687:
+	hc->dch.timer.data = (long) &hc->dch;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2007: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1694:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2014: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1701:
+	printk(KERN_DEBUG "init_card: entered\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_card', this function's name, in a string
#2014: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1701:
+	printk(KERN_DEBUG "init_card: entered\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2016: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1703:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2021: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1708:
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#2031: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1718:
+		 * this is only allowed, if an IRQ routine is allready
 		                                              ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2038: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1725:
+		schedule_timeout((80*HZ)/1000);
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2038: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1725:
+		schedule_timeout((80*HZ)/1000);
 		                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2039: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1726:
+		printk(KERN_INFO "HFC PCI: IRQ %d count %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2040: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1727:
+		printk(KERN_INFO "HFC PCI: IRQ %d count %d\n",
+			hc->irq, hc->irqcnt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2048: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1735:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2050: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1737:
+			    "HFC PCI: IRQ(%d) getting no interrupts "
+			    "during init %d\n", hc->irq, 4 - cnt);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2054: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1741:
+				return -EIO;
+			} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2092: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1779:
+			printk(KERN_DEBUG "%s: Write_hfc: B1_SSL/RSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2093: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1780:
+			printk(KERN_DEBUG "%s: Write_hfc: B1_SSL/RSL 0x%x\n",
+			    __func__, slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2104: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1791:
+			printk(KERN_DEBUG "%s: Write_hfc: B2_SSL/RSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2105: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1792:
+			printk(KERN_DEBUG "%s: Write_hfc: B2_SSL/RSL 0x%x\n",
+			    __func__, slot);

CHECK:BRACES: Unbalanced braces around else statement
#2113: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1800:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2134: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1821:
+		printk(KERN_DEBUG "%s: Write_hfc: B1_SSL/RSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2135: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1822:
+		printk(KERN_DEBUG "%s: Write_hfc: B1_SSL/RSL 0x%x\n",
+		    __func__, slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2142: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1829:
+		printk(KERN_DEBUG "%s: Write_hfc: B2_SSL/RSL 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2143: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1830:
+		printk(KERN_DEBUG "%s: Write_hfc: B2_SSL/RSL 0x%x\n",
+		    __func__, slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2157: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1844:
+		printk(KERN_WARNING "%s: unknown Op %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2158: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1845:
+		printk(KERN_WARNING "%s: unknown Op %x\n",
+		    __func__, cq->op);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2167: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1854:
+open_dchannel(struct hfc_pci *hc, struct mISDNchannel *ch,
+    struct channel_req *rq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2167: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1854:
+    struct channel_req *rq)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2172: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1859:
+		printk(KERN_DEBUG "%s: dev(%d) open from %p\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2173: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1860:
+		printk(KERN_DEBUG "%s: dev(%d) open from %p\n", __func__,
+		    hc->dch.dev.id, __builtin_return_address(0));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch->protocol == ISDN_P_NT_S0'
#2197: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1884:
+	if (((ch->protocol == ISDN_P_NT_S0) && (hc->dch.state == 3)) ||
+	    ((ch->protocol == ISDN_P_TE_S0) && (hc->dch.state == 7))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->dch.state == 3'
#2197: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1884:
+	if (((ch->protocol == ISDN_P_NT_S0) && (hc->dch.state == 3)) ||
+	    ((ch->protocol == ISDN_P_TE_S0) && (hc->dch.state == 7))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch->protocol == ISDN_P_TE_S0'
#2197: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1884:
+	if (((ch->protocol == ISDN_P_NT_S0) && (hc->dch.state == 3)) ||
+	    ((ch->protocol == ISDN_P_TE_S0) && (hc->dch.state == 7))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->dch.state == 7'
#2197: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1884:
+	if (((ch->protocol == ISDN_P_NT_S0) && (hc->dch.state == 3)) ||
+	    ((ch->protocol == ISDN_P_TE_S0) && (hc->dch.state == 7))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2200: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1887:
+		_queue_data(ch, PH_ACTIVATE_IND, MISDN_ID_ANY,
+		    0, NULL, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2204: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1891:
+		printk(KERN_WARNING "%s:cannot get module\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2223: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1910:
+		printk(KERN_WARNING "%s:cannot get module\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2240: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1927:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2241: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1928:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",
+		    __func__, cmd, arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2252: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1939:
+			printk(KERN_DEBUG "%s: dev(%d) close from %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2253: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1940:
+			printk(KERN_DEBUG "%s: dev(%d) close from %p\n",
+			    __func__, hc->dch.dev.id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2262: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1949:
+			printk(KERN_DEBUG "%s: unknown command %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2263: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1950:
+			printk(KERN_DEBUG "%s: unknown command %x\n",
+			    __func__, cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2274: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1961:
+	printk(KERN_INFO "mISDN: HFC-PCI driver %s\n", hfcpci_revision);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2279: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1966:
+		printk(KERN_WARNING "HFC-PCI: No IRQ for PCI card found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2285: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1972:
+		printk(KERN_WARNING "HFC-PCI: No IO-Mem for PCI card found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2294: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1981:
+		printk(KERN_WARNING

CHECK:SPACING: No space is necessary after a cast
#2300: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1987:
+	hc->hw.pci_io = ioremap((ulong) hc->hw.pci_io, 256);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2301: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1988:
+	printk(KERN_INFO

CHECK:SPACING: No space is necessary after a cast
#2303: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1990:
+		(u_long) hc->hw.pci_io, (u_long) hc->hw.fifos,

CHECK:SPACING: No space is necessary after a cast
#2304: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:1991:
+		(u_long) virt_to_bus(hc->hw.fifos),

CHECK:SPACING: No space is necessary after a cast
#2314: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2001:
+	hc->hw.timer.function = (void *) hfcpci_Timer;

CHECK:SPACING: No space is necessary after a cast
#2315: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2002:
+	hc->hw.timer.data = (long) hc;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2322: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2009:
+static void
+release_card(struct hfc_pci *hc) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hc->dch.timer.function"
#2331: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2018:
+	if (hc->dch.timer.function != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_unregister_device>
#2341: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2028:
+	mISDN_unregister_device(&hc->dch.dev);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freebchannel>
#2342: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2029:
+	mISDN_freebchannel(&hc->bch[1]);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freedchannel>
#2344: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2031:
+	mISDN_freedchannel(&hc->dch);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initdchannel>
#2363: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2050:
+	mISDN_initdchannel(&card->dch, MAX_DFRAME_LEN_L1, ph_state);

CHECK:CAMELCASE: Avoid CamelCase: <Dprotocols>
#2365: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2052:
+	card->dch.dev.Dprotocols = (1 << ISDN_P_TE_S0) | (1 << ISDN_P_NT_S0);

CHECK:CAMELCASE: Avoid CamelCase: <Bprotocols>
#2366: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2053:
+	card->dch.dev.Bprotocols = (1 << (ISDN_P_B_RAW & ISDN_P_B_MASK)) |

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initbchannel>
#2375: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2062:
+		mISDN_initbchannel(&card->bch[i], MAX_DATA_MEM);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_register_device>
#2386: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2073:
+	err = mISDN_register_device(&card->dch.dev, name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2393: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2080:
+	printk(KERN_INFO "HFC %d cards installed\n", HFC_cnt);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2411: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2098:
+static const struct _hfc_map hfc_map[] =
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2443: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2130:
+static struct pci_device_id hfc_ids[] =
+{

CHECK:SPACING: No space is necessary after a cast
#2445: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2132:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[0]},

CHECK:SPACING: No space is necessary after a cast
#2447: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2134:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[1]},

CHECK:SPACING: No space is necessary after a cast
#2449: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2136:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[2]},

CHECK:SPACING: No space is necessary after a cast
#2451: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2138:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[3]},

CHECK:SPACING: No space is necessary after a cast
#2453: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2140:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[4]},

CHECK:SPACING: No space is necessary after a cast
#2455: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2142:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[5]},

CHECK:SPACING: No space is necessary after a cast
#2457: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2144:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[6]},

CHECK:SPACING: No space is necessary after a cast
#2459: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2146:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[7]},

CHECK:SPACING: No space is necessary after a cast
#2461: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2148:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[8]},

CHECK:SPACING: No space is necessary after a cast
#2463: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2150:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[9]},

CHECK:SPACING: No space is necessary after a cast
#2465: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2152:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[10]},

CHECK:SPACING: No space is necessary after a cast
#2467: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2154:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[11]},

CHECK:SPACING: No space is necessary after a cast
#2469: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2156:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[12]},

CHECK:SPACING: No space is necessary after a cast
#2471: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2158:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[13]},

CHECK:SPACING: No space is necessary after a cast
#2473: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2160:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[14]},

CHECK:SPACING: No space is necessary after a cast
#2475: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2162:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[15]},

CHECK:SPACING: No space is necessary after a cast
#2477: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2164:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[16]},

CHECK:SPACING: No space is necessary after a cast
#2479: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2166:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[17]},

CHECK:SPACING: No space is necessary after a cast
#2481: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2168:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[18]},

CHECK:SPACING: No space is necessary after a cast
#2483: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2170:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[19]},

CHECK:SPACING: No space is necessary after a cast
#2485: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2172:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[20]},

CHECK:SPACING: No space is necessary after a cast
#2487: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2174:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[21]},

CHECK:SPACING: No space is necessary after a cast
#2489: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2176:
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0, (unsigned long) &hfc_map[22]},

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2493: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2180:
+static int __devinit

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof(struct hfc_pci)...)
#2500: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2187:
+	card = kzalloc(sizeof(struct hfc_pci), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2502: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2189:
+		printk(KERN_ERR "No kmem for HFC card\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2502: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2189:
+	if (!card) {
+		printk(KERN_ERR "No kmem for HFC card\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2513: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2200:
+	printk(KERN_INFO "mISDN_hfcpci: found adapter %s at %s\n",

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2524: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2211:
+static void __devexit

CHECK:BRACES: Unbalanced braces around else statement
#2534: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2221:
+	} else

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#2536: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2223:
+			printk(KERN_WARNING "%s: drvdata allready removed\n",
 			                                 ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2536: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2223:
+			printk(KERN_WARNING "%s: drvdata allready removed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2537: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2224:
+			printk(KERN_WARNING "%s: drvdata allready removed\n",
+			    __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2540: FILE: drivers/isdn/hardware/mISDN/hfcpci.c:2227:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 115 warnings, 173 checks, 2503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
