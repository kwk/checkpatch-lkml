WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: samples/Kconfig:16:
+config SAMPLE_TRACE
+	tristate "Build trace example -- loadable modules only"
+	depends on TRACE && KPROBES && m
+	help
+	  This builds a trace example module.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: samples/trace/fork_trace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: samples/trace/fork_trace.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: samples/trace/fork_trace.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: samples/trace/fork_trace.c:107:
+	kprobes_trace = trace_setup("trace_example", PROBE_POINT,
+				     1024, 8, flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#195: FILE: samples/trace/fork_trace.c:120:
+		printk(KERN_ERR "fork_trace: register_kprobe failed\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: samples/trace/sem_watch.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#231: FILE: samples/trace/sem_watch.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#232: FILE: samples/trace/sem_watch.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#277: FILE: samples/trace/sem_watch.c:64:
+void probe_sem_generic(const struct marker *, void *, const char *, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct marker *' should also have an identifier name
#277: FILE: samples/trace/sem_watch.c:64:
+void probe_sem_generic(const struct marker *, void *, const char *, ...);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#277: FILE: samples/trace/sem_watch.c:64:
+void probe_sem_generic(const struct marker *, void *, const char *, ...);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#277: FILE: samples/trace/sem_watch.c:64:
+void probe_sem_generic(const struct marker *, void *, const char *, ...);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#289: FILE: samples/trace/sem_watch.c:76:
+static struct probe_data probes[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: samples/trace/sem_watch.c:115:
+	struct timespec ts;
+	ktime_get_real_ts(&ts);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#329: FILE: samples/trace/sem_watch.c:116:
+	return (s64) ts.tv_sec * NSEC_PER_SEC + ts.tv_nsec;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: samples/trace/sem_watch.c:128:
+void probe_sem_generic(const struct marker *mdata, void *private,
+			const char *format, ...)

CHECK:SPACING: No space is necessary after a cast
#348: FILE: samples/trace/sem_watch.c:135:
+	struct probe_data *pd = (struct probe_data *) mdata->private;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: samples/trace/sem_watch.c:153:
+	len = snprintf(NULL, 0, ":%lld:%s:%p:%d:%s\n",
+	tstamp, pd->name, semaddr, current->pid, current->comm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: samples/trace/sem_watch.c:158:
+		snprintf(record, len, ":%lld:%s:%p:%d:%s\n",
+		tstamp, pd->name, semaddr, current->pid, current->comm);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#382: FILE: samples/trace/sem_watch.c:169:
+	synchronize_sched();    /* Wait for probes to finish */

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: samples/trace/sem_watch.c:188:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: samples/trace/sem_watch.c:192:
+		result = marker_probe_register(probes[i].name, probes[i].format,
+					probes[i].probe_func, &probes[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#407: FILE: samples/trace/sem_watch.c:194:
+			printk(KERN_INFO "Unable to register probe %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: samples/trace/sem_watch.c:195:
+			printk(KERN_INFO "Unable to register probe %s\n",
+				probes[i].name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#414: FILE: samples/trace/sem_watch.c:201:
+			printk(KERN_INFO "Unable to arm probe %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: samples/trace/sem_watch.c:202:
+			printk(KERN_INFO "Unable to arm probe %s\n",
+				probes[i].name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000358751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 13 warnings, 10 checks, 374 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000358751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
