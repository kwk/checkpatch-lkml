WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> On Sat, 6 Sep 2008 08:45:58 +0200 Krzysztof Helt <krzysztof.h1@poczta.fm> 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#254: FILE: mm/vmalloc.c:77:
+	BUG_ON(addr >= end);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: mm/vmalloc.c:88:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#273: FILE: mm/vmalloc.c:133:
+	printk("vunmap_page_range (%lx-%lx size=%lx)\n", addr, end, end-addr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#273: FILE: mm/vmalloc.c:133:
+	printk("vunmap_page_range (%lx-%lx size=%lx)\n", addr, end, end-addr);
 	                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vunmap_page_range', this function's name, in a string
#273: FILE: mm/vmalloc.c:133:
+	printk("vunmap_page_range (%lx-%lx size=%lx)\n", addr, end, end-addr);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#282: FILE: mm/vmalloc.c:220:
+	printk("vmap_page_range (%lx-%lx size=%lx)\n", addr, end, end-addr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#282: FILE: mm/vmalloc.c:220:
+	printk("vmap_page_range (%lx-%lx size=%lx)\n", addr, end, end-addr);
 	                                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vmap_page_range', this function's name, in a string
#282: FILE: mm/vmalloc.c:220:
+	printk("vmap_page_range (%lx-%lx size=%lx)\n", addr, end, end-addr);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#292: FILE: mm/vmalloc.c:434:
+	printk("alloc_vmap_area within(%lx-%lx) size=%lx returns=(%lx-%lx)\n", vstart, vend, size, addr, addr+size);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: mm/vmalloc.c:434:
+	printk("alloc_vmap_area within(%lx-%lx) size=%lx returns=(%lx-%lx)\n", vstart, vend, size, addr, addr+size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#292: FILE: mm/vmalloc.c:434:
+	printk("alloc_vmap_area within(%lx-%lx) size=%lx returns=(%lx-%lx)\n", vstart, vend, size, addr, addr+size);
 	                                                                                                     ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#302: FILE: mm/vmalloc.c:451:
+	printk("free_vmap_area (%lx-%lx size=%lx)\n", va->va_start, va->va_end, va->va_end - va->va_start);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#302: FILE: mm/vmalloc.c:451:
+	printk("free_vmap_area (%lx-%lx size=%lx)\n", va->va_start, va->va_end, va->va_end - va->va_start);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230499.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 4 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230499.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
