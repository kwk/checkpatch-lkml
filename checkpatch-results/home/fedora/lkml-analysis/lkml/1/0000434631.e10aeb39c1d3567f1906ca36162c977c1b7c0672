ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void init_i2c_ioports() should probably be void init_i2c_ioports(void)
#58: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:55:
+static void init_i2c_ioports()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: arch/powerpc/sysdev/fsl_soc.c:1119:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#139: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: drivers/i2c/algos/i2c-algo-8xx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#159: FILE: drivers/i2c/algos/i2c-algo-8xx.c:16:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#160: FILE: drivers/i2c/algos/i2c-algo-8xx.c:17:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/i2c/algos/i2c-algo-8xx.c:22:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#180: FILE: drivers/i2c/algos/i2c-algo-8xx.c:37:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#181: FILE: drivers/i2c/algos/i2c-algo-8xx.c:38:
+#include <asm/cacheflush.h>

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/i2c/algos/i2c-algo-8xx.c:52:
+	i2c8xx_t *i2c = (i2c8xx_t *) dev_id;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#197: FILE: drivers/i2c/algos/i2c-algo-8xx.c:54:
+#if 0

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_init', this function's name, in a string
#222: FILE: drivers/i2c/algos/i2c-algo-8xx.c:79:
+		dev_dbg(adap->dev, "cpm_iic_init()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#243: FILE: drivers/i2c/algos/i2c-algo-8xx.c:100:
+	iip->iic_tbase = r_tbase = cpm->dp_addr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#244: FILE: drivers/i2c/algos/i2c-algo-8xx.c:101:
+	iip->iic_rbase = r_rbase = cpm->dp_addr + sizeof(cbd_t) * 2;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#316: FILE: drivers/i2c/algos/i2c-algo-8xx.c:173:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: drivers/i2c/algos/i2c-algo-8xx.c:176:
+static void cpm_reset_iic_params(iic_t * iip)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/i2c/algos/i2c-algo-8xx.c:206:
+	i2c8xx_t *i2c = cpm->i2c;
+	if (cpm->reloc == 0) {	/* micro code disabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#355: FILE: drivers/i2c/algos/i2c-algo-8xx.c:212:
+			printk("force_close()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'force_close', this function's name, in a string
#355: FILE: drivers/i2c/algos/i2c-algo-8xx.c:212:
+			printk("force_close()\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#383: FILE: drivers/i2c/algos/i2c-algo-8xx.c:240:
+	if (cpm->reloc) {
+		cpm_reset_iic_params(iip);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#387: FILE: drivers/i2c/algos/i2c-algo-8xx.c:244:
+	tbdf = (cbd_t *) cpm_dpram_addr(iip->iic_tbase);

CHECK:SPACING: No space is necessary after a cast
#388: FILE: drivers/i2c/algos/i2c-algo-8xx.c:245:
+	rbdf = (cbd_t *) cpm_dpram_addr(iip->iic_rbase);

CHECK:SPACING: No space is necessary after a cast
#395: FILE: drivers/i2c/algos/i2c-algo-8xx.c:252:
+	tb = (u_char *) (((uint) tb + 15) & ~15);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_read', this function's name, in a string
#401: FILE: drivers/i2c/algos/i2c-algo-8xx.c:258:
+		dev_dbg(adap->dev, "cpm_iic_read(abyte=0x%x)\n", abyte);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#408: FILE: drivers/i2c/algos/i2c-algo-8xx.c:265:
+	iip->iic_mrblr = count + 1;	/* prevent excessive read, +1
+					   is needed otherwise will the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: drivers/i2c/algos/i2c-algo-8xx.c:266:
+					   RXB interrupt come too early */

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#419: FILE: drivers/i2c/algos/i2c-algo-8xx.c:276:
+	out_8(&i2c->i2c_i2cmr, 0x13);	/* Enable some interupts */
 	                             	               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#435: FILE: drivers/i2c/algos/i2c-algo-8xx.c:292:
+	/* Chip errata, clear enable. This is not needed on rev D4 CPUs.
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: drivers/i2c/algos/i2c-algo-8xx.c:292:
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#502: FILE: drivers/i2c/algos/i2c-algo-8xx.c:359:
+	if (cpm->reloc) {
+		cpm_reset_iic_params(iip);
+	}

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/i2c/algos/i2c-algo-8xx.c:363:
+	tb = (u_char *) (((uint) tb + 15) & ~15);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_write', this function's name, in a string
#513: FILE: drivers/i2c/algos/i2c-algo-8xx.c:370:
+		dev_dbg(adap->dev, "cpm_iic_write(abyte=0x%x)\n", abyte);

CHECK:SPACING: No space is necessary after a cast
#517: FILE: drivers/i2c/algos/i2c-algo-8xx.c:374:
+	tbdf = (cbd_t *) cpm_dpram_addr(iip->iic_tbase);

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#528: FILE: drivers/i2c/algos/i2c-algo-8xx.c:385:
+	out_8(&i2c->i2c_i2cmr, 0x13);	/* Enable some interupts */
 	                             	               ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#544: FILE: drivers/i2c/algos/i2c-algo-8xx.c:401:
+	/* Chip errata, clear enable. This is not needed on rev D4 CPUs.
+	   Disabling I2C too early may cause too short stop condition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#544: FILE: drivers/i2c/algos/i2c-algo-8xx.c:401:
+	   Disabling I2C too early may cause too short stop condition */

WARNING:SPLIT_STRING: quoted string split across lines
#580: FILE: drivers/i2c/algos/i2c-algo-8xx.c:437:
+			dev_dbg(adap->dev, "i2c-algo-8xx.o: "
+				"#%d addr=0x%x flags=0x%x len=%d\n buf=%lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#596: FILE: drivers/i2c/algos/i2c-algo-8xx.c:453:
+			if (ret < pmsg->len) {
+				return (ret < 0) ? ret : -EREMOTEIO;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#605: FILE: drivers/i2c/algos/i2c-algo-8xx.c:462:
+			if (ret < pmsg->len) {
+				return (ret < 0) ? ret : -EREMOTEIO;
+			}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#658: FILE: drivers/i2c/algos/i2c-algo-8xx.c:515:
+EXPORT_SYMBOL(i2c_8xx_add_bus);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#659: FILE: drivers/i2c/algos/i2c-algo-8xx.c:516:
+EXPORT_SYMBOL(i2c_8xx_del_bus);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#706: FILE: drivers/i2c/busses/i2c-rpx.c:31:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: drivers/i2c/busses/i2c-rpx.c:56:
+^I/* Pointer to Communication Processor $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#736: FILE: drivers/i2c/busses/i2c-rpx.c:58:
+	cp = data->cp = (cpm8xx_t *)immr_map(im_cpm);

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: drivers/i2c/busses/i2c-rpx.c:61:
+  ^Iif (data->irq < 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: drivers/i2c/busses/i2c-rpx.c:61:
+  ^Iif (data->irq < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/i2c/busses/i2c-rpx.c:61:
+  ^Iif (data->irq < 0)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->iip"
#749: FILE: drivers/i2c/busses/i2c-rpx.c:68:
+	if (data->iip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->i2c"
#769: FILE: drivers/i2c/busses/i2c-rpx.c:80:
+	if (data->i2c == NULL)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#782: FILE: drivers/i2c/busses/i2c-rpx.c:89:
+static int i2c_rpx_probe(struct of_device* ofdev, const struct of_device_id *match)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#791: FILE: drivers/i2c/busses/i2c-rpx.c:94:
+	if (!(i2c = kzalloc(sizeof(*i2c), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#791: FILE: drivers/i2c/busses/i2c-rpx.c:94:
+	if (!(i2c = kzalloc(sizeof(*i2c), GFP_KERNEL))) {
+		return -ENOMEM;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#821: FILE: drivers/i2c/busses/i2c-rpx.c:108:
+	if ((result = i2c_8xx_add_bus(&i2c->adap) < 0)) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#830: FILE: drivers/i2c/busses/i2c-rpx.c:116:
+static int i2c_rpx_remove(struct of_device* ofdev)

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#842: FILE: drivers/i2c/busses/i2c-rpx.c:127:
+static struct of_device_id i2c_rpx_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#883: FILE: include/linux/i2c-algo-8xx.h:1:
+/* ------------------------------------------------------------------------- */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#907: FILE: include/linux/i2c-algo-8xx.h:25:
+extern int i2c_8xx_add_bus(struct i2c_adapter *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#907: FILE: include/linux/i2c-algo-8xx.h:25:
+extern int i2c_8xx_add_bus(struct i2c_adapter *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#908: FILE: include/linux/i2c-algo-8xx.h:26:
+extern int i2c_8xx_del_bus(struct i2c_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#908: FILE: include/linux/i2c-algo-8xx.h:26:
+extern int i2c_8xx_del_bus(struct i2c_adapter *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434631.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 33 warnings, 15 checks, 818 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434631.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
