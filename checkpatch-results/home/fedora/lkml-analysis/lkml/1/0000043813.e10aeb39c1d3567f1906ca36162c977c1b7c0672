WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#184: FILE: drivers/misc/sgi-gru/grufile.c:339:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/misc/sgi-gru/grufile.c:363:
+static int gru_chiplet_setup_tlb_irq(int chiplet, char *irq_name,
+			irq_handler_t irq_handler, int cpu, int blade)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#230: FILE: drivers/misc/sgi-gru/grufile.c:377:
+			printk(KERN_ERR "%s: set_irq_chip failed, errno=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#237: FILE: drivers/misc/sgi-gru/grufile.c:384:
+			printk(KERN_ERR "%s: request_irq failed, errno=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/misc/sgi-gru/grufile.c:413:
+static int gru_chiplet_setup_tlb_irq(int chiplet, char *irq_name,
+			irq_handler_t irq_handler, int cpu, int blade)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#278: FILE: drivers/misc/sgi-gru/grufile.c:425:
+		printk(KERN_ERR "%s: uv_setup_irq failed, errno=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: drivers/misc/sgi-gru/grufile.c:433:
+		printk(KERN_ERR "%s: request_irq failed, errno=%d\n",

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#522: FILE: drivers/misc/sgi-gru/grutables.h:621:
+#define uv_cpu_core_number(p)		(((cpu_physical_id(p) >> 2) & 4) |	\
+					((cpu_physical_id(p) >> 1) & 3))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#531: FILE: drivers/misc/sgi-gru/grutables.h:646:
+extern irqreturn_t gru0_intr(int irq, void *dev_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#532: FILE: drivers/misc/sgi-gru/grutables.h:647:
+extern irqreturn_t gru1_intr(int irq, void *dev_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#533: FILE: drivers/misc/sgi-gru/grutables.h:648:
+extern irqreturn_t gru_intr_mblade(int irq, void *dev_id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043813.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 6 checks, 471 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043813.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
