WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#40: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: fs/pohmelfs/crypto.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/pohmelfs/crypto.c:33:
+		dprintk("%s: idx: %u: failed to allocate hash '%s', err: %d.\n",
+				__func__, psb->idx, psb->hash_string, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: fs/pohmelfs/crypto.c:45:
+		dprintk("%s: idx: %u: failed to set key for hash '%s', err: %d.\n",
+				__func__, psb->idx, psb->hash_string, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: fs/pohmelfs/crypto.c:69:
+		dprintk("%s: idx: %u: failed to allocate cipher '%s', err: %d.\n",
+				__func__, psb->idx, psb->cipher_string, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: fs/pohmelfs/crypto.c:78:
+		dprintk("%s: idx: %u: failed to set key for cipher '%s', err: %d.\n",
+				__func__, psb->idx, psb->cipher_string, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: fs/pohmelfs/crypto.c:111:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/pohmelfs/crypto.c:153:
+static int pohmelfs_crypto_process(struct ablkcipher_request *req,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#216: FILE: fs/pohmelfs/crypto.c:172:
+	switch (err) {
+		case -EINPROGRESS:
+		case -EBUSY:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/pohmelfs/crypto.c:176:
+			err = wait_for_completion_interruptible_timeout(&complete.complete,
+					timeout);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: fs/pohmelfs/crypto.c:190:
+int pohmelfs_crypto_process_input_data(struct pohmelfs_crypto_engine *e, u64 cmd_iv,
+		void *data, struct page *page, unsigned int size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: fs/pohmelfs/crypto.c:194:
+^I$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#243: FILE: fs/pohmelfs/crypto.c:199:
+		__func__, e, cmd_iv, data, page, (page)?page->index:0, size);
 		                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#243: FILE: fs/pohmelfs/crypto.c:199:
+		__func__, e, cmd_iv, data, page, (page)?page->index:0, size);
 		                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#268: FILE: fs/pohmelfs/crypto.c:224:
+		void *dst = e->data + e->size/2;
 		                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: fs/pohmelfs/crypto.c:228:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: fs/pohmelfs/crypto.c:236:
+^I^I$

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#292: FILE: fs/pohmelfs/crypto.c:248:
+			dprintk("%s: eng: %p, hash: %p, cipher: %p: iv : %llx, hash mismatch (recv/calc): ",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: fs/pohmelfs/crypto.c:249:
+			dprintk("%s: eng: %p, hash: %p, cipher: %p: iv : %llx, hash mismatch (recv/calc): ",
+					__func__, e, e->hash, e->cipher, cmd_iv);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#294: FILE: fs/pohmelfs/crypto.c:250:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#294: FILE: fs/pohmelfs/crypto.c:250:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
 			           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#295: FILE: fs/pohmelfs/crypto.c:251:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: fs/pohmelfs/crypto.c:266:
+			dprintk("%s: eng: %p, hash: %p, cipher: %p: hashes matched.\n",
+					__func__, e, e->hash, e->cipher);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: fs/pohmelfs/crypto.c:269:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: fs/pohmelfs/crypto.c:271:
+	dprintk("%s: eng: %p, size: %u, hash: %p, cipher: %p: completed.\n",
+			__func__, e, e->size, e->hash, e->cipher);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: fs/pohmelfs/crypto.c:277:
+	dprintk("%s: eng: %p, hash: %p, cipher: %p: err: %d.\n",
+			__func__, e, e->hash, e->cipher, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: fs/pohmelfs/crypto.c:282:
+static int pohmelfs_trans_iter(struct netfs_trans *t, struct pohmelfs_crypto_engine *e,
+		int (* iterator) (struct pohmelfs_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer name
#326: FILE: fs/pohmelfs/crypto.c:282:
+		int (* iterator) (struct pohmelfs_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer arguments
#326: FILE: fs/pohmelfs/crypto.c:282:
+		int (* iterator) (struct pohmelfs_crypto_engine *e,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#326: FILE: fs/pohmelfs/crypto.c:282:
+		int (* iterator) (struct pohmelfs_crypto_engine *e,
 		     ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#331: FILE: fs/pohmelfs/crypto.c:287:
+	unsigned int size = t->iovec.iov_len - sizeof(struct netfs_cmd) - t->psb->crypto_attached_size;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: fs/pohmelfs/crypto.c:303:
+^I^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#349: FILE: fs/pohmelfs/crypto.c:305:
+				__func__, size, sz, __be32_to_cpu(cmd->size), __be16_to_cpu(cmd->cpad));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: fs/pohmelfs/crypto.c:305:
+		dprintk("%s: size: %u, sz: %u, cmd_size: %u, cmd_cpad: %u.\n",
+				__func__, size, sz, __be32_to_cpu(cmd->size), __be16_to_cpu(cmd->cpad));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: fs/pohmelfs/crypto.c:309:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: fs/pohmelfs/crypto.c:317:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: fs/pohmelfs/crypto.c:322:
+	for (i=0; i<t->page_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#366: FILE: fs/pohmelfs/crypto.c:322:
+	for (i=0; i<t->page_num; ++i) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: fs/pohmelfs/crypto.c:348:
+static int pohmelfs_encrypt_iterator(struct pohmelfs_crypto_engine *e,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: fs/pohmelfs/crypto.c:375:
+static int pohmelfs_hash_iterator(struct pohmelfs_crypto_engine *e,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src)

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: fs/pohmelfs/crypto.c:404:
+		unsigned int i;
+		dprintk("%s: ", __func__);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#448: FILE: fs/pohmelfs/crypto.c:404:
+		dprintk("%s: ", __func__);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#449: FILE: fs/pohmelfs/crypto.c:405:
+		for (i=0; i<tc->psb->crypto_attached_size; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#449: FILE: fs/pohmelfs/crypto.c:405:
+		for (i=0; i<tc->psb->crypto_attached_size; ++i)
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#461: FILE: fs/pohmelfs/crypto.c:417:
+	for (i=0; i<e->page_num; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#461: FILE: fs/pohmelfs/crypto.c:417:
+	for (i=0; i<e->page_num; ++i)
 	           ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#470: FILE: fs/pohmelfs/crypto.c:426:
+	e->pages = kmalloc(psb->trans_max_pages * sizeof(struct page *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#474: FILE: fs/pohmelfs/crypto.c:430:
+	for (i=0; i<psb->trans_max_pages; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#474: FILE: fs/pohmelfs/crypto.c:430:
+	for (i=0; i<psb->trans_max_pages; ++i) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#512: FILE: fs/pohmelfs/crypto.c:468:
+		struct netfs_cmd *cmd = t->iovec.iov_base;
+		netfs_convert_cmd(cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: fs/pohmelfs/crypto.c:550:
+		wait_event_interruptible(t->wait, kthread_should_stop() ||
+				t->trans || t->page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: fs/pohmelfs/crypto.c:559:
+		dprintk("%s: thread: %p, trans: %p, page: %p.\n",
+				__func__, t, t->trans, t->page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: fs/pohmelfs/crypto.c:612:
+		dprintk("%s: st: %p, eng: %p, hash: %p, cipher: %p.\n",
+				__func__, st, &st->eng, &st->eng.hash, &st->eng.cipher);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#659: FILE: fs/pohmelfs/crypto.c:615:
+	for (i=0; i<psb->crypto_thread_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#659: FILE: fs/pohmelfs/crypto.c:615:
+	for (i=0; i<psb->crypto_thread_num; ++i) {
 	           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*t)...) over kzalloc(sizeof(struct pohmelfs_crypto_thread)...)
#661: FILE: fs/pohmelfs/crypto.c:617:
+		t = kzalloc(sizeof(struct pohmelfs_crypto_thread), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: fs/pohmelfs/crypto.c:636:
+		t->thread = kthread_run(pohmelfs_crypto_thread_func, t,
+				"pohmelfs-crypto-%d-%d", psb->idx, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: fs/pohmelfs/crypto.c:650:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: fs/pohmelfs/crypto.c:675:
+static int pohmelfs_crypt_init_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: fs/pohmelfs/crypto.c:738:
+	err = wait_event_interruptible_timeout(psb->wait, (psb->flags != ~0),
+			psb->wait_on_page_timeout);

WARNING:TYPO_SPELLING: 'acceptible' may be misspelled - perhaps 'acceptable'?
#794: FILE: fs/pohmelfs/crypto.c:750:
+	 * should setup superblock in a way, which is acceptible
 	                                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: fs/pohmelfs/crypto.c:783:
+static int pohmelfs_crypto_thread_get(struct pohmelfs_sb *psb,
+		int (* action)(struct pohmelfs_crypto_thread *t, void *data), void *data)

WARNING:SPACING: Unnecessary space before function pointer name
#827: FILE: fs/pohmelfs/crypto.c:783:
+		int (* action)(struct pohmelfs_crypto_thread *t, void *data), void *data)

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#827: FILE: fs/pohmelfs/crypto.c:783:
+		int (* action)(struct pohmelfs_crypto_thread *t, void *data), void *data)
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: fs/pohmelfs/crypto.c:790:
+		err = wait_event_interruptible_timeout(psb->wait,
+				!list_empty(&psb->crypto_ready_list),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: fs/pohmelfs/crypto.c:798:
+			t = list_entry(psb->crypto_ready_list.prev,
+					struct pohmelfs_crypto_thread,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: fs/pohmelfs/crypto.c:802:
+			list_move_tail(&t->thread_entry,
+					&psb->crypto_active_list);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#851: FILE: fs/pohmelfs/crypto.c:807:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#880: FILE: fs/pohmelfs/crypto.c:836:
+struct pohmelfs_crypto_input_action_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#901: FILE: fs/pohmelfs/crypto.c:857:
+int pohmelfs_crypto_process_input_page(struct pohmelfs_crypto_engine *e,
+		struct page *page, unsigned int size, u64 iv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: fs/pohmelfs/crypto.c:869:
+	err = pohmelfs_crypto_thread_get(POHMELFS_SB(inode->i_sb),
+			pohmelfs_crypt_input_page_action, &act);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 25 errors, 14 warnings, 32 checks, 880 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
