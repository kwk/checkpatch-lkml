CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct memtype)...)
#110: FILE: arch/x86/mm/pat.c:243:
+	new  = kmalloc(sizeof(struct memtype), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#130: FILE: arch/x86/mm/pat.c:257:
+	list_for_each_entry(entry, &memtype_list, nd) {
 	                                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#138: FILE: arch/x86/mm/pat.c:262:
+			list_add(&new->nd, entry->nd.prev);
 			               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#138: FILE: arch/x86/mm/pat.c:262:
+			list_add(&new->nd, entry->nd.prev);
 			                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#176: FILE: arch/x86/mm/pat.c:290:
+			list_for_each_entry_continue(entry, &memtype_list, nd) {
 			                                                   ^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#177: FILE: arch/x86/mm/pat.c:291:
+				if (end <= entry->start) {
 					break;
 				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#199: FILE: arch/x86/mm/pat.c:314:
+			list_add(&new->nd, saved_ptr->nd.prev);
 			               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#199: FILE: arch/x86/mm/pat.c:314:
+			list_add(&new->nd, saved_ptr->nd.prev);
 			                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#237: FILE: arch/x86/mm/pat.c:342:
+			list_for_each_entry_continue(entry, &memtype_list, nd) {
 			                                                   ^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#238: FILE: arch/x86/mm/pat.c:343:
+				if (end <= entry->start) {
 					break;
 				}

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#260: FILE: arch/x86/mm/pat.c:366:
+			list_add(&new->nd, &saved_ptr->nd);
 			               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#260: FILE: arch/x86/mm/pat.c:366:
+			list_add(&new->nd, &saved_ptr->nd);
 			                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#282: FILE: arch/x86/mm/pat.c:384:
+		list_add_tail(&new->nd, &memtype_list);
 		                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#313: FILE: arch/x86/mm/pat.c:419:
+	list_for_each_entry(entry, &memtype_list, nd) {
 	                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#315: FILE: arch/x86/mm/pat.c:421:
+			list_del(&entry->nd);
 			                 ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265191.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 1 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265191.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
