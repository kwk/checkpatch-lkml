WARNING:TYPO_SPELLING: 'funcitonality' may be misspelled - perhaps 'functionality'?
#29: 
This patch adds the SPU event based profiling funcitonality for the
                                              ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#33: 
various SPU evnets are occuring.  This should help users further identify
                       ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
constraints.  Only one event at a time can be used for profiling and SPU event 

WARNING:TYPO_SPELLING: 'Minumum' may be misspelled - perhaps 'Minimum'?
#67: FILE: arch/powerpc/oprofile/op_model_cell.c:70:
+/* Minumum HW interval timer setting to send value to trace buffer is 10 cycle.
    ^^^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#71: FILE: arch/powerpc/oprofile/op_model_cell.c:74:
+#define NUM_INTERVAL_CYC  0xFFFFFFFF - 10

CHECK:LINE_SPACING: Please don't use multiple blank lines
#143: FILE: arch/powerpc/oprofile/op_model_cell.c:603:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#182: FILE: arch/powerpc/oprofile/op_model_cell.c:642:
+		spu_pm_cnt[cur_phys_spu]
+			    = cbe_read_ctr(cpu, 0);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:TABSTOP: Statements should start on a tabstop
#190: FILE: arch/powerpc/oprofile/op_model_cell.c:650:
+		 else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 25)
#190: FILE: arch/powerpc/oprofile/op_model_cell.c:650:
+		 else
+			 cbe_write_ctr(cpu, 0, spu_pm_cnt[nxt_phys_spu]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#201: FILE: arch/powerpc/oprofile/op_model_cell.c:661:
+			printk(KERN_ERR

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#206: FILE: arch/powerpc/oprofile/op_model_cell.c:666:
+		 * previous SPU*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/powerpc/oprofile/op_model_cell.c:693:
+static int cell_reg_setup_spu_events(struct op_counter_config *ctr,
+			struct op_system_config *sys, int num_ctrs)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#249: FILE: arch/powerpc/oprofile/op_model_cell.c:709:
+		printk(KERN_ERR

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#268: FILE: arch/powerpc/oprofile/op_model_cell.c:728:
+	pm_regs.pm_cntrl.spu_addr_trace = 0x1;  /* using debug bus
+						   event 2 & 3 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#268: FILE: arch/powerpc/oprofile/op_model_cell.c:728:
+						   event 2 & 3 */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#271: FILE: arch/powerpc/oprofile/op_model_cell.c:731:
+	/* setup the debug bus event array with the SPU PC routing events.
+	*  Note, pm_signal[0] will be filled in by set_pm_event() call below.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#295: FILE: arch/powerpc/oprofile/op_model_cell.c:755:
+	for (i=0; i < MAX_NUMNODES * NUM_SPUS_PER_NODE; i++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#329: FILE: arch/powerpc/oprofile/op_model_cell.c:848:
+	int ret=0;
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#383: FILE: arch/powerpc/oprofile/op_model_cell.c:948:
+					       num_enabled+2);
 					                  ^

CHECK:BRACES: Unbalanced braces around else statement
#389: FILE: arch/powerpc/oprofile/op_model_cell.c:954:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#399: FILE: arch/powerpc/oprofile/op_model_cell.c:1153:
+	smp_wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#415: FILE: arch/powerpc/oprofile/op_model_cell.c:1191:
+	int cpu;
+	oprofile_running = 0;

WARNING:MEMORY_BARRIER: memory barrier without comment
#418: FILE: arch/powerpc/oprofile/op_model_cell.c:1194:
+	smp_wmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: arch/powerpc/oprofile/op_model_cell.c:1400:
+  ^Ioprofile_running = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#509: FILE: arch/powerpc/oprofile/op_model_cell.c:1400:
+  ^Ioprofile_running = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/powerpc/oprofile/op_model_cell.c:1400:
+  ^Ioprofile_running = 1;$

WARNING:MEMORY_BARRIER: memory barrier without comment
#510: FILE: arch/powerpc/oprofile/op_model_cell.c:1401:
+	smp_wmb();

WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#539: FILE: arch/powerpc/oprofile/op_model_cell.c:1474:
+ * intialized to the max hardware count minus the number of events, N, between
    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#540: FILE: arch/powerpc/oprofile/op_model_cell.c:1475:
+ * samples.  Once the N events have occured, a HW counter overflow occurs
                                     ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: arch/powerpc/oprofile/op_model_cell.c:1520:
+        if ((oprofile_running == 1) && (interrupt_mask != 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: arch/powerpc/oprofile/op_model_cell.c:1520:
+        if ((oprofile_running == 1) && (interrupt_mask != 0)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'oprofile_running == 1'
#585: FILE: arch/powerpc/oprofile/op_model_cell.c:1520:
+        if ((oprofile_running == 1) && (interrupt_mask != 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'interrupt_mask != 0'
#585: FILE: arch/powerpc/oprofile/op_model_cell.c:1520:
+        if ((oprofile_running == 1) && (interrupt_mask != 0)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#591: FILE: arch/powerpc/oprofile/op_model_cell.c:1526:
+		if ((interrupt_mask & CBE_PM_CTR_OVERFLOW_INTR(0))
+			    && ctr[0].enabled)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#630: FILE: arch/powerpc/oprofile/op_model_cell.c:1565:
+		 * by 16 -2 bits */

WARNING:MEMORY_BARRIER: memory barrier without comment
#646: FILE: arch/powerpc/oprofile/op_model_cell.c:1581:
+		smp_wmb();    /* insure spu event buffer updates are written

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#647: FILE: arch/powerpc/oprofile/op_model_cell.c:1582:
+			       * don't want events intermingled... */

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#650: FILE: arch/powerpc/oprofile/op_model_cell.c:1585:
+		 * Reenable the interrupt and restart the counters.
 		   ^^^^^^^^

WARNING:TYPO_SPELLING: 'permormance' may be misspelled - perhaps 'performance'?
#664: FILE: arch/powerpc/oprofile/op_model_cell.c:1599:
+		 * this to work as desired, the permormance monitor needs to
 		                                ^^^^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#782: FILE: arch/powerpc/oprofile/cell/spu_profiler.c:238:
+	return;
+}

WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#839: FILE: include/asm-powerpc/oprofile_impl.h:37:
+	 * suport.
 	   ^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197465.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 28 warnings, 8 checks, 748 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197465.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
