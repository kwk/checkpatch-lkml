CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sx >= info->var.xres_virtual'
#125: FILE: drivers/video/sm501fb.c:1284:
+	if ((sx >= info->var.xres_virtual) ||
+	    (sy >= info->var.yres_virtual))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sy >= info->var.yres_virtual'
#125: FILE: drivers/video/sm501fb.c:1284:
+	if ((sx >= info->var.xres_virtual) ||
+	    (sy >= info->var.yres_virtual))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dx >= info->var.xres_virtual'
#135: FILE: drivers/video/sm501fb.c:1294:
+	if ((dx >= info->var.xres_virtual) ||
+	    (dy >= info->var.yres_virtual))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dy >= info->var.yres_virtual'
#135: FILE: drivers/video/sm501fb.c:1294:
+	if ((dx >= info->var.xres_virtual) ||
+	    (dy >= info->var.yres_virtual))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sx < dx'
#144: FILE: drivers/video/sm501fb.c:1303:
+	if ((sx < dx) || (sy < dy)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sy < dy'
#144: FILE: drivers/video/sm501fb.c:1303:
+	if ((sx < dx) || (sy < dy)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rect->dx >= info->var.xres_virtual'
#203: FILE: drivers/video/sm501fb.c:1362:
+	if ((rect->dx >= info->var.xres_virtual) ||
+	    (rect->dy >= info->var.yres_virtual))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rect->dy >= info->var.yres_virtual'
#203: FILE: drivers/video/sm501fb.c:1362:
+	if ((rect->dx >= info->var.xres_virtual) ||
+	    (rect->dy >= info->var.yres_virtual))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#294: FILE: drivers/video/sm501fb.c:1503:
+	 * controller registers */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: drivers/video/sm501fb.c:1529:
+	 * controller registers */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#305: FILE: drivers/video/sm501fb.c:1531:
+	if (res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->regs2d_res"
#315: FILE: drivers/video/sm501fb.c:1541:
+	if (info->regs2d_res == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->regs2d"
#322: FILE: drivers/video/sm501fb.c:1548:
+	if (info->regs2d == NULL) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#401: FILE: include/linux/sm501-regs.h:34:
+#define SM501_SYSCTRL_2D_ENGINE_STATUS	(1<<19)
                                       	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#401: FILE: include/linux/sm501-regs.h:34:
+#define SM501_SYSCTRL_2D_ENGINE_STATUS	(1<<19)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000049645.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 13 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000049645.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
