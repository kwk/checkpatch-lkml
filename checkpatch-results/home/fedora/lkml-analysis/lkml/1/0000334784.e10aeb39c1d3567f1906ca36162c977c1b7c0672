WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
(Old) mxser is obsoleted by mxser_new and scheduled for removal on Dec 2007.

CHECK:CAMELCASE: Avoid CamelCase: <Gpci_uart_info>
#298: FILE: drivers/char/mxser.c:101:
+} Gpci_uart_info[] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#303: FILE: drivers/char/mxser.c:106:
 };
+#define UART_INFO_NUM	ARRAY_SIZE(Gpci_uart_info)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#345: FILE: drivers/char/mxser.c:147:
+/* driver_data correspond to the lines in the structure above
+   see also ISA probe function before you change something */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#345: FILE: drivers/char/mxser.c:147:
+   see also ISA probe function before you change something */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: drivers/char/mxser.c:159:
+	{ PCI_VDEVICE(MOXA, PCI_DEVICE_ID_MOXA_CP104JU),.driver_data = 16 },
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/char/mxser.c:162:
+	{ PCI_VDEVICE(MOXA, PCI_DEVICE_ID_MOXA_CP102UL),.driver_data = 19 },
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: drivers/char/mxser.c:164:
+	{ PCI_VDEVICE(MOXA, PCI_DEVICE_ID_MOXA_CP118EL),.driver_data = 21 },
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: drivers/char/mxser.c:165:
+	{ PCI_VDEVICE(MOXA, PCI_DEVICE_ID_MOXA_CP168EL),.driver_data = 22 },
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: drivers/char/mxser.c:166:
+	{ PCI_VDEVICE(MOXA, PCI_DEVICE_ID_MOXA_CP104EL),.driver_data = 23 },
 	                                               ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#600: FILE: drivers/char/mxser.c:308:
+static int __devinit CheckIsMoxaMust(unsigned long io)

CHECK:CAMELCASE: Avoid CamelCase: <CheckIsMoxaMust>
#600: FILE: drivers/char/mxser.c:308:
+static int __devinit CheckIsMoxaMust(unsigned long io)

CHECK:BRACES: Unbalanced braces around else statement
#705: FILE: drivers/char/mxser.c:341:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#764: FILE: drivers/char/mxser.c:367:
+static int mxser_block_til_ready(struct tty_struct *tty, struct file *filp,
                                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: drivers/char/mxser.c:368:
+static int mxser_block_til_ready(struct tty_struct *tty, struct file *filp,
+		struct mxser_port *port)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#778: FILE: drivers/char/mxser.c:380:
+	if ((filp->f_flags & O_NONBLOCK) ||
+			test_bit(TTY_IO_ERROR, &tty->flags)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#815: FILE: drivers/char/mxser.c:399:
+	if (!tty_hung_up_p(filp))
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#825: FILE: drivers/char/mxser.c:409:
+		if (tty_hung_up_p(filp) || !(port->flags & ASYNC_INITIALIZED)) {
 		                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/char/mxser.c:417:
+		if (!(port->flags & ASYNC_CLOSING) &&
+				(do_clocal ||

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#855: FILE: drivers/char/mxser.c:428:
+	if (!tty_hung_up_p(filp))
 	                   ^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#909: FILE: drivers/char/mxser.c:458:
+		baud = info->baud_base/quot;
 		                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#965: FILE: drivers/char/mxser.c:488:
+		if (quot % newspd > newspd / 2) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#968: FILE: drivers/char/mxser.c:491:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#972: FILE: drivers/char/mxser.c:495:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: drivers/char/mxser.c:507:
+static int mxser_change_speed(struct mxser_port *info,
+		struct ktermios *old_termios)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1006: FILE: drivers/char/mxser.c:509:
+	unsigned cflag, cval, fcr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_8250'
#1074: FILE: drivers/char/mxser.c:549:
+	if ((info->type == PORT_8250) || (info->type == PORT_16450)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_16450'
#1074: FILE: drivers/char/mxser.c:549:
+	if ((info->type == PORT_8250) || (info->type == PORT_16450)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1075: FILE: drivers/char/mxser.c:550:
+		if (info->board->chip_flag) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1079: FILE: drivers/char/mxser.c:554:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_16550A'
#1139: FILE: drivers/char/mxser.c:585:
+		if ((info->type == PORT_16550A) || (info->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->board->chip_flag'
#1139: FILE: drivers/char/mxser.c:585:
+		if ((info->type == PORT_16550A) || (info->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1147: FILE: drivers/char/mxser.c:593:
+					if (info->type != PORT_16550A &&
+							!info->board->chip_flag) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1149: FILE: drivers/char/mxser.c:595:
+						outb(info->IER & ~UART_IER_THRI,
+							info->ioaddr +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type != PORT_16550A'
#1160: FILE: drivers/char/mxser.c:606:
+					if ((info->type != PORT_16550A) &&
+							(!info->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!info->board->chip_flag'
#1160: FILE: drivers/char/mxser.c:606:
+					if ((info->type != PORT_16550A) &&
+							(!info->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1161: FILE: drivers/char/mxser.c:607:
+					if ((info->type != PORT_16550A) &&
+							(!info->board->chip_flag)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1224: FILE: drivers/char/mxser.c:659:
+		if (I_IXON(info->tty)) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1229: FILE: drivers/char/mxser.c:664:
+		if (I_IXOFF(info->tty)) {
[...]
+		} else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->type != PORT_16550A'
#1290: FILE: drivers/char/mxser.c:702:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->board->chip_flag'
#1290: FILE: drivers/char/mxser.c:702:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: drivers/char/mxser.c:703:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: drivers/char/mxser.c:705:
+					outb(port->IER & ~UART_IER_THRI,
+						port->ioaddr + UART_IER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1304: FILE: drivers/char/mxser.c:716:
+				if (port->type != PORT_16550A &&
+						!port->board->chip_flag) {

CHECK:SPACING: No space is necessary after a cast
#1418: FILE: drivers/char/mxser.c:753:
+		info->xmit_buf = (unsigned char *) page;

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#1427: FILE: drivers/char/mxser.c:757:
+	 * (they will be reenabled in mxser_change_speed())
 	                 ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1435: FILE: drivers/char/mxser.c:765:
+		outb((UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT),
+			info->ioaddr + UART_FCR);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1453: FILE: drivers/char/mxser.c:774:
+		if (capable(CAP_SYS_ADMIN)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1457: FILE: drivers/char/mxser.c:778:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1464: FILE: drivers/char/mxser.c:785:
+	(void) inb(info->ioaddr + UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#1465: FILE: drivers/char/mxser.c:786:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:SPACING: No space is necessary after a cast
#1466: FILE: drivers/char/mxser.c:787:
+	(void) inb(info->ioaddr + UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#1467: FILE: drivers/char/mxser.c:788:
+	(void) inb(info->ioaddr + UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#1488: FILE: drivers/char/mxser.c:809:
+	(void) inb(info->ioaddr + UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#1489: FILE: drivers/char/mxser.c:810:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:SPACING: No space is necessary after a cast
#1490: FILE: drivers/char/mxser.c:811:
+	(void) inb(info->ioaddr + UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#1491: FILE: drivers/char/mxser.c:812:
+	(void) inb(info->ioaddr + UART_MSR);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1495: FILE: drivers/char/mxser.c:816:
+	info->xmit_cnt = info->xmit_head = info->xmit_tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#1540: FILE: drivers/char/mxser.c:851:
+		free_page((unsigned long) info->xmit_buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1568: FILE: drivers/char/mxser.c:869:
+		outb(UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT,
+			info->ioaddr + UART_FCR);

CHECK:SPACING: No space is necessary after a cast
#1572: FILE: drivers/char/mxser.c:872:
+	(void) inb(info->ioaddr + UART_RX);

WARNING:SPLIT_STRING: quoted string split across lines
#1660: FILE: drivers/char/mxser.c:965:
 		printk(KERN_ERR "mxser_close: bad serial port count for "
+			"ttys%d: %d\n", tty->index, info->count);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1846: FILE: drivers/char/mxser.c:1168:
+static int mxser_get_serial_info(struct mxser_port *info,
+		struct serial_struct __user *retinfo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1866: FILE: drivers/char/mxser.c:1188:
+static int mxser_set_serial_info(struct mxser_port *info,
+		struct serial_struct __user *new_info)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq != info->board->irq'
#1881: FILE: drivers/char/mxser.c:1200:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.port != info->ioaddr'
#1881: FILE: drivers/char/mxser.c:1200:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.custom_divisor != info->custom_divisor'
#1881: FILE: drivers/char/mxser.c:1200:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base != info->baud_base'
#1881: FILE: drivers/char/mxser.c:1200:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1882: FILE: drivers/char/mxser.c:1201:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base != info->baud_base'
#1890: FILE: drivers/char/mxser.c:1209:
+		if ((new_serial.baud_base != info->baud_base) ||
+				(new_serial.close_delay != info->close_delay) ||
+				((new_serial.flags & ~ASYNC_USR_MASK) != (info->flags & ~ASYNC_USR_MASK)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.close_delay != info->close_delay'
#1890: FILE: drivers/char/mxser.c:1209:
+		if ((new_serial.baud_base != info->baud_base) ||
+				(new_serial.close_delay != info->close_delay) ||
+				((new_serial.flags & ~ASYNC_USR_MASK) != (info->flags & ~ASYNC_USR_MASK)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1891: FILE: drivers/char/mxser.c:1210:
+		if ((new_serial.baud_base != info->baud_base) ||
+				(new_serial.close_delay != info->close_delay) ||

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1892: FILE: drivers/char/mxser.c:1211:
+				((new_serial.flags & ~ASYNC_USR_MASK) != (info->flags & ~ASYNC_USR_MASK)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#1914: FILE: drivers/char/mxser.c:1233:
+	if (info->flags & ASYNC_INITIALIZED) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1920: FILE: drivers/char/mxser.c:1239:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1937: FILE: drivers/char/mxser.c:1256:
+static int mxser_get_lsr_info(struct mxser_port *info,
+		unsigned int __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1962: FILE: drivers/char/mxser.c:1281:
+	outb(inb(info->ioaddr + UART_LCR) | UART_LCR_SBC,
+		info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1967: FILE: drivers/char/mxser.c:1286:
+	outb(inb(info->ioaddr + UART_LCR) & ~UART_LCR_SBC,
+		info->ioaddr + UART_LCR);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1977: FILE: drivers/char/mxser.c:1296:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1999: FILE: drivers/char/mxser.c:1318:
+static int mxser_tiocmset(struct tty_struct *tty, struct file *file,
+		unsigned int set, unsigned int clear)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2004: FILE: drivers/char/mxser.c:1323:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != C168_ASIC_ID'
#2040: FILE: drivers/char/mxser.c:1359:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != C104_ASIC_ID'
#2040: FILE: drivers/char/mxser.c:1359:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != C102_ASIC_ID'
#2040: FILE: drivers/char/mxser.c:1359:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != CI132_ASIC_ID'
#2040: FILE: drivers/char/mxser.c:1359:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != CI134_ASIC_ID'
#2040: FILE: drivers/char/mxser.c:1359:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != CI104J_ASIC_ID'
#2040: FILE: drivers/char/mxser.c:1359:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2041: FILE: drivers/char/mxser.c:1360:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#2049: FILE: drivers/char/mxser.c:1368:
+		if (n == 'M') {
[...]
+		} else if ((j == 1) && (n == 1)) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2054: FILE: drivers/char/mxser.c:1373:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#2054: FILE: drivers/char/mxser.c:1373:
+		} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2082: FILE: drivers/char/mxser.c:1401:
+#define CHIP_SK ^I0x01^I/* Serial Data Clock  in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2083: FILE: drivers/char/mxser.c:1402:
+#define CHIP_DO ^I0x02^I/* Serial Data Output in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2084: FILE: drivers/char/mxser.c:1403:
+#define CHIP_CS ^I0x04^I/* Serial Chip Select in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2085: FILE: drivers/char/mxser.c:1404:
+#define CHIP_DI ^I0x08^I/* Serial Data Input  in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2086: FILE: drivers/char/mxser.c:1405:
+#define EN_CCMD ^I0x000^I/* Chip's command register     */$

CHECK:CAMELCASE: Avoid CamelCase: <GMStatus>
#2158: FILE: drivers/char/mxser.c:1477:
+				GMStatus[i].ri = 0;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2174: FILE: drivers/char/mxser.c:1493:
+				if (status & 0x80 /*UART_MSR_DCD */ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2179: FILE: drivers/char/mxser.c:1498:
+				if (status & 0x20 /*UART_MSR_DSR */ )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2184: FILE: drivers/char/mxser.c:1503:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2185: FILE: drivers/char/mxser.c:1504:
+				if (status & 0x10 /*UART_MSR_CTS */ )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2191: FILE: drivers/char/mxser.c:1510:
+		if (copy_to_user(argp, GMStatus,
+				sizeof(struct mxser_mstatus) * MXSER_PORTS))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2197: FILE: drivers/char/mxser.c:1516:
+		unsigned cflag, iflag;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2263: FILE: drivers/char/mxser.c:1582:
+
+			}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2265: FILE: drivers/char/mxser.c:1584:
+			if (copy_to_user(argp, &mon_data_ext,
+						sizeof(mon_data_ext)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2277: FILE: drivers/char/mxser.c:1596:
+static int mxser_cflags_changed(struct mxser_port *info, unsigned long arg,
+		struct async_icount *cprev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2298: FILE: drivers/char/mxser.c:1617:
+static int mxser_ioctl(struct tty_struct *tty, struct file *file,
+		unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2342: FILE: drivers/char/mxser.c:1662:
+	if (cmd != TIOCGSERIAL && cmd != TIOCMIWAIT && cmd != TIOCGICOUNT &&
+			test_bit(TTY_IO_ERROR, &tty->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2533: FILE: drivers/char/mxser.c:1778:
+		if (copy_to_user(argp, &info->mon_data,
+				sizeof(struct mxser_mon)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2952: FILE: drivers/char/mxser.c:2017:
+		outb(inb(info->ioaddr + UART_LCR) | UART_LCR_SBC,
+			info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2957: FILE: drivers/char/mxser.c:2020:
+		outb(inb(info->ioaddr + UART_LCR) & ~UART_LCR_SBC,
+			info->ioaddr + UART_LCR);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'recv_room == 0'
#3104: FILE: drivers/char/mxser.c:2034:
+	if ((recv_room == 0) && (!port->ldisc_stop_rx))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->ldisc_stop_rx'
#3104: FILE: drivers/char/mxser.c:2034:
+	if ((recv_room == 0) && (!port->ldisc_stop_rx))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3120: FILE: drivers/char/mxser.c:2042:
+		if (port->board->chip_flag == MOXA_MUST_MU860_HWID &&
 				(*status & MOXA_MUST_LSR_RERR))

CHECK:BRACES: Unbalanced braces around else statement
#3216: FILE: drivers/char/mxser.c:2093:
+				} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port->xmit_buf"
#3298: FILE: drivers/char/mxser.c:2141:
+	if (port->xmit_buf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->xmit_cnt <= 0'
#3309: FILE: drivers/char/mxser.c:2144:
+	if ((port->xmit_cnt <= 0) || port->tty->stopped ||
+			(port->tty->hw_stopped &&
+			(port->type != PORT_16550A) &&
+			(!port->board->chip_flag))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->type != PORT_16550A'
#3309: FILE: drivers/char/mxser.c:2144:
+	if ((port->xmit_cnt <= 0) || port->tty->stopped ||
+			(port->tty->hw_stopped &&
+			(port->type != PORT_16550A) &&
+			(!port->board->chip_flag))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->board->chip_flag'
#3309: FILE: drivers/char/mxser.c:2144:
+	if ((port->xmit_cnt <= 0) || port->tty->stopped ||
+			(port->tty->hw_stopped &&
+			(port->type != PORT_16550A) &&
+			(!port->board->chip_flag))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3310: FILE: drivers/char/mxser.c:2145:
+	if ((port->xmit_cnt <= 0) || port->tty->stopped ||
+			(port->tty->hw_stopped &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3328: FILE: drivers/char/mxser.c:2157:
+		outb(port->xmit_buf[port->xmit_tail++],
+			port->ioaddr + UART_TX);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!brd"
#3440: FILE: drivers/char/mxser.c:2197:
+	if (brd == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3466: FILE: drivers/char/mxser.c:2221:
+				if (!port->tty ||
+						(port->flags & ASYNC_CLOSING) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3502: FILE: drivers/char/mxser.c:2248:
+						mxser_receive_chars(port,
+								&status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3533: FILE: drivers/char/mxser.c:2254:
+						mxser_receive_chars(port,
+								&status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3645: FILE: drivers/char/mxser.c:2304:
+static void mxser_release_res(struct mxser_board *brd, struct pci_dev *pdev,
+		unsigned int irq)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#3649: FILE: drivers/char/mxser.c:2308:
+	if (pdev != NULL) {	/* PCI */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3713: FILE: drivers/char/mxser.c:2319:
+static int __devinit mxser_initbrd(struct mxser_board *brd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3714: FILE: drivers/char/mxser.c:2320:
+static int __devinit mxser_initbrd(struct mxser_board *brd,
+		struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3742: FILE: drivers/char/mxser.c:2326:
+	printk(KERN_INFO "max. baud rate = %d bps.\n", brd->ports[0].max_baud);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3793: FILE: drivers/char/mxser.c:2355:
+		outb(inb(info->ioaddr + UART_IER) & 0xf0,
+			info->ioaddr + UART_IER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3798: FILE: drivers/char/mxser.c:2359:
+	retval = request_irq(brd->irq, mxser_interrupt, IRQF_SHARED, "mxser",
+			brd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3800: FILE: drivers/char/mxser.c:2361:
+		printk(KERN_ERR "Board %s: Request irq failed, IRQ (%d) may "

WARNING:SPLIT_STRING: quoted string split across lines
#3801: FILE: drivers/char/mxser.c:2362:
+		printk(KERN_ERR "Board %s: Request irq failed, IRQ (%d) may "
+			"conflict with another device.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3922: FILE: drivers/char/mxser.c:2404:
+	/* some ISA cards have 2 ports, but we want to see them as 4-port (why?)
+	   Flag-hack checks if configuration should be read as 2-port here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3922: FILE: drivers/char/mxser.c:2404:
+	   Flag-hack checks if configuration should be read as 2-port here. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq != regs[9]'
#3938: FILE: drivers/char/mxser.c:2420:
+		if ((irq != regs[9]) || (irq != regs[10]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq != regs[10]'
#3938: FILE: drivers/char/mxser.c:2420:
+		if ((irq != regs[9]) || (irq != regs[10]))

CHECK:SPACING: No space is necessary after a cast
#3954: FILE: drivers/char/mxser.c:2428:
+		brd->ports[i].ioaddr = (int) regs[i + 1] & 0xFFF8;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4068: FILE: drivers/char/mxser.c:2457:
+	if (!request_region(brd->ports[0].ioaddr, 8 * brd->info->nports,
+			"mxser(IO)"))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4086: FILE: drivers/char/mxser.c:2466:
+static int __devinit mxser_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4087: FILE: drivers/char/mxser.c:2467:
+static int __devinit mxser_probe(struct pci_dev *pdev,
+		const struct pci_device_id *ent)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mxser_boards[i].info"
#4108: FILE: drivers/char/mxser.c:2476:
+		if (mxser_boards[i].info == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4125: FILE: drivers/char/mxser.c:2480:
+		printk(KERN_ERR "Too many Smartio/Industio family boards found "

WARNING:SPLIT_STRING: quoted string split across lines
#4126: FILE: drivers/char/mxser.c:2481:
+		printk(KERN_ERR "Too many Smartio/Industio family boards found "
+			"(maximum %d), board not configured\n", MXSER_BOARDS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4134: FILE: drivers/char/mxser.c:2487:
+	printk(KERN_INFO "Found MOXA %s board (BusNo=%d, DevNo=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4135: FILE: drivers/char/mxser.c:2488:
+	printk(KERN_INFO "Found MOXA %s board (BusNo=%d, DevNo=%d)\n",
+		mxser_cards[ent->driver_data].name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4151: FILE: drivers/char/mxser.c:2493:
+		printk(KERN_ERR "Moxa SmartI/O PCI enable fail !\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#4321: FILE: drivers/char/mxser.c:2573:
+static void __devexit mxser_remove(struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4403: FILE: drivers/char/mxser.c:2605:
+	printk(KERN_INFO "MOXA Smartio/Industio family driver version %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4404: FILE: drivers/char/mxser.c:2606:
+	printk(KERN_INFO "MOXA Smartio/Industio family driver version %s\n",
+		MXSER_VERSION);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4420: FILE: drivers/char/mxser.c:2618:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4420: FILE: drivers/char/mxser.c:2618:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4420: FILE: drivers/char/mxser.c:2618:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4420: FILE: drivers/char/mxser.c:2618:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4421: FILE: drivers/char/mxser.c:2619:
+	mxvar_sdriver->flags = TTY_DRIVER_REAL_RAW|TTY_DRIVER_DYNAMIC_DEV;
 	                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4426: FILE: drivers/char/mxser.c:2624:
+		printk(KERN_ERR "Couldn't install MOXA Smartio/Industio family "

WARNING:SPLIT_STRING: quoted string split across lines
#4427: FILE: drivers/char/mxser.c:2625:
+		printk(KERN_ERR "Couldn't install MOXA Smartio/Industio family "
+				"tty driver !\n");

CHECK:CAMELCASE: Avoid CamelCase: <mxserBoardCAP>
#4443: FILE: drivers/char/mxser.c:2636:
+				cap = mxserBoardCAP[b]; /* predefined */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4466: FILE: drivers/char/mxser.c:2647:
+				printk(KERN_INFO "Found MOXA %s board "

WARNING:SPLIT_STRING: quoted string split across lines
#4467: FILE: drivers/char/mxser.c:2648:
+				printk(KERN_INFO "Found MOXA %s board "
+					"(CAP=0x%x)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4472: FILE: drivers/char/mxser.c:2653:
+					printk(KERN_ERR "Invalid interrupt "

WARNING:SPLIT_STRING: quoted string split across lines
#4473: FILE: drivers/char/mxser.c:2654:
+					printk(KERN_ERR "Invalid interrupt "
+						"number, board not "

WARNING:SPLIT_STRING: quoted string split across lines
#4474: FILE: drivers/char/mxser.c:2655:
+						"number, board not "
+						"configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4476: FILE: drivers/char/mxser.c:2657:
+					printk(KERN_ERR "Invalid interrupt "

WARNING:SPLIT_STRING: quoted string split across lines
#4477: FILE: drivers/char/mxser.c:2658:
+					printk(KERN_ERR "Invalid interrupt "
+						"number, board not "

WARNING:SPLIT_STRING: quoted string split across lines
#4478: FILE: drivers/char/mxser.c:2659:
+						"number, board not "
+						"configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4480: FILE: drivers/char/mxser.c:2661:
+					printk(KERN_ERR "Invalid interrupt "

WARNING:SPLIT_STRING: quoted string split across lines
#4481: FILE: drivers/char/mxser.c:2662:
+					printk(KERN_ERR "Invalid interrupt "
+						"vector, board not "

WARNING:SPLIT_STRING: quoted string split across lines
#4482: FILE: drivers/char/mxser.c:2663:
+						"vector, board not "
+						"configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4484: FILE: drivers/char/mxser.c:2665:
+					printk(KERN_ERR "Invalid I/O address, "

WARNING:SPLIT_STRING: quoted string split across lines
#4485: FILE: drivers/char/mxser.c:2666:
+					printk(KERN_ERR "Invalid I/O address, "
+						"board not configured\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4509: FILE: drivers/char/mxser.c:2681:
+				tty_register_device(mxvar_sdriver, brd->idx + i,
+						NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4555: FILE: drivers/char/mxser.c:2688:
+		printk(KERN_ERR "Can't register pci driver\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mxser_boards[i].info"
#4678: FILE: drivers/char/mxser.c:2714:
+		if (mxser_boards[i].info != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4681: FILE: drivers/char/mxser.c:2717:
+				tty_unregister_device(mxvar_sdriver,
+						mxser_boards[i].idx + j);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mxser_boards[i].info"
#4712: FILE: drivers/char/mxser.c:2722:
+		if (mxser_boards[i].info != NULL)

WARNING:TYPO_SPELLING: 'reister' may be misspelled - perhaps 'register'?
#4834: FILE: drivers/char/mxser.h:66:
+/* enchance reister bank set 0, 1, 2 */
             ^^^^^^^

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#4892: FILE: drivers/char/mxser.h:116:
+/* recieved Xon/Xoff or specical interrupt pending */
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'specical' may be misspelled - perhaps 'special'?
#4892: FILE: drivers/char/mxser.h:116:
+/* recieved Xon/Xoff or specical interrupt pending */
                         ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4955: FILE: drivers/char/mxser.h:150:
+#define ENABLE_MOXA_MUST_ENCHANCE_MODE(baseio) do { ^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#4955: FILE: drivers/char/mxser.h:150:
+#define ENABLE_MOXA_MUST_ENCHANCE_MODE(baseio) do { 		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr |= MOXA_MUST_EFR_EFRB_ENABLE;			\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4957: FILE: drivers/char/mxser.h:152:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4968: FILE: drivers/char/mxser.h:154:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4970: FILE: drivers/char/mxser.h:156:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4971: FILE: drivers/char/mxser.h:157:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#4974: FILE: drivers/char/mxser.h:160:
+#define DISABLE_MOXA_MUST_ENCHANCE_MODE(baseio) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_EFRB_ENABLE;			\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4976: FILE: drivers/char/mxser.h:162:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4987: FILE: drivers/char/mxser.h:164:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4989: FILE: drivers/char/mxser.h:166:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4990: FILE: drivers/char/mxser.h:167:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Value>
#4993: FILE: drivers/char/mxser.h:170:
+#define SET_MOXA_MUST_XON1_VALUE(baseio, Value) do {		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#4993: FILE: drivers/char/mxser.h:170:
+#define SET_MOXA_MUST_XON1_VALUE(baseio, Value) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK0;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	outb((u8)(Value), (baseio)+MOXA_MUST_XON1_REGISTER);	\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4995: FILE: drivers/char/mxser.h:172:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5001: FILE: drivers/char/mxser.h:174:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5004: FILE: drivers/char/mxser.h:177:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5008: FILE: drivers/char/mxser.h:179:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5014: FILE: drivers/char/mxser.h:182:
+#define SET_MOXA_MUST_XOFF1_VALUE(baseio, Value) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK0;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	outb((u8)(Value), (baseio)+MOXA_MUST_XOFF1_REGISTER);	\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5016: FILE: drivers/char/mxser.h:184:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5034: FILE: drivers/char/mxser.h:186:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5037: FILE: drivers/char/mxser.h:189:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5081: FILE: drivers/char/mxser.h:191:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#5084: FILE: drivers/char/mxser.h:194:
+#define SET_MOXA_MUST_FIFO_VALUE(info) do {			\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((info)->ioaddr+UART_LCR);		\
+	outb(MOXA_MUST_ENTER_ENCHANCE, (info)->ioaddr+UART_LCR);\
+	__efr = inb((info)->ioaddr+MOXA_MUST_EFR_REGISTER);	\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK1;				\
+	outb(__efr, (info)->ioaddr+MOXA_MUST_EFR_REGISTER);	\
+	outb((u8)((info)->rx_high_water), (info)->ioaddr+	\
+			MOXA_MUST_RBRTH_REGISTER);		\
+	outb((u8)((info)->rx_trigger), (info)->ioaddr+		\
+			MOXA_MUST_RBRTI_REGISTER);		\
+	outb((u8)((info)->rx_low_water), (info)->ioaddr+	\
+			MOXA_MUST_RBRTL_REGISTER);		\
+	outb(__oldlcr, (info)->ioaddr+UART_LCR);		\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5086: FILE: drivers/char/mxser.h:196:
+	__oldlcr = inb((info)->ioaddr+UART_LCR);		\
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5087: FILE: drivers/char/mxser.h:197:
+	outb(MOXA_MUST_ENTER_ENCHANCE, (info)->ioaddr+UART_LCR);\
 	                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5088: FILE: drivers/char/mxser.h:198:
+	__efr = inb((info)->ioaddr+MOXA_MUST_EFR_REGISTER);	\
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5091: FILE: drivers/char/mxser.h:201:
+	outb(__efr, (info)->ioaddr+MOXA_MUST_EFR_REGISTER);	\
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#5092: FILE: drivers/char/mxser.h:202:
+	outb((u8)((info)->rx_high_water), (info)->ioaddr+	\
 	                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#5094: FILE: drivers/char/mxser.h:204:
+	outb((u8)((info)->rx_trigger), (info)->ioaddr+		\
 	                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#5096: FILE: drivers/char/mxser.h:206:
+	outb((u8)((info)->rx_low_water), (info)->ioaddr+	\
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5098: FILE: drivers/char/mxser.h:208:
+	outb(__oldlcr, (info)->ioaddr+UART_LCR);		\
 	                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5101: FILE: drivers/char/mxser.h:211:
+#define SET_MOXA_MUST_ENUM_VALUE(baseio, Value) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK2;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	outb((u8)(Value), (baseio)+MOXA_MUST_ENUM_REGISTER);	\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5103: FILE: drivers/char/mxser.h:213:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5150: FILE: drivers/char/mxser.h:215:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5153: FILE: drivers/char/mxser.h:218:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5157: FILE: drivers/char/mxser.h:220:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <pId>
#5196: FILE: drivers/char/mxser.h:223:
+#define GET_MOXA_MUST_HARDWARE_ID(baseio, pId) do {		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5196: FILE: drivers/char/mxser.h:223:
+#define GET_MOXA_MUST_HARDWARE_ID(baseio, pId) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK2;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	*pId = inb((baseio)+MOXA_MUST_HWID_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pId' may be better as '(pId)' to avoid precedence issues
#5196: FILE: drivers/char/mxser.h:223:
+#define GET_MOXA_MUST_HARDWARE_ID(baseio, pId) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK2;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	*pId = inb((baseio)+MOXA_MUST_HWID_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5198: FILE: drivers/char/mxser.h:225:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5210: FILE: drivers/char/mxser.h:227:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5213: FILE: drivers/char/mxser.h:230:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5214: FILE: drivers/char/mxser.h:231:
+	*pId = inb((baseio)+MOXA_MUST_HWID_REGISTER);		\
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5215: FILE: drivers/char/mxser.h:232:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5218: FILE: drivers/char/mxser.h:235:
+#define SET_MOXA_MUST_NO_SOFTWARE_FLOW_CONTROL(baseio) do {	\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_SF_MASK;			\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5220: FILE: drivers/char/mxser.h:237:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5231: FILE: drivers/char/mxser.h:239:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5233: FILE: drivers/char/mxser.h:241:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5234: FILE: drivers/char/mxser.h:242:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5237: FILE: drivers/char/mxser.h:245:
+#define ENABLE_MOXA_MUST_TX_SOFTWARE_FLOW_CONTROL(baseio) do {	\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_SF_TX_MASK;			\
+	__efr |= MOXA_MUST_EFR_SF_TX1;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5239: FILE: drivers/char/mxser.h:247:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5251: FILE: drivers/char/mxser.h:249:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5254: FILE: drivers/char/mxser.h:252:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5255: FILE: drivers/char/mxser.h:253:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5258: FILE: drivers/char/mxser.h:256:
+#define DISABLE_MOXA_MUST_TX_SOFTWARE_FLOW_CONTROL(baseio) do {	\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_SF_TX_MASK;			\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5260: FILE: drivers/char/mxser.h:258:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5272: FILE: drivers/char/mxser.h:260:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5274: FILE: drivers/char/mxser.h:262:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5275: FILE: drivers/char/mxser.h:263:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5278: FILE: drivers/char/mxser.h:266:
+#define ENABLE_MOXA_MUST_RX_SOFTWARE_FLOW_CONTROL(baseio) do {	\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_SF_RX_MASK;			\
+	__efr |= MOXA_MUST_EFR_SF_RX1;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5280: FILE: drivers/char/mxser.h:268:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5291: FILE: drivers/char/mxser.h:270:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5294: FILE: drivers/char/mxser.h:273:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5295: FILE: drivers/char/mxser.h:274:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#5298: FILE: drivers/char/mxser.h:277:
+#define DISABLE_MOXA_MUST_RX_SOFTWARE_FLOW_CONTROL(baseio) do {	\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_SF_RX_MASK;			\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5300: FILE: drivers/char/mxser.h:279:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5324: FILE: drivers/char/mxser.h:281:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5326: FILE: drivers/char/mxser.h:283:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5327: FILE: drivers/char/mxser.h:284:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#5332: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334784.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 55 warnings, 187 checks, 5226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334784.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
