WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
> > ....Maybe this discussion style is bad and I should explain my approach in patch.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: mm/memcontrol.c:188:
 };
+static struct mem_cgroup *init_mem_cgroup __read_mostly;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: mm/memcontrol.c:337:
+static int __mem_cgroup_walk_tree(struct mem_cgroup *root, void *data,
 			  int (*func)(struct mem_cgroup *, void *))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: mm/memcontrol.c:366:
+static int mem_cgroup_walk_tree(struct mem_cgroup *root, void *data,
+			  int (*func)(struct mem_cgroup *, void *))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#154: FILE: mm/memcontrol.c:368:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'calles' may be misspelled - perhaps 'calls'?
#179: FILE: mm/memcontrol.c:1647:
+ * All calles for softlimit is called by kswapd() per node and each node's
        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#187: FILE: mm/memcontrol.c:1655:
+};
+/* Control information per node */

CHECK:BRACES: braces {} should be used on all arms of this statement
#218: FILE: mm/memcontrol.c:1686:
+		if (cgroup->parent) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#221: FILE: mm/memcontrol.c:1689:
+		} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#256: FILE: mm/memcontrol.c:1724:
+}
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: mm/memcontrol.c:1753:
+	struct cgroup_subsys_state *css;
+	if (spi->count == 0)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#290: FILE: mm/memcontrol.c:1758:
+	while (checked < spi->count) {
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: include/linux/memcontrol.h:120:
+extern void mem_cgroup_update_softlimit_hint(int nid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: include/linux/memcontrol.h:121:
+extern struct mem_cgroup *mem_cgroup_get_victim(int nid, int zid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: include/linux/memcontrol.h:122:
+extern void mem_cgroup_put_victim(struct mem_cgroup *mem);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#416: FILE: include/linux/memcontrol.h:279:
+}
+static inline void mem_cgroup_put_victim(struct mem_cgroup *mem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: mm/vmscan.c:1742:
+void softlimit_shrink_zone(int nid, int zid, int priority, struct zone *zone,
+			      struct scan_control *sc)

CHECK:BRACES: braces {} should be used on all arms of this statement
#439: FILE: mm/vmscan.c:1745:
+	if (sc->mem_cgroup) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#446: FILE: mm/vmscan.c:1752:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: mm/vmscan.c:1896:
+					softlimit_shrink_zone(nid, i,
+							 priority, zone, &sc);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159140.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 17 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159140.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
