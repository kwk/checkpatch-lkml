WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: drivers/input/lirc/Kconfig:21:
+config LIRC_SERIAL
+	tristate "Homebrew Serial Port Receiver"
+	default n
+	depends on LIRC_DEV
+	help
+	  Driver for Homebrew Serial Port Receivers
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/input/lirc/lirc_serial.c:1:
+/****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: drivers/input/lirc/lirc_serial.c:24:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: drivers/input/lirc/lirc_serial.c:25:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: drivers/input/lirc/lirc_serial.c:30:
+/* Steve's changes to improve transmission fidelity:
+     - for systems with the rdtsc instruction and the clock counter, a

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#236: FILE: drivers/input/lirc/lirc_serial.c:170:
+			printk(KERN_DEBUG LIRC_DRIVER_NAME ": "	\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#251: FILE: drivers/input/lirc/lirc_serial.c:185:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#251: FILE: drivers/input/lirc/lirc_serial.c:185:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#252: FILE: drivers/input/lirc/lirc_serial.c:186:
+		UART_MCR_RTS|UART_MCR_OUT2,
 		            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#255: FILE: drivers/input/lirc/lirc_serial.c:189:
+		(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#257: FILE: drivers/input/lirc/lirc_serial.c:191:
+		 LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#258: FILE: drivers/input/lirc/lirc_serial.c:192:
+		 LIRC_CAN_SET_SEND_CARRIER|
 		                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#259: FILE: drivers/input/lirc/lirc_serial.c:193:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#269: FILE: drivers/input/lirc/lirc_serial.c:203:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#269: FILE: drivers/input/lirc/lirc_serial.c:203:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#272: FILE: drivers/input/lirc/lirc_serial.c:206:
+		(LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#273: FILE: drivers/input/lirc/lirc_serial.c:207:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/input/lirc/lirc_serial.c:215:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/input/lirc/lirc_serial.c:215:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#282: FILE: drivers/input/lirc/lirc_serial.c:216:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#282: FILE: drivers/input/lirc/lirc_serial.c:216:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#285: FILE: drivers/input/lirc/lirc_serial.c:219:
+		(LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#286: FILE: drivers/input/lirc/lirc_serial.c:220:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#295: FILE: drivers/input/lirc/lirc_serial.c:229:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#295: FILE: drivers/input/lirc/lirc_serial.c:229:
+		UART_MCR_RTS|UART_MCR_DTR|UART_MCR_OUT2,
 		                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#305: FILE: drivers/input/lirc/lirc_serial.c:239:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#305: FILE: drivers/input/lirc/lirc_serial.c:239:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#306: FILE: drivers/input/lirc/lirc_serial.c:240:
+		UART_MCR_RTS|UART_MCR_OUT2,
 		            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#309: FILE: drivers/input/lirc/lirc_serial.c:243:
+		(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#311: FILE: drivers/input/lirc/lirc_serial.c:245:
+		 LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#312: FILE: drivers/input/lirc/lirc_serial.c:246:
+		 LIRC_CAN_SET_SEND_CARRIER|
 		                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#313: FILE: drivers/input/lirc/lirc_serial.c:247:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#320: FILE: drivers/input/lirc/lirc_serial.c:254:
+	/* Modified Linksys Network Storage Link USB 2.0 (NSLU2):
+	   We receive on CTS of the 2nd serial port (R142,LHS), we

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: drivers/input/lirc/lirc_serial.c:257:
+	   See also http://www.nslu2-linux.org for this device */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#327: FILE: drivers/input/lirc/lirc_serial.c:261:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#327: FILE: drivers/input/lirc/lirc_serial.c:261:
+		UART_MCR_RTS|UART_MCR_OUT2|UART_MCR_DTR,
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#328: FILE: drivers/input/lirc/lirc_serial.c:262:
+		UART_MCR_RTS|UART_MCR_OUT2,
 		            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#331: FILE: drivers/input/lirc/lirc_serial.c:265:
+		(

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#333: FILE: drivers/input/lirc/lirc_serial.c:267:
+		 LIRC_CAN_SET_SEND_DUTY_CYCLE|
 		                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#334: FILE: drivers/input/lirc/lirc_serial.c:268:
+		 LIRC_CAN_SET_SEND_CARRIER|
 		                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#335: FILE: drivers/input/lirc/lirc_serial.c:269:
+		 LIRC_CAN_SEND_PULSE|
 		                    ^

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#345: FILE: drivers/input/lirc/lirc_serial.c:279:
+/* A long pulse code from a remote might take upto 300 bytes.  The
                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: drivers/input/lirc/lirc_serial.c:280:
+/* A long pulse code from a remote might take upto 300 bytes.  The
+   daemon should read the bytes as soon as they are generated, so take

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: drivers/input/lirc/lirc_serial.c:284:
+   maybe you will need to increase this.  */

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#384: FILE: drivers/input/lirc/lirc_serial.c:318:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#386: FILE: drivers/input/lirc/lirc_serial.c:320:
+/*
+  From:

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#406: FILE: drivers/input/lirc/lirc_serial.c:340:
+/* changed from 400 to 450 as this works better on slower machines;
+   faster machines will use the rdtsc code anyway */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#406: FILE: drivers/input/lirc/lirc_serial.c:340:
+   faster machines will use the rdtsc code anyway */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#446: FILE: drivers/input/lirc/lirc_serial.c:380:
+	/* On NSLU2, we put the transmit diode between the output of the green
+	   status LED and ground */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#446: FILE: drivers/input/lirc/lirc_serial.c:380:
+	   status LED and ground */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#475: FILE: drivers/input/lirc/lirc_serial.c:409:
+#define MAX_UDELAY_US (MAX_UDELAY_MS*1000)
                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#489: FILE: drivers/input/lirc/lirc_serial.c:423:
+/* This is an overflow/precision juggle, complicated in that we can't
+   do long long divide in the kernel */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#489: FILE: drivers/input/lirc/lirc_serial.c:423:
+   do long long divide in the kernel */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/input/lirc/lirc_serial.c:435:
+static inline int init_timing_params(unsigned int new_duty_cycle,
+		unsigned int new_freq)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#514: FILE: drivers/input/lirc/lirc_serial.c:448:
+	conv_us_to_clocks = (work>>32);
 	                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#517: FILE: drivers/input/lirc/lirc_serial.c:451:
+	/* Carrier period in clocks, approach good up to 32GHz clock,
+	   gets carrier frequency within 8Hz */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: drivers/input/lirc/lirc_serial.c:451:
+	   gets carrier frequency within 8Hz */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#518: FILE: drivers/input/lirc/lirc_serial.c:452:
+	period = loops_per_sec>>3;
 	                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#519: FILE: drivers/input/lirc/lirc_serial.c:453:
+	period /= (freq>>3);
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#523: FILE: drivers/input/lirc/lirc_serial.c:457:
+	pulse_width = period*duty_cycle/100;
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#523: FILE: drivers/input/lirc/lirc_serial.c:457:
+	pulse_width = period*duty_cycle/100;
 	                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#526: FILE: drivers/input/lirc/lirc_serial.c:460:
+	dprintk("in init_timing_params, freq=%d, duty_cycle=%d, "
+		"clk/jiffy=%ld, pulse=%ld, space=%ld, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#527: FILE: drivers/input/lirc/lirc_serial.c:461:
+		"clk/jiffy=%ld, pulse=%ld, space=%ld, "
+		"conv_us_to_clocks=%ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/input/lirc/lirc_serial.c:468:
+static inline int init_timing_params(unsigned int new_duty_cycle,
+		unsigned int new_freq)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#537: FILE: drivers/input/lirc/lirc_serial.c:471:
+ * IE multiplied by 256. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#538: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#538: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#538: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#538: FILE: drivers/input/lirc/lirc_serial.c:472:
+	if (256*1000000L/new_freq*new_duty_cycle/100 <=
 	                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#541: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#541: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#541: FILE: drivers/input/lirc/lirc_serial.c:475:
+	if (256*1000000L/new_freq*(100-new_duty_cycle)/100 <=
 	                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#546: FILE: drivers/input/lirc/lirc_serial.c:480:
+	period = 256*1000000L/freq;
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#546: FILE: drivers/input/lirc/lirc_serial.c:480:
+	period = 256*1000000L/freq;
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#547: FILE: drivers/input/lirc/lirc_serial.c:481:
+	pulse_width = period*duty_cycle/100;
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#547: FILE: drivers/input/lirc/lirc_serial.c:481:
+	pulse_width = period*duty_cycle/100;
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#548: FILE: drivers/input/lirc/lirc_serial.c:482:
+	space_width = period-pulse_width;
 	                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: drivers/input/lirc/lirc_serial.c:484:
+	dprintk("in init_timing_params, freq=%d pulse=%ld, "
+		"space=%ld\n", freq, pulse_width, space_width);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#555: FILE: drivers/input/lirc/lirc_serial.c:489:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#566: FILE: drivers/input/lirc/lirc_serial.c:500:
+	rawbits = length*1152/10000;
 	                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#566: FILE: drivers/input/lirc/lirc_serial.c:500:
+	rawbits = length*1152/10000;
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#572: FILE: drivers/input/lirc/lirc_serial.c:506:
+		shifted = chunk<<(i*3);
 		               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#572: FILE: drivers/input/lirc/lirc_serial.c:506:
+		shifted = chunk<<(i*3);
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: drivers/input/lirc/lirc_serial.c:525:
+		return (-rawbits)*10000/1152;
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#591: FILE: drivers/input/lirc/lirc_serial.c:525:
+		return (-rawbits)*10000/1152;
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#593: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#593: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#593: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#593: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#593: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#593: FILE: drivers/input/lirc/lirc_serial.c:527:
+		return (3-i)*3*10000/1152 + (-rawbits)*10000/1152;
 		                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#617: FILE: drivers/input/lirc/lirc_serial.c:551:
+	while ((now-start) < length) {
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#621: FILE: drivers/input/lirc/lirc_serial.c:555:
+		} while ((now-start) < target);
 		             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#634: FILE: drivers/input/lirc/lirc_serial.c:568:
+	return ((now-start)-length) / conv_us_to_clocks;
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#634: FILE: drivers/input/lirc/lirc_serial.c:568:
+	return ((now-start)-length) / conv_us_to_clocks;
 	                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#640: FILE: drivers/input/lirc/lirc_serial.c:574:
+/* here we use fixed point arithmetic, with 8
+   fractional bits.  that gets us within 0.1% or so of the right average

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#641: FILE: drivers/input/lirc/lirc_serial.c:575:
+   frequency, albeit with some jitter in pulse length - Steve */

WARNING:LINE_SPACING: Missing a blank line after declarations
#649: FILE: drivers/input/lirc/lirc_serial.c:583:
+	unsigned long actual, target, d;
+	length <<= 8;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#660: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#660: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#660: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		                                                  ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#660: FILE: drivers/input/lirc/lirc_serial.c:594:
+		d = (target-actual-LIRC_SERIAL_TRANSMITTER_LATENCY+128)>>8;
 		                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#662: FILE: drivers/input/lirc/lirc_serial.c:596:
+		/* Note - we've checked in ioctl that the pulse/space
+		   widths are big enough so that d is > 0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#662: FILE: drivers/input/lirc/lirc_serial.c:596:
+		   widths are big enough so that d is > 0 */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#664: FILE: drivers/input/lirc/lirc_serial.c:598:
+		actual += (d<<8)+LIRC_SERIAL_TRANSMITTER_LATENCY;
 		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#664: FILE: drivers/input/lirc/lirc_serial.c:598:
+		actual += (d<<8)+LIRC_SERIAL_TRANSMITTER_LATENCY;
 		                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#667: FILE: drivers/input/lirc/lirc_serial.c:601:
+	return (actual-length)>>8;
 	              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#667: FILE: drivers/input/lirc/lirc_serial.c:601:
+	return (actual-length)>>8;
 	                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#676: FILE: drivers/input/lirc/lirc_serial.c:610:
+	if (softcarrier)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#678: FILE: drivers/input/lirc/lirc_serial.c:612:
+		return send_pulse_homebrew_softcarrier(length);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#678: FILE: drivers/input/lirc/lirc_serial.c:612:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#772: FILE: drivers/input/lirc/lirc_serial.c:706:
+			printk(KERN_WARNING LIRC_DRIVER_NAME ": AIEEEE: "

WARNING:SPLIT_STRING: quoted string split across lines
#773: FILE: drivers/input/lirc/lirc_serial.c:707:
+			printk(KERN_WARNING LIRC_DRIVER_NAME ": AIEEEE: "
+			       "We're caught!\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#776: FILE: drivers/input/lirc/lirc_serial.c:710:
+		if ((status&hardware[type].signal_pin_change) && sense != -1) {
 		           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#781: FILE: drivers/input/lirc/lirc_serial.c:715:
+			/* New mode, written by Trent Piepho
+			   <xyzzy@u.washington.edu>. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#781: FILE: drivers/input/lirc/lirc_serial.c:715:
+			   <xyzzy@u.washington.edu>. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#784: FILE: drivers/input/lirc/lirc_serial.c:718:
+			/* The old format was not very portable.
+			   We now use an int to pass pulses

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#799: FILE: drivers/input/lirc/lirc_serial.c:733:
+			   autodetection. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#802: FILE: drivers/input/lirc/lirc_serial.c:736:
+			/* calculate time since last interrupt in
+			   microseconds */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#802: FILE: drivers/input/lirc/lirc_serial.c:736:
+			   microseconds */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#806: FILE: drivers/input/lirc/lirc_serial.c:740:
+				printk(KERN_WARNING LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#814: FILE: drivers/input/lirc/lirc_serial.c:748:
+			deltv = tv.tv_sec-lasttv.tv_sec;
 			                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#818: FILE: drivers/input/lirc/lirc_serial.c:752:
+				printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#820: FILE: drivers/input/lirc/lirc_serial.c:754:
+				       ": AIEEEE: your clock just jumped "
+				       "backwards\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#821: FILE: drivers/input/lirc/lirc_serial.c:755:
+				printk(KERN_WARNING LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#829: FILE: drivers/input/lirc/lirc_serial.c:763:
+				if (!(dcd^sense)) {
 				         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#831: FILE: drivers/input/lirc/lirc_serial.c:765:
+					printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#833: FILE: drivers/input/lirc/lirc_serial.c:767:
+					       ": AIEEEE: "
+					       "%d %d %lx %lx %lx %lx\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#838: FILE: drivers/input/lirc/lirc_serial.c:772:
+					/* detecting pulse while this
+					   MUST be a space! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#838: FILE: drivers/input/lirc/lirc_serial.c:772:
+					   MUST be a space! */

CHECK:BRACES: Unbalanced braces around else statement
#841: FILE: drivers/input/lirc/lirc_serial.c:775:
+			} else

CHECK:SPACING: No space is necessary after a cast
#842: FILE: drivers/input/lirc/lirc_serial.c:776:
+				data = (int) (deltv*1000000 +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#842: FILE: drivers/input/lirc/lirc_serial.c:776:
+				data = (int) (deltv*1000000 +
 				                   ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#845: FILE: drivers/input/lirc/lirc_serial.c:779:
+			frbwrite(dcd^sense ? data : (data|PULSE_BIT));
 			            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#845: FILE: drivers/input/lirc/lirc_serial.c:779:
+			frbwrite(dcd^sense ? data : (data|PULSE_BIT));
 			                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#857: FILE: drivers/input/lirc/lirc_serial.c:791:
+	unsigned long flags;
+	local_irq_save(flags);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#864: FILE: drivers/input/lirc/lirc_serial.c:798:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#864: FILE: drivers/input/lirc/lirc_serial.c:798:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#864: FILE: drivers/input/lirc/lirc_serial.c:798:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#880: FILE: drivers/input/lirc/lirc_serial.c:814:
+		/* set out2 = interupt unmask; off() doesn't set MCR
 		              ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#881: FILE: drivers/input/lirc/lirc_serial.c:815:
+		/* set out2 = interupt unmask; off() doesn't set MCR
+		   on NSLU2 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#881: FILE: drivers/input/lirc/lirc_serial.c:815:
+		   on NSLU2 */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#882: FILE: drivers/input/lirc/lirc_serial.c:816:
+		soutp(UART_MCR, UART_MCR_RTS|UART_MCR_OUT2);
 		                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#924: FILE: drivers/input/lirc/lirc_serial.c:858:
+	/* Future MMAP-Developers: Attention!
+	   For memory mapped I/O you *might* need to use ioremap() first,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: drivers/input/lirc/lirc_serial.c:859:
+	   for the NSLU2 it's done in boot code. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iommap != 0'
#926: FILE: drivers/input/lirc/lirc_serial.c:860:
+	if (((iommap != 0)
+	     && (request_mem_region(iommap, 8<<ioshift,
+				    LIRC_DRIVER_NAME) == NULL))
+	   || ((iommap == 0)
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iommap == 0'
#926: FILE: drivers/input/lirc/lirc_serial.c:860:
+	if (((iommap != 0)
+	     && (request_mem_region(iommap, 8<<ioshift,
+				    LIRC_DRIVER_NAME) == NULL))
+	   || ((iommap == 0)
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#927: FILE: drivers/input/lirc/lirc_serial.c:861:
+	if (((iommap != 0)
+	     && (request_mem_region(iommap, 8<<ioshift,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#927: FILE: drivers/input/lirc/lirc_serial.c:861:
+	     && (request_mem_region(iommap, 8<<ioshift,
 	                                     ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#929: FILE: drivers/input/lirc/lirc_serial.c:863:
+				    LIRC_DRIVER_NAME) == NULL))
+	   || ((iommap == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#930: FILE: drivers/input/lirc/lirc_serial.c:864:
+	   || ((iommap == 0)
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#930: FILE: drivers/input/lirc/lirc_serial.c:864:
+	       && (request_region(io, 8, LIRC_DRIVER_NAME) == NULL))) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#932: FILE: drivers/input/lirc/lirc_serial.c:866:
+	if (request_region(io, 8, LIRC_DRIVER_NAME) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#934: FILE: drivers/input/lirc/lirc_serial.c:868:
+		printk(KERN_ERR  LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#936: FILE: drivers/input/lirc/lirc_serial.c:870:
+		printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#938: FILE: drivers/input/lirc/lirc_serial.c:872:
+		printk(KERN_WARNING LIRC_DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#940: FILE: drivers/input/lirc/lirc_serial.c:874:
+		printk(KERN_WARNING LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#955: FILE: drivers/input/lirc/lirc_serial.c:889:
+		schedule_timeout(HZ/2);
 		                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#958: FILE: drivers/input/lirc/lirc_serial.c:892:
+		/* probe 9 times every 0.04s, collect "votes" for
+		   active high/low */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#958: FILE: drivers/input/lirc/lirc_serial.c:892:
+		   active high/low */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#966: FILE: drivers/input/lirc/lirc_serial.c:900:
+			schedule_timeout(HZ/25);
 			                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#969: FILE: drivers/input/lirc/lirc_serial.c:903:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": auto-detected active "

WARNING:SPLIT_STRING: quoted string split across lines
#970: FILE: drivers/input/lirc/lirc_serial.c:904:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": auto-detected active "
+		       "%s receiver\n", sense ? "low" : "high");

CHECK:BRACES: Unbalanced braces around else statement
#971: FILE: drivers/input/lirc/lirc_serial.c:905:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#972: FILE: drivers/input/lirc/lirc_serial.c:906:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": Manually using active "

WARNING:SPLIT_STRING: quoted string split across lines
#973: FILE: drivers/input/lirc/lirc_serial.c:907:
+		printk(KERN_INFO  LIRC_DRIVER_NAME  ": Manually using active "
+		       "%s receiver\n", sense ? "low" : "high");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: drivers/input/lirc/lirc_serial.c:925:
+	result = request_irq(irq, irq_handler,
+			   IRQF_DISABLED | (share_irq ? IRQF_SHARED : 0),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#996: FILE: drivers/input/lirc/lirc_serial.c:930:
+		printk(KERN_ERR LIRC_DRIVER_NAME ": IRQ %d busy\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1000: FILE: drivers/input/lirc/lirc_serial.c:934:
+		printk(KERN_ERR LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1014: FILE: drivers/input/lirc/lirc_serial.c:948:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_MSI);
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1031: FILE: drivers/input/lirc/lirc_serial.c:965:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1031: FILE: drivers/input/lirc/lirc_serial.c:965:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1031: FILE: drivers/input/lirc/lirc_serial.c:965:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1041: FILE: drivers/input/lirc/lirc_serial.c:975:
+static ssize_t lirc_write(struct file *file, const char *buf,
+			 size_t n, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1047: FILE: drivers/input/lirc/lirc_serial.c:981:
+	if (!(hardware[type].features&LIRC_CAN_SEND_PULSE))
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1063: FILE: drivers/input/lirc/lirc_serial.c:997:
+		if (i%2)
 		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1064: FILE: drivers/input/lirc/lirc_serial.c:998:
+			hardware[type].send_space(wbuf[i]-delta);
 			                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1082: FILE: drivers/input/lirc/lirc_serial.c:1016:
+		if (!(hardware[type].features&LIRC_CAN_SEND_MASK))
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1086: FILE: drivers/input/lirc/lirc_serial.c:1020:
+				  (hardware[type].features&LIRC_CAN_SEND_MASK),
 				                          ^

CHECK:SPACING: No space is necessary after a cast
#1087: FILE: drivers/input/lirc/lirc_serial.c:1021:
+				  (unsigned long *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1093: FILE: drivers/input/lirc/lirc_serial.c:1027:
+		if (!(hardware[type].features&LIRC_CAN_SEND_MASK))
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#1096: FILE: drivers/input/lirc/lirc_serial.c:1030:
+		result = get_user(value, (unsigned long *) arg);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1101: FILE: drivers/input/lirc/lirc_serial.c:1035:
+			return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1105: FILE: drivers/input/lirc/lirc_serial.c:1039:
+		return -ENOSYS;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1106: FILE: drivers/input/lirc/lirc_serial.c:1040:
+		return -ENOSYS;
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1110: FILE: drivers/input/lirc/lirc_serial.c:1044:
+		if (!(hardware[type].features&LIRC_CAN_SET_SEND_DUTY_CYCLE))
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#1113: FILE: drivers/input/lirc/lirc_serial.c:1047:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1119: FILE: drivers/input/lirc/lirc_serial.c:1053:
+		return init_timing_params(ivalue, freq);
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1123: FILE: drivers/input/lirc/lirc_serial.c:1057:
+		if (!(hardware[type].features&LIRC_CAN_SET_SEND_CARRIER))
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#1126: FILE: drivers/input/lirc/lirc_serial.c:1060:
+		result = get_user(ivalue, (unsigned int *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1132: FILE: drivers/input/lirc/lirc_serial.c:1066:
+		return init_timing_params(duty_cycle, ivalue);
+		break;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1140: FILE: drivers/input/lirc/lirc_serial.c:1074:
+static struct file_operations lirc_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1165: FILE: drivers/input/lirc/lirc_serial.c:1099:
+static int __devinit lirc_serial_probe(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1170: FILE: drivers/input/lirc/lirc_serial.c:1104:
+static int __devexit lirc_serial_remove(struct platform_device *dev)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1183: FILE: drivers/input/lirc/lirc_serial.c:1117:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1183: FILE: drivers/input/lirc/lirc_serial.c:1117:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1183: FILE: drivers/input/lirc/lirc_serial.c:1117:
+	      (~(UART_IER_MSI|UART_IER_RLSI|UART_IER_THRI|UART_IER_RDI)));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1203: FILE: drivers/input/lirc/lirc_serial.c:1137:
+	soutp(UART_IER, sinp(UART_IER)|UART_IER_MSI);
 	                              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1230: FILE: drivers/input/lirc/lirc_serial.c:1164:
+		printk("lirc register returned %d\n", result);

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1286: FILE: drivers/input/lirc/lirc_serial.c:1220:
+				~(LIRC_CAN_SET_SEND_DUTY_CYCLE|
 				                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1297: FILE: drivers/input/lirc/lirc_serial.c:1231:
+		printk(KERN_ERR  LIRC_DRIVER_NAME

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1315: FILE: drivers/input/lirc/lirc_serial.c:1249:
+		release_mem_region(iommap, 8<<ioshift);
 		                            ^

WARNING:SPLIT_STRING: quoted string split across lines
#1327: FILE: drivers/input/lirc/lirc_serial.c:1261:
+MODULE_AUTHOR("Ralph Metzler, Trent Piepho, Ben Pfaff, "
+	      "Christoph Bartelmus, Andrei Tanas");

WARNING:SPLIT_STRING: quoted string split across lines
#1333: FILE: drivers/input/lirc/lirc_serial.c:1267:
+MODULE_PARM_DESC(type, "Hardware type (0 = home-brew, 1 = IRdeo,"
+		 " 2 = IRdeo Remote, 3 = AnimaX, 4 = IgorPlug,"

WARNING:SPLIT_STRING: quoted string split across lines
#1334: FILE: drivers/input/lirc/lirc_serial.c:1268:
+		 " 2 = IRdeo Remote, 3 = AnimaX, 4 = IgorPlug,"
+		 " 5 = NSLU2 RX:CTS2/TX:GreenLED)");

WARNING:SPLIT_STRING: quoted string split across lines
#1337: FILE: drivers/input/lirc/lirc_serial.c:1271:
+MODULE_PARM_DESC(type, "Hardware type (0 = home-brew, 1 = IRdeo,"
+		 " 2 = IRdeo Remote, 3 = AnimaX, 4 = IgorPlug)");

WARNING:SPLIT_STRING: quoted string split across lines
#1347: FILE: drivers/input/lirc/lirc_serial.c:1281:
+MODULE_PARM_DESC(iommap, "physical base for memory mapped I/O"
+		" (0 = no memory mapped io)");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1350: FILE: drivers/input/lirc/lirc_serial.c:1284:
+/* some architectures (e.g. intel xscale) align the 8bit serial registers
+   on 32bit word boundaries.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1351: FILE: drivers/input/lirc/lirc_serial.c:1285:
+   See linux-kernel/serial/8250.c serial_in()/out() */

WARNING:SPLIT_STRING: quoted string split across lines
#1364: FILE: drivers/input/lirc/lirc_serial.c:1298:
+MODULE_PARM_DESC(sense, "Override autodetection of IR receiver circuit"
+		 " (0 = active high, 1 = active low )");

WARNING:SPLIT_STRING: quoted string split across lines
#1369: FILE: drivers/input/lirc/lirc_serial.c:1303:
+MODULE_PARM_DESC(txsense, "Sense of transmitter circuit"
+		 " (0 = active high, 1 = active low )");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 83 warnings, 130 checks, 1327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
