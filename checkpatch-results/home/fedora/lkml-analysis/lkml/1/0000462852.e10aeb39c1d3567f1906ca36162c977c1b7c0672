WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#31: 
devices exported exported by a virtual machine containing a physical

WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#61: FILE: drivers/net/Kconfig:2534:
+	  access network devices exported exported by a virtual

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/net/xen-netfront.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#136: FILE: drivers/net/xen-netfront.c:54:
+#include <asm/uaccess.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#151: FILE: drivers/net/xen-netfront.c:69:
+/*
+ * Mutually-exclusive module options to select receive data path:

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#158: FILE: drivers/net/xen-netfront.c:76:
+static int MODPARM_rx_copy = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#161: FILE: drivers/net/xen-netfront.c:79:
+static int MODPARM_rx_flip = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#166: FILE: drivers/net/xen-netfront.c:84:
+static const int MODPARM_rx_flip = 0;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#185: FILE: drivers/net/xen-netfront.c:103:
+	spinlock_t   tx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#186: FILE: drivers/net/xen-netfront.c:104:
+	spinlock_t   rx_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#195: FILE: drivers/net/xen-netfront.c:113:
+	unsigned rx_min_target, rx_max_target, rx_target;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#201: FILE: drivers/net/xen-netfront.c:119:
+	/*
+	 * {tx,rx}_skbs store outstanding skbuffs. The first entry in tx_skbs

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: drivers/net/xen-netfront.c:122:
+	struct sk_buff *tx_skbs[NET_TX_RING_SIZE+1];
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: drivers/net/xen-netfront.c:137:
+	struct multicall_entry rx_mcl[NET_RX_RING_SIZE+1];
 	                                              ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#229: FILE: drivers/net/xen-netfront.c:147:
+/*
+ * Access macros for acquiring freeing slots in tx_skbs[].

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: drivers/net/xen-netfront.c:159:
+	unsigned int id = (unsigned int)(unsigned long)list[0];
+	list[0] = list[id];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: drivers/net/xen-netfront.c:173:
+	struct sk_buff *skb = np->rx_skbs[i];
+	np->rx_skbs[i] = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: drivers/net/xen-netfront.c:182:
+	grant_ref_t ref = np->grant_rx_ref[i];
+	np->grant_rx_ref[i] = GRANT_INVALID_REF;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#270: FILE: drivers/net/xen-netfront.c:188:
+		 __FUNCTION__, __LINE__, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#272: FILE: drivers/net/xen-netfront.c:190:
+	printk(KERN_INFO "netfront: " fmt, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#274: FILE: drivers/net/xen-netfront.c:192:
+	printk(KERN_WARNING "netfront: " fmt, ##args)

ERROR:SPACING: space required before the open parenthesis '('
#298: FILE: drivers/net/xen-netfront.c:216:
+#define xennet_sysfs_delif(dev) do { } while(0)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#311: FILE: drivers/net/xen-netfront.c:229:
+static int __devinit netfront_probe(struct xenbus_device *dev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#340: FILE: drivers/net/xen-netfront.c:258:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#362: FILE: drivers/net/xen-netfront.c:280:
+	macstr = s = xenbus_read(XBT_NIL, dev->nodename, "mac", NULL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#367: FILE: drivers/net/xen-netfront.c:285:
+		mac[i] = simple_strtoul(s, &e, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#368: FILE: drivers/net/xen-netfront.c:286:
+		if ((s == e) || (*e != ((i == ETH_ALEN-1) ? '\0' : ':'))) {
 		                                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's == e'
#368: FILE: drivers/net/xen-netfront.c:286:
+		if ((s == e) || (*e != ((i == ETH_ALEN-1) ? '\0' : ':'))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#372: FILE: drivers/net/xen-netfront.c:290:
+		s = e+1;
 		     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: drivers/net/xen-netfront.c:323:
+	err = xenbus_printf(xbt, dev->nodename, "tx-ring-ref","%u",
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: drivers/net/xen-netfront.c:329:
+	err = xenbus_printf(xbt, dev->nodename, "rx-ring-ref","%u",
 	                                                     ^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#477: FILE: drivers/net/xen-netfront.c:395:
+	info->rx.sring = NULL;
 	         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#478: FILE: drivers/net/xen-netfront.c:396:
+	info->tx.sring = NULL;
 	         ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateInitialising>
#550: FILE: drivers/net/xen-netfront.c:468:
+		if (dev->state != XenbusStateInitialising)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#554: FILE: drivers/net/xen-netfront.c:472:
+		xenbus_switch_state(dev, XenbusStateConnected);

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateClosed>
#559: FILE: drivers/net/xen-netfront.c:477:
+		if (dev->state == XenbusStateClosed)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#588: FILE: drivers/net/xen-netfront.c:506:
+	if (skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#636: FILE: drivers/net/xen-netfront.c:554:
+	BUG_ON(!netif_carrier_ok(dev));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#651: FILE: drivers/net/xen-netfront.c:569:
+			if (unlikely(gnttab_query_foreign_access(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#653: FILE: drivers/net/xen-netfront.c:571:
+				printk(KERN_ALERT "network_tx_buf_gc: warning "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'network_tx_buf_gc', this function's name, in a string
#653: FILE: drivers/net/xen-netfront.c:571:
+				printk(KERN_ALERT "network_tx_buf_gc: warning "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#654: FILE: drivers/net/xen-netfront.c:572:
+				printk(KERN_ALERT "network_tx_buf_gc: warning "
+				       "-- grant still in use by backend "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#655: FILE: drivers/net/xen-netfront.c:573:
+				       "-- grant still in use by backend "
+				       "domain.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#656: FILE: drivers/net/xen-netfront.c:574:
+				BUG();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#658: FILE: drivers/net/xen-netfront.c:576:
+			gnttab_end_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#660: FILE: drivers/net/xen-netfront.c:578:
+			gnttab_release_grant_reference(

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#670: FILE: drivers/net/xen-netfront.c:588:
+		/*
+		 * Set a new event, then check for race with update of tx_cons.

WARNING:MEMORY_BARRIER: memory barrier without comment
#679: FILE: drivers/net/xen-netfront.c:597:
+		mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#688: FILE: drivers/net/xen-netfront.c:606:
+	struct net_device *dev = (struct net_device *)data;
+	netif_rx_schedule(dev);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#710: FILE: drivers/net/xen-netfront.c:628:
+	/*
+	 * Allocate skbuffs greedily, even though we batch updates to the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#718: FILE: drivers/net/xen-netfront.c:636:
+		/*
+		 * Allocate an skb and a page. Do not use __dev_alloc_skb as

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#737: FILE: drivers/net/xen-netfront.c:655:
+				  jiffies + (HZ/10));
 				               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#748: FILE: drivers/net/xen-netfront.c:666:
+	if (i < (np->rx_target/2)) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#755: FILE: drivers/net/xen-netfront.c:673:
+	if (((req_prod - np->rx.sring->rsp_prod) < (np->rx_target / 4)) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#761: FILE: drivers/net/xen-netfront.c:679:
+		if ((skb = __skb_dequeue(&np->rx_batch)) == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#768: FILE: drivers/net/xen-netfront.c:686:
+		BUG_ON(np->rx_skbs[id]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#772: FILE: drivers/net/xen-netfront.c:690:
+		BUG_ON((signed short)ref < 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#786: FILE: drivers/net/xen-netfront.c:704:
+				 * back to Xen. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#788: FILE: drivers/net/xen-netfront.c:706:
+				MULTI_update_va_mapping(np->rx_mcl+i,
 				                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#804: FILE: drivers/net/xen-netfront.c:722:
+	if ( nr_flips != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#804: FILE: drivers/net/xen-netfront.c:722:
+	if ( nr_flips != 0 ) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#818: FILE: drivers/net/xen-netfront.c:736:
+			np->rx_mcl[i-1].args[MULTI_UVMFLAGS_INDEX] =
 			            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#819: FILE: drivers/net/xen-netfront.c:737:
+				UVMF_TLB_FLUSH|UVMF_ALL;
 				              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#827: FILE: drivers/net/xen-netfront.c:745:
+			 * multicall. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#828: FILE: drivers/net/xen-netfront.c:746:
+			(void)HYPERVISOR_multicall(np->rx_mcl, i+1);
 			                                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#839: FILE: drivers/net/xen-netfront.c:757:
+		wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#855: FILE: drivers/net/xen-netfront.c:773:
+	BUG_ON(np->rx_skbs[new]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#889: FILE: drivers/net/xen-netfront.c:807:
+		BUG_ON((signed short)ref < 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#895: FILE: drivers/net/xen-netfront.c:813:
+		tx->gref = np->grant_tx_ref[id] = ref;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#911: FILE: drivers/net/xen-netfront.c:829:
+		BUG_ON((signed short)ref < 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#917: FILE: drivers/net/xen-netfront.c:835:
+		tx->gref = np->grant_tx_ref[id] = ref;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#943: FILE: drivers/net/xen-netfront.c:861:
+		printk(KERN_ALERT "xennet: skb rides the rocket: %d frags\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#967: FILE: drivers/net/xen-netfront.c:885:
+	BUG_ON((signed short)ref < 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#969: FILE: drivers/net/xen-netfront.c:887:
+	gnttab_grant_foreign_access_ref(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#971: FILE: drivers/net/xen-netfront.c:889:
+	tx->gref = np->grant_tx_ref[id] = ref;

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: drivers/net/xen-netfront.c:894:
+ ^Itx->flags = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#976: FILE: drivers/net/xen-netfront.c:894:
+ ^Itx->flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: drivers/net/xen-netfront.c:894:
+ ^Itx->flags = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: drivers/net/xen-netfront.c:895:
+ ^Iif (skb->ip_summed == CHECKSUM_PARTIAL) /* local packet? */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#977: FILE: drivers/net/xen-netfront.c:895:
+ ^Iif (skb->ip_summed == CHECKSUM_PARTIAL) /* local packet? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: drivers/net/xen-netfront.c:895:
+ ^Iif (skb->ip_summed == CHECKSUM_PARTIAL) /* local packet? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: drivers/net/xen-netfront.c:896:
+ ^I^Itx->flags |= NETTXF_csum_blank | NETTXF_data_validated;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#978: FILE: drivers/net/xen-netfront.c:896:
+ ^I^Itx->flags |= NETTXF_csum_blank | NETTXF_data_validated;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: drivers/net/xen-netfront.c:896:
+ ^I^Itx->flags |= NETTXF_csum_blank | NETTXF_data_validated;$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1148: FILE: drivers/net/xen-netfront.c:1066:
+		/*
+		 * This definitely indicates a bug, either in this driver or in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1161: FILE: drivers/net/xen-netfront.c:1079:
+			 * headroom, ... */

WARNING:SPLIT_STRING: quoted string split across lines
#1166: FILE: drivers/net/xen-netfront.c:1084:
+					WPRINTK("Unfulfilled rx req "
+						"(id=%d, st=%d).\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1196: FILE: drivers/net/xen-netfront.c:1114:
+			BUG_ON(!ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1319: FILE: drivers/net/xen-netfront.c:1237:
+	if ((budget = *pbudget) > dev->quota)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1346: FILE: drivers/net/xen-netfront.c:1264:
+			struct netif_extra_info *gso;
+			gso = &extras[XEN_NETIF_EXTRA_TYPE_GSO - 1];

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1376: FILE: drivers/net/xen-netfront.c:1294:
+		/*
+		 * Truesize must approximates the size of true data plus

WARNING:TYPO_SPELLING: 'adjustement' may be misspelled - perhaps 'adjustment'?
#1391: FILE: drivers/net/xen-netfront.c:1309:
+		 * On such systems, without this last adjustement, our
 		                                      ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1433: FILE: drivers/net/xen-netfront.c:1351:
+	     ((3*np->rx_target) / 4)) &&
 	        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1467: FILE: drivers/net/xen-netfront.c:1385:
+		gnttab_end_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1469: FILE: drivers/net/xen-netfront.c:1387:
+		gnttab_release_grant_reference(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1488: FILE: drivers/net/xen-netfront.c:1406:
+		printk("%s: fix me for copying receiver.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1488: FILE: drivers/net/xen-netfront.c:1406:
+		printk("%s: fix me for copying receiver.\n", __FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1497: FILE: drivers/net/xen-netfront.c:1415:
+		if ((ref = np->grant_rx_ref[id]) == GRANT_INVALID_REF) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1508: FILE: drivers/net/xen-netfront.c:1426:
+		if (0 == mfn) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1511: FILE: drivers/net/xen-netfront.c:1429:
+			struct page *page = skb_shinfo(skb)->frags[0].page;
+			balloon_release_driver_page(page);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1540: FILE: drivers/net/xen-netfront.c:1458:
+	printk("%s: %d xfer, %d noxfer, %d unused\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1541: FILE: drivers/net/xen-netfront.c:1459:
+	       __FUNCTION__, xfer, noxfer, unused);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1570: FILE: drivers/net/xen-netfront.c:1488:
+	struct netfront_info *np = netdev_priv(dev);
+	netif_stop_queue(np->netdev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1574: FILE: drivers/net/xen-netfront.c:1492:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1578: FILE: drivers/net/xen-netfront.c:1496:
+	struct netfront_info *np = netdev_priv(dev);
+	return &np->stats;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1593: FILE: drivers/net/xen-netfront.c:1511:
+	if (data) {
[...]
+	} else if (dev->mtu > ETH_DATA_LEN)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1601: FILE: drivers/net/xen-netfront.c:1519:
+			return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1618: FILE: drivers/net/xen-netfront.c:1536:
+			return -ENOSYS;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1658: FILE: drivers/net/xen-netfront.c:1576:
+	/*
+	 * Copy packets on receive path if:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1678: FILE: drivers/net/xen-netfront.c:1596:
+	/*
+	 * Recovery procedure:

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1693: FILE: drivers/net/xen-netfront.c:1611:
+		skb = np->rx_skbs[requeue_idx] = xennet_get_rx_skb(np, i);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1694: FILE: drivers/net/xen-netfront.c:1612:
+		ref = np->grant_rx_ref[requeue_idx] = xennet_get_rx_ref(np, i);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1698: FILE: drivers/net/xen-netfront.c:1616:
+			gnttab_grant_foreign_transfer_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1702: FILE: drivers/net/xen-netfront.c:1620:
+			gnttab_grant_foreign_access_ref(

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1717: FILE: drivers/net/xen-netfront.c:1635:
+	/*
+	 * Step 3: All public and private state should now be sane.  Get

WARNING:LINE_SPACING: Missing a blank line after declarations
#1736: FILE: drivers/net/xen-netfront.c:1654:
+	struct netfront_info *np = netdev_priv(dev);
+	netif_release_tx_bufs(np);

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1742: FILE: drivers/net/xen-netfront.c:1660:
+static struct ethtool_ops network_ethtool_ops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1743: FILE: drivers/net/xen-netfront.c:1661:
+static struct ethtool_ops network_ethtool_ops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1775: FILE: drivers/net/xen-netfront.c:1693:
+	target = simple_strtoul(buf, &endp, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1818: FILE: drivers/net/xen-netfront.c:1736:
+	target = simple_strtoul(buf, &endp, 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1850: FILE: drivers/net/xen-netfront.c:1768:
+	__ATTR(rxbuf_min, S_IRUGO|S_IWUSR, show_rxbuf_min, store_rxbuf_min),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1850: FILE: drivers/net/xen-netfront.c:1768:
+	__ATTR(rxbuf_min, S_IRUGO|S_IWUSR, show_rxbuf_min, store_rxbuf_min),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1851: FILE: drivers/net/xen-netfront.c:1769:
+	__ATTR(rxbuf_max, S_IRUGO|S_IWUSR, show_rxbuf_max, store_rxbuf_max),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1851: FILE: drivers/net/xen-netfront.c:1769:
+	__ATTR(rxbuf_max, S_IRUGO|S_IWUSR, show_rxbuf_max, store_rxbuf_max),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1852: FILE: drivers/net/xen-netfront.c:1770:
+	__ATTR(rxbuf_cur, S_IRUGO, show_rxbuf_cur, NULL),

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1878: FILE: drivers/net/xen-netfront.c:1796:
+	for (i = 0; i < ARRAY_SIZE(xennet_attrs); i++) {
+		device_remove_file(&netdev->dev, &xennet_attrs[i]);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1885: FILE: drivers/net/xen-netfront.c:1803:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1887: FILE: drivers/net/xen-netfront.c:1805:
+/*
+ * Nothing to do here. Virtual interface is point-to-point and the

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1894: FILE: drivers/net/xen-netfront.c:1812:
+static struct net_device * __devinit create_netdev(struct xenbus_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1902: FILE: drivers/net/xen-netfront.c:1820:
+		printk(KERN_WARNING "%s> alloc_etherdev failed.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1903: FILE: drivers/net/xen-netfront.c:1821:
+		       __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#1926: FILE: drivers/net/xen-netfront.c:1844:
+		np->tx_skbs[i] = (void *)((unsigned long) i+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1926: FILE: drivers/net/xen-netfront.c:1844:
+		np->tx_skbs[i] = (void *)((unsigned long) i+1);
 		                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1938: FILE: drivers/net/xen-netfront.c:1856:
+		printk(KERN_ALERT "#### netfront can't alloc tx grant refs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1945: FILE: drivers/net/xen-netfront.c:1863:
+		printk(KERN_ALERT "#### netfront can't alloc rx grant refs\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1976: FILE: drivers/net/xen-netfront.c:1894:
+/*
+ * We use this notifier to send out a fake ARP reply to reset switches and

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1992: FILE: drivers/net/xen-netfront.c:1910:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1995: FILE: drivers/net/xen-netfront.c:1913:
+
+

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#2000: FILE: drivers/net/xen-netfront.c:1918:
+ * acknowledgement.
    ^^^^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2012: FILE: drivers/net/xen-netfront.c:1930:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2013: FILE: drivers/net/xen-netfront.c:1931:
+static int __devexit netfront_remove(struct xenbus_device *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2025: FILE: drivers/net/xen-netfront.c:1943:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2032: FILE: drivers/net/xen-netfront.c:1950:
+		printk(KERN_WARNING "%s: register_netdev err=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2033: FILE: drivers/net/xen-netfront.c:1951:
+		       __FUNCTION__, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2040: FILE: drivers/net/xen-netfront.c:1958:
+		printk(KERN_WARNING "%s: add sysfs failed err=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2041: FILE: drivers/net/xen-netfront.c:1959:
+		       __FUNCTION__, err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2056: FILE: drivers/net/xen-netfront.c:1974:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2068: FILE: drivers/net/xen-netfront.c:1986:
+	info->evtchn = info->irq = 0;

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#2070: FILE: drivers/net/xen-netfront.c:1988:
+	end_access(info->tx_ring_ref, info->tx.sring);
 	                                       ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#2071: FILE: drivers/net/xen-netfront.c:1989:
+	end_access(info->rx_ring_ref, info->rx.sring);
 	                                       ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#2074: FILE: drivers/net/xen-netfront.c:1992:
+	info->tx.sring = NULL;
 	         ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#2075: FILE: drivers/net/xen-netfront.c:1993:
+	info->rx.sring = NULL;
 	         ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2078: FILE: drivers/net/xen-netfront.c:1996:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2085: FILE: drivers/net/xen-netfront.c:2003:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2088: FILE: drivers/net/xen-netfront.c:2006:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2094: FILE: drivers/net/xen-netfront.c:2012:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2105: FILE: drivers/net/xen-netfront.c:2023:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2136: FILE: drivers/net/xen-netfront.c:2054:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462852.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 90 warnings, 52 checks, 2097 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462852.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
