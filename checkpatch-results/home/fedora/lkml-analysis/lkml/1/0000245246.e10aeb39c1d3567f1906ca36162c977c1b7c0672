ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#30: 
--- a/debug/mdb-logic.c	1969-12-31 17:00:00.000000000 -0700

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#33: FILE: debug/mdb-logic.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#35: FILE: debug/mdb-logic.c:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#178: FILE: debug/mdb-logic.c:146:
+BYTE *exprDescription[]={
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <exprDescription>
#178: FILE: debug/mdb-logic.c:146:
+BYTE *exprDescription[]={

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: debug/mdb-logic.c:147:
+     "INVALID",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: debug/mdb-logic.c:148:
+     "NUMERIC",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: debug/mdb-logic.c:149:
+     "BOOLEAN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: debug/mdb-logic.c:150:
+     "???????",$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: debug/mdb-logic.c:153:
+BYTE *parserDescription[]={
                          ^

CHECK:CAMELCASE: Avoid CamelCase: <parserDescription>
#185: FILE: debug/mdb-logic.c:153:
+BYTE *parserDescription[]={

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: debug/mdb-logic.c:154:
+     "NULL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: debug/mdb-logic.c:155:
+     "NUMBER_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: debug/mdb-logic.c:156:
+     "MINUS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: debug/mdb-logic.c:157:
+     "PLUS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: debug/mdb-logic.c:158:
+     "MULTIPLY_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: debug/mdb-logic.c:159:
+     "DIVIDE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: debug/mdb-logic.c:160:
+     "GREATER_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: debug/mdb-logic.c:161:
+     "LESS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: debug/mdb-logic.c:162:
+     "XOR_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: debug/mdb-logic.c:163:
+     "AND_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: debug/mdb-logic.c:164:
+     "OR_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: debug/mdb-logic.c:165:
+     "NOT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: debug/mdb-logic.c:166:
+     "NEG_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: debug/mdb-logic.c:167:
+     "EQUAL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: debug/mdb-logic.c:168:
+     "LEFT_SHIFT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: debug/mdb-logic.c:169:
+     "RIGHT_SHIFT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: debug/mdb-logic.c:170:
+     "SPACE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: debug/mdb-logic.c:171:
+     "FLAGS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: debug/mdb-logic.c:172:
+     "EAX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: debug/mdb-logic.c:173:
+     "EBX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: debug/mdb-logic.c:174:
+     "ECX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: debug/mdb-logic.c:175:
+     "EDX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: debug/mdb-logic.c:176:
+     "ESI_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: debug/mdb-logic.c:177:
+     "EDI_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: debug/mdb-logic.c:178:
+     "EBP_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: debug/mdb-logic.c:179:
+     "ESP_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: debug/mdb-logic.c:180:
+     "CS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: debug/mdb-logic.c:181:
+     "DS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: debug/mdb-logic.c:182:
+     "ES_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: debug/mdb-logic.c:183:
+     "FS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: debug/mdb-logic.c:184:
+     "GS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: debug/mdb-logic.c:185:
+     "SS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: debug/mdb-logic.c:186:
+     "DREF_OPEN_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: debug/mdb-logic.c:187:
+     "DREF_CLOSE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: debug/mdb-logic.c:188:
+     "MOD_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: debug/mdb-logic.c:189:
+     "NUMBER_END",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: debug/mdb-logic.c:190:
+     "GREATER_EQUAL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: debug/mdb-logic.c:191:
+     "LESS_EQUAL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: debug/mdb-logic.c:192:
+     "EIP_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: debug/mdb-logic.c:193:
+     "ASSIGNMENT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: debug/mdb-logic.c:194:
+     "DWORD_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: debug/mdb-logic.c:195:
+     "WORD_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: debug/mdb-logic.c:196:
+     "BYTE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: debug/mdb-logic.c:197:
+     "LOGICAL_AND_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: debug/mdb-logic.c:198:
+     "LOGICAL_OR_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: debug/mdb-logic.c:199:
+     "CF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: debug/mdb-logic.c:200:
+     "PF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: debug/mdb-logic.c:201:
+     "AF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: debug/mdb-logic.c:202:
+     "ZF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: debug/mdb-logic.c:203:
+     "SF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: debug/mdb-logic.c:204:
+     "IF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: debug/mdb-logic.c:205:
+     "DF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: debug/mdb-logic.c:206:
+     "OF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: debug/mdb-logic.c:207:
+     "VM_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: debug/mdb-logic.c:208:
+     "AC_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: debug/mdb-logic.c:209:
+     "BEGIN_BRACKET",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: debug/mdb-logic.c:210:
+     "END_BRACKET",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: debug/mdb-logic.c:211:
+     "NOT_EQUAL_TOKEN"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: debug/mdb-logic.c:212:
+     "INVALID_NUMBER_TOKEN"$

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: debug/mdb-logic.c:212:
+     "NOT_EQUAL_TOKEN"
+     "INVALID_NUMBER_TOKEN"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#244: FILE: debug/mdb-logic.c:212:
+     "NOT_EQUAL_TOKEN"
+     "INVALID_NUMBER_TOKEN"

CHECK:CAMELCASE: Avoid CamelCase: <TokenIndex>
#247: FILE: debug/mdb-logic.c:215:
+BYTE TokenIndex[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenClass>
#248: FILE: debug/mdb-logic.c:216:
+BYTE TokenClass[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenType>
#249: FILE: debug/mdb-logic.c:217:
+BYTE TokenType[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenValue>
#250: FILE: debug/mdb-logic.c:218:
+ULONG TokenValue[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenCount>
#251: FILE: debug/mdb-logic.c:219:
+ULONG TokenCount;

CHECK:CAMELCASE: Avoid CamelCase: <numStack>
#253: FILE: debug/mdb-logic.c:221:
+ULONG numStack[NUM_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <contextStack>
#258: FILE: debug/mdb-logic.c:226:
+ULONG contextStack[CONTEXT_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <booleanStack>
#263: FILE: debug/mdb-logic.c:231:
+ULONG booleanStack[BOOL_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <logicalStack>
#268: FILE: debug/mdb-logic.c:236:
+ULONG logicalStack[LOGICAL_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <GetValueFromSymbol>
#273: FILE: debug/mdb-logic.c:241:
+extern ULONG GetValueFromSymbol(BYTE *symbolName);

CHECK:CAMELCASE: Avoid CamelCase: <symbolName>
#273: FILE: debug/mdb-logic.c:241:
+extern ULONG GetValueFromSymbol(BYTE *symbolName);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#273: FILE: debug/mdb-logic.c:241:
+extern ULONG GetValueFromSymbol(BYTE *symbolName);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#274: FILE: debug/mdb-logic.c:242:
+extern BYTE delim_table[256];

CHECK:CAMELCASE: Avoid CamelCase: <expressLock>
#277: FILE: debug/mdb-logic.c:245:
+spinlock_t expressLock = SPIN_LOCK_UNLOCKED;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#278: FILE: debug/mdb-logic.c:246:
+static long flags = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <GetNumber>
#281: FILE: debug/mdb-logic.c:249:
+ULONG GetNumber(BYTE *p, BYTE **rp, ULONG *opl, ULONG *retCode, ULONG mode)

CHECK:CAMELCASE: Avoid CamelCase: <retCode>
#281: FILE: debug/mdb-logic.c:249:
+ULONG GetNumber(BYTE *p, BYTE **rp, ULONG *opl, ULONG *retCode, ULONG mode)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#283: FILE: debug/mdb-logic.c:251:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: debug/mdb-logic.c:252:
+    BYTE *op, *pp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: debug/mdb-logic.c:253:
+    ULONG c = 0, decimal = 0, hex_found = 0, invalid = 0, valid = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: debug/mdb-logic.c:255:
+    pp = op = p;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#287: FILE: debug/mdb-logic.c:255:
+    pp = op = p;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: debug/mdb-logic.c:256:
+    while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#288: FILE: debug/mdb-logic.c:256:
+    while (*p)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#288: FILE: debug/mdb-logic.c:256:
+    while (*p)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: debug/mdb-logic.c:257:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: debug/mdb-logic.c:258:
+       if (*p == 'X' || *p == 'x')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#290: FILE: debug/mdb-logic.c:258:
+       if (*p == 'X' || *p == 'x')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#290: FILE: debug/mdb-logic.c:258:
+       if (*p == 'X' || *p == 'x')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: debug/mdb-logic.c:259:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: debug/mdb-logic.c:260:
+          hex_found = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: debug/mdb-logic.c:260:
+          hex_found = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: debug/mdb-logic.c:261:
+          p++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: debug/mdb-logic.c:261:
+          p++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: debug/mdb-logic.c:262:
+          pp = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: debug/mdb-logic.c:262:
+          pp = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: debug/mdb-logic.c:263:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: debug/mdb-logic.c:265:
+       if (*p >= '0' && *p <= '9')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#297: FILE: debug/mdb-logic.c:265:
+       if (*p >= '0' && *p <= '9')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#297: FILE: debug/mdb-logic.c:265:
+       if (*p >= '0' && *p <= '9')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: debug/mdb-logic.c:266:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: debug/mdb-logic.c:267:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: debug/mdb-logic.c:267:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: debug/mdb-logic.c:269:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: debug/mdb-logic.c:270:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#302: FILE: debug/mdb-logic.c:270:
+       else
+       if (*p >= 'A' && *p <= 'F')

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#302: FILE: debug/mdb-logic.c:270:
+       }
+       else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: debug/mdb-logic.c:271:
+       if (*p >= 'A' && *p <= 'F')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#303: FILE: debug/mdb-logic.c:271:
+       if (*p >= 'A' && *p <= 'F')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#303: FILE: debug/mdb-logic.c:271:
+       if (*p >= 'A' && *p <= 'F')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: debug/mdb-logic.c:272:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: debug/mdb-logic.c:274:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: debug/mdb-logic.c:274:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: debug/mdb-logic.c:276:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: debug/mdb-logic.c:277:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#309: FILE: debug/mdb-logic.c:277:
+       else
+       if (*p >= 'a' && *p <= 'f')

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#309: FILE: debug/mdb-logic.c:277:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: debug/mdb-logic.c:278:
+       if (*p >= 'a' && *p <= 'f')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#310: FILE: debug/mdb-logic.c:278:
+       if (*p >= 'a' && *p <= 'f')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#310: FILE: debug/mdb-logic.c:278:
+       if (*p >= 'a' && *p <= 'f')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: debug/mdb-logic.c:279:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: debug/mdb-logic.c:281:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: debug/mdb-logic.c:281:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: debug/mdb-logic.c:283:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: debug/mdb-logic.c:284:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#316: FILE: debug/mdb-logic.c:284:
+       else
+       if ((*p == 'R') || (*p == 'r'))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#316: FILE: debug/mdb-logic.c:284:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: debug/mdb-logic.c:285:
+       if ((*p == 'R') || (*p == 'r'))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#317: FILE: debug/mdb-logic.c:285:
+       if ((*p == 'R') || (*p == 'r'))
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#317: FILE: debug/mdb-logic.c:285:
+       if ((*p == 'R') || (*p == 'r'))
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: debug/mdb-logic.c:286:
+       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: debug/mdb-logic.c:289:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: debug/mdb-logic.c:290:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#322: FILE: debug/mdb-logic.c:290:
+       else
+       if (delim_table[((*p) & 0xFF)])

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#322: FILE: debug/mdb-logic.c:290:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: debug/mdb-logic.c:291:
+       if (delim_table[((*p) & 0xFF)])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#323: FILE: debug/mdb-logic.c:291:
+       if (delim_table[((*p) & 0xFF)])
+	  break;

CHECK:CAMELCASE: Avoid CamelCase: <xFF>
#323: FILE: debug/mdb-logic.c:291:
+       if (delim_table[((*p) & 0xFF)])

WARNING:TABSTOP: Statements should start on a tabstop
#324: FILE: debug/mdb-logic.c:292:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: debug/mdb-logic.c:293:
+       else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#325: FILE: debug/mdb-logic.c:293:
+       else
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#325: FILE: debug/mdb-logic.c:293:
+       else
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: debug/mdb-logic.c:294:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: debug/mdb-logic.c:295:
+          invalid = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: debug/mdb-logic.c:295:
+          invalid = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: debug/mdb-logic.c:296:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: debug/mdb-logic.c:296:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: debug/mdb-logic.c:297:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: debug/mdb-logic.c:298:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: debug/mdb-logic.c:300:
+    if (rp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#332: FILE: debug/mdb-logic.c:300:
+    if (rp)
+       *rp = p;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: debug/mdb-logic.c:301:
+       *rp = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: debug/mdb-logic.c:302:
+    if (opl)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#334: FILE: debug/mdb-logic.c:302:
+    if (opl)
+       *opl = (ULONG)((ULONG)p - (ULONG) op);

CHECK:SPACING: No space is necessary after a cast
#335: FILE: debug/mdb-logic.c:303:
+       *opl = (ULONG)((ULONG)p - (ULONG) op);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: debug/mdb-logic.c:303:
+       *opl = (ULONG)((ULONG)p - (ULONG) op);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: debug/mdb-logic.c:305:
+    if (invalid && !valid)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#337: FILE: debug/mdb-logic.c:305:
+    if (invalid && !valid)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#337: FILE: debug/mdb-logic.c:305:
+    if (invalid && !valid)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: debug/mdb-logic.c:306:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: debug/mdb-logic.c:307:
+       if (retCode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#339: FILE: debug/mdb-logic.c:307:
+       if (retCode)
+          *retCode = -1;   // invalid string

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: debug/mdb-logic.c:308:
+          *retCode = -1;   // invalid string$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: debug/mdb-logic.c:308:
+          *retCode = -1;   // invalid string$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: debug/mdb-logic.c:309:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: debug/mdb-logic.c:310:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: debug/mdb-logic.c:312:
+    p = pp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: debug/mdb-logic.c:314:
+    if (mode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#346: FILE: debug/mdb-logic.c:314:
+    if (mode)
+       decimal = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: debug/mdb-logic.c:315:
+       decimal = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: debug/mdb-logic.c:317:
+    if (decimal)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#349: FILE: debug/mdb-logic.c:317:
+    if (decimal)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#349: FILE: debug/mdb-logic.c:317:
+    if (decimal)
[...]
+       // parse as decimal number;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: debug/mdb-logic.c:318:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: debug/mdb-logic.c:320:
+       while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#352: FILE: debug/mdb-logic.c:320:
+       while (*p)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 13)
#352: FILE: debug/mdb-logic.c:320:
+       while (*p)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: debug/mdb-logic.c:321:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#354: FILE: debug/mdb-logic.c:322:
+	     if (*p >= '0' && *p <= '9')

WARNING:TABSTOP: Statements should start on a tabstop
#356: FILE: debug/mdb-logic.c:324:
+	     else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: debug/mdb-logic.c:327:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: debug/mdb-logic.c:328:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: debug/mdb-logic.c:329:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 4)
#361: FILE: debug/mdb-logic.c:329:
+    else
+    if (hex_found)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#361: FILE: debug/mdb-logic.c:329:
+    }
+    else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: debug/mdb-logic.c:330:
+    if (hex_found)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#362: FILE: debug/mdb-logic.c:330:
+    if (hex_found)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#362: FILE: debug/mdb-logic.c:330:
+    if (hex_found)
[...]
+       // parse as hex number;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: debug/mdb-logic.c:331:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: debug/mdb-logic.c:333:
+       while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#365: FILE: debug/mdb-logic.c:333:
+       while (*p)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#365: FILE: debug/mdb-logic.c:333:
+       while (*p)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: debug/mdb-logic.c:334:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#367: FILE: debug/mdb-logic.c:335:
+	  if (*p >= '0' && *p <= '9')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#367: FILE: debug/mdb-logic.c:335:
+	  if (*p >= '0' && *p <= '9')
+	     c = (c << 4) | (*p - '0');

WARNING:TABSTOP: Statements should start on a tabstop
#369: FILE: debug/mdb-logic.c:337:
+	  else if (*p >= 'A' && *p <= 'F')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#369: FILE: debug/mdb-logic.c:337:
+	  else if (*p >= 'A' && *p <= 'F')
+	     c = (c << 4) | (*p - 'A' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#371: FILE: debug/mdb-logic.c:339:
+	  else if (*p >= 'a' && *p <= 'f')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#371: FILE: debug/mdb-logic.c:339:
+	  else if (*p >= 'a' && *p <= 'f')
+	     c = (c << 4) | (*p - 'a' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#373: FILE: debug/mdb-logic.c:341:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#373: FILE: debug/mdb-logic.c:341:
+	  else
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#374: FILE: debug/mdb-logic.c:342:
+	     break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: debug/mdb-logic.c:344:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: debug/mdb-logic.c:345:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: debug/mdb-logic.c:346:
+    else  // default parses as hex$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#378: FILE: debug/mdb-logic.c:346:
+    else  // default parses as hex
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#378: FILE: debug/mdb-logic.c:346:
+    else  // default parses as hex
[...]
+       // parse as hex number;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#378: FILE: debug/mdb-logic.c:346:
+    }
+    else  // default parses as hex

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: debug/mdb-logic.c:347:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: debug/mdb-logic.c:349:
+       while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#381: FILE: debug/mdb-logic.c:349:
+       while (*p)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#381: FILE: debug/mdb-logic.c:349:
+       while (*p)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: debug/mdb-logic.c:350:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#383: FILE: debug/mdb-logic.c:351:
+	  if (*p >= '0' && *p <= '9')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#383: FILE: debug/mdb-logic.c:351:
+	  if (*p >= '0' && *p <= '9')
+	     c = (c << 4) | (*p - '0');

WARNING:TABSTOP: Statements should start on a tabstop
#385: FILE: debug/mdb-logic.c:353:
+	  else if (*p >= 'A' && *p <= 'F')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#385: FILE: debug/mdb-logic.c:353:
+	  else if (*p >= 'A' && *p <= 'F')
+	     c = (c << 4) | (*p - 'A' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#387: FILE: debug/mdb-logic.c:355:
+	  else if (*p >= 'a' && *p <= 'f')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#387: FILE: debug/mdb-logic.c:355:
+	  else if (*p >= 'a' && *p <= 'f')
+	     c = (c << 4) | (*p - 'a' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#389: FILE: debug/mdb-logic.c:357:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#389: FILE: debug/mdb-logic.c:357:
+	  else
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#390: FILE: debug/mdb-logic.c:358:
+	     break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: debug/mdb-logic.c:360:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: debug/mdb-logic.c:361:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: debug/mdb-logic.c:363:
+    if (retCode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#395: FILE: debug/mdb-logic.c:363:
+    if (retCode)
+       *retCode = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: debug/mdb-logic.c:364:
+       *retCode = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: debug/mdb-logic.c:366:
+    return (c);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#398: FILE: debug/mdb-logic.c:366:
+    return (c);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#400: FILE: debug/mdb-logic.c:368:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#402: FILE: debug/mdb-logic.c:370:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <parseTokens>
#403: FILE: debug/mdb-logic.c:371:
+BYTE *parseTokens(StackFrame *stackFrame, BYTE *p, ULONG mode)

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#403: FILE: debug/mdb-logic.c:371:
+BYTE *parseTokens(StackFrame *stackFrame, BYTE *p, ULONG mode)

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#403: FILE: debug/mdb-logic.c:371:
+BYTE *parseTokens(StackFrame *stackFrame, BYTE *p, ULONG mode)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#405: FILE: debug/mdb-logic.c:373:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: debug/mdb-logic.c:374:
+    register ULONG i, value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: debug/mdb-logic.c:375:
+    BYTE symbol[256], *s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: debug/mdb-logic.c:376:
+    BYTE *tmp, *op;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: debug/mdb-logic.c:377:
+    ULONG delta, retCode = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: debug/mdb-logic.c:379:
+    op = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: debug/mdb-logic.c:380:
+    TokenCount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: debug/mdb-logic.c:381:
+    while (TokenCount < 200 && (ULONG)p - (ULONG)op < 200)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#413: FILE: debug/mdb-logic.c:381:
+    while (TokenCount < 200 && (ULONG)p - (ULONG)op < 200)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#413: FILE: debug/mdb-logic.c:381:
+    while (TokenCount < 200 && (ULONG)p - (ULONG)op < 200)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: debug/mdb-logic.c:382:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: debug/mdb-logic.c:383:
+       if (isalpha(*p) || *p == '_' ||  *p == '@' || *p == '$')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#415: FILE: debug/mdb-logic.c:383:
+       if (isalpha(*p) || *p == '_' ||  *p == '@' || *p == '$')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#415: FILE: debug/mdb-logic.c:383:
+       if (isalpha(*p) || *p == '_' ||  *p == '@' || *p == '$')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: debug/mdb-logic.c:384:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#418: FILE: debug/mdb-logic.c:386:
+	  for (i=0; i < 255; i++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#418: FILE: debug/mdb-logic.c:386:
+	  for (i=0; i < 255; i++)
+          {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#418: FILE: debug/mdb-logic.c:386:
+	  for (i=0; i < 255; i++)
+          {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#418: FILE: debug/mdb-logic.c:386:
+	  for (i=0; i < 255; i++)
 	        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: debug/mdb-logic.c:387:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: debug/mdb-logic.c:387:
+          {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: debug/mdb-logic.c:388:
+             if (delim_table[((s[i]) & 0xFF)])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: debug/mdb-logic.c:388:
+             if (delim_table[((s[i]) & 0xFF)])$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's[i]'
#420: FILE: debug/mdb-logic.c:388:
+             if (delim_table[((s[i]) & 0xFF)])

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: debug/mdb-logic.c:389:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: debug/mdb-logic.c:389:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: debug/mdb-logic.c:391:
+             if (!isprint(s[i]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: debug/mdb-logic.c:391:
+             if (!isprint(s[i]))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: debug/mdb-logic.c:392:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: debug/mdb-logic.c:392:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: debug/mdb-logic.c:395:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: debug/mdb-logic.c:395:
+          }$

WARNING:TABSTOP: Statements should start on a tabstop
#431: FILE: debug/mdb-logic.c:399:
+	  if (value)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#431: FILE: debug/mdb-logic.c:399:
+	  if (value)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#431: FILE: debug/mdb-logic.c:399:
+	  if (value)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#432: FILE: debug/mdb-logic.c:400:
+	  {

CHECK:SPACING: No space is necessary after a cast
#433: FILE: debug/mdb-logic.c:401:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#437: FILE: debug/mdb-logic.c:405:
+	  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: debug/mdb-logic.c:406:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: debug/mdb-logic.c:408:
+       if (stackFrame)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#440: FILE: debug/mdb-logic.c:408:
+       if (stackFrame)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#440: FILE: debug/mdb-logic.c:408:
+       if (stackFrame)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: debug/mdb-logic.c:409:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#442: FILE: debug/mdb-logic.c:410:
+	 switch (*p)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#442: FILE: debug/mdb-logic.c:410:
+	 switch (*p)
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#443: FILE: debug/mdb-logic.c:411:
+	 {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#444: FILE: debug/mdb-logic.c:412:
+	 {
+

WARNING:TABSTOP: Statements should start on a tabstop
#445: FILE: debug/mdb-logic.c:413:
+	  case '\0':

CHECK:SPACING: No space is necessary after a cast
#446: FILE: debug/mdb-logic.c:414:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#448: FILE: debug/mdb-logic.c:416:
+	     return (p);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#448: FILE: debug/mdb-logic.c:416:
+	     return (p);

WARNING:TABSTOP: Statements should start on a tabstop
#450: FILE: debug/mdb-logic.c:418:
+	  case ']':

CHECK:SPACING: No space is necessary after a cast
#451: FILE: debug/mdb-logic.c:419:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#454: FILE: debug/mdb-logic.c:422:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#456: FILE: debug/mdb-logic.c:424:
+	  case '(':

CHECK:SPACING: No space is necessary after a cast
#457: FILE: debug/mdb-logic.c:425:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#460: FILE: debug/mdb-logic.c:428:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#462: FILE: debug/mdb-logic.c:430:
+	  case ')':

CHECK:SPACING: No space is necessary after a cast
#463: FILE: debug/mdb-logic.c:431:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#466: FILE: debug/mdb-logic.c:434:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#468: FILE: debug/mdb-logic.c:436:
+	  case '+':

CHECK:SPACING: No space is necessary after a cast
#469: FILE: debug/mdb-logic.c:437:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#472: FILE: debug/mdb-logic.c:440:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#474: FILE: debug/mdb-logic.c:442:
+	  case '-':

CHECK:SPACING: No space is necessary after a cast
#475: FILE: debug/mdb-logic.c:443:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#478: FILE: debug/mdb-logic.c:446:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#480: FILE: debug/mdb-logic.c:448:
+	  case '*':

CHECK:SPACING: No space is necessary after a cast
#481: FILE: debug/mdb-logic.c:449:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#484: FILE: debug/mdb-logic.c:452:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#486: FILE: debug/mdb-logic.c:454:
+	  case '/':

CHECK:SPACING: No space is necessary after a cast
#487: FILE: debug/mdb-logic.c:455:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#490: FILE: debug/mdb-logic.c:458:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#492: FILE: debug/mdb-logic.c:460:
+	  case '%':

CHECK:SPACING: No space is necessary after a cast
#493: FILE: debug/mdb-logic.c:461:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#496: FILE: debug/mdb-logic.c:464:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#498: FILE: debug/mdb-logic.c:466:
+	  case '~':

CHECK:SPACING: No space is necessary after a cast
#499: FILE: debug/mdb-logic.c:467:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#502: FILE: debug/mdb-logic.c:470:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#504: FILE: debug/mdb-logic.c:472:
+	  case '^':

CHECK:SPACING: No space is necessary after a cast
#505: FILE: debug/mdb-logic.c:473:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#508: FILE: debug/mdb-logic.c:476:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#510: FILE: debug/mdb-logic.c:478:
+	  case '!':

WARNING:TABSTOP: Statements should start on a tabstop
#512: FILE: debug/mdb-logic.c:480:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#512: FILE: debug/mdb-logic.c:480:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#513: FILE: debug/mdb-logic.c:481:
+	     {

CHECK:SPACING: No space is necessary after a cast
#514: FILE: debug/mdb-logic.c:482:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#518: FILE: debug/mdb-logic.c:486:
+	     }

CHECK:SPACING: No space is necessary after a cast
#519: FILE: debug/mdb-logic.c:487:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#521: FILE: debug/mdb-logic.c:489:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#523: FILE: debug/mdb-logic.c:491:
+	  case ' ':   // drop spaces on the floor

WARNING:TABSTOP: Statements should start on a tabstop
#525: FILE: debug/mdb-logic.c:493:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#531: FILE: debug/mdb-logic.c:499:
+	  case 'p':

WARNING:TABSTOP: Statements should start on a tabstop
#532: FILE: debug/mdb-logic.c:500:
+	  case 'P':

WARNING:TABSTOP: Statements should start on a tabstop
#534: FILE: debug/mdb-logic.c:502:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#534: FILE: debug/mdb-logic.c:502:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#535: FILE: debug/mdb-logic.c:503:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#536: FILE: debug/mdb-logic.c:504:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & PF_FLAG;

CHECK:CAMELCASE: Avoid CamelCase: <tSystemFlags>
#537: FILE: debug/mdb-logic.c:505:
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & PF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#538: FILE: debug/mdb-logic.c:506:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#542: FILE: debug/mdb-logic.c:510:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#543: FILE: debug/mdb-logic.c:511:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#545: FILE: debug/mdb-logic.c:513:
+	  case 'z':

WARNING:TABSTOP: Statements should start on a tabstop
#546: FILE: debug/mdb-logic.c:514:
+	  case 'Z':

WARNING:TABSTOP: Statements should start on a tabstop
#548: FILE: debug/mdb-logic.c:516:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#548: FILE: debug/mdb-logic.c:516:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#549: FILE: debug/mdb-logic.c:517:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#550: FILE: debug/mdb-logic.c:518:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & ZF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#552: FILE: debug/mdb-logic.c:520:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#556: FILE: debug/mdb-logic.c:524:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#557: FILE: debug/mdb-logic.c:525:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#559: FILE: debug/mdb-logic.c:527:
+	  case 'i':

WARNING:TABSTOP: Statements should start on a tabstop
#560: FILE: debug/mdb-logic.c:528:
+	  case 'I':

WARNING:TABSTOP: Statements should start on a tabstop
#562: FILE: debug/mdb-logic.c:530:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#562: FILE: debug/mdb-logic.c:530:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#563: FILE: debug/mdb-logic.c:531:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#564: FILE: debug/mdb-logic.c:532:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & IF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#566: FILE: debug/mdb-logic.c:534:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#570: FILE: debug/mdb-logic.c:538:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#571: FILE: debug/mdb-logic.c:539:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#573: FILE: debug/mdb-logic.c:541:
+	  case 'o':

WARNING:TABSTOP: Statements should start on a tabstop
#574: FILE: debug/mdb-logic.c:542:
+	  case 'O':

WARNING:TABSTOP: Statements should start on a tabstop
#576: FILE: debug/mdb-logic.c:544:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#576: FILE: debug/mdb-logic.c:544:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#577: FILE: debug/mdb-logic.c:545:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#578: FILE: debug/mdb-logic.c:546:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & OF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#580: FILE: debug/mdb-logic.c:548:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#584: FILE: debug/mdb-logic.c:552:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#585: FILE: debug/mdb-logic.c:553:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#587: FILE: debug/mdb-logic.c:555:
+	  case 'v':

WARNING:TABSTOP: Statements should start on a tabstop
#588: FILE: debug/mdb-logic.c:556:
+	  case 'V':

WARNING:TABSTOP: Statements should start on a tabstop
#590: FILE: debug/mdb-logic.c:558:
+	     if (*p == 'M' || *p == 'm')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#590: FILE: debug/mdb-logic.c:558:
+	     if (*p == 'M' || *p == 'm')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#591: FILE: debug/mdb-logic.c:559:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#592: FILE: debug/mdb-logic.c:560:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & VM_FLAG;

CHECK:SPACING: No space is necessary after a cast
#594: FILE: debug/mdb-logic.c:562:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#598: FILE: debug/mdb-logic.c:566:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#599: FILE: debug/mdb-logic.c:567:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#601: FILE: debug/mdb-logic.c:569:
+	  case 'x':

WARNING:TABSTOP: Statements should start on a tabstop
#602: FILE: debug/mdb-logic.c:570:
+	  case 'X':

WARNING:TABSTOP: Statements should start on a tabstop
#603: FILE: debug/mdb-logic.c:571:
+	  case '0':

WARNING:TABSTOP: Statements should start on a tabstop
#604: FILE: debug/mdb-logic.c:572:
+	  case '1':

WARNING:TABSTOP: Statements should start on a tabstop
#605: FILE: debug/mdb-logic.c:573:
+	  case '2':

WARNING:TABSTOP: Statements should start on a tabstop
#606: FILE: debug/mdb-logic.c:574:
+	  case '3':

WARNING:TABSTOP: Statements should start on a tabstop
#607: FILE: debug/mdb-logic.c:575:
+	  case '4':

WARNING:TABSTOP: Statements should start on a tabstop
#608: FILE: debug/mdb-logic.c:576:
+	  case '5':

WARNING:TABSTOP: Statements should start on a tabstop
#609: FILE: debug/mdb-logic.c:577:
+	  case '6':

WARNING:TABSTOP: Statements should start on a tabstop
#610: FILE: debug/mdb-logic.c:578:
+	  case '7':

WARNING:TABSTOP: Statements should start on a tabstop
#611: FILE: debug/mdb-logic.c:579:
+	  case '8':

WARNING:TABSTOP: Statements should start on a tabstop
#612: FILE: debug/mdb-logic.c:580:
+	  case '9':

CHECK:SPACING: No space is necessary after a cast
#613: FILE: debug/mdb-logic.c:581:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: debug/mdb-logic.c:584:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#617: FILE: debug/mdb-logic.c:585:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#619: FILE: debug/mdb-logic.c:587:
+	  case 'a':

WARNING:TABSTOP: Statements should start on a tabstop
#620: FILE: debug/mdb-logic.c:588:
+	  case 'A':

WARNING:TABSTOP: Statements should start on a tabstop
#623: FILE: debug/mdb-logic.c:591:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#623: FILE: debug/mdb-logic.c:591:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +
1) == '=' ))
+	     {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#623: FILE: debug/mdb-logic.c:591:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#624: FILE: debug/mdb-logic.c:591:
1) == '=' ))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:TABSTOP: Statements should start on a tabstop
#625: FILE: debug/mdb-logic.c:592:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#626: FILE: debug/mdb-logic.c:593:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & AF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#628: FILE: debug/mdb-logic.c:595:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#633: FILE: debug/mdb-logic.c:600:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#634: FILE: debug/mdb-logic.c:601:
+	     if ((*tmp == 'C' || *tmp == 'c') && (*(tmp + 1) == ' ' || *(tmp +

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#634: FILE: debug/mdb-logic.c:601:
+	     if ((*tmp == 'C' || *tmp == 'c') && (*(tmp + 1) == ' ' || *(tmp +
1) == '=' ))
+	     {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#634: FILE: debug/mdb-logic.c:601:
+	     if ((*tmp == 'C' || *tmp == 'c') && (*(tmp + 1) == ' ' || *(tmp +

WARNING:TABSTOP: Statements should start on a tabstop
#636: FILE: debug/mdb-logic.c:602:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#637: FILE: debug/mdb-logic.c:603:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & AC_FLAG;

CHECK:SPACING: No space is necessary after a cast
#639: FILE: debug/mdb-logic.c:605:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#644: FILE: debug/mdb-logic.c:610:
+	     }

CHECK:SPACING: No space is necessary after a cast
#645: FILE: debug/mdb-logic.c:611:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: debug/mdb-logic.c:614:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#649: FILE: debug/mdb-logic.c:615:
+	     break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#651: FILE: debug/mdb-logic.c:617:
+
+

WARNING:TABSTOP: Statements should start on a tabstop
#652: FILE: debug/mdb-logic.c:618:
+	  case 'b':

WARNING:TABSTOP: Statements should start on a tabstop
#653: FILE: debug/mdb-logic.c:619:
+	  case 'B':

CHECK:SPACING: No space is necessary after a cast
#654: FILE: debug/mdb-logic.c:620:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: debug/mdb-logic.c:623:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#658: FILE: debug/mdb-logic.c:624:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#660: FILE: debug/mdb-logic.c:626:
+	  case 'c':

WARNING:TABSTOP: Statements should start on a tabstop
#661: FILE: debug/mdb-logic.c:627:
+	  case 'C':

WARNING:TABSTOP: Statements should start on a tabstop
#664: FILE: debug/mdb-logic.c:630:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#664: FILE: debug/mdb-logic.c:630:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#665: FILE: debug/mdb-logic.c:631:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#666: FILE: debug/mdb-logic.c:632:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tCS;

CHECK:CAMELCASE: Avoid CamelCase: <tCS>
#667: FILE: debug/mdb-logic.c:633:
+		   TokenValue[TokenCount] = stackFrame->tCS;

CHECK:SPACING: No space is necessary after a cast
#668: FILE: debug/mdb-logic.c:634:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#673: FILE: debug/mdb-logic.c:639:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#674: FILE: debug/mdb-logic.c:640:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#674: FILE: debug/mdb-logic.c:640:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +
1) == '=' ))
+	     {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#674: FILE: debug/mdb-logic.c:640:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +

WARNING:TABSTOP: Statements should start on a tabstop
#676: FILE: debug/mdb-logic.c:641:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#677: FILE: debug/mdb-logic.c:642:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & CF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#679: FILE: debug/mdb-logic.c:644:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#684: FILE: debug/mdb-logic.c:649:
+	     }

CHECK:SPACING: No space is necessary after a cast
#685: FILE: debug/mdb-logic.c:650:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: debug/mdb-logic.c:653:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#689: FILE: debug/mdb-logic.c:654:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#691: FILE: debug/mdb-logic.c:656:
+	  case 'd':

WARNING:TABSTOP: Statements should start on a tabstop
#692: FILE: debug/mdb-logic.c:657:
+	  case 'D':

WARNING:TABSTOP: Statements should start on a tabstop
#695: FILE: debug/mdb-logic.c:660:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#695: FILE: debug/mdb-logic.c:660:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#696: FILE: debug/mdb-logic.c:661:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#697: FILE: debug/mdb-logic.c:662:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tDS;

CHECK:CAMELCASE: Avoid CamelCase: <tDS>
#698: FILE: debug/mdb-logic.c:663:
+		   TokenValue[TokenCount] = stackFrame->tDS;

CHECK:SPACING: No space is necessary after a cast
#699: FILE: debug/mdb-logic.c:664:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#704: FILE: debug/mdb-logic.c:669:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#705: FILE: debug/mdb-logic.c:670:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#705: FILE: debug/mdb-logic.c:670:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +
1) == '=' ))
+	     {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#705: FILE: debug/mdb-logic.c:670:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp +

WARNING:TABSTOP: Statements should start on a tabstop
#707: FILE: debug/mdb-logic.c:671:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#708: FILE: debug/mdb-logic.c:672:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & DF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#710: FILE: debug/mdb-logic.c:674:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#715: FILE: debug/mdb-logic.c:679:
+	     }

CHECK:SPACING: No space is necessary after a cast
#716: FILE: debug/mdb-logic.c:680:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: debug/mdb-logic.c:683:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#720: FILE: debug/mdb-logic.c:684:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#722: FILE: debug/mdb-logic.c:686:
+	  case 'e':

WARNING:TABSTOP: Statements should start on a tabstop
#723: FILE: debug/mdb-logic.c:687:
+	  case 'E':

WARNING:TABSTOP: Statements should start on a tabstop
#726: FILE: debug/mdb-logic.c:690:
+	     if (*tmp == 'A' || *tmp == 'a')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#726: FILE: debug/mdb-logic.c:690:
+	     if (*tmp == 'A' || *tmp == 'a')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#727: FILE: debug/mdb-logic.c:691:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#729: FILE: debug/mdb-logic.c:693:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#729: FILE: debug/mdb-logic.c:693:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#731: FILE: debug/mdb-logic.c:695:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#731: FILE: debug/mdb-logic.c:695:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEAX;

CHECK:CAMELCASE: Avoid CamelCase: <tEAX>
#732: FILE: debug/mdb-logic.c:696:
+		      TokenValue[TokenCount] = stackFrame->tEAX;

CHECK:SPACING: No space is necessary after a cast
#733: FILE: debug/mdb-logic.c:697:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#738: FILE: debug/mdb-logic.c:702:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#740: FILE: debug/mdb-logic.c:704:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: debug/mdb-logic.c:706:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: debug/mdb-logic.c:706:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: debug/mdb-logic.c:706:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: debug/mdb-logic.c:707:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: debug/mdb-logic.c:708:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#746: FILE: debug/mdb-logic.c:710:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#747: FILE: debug/mdb-logic.c:711:
+	     if (*tmp == 'B' || *tmp == 'b')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#747: FILE: debug/mdb-logic.c:711:
+	     if (*tmp == 'B' || *tmp == 'b')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#748: FILE: debug/mdb-logic.c:712:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#750: FILE: debug/mdb-logic.c:714:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#750: FILE: debug/mdb-logic.c:714:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#752: FILE: debug/mdb-logic.c:716:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#752: FILE: debug/mdb-logic.c:716:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEBX;

CHECK:CAMELCASE: Avoid CamelCase: <tEBX>
#753: FILE: debug/mdb-logic.c:717:
+		      TokenValue[TokenCount] = stackFrame->tEBX;

CHECK:SPACING: No space is necessary after a cast
#754: FILE: debug/mdb-logic.c:718:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#759: FILE: debug/mdb-logic.c:723:
+		   break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#761: FILE: debug/mdb-logic.c:725:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#761: FILE: debug/mdb-logic.c:725:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#763: FILE: debug/mdb-logic.c:727:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#763: FILE: debug/mdb-logic.c:727:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEBP;

CHECK:CAMELCASE: Avoid CamelCase: <tEBP>
#764: FILE: debug/mdb-logic.c:728:
+		      TokenValue[TokenCount] = stackFrame->tEBP;

CHECK:SPACING: No space is necessary after a cast
#765: FILE: debug/mdb-logic.c:729:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#770: FILE: debug/mdb-logic.c:734:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#772: FILE: debug/mdb-logic.c:736:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: debug/mdb-logic.c:738:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: debug/mdb-logic.c:738:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: debug/mdb-logic.c:738:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: debug/mdb-logic.c:739:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: debug/mdb-logic.c:740:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#778: FILE: debug/mdb-logic.c:742:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#779: FILE: debug/mdb-logic.c:743:
+	     if (*tmp == 'C' || *tmp == 'c')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#779: FILE: debug/mdb-logic.c:743:
+	     if (*tmp == 'C' || *tmp == 'c')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#780: FILE: debug/mdb-logic.c:744:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#782: FILE: debug/mdb-logic.c:746:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#782: FILE: debug/mdb-logic.c:746:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#784: FILE: debug/mdb-logic.c:748:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#784: FILE: debug/mdb-logic.c:748:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tECX;

CHECK:CAMELCASE: Avoid CamelCase: <tECX>
#785: FILE: debug/mdb-logic.c:749:
+		      TokenValue[TokenCount] = stackFrame->tECX;

CHECK:SPACING: No space is necessary after a cast
#786: FILE: debug/mdb-logic.c:750:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#791: FILE: debug/mdb-logic.c:755:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#793: FILE: debug/mdb-logic.c:757:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: debug/mdb-logic.c:759:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: debug/mdb-logic.c:759:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: debug/mdb-logic.c:759:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: debug/mdb-logic.c:760:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: debug/mdb-logic.c:761:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#799: FILE: debug/mdb-logic.c:763:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#800: FILE: debug/mdb-logic.c:764:
+	     if (*tmp == 'D' || *tmp == 'd')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#800: FILE: debug/mdb-logic.c:764:
+	     if (*tmp == 'D' || *tmp == 'd')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#801: FILE: debug/mdb-logic.c:765:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#803: FILE: debug/mdb-logic.c:767:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#803: FILE: debug/mdb-logic.c:767:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#805: FILE: debug/mdb-logic.c:769:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#805: FILE: debug/mdb-logic.c:769:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEDX;

CHECK:CAMELCASE: Avoid CamelCase: <tEDX>
#806: FILE: debug/mdb-logic.c:770:
+		      TokenValue[TokenCount] = stackFrame->tEDX;

CHECK:SPACING: No space is necessary after a cast
#807: FILE: debug/mdb-logic.c:771:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#812: FILE: debug/mdb-logic.c:776:
+		   break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#814: FILE: debug/mdb-logic.c:778:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#814: FILE: debug/mdb-logic.c:778:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#816: FILE: debug/mdb-logic.c:780:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#816: FILE: debug/mdb-logic.c:780:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEDI;

CHECK:CAMELCASE: Avoid CamelCase: <tEDI>
#817: FILE: debug/mdb-logic.c:781:
+		      TokenValue[TokenCount] = stackFrame->tEDI;

CHECK:SPACING: No space is necessary after a cast
#818: FILE: debug/mdb-logic.c:782:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#823: FILE: debug/mdb-logic.c:787:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#825: FILE: debug/mdb-logic.c:789:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: debug/mdb-logic.c:791:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: debug/mdb-logic.c:791:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: debug/mdb-logic.c:791:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: debug/mdb-logic.c:792:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: debug/mdb-logic.c:793:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#831: FILE: debug/mdb-logic.c:795:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#832: FILE: debug/mdb-logic.c:796:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#832: FILE: debug/mdb-logic.c:796:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#833: FILE: debug/mdb-logic.c:797:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#835: FILE: debug/mdb-logic.c:799:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#835: FILE: debug/mdb-logic.c:799:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#837: FILE: debug/mdb-logic.c:801:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#837: FILE: debug/mdb-logic.c:801:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tESP;

CHECK:CAMELCASE: Avoid CamelCase: <tESP>
#838: FILE: debug/mdb-logic.c:802:
+		      TokenValue[TokenCount] = stackFrame->tESP;

CHECK:SPACING: No space is necessary after a cast
#839: FILE: debug/mdb-logic.c:803:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#844: FILE: debug/mdb-logic.c:808:
+		   break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#846: FILE: debug/mdb-logic.c:810:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#846: FILE: debug/mdb-logic.c:810:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#848: FILE: debug/mdb-logic.c:812:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#848: FILE: debug/mdb-logic.c:812:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tESI;

CHECK:CAMELCASE: Avoid CamelCase: <tESI>
#849: FILE: debug/mdb-logic.c:813:
+		      TokenValue[TokenCount] = stackFrame->tESI;

CHECK:SPACING: No space is necessary after a cast
#850: FILE: debug/mdb-logic.c:814:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#855: FILE: debug/mdb-logic.c:819:
+		   break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#857: FILE: debug/mdb-logic.c:821:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tES;

CHECK:CAMELCASE: Avoid CamelCase: <tES>
#858: FILE: debug/mdb-logic.c:822:
+		   TokenValue[TokenCount] = stackFrame->tES;

CHECK:SPACING: No space is necessary after a cast
#859: FILE: debug/mdb-logic.c:823:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#864: FILE: debug/mdb-logic.c:828:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#865: FILE: debug/mdb-logic.c:829:
+	     if (*tmp == 'I' || *tmp == 'i')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#865: FILE: debug/mdb-logic.c:829:
+	     if (*tmp == 'I' || *tmp == 'i')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#866: FILE: debug/mdb-logic.c:830:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#868: FILE: debug/mdb-logic.c:832:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#868: FILE: debug/mdb-logic.c:832:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#870: FILE: debug/mdb-logic.c:834:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#870: FILE: debug/mdb-logic.c:834:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEIP;

CHECK:CAMELCASE: Avoid CamelCase: <tEIP>
#871: FILE: debug/mdb-logic.c:835:
+		      TokenValue[TokenCount] = stackFrame->tEIP;

CHECK:SPACING: No space is necessary after a cast
#872: FILE: debug/mdb-logic.c:836:
+		   TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#877: FILE: debug/mdb-logic.c:841:
+		   break;

WARNING:TABSTOP: Statements should start on a tabstop
#879: FILE: debug/mdb-logic.c:843:
+	     }

CHECK:SPACING: No space is necessary after a cast
#880: FILE: debug/mdb-logic.c:844:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: debug/mdb-logic.c:847:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#884: FILE: debug/mdb-logic.c:848:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#886: FILE: debug/mdb-logic.c:850:
+	  case 'f':

WARNING:TABSTOP: Statements should start on a tabstop
#887: FILE: debug/mdb-logic.c:851:
+	  case 'F':

WARNING:TABSTOP: Statements should start on a tabstop
#890: FILE: debug/mdb-logic.c:854:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#890: FILE: debug/mdb-logic.c:854:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#891: FILE: debug/mdb-logic.c:855:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#892: FILE: debug/mdb-logic.c:856:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tFS;

CHECK:CAMELCASE: Avoid CamelCase: <tFS>
#893: FILE: debug/mdb-logic.c:857:
+		   TokenValue[TokenCount] = stackFrame->tFS;

CHECK:SPACING: No space is necessary after a cast
#894: FILE: debug/mdb-logic.c:858:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#899: FILE: debug/mdb-logic.c:863:
+	     }

CHECK:SPACING: No space is necessary after a cast
#900: FILE: debug/mdb-logic.c:864:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: debug/mdb-logic.c:867:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#904: FILE: debug/mdb-logic.c:868:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#906: FILE: debug/mdb-logic.c:870:
+	  case 'g':

WARNING:TABSTOP: Statements should start on a tabstop
#907: FILE: debug/mdb-logic.c:871:
+	  case 'G':   // GS:

WARNING:TABSTOP: Statements should start on a tabstop
#909: FILE: debug/mdb-logic.c:873:
+	     if (*p == 'S' || *p == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#909: FILE: debug/mdb-logic.c:873:
+	     if (*p == 'S' || *p == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#910: FILE: debug/mdb-logic.c:874:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#911: FILE: debug/mdb-logic.c:875:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tGS;

CHECK:CAMELCASE: Avoid CamelCase: <tGS>
#912: FILE: debug/mdb-logic.c:876:
+		   TokenValue[TokenCount] = stackFrame->tGS;

CHECK:SPACING: No space is necessary after a cast
#913: FILE: debug/mdb-logic.c:877:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#917: FILE: debug/mdb-logic.c:881:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#918: FILE: debug/mdb-logic.c:882:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#920: FILE: debug/mdb-logic.c:884:
+	  case 's':

WARNING:TABSTOP: Statements should start on a tabstop
#921: FILE: debug/mdb-logic.c:885:
+	  case 'S':

WARNING:TABSTOP: Statements should start on a tabstop
#923: FILE: debug/mdb-logic.c:887:
+	     if (*p == 'S' || *p == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#923: FILE: debug/mdb-logic.c:887:
+	     if (*p == 'S' || *p == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#924: FILE: debug/mdb-logic.c:888:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#925: FILE: debug/mdb-logic.c:889:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSS;

CHECK:CAMELCASE: Avoid CamelCase: <tSS>
#926: FILE: debug/mdb-logic.c:890:
+		   TokenValue[TokenCount] = stackFrame->tSS;

CHECK:SPACING: No space is necessary after a cast
#927: FILE: debug/mdb-logic.c:891:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#931: FILE: debug/mdb-logic.c:895:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#932: FILE: debug/mdb-logic.c:896:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#932: FILE: debug/mdb-logic.c:896:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#933: FILE: debug/mdb-logic.c:897:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#934: FILE: debug/mdb-logic.c:898:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & SF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#936: FILE: debug/mdb-logic.c:900:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#940: FILE: debug/mdb-logic.c:904:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#941: FILE: debug/mdb-logic.c:905:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#943: FILE: debug/mdb-logic.c:907:
+	  case '[':

CHECK:SPACING: No space is necessary after a cast
#944: FILE: debug/mdb-logic.c:908:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#947: FILE: debug/mdb-logic.c:911:
+	     if (*p == 'D' || *p == 'd')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#947: FILE: debug/mdb-logic.c:911:
+	     if (*p == 'D' || *p == 'd')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#948: FILE: debug/mdb-logic.c:912:
+	     {

CHECK:SPACING: No space is necessary after a cast
#949: FILE: debug/mdb-logic.c:913:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#953: FILE: debug/mdb-logic.c:917:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#954: FILE: debug/mdb-logic.c:918:
+	     if (*p == 'W' || *p == 'w')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#954: FILE: debug/mdb-logic.c:918:
+	     if (*p == 'W' || *p == 'w')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#955: FILE: debug/mdb-logic.c:919:
+	     {

CHECK:SPACING: No space is necessary after a cast
#956: FILE: debug/mdb-logic.c:920:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#960: FILE: debug/mdb-logic.c:924:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#961: FILE: debug/mdb-logic.c:925:
+	     if (*p == 'B' || *p == 'b')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#961: FILE: debug/mdb-logic.c:925:
+	     if (*p == 'B' || *p == 'b')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#962: FILE: debug/mdb-logic.c:926:
+	     {

CHECK:SPACING: No space is necessary after a cast
#963: FILE: debug/mdb-logic.c:927:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#967: FILE: debug/mdb-logic.c:931:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#968: FILE: debug/mdb-logic.c:932:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#970: FILE: debug/mdb-logic.c:934:
+	  case '=':

WARNING:TABSTOP: Statements should start on a tabstop
#972: FILE: debug/mdb-logic.c:936:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#972: FILE: debug/mdb-logic.c:936:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#973: FILE: debug/mdb-logic.c:937:
+	     {

CHECK:SPACING: No space is necessary after a cast
#974: FILE: debug/mdb-logic.c:938:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#978: FILE: debug/mdb-logic.c:942:
+	     }

CHECK:SPACING: No space is necessary after a cast
#979: FILE: debug/mdb-logic.c:943:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#981: FILE: debug/mdb-logic.c:945:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#983: FILE: debug/mdb-logic.c:947:
+	  case '<':

WARNING:TABSTOP: Statements should start on a tabstop
#985: FILE: debug/mdb-logic.c:949:
+	     if (*p == '<')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#985: FILE: debug/mdb-logic.c:949:
+	     if (*p == '<')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#986: FILE: debug/mdb-logic.c:950:
+	     {

CHECK:SPACING: No space is necessary after a cast
#987: FILE: debug/mdb-logic.c:951:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#991: FILE: debug/mdb-logic.c:955:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#992: FILE: debug/mdb-logic.c:956:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#992: FILE: debug/mdb-logic.c:956:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#993: FILE: debug/mdb-logic.c:957:
+	     {

CHECK:SPACING: No space is necessary after a cast
#994: FILE: debug/mdb-logic.c:958:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#998: FILE: debug/mdb-logic.c:962:
+	     }

CHECK:SPACING: No space is necessary after a cast
#999: FILE: debug/mdb-logic.c:963:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1001: FILE: debug/mdb-logic.c:965:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1003: FILE: debug/mdb-logic.c:967:
+	  case '>':

WARNING:TABSTOP: Statements should start on a tabstop
#1005: FILE: debug/mdb-logic.c:969:
+	     if (*p == '>')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1005: FILE: debug/mdb-logic.c:969:
+	     if (*p == '>')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1006: FILE: debug/mdb-logic.c:970:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1007: FILE: debug/mdb-logic.c:971:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1011: FILE: debug/mdb-logic.c:975:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1012: FILE: debug/mdb-logic.c:976:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1012: FILE: debug/mdb-logic.c:976:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1013: FILE: debug/mdb-logic.c:977:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: debug/mdb-logic.c:978:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1018: FILE: debug/mdb-logic.c:982:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1019: FILE: debug/mdb-logic.c:983:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1021: FILE: debug/mdb-logic.c:985:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1023: FILE: debug/mdb-logic.c:987:
+	  case '|':

WARNING:TABSTOP: Statements should start on a tabstop
#1025: FILE: debug/mdb-logic.c:989:
+	     if (*p == '|')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1025: FILE: debug/mdb-logic.c:989:
+	     if (*p == '|')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1026: FILE: debug/mdb-logic.c:990:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1027: FILE: debug/mdb-logic.c:991:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1031: FILE: debug/mdb-logic.c:995:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: debug/mdb-logic.c:996:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1034: FILE: debug/mdb-logic.c:998:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1036: FILE: debug/mdb-logic.c:1000:
+	  case '&':

WARNING:TABSTOP: Statements should start on a tabstop
#1038: FILE: debug/mdb-logic.c:1002:
+	     if (*p == '&')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1038: FILE: debug/mdb-logic.c:1002:
+	     if (*p == '&')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1039: FILE: debug/mdb-logic.c:1003:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1040: FILE: debug/mdb-logic.c:1004:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1044: FILE: debug/mdb-logic.c:1008:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1045: FILE: debug/mdb-logic.c:1009:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1047: FILE: debug/mdb-logic.c:1011:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1049: FILE: debug/mdb-logic.c:1013:
+	  default: // if we get a default, drop the character on the floor

WARNING:TABSTOP: Statements should start on a tabstop
#1051: FILE: debug/mdb-logic.c:1015:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1053: FILE: debug/mdb-logic.c:1017:
+	 }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1053: FILE: debug/mdb-logic.c:1017:
+
+	 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: debug/mdb-logic.c:1018:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: debug/mdb-logic.c:1019:
+       else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1055: FILE: debug/mdb-logic.c:1019:
+       else
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#1055: FILE: debug/mdb-logic.c:1019:
+       else
+       {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1055: FILE: debug/mdb-logic.c:1019:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: debug/mdb-logic.c:1020:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#1057: FILE: debug/mdb-logic.c:1021:
+	 switch (*p)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1057: FILE: debug/mdb-logic.c:1021:
+	 switch (*p)
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1058: FILE: debug/mdb-logic.c:1022:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1059: FILE: debug/mdb-logic.c:1023:
+	  case '\0':

CHECK:SPACING: No space is necessary after a cast
#1060: FILE: debug/mdb-logic.c:1024:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1062: FILE: debug/mdb-logic.c:1026:
+	     return (p);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1062: FILE: debug/mdb-logic.c:1026:
+	     return (p);

WARNING:TABSTOP: Statements should start on a tabstop
#1064: FILE: debug/mdb-logic.c:1028:
+	  case ']':

CHECK:SPACING: No space is necessary after a cast
#1065: FILE: debug/mdb-logic.c:1029:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1068: FILE: debug/mdb-logic.c:1032:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1070: FILE: debug/mdb-logic.c:1034:
+	  case '(':

CHECK:SPACING: No space is necessary after a cast
#1071: FILE: debug/mdb-logic.c:1035:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1074: FILE: debug/mdb-logic.c:1038:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1076: FILE: debug/mdb-logic.c:1040:
+	  case ')':

CHECK:SPACING: No space is necessary after a cast
#1077: FILE: debug/mdb-logic.c:1041:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1080: FILE: debug/mdb-logic.c:1044:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1082: FILE: debug/mdb-logic.c:1046:
+	  case '+':

CHECK:SPACING: No space is necessary after a cast
#1083: FILE: debug/mdb-logic.c:1047:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1086: FILE: debug/mdb-logic.c:1050:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1088: FILE: debug/mdb-logic.c:1052:
+	  case '-':

CHECK:SPACING: No space is necessary after a cast
#1089: FILE: debug/mdb-logic.c:1053:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1092: FILE: debug/mdb-logic.c:1056:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1094: FILE: debug/mdb-logic.c:1058:
+	  case '*':

CHECK:SPACING: No space is necessary after a cast
#1095: FILE: debug/mdb-logic.c:1059:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1098: FILE: debug/mdb-logic.c:1062:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1100: FILE: debug/mdb-logic.c:1064:
+	  case '/':

CHECK:SPACING: No space is necessary after a cast
#1101: FILE: debug/mdb-logic.c:1065:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1104: FILE: debug/mdb-logic.c:1068:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1106: FILE: debug/mdb-logic.c:1070:
+	  case '%':

CHECK:SPACING: No space is necessary after a cast
#1107: FILE: debug/mdb-logic.c:1071:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1110: FILE: debug/mdb-logic.c:1074:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1112: FILE: debug/mdb-logic.c:1076:
+	  case '~':

CHECK:SPACING: No space is necessary after a cast
#1113: FILE: debug/mdb-logic.c:1077:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1116: FILE: debug/mdb-logic.c:1080:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1118: FILE: debug/mdb-logic.c:1082:
+	  case '^':

CHECK:SPACING: No space is necessary after a cast
#1119: FILE: debug/mdb-logic.c:1083:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1122: FILE: debug/mdb-logic.c:1086:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1124: FILE: debug/mdb-logic.c:1088:
+	  case '!':

WARNING:TABSTOP: Statements should start on a tabstop
#1126: FILE: debug/mdb-logic.c:1090:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1126: FILE: debug/mdb-logic.c:1090:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1127: FILE: debug/mdb-logic.c:1091:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1128: FILE: debug/mdb-logic.c:1092:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1132: FILE: debug/mdb-logic.c:1096:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1133: FILE: debug/mdb-logic.c:1097:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1135: FILE: debug/mdb-logic.c:1099:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1137: FILE: debug/mdb-logic.c:1101:
+	  case ' ':   // drop spaces on the floor

WARNING:TABSTOP: Statements should start on a tabstop
#1139: FILE: debug/mdb-logic.c:1103:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1145: FILE: debug/mdb-logic.c:1109:
+	  case 'x':

WARNING:TABSTOP: Statements should start on a tabstop
#1146: FILE: debug/mdb-logic.c:1110:
+	  case 'X':

WARNING:TABSTOP: Statements should start on a tabstop
#1147: FILE: debug/mdb-logic.c:1111:
+	  case '0':

WARNING:TABSTOP: Statements should start on a tabstop
#1148: FILE: debug/mdb-logic.c:1112:
+	  case '1':

WARNING:TABSTOP: Statements should start on a tabstop
#1149: FILE: debug/mdb-logic.c:1113:
+	  case '2':

WARNING:TABSTOP: Statements should start on a tabstop
#1150: FILE: debug/mdb-logic.c:1114:
+	  case '3':

WARNING:TABSTOP: Statements should start on a tabstop
#1151: FILE: debug/mdb-logic.c:1115:
+	  case '4':

WARNING:TABSTOP: Statements should start on a tabstop
#1152: FILE: debug/mdb-logic.c:1116:
+	  case '5':

WARNING:TABSTOP: Statements should start on a tabstop
#1153: FILE: debug/mdb-logic.c:1117:
+	  case '6':

WARNING:TABSTOP: Statements should start on a tabstop
#1154: FILE: debug/mdb-logic.c:1118:
+	  case '7':

WARNING:TABSTOP: Statements should start on a tabstop
#1155: FILE: debug/mdb-logic.c:1119:
+	  case '8':

WARNING:TABSTOP: Statements should start on a tabstop
#1156: FILE: debug/mdb-logic.c:1120:
+	  case '9':

WARNING:TABSTOP: Statements should start on a tabstop
#1157: FILE: debug/mdb-logic.c:1121:
+	  case 'a':

WARNING:TABSTOP: Statements should start on a tabstop
#1158: FILE: debug/mdb-logic.c:1122:
+	  case 'A':

WARNING:TABSTOP: Statements should start on a tabstop
#1159: FILE: debug/mdb-logic.c:1123:
+	  case 'b':

WARNING:TABSTOP: Statements should start on a tabstop
#1160: FILE: debug/mdb-logic.c:1124:
+	  case 'B':

WARNING:TABSTOP: Statements should start on a tabstop
#1161: FILE: debug/mdb-logic.c:1125:
+	  case 'c':

WARNING:TABSTOP: Statements should start on a tabstop
#1162: FILE: debug/mdb-logic.c:1126:
+	  case 'C':

WARNING:TABSTOP: Statements should start on a tabstop
#1163: FILE: debug/mdb-logic.c:1127:
+	  case 'd':

WARNING:TABSTOP: Statements should start on a tabstop
#1164: FILE: debug/mdb-logic.c:1128:
+	  case 'D':

WARNING:TABSTOP: Statements should start on a tabstop
#1165: FILE: debug/mdb-logic.c:1129:
+	  case 'e':

WARNING:TABSTOP: Statements should start on a tabstop
#1166: FILE: debug/mdb-logic.c:1130:
+	  case 'E':

WARNING:TABSTOP: Statements should start on a tabstop
#1167: FILE: debug/mdb-logic.c:1131:
+	  case 'f':

WARNING:TABSTOP: Statements should start on a tabstop
#1168: FILE: debug/mdb-logic.c:1132:
+	  case 'F':

CHECK:SPACING: No space is necessary after a cast
#1169: FILE: debug/mdb-logic.c:1133:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1172: FILE: debug/mdb-logic.c:1136:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#1173: FILE: debug/mdb-logic.c:1137:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1175: FILE: debug/mdb-logic.c:1139:
+	  case '[':

CHECK:SPACING: No space is necessary after a cast
#1176: FILE: debug/mdb-logic.c:1140:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1179: FILE: debug/mdb-logic.c:1143:
+	     if (*p == 'D' || *p == 'd')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1179: FILE: debug/mdb-logic.c:1143:
+	     if (*p == 'D' || *p == 'd')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1180: FILE: debug/mdb-logic.c:1144:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1181: FILE: debug/mdb-logic.c:1145:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1185: FILE: debug/mdb-logic.c:1149:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1186: FILE: debug/mdb-logic.c:1150:
+	     if (*p == 'W' || *p == 'w')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1186: FILE: debug/mdb-logic.c:1150:
+	     if (*p == 'W' || *p == 'w')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1187: FILE: debug/mdb-logic.c:1151:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1188: FILE: debug/mdb-logic.c:1152:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1192: FILE: debug/mdb-logic.c:1156:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1193: FILE: debug/mdb-logic.c:1157:
+	     if (*p == 'B' || *p == 'b')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1193: FILE: debug/mdb-logic.c:1157:
+	     if (*p == 'B' || *p == 'b')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1194: FILE: debug/mdb-logic.c:1158:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1195: FILE: debug/mdb-logic.c:1159:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1199: FILE: debug/mdb-logic.c:1163:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1200: FILE: debug/mdb-logic.c:1164:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1202: FILE: debug/mdb-logic.c:1166:
+	  case '=':

WARNING:TABSTOP: Statements should start on a tabstop
#1204: FILE: debug/mdb-logic.c:1168:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1204: FILE: debug/mdb-logic.c:1168:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1205: FILE: debug/mdb-logic.c:1169:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1206: FILE: debug/mdb-logic.c:1170:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1210: FILE: debug/mdb-logic.c:1174:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1211: FILE: debug/mdb-logic.c:1175:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1213: FILE: debug/mdb-logic.c:1177:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1215: FILE: debug/mdb-logic.c:1179:
+	  case '<':

WARNING:TABSTOP: Statements should start on a tabstop
#1217: FILE: debug/mdb-logic.c:1181:
+	     if (*p == '<')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1217: FILE: debug/mdb-logic.c:1181:
+	     if (*p == '<')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1218: FILE: debug/mdb-logic.c:1182:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1219: FILE: debug/mdb-logic.c:1183:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1223: FILE: debug/mdb-logic.c:1187:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1224: FILE: debug/mdb-logic.c:1188:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1224: FILE: debug/mdb-logic.c:1188:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1225: FILE: debug/mdb-logic.c:1189:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1226: FILE: debug/mdb-logic.c:1190:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1230: FILE: debug/mdb-logic.c:1194:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1231: FILE: debug/mdb-logic.c:1195:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1233: FILE: debug/mdb-logic.c:1197:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1235: FILE: debug/mdb-logic.c:1199:
+	  case '>':

WARNING:TABSTOP: Statements should start on a tabstop
#1237: FILE: debug/mdb-logic.c:1201:
+	     if (*p == '>')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1237: FILE: debug/mdb-logic.c:1201:
+	     if (*p == '>')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1238: FILE: debug/mdb-logic.c:1202:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1239: FILE: debug/mdb-logic.c:1203:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1243: FILE: debug/mdb-logic.c:1207:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1244: FILE: debug/mdb-logic.c:1208:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1244: FILE: debug/mdb-logic.c:1208:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1245: FILE: debug/mdb-logic.c:1209:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1246: FILE: debug/mdb-logic.c:1210:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1250: FILE: debug/mdb-logic.c:1214:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1251: FILE: debug/mdb-logic.c:1215:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1253: FILE: debug/mdb-logic.c:1217:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1255: FILE: debug/mdb-logic.c:1219:
+	  case '|':

WARNING:TABSTOP: Statements should start on a tabstop
#1257: FILE: debug/mdb-logic.c:1221:
+	     if (*p == '|')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1257: FILE: debug/mdb-logic.c:1221:
+	     if (*p == '|')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1258: FILE: debug/mdb-logic.c:1222:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1259: FILE: debug/mdb-logic.c:1223:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1263: FILE: debug/mdb-logic.c:1227:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1264: FILE: debug/mdb-logic.c:1228:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1266: FILE: debug/mdb-logic.c:1230:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1268: FILE: debug/mdb-logic.c:1232:
+	  case '&':

WARNING:TABSTOP: Statements should start on a tabstop
#1270: FILE: debug/mdb-logic.c:1234:
+	     if (*p == '&')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1270: FILE: debug/mdb-logic.c:1234:
+	     if (*p == '&')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1271: FILE: debug/mdb-logic.c:1235:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1272: FILE: debug/mdb-logic.c:1236:
+		TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1276: FILE: debug/mdb-logic.c:1240:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1277: FILE: debug/mdb-logic.c:1241:
+	     TokenIndex[TokenCount] = (ULONG) ((ULONG) p - (ULONG) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1279: FILE: debug/mdb-logic.c:1243:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1281: FILE: debug/mdb-logic.c:1245:
+	  default: // if we get a default, drop the character on the floor

WARNING:TABSTOP: Statements should start on a tabstop
#1283: FILE: debug/mdb-logic.c:1247:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1285: FILE: debug/mdb-logic.c:1249:
+	 }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1285: FILE: debug/mdb-logic.c:1249:
+
+	 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: debug/mdb-logic.c:1250:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: debug/mdb-logic.c:1251:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: debug/mdb-logic.c:1252:
+    return p;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1290: FILE: debug/mdb-logic.c:1254:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <displayExpressionHelp>
#1292: FILE: debug/mdb-logic.c:1256:
+void displayExpressionHelp(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1294: FILE: debug/mdb-logic.c:1258:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1295: FILE: debug/mdb-logic.c:1259:
+       if (DBGPrint("Arithmetic Operators\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1295: FILE: debug/mdb-logic.c:1259:
+       if (DBGPrint("Arithmetic Operators\n")) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <DBGPrint>
#1295: FILE: debug/mdb-logic.c:1259:
+       if (DBGPrint("Arithmetic Operators\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: debug/mdb-logic.c:1260:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1296: FILE: debug/mdb-logic.c:1260:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: debug/mdb-logic.c:1261:
+       if (DBGPrint("+   add\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1297: FILE: debug/mdb-logic.c:1261:
+       if (DBGPrint("+   add\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: debug/mdb-logic.c:1262:
+       if (DBGPrint("-   subtract\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1298: FILE: debug/mdb-logic.c:1262:
+       if (DBGPrint("-   subtract\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: debug/mdb-logic.c:1263:
+       if (DBGPrint("*   multiply\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1299: FILE: debug/mdb-logic.c:1263:
+       if (DBGPrint("*   multiply\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: debug/mdb-logic.c:1264:
+       if (DBGPrint("/   divide\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1300: FILE: debug/mdb-logic.c:1264:
+       if (DBGPrint("/   divide\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: debug/mdb-logic.c:1265:
+       if (DBGPrint("<<  bit shift left\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1301: FILE: debug/mdb-logic.c:1265:
+       if (DBGPrint("<<  bit shift left\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: debug/mdb-logic.c:1266:
+       if (DBGPrint(">>  bit shift right\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1302: FILE: debug/mdb-logic.c:1266:
+       if (DBGPrint(">>  bit shift right\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: debug/mdb-logic.c:1267:
+       if (DBGPrint("|   OR operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1303: FILE: debug/mdb-logic.c:1267:
+       if (DBGPrint("|   OR operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: debug/mdb-logic.c:1268:
+       if (DBGPrint("&   AND operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1304: FILE: debug/mdb-logic.c:1268:
+       if (DBGPrint("&   AND operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: debug/mdb-logic.c:1269:
+       if (DBGPrint("^   XOR operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1305: FILE: debug/mdb-logic.c:1269:
+       if (DBGPrint("^   XOR operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: debug/mdb-logic.c:1270:
+       if (DBGPrint("~   NEG operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1306: FILE: debug/mdb-logic.c:1270:
+       if (DBGPrint("~   NEG operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: debug/mdb-logic.c:1271:
+       if (DBGPrint("%%   MODULO operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1307: FILE: debug/mdb-logic.c:1271:
+       if (DBGPrint("%%   MODULO operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1308: FILE: debug/mdb-logic.c:1272:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1308: FILE: debug/mdb-logic.c:1272:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: debug/mdb-logic.c:1273:
+       if (DBGPrint("Example 1:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1309: FILE: debug/mdb-logic.c:1273:
+       if (DBGPrint("Example 1:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: debug/mdb-logic.c:1274:
+       if (DBGPrint("(0)> .e (100 + 100)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1310: FILE: debug/mdb-logic.c:1274:
+       if (DBGPrint("(0)> .e (100 + 100)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: debug/mdb-logic.c:1275:
+       if (DBGPrint("(0)> result = 0x200 (512)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1311: FILE: debug/mdb-logic.c:1275:
+       if (DBGPrint("(0)> result = 0x200 (512)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: debug/mdb-logic.c:1276:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1312: FILE: debug/mdb-logic.c:1276:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: debug/mdb-logic.c:1277:
+       if (DBGPrint("Example 2:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1313: FILE: debug/mdb-logic.c:1277:
+       if (DBGPrint("Example 2:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: debug/mdb-logic.c:1278:
+       if (DBGPrint("(0)> .e (1 << 20)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1314: FILE: debug/mdb-logic.c:1278:
+       if (DBGPrint("(0)> .e (1 << 20)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: debug/mdb-logic.c:1279:
+       if (DBGPrint("(0)> result = 0x00100000 (1,024,000)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1315: FILE: debug/mdb-logic.c:1279:
+       if (DBGPrint("(0)> result = 0x00100000 (1,024,000)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: debug/mdb-logic.c:1280:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1316: FILE: debug/mdb-logic.c:1280:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: debug/mdb-logic.c:1281:
+       if (DBGPrint("Example 3:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1317: FILE: debug/mdb-logic.c:1281:
+       if (DBGPrint("Example 3:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: debug/mdb-logic.c:1282:
+       if (DBGPrint("(0)> .e (FEF023 & 100F)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1318: FILE: debug/mdb-logic.c:1282:
+       if (DBGPrint("(0)> .e (FEF023 & 100F)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: debug/mdb-logic.c:1283:
+       if (DBGPrint("(0)> result = 0x1003 (4099)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1319: FILE: debug/mdb-logic.c:1283:
+       if (DBGPrint("(0)> result = 0x1003 (4099)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: debug/mdb-logic.c:1284:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1320: FILE: debug/mdb-logic.c:1284:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: debug/mdb-logic.c:1285:
+       if (DBGPrint("Boolean Operators (Conditional Breakpoint)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1321: FILE: debug/mdb-logic.c:1285:
+       if (DBGPrint("Boolean Operators (Conditional Breakpoint)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: debug/mdb-logic.c:1286:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1322: FILE: debug/mdb-logic.c:1286:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: debug/mdb-logic.c:1287:
+       if (DBGPrint("==      is equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1323: FILE: debug/mdb-logic.c:1287:
+       if (DBGPrint("==      is equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: debug/mdb-logic.c:1288:
+       if (DBGPrint("!=      is not equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1324: FILE: debug/mdb-logic.c:1288:
+       if (DBGPrint("!=      is not equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: debug/mdb-logic.c:1289:
+       if (DBGPrint("!<expr> is not\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1325: FILE: debug/mdb-logic.c:1289:
+       if (DBGPrint("!<expr> is not\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: debug/mdb-logic.c:1290:
+       if (DBGPrint(">       is greater than\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1326: FILE: debug/mdb-logic.c:1290:
+       if (DBGPrint(">       is greater than\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: debug/mdb-logic.c:1291:
+       if (DBGPrint("<       is less than\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1327: FILE: debug/mdb-logic.c:1291:
+       if (DBGPrint("<       is less than\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: debug/mdb-logic.c:1292:
+       if (DBGPrint(">=      is greater than or equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1328: FILE: debug/mdb-logic.c:1292:
+       if (DBGPrint(">=      is greater than or equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: debug/mdb-logic.c:1293:
+       if (DBGPrint("<=      if less than or equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1329: FILE: debug/mdb-logic.c:1293:
+       if (DBGPrint("<=      if less than or equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: debug/mdb-logic.c:1294:
+       if (DBGPrint("||      logical OR operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1330: FILE: debug/mdb-logic.c:1294:
+       if (DBGPrint("||      logical OR operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: debug/mdb-logic.c:1295:
+       if (DBGPrint("&&      logical AND operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1331: FILE: debug/mdb-logic.c:1295:
+       if (DBGPrint("&&      logical AND operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: debug/mdb-logic.c:1296:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1332: FILE: debug/mdb-logic.c:1296:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: debug/mdb-logic.c:1297:
+       if (DBGPrint("all breakpoint conditions must be enclosed in$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1333: FILE: debug/mdb-logic.c:1297:
+       if (DBGPrint("all breakpoint conditions must be enclosed in
brackets () to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1335: FILE: debug/mdb-logic.c:1298:
+       if (DBGPrint("evaluate correctly\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: debug/mdb-logic.c:1299:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: debug/mdb-logic.c:1300:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1337: FILE: debug/mdb-logic.c:1300:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;
                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Example>
#1337: FILE: debug/mdb-logic.c:1300:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;

CHECK:CAMELCASE: Avoid CamelCase: <Execute>
#1337: FILE: debug/mdb-logic.c:1300:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;

CHECK:CAMELCASE: Avoid CamelCase: <Breakpoint>
#1337: FILE: debug/mdb-logic.c:1300:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: debug/mdb-logic.c:1301:
+       if (DBGPrint("(0)> b 37000 (EAX == 20 && EBX <= 4000)\n")) return;$

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#1338: FILE: debug/mdb-logic.c:1301:
+       if (DBGPrint("(0)> b 37000 (EAX == 20 && EBX <= 4000)\n")) return;
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: debug/mdb-logic.c:1302:
+       if (DBGPrint("breakpoint will activate if condition is true$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: debug/mdb-logic.c:1303:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1341: FILE: debug/mdb-logic.c:1303:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: debug/mdb-logic.c:1304:
+       if (DBGPrint("Example 2 (IO Breakpoint):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1342: FILE: debug/mdb-logic.c:1304:
+       if (DBGPrint("Example 2 (IO Breakpoint):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: debug/mdb-logic.c:1305:
+       if (DBGPrint("(0)> bi 3D4 (!EBX && [d ESI+40] != 2000)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1343: FILE: debug/mdb-logic.c:1305:
+       if (DBGPrint("(0)> bi 3D4 (!EBX && [d ESI+40] != 2000)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: debug/mdb-logic.c:1306:
+       if (DBGPrint("breakpoint will activate if condition is true$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1344: FILE: debug/mdb-logic.c:1306:
+       if (DBGPrint("breakpoint will activate if condition is true
(returns 1)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: debug/mdb-logic.c:1307:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: debug/mdb-logic.c:1308:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: debug/mdb-logic.c:1309:
+       if (DBGPrint("Register Operators\n")) return;$

CHECK:CAMELCASE: Avoid CamelCase: <Register>
#1348: FILE: debug/mdb-logic.c:1309:
+       if (DBGPrint("Register Operators\n")) return;

CHECK:CAMELCASE: Avoid CamelCase: <Operators>
#1348: FILE: debug/mdb-logic.c:1309:
+       if (DBGPrint("Register Operators\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1349: FILE: debug/mdb-logic.c:1310:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: debug/mdb-logic.c:1311:
+       if (DBGPrint("EAX, EBX, ECX, EDX        - general registers\n"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: debug/mdb-logic.c:1312:
+       if (DBGPrint("ESI, EDI, EBP, ESP        - pointer registers\n"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: debug/mdb-logic.c:1313:
+       if (DBGPrint("EIP, <symbol>             - instruction pointer or$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1354: FILE: debug/mdb-logic.c:1313:
+       if (DBGPrint("EIP, <symbol>             - instruction pointer or
                           ^

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#1354: FILE: debug/mdb-logic.c:1313:
+       if (DBGPrint("EIP, <symbol>             - instruction pointer or
                                  ^

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#1354: FILE: debug/mdb-logic.c:1313:
+       if (DBGPrint("EIP, <symbol>             - instruction pointer or
                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: debug/mdb-logic.c:1314:
+       if (DBGPrint("CS, DS, ES, FS, GS, SS    - segment registers\n"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 0)
#1356: FILE: debug/mdb-logic.c:1314:
+       if (DBGPrint("CS, DS, ES, FS, GS, SS    - segment registers\n"))
return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: debug/mdb-logic.c:1315:
+       if (DBGPrint("CF, PF, AF, ZF, SF, IF    - flags\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1358: FILE: debug/mdb-logic.c:1315:
+       if (DBGPrint("CF, PF, AF, ZF, SF, IF    - flags\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: debug/mdb-logic.c:1316:
+       if (DBGPrint("DF, OF, VM, AC\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1359: FILE: debug/mdb-logic.c:1316:
+       if (DBGPrint("DF, OF, VM, AC\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1360: FILE: debug/mdb-logic.c:1317:
+       if (DBGPrint("=                         - set equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1360: FILE: debug/mdb-logic.c:1317:
+       if (DBGPrint("=                         - set equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: debug/mdb-logic.c:1318:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1361: FILE: debug/mdb-logic.c:1318:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: debug/mdb-logic.c:1319:
+       if (DBGPrint("Example 1:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1362: FILE: debug/mdb-logic.c:1319:
+       if (DBGPrint("Example 1:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: debug/mdb-logic.c:1320:
+       if (DBGPrint("(0)> EAX = 0032700 \n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1363: FILE: debug/mdb-logic.c:1320:
+       if (DBGPrint("(0)> EAX = 0032700 \n")) return;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1363: FILE: debug/mdb-logic.c:1320:
+       if (DBGPrint("(0)> EAX = 0032700 \n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: debug/mdb-logic.c:1321:
+       if (DBGPrint("EAX changed to 0x0032700\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1364: FILE: debug/mdb-logic.c:1321:
+       if (DBGPrint("EAX changed to 0x0032700\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: debug/mdb-logic.c:1322:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1365: FILE: debug/mdb-logic.c:1322:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: debug/mdb-logic.c:1323:
+       if (DBGPrint("Example 2:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1366: FILE: debug/mdb-logic.c:1323:
+       if (DBGPrint("Example 2:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: debug/mdb-logic.c:1324:
+       if (DBGPrint("(0)> u thread_switch\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1367: FILE: debug/mdb-logic.c:1324:
+       if (DBGPrint("(0)> u thread_switch\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: debug/mdb-logic.c:1325:
+       if (DBGPrint("unassembles function thread_switch\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1368: FILE: debug/mdb-logic.c:1325:
+       if (DBGPrint("unassembles function thread_switch\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: debug/mdb-logic.c:1326:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1369: FILE: debug/mdb-logic.c:1326:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: debug/mdb-logic.c:1327:
+       if (DBGPrint("Example 3 (Dump):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1370: FILE: debug/mdb-logic.c:1327:
+       if (DBGPrint("Example 3 (Dump):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: debug/mdb-logic.c:1328:
+       if (DBGPrint("(0)> d EBP+ECX\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1371: FILE: debug/mdb-logic.c:1328:
+       if (DBGPrint("(0)> d EBP+ECX\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: debug/mdb-logic.c:1329:
+       if (DBGPrint("(dumps [d EBP + ECX])\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1372: FILE: debug/mdb-logic.c:1329:
+       if (DBGPrint("(dumps [d EBP + ECX])\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: debug/mdb-logic.c:1330:
+       if (DBGPrint("[addr] 00 00 00 01 02 04 07 ...\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1373: FILE: debug/mdb-logic.c:1330:
+       if (DBGPrint("[addr] 00 00 00 01 02 04 07 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: debug/mdb-logic.c:1331:
+       if (DBGPrint("[addr] 00 34 56 00 7A 01 00 ...\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1374: FILE: debug/mdb-logic.c:1331:
+       if (DBGPrint("[addr] 00 34 56 00 7A 01 00 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: debug/mdb-logic.c:1332:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1375: FILE: debug/mdb-logic.c:1332:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: debug/mdb-logic.c:1333:
+       if (DBGPrint("Bracket Operators\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1376: FILE: debug/mdb-logic.c:1333:
+       if (DBGPrint("Bracket Operators\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: debug/mdb-logic.c:1334:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1377: FILE: debug/mdb-logic.c:1334:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: debug/mdb-logic.c:1335:
+       if (DBGPrint("(       begin expression bracket\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1378: FILE: debug/mdb-logic.c:1335:
+       if (DBGPrint("(       begin expression bracket\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: debug/mdb-logic.c:1336:
+       if (DBGPrint(")       end expression bracket\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1379: FILE: debug/mdb-logic.c:1336:
+       if (DBGPrint(")       end expression bracket\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: debug/mdb-logic.c:1337:
+       if (DBGPrint("[       begin pointer\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1380: FILE: debug/mdb-logic.c:1337:
+       if (DBGPrint("[       begin pointer\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1381: FILE: debug/mdb-logic.c:1338:
+       if (DBGPrint("]       end pointer\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1381: FILE: debug/mdb-logic.c:1338:
+       if (DBGPrint("]       end pointer\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: debug/mdb-logic.c:1339:
+       if (DBGPrint("d       DWORD reference\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1382: FILE: debug/mdb-logic.c:1339:
+       if (DBGPrint("d       DWORD reference\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: debug/mdb-logic.c:1340:
+       if (DBGPrint("w       WORD reference\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1383: FILE: debug/mdb-logic.c:1340:
+       if (DBGPrint("w       WORD reference\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: debug/mdb-logic.c:1341:
+       if (DBGPrint("b       BYTE reference\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1384: FILE: debug/mdb-logic.c:1341:
+       if (DBGPrint("b       BYTE reference\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: debug/mdb-logic.c:1342:
+       if (DBGPrint("<num>r  parse number as decimal not hex flag"$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1385: FILE: debug/mdb-logic.c:1342:
+       if (DBGPrint("<num>r  parse number as decimal not hex flag"
+                    " (e.g. 512r == 200)\n")) return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: debug/mdb-logic.c:1343:
+                    " (e.g. 512r == 200)\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: debug/mdb-logic.c:1343:
+                    " (e.g. 512r == 200)\n")) return;$

WARNING:SPLIT_STRING: quoted string split across lines
#1386: FILE: debug/mdb-logic.c:1343:
+       if (DBGPrint("<num>r  parse number as decimal not hex flag"
+                    " (e.g. 512r == 200)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: debug/mdb-logic.c:1344:
+       if (DBGPrint("Note - DWORD,WORD, and BYTE dereference operators$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1387: FILE: debug/mdb-logic.c:1344:
+       if (DBGPrint("Note - DWORD,WORD, and BYTE dereference operators
must\n"))          return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: debug/mdb-logic.c:1345:
+       if (DBGPrint("immediately follow pointer brackets (no spaces)\n"))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1389: FILE: debug/mdb-logic.c:1345:
+       if (DBGPrint("immediately follow pointer brackets (no spaces)\n"))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
                                    ^

ERROR:SPACING: spaces required around that '>' (ctx:VxB)
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
                                           ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
                                                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxB)
#1391: FILE: debug/mdb-logic.c:1347:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1392: FILE: debug/mdb-logic.c:1348:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: debug/mdb-logic.c:1348:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: debug/mdb-logic.c:1349:
+       if (DBGPrint("[b <addr/symbol>], etc.\n"))$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1393: FILE: debug/mdb-logic.c:1349:
+       if (DBGPrint("[b <addr/symbol>], etc.\n"))
                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1393: FILE: debug/mdb-logic.c:1349:
+       if (DBGPrint("[b <addr/symbol>], etc.\n"))
                              ^

ERROR:SPACING: spaces required around that '>' (ctx:VxB)
#1393: FILE: debug/mdb-logic.c:1349:
+       if (DBGPrint("[b <addr/symbol>], etc.\n"))
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1394: FILE: debug/mdb-logic.c:1350:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: debug/mdb-logic.c:1350:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: debug/mdb-logic.c:1351:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: debug/mdb-logic.c:1352:
+       if (DBGPrint("Example 1 (dump):\n")) return;$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1396: FILE: debug/mdb-logic.c:1352:
+       if (DBGPrint("Example 1 (dump):\n")) return;
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: debug/mdb-logic.c:1353:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1397: FILE: debug/mdb-logic.c:1353:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#1397: FILE: debug/mdb-logic.c:1353:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;
                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1397: FILE: debug/mdb-logic.c:1353:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;
                                   ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1397: FILE: debug/mdb-logic.c:1353:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: debug/mdb-logic.c:1354:
+       if (DBGPrint("[eax + 100 (dec)] 00 00 00 01 02 04 07 00\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1399: FILE: debug/mdb-logic.c:1355:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: debug/mdb-logic.c:1356:
+       if (DBGPrint("Example 2 (dump):\n")) return;$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1400: FILE: debug/mdb-logic.c:1356:
+       if (DBGPrint("Example 2 (dump):\n")) return;
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: debug/mdb-logic.c:1357:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1401: FILE: debug/mdb-logic.c:1357:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#1401: FILE: debug/mdb-logic.c:1357:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;
                         ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1401: FILE: debug/mdb-logic.c:1357:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1402: FILE: debug/mdb-logic.c:1358:
+       if (DBGPrint("[addr (hex)] 00 22 00 01 02 04 07 ...\n")) return;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1402: FILE: debug/mdb-logic.c:1358:
+       if (DBGPrint("[addr (hex)] 00 22 00 01 02 04 07 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: debug/mdb-logic.c:1359:
+       if (DBGPrint("[addr (hex)] 00 31 A1 00 6A 05 00 ...\n")) return;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1403: FILE: debug/mdb-logic.c:1359:
+       if (DBGPrint("[addr (hex)] 00 31 A1 00 6A 05 00 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: debug/mdb-logic.c:1360:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: debug/mdb-logic.c:1361:
+       if (DBGPrint("Example 3 (break):\n")) return;$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1405: FILE: debug/mdb-logic.c:1361:
+       if (DBGPrint("Example 3 (break):\n")) return;
                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: debug/mdb-logic.c:1362:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50] $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: debug/mdb-logic.c:1362:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50] $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1406: FILE: debug/mdb-logic.c:1362:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50] 

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#1406: FILE: debug/mdb-logic.c:1362:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50] 
                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1406: FILE: debug/mdb-logic.c:1362:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50] 
                                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: debug/mdb-logic.c:1363:
+       if (DBGPrint("breakpoint will activate if condition is true$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1408: FILE: debug/mdb-logic.c:1363:
+       if (DBGPrint("breakpoint will activate if condition is true
(returns 1)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1410: FILE: debug/mdb-logic.c:1364:
+       if (DBGPrint("\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: debug/mdb-logic.c:1366:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: debug/mdb-logic.c:1372:
+   ULONG *pd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: debug/mdb-logic.c:1373:
+   WORD *pw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: debug/mdb-logic.c:1374:
+   BYTE *pb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1422: FILE: debug/mdb-logic.c:1376:
+   switch (type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: debug/mdb-logic.c:1377:
+   {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: debug/mdb-logic.c:1378:
+      case ULONG_PTR:$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1427: FILE: debug/mdb-logic.c:1381:
+	 DBGPrint("dref (d): [%08X]-> %08X\n", pd,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1427: FILE: debug/mdb-logic.c:1381:
+	 DBGPrint("dref (d): [%08X]-> %08X\n", pd,
 	                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1427: FILE: debug/mdb-logic.c:1381:
+	 DBGPrint("dref (d): [%08X]-> %08X\n", pd,
 	                      ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1427: FILE: debug/mdb-logic.c:1381:
+	 DBGPrint("dref (d): [%08X]-> %08X\n", pd,
 	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1427: FILE: debug/mdb-logic.c:1381:
+	 DBGPrint("dref (d): [%08X]-> %08X\n", pd,
 	                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1428: FILE: debug/mdb-logic.c:1382:
+                  mdb_getword((ULONG)pd, 4));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: debug/mdb-logic.c:1382:
+                  mdb_getword((ULONG)pd, 4));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: debug/mdb-logic.c:1386:
+      case WORD_PTR:$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1435: FILE: debug/mdb-logic.c:1389:
+	 DBGPrint("dref (w): [%08X]-> %04X\n", pw,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1435: FILE: debug/mdb-logic.c:1389:
+	 DBGPrint("dref (w): [%08X]-> %04X\n", pw,
 	                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1435: FILE: debug/mdb-logic.c:1389:
+	 DBGPrint("dref (w): [%08X]-> %04X\n", pw,
 	                      ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1435: FILE: debug/mdb-logic.c:1389:
+	 DBGPrint("dref (w): [%08X]-> %04X\n", pw,
 	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1435: FILE: debug/mdb-logic.c:1389:
+	 DBGPrint("dref (w): [%08X]-> %04X\n", pw,
 	                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1436: FILE: debug/mdb-logic.c:1390:
+                  mdb_getword((ULONG)pw, 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: debug/mdb-logic.c:1390:
+                  mdb_getword((ULONG)pw, 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: debug/mdb-logic.c:1394:
+      case BYTE_PTR:$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1443: FILE: debug/mdb-logic.c:1397:
+	 DBGPrint("dref (b): [%08X]-> %02X\n", pb,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1443: FILE: debug/mdb-logic.c:1397:
+	 DBGPrint("dref (b): [%08X]-> %02X\n", pb,
 	                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1443: FILE: debug/mdb-logic.c:1397:
+	 DBGPrint("dref (b): [%08X]-> %02X\n", pb,
 	                      ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1443: FILE: debug/mdb-logic.c:1397:
+	 DBGPrint("dref (b): [%08X]-> %02X\n", pb,
 	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1443: FILE: debug/mdb-logic.c:1397:
+	 DBGPrint("dref (b): [%08X]-> %02X\n", pb,
 	                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: debug/mdb-logic.c:1398:
+                  mdb_getword((ULONG)pb, 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: debug/mdb-logic.c:1398:
+                  mdb_getword((ULONG)pb, 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: debug/mdb-logic.c:1402:
+      default:$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1450: FILE: debug/mdb-logic.c:1404:
+	 DBGPrint("dref (?): [0]-> 0\n");

ERROR:SPACING: spaces required around that '?' (ctx:BxB)
#1450: FILE: debug/mdb-logic.c:1404:
+	 DBGPrint("dref (?): [0]-> 0\n");
 	                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1450: FILE: debug/mdb-logic.c:1404:
+	 DBGPrint("dref (?): [0]-> 0\n");
 	                   ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1450: FILE: debug/mdb-logic.c:1404:
+	 DBGPrint("dref (?): [0]-> 0\n");
 	                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: debug/mdb-logic.c:1407:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: debug/mdb-logic.c:1413:
+     if (sp > bos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: debug/mdb-logic.c:1414:
+     {$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1462: FILE: debug/mdb-logic.c:1416:
+	DBGPrint("push : <err>\n");
 	                 ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1462: FILE: debug/mdb-logic.c:1416:
+	DBGPrint("push : <err>\n");
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1465: FILE: debug/mdb-logic.c:1419:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: debug/mdb-logic.c:1420:
+     *sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: debug/mdb-logic.c:1422:
+     DBGPrint("push : %08X (%d)\n", *sp, *sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: debug/mdb-logic.c:1422:
+     DBGPrint("push : %08X (%d)\n", *sp, *sp);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1468: FILE: debug/mdb-logic.c:1422:
+     DBGPrint("push : %08X (%d)\n", *sp, *sp);
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1468: FILE: debug/mdb-logic.c:1422:
+     DBGPrint("push : %08X (%d)\n", *sp, *sp);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: debug/mdb-logic.c:1424:
+     sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1471: FILE: debug/mdb-logic.c:1425:
+     return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1476: FILE: debug/mdb-logic.c:1430:
+    sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: debug/mdb-logic.c:1431:
+    if (sp < tos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1478: FILE: debug/mdb-logic.c:1432:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: debug/mdb-logic.c:1433:
+       sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: debug/mdb-logic.c:1435:
+       DBGPrint("pop  : <err>\n");$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1481: FILE: debug/mdb-logic.c:1435:
+       DBGPrint("pop  : <err>\n");
                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1481: FILE: debug/mdb-logic.c:1435:
+       DBGPrint("pop  : <err>\n");
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: debug/mdb-logic.c:1437:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: debug/mdb-logic.c:1438:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: debug/mdb-logic.c:1440:
+    DBGPrint("pop  : %08X (%d)\n", *sp, *sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1486: FILE: debug/mdb-logic.c:1440:
+    DBGPrint("pop  : %08X (%d)\n", *sp, *sp);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1486: FILE: debug/mdb-logic.c:1440:
+    DBGPrint("pop  : %08X (%d)\n", *sp, *sp);
                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1486: FILE: debug/mdb-logic.c:1440:
+    DBGPrint("pop  : %08X (%d)\n", *sp, *sp);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: debug/mdb-logic.c:1442:
+    return *sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1494: FILE: debug/mdb-logic.c:1448:
+     if (c_sp > c_bos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: debug/mdb-logic.c:1449:
+     {$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1497: FILE: debug/mdb-logic.c:1451:
+	DBGPrint("cpush: <err>\n");
 	               ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1497: FILE: debug/mdb-logic.c:1451:
+	DBGPrint("cpush: <err>\n");
 	                 ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1497: FILE: debug/mdb-logic.c:1451:
+	DBGPrint("cpush: <err>\n");
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: debug/mdb-logic.c:1454:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: debug/mdb-logic.c:1455:
+     *c_sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1503: FILE: debug/mdb-logic.c:1457:
+     DBGPrint("cpush: %08X (%d)\n", *c_sp, *c_sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1503: FILE: debug/mdb-logic.c:1457:
+     DBGPrint("cpush: %08X (%d)\n", *c_sp, *c_sp);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1503: FILE: debug/mdb-logic.c:1457:
+     DBGPrint("cpush: %08X (%d)\n", *c_sp, *c_sp);
                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1503: FILE: debug/mdb-logic.c:1457:
+     DBGPrint("cpush: %08X (%d)\n", *c_sp, *c_sp);
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1503: FILE: debug/mdb-logic.c:1457:
+     DBGPrint("cpush: %08X (%d)\n", *c_sp, *c_sp);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: debug/mdb-logic.c:1459:
+     c_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: debug/mdb-logic.c:1460:
+     return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: debug/mdb-logic.c:1465:
+    c_sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: debug/mdb-logic.c:1466:
+    if (c_sp < c_tos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: debug/mdb-logic.c:1467:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: debug/mdb-logic.c:1468:
+       c_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: debug/mdb-logic.c:1470:
+       DBGPrint("cpop : <err>\n");$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1516: FILE: debug/mdb-logic.c:1470:
+       DBGPrint("cpop : <err>\n");
                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1516: FILE: debug/mdb-logic.c:1470:
+       DBGPrint("cpop : <err>\n");
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: debug/mdb-logic.c:1472:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: debug/mdb-logic.c:1473:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: debug/mdb-logic.c:1475:
+    DBGPrint("cpop : %08X (%d)\n", *c_sp, *c_sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1521: FILE: debug/mdb-logic.c:1475:
+    DBGPrint("cpop : %08X (%d)\n", *c_sp, *c_sp);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1521: FILE: debug/mdb-logic.c:1475:
+    DBGPrint("cpop : %08X (%d)\n", *c_sp, *c_sp);
                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1521: FILE: debug/mdb-logic.c:1475:
+    DBGPrint("cpop : %08X (%d)\n", *c_sp, *c_sp);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1523: FILE: debug/mdb-logic.c:1477:
+    return *c_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: debug/mdb-logic.c:1483:
+     if (b_sp > b_bos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1530: FILE: debug/mdb-logic.c:1484:
+     {$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1532: FILE: debug/mdb-logic.c:1486:
+	DBGPrint("bpush: <err>\n");
 	               ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1532: FILE: debug/mdb-logic.c:1486:
+	DBGPrint("bpush: <err>\n");
 	                 ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1532: FILE: debug/mdb-logic.c:1486:
+	DBGPrint("bpush: <err>\n");
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: debug/mdb-logic.c:1489:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1536: FILE: debug/mdb-logic.c:1490:
+     *b_sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1538: FILE: debug/mdb-logic.c:1492:
+     DBGPrint("bpush: %08X (%d)\n", *b_sp, *b_sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1538: FILE: debug/mdb-logic.c:1492:
+     DBGPrint("bpush: %08X (%d)\n", *b_sp, *b_sp);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1538: FILE: debug/mdb-logic.c:1492:
+     DBGPrint("bpush: %08X (%d)\n", *b_sp, *b_sp);
                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1538: FILE: debug/mdb-logic.c:1492:
+     DBGPrint("bpush: %08X (%d)\n", *b_sp, *b_sp);
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1538: FILE: debug/mdb-logic.c:1492:
+     DBGPrint("bpush: %08X (%d)\n", *b_sp, *b_sp);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1540: FILE: debug/mdb-logic.c:1494:
+     b_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: debug/mdb-logic.c:1495:
+     return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: debug/mdb-logic.c:1500:
+    b_sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: debug/mdb-logic.c:1501:
+    if (b_sp < b_tos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: debug/mdb-logic.c:1502:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: debug/mdb-logic.c:1503:
+       b_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: debug/mdb-logic.c:1505:
+       DBGPrint("bpop : <err>\n");$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1551: FILE: debug/mdb-logic.c:1505:
+       DBGPrint("bpop : <err>\n");
                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1551: FILE: debug/mdb-logic.c:1505:
+       DBGPrint("bpop : <err>\n");
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: debug/mdb-logic.c:1507:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: debug/mdb-logic.c:1508:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: debug/mdb-logic.c:1510:
+    DBGPrint("bpop : %08X (%d)\n", *b_sp, *b_sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1556: FILE: debug/mdb-logic.c:1510:
+    DBGPrint("bpop : %08X (%d)\n", *b_sp, *b_sp);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1556: FILE: debug/mdb-logic.c:1510:
+    DBGPrint("bpop : %08X (%d)\n", *b_sp, *b_sp);
                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1556: FILE: debug/mdb-logic.c:1510:
+    DBGPrint("bpop : %08X (%d)\n", *b_sp, *b_sp);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: debug/mdb-logic.c:1512:
+    return *b_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: debug/mdb-logic.c:1518:
+     if (l_sp > l_bos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: debug/mdb-logic.c:1519:
+     {$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1567: FILE: debug/mdb-logic.c:1521:
+	DBGPrint("lpush: <err>\n");
 	               ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1567: FILE: debug/mdb-logic.c:1521:
+	DBGPrint("lpush: <err>\n");
 	                 ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1567: FILE: debug/mdb-logic.c:1521:
+	DBGPrint("lpush: <err>\n");
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: debug/mdb-logic.c:1524:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: debug/mdb-logic.c:1525:
+     *l_sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: debug/mdb-logic.c:1527:
+     DBGPrint("lpush: %08X (%d)\n", *l_sp, *l_sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1573: FILE: debug/mdb-logic.c:1527:
+     DBGPrint("lpush: %08X (%d)\n", *l_sp, *l_sp);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1573: FILE: debug/mdb-logic.c:1527:
+     DBGPrint("lpush: %08X (%d)\n", *l_sp, *l_sp);
                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1573: FILE: debug/mdb-logic.c:1527:
+     DBGPrint("lpush: %08X (%d)\n", *l_sp, *l_sp);
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1573: FILE: debug/mdb-logic.c:1527:
+     DBGPrint("lpush: %08X (%d)\n", *l_sp, *l_sp);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: debug/mdb-logic.c:1529:
+     l_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: debug/mdb-logic.c:1530:
+     return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: debug/mdb-logic.c:1535:
+    l_sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: debug/mdb-logic.c:1536:
+    if (l_sp < l_tos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: debug/mdb-logic.c:1537:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: debug/mdb-logic.c:1538:
+       l_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: debug/mdb-logic.c:1540:
+       DBGPrint("lpop : <err>\n");$

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1586: FILE: debug/mdb-logic.c:1540:
+       DBGPrint("lpop : <err>\n");
                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1586: FILE: debug/mdb-logic.c:1540:
+       DBGPrint("lpop : <err>\n");
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: debug/mdb-logic.c:1542:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: debug/mdb-logic.c:1543:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: debug/mdb-logic.c:1545:
+    DBGPrint("lpop : %08X (%d)\n", *l_sp, *l_sp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1591: FILE: debug/mdb-logic.c:1545:
+    DBGPrint("lpop : %08X (%d)\n", *l_sp, *l_sp);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1591: FILE: debug/mdb-logic.c:1545:
+    DBGPrint("lpop : %08X (%d)\n", *l_sp, *l_sp);
                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#1591: FILE: debug/mdb-logic.c:1545:
+    DBGPrint("lpop : %08X (%d)\n", *l_sp, *l_sp);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: debug/mdb-logic.c:1547:
+    return *l_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: debug/mdb-logic.c:1554:
+    sp = numStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1601: FILE: debug/mdb-logic.c:1555:
+    tos = sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1602: FILE: debug/mdb-logic.c:1556:
+    bos = sp + NUM_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: debug/mdb-logic.c:1558:
+    c_sp = contextStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1605: FILE: debug/mdb-logic.c:1559:
+    c_tos = c_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1606: FILE: debug/mdb-logic.c:1560:
+    c_bos = c_sp + CONTEXT_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1608: FILE: debug/mdb-logic.c:1562:
+    b_sp = booleanStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1609: FILE: debug/mdb-logic.c:1563:
+    b_tos = b_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: debug/mdb-logic.c:1564:
+    b_bos = b_sp + BOOL_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1612: FILE: debug/mdb-logic.c:1566:
+    l_sp = logicalStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1613: FILE: debug/mdb-logic.c:1567:
+    l_tos = l_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1614: FILE: debug/mdb-logic.c:1568:
+    l_bos = l_sp + LOGICAL_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1620: FILE: debug/mdb-logic.c:1574:
+    ULONG a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: debug/mdb-logic.c:1576:
+    b = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1623: FILE: debug/mdb-logic.c:1577:
+    a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1624: FILE: debug/mdb-logic.c:1578:
+    switch(oper)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1625: FILE: debug/mdb-logic.c:1579:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1626: FILE: debug/mdb-logic.c:1580:
+       case NEG_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1629: FILE: debug/mdb-logic.c:1583:
+       case LEFT_SHIFT_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1633: FILE: debug/mdb-logic.c:1587:
+       case RIGHT_SHIFT_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: debug/mdb-logic.c:1591:
+       case PLUS_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: debug/mdb-logic.c:1595:
+       case XOR_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1645: FILE: debug/mdb-logic.c:1599:
+       case AND_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1649: FILE: debug/mdb-logic.c:1603:
+       case MOD_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1656: FILE: debug/mdb-logic.c:1610:
+       case OR_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: debug/mdb-logic.c:1614:
+       case MINUS_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: debug/mdb-logic.c:1618:
+       case MULTIPLY_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: debug/mdb-logic.c:1622:
+       case DIVIDE_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1675: FILE: debug/mdb-logic.c:1629:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1676: FILE: debug/mdb-logic.c:1630:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1683: FILE: debug/mdb-logic.c:1637:
+    ULONG a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1685: FILE: debug/mdb-logic.c:1639:
+    b = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1686: FILE: debug/mdb-logic.c:1640:
+    a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1687: FILE: debug/mdb-logic.c:1641:
+    switch(oper)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1688: FILE: debug/mdb-logic.c:1642:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1689: FILE: debug/mdb-logic.c:1643:
+       case NOT_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: debug/mdb-logic.c:1647:
+       case GREATER_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: debug/mdb-logic.c:1651:
+       case LESS_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1701: FILE: debug/mdb-logic.c:1655:
+       case GREATER_EQUAL_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: debug/mdb-logic.c:1659:
+       case LESS_EQUAL_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: debug/mdb-logic.c:1663:
+       case EQUAL_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: debug/mdb-logic.c:1667:
+       case NOT_EQUAL_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1716: FILE: debug/mdb-logic.c:1670:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1717: FILE: debug/mdb-logic.c:1671:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1724: FILE: debug/mdb-logic.c:1678:
+    ULONG a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1726: FILE: debug/mdb-logic.c:1680:
+    b = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: debug/mdb-logic.c:1681:
+    a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1728: FILE: debug/mdb-logic.c:1682:
+    switch(oper)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1729: FILE: debug/mdb-logic.c:1683:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1730: FILE: debug/mdb-logic.c:1684:
+       case LOGICAL_AND_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1734: FILE: debug/mdb-logic.c:1688:
+       case LOGICAL_OR_TOKEN:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1737: FILE: debug/mdb-logic.c:1691:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1738: FILE: debug/mdb-logic.c:1692:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1745: FILE: debug/mdb-logic.c:1699:
+    register int i, r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1746: FILE: debug/mdb-logic.c:1700:
+    ULONG a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1747: FILE: debug/mdb-logic.c:1701:
+    ULONG c = 0, lastClass = 0, oper = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1749: FILE: debug/mdb-logic.c:1703:
+    for (i=0; i < logicalCount; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1750: FILE: debug/mdb-logic.c:1704:
+       ExpressPush(LogicalPop());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1752: FILE: debug/mdb-logic.c:1706:
+    for (i=0, r=0; i < (logicalCount / 2); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1753: FILE: debug/mdb-logic.c:1707:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1754: FILE: debug/mdb-logic.c:1708:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1755: FILE: debug/mdb-logic.c:1709:
+       TokenType[r] = NUMBER_TOKEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1756: FILE: debug/mdb-logic.c:1710:
+       TokenValue[r++] = a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1757: FILE: debug/mdb-logic.c:1711:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1758: FILE: debug/mdb-logic.c:1712:
+       TokenType[r] = a;  // get the operator type$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1759: FILE: debug/mdb-logic.c:1713:
+       TokenValue[r++] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1760: FILE: debug/mdb-logic.c:1714:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1762: FILE: debug/mdb-logic.c:1716:
+    initNumericStacks();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1765: FILE: debug/mdb-logic.c:1719:
+     DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1767: FILE: debug/mdb-logic.c:1721:
+    for (i=0; i < logicalCount; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1768: FILE: debug/mdb-logic.c:1722:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1770: FILE: debug/mdb-logic.c:1724:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1773: FILE: debug/mdb-logic.c:1727:
+       switch (TokenType[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1774: FILE: debug/mdb-logic.c:1728:
+       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1803: FILE: debug/mdb-logic.c:1757:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1804: FILE: debug/mdb-logic.c:1758:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1805: FILE: debug/mdb-logic.c:1759:
+    return c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1812: FILE: debug/mdb-logic.c:1766:
+    register int i, r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1813: FILE: debug/mdb-logic.c:1767:
+    ULONG a, oper = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1814: FILE: debug/mdb-logic.c:1768:
+    ULONG c = 0, lastClass = 0, logicalCount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1816: FILE: debug/mdb-logic.c:1770:
+    for (i=0; i < booleanCount; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1817: FILE: debug/mdb-logic.c:1771:
+       ExpressPush(BooleanPop());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1819: FILE: debug/mdb-logic.c:1773:
+    for (i=0, r=0; i < (booleanCount / 2); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1820: FILE: debug/mdb-logic.c:1774:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1821: FILE: debug/mdb-logic.c:1775:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1822: FILE: debug/mdb-logic.c:1776:
+       TokenType[r] = NUMBER_TOKEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1823: FILE: debug/mdb-logic.c:1777:
+       TokenValue[r++] = a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1824: FILE: debug/mdb-logic.c:1778:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1825: FILE: debug/mdb-logic.c:1779:
+       TokenType[r] = a;  // get the operator type$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1826: FILE: debug/mdb-logic.c:1780:
+       TokenValue[r++] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1827: FILE: debug/mdb-logic.c:1781:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1829: FILE: debug/mdb-logic.c:1783:
+    initNumericStacks();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: debug/mdb-logic.c:1786:
+     DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1834: FILE: debug/mdb-logic.c:1788:
+    for (i=0; i < booleanCount; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1835: FILE: debug/mdb-logic.c:1789:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1837: FILE: debug/mdb-logic.c:1791:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1840: FILE: debug/mdb-logic.c:1794:
+       switch (TokenType[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1841: FILE: debug/mdb-logic.c:1795:
+       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1915: FILE: debug/mdb-logic.c:1869:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1916: FILE: debug/mdb-logic.c:1870:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1917: FILE: debug/mdb-logic.c:1871:
+    return c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1924: FILE: debug/mdb-logic.c:1878:
+     register int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1925: FILE: debug/mdb-logic.c:1879:
+     ULONG oper = 0, dref = 0, bracket = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1926: FILE: debug/mdb-logic.c:1880:
+     ULONG dref_type = 0, lastClass = 0, lastToken = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1927: FILE: debug/mdb-logic.c:1881:
+     ULONG neg_flag = 0, negative_flag = 0, c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1928: FILE: debug/mdb-logic.c:1882:
+     ULONG booleanCount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1931: FILE: debug/mdb-logic.c:1885:
+     spin_lock_irqsave(&expressLock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1934: FILE: debug/mdb-logic.c:1888:
+     if (type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1937: FILE: debug/mdb-logic.c:1891:
+     DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1940: FILE: debug/mdb-logic.c:1894:
+     DBGPrint("\np: %08X  %s\n", *p, *p);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1940: FILE: debug/mdb-logic.c:1894:
+     DBGPrint("\np: %08X  %s\n", *p, *p);
                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1940: FILE: debug/mdb-logic.c:1894:
+     DBGPrint("\np: %08X  %s\n", *p, *p);
                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1940: FILE: debug/mdb-logic.c:1894:
+     DBGPrint("\np: %08X  %s\n", *p, *p);
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1942: FILE: debug/mdb-logic.c:1896:
+     parseTokens(stackFrame, *p, mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1943: FILE: debug/mdb-logic.c:1897:
+     if (TokenCount)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: debug/mdb-logic.c:1898:
+     {$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1949: FILE: debug/mdb-logic.c:1903:
+	   DBGPrint("token: %s  lastClass: %d\n",
 	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1949: FILE: debug/mdb-logic.c:1903:
+	   DBGPrint("token: %s  lastClass: %d\n",
 	                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1949: FILE: debug/mdb-logic.c:1903:
+	   DBGPrint("token: %s  lastClass: %d\n",
 	                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1949: FILE: debug/mdb-logic.c:1903:
+	   DBGPrint("token: %s  lastClass: %d\n",
 	                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <lastClass>
#1949: FILE: debug/mdb-logic.c:1903:
+	   DBGPrint("token: %s  lastClass: %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1955: FILE: debug/mdb-logic.c:1908:
+                 goto evaluate_error_exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1955: FILE: debug/mdb-logic.c:1908:
+                 goto evaluate_error_exit;$

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2037: FILE: debug/mdb-logic.c:1990:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2037: FILE: debug/mdb-logic.c:1990:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                                ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2037: FILE: debug/mdb-logic.c:1990:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2045: FILE: debug/mdb-logic.c:1998:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2045: FILE: debug/mdb-logic.c:1998:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2045: FILE: debug/mdb-logic.c:1998:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2114: FILE: debug/mdb-logic.c:2067:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2114: FILE: debug/mdb-logic.c:2067:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                                ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2114: FILE: debug/mdb-logic.c:2067:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2122: FILE: debug/mdb-logic.c:2075:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2122: FILE: debug/mdb-logic.c:2075:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2122: FILE: debug/mdb-logic.c:2075:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2249: FILE: debug/mdb-logic.c:2202:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2249: FILE: debug/mdb-logic.c:2202:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                                ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2249: FILE: debug/mdb-logic.c:2202:
+		       DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2257: FILE: debug/mdb-logic.c:2210:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2257: FILE: debug/mdb-logic.c:2210:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2257: FILE: debug/mdb-logic.c:2210:
+		    DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2296: FILE: debug/mdb-logic.c:2249:
+		    DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2296: FILE: debug/mdb-logic.c:2249:
+		    DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");
 		                             ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2296: FILE: debug/mdb-logic.c:2249:
+		    DBGPrint("be_N : (%d) = (%s)\n", c, c ? "TRUE" : "FALSE");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2304: FILE: debug/mdb-logic.c:2257:
+		 DBGPrint("ee_N : %08X (%d)\n", c, c);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2304: FILE: debug/mdb-logic.c:2257:
+		 DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2304: FILE: debug/mdb-logic.c:2257:
+		 DBGPrint("ee_N : %08X (%d)\n", c, c);
 		                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2321: FILE: debug/mdb-logic.c:2274:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2324: FILE: debug/mdb-logic.c:2277:
+     if (type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2327: FILE: debug/mdb-logic.c:2280:
+     if (lastToken) {};$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2330: FILE: debug/mdb-logic.c:2283:
+     spin_unlock_irqrestore(&expressLock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2332: FILE: debug/mdb-logic.c:2285:
+     return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2339: FILE: debug/mdb-logic.c:2291:
+     register ULONG c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2340: FILE: debug/mdb-logic.c:2292:
+     c = Evaluate(stackFrame, p, type, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2341: FILE: debug/mdb-logic.c:2293:
+     return c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2346: FILE: debug/mdb-logic.c:2298:
+     register ULONG c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2347: FILE: debug/mdb-logic.c:2299:
+     c = Evaluate(stackFrame, p, type, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2348: FILE: debug/mdb-logic.c:2300:
+     return c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2353: FILE: debug/mdb-logic.c:2305:
+     BYTE *expr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2354: FILE: debug/mdb-logic.c:2306:
+     ULONG type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2355: FILE: debug/mdb-logic.c:2307:
+     ULONG c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2358: FILE: debug/mdb-logic.c:2310:
+     DBGPrint("expr: [%s]\n", p);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2358: FILE: debug/mdb-logic.c:2310:
+     DBGPrint("expr: [%s]\n", p);
                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2358: FILE: debug/mdb-logic.c:2310:
+     DBGPrint("expr: [%s]\n", p);
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2360: FILE: debug/mdb-logic.c:2312:
+     expr = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2361: FILE: debug/mdb-logic.c:2313:
+     c = EvaluateExpression(stackFrame, &p, &type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2362: FILE: debug/mdb-logic.c:2314:
+     if (type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2363: FILE: debug/mdb-logic.c:2315:
+     {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2364: FILE: debug/mdb-logic.c:2316:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
 	                                                  ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2366: FILE: debug/mdb-logic.c:2318:
+		    (c) ? 1 : 0, (c) ? "TRUE" : "FALSE");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2367: FILE: debug/mdb-logic.c:2319:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2368: FILE: debug/mdb-logic.c:2320:
+     else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2369: FILE: debug/mdb-logic.c:2321:
+     {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2370: FILE: debug/mdb-logic.c:2322:
+        DBGPrint("expression parameters invalid\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2370: FILE: debug/mdb-logic.c:2322:
+        DBGPrint("expression parameters invalid\n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2371: FILE: debug/mdb-logic.c:2323:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2371: FILE: debug/mdb-logic.c:2323:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2371: FILE: debug/mdb-logic.c:2323:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"
 	                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2371: FILE: debug/mdb-logic.c:2323:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"
 	                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2371: FILE: debug/mdb-logic.c:2323:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2371: FILE: debug/mdb-logic.c:2323:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"
 	                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2372: FILE: debug/mdb-logic.c:2324:
+                 " bool(%i) = %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2372: FILE: debug/mdb-logic.c:2324:
+                 " bool(%i) = %s\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#2372: FILE: debug/mdb-logic.c:2324:
+                 " bool(%i) = %s\n",
                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2372: FILE: debug/mdb-logic.c:2324:
+                 " bool(%i) = %s\n",
                               ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2374: FILE: debug/mdb-logic.c:2326:
+		 (c) ? 1 : 0, (c) ? "TRUE" : "FALSE");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2375: FILE: debug/mdb-logic.c:2327:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2376: FILE: debug/mdb-logic.c:2328:
+     return;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 272 errors, 920 warnings, 233 checks, 2347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
