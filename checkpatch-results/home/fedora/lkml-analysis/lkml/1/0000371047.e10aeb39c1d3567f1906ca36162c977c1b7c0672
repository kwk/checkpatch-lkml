CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct cred *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#87: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct cred *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#87: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#87: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#87: FILE: fs/ext3/xattr.h:67:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, struct cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#116: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#116: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#116: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#116: FILE: fs/nfs/nfs4_fs.h:174:
+extern ssize_t nfs4_listxattr(struct dentry *, char *, size_t, struct cred *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#176: FILE: include/linux/fs.h:1167:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct cred *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#176: FILE: include/linux/fs.h:1167:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#176: FILE: include/linux/fs.h:1167:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#176: FILE: include/linux/fs.h:1167:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#176: FILE: include/linux/fs.h:1167:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, struct cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: include/linux/nfs_fs.h:356:
+extern ssize_t nfs3_listxattr(struct dentry *, char *, size_t, struct cred *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371047.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 3 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371047.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
