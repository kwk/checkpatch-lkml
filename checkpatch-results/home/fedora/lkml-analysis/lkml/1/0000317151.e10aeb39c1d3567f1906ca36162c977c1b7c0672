WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#52: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: drivers/xen/xencomm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/xen/xencomm.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: drivers/xen/xencomm.c:14:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#107: FILE: drivers/xen/xencomm.c:51:
+			printk(KERN_DEBUG "%s: couldn't translate vaddr %lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#117: FILE: drivers/xen/xencomm.c:61:
+		printk(KERN_DEBUG

WARNING:LINE_SPACING: Missing a blank line after declarations
#150: FILE: drivers/xen/xencomm.c:94:
+		unsigned long order = get_order(size);
+		desc = (struct xencomm_desc *)__get_free_pages(gfp_mask,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#152: FILE: drivers/xen/xencomm.c:96:
+		if (desc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#160: FILE: drivers/xen/xencomm.c:104:
+		if (desc == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: drivers/xen/xencomm.c:116:
+		struct xencomm_desc *desc__ = (struct xencomm_desc *)desc;
+		if (sizeof(*desc__) > sizeof(void *)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#172: FILE: drivers/xen/xencomm.c:116:
+		if (sizeof(*desc__) > sizeof(void *)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: drivers/xen/xencomm.c:120:
+			unsigned long order = get_order(size);
+			free_pages((unsigned long)__va(desc), order);

CHECK:BRACES: Unbalanced braces around else statement
#177: FILE: drivers/xen/xencomm.c:121:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: drivers/xen/xencomm.c:136:
+		BUG_ON(buffer != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer"
#192: FILE: drivers/xen/xencomm.c:136:
+		BUG_ON(buffer != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#197: FILE: drivers/xen/xencomm.c:141:
+	BUG_ON(buffer == NULL); /* 'bytes' is non-zero */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#197: FILE: drivers/xen/xencomm.c:141:
+	BUG_ON(buffer == NULL); /* 'bytes' is non-zero */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#201: FILE: drivers/xen/xencomm.c:145:
+		printk(KERN_DEBUG "%s failure\n", "xencomm_alloc");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#207: FILE: drivers/xen/xencomm.c:151:
+		printk(KERN_DEBUG "%s failure: %d\n", "xencomm_init", rc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#229: FILE: drivers/xen/xencomm.c:173:
+	BUG_ON(!is_phys_contiguous((unsigned long)ptr));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: drivers/xen/xencomm.c:176:
+	BUG_ON(paddr & XENCOMM_INLINE_FLAG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/xen/xencomm.c:182:
+static int xencomm_create_mini(void *buffer,
+	unsigned long bytes, struct xencomm_mini *xc_desc,

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: drivers/xen/xencomm.c:187:
+	struct xencomm_desc *desc;
+	BUG_ON(((unsigned long)xc_desc) % sizeof(*xc_desc) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: drivers/xen/xencomm.c:187:
+	BUG_ON(((unsigned long)xc_desc) % sizeof(*xc_desc) != 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#266: FILE: drivers/xen/xencomm.c:210:
+	if (rc || desc == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/xen/xencomm.c:217:
+struct xencomm_handle *__xencomm_map_no_alloc(void *ptr, unsigned long bytes,
+			struct xencomm_mini *xc_desc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/xen/xencomm.c:226:
+	rc = xencomm_create_mini(ptr, bytes, xc_desc,
+				&desc);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#295: FILE: include/xen/interface/xencomm.h:1:
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: include/xen/interface/xencomm.h:36:
+    uint32_t magic;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#330: FILE: include/xen/interface/xencomm.h:36:
+    uint32_t magic;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: include/xen/interface/xencomm.h:37:
+    uint32_t nr_addrs; /* the number of entries in address[] */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#331: FILE: include/xen/interface/xencomm.h:37:
+    uint32_t nr_addrs; /* the number of entries in address[] */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: include/xen/interface/xencomm.h:38:
+    uint64_t address[0];$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#332: FILE: include/xen/interface/xencomm.h:38:
+    uint64_t address[0];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#342: FILE: include/xen/xencomm.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#354: FILE: include/xen/xencomm.h:13:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#355: FILE: include/xen/xencomm.h:14:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#371: FILE: include/xen/xencomm.h:30:
+	uint64_t address[XENCOMM_MINI_ADDRS];

WARNING:TYPO_SPELLING: 'additionnal' may be misspelled - perhaps 'additional'?
#374: FILE: include/xen/xencomm.h:33:
+/* To avoid additionnal virt to phys conversion, an opaque structure is
             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#375: FILE: include/xen/xencomm.h:34:
+/* To avoid additionnal virt to phys conversion, an opaque structure is
+   presented.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#375: FILE: include/xen/xencomm.h:34:
+   presented.  */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#378: FILE: include/xen/xencomm.h:37:
+extern void xencomm_free(struct xencomm_handle *desc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#379: FILE: include/xen/xencomm.h:38:
+extern struct xencomm_handle *xencomm_map(void *ptr, unsigned long bytes);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#380: FILE: include/xen/xencomm.h:39:
+extern struct xencomm_handle *__xencomm_map_no_alloc(void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: include/xen/xencomm.h:40:
+extern struct xencomm_handle *__xencomm_map_no_alloc(void *ptr,
+			unsigned long bytes,  struct xencomm_mini *xc_area);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#383: FILE: include/xen/xencomm.h:42:
+#if 0

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'xc_desc' may be better as '(xc_desc)' to avoid precedence issues
#384: FILE: include/xen/xencomm.h:43:
+#define XENCOMM_MINI_ALIGNED(xc_desc, n)				\
+	struct xencomm_mini xc_desc ## _base[(n)]			\
+	__attribute__((__aligned__(sizeof(struct xencomm_mini))));	\
+	struct xencomm_mini *xc_desc = &xc_desc ## _base[0];

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#384: FILE: include/xen/xencomm.h:43:
+#define XENCOMM_MINI_ALIGNED(xc_desc, n)				\
+	struct xencomm_mini xc_desc ## _base[(n)]			\
+	__attribute__((__aligned__(sizeof(struct xencomm_mini))));	\
+	struct xencomm_mini *xc_desc = &xc_desc ## _base[0];

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(sizeof(struct xencomm_mini)) over __attribute__((__aligned__(sizeof(struct xencomm_mini))))
#386: FILE: include/xen/xencomm.h:45:
+	__attribute__((__aligned__(sizeof(struct xencomm_mini))));	\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'xc_desc' may be better as '(xc_desc)' to avoid precedence issues
#395: FILE: include/xen/xencomm.h:54:
+#define XENCOMM_MINI_ALIGNED(xc_desc, n)				\
+	unsigned char xc_desc ## _base[((n) + 1 ) *			\
+				       sizeof(struct xencomm_mini)];	\
+	struct xencomm_mini *xc_desc = (struct xencomm_mini *)		\
+		((unsigned long)xc_desc ## _base +			\
+		 (sizeof(struct xencomm_mini) -				\
+		  ((unsigned long)xc_desc ## _base) %			\
+		  sizeof(struct xencomm_mini)));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#395: FILE: include/xen/xencomm.h:54:
+#define XENCOMM_MINI_ALIGNED(xc_desc, n)				\
+	unsigned char xc_desc ## _base[((n) + 1 ) *			\
+				       sizeof(struct xencomm_mini)];	\
+	struct xencomm_mini *xc_desc = (struct xencomm_mini *)		\
+		((unsigned long)xc_desc ## _base +			\
+		 (sizeof(struct xencomm_mini) -				\
+		  ((unsigned long)xc_desc ## _base) %			\
+		  sizeof(struct xencomm_mini)));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#396: FILE: include/xen/xencomm.h:55:
+	unsigned char xc_desc ## _base[((n) + 1 ) *			\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: include/xen/xencomm.h:68:
+extern unsigned long xencomm_vtop(unsigned long vaddr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 27 warnings, 21 checks, 353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
