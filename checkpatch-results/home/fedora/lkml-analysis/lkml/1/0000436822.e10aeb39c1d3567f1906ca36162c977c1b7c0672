WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
UEFI 2.0 firmware. The EFI firmware that I have tested also had CSM supporting

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#113: FILE: arch/x86_64/Kconfig:257:
+config EFI
+	bool "Boot from EFI support (EXPERIMENTAL)"
+	default n
+	---help---
+
+	This enables the the kernel to boot on EFI platforms using
+	system configuration information passed to it from the firmware.
+	This also enables the kernel to use any EFI runtime services that are
+	available (such as the EFI variable services).
+	This option is only useful on systems that have EFI firmware
+	and will result in a kernel image that is ~8k larger. However,
+	even with this option, the resultant kernel should continue to
+	boot on existing non-EFI platforms.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#118: FILE: arch/x86_64/Kconfig:262:
+	This enables the the kernel to boot on EFI platforms using

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#149: FILE: include/asm-x86_64/bootsetup.h:20:
+#define EFI_SYSTAB (*((unsigned long *)(PARAM+0x1b8)))
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: include/asm-x86_64/bootsetup.h:21:
+#define EFI_LOADER_SIG ((unsigned char *)(PARAM+0x1c0))
                                                ^

CHECK:SPACING: No space is necessary after a cast
#151: FILE: include/asm-x86_64/bootsetup.h:22:
+#define EFI_MEMDESC_SIZE (*((unsigned int *) (PARAM+0x1c4)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: include/asm-x86_64/bootsetup.h:22:
+#define EFI_MEMDESC_SIZE (*((unsigned int *) (PARAM+0x1c4)))
                                                    ^

CHECK:SPACING: No space is necessary after a cast
#152: FILE: include/asm-x86_64/bootsetup.h:23:
+#define EFI_MEMDESC_VERSION (*((unsigned int *) (PARAM+0x1c8)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: include/asm-x86_64/bootsetup.h:23:
+#define EFI_MEMDESC_VERSION (*((unsigned int *) (PARAM+0x1c8)))
                                                       ^

CHECK:SPACING: No space is necessary after a cast
#153: FILE: include/asm-x86_64/bootsetup.h:24:
+#define EFI_MEMMAP_SIZE (*((unsigned int *) (PARAM+0x1cc)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: include/asm-x86_64/bootsetup.h:24:
+#define EFI_MEMMAP_SIZE (*((unsigned int *) (PARAM+0x1cc)))
                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: include/asm-x86_64/bootsetup.h:25:
+#define EFI_MEMMAP (*((unsigned long *)(PARAM+0x1d0)))
                                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: arch/x86_64/kernel/efi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#200: FILE: arch/x86_64/kernel/efi.c:39:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#202: FILE: arch/x86_64/kernel/efi.c:41:
+#include <asm/pgtable.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: arch/x86_64/kernel/efi.c:46:
+#define PFX ^I^I"EFI: "$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#223: FILE: arch/x86_64/kernel/efi.c:62:
+extern unsigned long efi_call_phys(void *fp, u64 arg_num, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited before semicolon
#227: FILE: arch/x86_64/kernel/efi.c:66:
+struct efi_memory_map memmap ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: arch/x86_64/kernel/efi.c:80:
+	unsigned int arg_size,stack_adjust_size;
 	                     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#244: FILE: arch/x86_64/kernel/efi.c:83:
+	if (va_num > EFI_ARG_NUM_MAX || va_num<0)	{
 	                                      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#244: FILE: arch/x86_64/kernel/efi.c:83:
+	if (va_num > EFI_ARG_NUM_MAX || va_num<0)	{
+		return EFI_LOAD_ERROR;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#247: FILE: arch/x86_64/kernel/efi.c:86:
+	if (va_num==0)
 	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: arch/x86_64/kernel/efi.c:90:
+^I/* The EFI arguments is stored in an array. Then later on it will be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#255: FILE: arch/x86_64/kernel/efi.c:94:
+	for (i = 0; i < va_num; i++) {
+		args[i] = va_arg(ap, unsigned long);
+	}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#259: FILE: arch/x86_64/kernel/efi.c:98:
+	arg_size = va_num*8;
 	                 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#260: FILE: arch/x86_64/kernel/efi.c:99:
+	stack_adjust_size = (va_num > EFI_REG_ARG_NUM? EFI_REG_ARG_NUM : va_num)*8;
 	                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#260: FILE: arch/x86_64/kernel/efi.c:99:
+	stack_adjust_size = (va_num > EFI_REG_ARG_NUM? EFI_REG_ARG_NUM : va_num)*8;
 	                                                                        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#266: FILE: arch/x86_64/kernel/efi.c:105:
+	__asm__ __volatile__(

WARNING:SPLIT_STRING: quoted string split across lines
#279: FILE: arch/x86_64/kernel/efi.c:118:
+		"lstack:"
+		"		cmp $4, %%r12;"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: arch/x86_64/kernel/efi.c:119:
+^I^I"^I^Ijle lregister;" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: arch/x86_64/kernel/efi.c:122:
+^I^I"^I^Idec %%r12;" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: arch/x86_64/kernel/efi.c:127:
+^I^I"lregister:"^I$

WARNING:SPLIT_STRING: quoted string split across lines
#289: FILE: arch/x86_64/kernel/efi.c:128:
+		"lregister:"	
+		"		mov %3, %%r14;"

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: arch/x86_64/kernel/efi.c:131:
+		"lloadregister:"
+		"		cmp %1, %%r12;"

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: arch/x86_64/kernel/efi.c:148:
+		"lcall:				"
+		"		sub %2, %%rsp;"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#323: FILE: arch/x86_64/kernel/efi.c:162:
+		:"r"((unsigned long)va_num),
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: arch/x86_64/kernel/efi.c:167:
+^I^I:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" $

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: arch/x86_64/kernel/efi.c:167:
+		:"rsp","rbx","rax","r11","r12","r13","r14","rcx","rdx","r8","r9" 
 		                                                           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#335: FILE: arch/x86_64/kernel/efi.c:174:
+	return uefi_call_wrapper((void*)efi.systab->runtime->get_time,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: arch/x86_64/kernel/efi.c:177:
+^I^I^I^I^I(u64)tc); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#343: FILE: arch/x86_64/kernel/efi.c:182:
+	return uefi_call_wrapper((void*)efi.systab->runtime->set_time,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: arch/x86_64/kernel/efi.c:183:
+^I^I^I^I^IEFI_ARG_NUM_SET_TIME, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: arch/x86_64/kernel/efi.c:184:
+^I^I^I^I^I(u64)tm); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/x86_64/kernel/efi.c:189:
+                                            efi_time_t *tm)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: arch/x86_64/kernel/efi.c:189:
+_efi_get_wakeup_time(efi_bool_t *enabled, efi_bool_t *pending,
+                                            efi_time_t *tm)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/x86_64/kernel/efi.c:189:
+                                            efi_time_t *tm)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#352: FILE: arch/x86_64/kernel/efi.c:191:
+	return uefi_call_wrapper((void*)efi.systab->runtime->get_wakeup_time,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: arch/x86_64/kernel/efi.c:192:
+^I^I^I^I^IEFI_ARG_NUM_GET_WAKEUP_TIME, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: arch/x86_64/kernel/efi.c:195:
+^I^I^I^I^I(u64)tm); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#361: FILE: arch/x86_64/kernel/efi.c:200:
+	return uefi_call_wrapper((void*)efi.systab->runtime->set_wakeup_time,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: arch/x86_64/kernel/efi.c:201:
+^I^I^I^I^IEFI_ARG_NUM_SET_WAKEUP_TIME, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: arch/x86_64/kernel/efi.c:203:
+^I^I^I^I^I(u64)(tm)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/x86_64/kernel/efi.c:208:
+                                         unsigned long *data_size, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: arch/x86_64/kernel/efi.c:208:
+_efi_get_variable(efi_char16_t *name, efi_guid_t *vendor, u32 *attr,
+                                         unsigned long *data_size, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/x86_64/kernel/efi.c:208:
+                                         unsigned long *data_size, void *data)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#371: FILE: arch/x86_64/kernel/efi.c:210:
+	return uefi_call_wrapper((void*)efi.systab->runtime->get_variable,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: arch/x86_64/kernel/efi.c:211:
+^I^I^I^I^IEFI_ARG_NUM_GET_VARIABLE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: arch/x86_64/kernel/efi.c:216:
+^I^I^I^I^I(u64)data); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: arch/x86_64/kernel/efi.c:221:
+                                              efi_guid_t *vendor)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: arch/x86_64/kernel/efi.c:221:
+_efi_get_next_variable(unsigned long *name_size, efi_char16_t *name,
+                                              efi_guid_t *vendor)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/x86_64/kernel/efi.c:221:
+                                              efi_guid_t *vendor)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#384: FILE: arch/x86_64/kernel/efi.c:223:
+	return uefi_call_wrapper((void*)efi.systab->runtime->get_next_variable,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: arch/x86_64/kernel/efi.c:224:
+^I^I^I^I^IEFI_ARG_NUM_GET_NEXT_VARIABLE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: arch/x86_64/kernel/efi.c:227:
+^I^I^I^I^I(u64)vendor); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: arch/x86_64/kernel/efi.c:231:
+static efi_status_t _efi_set_variable(efi_char16_t *name, efi_guid_t *vendor,
+					u64 attr, u64 data_size,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#395: FILE: arch/x86_64/kernel/efi.c:234:
+	return uefi_call_wrapper((void*)efi.systab->runtime->set_variable,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: arch/x86_64/kernel/efi.c:235:
+^I^I^I^I^IEFI_ARG_NUM_SET_VARIABLE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: arch/x86_64/kernel/efi.c:240:
+^I^I^I^I^I(u64)data); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#406: FILE: arch/x86_64/kernel/efi.c:245:
+	return uefi_call_wrapper((void*)efi.systab->runtime->get_next_high_mono_count,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: arch/x86_64/kernel/efi.c:247:
+^I^I^I^I^I(u64)count); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: arch/x86_64/kernel/efi.c:251:
+                                 unsigned long data_size, efi_char16_t *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: arch/x86_64/kernel/efi.c:251:
+static efi_status_t _efi_reset_system(int reset_type, efi_status_t status,
+                                 unsigned long data_size, efi_char16_t *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/x86_64/kernel/efi.c:251:
+                                 unsigned long data_size, efi_char16_t *data)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#414: FILE: arch/x86_64/kernel/efi.c:253:
+	return uefi_call_wrapper((void*)efi.systab->runtime->reset_system,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: arch/x86_64/kernel/efi.c:254:
+^I^I^I^I^IEFI_ARG_NUM_RESET_SYSTEM, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: arch/x86_64/kernel/efi.c:258:
+^I^I^I^I^I(u64)data); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: arch/x86_64/kernel/efi.c:262:
+                                                unsigned long descriptor_size,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/x86_64/kernel/efi.c:262:
+static efi_status_t _efi_set_virtual_address_map(unsigned long memory_map_size,
+                                                unsigned long descriptor_size,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/x86_64/kernel/efi.c:262:
+                                                unsigned long descriptor_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: arch/x86_64/kernel/efi.c:263:
+                                                u32 descriptor_version,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/x86_64/kernel/efi.c:263:
+                                                u32 descriptor_version,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: arch/x86_64/kernel/efi.c:264:
+                                                efi_memory_desc_t *virtual_map)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/x86_64/kernel/efi.c:264:
+                                                efi_memory_desc_t *virtual_map)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#427: FILE: arch/x86_64/kernel/efi.c:266:
+	return uefi_call_wrapper((void*)efi.systab->runtime->set_virtual_address_map,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: arch/x86_64/kernel/efi.c:267:
+^I^I^I^I^IEFI_ARG_NUM_SET_VIRTUAL_ADDRESS_MAP, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: arch/x86_64/kernel/efi.c:271:
+^I^I^I^I^I(u64)virtual_map); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: arch/x86_64/kernel/efi.c:281:
+^Ivaddress = (unsigned long)__va(0x0UL);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: arch/x86_64/kernel/efi.c:284:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: arch/x86_64/kernel/efi.c:309:
+	status = efi_call_phys(efi_phys.set_virtual_address_map,
+					EFI_ARG_NUM_SET_VIRTUAL_ADDRESS_MAP,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: arch/x86_64/kernel/efi.c:312:
+^I^I^I^I^I(unsigned long)descriptor_version, $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#482: FILE: arch/x86_64/kernel/efi.c:321:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: arch/x86_64/kernel/efi.c:326:
+	status = efi_call_phys(efi_phys.get_time,
+					EFI_ARG_NUM_GET_TIME,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#497: FILE: arch/x86_64/kernel/efi.c:336:
+^Iefi_status_t ^Istatus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#498: FILE: arch/x86_64/kernel/efi.c:337:
+^Iefi_time_t ^Ieft;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: arch/x86_64/kernel/efi.c:338:
+^Iefi_time_cap_t ^Icap;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#505: FILE: arch/x86_64/kernel/efi.c:344:
+		printk("Ooops: efitime: can't read time!\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#511: FILE: arch/x86_64/kernel/efi.c:350:
+	if (((abs(real_minutes - eft.minute) + 15)/30) & 1)
 	                                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: arch/x86_64/kernel/efi.c:360:
+		printk("Ooops: efitime: can't write time!\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#526: FILE: arch/x86_64/kernel/efi.c:365:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: arch/x86_64/kernel/efi.c:383:
+ ^I^Istatus = efi.get_time(&eft, &cap);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: arch/x86_64/kernel/efi.c:383:
+ ^I^Istatus = efi.get_time(&eft, &cap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: arch/x86_64/kernel/efi.c:383:
+ ^I^Istatus = efi.get_time(&eft, &cap);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#550: FILE: arch/x86_64/kernel/efi.c:389:
+		printk("Oops: efitime: can't read time status: 0x%lx\n",status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: arch/x86_64/kernel/efi.c:389:
+		printk("Oops: efitime: can't read time status: 0x%lx\n",status);
 		                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: arch/x86_64/kernel/efi.c:395:
+inline int is_available_memory(efi_memory_desc_t * md)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#561: FILE: arch/x86_64/kernel/efi.c:400:
+	switch (md->type) {
+		case EFI_LOADER_CODE:
+		case EFI_LOADER_DATA:
+		case EFI_BOOT_SERVICES_CODE:
+		case EFI_BOOT_SERVICES_DATA:
+		case EFI_CONVENTIONAL_MEMORY:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: arch/x86_64/kernel/efi.c:429:
+{ $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#593: FILE: arch/x86_64/kernel/efi.c:432:
+	for (; i < PTRS_PER_PUD && addr < end; i++, addr += PUD_SIZE ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: arch/x86_64/kernel/efi.c:437:
+			pmd = pmd_offset(pud,0);
 			                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: arch/x86_64/kernel/efi.c:444:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: arch/x86_64/kernel/efi.c:445:
+^Iunsigned long next; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: arch/x86_64/kernel/efi.c:456:
+^I^Iif (next > end) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: arch/x86_64/kernel/efi.c:457:
+^I^I^Inext = end; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: arch/x86_64/kernel/efi.c:459:
+^I} $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#623: FILE: arch/x86_64/kernel/efi.c:462:
+}
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: arch/x86_64/kernel/efi.c:467:
+        efi_memory_desc_t *md;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/x86_64/kernel/efi.c:467:
+        efi_memory_desc_t *md;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: arch/x86_64/kernel/efi.c:468:
+        void *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/x86_64/kernel/efi.c:468:
+        void *p;$

CHECK:SPACING: No space is necessary after a cast
#631: FILE: arch/x86_64/kernel/efi.c:470:
+	memmap.map = __va((unsigned long) memmap.phys_map);

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: arch/x86_64/kernel/efi.c:474:
+        for (p = memmap.map; p < memmap.map_end; p += memmap.desc_size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/x86_64/kernel/efi.c:474:
+        for (p = memmap.map; p < memmap.map_end; p += memmap.desc_size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: arch/x86_64/kernel/efi.c:475:
+                md = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: arch/x86_64/kernel/efi.c:475:
+                md = p;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: arch/x86_64/kernel/efi.c:476:
+               if (md->type == EFI_RUNTIME_SERVICES_CODE && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: arch/x86_64/kernel/efi.c:476:
+               if (md->type == EFI_RUNTIME_SERVICES_CODE && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/x86_64/kernel/efi.c:476:
+               if (md->type == EFI_RUNTIME_SERVICES_CODE && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#637: FILE: arch/x86_64/kernel/efi.c:476:
+               if (md->type == EFI_RUNTIME_SERVICES_CODE && 
[...]
+			change_rt_pmd(md->phys_addr, md->phys_addr + 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: arch/x86_64/kernel/efi.c:477:
+               if (md->type == EFI_RUNTIME_SERVICES_CODE && 
+			(__supported_pte_mask & _PAGE_NX))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: arch/x86_64/kernel/efi.c:478:
+^I^I^Ichange_rt_pmd(md->phys_addr, md->phys_addr + $

WARNING:SPLIT_STRING: quoted string split across lines
#654: FILE: arch/x86_64/kernel/efi.c:493:
+		early_printk("mem%02u: type=%u, attr=0x%lx, "
+				"range=[0x%016lx-0x%016lx) (%luMB)\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#670: FILE: arch/x86_64/kernel/efi.c:509:
+	memset(&efi, 0, sizeof(efi) );

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#674: FILE: arch/x86_64/kernel/efi.c:513:
+	memmap.phys_map = (void*)EFI_MEMMAP;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#675: FILE: arch/x86_64/kernel/efi.c:514:
+	memmap.nr_map = EFI_MEMMAP_SIZE/EFI_MEMDESC_SIZE;
 	                               ^

CHECK:SPACING: No space is necessary after a cast
#679: FILE: arch/x86_64/kernel/efi.c:518:
+	efi.systab = (efi_system_table_t *) early_ioremap(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#679: FILE: arch/x86_64/kernel/efi.c:518:
+	efi.systab = (efi_system_table_t *) early_ioremap(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#688: FILE: arch/x86_64/kernel/efi.c:527:
+		printk(KERN_ERR PFX "Woah! EFI system table signature incorrect\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#690: FILE: arch/x86_64/kernel/efi.c:529:
+		printk(KERN_ERR PFX

WARNING:SPLIT_STRING: quoted string split across lines
#692: FILE: arch/x86_64/kernel/efi.c:531:
+		       "Warning: EFI system table major version mismatch: "
+		       "got %d.%02d, expected %d.%02d\n",

CHECK:SPACING: No space is necessary after a cast
#706: FILE: arch/x86_64/kernel/efi.c:545:
+	c16 = (efi_char16_t *) early_ioremap(efi.systab->fw_vendor, 2);

CHECK:BRACES: braces {} should be used on all arms of this statement
#707: FILE: arch/x86_64/kernel/efi.c:546:
+	if (c16) {
[...]
+	} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: arch/x86_64/kernel/efi.c:547:
+^I^Ifor (i = 0; i < sizeof(vendor) && *c16; ++i) $

CHECK:BRACES: Unbalanced braces around else statement
#711: FILE: arch/x86_64/kernel/efi.c:550:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#712: FILE: arch/x86_64/kernel/efi.c:551:
+		printk(KERN_ERR PFX "Could not map the firmware vendor!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#714: FILE: arch/x86_64/kernel/efi.c:553:
+	printk(KERN_INFO PFX "EFI v%u.%.02u by %s \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#714: FILE: arch/x86_64/kernel/efi.c:553:
+	printk(KERN_INFO PFX "EFI v%u.%.02u by %s \n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#721: FILE: arch/x86_64/kernel/efi.c:560:
+	config_tables = (efi_config_table_t *)early_ioremap( efi.systab->tables,

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: arch/x86_64/kernel/efi.c:561:
+^I^I^I        efi.systab->nr_tables * sizeof(efi_config_table_t));$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!config_tables"
#723: FILE: arch/x86_64/kernel/efi.c:562:
+	if (config_tables == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#724: FILE: arch/x86_64/kernel/efi.c:563:
+		printk(KERN_ERR PFX "Could not map EFI Configuration Table!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#729: FILE: arch/x86_64/kernel/efi.c:568:
+			printk(KERN_INFO " MPS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#730: FILE: arch/x86_64/kernel/efi.c:569:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#730: FILE: arch/x86_64/kernel/efi.c:569:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#731: FILE: arch/x86_64/kernel/efi.c:570:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#733: FILE: arch/x86_64/kernel/efi.c:572:
+			printk(KERN_INFO " ACPI 2.0=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#734: FILE: arch/x86_64/kernel/efi.c:573:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#734: FILE: arch/x86_64/kernel/efi.c:573:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#735: FILE: arch/x86_64/kernel/efi.c:574:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#737: FILE: arch/x86_64/kernel/efi.c:576:
+			printk(KERN_INFO " ACPI=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#738: FILE: arch/x86_64/kernel/efi.c:577:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#738: FILE: arch/x86_64/kernel/efi.c:577:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#739: FILE: arch/x86_64/kernel/efi.c:578:
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#741: FILE: arch/x86_64/kernel/efi.c:580:
+			printk(KERN_INFO " SMBIOS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#742: FILE: arch/x86_64/kernel/efi.c:581:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#742: FILE: arch/x86_64/kernel/efi.c:581:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#743: FILE: arch/x86_64/kernel/efi.c:582:
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#745: FILE: arch/x86_64/kernel/efi.c:584:
+			printk(KERN_INFO " HCDP=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#746: FILE: arch/x86_64/kernel/efi.c:585:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#746: FILE: arch/x86_64/kernel/efi.c:585:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#747: FILE: arch/x86_64/kernel/efi.c:586:
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#749: FILE: arch/x86_64/kernel/efi.c:588:
+			printk(KERN_INFO " UGA=0x%lx ", config_tables[i].table);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#752: FILE: arch/x86_64/kernel/efi.c:591:
+	printk(KERN_INFO "\n");

CHECK:SPACING: No space is necessary after a cast
#760: FILE: arch/x86_64/kernel/efi.c:599:
+	runtime = (efi_runtime_services_t *) early_ioremap((unsigned long)

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: arch/x86_64/kernel/efi.c:601:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#762: FILE: arch/x86_64/kernel/efi.c:601:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

CHECK:BRACES: braces {} should be used on all arms of this statement
#763: FILE: arch/x86_64/kernel/efi.c:602:
+	if (runtime != NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "runtime"
#763: FILE: arch/x86_64/kernel/efi.c:602:
+	if (runtime != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: arch/x86_64/kernel/efi.c:604:
+^I ^I * We will only need *early* access to the following$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#765: FILE: arch/x86_64/kernel/efi.c:604:
+^I ^I * We will only need *early* access to the following$

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: arch/x86_64/kernel/efi.c:607:
+ ^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#768: FILE: arch/x86_64/kernel/efi.c:607:
+ ^I ^I */$

CHECK:SPACING: No space is necessary after a cast
#769: FILE: arch/x86_64/kernel/efi.c:608:
+		efi_phys.get_time = (efi_get_time_t *) runtime->get_time;

CHECK:BRACES: Unbalanced braces around else statement
#772: FILE: arch/x86_64/kernel/efi.c:611:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#773: FILE: arch/x86_64/kernel/efi.c:612:
+		printk(KERN_ERR PFX "Could not map the runtime service table!\n");

CHECK:SPACING: No space is necessary after a cast
#776: FILE: arch/x86_64/kernel/efi.c:615:
+	memmap.map = (efi_memory_desc_t *) early_ioremap(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#776: FILE: arch/x86_64/kernel/efi.c:615:
+	memmap.map = (efi_memory_desc_t *) early_ioremap(

CHECK:SPACING: No space is necessary after a cast
#777: FILE: arch/x86_64/kernel/efi.c:616:
+					(unsigned long) EFI_MEMMAP,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memmap.map"
#779: FILE: arch/x86_64/kernel/efi.c:618:
+	if (memmap.map == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#780: FILE: arch/x86_64/kernel/efi.c:619:
+		printk(KERN_ERR PFX "Could not map the EFI memory map!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: arch/x86_64/kernel/efi.c:620:
+        if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: arch/x86_64/kernel/efi.c:620:
+        if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#781: FILE: arch/x86_64/kernel/efi.c:620:
+        if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: arch/x86_64/kernel/efi.c:621:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" $

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: arch/x86_64/kernel/efi.c:621:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: arch/x86_64/kernel/efi.c:621:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#782: FILE: arch/x86_64/kernel/efi.c:621:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" 

WARNING:SPLIT_STRING: quoted string split across lines
#783: FILE: arch/x86_64/kernel/efi.c:622:
+                printk(KERN_WARNING PFX "Kernel-defined memdesc" 
+			"doesn't match the one from EFI!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: arch/x86_64/kernel/efi.c:623:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: arch/x86_64/kernel/efi.c:623:
+        }$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= (unsigned long)efi_phys.systab'
#817: FILE: arch/x86_64/kernel/efi.c:656:
+		if ((md->phys_addr <= (unsigned long)efi_phys.systab) &&
+				((unsigned long)efi_phys.systab < end))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: arch/x86_64/kernel/efi.c:657:
+		if ((md->phys_addr <= (unsigned long)efi_phys.systab) &&
+				((unsigned long)efi_phys.systab < end))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#819: FILE: arch/x86_64/kernel/efi.c:658:
+^I^I^Iefi.systab = (efi_system_table_t *) $

CHECK:SPACING: No space is necessary after a cast
#819: FILE: arch/x86_64/kernel/efi.c:658:
+			efi.systab = (efi_system_table_t *) 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#825: FILE: arch/x86_64/kernel/efi.c:664:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#827: FILE: arch/x86_64/kernel/efi.c:666:
+	status = phys_efi_set_virtual_address_map(

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: arch/x86_64/kernel/efi.c:670:
+^I^I       ^Imemmap.phys_map);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#831: FILE: arch/x86_64/kernel/efi.c:670:
+^I^I       ^Imemmap.phys_map);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#834: FILE: arch/x86_64/kernel/efi.c:673:
+		printk (KERN_ALERT "You are screwed! "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#834: FILE: arch/x86_64/kernel/efi.c:673:
+		printk (KERN_ALERT "You are screwed! "

WARNING:SPLIT_STRING: quoted string split across lines
#835: FILE: arch/x86_64/kernel/efi.c:674:
+		printk (KERN_ALERT "You are screwed! "
+			"Unable to switch EFI into virtual mode "

WARNING:SPLIT_STRING: quoted string split across lines
#836: FILE: arch/x86_64/kernel/efi.c:675:
+			"Unable to switch EFI into virtual mode "
+			"(status=%lx)\n", status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#926: FILE: arch/x86_64/kernel/efi.c:765:
+			printk(KERN_ERR PFX "Failed to allocate res %s : 0x%llx-0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: arch/x86_64/kernel/efi.c:766:
+			printk(KERN_ERR PFX "Failed to allocate res %s : 0x%llx-0x%llx\n",
+				res->name, res->start, res->end);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#949: FILE: arch/x86_64/kernel/efi.c:788:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#950: FILE: arch/x86_64/kernel/efi.c:789:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#950: FILE: arch/x86_64/kernel/efi.c:789:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#963: FILE: arch/x86_64/kernel/efi.c:802:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT))))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#964: FILE: arch/x86_64/kernel/efi.c:803:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT))))
 			                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#990: FILE: arch/x86_64/kernel/efi_stub.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: arch/x86_64/kernel/efi_stub.S:15:
+ * efi_call_phys(void *,unsigned long, ...) $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#1006: FILE: arch/x86_64/kernel/efi_stub.S:17:
+ *	argument 0: funtion pointer to EFI runtime service funtion.
   	            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#1006: FILE: arch/x86_64/kernel/efi_stub.S:17:
+ *	argument 0: funtion pointer to EFI runtime service funtion.
   	                                                   ^^^^^^^

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#1007: FILE: arch/x86_64/kernel/efi_stub.S:18:
+ *	argument 1: number of arguments passed to EFI runtme service funtion.
   	                                                             ^^^^^^^

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#1008: FILE: arch/x86_64/kernel/efi_stub.S:19:
+ *	argument 2,...: arguments passed to EFI runtime service funtion.
   	                                                        ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: arch/x86_64/kernel/efi_stub.S:21:
+ * Currently there are only two runtime services are called in kernel: $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 97 errors, 82 warnings, 56 checks, 1018 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436822.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
