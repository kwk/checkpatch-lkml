WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
 drivers/ata/libata-core.c                          |  196 +++++++++++++++++++-

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/ata/ahci.c:53:
+static int ahci_enable_alpm(struct ata_port *ap,
+		enum link_pm policy);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#190: FILE: drivers/ata/ahci.c:877:
+	msleep(10);

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/ata/ahci.c:886:
+ ^I * Clear flag to indicate that we should ignore all PhyRdy$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: drivers/ata/ahci.c:886:
+ ^I * Clear flag to indicate that we should ignore all PhyRdy$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/ata/ahci.c:887:
+ ^I * state changes$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: drivers/ata/ahci.c:887:
+ ^I * state changes$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/ata/ahci.c:888:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: drivers/ata/ahci.c:888:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/ata/ahci.c:892:
+ ^I * Enable interrupts on Phy Ready.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: drivers/ata/ahci.c:892:
+ ^I * Enable interrupts on Phy Ready.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/ata/ahci.c:893:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: drivers/ata/ahci.c:893:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/ata/ahci.c:898:
+ ^I * don't change the link pm policy - we can be called$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: drivers/ata/ahci.c:898:
+ ^I * don't change the link pm policy - we can be called$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/ata/ahci.c:899:
+ ^I * just to turn of link pm temporarily$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: drivers/ata/ahci.c:899:
+ ^I * just to turn of link pm temporarily$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/ata/ahci.c:900:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: drivers/ata/ahci.c:900:
+ ^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/ata/ahci.c:904:
+static int ahci_enable_alpm(struct ata_port *ap,
+	enum link_pm policy)

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/ata/ahci.c:920:
+ ^I^I * if we came here with NOT_AVAILABLE,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: drivers/ata/ahci.c:920:
+ ^I^I * if we came here with NOT_AVAILABLE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/ata/ahci.c:921:
+ ^I^I * it just means this is the first time we$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: drivers/ata/ahci.c:921:
+ ^I^I * it just means this is the first time we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/ata/ahci.c:922:
+ ^I^I * have tried to enable - default to max performance,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: drivers/ata/ahci.c:922:
+ ^I^I * have tried to enable - default to max performance,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/ata/ahci.c:923:
+ ^I^I * and let the user go to lower power modes on request.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: drivers/ata/ahci.c:923:
+ ^I^I * and let the user go to lower power modes on request.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/ata/ahci.c:924:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: drivers/ata/ahci.c:924:
+ ^I^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/ata/ahci.c:940:
+ ^I * Disable interrupts on Phy Ready. This keeps us from$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/ata/ahci.c:940:
+ ^I * Disable interrupts on Phy Ready. This keeps us from$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/ata/ahci.c:941:
+ ^I * getting woken up due to spurious phy ready interrupts$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/ata/ahci.c:941:
+ ^I * getting woken up due to spurious phy ready interrupts$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/ata/ahci.c:944:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: drivers/ata/ahci.c:944:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: drivers/ata/ahci.c:949:
+ ^I * Set a flag to indicate that we should ignore all PhyRdy$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: drivers/ata/ahci.c:949:
+ ^I * Set a flag to indicate that we should ignore all PhyRdy$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/ata/ahci.c:950:
+ ^I * state changes since these can happen now whenever we$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: drivers/ata/ahci.c:950:
+ ^I * state changes since these can happen now whenever we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: drivers/ata/ahci.c:951:
+ ^I * change link state$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: drivers/ata/ahci.c:951:
+ ^I * change link state$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: drivers/ata/ahci.c:952:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: drivers/ata/ahci.c:952:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/ata/ahci.c:959:
+ ^I * Set ASP based on Policy$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: drivers/ata/ahci.c:959:
+ ^I * Set ASP based on Policy$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: drivers/ata/ahci.c:960:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: drivers/ata/ahci.c:960:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/ata/ahci.c:964:
+ ^I * Setting this bit will instruct the HBA to aggressively$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#277: FILE: drivers/ata/ahci.c:964:
+ ^I * Setting this bit will instruct the HBA to aggressively$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/ata/ahci.c:965:
+ ^I * enter a lower power link state when it's appropriate and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: drivers/ata/ahci.c:965:
+ ^I * enter a lower power link state when it's appropriate and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/ata/ahci.c:966:
+ ^I * based on the value set above for ASP$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/ata/ahci.c:966:
+ ^I * based on the value set above for ASP$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: drivers/ata/ahci.c:967:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: drivers/ata/ahci.c:967:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: drivers/ata/ahci.c:1647:
+ ^I * just a power state change, we should$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: drivers/ata/ahci.c:1647:
+ ^I * just a power state change, we should$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/ata/ahci.c:1648:
+ ^I * clear out this, plus the PhyRdy/Comm$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: drivers/ata/ahci.c:1648:
+ ^I * clear out this, plus the PhyRdy/Comm$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/ata/ahci.c:1649:
+ ^I * Wake bits from Serror$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: drivers/ata/ahci.c:1649:
+ ^I * Wake bits from Serror$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/ata/ahci.c:1650:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: drivers/ata/ahci.c:1650:
+ ^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/ata/ahci.c:1652:
+	if ((hpriv->flags & AHCI_HFLAG_NO_HOTPLUG) &&
+		(status & PORT_IRQ_PHYRDY)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/ata/libata-core.c:669:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_ENABLE, SATA_DIPM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/ata/libata-core.c:682:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_DISABLE, SATA_DIPM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: drivers/ata/libata-core.c:695:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_DISABLE, SATA_DIPM);

CHECK:SPACING: No space is necessary after a cast
#407: FILE: drivers/ata/libata-core.c:700:
+	(void) err_mask;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#419: FILE: drivers/ata/libata-core.c:712:
+ * ^Ipolicy, and then call driver specific callbacks for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#451: FILE: drivers/ata/libata-core.c:744:
+ * ^Ipolicy,  call driver specific callbacks for disabling Host$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#452: FILE: drivers/ata/libata-core.c:745:
+ * ^IInitiated Power management.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: drivers/ata/libata-core.c:789:
+		struct ata_port *ap = host->ports[i];
+		ata_lpm_schedule(ap, ap->pm_policy);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#500: FILE: drivers/ata/libata-core.c:793:
+
+

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#550: FILE: drivers/ata/libata-core.c:6578:
+	/* reenable link pm */
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: drivers/ata/libata-scsi.c:135:
+static ssize_t ata_scsi_lpm_put(struct class_device *class_dev,
+	const char *buf, size_t count)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#618: FILE: drivers/ata/libata-scsi.c:137:
+	struct Scsi_Host *shost = class_to_shost(class_dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#632: FILE: drivers/ata/libata-scsi.c:151:
+		const int len = strlen(link_pm_policy[i].name);
+		if (strncmp(link_pm_policy[i].name, buf, len) == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/ata/libata-scsi.c:152:
+		if (strncmp(link_pm_policy[i].name, buf, len) == 0 &&
+		   buf[len] == '\n') {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#658: FILE: drivers/ata/libata-scsi.c:177:
+CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/ata/libata-scsi.c:178:
+CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,
+		ata_scsi_lpm_show, ata_scsi_lpm_put);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#673: FILE: drivers/ata/libata.h:104:
+extern void ata_dev_enable_pm(struct ata_device *dev, enum link_pm policy);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#674: FILE: drivers/ata/libata.h:105:
+extern void ata_lpm_schedule(struct ata_port *ap, enum link_pm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#768: FILE: include/linux/libata.h:396:
+};
+extern struct class_device_attribute class_device_attr_link_power_management_policy;

WARNING:SPACING: Unnecessary space before function pointer arguments
#786: FILE: include/linux/libata.h:712:
+	int (*enable_pm) (struct ata_port *ap, enum link_pm policy);

WARNING:SPACING: Unnecessary space before function pointer arguments
#787: FILE: include/linux/libata.h:713:
+	void (*disable_pm) (struct ata_port *ap);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 42 warnings, 15 checks, 667 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363679.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
