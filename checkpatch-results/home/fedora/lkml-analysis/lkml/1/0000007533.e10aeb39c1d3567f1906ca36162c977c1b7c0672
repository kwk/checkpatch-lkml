WARNING:TYPO_SPELLING: 'convinience' may be misspelled - perhaps 'convenience'?
#36: 
for convinience. It can be thought as the first step of further cleanup. 
    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#308: FILE: include/linux/printk.h:1:
+#ifndef _PRINTK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 0) over __attribute__((format(printf, 1, 0)))
#367: FILE: include/linux/printk.h:60:
+	__attribute__ ((format (printf, 1, 0)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: include/linux/printk.h:61:
+asmlinkage int printk(const char *fmt, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#369: FILE: include/linux/printk.h:62:
+	__attribute__ ((format (printf, 1, 2))) __cold;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/linux/printk.h:64:
+extern int __printk_ratelimit(const char *func);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#372: FILE: include/linux/printk.h:65:
+#define printk_ratelimit() __printk_ratelimit(__func__)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/printk.h:66:
+extern bool printk_timed_ratelimit(unsigned long *caller_jiffies,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#386: FILE: include/linux/printk.h:79:
+		printk(x);			\

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 0) over __attribute__((format(printf, 1, 0)))
#393: FILE: include/linux/printk.h:86:
+	__attribute__ ((format (printf, 1, 0)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#395: FILE: include/linux/printk.h:88:
+static inline int printk(const char *s, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#396: FILE: include/linux/printk.h:89:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#397: FILE: include/linux/printk.h:90:
+static inline int __cold printk(const char *s, ...) { return 0; }

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#398: FILE: include/linux/printk.h:91:
+static inline int printk_ratelimit(void) { return 0; }

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#399: FILE: include/linux/printk.h:92:
+static inline bool printk_timed_ratelimit(unsigned long *caller_jiffies, \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#404: FILE: include/linux/printk.h:97:
+#define printk_once(x...) printk(x)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: include/linux/printk.h:104:
+extern int printk_needs_cpu(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#412: FILE: include/linux/printk.h:105:
+extern void printk_tick(void);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#414: FILE: include/linux/printk.h:107:
+extern void asmlinkage __attribute__((format(printf, 1, 2)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#414: FILE: include/linux/printk.h:107:
+extern void asmlinkage __attribute__((format(printf, 1, 2)))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#428: FILE: include/linux/printk.h:121:
+extern void wake_up_klogd(void);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#434: FILE: include/linux/printk.h:127:
+#define NIPQUAD(addr) \
+	((unsigned char *)&addr)[0], \
+	((unsigned char *)&addr)[1], \
+	((unsigned char *)&addr)[2], \
+	((unsigned char *)&addr)[3]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#434: FILE: include/linux/printk.h:127:
+#define NIPQUAD(addr) \
+	((unsigned char *)&addr)[0], \
+	((unsigned char *)&addr)[1], \
+	((unsigned char *)&addr)[2], \
+	((unsigned char *)&addr)[3]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#434: FILE: include/linux/printk.h:127:
+#define NIPQUAD(addr) \
+	((unsigned char *)&addr)[0], \
+	((unsigned char *)&addr)[1], \
+	((unsigned char *)&addr)[2], \
+	((unsigned char *)&addr)[3]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#446: FILE: include/linux/printk.h:139:
+	printk(KERN_EMERG pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#448: FILE: include/linux/printk.h:141:
+	printk(KERN_ALERT pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#450: FILE: include/linux/printk.h:143:
+	printk(KERN_CRIT pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#452: FILE: include/linux/printk.h:145:
+	printk(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#454: FILE: include/linux/printk.h:147:
+	printk(KERN_WARNING pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#456: FILE: include/linux/printk.h:149:
+	printk(KERN_NOTICE pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#458: FILE: include/linux/printk.h:151:
+	printk(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#459: FILE: include/linux/printk.h:152:
+#define pr_cont(fmt, ...) \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#460: FILE: include/linux/printk.h:153:
+	printk(KERN_CONT fmt, ##__VA_ARGS__)

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#460: FILE: include/linux/printk.h:153:
+	printk(KERN_CONT fmt, ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#465: FILE: include/linux/printk.h:158:
+	printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#468: FILE: include/linux/printk.h:161:
+	({ if (0) printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__); 0; })

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#474: FILE: include/linux/printk.h:167:
+	printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#481: FILE: include/linux/printk.h:174:
+	({ if (0) printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__); 0; })

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#496: FILE: include/linux/printk.h:189:
+		printk(fmt, ##__VA_ARGS__);		\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg_ratelimited([subsystem]dev, ... then dev_emerg_ratelimited(dev, ... then pr_emerg_ratelimited(...  to printk_ratelimited(KERN_EMERG ...
#504: FILE: include/linux/printk.h:197:
+	printk_ratelimited(KERN_EMERG pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert_ratelimited([subsystem]dev, ... then dev_alert_ratelimited(dev, ... then pr_alert_ratelimited(...  to printk_ratelimited(KERN_ALERT ...
#506: FILE: include/linux/printk.h:199:
+	printk_ratelimited(KERN_ALERT pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit_ratelimited([subsystem]dev, ... then dev_crit_ratelimited(dev, ... then pr_crit_ratelimited(...  to printk_ratelimited(KERN_CRIT ...
#508: FILE: include/linux/printk.h:201:
+	printk_ratelimited(KERN_CRIT pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err_ratelimited([subsystem]dev, ... then dev_err_ratelimited(dev, ... then pr_err_ratelimited(...  to printk_ratelimited(KERN_ERR ...
#510: FILE: include/linux/printk.h:203:
+	printk_ratelimited(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn_ratelimited([subsystem]dev, ... then dev_warn_ratelimited(dev, ... then pr_warn_ratelimited(...  to printk_ratelimited(KERN_WARNING ...
#512: FILE: include/linux/printk.h:205:
+	printk_ratelimited(KERN_WARNING pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice_ratelimited([subsystem]dev, ... then dev_notice_ratelimited(dev, ... then pr_notice_ratelimited(...  to printk_ratelimited(KERN_NOTICE ...
#514: FILE: include/linux/printk.h:207:
+	printk_ratelimited(KERN_NOTICE pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info_ratelimited([subsystem]dev, ... then dev_info_ratelimited(dev, ... then pr_info_ratelimited(...  to printk_ratelimited(KERN_INFO ...
#516: FILE: include/linux/printk.h:209:
+	printk_ratelimited(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg_ratelimited([subsystem]dev, ... then dev_dbg_ratelimited(dev, ... then pr_debug_ratelimited(...  to printk_ratelimited(KERN_DEBUG ...
#521: FILE: include/linux/printk.h:214:
+	printk_ratelimited(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg_ratelimited([subsystem]dev, ... then dev_dbg_ratelimited(dev, ... then pr_debug_ratelimited(...  to printk_ratelimited(KERN_DEBUG ...
#524: FILE: include/linux/printk.h:217:
+	({ if (0) printk_ratelimited(KERN_DEBUG pr_fmt(fmt), \

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000007533.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 40 warnings, 7 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000007533.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
