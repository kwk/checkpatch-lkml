WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#134: FILE: fs/ext4/extents.c:1206:
+	unsigned uninitialized = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#137: FILE: fs/ext4/extents.c:1208:
+	BUG_ON(ext4_ext_get_actual_len(newext) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#248: FILE: fs/ext4/extents.c:1513:
+				(unsigned long) ext4_ext_get_actual_len(ex));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#259: FILE: fs/ext4/extents.c:1521:
+				(unsigned long) ext4_ext_get_actual_len(ex),

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#282: FILE: fs/ext4/extents.c:1670:
 	if (from >= le32_to_cpu(ex->ee_block)
+	    && to == le32_to_cpu(ex->ee_block) + ee_len - 1) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#298: FILE: fs/ext4/extents.c:1683:
 	} else if (from == le32_to_cpu(ex->ee_block)
+		   && to <= le32_to_cpu(ex->ee_block) + ee_len - 1) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#313: FILE: fs/ext4/extents.c:1703:
+	unsigned uninitialized = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: fs/ext4/extents.c:2096:
+				ext4_ext_put_in_cache(inode, ee_block,
+							ee_len, ee_start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: fs/ext4/extents.c:2159:
+		ext4_ext_put_in_cache(inode, iblock, allocated, newblock,
+						EXT4_EXT_CACHE_EXTENT);

WARNING:SPLIT_STRING: quoted string split across lines
#465: FILE: fs/ext4/extents.c:2321:
+				   "ext4_ext_get_blocks returned 0! inode#%lu"
+				   ", block=%llu, max_blocks=%llu",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#480: FILE: fs/ext4/extents.c:2336:
+			if (buffer_new(&map_bh) && ((block + ret) >
[...]
+					nblocks = nblocks + ret;

WARNING:LINE_SPACING: Missing a blank line after declarations
#489: FILE: fs/ext4/extents.c:2345:
+			struct timespec now;
+			now = current_fs_time(inode->i_sb);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uninitialzed' may be misspelled - perhaps 'uninitialized'?
#561: FILE: include/linux/ext4_fs.h:231:
+ * want uninitialzed extents.
         ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#571: FILE: include/linux/ext4_fs.h:992:
+extern long ext4_fallocate(struct inode *inode, int mode, loff_t offset,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: include/linux/ext4_fs.h:993:
+extern long ext4_fallocate(struct inode *inode, int mode, loff_t offset,
+			  loff_t len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 8 checks, 508 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
