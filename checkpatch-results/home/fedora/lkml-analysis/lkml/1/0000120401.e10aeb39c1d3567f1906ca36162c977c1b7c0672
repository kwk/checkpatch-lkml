WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atomic_add', this function's name, in a string
#78: FILE: arch/arm/include/asm/atomic.h:52:
+	__asm__ __volatile__("@ atomic_add\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:MEMORY_BARRIER: memory barrier without comment
#94: FILE: arch/arm/include/asm/atomic.h:68:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#103: FILE: arch/arm/include/asm/atomic.h:80:
+	smp_mb();

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atomic_sub', this function's name, in a string
#113: FILE: arch/arm/include/asm/atomic.h:90:
+	__asm__ __volatile__("@ atomic_sub\n"

WARNING:MEMORY_BARRIER: memory barrier without comment
#129: FILE: arch/arm/include/asm/atomic.h:106:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#138: FILE: arch/arm/include/asm/atomic.h:118:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#147: FILE: arch/arm/include/asm/atomic.h:127:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#156: FILE: arch/arm/include/asm/atomic.h:140:
+	smp_mb();

CHECK:SPACING: No space is necessary after a cast
#165: FILE: arch/arm/include/asm/atomic.h:182:
+#define atomic_add(i, v)	(void) atomic_add_return(i, v)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#165: FILE: arch/arm/include/asm/atomic.h:182:
 }
+#define atomic_add(i, v)	(void) atomic_add_return(i, v)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#165: FILE: arch/arm/include/asm/atomic.h:182:
+#define atomic_add(i, v)	(void) atomic_add_return(i, v)

CHECK:SPACING: No space is necessary after a cast
#173: FILE: arch/arm/include/asm/atomic.h:196:
+#define atomic_sub(i, v)	(void) atomic_sub_return(i, v)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#173: FILE: arch/arm/include/asm/atomic.h:196:
 }
+#define atomic_sub(i, v)	(void) atomic_sub_return(i, v)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#173: FILE: arch/arm/include/asm/atomic.h:196:
+#define atomic_sub(i, v)	(void) atomic_sub_return(i, v)

WARNING:MEMORY_BARRIER: memory barrier without comment
#199: FILE: arch/arm/include/asm/atomic.h:247:
+#define smp_mb__before_atomic_dec()	smp_mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#200: FILE: arch/arm/include/asm/atomic.h:248:
+#define smp_mb__after_atomic_dec()	smp_mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#201: FILE: arch/arm/include/asm/atomic.h:249:
+#define smp_mb__before_atomic_inc()	smp_mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#202: FILE: arch/arm/include/asm/atomic.h:250:
+#define smp_mb__after_atomic_inc()	smp_mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#214: FILE: arch/arm/include/asm/system.h:251:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#257: FILE: arch/arm/include/asm/system.h:312:
+	smp_mb();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 14 warnings, 4 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
