CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#144: FILE: drivers/misc/sgi-xp/xpc.h:309:
+	spinlock_t lock;

WARNING:SPACING: Unnecessary space before function pointer arguments
#282: FILE: drivers/misc/sgi-xp/xpc.h:810:
+extern int (*xpc_n_of_deliverable_payloads) (struct xpc_channel *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#282: FILE: drivers/misc/sgi-xp/xpc.h:810:
+extern int (*xpc_n_of_deliverable_payloads) (struct xpc_channel *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#283: FILE: drivers/misc/sgi-xp/xpc.h:811:
+extern void *(*xpc_get_deliverable_payload) (struct xpc_channel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#283: FILE: drivers/misc/sgi-xp/xpc.h:811:
+extern void *(*xpc_get_deliverable_payload) (struct xpc_channel *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'xpc_notify_func' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#294: FILE: drivers/misc/sgi-xp/xpc.h:839:
+extern enum xp_retval (*xpc_send_payload) (struct xpc_channel *, u32, void *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#296: FILE: drivers/misc/sgi-xp/xpc.h:841:
+extern void (*xpc_received_payload) (struct xpc_channel *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#296: FILE: drivers/misc/sgi-xp/xpc.h:841:
+extern void (*xpc_received_payload) (struct xpc_channel *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#296: FILE: drivers/misc/sgi-xp/xpc.h:841:
+extern void (*xpc_received_payload) (struct xpc_channel *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: drivers/misc/sgi-xp/xpc.h:882:
+extern void xpc_deliver_payload(struct xpc_channel *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#305: FILE: drivers/misc/sgi-xp/xpc.h:882:
+extern void xpc_deliver_payload(struct xpc_channel *);

WARNING:SPLIT_STRING: quoted string split across lines
#374: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1700:
+			dev_dbg(xpc_chan, "notify->func() called, notify=0x%p "
+				"msg_number=%ld partid=%d channel=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#385: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1707:
+			dev_dbg(xpc_chan, "notify->func() returned, notify=0x%p"
+				" msg_number=%ld partid=%d channel=%d\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#545: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1965:
+			DBUG_ON(msg != NULL && (msg->flags & XPC_M_SN2_DONE));

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#546: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1966:
+			DBUG_ON(msg != NULL && !(msg->flags & XPC_M_SN2_READY));

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch_sn2->local_msgqueue'
#576: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1997:
+			msg = (struct xpc_msg_sn2 *)((u64)ch_sn2->
+						     local_msgqueue + (put %

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#634: FILE: drivers/misc/sgi-xp/xpc_sn2.c:2126:
+	struct xpc_msg_sn2 *msg = msg;

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#635: FILE: drivers/misc/sgi-xp/xpc_sn2.c:2127:
+	struct xpc_notify_sn2 *notify = notify;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch_sn2->remote_msgqueue'
#689: FILE: drivers/misc/sgi-xp/xpc_sn2.c:2230:
+			msg = (struct xpc_msg_sn2 *)((u64)ch_sn2->
+						     remote_msgqueue + (get %

WARNING:SPLIT_STRING: quoted string split across lines
#763: FILE: drivers/misc/sgi-xp/xpc_sn2.c:2363:
+		dev_err(xpc_part, "header portion of struct xpc_msg_sn2 is "
+			"larger than %d\n", XPC_MSG_HDR_MAX_SIZE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#778: FILE: drivers/misc/sgi-xp/xpc_uv.c:69:
+	if (page == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xpc_create_gru_mq_uv', this function's name, in a string
#779: FILE: drivers/misc/sgi-xp/xpc_uv.c:70:
+		dev_err(xpc_part, "xpc_create_gru_mq_uv() failed to alloc %d "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#780: FILE: drivers/misc/sgi-xp/xpc_uv.c:71:
+		dev_err(xpc_part, "xpc_create_gru_mq_uv() failed to alloc %d "
+			"bytes of memory on nid=%d for GRU mq\n", mq_size, nid);

WARNING:SPLIT_STRING: quoted string split across lines
#1097: FILE: drivers/misc/sgi-xp/xpc_uv.c:367:
+		dev_err(xpc_part, "received unknown activate_mq msg type=%d "
+			"from partition=%d\n", msg_hdr->type, XPC_PARTID(part));

CHECK:CAMELCASE: Avoid CamelCase: <xpBadMsgType>
#1112: FILE: drivers/misc/sgi-xp/xpc_uv.c:374:
+		part_uv->reason = xpBadMsgType;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1168: FILE: drivers/misc/sgi-xp/xpc_uv.c:406:
+	while ((msg_hdr = gru_get_next_message(xpc_activate_mq_uv)) != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xpc_handle_activate_IRQ_uv', this function's name, in a string
#1171: FILE: drivers/misc/sgi-xp/xpc_uv.c:409:
+			dev_err(xpc_part, "xpc_handle_activate_IRQ_uv() "

WARNING:SPLIT_STRING: quoted string split across lines
#1172: FILE: drivers/misc/sgi-xp/xpc_uv.c:410:
+			dev_err(xpc_part, "xpc_handle_activate_IRQ_uv() "
+				"received invalid partid=0x%x in message\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/misc/sgi-xp/xpc_uv.c:416:
+				xpc_handle_activate_mq_msg_uv(part, msg_hdr,
+							    &wakeup_hb_checker);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1193: FILE: drivers/misc/sgi-xp/xpc_uv.c:651:
+	return;
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "head->first"
#1212: FILE: drivers/misc/sgi-xp/xpc_uv.c:670:
+	if (head->first != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head->first"
#1214: FILE: drivers/misc/sgi-xp/xpc_uv.c:672:
+		if (head->first == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "head->last"
#1231: FILE: drivers/misc/sgi-xp/xpc_uv.c:689:
+	if (head->last != NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1237: FILE: drivers/misc/sgi-xp/xpc_uv.c:695:
+	BUG_ON(head->n_entries < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <xpSuccess>
#1265: FILE: drivers/misc/sgi-xp/xpc_uv.c:721:
+	return xpSuccess;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch_uv->send_msg_slots"
#1294: FILE: drivers/misc/sgi-xp/xpc_uv.c:790:
+		if (ch_uv->send_msg_slots == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpNoMemory>
#1312: FILE: drivers/misc/sgi-xp/xpc_uv.c:808:
+	return xpNoMemory;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch_uv->recv_msg_slots"
#1328: FILE: drivers/misc/sgi-xp/xpc_uv.c:824:
+		if (ch_uv->recv_msg_slots == NULL)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1363: FILE: drivers/misc/sgi-xp/xpc_uv.c:857:
+	if (ret == xpSuccess) {
+

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1382: FILE: drivers/misc/sgi-xp/xpc_uv.c:876:
+	DBUG_ON(!spin_is_locked(&ch->lock));

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entry"
#1440: FILE: drivers/misc/sgi-xp/xpc_uv.c:1012:
+		if (entry != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpNoWait>
#1444: FILE: drivers/misc/sgi-xp/xpc_uv.c:1016:
+			return xpNoWait;

CHECK:CAMELCASE: Avoid CamelCase: <xpInterrupted>
#1447: FILE: drivers/misc/sgi-xp/xpc_uv.c:1019:
+		if (ret != xpInterrupted && ret != xpTimeout)

CHECK:CAMELCASE: Avoid CamelCase: <xpTimeout>
#1447: FILE: drivers/misc/sgi-xp/xpc_uv.c:1019:
+		if (ret != xpInterrupted && ret != xpTimeout)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "func"
#1474: FILE: drivers/misc/sgi-xp/xpc_uv.c:1046:
+	if (func != NULL && cmpxchg(&msg_slot->func, func, NULL) == func) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1475: FILE: drivers/misc/sgi-xp/xpc_uv.c:1047:
+	if (func != NULL && cmpxchg(&msg_slot->func, func, NULL) == func) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#1479: FILE: drivers/misc/sgi-xp/xpc_uv.c:1051:
+		dev_dbg(xpc_chan, "msg_slot->func() called, msg_slot=0x%p "
+			"msg_slot_number=%d partid=%d channel=%d\n", msg_slot,

WARNING:SPLIT_STRING: quoted string split across lines
#1485: FILE: drivers/misc/sgi-xp/xpc_uv.c:1057:
+		dev_dbg(xpc_chan, "msg_slot->func() returned, msg_slot=0x%p "
+			"msg_slot_number=%d partid=%d channel=%d\n", msg_slot,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1499: FILE: drivers/misc/sgi-xp/xpc_uv.c:1071:
+	BUG_ON(msg_slot->msg_slot_number != msg->hdr.msg_slot_number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg_slot->func"
#1502: FILE: drivers/misc/sgi-xp/xpc_uv.c:1074:
+	if (msg_slot->func != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpMsgDelivered>
#1503: FILE: drivers/misc/sgi-xp/xpc_uv.c:1075:
+		xpc_notify_sender_uv(ch, msg_slot, xpMsgDelivered);

WARNING:SPLIT_STRING: quoted string split across lines
#1521: FILE: drivers/misc/sgi-xp/xpc_uv.c:1093:
+		dev_err(xpc_part, "xpc_handle_notify_IRQ_uv() received invalid "
+			"channel number=0x%x in message from partid=%d\n",

CHECK:CAMELCASE: Avoid CamelCase: <xpBadChannelNumber>
#1529: FILE: drivers/misc/sgi-xp/xpc_uv.c:1101:
+		part_uv->reason = xpBadChannelNumber;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1558: FILE: drivers/misc/sgi-xp/xpc_uv.c:1130:
+	BUG_ON(msg->hdr.msg_slot_number != msg_slot->hdr.msg_slot_number);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1559: FILE: drivers/misc/sgi-xp/xpc_uv.c:1131:
+	BUG_ON(msg_slot->hdr.size != 0);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1587: FILE: drivers/misc/sgi-xp/xpc_uv.c:1159:
+	while ((msg = gru_get_next_message(xpc_notify_mq_uv)) != NULL) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xpc_handle_notify_IRQ_uv', this function's name, in a string
#1590: FILE: drivers/misc/sgi-xp/xpc_uv.c:1162:
+			dev_err(xpc_part, "xpc_handle_notify_IRQ_uv() received "

WARNING:SPLIT_STRING: quoted string split across lines
#1591: FILE: drivers/misc/sgi-xp/xpc_uv.c:1163:
+			dev_err(xpc_part, "xpc_handle_notify_IRQ_uv() received "
+				"invalid partid=0x%x in message\n", partid);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1626: FILE: drivers/misc/sgi-xp/xpc_uv.c:1198:
+	    (ch->flags & XPC_C_CONNECTEDCALLOUT_MADE)) {
+

CHECK:CAMELCASE: Avoid CamelCase: <xpPayloadTooBig>
#1648: FILE: drivers/misc/sgi-xp/xpc_uv.c:1220:
+		return xpPayloadTooBig;

CHECK:CAMELCASE: Avoid CamelCase: <xpNotConnected>
#1657: FILE: drivers/misc/sgi-xp/xpc_uv.c:1229:
+		ret = xpNotConnected;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "func"
#1665: FILE: drivers/misc/sgi-xp/xpc_uv.c:1237:
+	if (func != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "func"
#1691: FILE: drivers/misc/sgi-xp/xpc_uv.c:1263:
+	if (func != NULL) {

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1700: FILE: drivers/misc/sgi-xp/xpc_uv.c:1272:
+		 * to put the the msg_slot back on the free list.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1732: FILE: drivers/misc/sgi-xp/xpc_uv.c:1304:
+	for (entry = 0; entry < ch->local_nentries; entry++) {
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg_slot->func"
#1737: FILE: drivers/misc/sgi-xp/xpc_uv.c:1309:
+		if (msg_slot->func != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entry"
#1754: FILE: drivers/misc/sgi-xp/xpc_uv.c:1326:
+		if (entry != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_notify_mq_uv"
#1824: FILE: drivers/misc/sgi-xp/xpc_uv.c:1425:
+	if (xpc_notify_mq_uv == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <xpUnknownReason>
#1902: FILE: drivers/misc/sgi-xp/xp.h:195:
+	xpUnknownReason		/* 61: unknown reason - must be last in enum */

WARNING:SPLIT_STRING: quoted string split across lines
#1946: FILE: drivers/misc/sgi-xp/xpc_channel.c:320:
 			"local_nentries=%d) received from partid=%d, "
+			"channel=%d\n", args->entry_size, args->local_nentries,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "payload"
#2037: FILE: drivers/misc/sgi-xp/xpc_channel.c:931:
+	if (payload != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#2049: FILE: drivers/misc/sgi-xp/xpc_channel.c:944:
+			dev_dbg(xpc_chan, "ch->func() called, payload=0x%p "
+				"partid=%d channel=%d\n", payload, ch->partid,

CHECK:CAMELCASE: Avoid CamelCase: <xpMsgReceived>
#2055: FILE: drivers/misc/sgi-xp/xpc_channel.c:948:
+			ch->func(xpMsgReceived, ch->partid, ch->number, payload,

WARNING:SPLIT_STRING: quoted string split across lines
#2062: FILE: drivers/misc/sgi-xp/xpc_channel.c:952:
+			dev_dbg(xpc_chan, "ch->func() returned, payload=0x%p "
+				"partid=%d channel=%d\n", payload, ch->partid,

WARNING:SPACING: Unnecessary space before function pointer arguments
#2142: FILE: drivers/misc/sgi-xp/xpc_main.c:191:
+int (*xpc_n_of_deliverable_payloads) (struct xpc_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2143: FILE: drivers/misc/sgi-xp/xpc_main.c:192:
+void *(*xpc_get_deliverable_payload) (struct xpc_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2155: FILE: drivers/misc/sgi-xp/xpc_main.c:223:
+enum xp_retval (*xpc_send_payload) (struct xpc_channel *ch, u32 flags,

WARNING:SPACING: Unnecessary space before function pointer arguments
#2159: FILE: drivers/misc/sgi-xp/xpc_main.c:227:
+void (*xpc_received_payload) (struct xpc_channel *ch, void *payload);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257899.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 47 warnings, 38 checks, 2083 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257899.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
