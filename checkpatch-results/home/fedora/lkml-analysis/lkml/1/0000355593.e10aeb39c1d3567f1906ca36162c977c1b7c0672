WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
      [S390] magic sysrq: check for in_atomic before doing an console_unblank

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ops->size > APPLDATA_MAX_REC_SIZE'
#135: FILE: arch/s390/appldata/appldata_base.c:441:
+	if ((ops->size > APPLDATA_MAX_REC_SIZE) || (ops->size < 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ops->size < 0'
#135: FILE: arch/s390/appldata/appldata_base.c:441:
+	if ((ops->size > APPLDATA_MAX_REC_SIZE) || (ops->size < 0))

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#936: FILE: arch/s390/kernel/setup.c:350:
+	if ((!in_interrupt() && !in_atomic()) || oops_in_progress)

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1307: FILE: net/iucv/iucv.c:359:
+	parm = iucv_param[cpu];
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1316: FILE: net/iucv/iucv.c:380:
+	parm = iucv_param[cpu];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1325: FILE: net/iucv/iucv.c:404:
+	parm = iucv_param[cpu];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1337: FILE: net/iucv/iucv.c:461:
+	parm = iucv_param[cpu];
 	^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*iucv_irq_data[cpu])...) over kmalloc_node(sizeof(struct iucv_irq_data)...)
#1348: FILE: net/iucv/iucv.c:561:
+		iucv_irq_data[cpu] = kmalloc_node(sizeof(struct iucv_irq_data),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: net/iucv/iucv.c:562:
+		iucv_irq_data[cpu] = kmalloc_node(sizeof(struct iucv_irq_data),
+					GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1349: FILE: net/iucv/iucv.c:562:
+					GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));
 					          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1356: FILE: net/iucv/iucv.c:566:
+		iucv_param[cpu] = kmalloc_node(sizeof(union iucv_param),
+				     GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1356: FILE: net/iucv/iucv.c:566:
+				     GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));
 				               ^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1379: FILE: net/iucv/iucv.c:616:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1388: FILE: net/iucv/iucv.c:759:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1397: FILE: net/iucv/iucv.c:803:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1406: FILE: net/iucv/iucv.c:858:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1415: FILE: net/iucv/iucv.c:885:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1424: FILE: net/iucv/iucv.c:940:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1433: FILE: net/iucv/iucv.c:1007:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1442: FILE: net/iucv/iucv.c:1044:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1451: FILE: net/iucv/iucv.c:1078:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1460: FILE: net/iucv/iucv.c:1122:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1469: FILE: net/iucv/iucv.c:1176:
+	parm = iucv_param[smp_processor_id()];
 	^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*iucv_irq_data[cpu])...) over kmalloc_node(sizeof(struct iucv_irq_data)...)
#1510: FILE: net/iucv/iucv.c:1625:
+		iucv_irq_data[cpu] = kmalloc_node(sizeof(struct iucv_irq_data),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1511: FILE: net/iucv/iucv.c:1626:
+		iucv_irq_data[cpu] = kmalloc_node(sizeof(struct iucv_irq_data),
+				     GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1511: FILE: net/iucv/iucv.c:1626:
+				     GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));
 				               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1519: FILE: net/iucv/iucv.c:1634:
+		iucv_param[cpu] = kmalloc_node(sizeof(union iucv_param),
+				  GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1519: FILE: net/iucv/iucv.c:1634:
+				  GFP_KERNEL|GFP_DMA, cpu_to_node(cpu));
 				            ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355593.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 12 checks, 1323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355593.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
