WARNING:TYPO_SPELLING: 'rountine' may be misspelled - perhaps 'routine'?
#43: 
This patch supplies a card reset rountine for device driver to recover
                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: drivers/mmc/core/sdio.c:448:
+static int mmc_sdio_reinit_card(struct mmc_host *host,
+	struct mmc_card *oldcard)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: drivers/mmc/core/sdio.c:454:
+	BUG_ON(!host);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: drivers/mmc/core/sdio.c:553:
+	BUG_ON(!card);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: drivers/mmc/core/sdio.c:554:
+	BUG_ON(!card->host);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: drivers/mmc/core/sdio.c:555:
+	BUG_ON(!card->sdio_func);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (drv->pre_reset)
#194: FILE: drivers/mmc/core/sdio.c:569:
+				ret = (drv->pre_reset)(func);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (drv->post_reset)
#231: FILE: drivers/mmc/core/sdio.c:606:
+				ret = (drv->post_reset)(func);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#246: FILE: drivers/mmc/core/sdio.c:621:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sdio_func *' should also have an identifier name
#257: FILE: include/linux/mmc/sdio_func.h:81:
+	int (*pre_reset)(struct sdio_func *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sdio_func *' should also have an identifier name
#258: FILE: include/linux/mmc/sdio_func.h:82:
+	int (*post_reset)(struct sdio_func *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: include/linux/mmc/sdio_func.h:156:
+extern int sdio_reset_device(struct mmc_card *card);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000109294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 5 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000109294.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
