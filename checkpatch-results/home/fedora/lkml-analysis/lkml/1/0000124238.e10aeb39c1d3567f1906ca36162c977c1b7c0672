WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/net/can/Kconfig:38:
+config CAN_SJA1000
+	depends on CAN_DEV
+	tristate "Philips SJA1000"
+	---help---
+	  Driver for the SJA1000 CAN controllers from Philips or NXP
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: drivers/net/can/sja1000/sja1000.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#181: FILE: drivers/net/can/sja1000/sja1000.c:93:
+		printk(KERN_INFO "%s: probing @0x%lX failed\n",

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#205: FILE: drivers/net/can/sja1000/sja1000.c:117:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#229: FILE: drivers/net/can/sja1000/sja1000.c:141:
+		udelay(10);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#296: FILE: drivers/net/can/sja1000/sja1000.c:208:
+/*
+ * initialize SJA1000 chip:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#325: FILE: drivers/net/can/sja1000/sja1000.c:237:
+/*
+ * transmit a CAN message

WARNING:REPEATED_WORD: Possible repeated word: 'message'
#326: FILE: drivers/net/can/sja1000/sja1000.c:238:
+ * transmit a CAN message
+ * message layout in the sk_buff should be like this:

WARNING:REPEATED_WORD: Possible repeated word: 'xx'
#327: FILE: drivers/net/can/sja1000/sja1000.c:239:
+ * xx xx xx xx	 ff	 ll   00 11 22 33 44 55 66 77

WARNING:REPEATED_WORD: Possible repeated word: 'xx'
#327: FILE: drivers/net/can/sja1000/sja1000.c:239:
+ * xx xx xx xx	 ff	 ll   00 11 22 33 44 55 66 77

WARNING:REPEATED_WORD: Possible repeated word: 'xx'
#327: FILE: drivers/net/can/sja1000/sja1000.c:239:
+ * xx xx xx xx	 ff	 ll   00 11 22 33 44 55 66 77

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#335: FILE: drivers/net/can/sja1000/sja1000.c:247:
+	uint8_t fi;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#336: FILE: drivers/net/can/sja1000/sja1000.c:248:
+	uint8_t dlc;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#338: FILE: drivers/net/can/sja1000/sja1000.c:250:
+	uint8_t dreg;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#343: FILE: drivers/net/can/sja1000/sja1000.c:255:
+	fi = dlc = cf->can_dlc;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#383: FILE: drivers/net/can/sja1000/sja1000.c:295:
+	uint8_t fi;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#384: FILE: drivers/net/can/sja1000/sja1000.c:296:
+	uint8_t dreg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#386: FILE: drivers/net/can/sja1000/sja1000.c:298:
+	uint8_t dlc;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#390: FILE: drivers/net/can/sja1000/sja1000.c:302:
+	if (skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#443: FILE: drivers/net/can/sja1000/sja1000.c:355:
+	uint8_t ecc, alc;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#446: FILE: drivers/net/can/sja1000/sja1000.c:358:
+	if (skb == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#469: FILE: drivers/net/can/sja1000/sja1000.c:381:
+		if (status & SR_BS) {
[...]
+		} else if (status & SR_ES) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#475: FILE: drivers/net/can/sja1000/sja1000.c:387:
+		} else

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#502: FILE: drivers/net/can/sja1000/sja1000.c:414:
+		/* Error occured during transmission? */
 		         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#526: FILE: drivers/net/can/sja1000/sja1000.c:438:
+		uint8_t rxerr = priv->read_reg(dev, REG_RXERR);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#527: FILE: drivers/net/can/sja1000/sja1000.c:439:
+		uint8_t txerr = priv->read_reg(dev, REG_TXERR);

WARNING:LINE_SPACING: Missing a blank line after declarations
#528: FILE: drivers/net/can/sja1000/sja1000.c:440:
+		uint8_t txerr = priv->read_reg(dev, REG_TXERR);
+		cf->can_id |= CAN_ERR_CRTL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#558: FILE: drivers/net/can/sja1000/sja1000.c:470:
+	uint8_t isrc, status;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/net/can/sja1000/sja1000.c:596:
+       .ndo_open               = sja1000_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/net/can/sja1000/sja1000.c:597:
+       .ndo_stop               = sja1000_close,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/net/can/sja1000/sja1000.c:598:
+       .ndo_start_xmit         = sja1000_start_xmit,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#713: FILE: drivers/net/can/sja1000/sja1000.c:625:
+	printk(KERN_INFO "%s CAN netdevice driver\n", DRV_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#722: FILE: drivers/net/can/sja1000/sja1000.c:634:
+	printk(KERN_INFO "%s: driver removed\n", DRV_NAME);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#731: FILE: drivers/net/can/sja1000/sja1000.h:1:
+/*

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#863: FILE: drivers/net/can/sja1000/sja1000.h:133:
+#define SR_CRIT (SR_BS|SR_ES)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#875: FILE: drivers/net/can/sja1000/sja1000.h:145:
+/*
+ * Flags for sja1000priv.flags

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#880: FILE: drivers/net/can/sja1000/sja1000.h:150:
+/*
+ * SJA1000 private data structure

WARNING:SPACING: Unnecessary space before function pointer arguments
#888: FILE: drivers/net/can/sja1000/sja1000.h:158:
+	u8 (*read_reg) (const struct net_device *dev, int reg);

WARNING:SPACING: Unnecessary space before function pointer arguments
#889: FILE: drivers/net/can/sja1000/sja1000.h:159:
+	void (*write_reg) (const struct net_device *dev, int reg, u8 val);

WARNING:SPACING: Unnecessary space before function pointer arguments
#890: FILE: drivers/net/can/sja1000/sja1000.h:160:
+	void (*pre_irq) (const struct net_device *dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#891: FILE: drivers/net/can/sja1000/sja1000.h:161:
+	void (*post_irq) (const struct net_device *dev);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 18 checks, 842 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
