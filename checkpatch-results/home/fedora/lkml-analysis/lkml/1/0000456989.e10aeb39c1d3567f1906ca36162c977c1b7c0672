WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#80: 
--- /usr/src/linux-vanilla/mm/migrate.c	2006-12-02 15:08:23.000000000 +0100

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: usr/src/linux/mm/migrate.c:642:
+ ^I^I * restored. Don't push page to LRU unless wanted.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: usr/src/linux/mm/migrate.c:642:
+ ^I^I * restored. Don't push page to LRU unless wanted.$

ERROR:SPACING: space required before the open parenthesis '('
#101: FILE: usr/src/linux/mm/migrate.c:645:
+		if(put_lru)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: usr/src/linux/mm/migrate.c:729:
+/* target page is stored in private parameter when used from $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: usr/src/linux/mm/migrate.c:732:
+static struct page * return_target(struct page * page, unsigned long private, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: usr/src/linux/mm/migrate.c:732:
+static struct page * return_target(struct page * page, unsigned long private, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: usr/src/linux/mm/migrate.c:732:
+static struct page * return_target(struct page * page, unsigned long private, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: usr/src/linux/mm/migrate.c:733:
+static struct page * return_target(struct page * page, unsigned long private, 
+		int ** result)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#123: FILE: usr/src/linux/mm/migrate.c:733:
+		int ** result)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: usr/src/linux/mm/migrate.c:738:
+int __migrate_pfn_page(struct page * page, new_page_t get_new_page, unsigned long private)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#134: FILE: usr/src/linux/mm/migrate.c:744:
+	for(pass = 0; pass < 10 && retry; pass++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: usr/src/linux/mm/migrate.c:744:
+	for(pass = 0; pass < 10 && retry; pass++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: usr/src/linux/mm/migrate.c:749:
+^I^Iswitch(rc) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#139: FILE: usr/src/linux/mm/migrate.c:749:
+		switch(rc) 
+		{

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: usr/src/linux/mm/migrate.c:749:
+		switch(rc) 

ERROR:SPACING: space required before the open parenthesis '('
#152: FILE: usr/src/linux/mm/migrate.c:762:
+	if(rc)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: usr/src/linux/mm/migrate.c:768:
+int migrate_pfn_page(struct page * original, struct page * target)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: usr/src/linux/mm/migrate.c:768:
+int migrate_pfn_page(struct page * original, struct page * target)

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: usr/src/linux/mm/migrate.c:778:
+	if((ret = migrate_prep()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#168: FILE: usr/src/linux/mm/migrate.c:778:
+	if((ret = migrate_prep()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: usr/src/linux/mm/migrate.c:783:
+	if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: usr/src/linux/mm/migrate.c:786:
+	if(!ret)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456989.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 2 warnings, 1 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456989.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
