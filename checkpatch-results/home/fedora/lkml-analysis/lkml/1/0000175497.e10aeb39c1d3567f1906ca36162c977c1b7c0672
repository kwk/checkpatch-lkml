WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# tracer: process

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#           TASK-PID    CPU#    TIMESTAMP  FUNCTION

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#              | |       |          |         |

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
%                                                                               

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# tracer: process

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#           TASK-PID    CPU#    TIMESTAMP  FUNCTION

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#              | |       |          |         |

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#209: 
# tracer: nop

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#210: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#211: 
#           TASK-PID    CPU#    TIMESTAMP  FUNCTION

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#212: 
#              | |       |          |         |

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#220: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#225: FILE: include/linux/processtrace.h:1:
+#ifndef PROCESSTRACE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: include/linux/processtrace.h:9:
+        char comm[TASK_COMM_LEN]; /* XXX: should be in/via trace_entry */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: include/linux/processtrace.h:9:
+        char comm[TASK_COMM_LEN]; /* XXX: should be in/via trace_entry */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: include/linux/processtrace.h:10:
+        union {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: include/linux/processtrace.h:10:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: include/linux/processtrace.h:11:
+                struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: include/linux/processtrace.h:11:
+                struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: include/linux/processtrace.h:12:
+                        pid_t child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: include/linux/processtrace.h:12:
+                        pid_t child;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: include/linux/processtrace.h:13:
+                        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: include/linux/processtrace.h:13:
+                        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: include/linux/processtrace.h:14:
+                } trace_clone;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: include/linux/processtrace.h:14:
+                } trace_clone;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: include/linux/processtrace.h:15:
+                struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/linux/processtrace.h:15:
+                struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: include/linux/processtrace.h:16:
+                        long code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: include/linux/processtrace.h:16:
+                        long code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: include/linux/processtrace.h:17:
+                } trace_exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: include/linux/processtrace.h:17:
+                } trace_exit;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: include/linux/processtrace.h:18:
+                struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/linux/processtrace.h:18:
+                struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: include/linux/processtrace.h:19:
+                } trace_exec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: include/linux/processtrace.h:19:
+                } trace_exec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: include/linux/processtrace.h:20:
+                struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/linux/processtrace.h:20:
+                struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/linux/processtrace.h:21:
+                        int si_signo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/linux/processtrace.h:21:
+                        int si_signo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: include/linux/processtrace.h:22:
+                        int si_errno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: include/linux/processtrace.h:22:
+                        int si_errno;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: include/linux/processtrace.h:23:
+                        int si_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: include/linux/processtrace.h:23:
+                        int si_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: include/linux/processtrace.h:24:
+                } trace_signal;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: include/linux/processtrace.h:24:
+                } trace_signal;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: include/linux/processtrace.h:25:
+        };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: include/linux/processtrace.h:25:
+        };$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: include/linux/processtrace.h:30:
+extern void enable_process_trace (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: include/linux/processtrace.h:30:
+extern void enable_process_trace (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: include/linux/processtrace.h:31:
+extern void disable_process_trace (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/processtrace.h:31:
+extern void disable_process_trace (void);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#266: FILE: kernel/trace/Kconfig:122:
+config PROCESS_TRACER
+	bool "Trace process events via utrace"
+	depends on DEBUG_KERNEL
+	select TRACING
+	select UTRACE
+	help
+	  This tracer provides trace records from process events
+	  accessible to utrace: lifecycle, system calls, and signals.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: kernel/trace/trace.h:123:
+        struct trace_entry^I^Ient;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/trace/trace.h:123:
+        struct trace_entry^I^Ient;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#335: FILE: kernel/trace/trace_process.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: kernel/trace/trace_process.c:21:
+   followed. */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: kernel/trace/trace_process.c:21:
+/* A process must be a direct child of given pid in order to be
+   followed. */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: kernel/trace/trace_process.c:21:
+   followed. */ 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#360: FILE: kernel/trace/trace_process.c:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#369: FILE: kernel/trace/trace_process.c:35:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#377: FILE: kernel/trace/trace_process.c:43:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#387: FILE: kernel/trace/trace_process.c:53:
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#396: FILE: kernel/trace/trace_process.c:62:
+	pr_debug("in %s\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: kernel/trace/trace_process.c:72:
+static void __trace_processtrace(struct trace_array *tr,
+				struct trace_array_cpu *data,

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: kernel/trace/trace_process.c:85:
+        entry->ent.cpu                  = raw_smp_processor_id();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: kernel/trace/trace_process.c:85:
+        entry->ent.cpu                  = raw_smp_processor_id();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: kernel/trace/trace_process.c:87:
+        strlcpy (ent->comm, current->comm, TASK_COMM_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: kernel/trace/trace_process.c:87:
+        strlcpy (ent->comm, current->comm, TASK_COMM_LEN);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: kernel/trace/trace_process.c:87:
+        strlcpy (ent->comm, current->comm, TASK_COMM_LEN);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#421: FILE: kernel/trace/trace_process.c:87:
+        strlcpy (ent->comm, current->comm, TASK_COMM_LEN);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#436: FILE: kernel/trace/trace_process.c:102:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#442: FILE: kernel/trace/trace_process.c:108:
+	struct trace_seq *s = &iter->seq;
+	pr_debug("in %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#442: FILE: kernel/trace/trace_process.c:108:
+	pr_debug("in %s\n", __func__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#451: FILE: kernel/trace/trace_process.c:117:
+static ssize_t process_read(struct trace_iterator *iter, struct file *filp,
                                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: kernel/trace/trace_process.c:118:
+static ssize_t process_read(struct trace_iterator *iter, struct file *filp,
+				char __user *ubuf, size_t cnt, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: kernel/trace/trace_process.c:122:
+	struct trace_seq *s = &iter->seq;
+	ret = trace_seq_to_user(s, ubuf, cnt);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#467: FILE: kernel/trace/trace_process.c:133:
+	unsigned secs		= (unsigned long)t;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#470: FILE: kernel/trace/trace_process.c:136:
+	pr_debug("in %s\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: kernel/trace/trace_process.c:139:
+        /* XXX: If print_lat_fmt() were not static, we wouldn't have$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: kernel/trace/trace_process.c:140:
+           to duplicate this. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#474: FILE: kernel/trace/trace_process.c:140:
+        /* XXX: If print_lat_fmt() were not static, we wouldn't have
+           to duplicate this. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#474: FILE: kernel/trace/trace_process.c:140:
+           to duplicate this. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: kernel/trace/trace_process.c:141:
+        trace_seq_printf(s, "%16s %5d %3d %9lu.%06ld ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: kernel/trace/trace_process.c:141:
+        trace_seq_printf(s, "%16s %5d %3d %9lu.%06ld ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: kernel/trace/trace_process.c:142:
+                         field->event.comm,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: kernel/trace/trace_process.c:142:
+                         field->event.comm,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: kernel/trace/trace_process.c:143:
+                         entry->pid, entry->cpu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: kernel/trace/trace_process.c:143:
+                         entry->pid, entry->cpu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: kernel/trace/trace_process.c:144:
+                         secs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: kernel/trace/trace_process.c:144:
+                         secs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: kernel/trace/trace_process.c:145:
+                         usec_rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: kernel/trace/trace_process.c:145:
+                         usec_rem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: kernel/trace/trace_process.c:150:
+                                       field->event.trace_clone.child,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: kernel/trace/trace_process.c:150:
+		ret = trace_seq_printf(s, "fork %d flags 0x%lx\n",
+                                       field->event.trace_clone.child,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: kernel/trace/trace_process.c:150:
+                                       field->event.trace_clone.child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: kernel/trace/trace_process.c:151:
+                                       field->event.trace_clone.flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: kernel/trace/trace_process.c:151:
+                                       field->event.trace_clone.flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: kernel/trace/trace_process.c:158:
+                                       field->event.trace_exit.code);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: kernel/trace/trace_process.c:158:
+		ret = trace_seq_printf(s, "exit %ld\n",
+                                       field->event.trace_exit.code);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: kernel/trace/trace_process.c:158:
+                                       field->event.trace_exit.code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: kernel/trace/trace_process.c:162:
+                                       field->event.trace_signal.si_signo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: kernel/trace/trace_process.c:162:
+		ret = trace_seq_printf(s, "signal %d errno %d code %d\n",
+                                       field->event.trace_signal.si_signo,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/trace/trace_process.c:162:
+                                       field->event.trace_signal.si_signo,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: kernel/trace/trace_process.c:163:
+                                       field->event.trace_signal.si_errno,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/trace/trace_process.c:163:
+                                       field->event.trace_signal.si_errno,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: kernel/trace/trace_process.c:164:
+                                       field->event.trace_signal.si_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/trace/trace_process.c:164:
+                                       field->event.trace_signal.si_code);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#509: FILE: kernel/trace/trace_process.c:175:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#521: FILE: kernel/trace/trace_process.c:187:
+static struct tracer process_tracer __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#532: FILE: kernel/trace/trace_process.c:198:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#537: FILE: kernel/trace/trace_process.c:203:
+/* Should tracing apply to given task?  Compare against filter
+   values. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#537: FILE: kernel/trace/trace_process.c:203:
+   values. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: kernel/trace/trace_process.c:204:
+static int trace_test (struct task_struct *tsk) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#538: FILE: kernel/trace/trace_process.c:204:
+static int trace_test (struct task_struct *tsk) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: kernel/trace/trace_process.c:206:
+        if (trace_taskcomm_filter[0]$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: kernel/trace/trace_process.c:206:
+        if (trace_taskcomm_filter[0]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: kernel/trace/trace_process.c:207:
+            && strcmp (trace_taskcomm_filter, tsk->comm))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#541: FILE: kernel/trace/trace_process.c:207:
+        if (trace_taskcomm_filter[0]
+            && strcmp (trace_taskcomm_filter, tsk->comm))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: kernel/trace/trace_process.c:207:
+            && strcmp (trace_taskcomm_filter, tsk->comm))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: kernel/trace/trace_process.c:207:
+            && strcmp (trace_taskcomm_filter, tsk->comm))

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: kernel/trace/trace_process.c:208:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: kernel/trace/trace_process.c:208:
+                return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: kernel/trace/trace_process.c:209:
+        if (trace_taskuid_filter != (u32)-1 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: kernel/trace/trace_process.c:209:
+        if (trace_taskuid_filter != (u32)-1 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: kernel/trace/trace_process.c:209:
+        if (trace_taskuid_filter != (u32)-1 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: kernel/trace/trace_process.c:210:
+            && trace_taskuid_filter != task_uid (tsk))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#544: FILE: kernel/trace/trace_process.c:210:
+        if (trace_taskuid_filter != (u32)-1 
+            && trace_taskuid_filter != task_uid (tsk))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: kernel/trace/trace_process.c:210:
+            && trace_taskuid_filter != task_uid (tsk))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: kernel/trace/trace_process.c:210:
+            && trace_taskuid_filter != task_uid (tsk))

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: kernel/trace/trace_process.c:211:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/trace/trace_process.c:211:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: kernel/trace/trace_process.c:213:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: kernel/trace/trace_process.c:213:
+        return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#550: FILE: kernel/trace/trace_process.c:216:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: kernel/trace/trace_process.c:219:
+static void process_trace_tryattach (struct task_struct *tsk) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: kernel/trace/trace_process.c:219:
+static void process_trace_tryattach (struct task_struct *tsk) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: kernel/trace/trace_process.c:221:
+        struct utrace_attached_engine *engine;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/trace/trace_process.c:221:
+        struct utrace_attached_engine *engine;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: kernel/trace/trace_process.c:222:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: kernel/trace/trace_process.c:222:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/trace/trace_process.c:222:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: kernel/trace/trace_process.c:223:
+        pr_debug("in %s\n", __func__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: kernel/trace/trace_process.c:223:
+        pr_debug("in %s\n", __func__);$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#557: FILE: kernel/trace/trace_process.c:223:
+        pr_debug("in %s\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: kernel/trace/trace_process.c:224:
+        engine = utrace_attach_task (tsk, UTRACE_ATTACH_CREATE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: kernel/trace/trace_process.c:224:
+        engine = utrace_attach_task (tsk, UTRACE_ATTACH_CREATE,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#558: FILE: kernel/trace/trace_process.c:224:
+        engine = utrace_attach_task (tsk, UTRACE_ATTACH_CREATE,

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: kernel/trace/trace_process.c:225:
+                                     & process_trace_ops, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: kernel/trace/trace_process.c:225:
+                                     & process_trace_ops, NULL);$

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#559: FILE: kernel/trace/trace_process.c:225:
+                                     & process_trace_ops, NULL);
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: kernel/trace/trace_process.c:226:
+        if (IS_ERR(engine) || (engine == NULL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: kernel/trace/trace_process.c:226:
+        if (IS_ERR(engine) || (engine == NULL)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'engine == NULL'
#560: FILE: kernel/trace/trace_process.c:226:
+        if (IS_ERR(engine) || (engine == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!engine"
#560: FILE: kernel/trace/trace_process.c:226:
+        if (IS_ERR(engine) || (engine == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: kernel/trace/trace_process.c:227:
+                pr_warning ("utrace_attach_task %d (rc %p)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: kernel/trace/trace_process.c:227:
+                pr_warning ("utrace_attach_task %d (rc %p)\n",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: kernel/trace/trace_process.c:227:
+                pr_warning ("utrace_attach_task %d (rc %p)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: kernel/trace/trace_process.c:228:
+                            tsk->pid, engine);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/trace/trace_process.c:228:
+                            tsk->pid, engine);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: kernel/trace/trace_process.c:229:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: kernel/trace/trace_process.c:229:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: kernel/trace/trace_process.c:230:
+                int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/trace/trace_process.c:230:
+                int rc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: kernel/trace/trace_process.c:232:
+                /* XXX: Why is this not implicit from the fields$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: kernel/trace/trace_process.c:233:
+                   set in the process_trace_ops? */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#567: FILE: kernel/trace/trace_process.c:233:
+                /* XXX: Why is this not implicit from the fields
+                   set in the process_trace_ops? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#567: FILE: kernel/trace/trace_process.c:233:
+                   set in the process_trace_ops? */

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: kernel/trace/trace_process.c:234:
+                rc = utrace_set_events (tsk, engine,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: kernel/trace/trace_process.c:234:
+                rc = utrace_set_events (tsk, engine,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#568: FILE: kernel/trace/trace_process.c:234:
+                rc = utrace_set_events (tsk, engine,

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: kernel/trace/trace_process.c:235:
+                                        UTRACE_EVENT(CLONE) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: kernel/trace/trace_process.c:235:
+                                        UTRACE_EVENT(CLONE) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: kernel/trace/trace_process.c:236:
+                                        UTRACE_EVENT(EXEC) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: kernel/trace/trace_process.c:236:
+                                        UTRACE_EVENT(EXEC) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: kernel/trace/trace_process.c:237:
+                                        UTRACE_EVENT(SIGNAL) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: kernel/trace/trace_process.c:237:
+                                        UTRACE_EVENT(SIGNAL) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: kernel/trace/trace_process.c:238:
+                                        UTRACE_EVENT(EXIT));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: kernel/trace/trace_process.c:238:
+                                        UTRACE_EVENT(EXIT));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: kernel/trace/trace_process.c:239:
+                if (rc == -EINPROGRESS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: kernel/trace/trace_process.c:239:
+                if (rc == -EINPROGRESS)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: kernel/trace/trace_process.c:240:
+                        rc = utrace_barrier (tsk, engine);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: kernel/trace/trace_process.c:240:
+                        rc = utrace_barrier (tsk, engine);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#574: FILE: kernel/trace/trace_process.c:240:
+                        rc = utrace_barrier (tsk, engine);

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: kernel/trace/trace_process.c:241:
+                if (rc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: kernel/trace/trace_process.c:241:
+                if (rc)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: kernel/trace/trace_process.c:242:
+                        pr_warning ("utrace_set_events/barrier rc %d\n", rc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: kernel/trace/trace_process.c:242:
+                        pr_warning ("utrace_set_events/barrier rc %d\n", rc);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#576: FILE: kernel/trace/trace_process.c:242:
+                        pr_warning ("utrace_set_events/barrier rc %d\n", rc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: kernel/trace/trace_process.c:243:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: kernel/trace/trace_process.c:243:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: kernel/trace/trace_process.c:243:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: kernel/trace/trace_process.c:244:
+                utrace_engine_put (engine);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/trace/trace_process.c:244:
+                utrace_engine_put (engine);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#578: FILE: kernel/trace/trace_process.c:244:
+                utrace_engine_put (engine);

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: kernel/trace/trace_process.c:245:
+                pr_debug("attached in %s to %s(%d)\n", __func__, tsk->comm, tsk->pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/trace/trace_process.c:245:
+                pr_debug("attached in %s to %s(%d)\n", __func__, tsk->comm, tsk->pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: kernel/trace/trace_process.c:246:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: kernel/trace/trace_process.c:246:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#583: FILE: kernel/trace/trace_process.c:249:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: kernel/trace/trace_process.c:250:
+u32 process_trace_report_clone (enum utrace_resume_action action,

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: kernel/trace/trace_process.c:251:
+                                struct utrace_attached_engine *engine,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: kernel/trace/trace_process.c:251:
+                                struct utrace_attached_engine *engine,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: kernel/trace/trace_process.c:252:
+                                struct task_struct *parent,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: kernel/trace/trace_process.c:252:
+                                struct task_struct *parent,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: kernel/trace/trace_process.c:253:
+                                unsigned long clone_flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: kernel/trace/trace_process.c:253:
+                                unsigned long clone_flags,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: kernel/trace/trace_process.c:254:
+                                struct task_struct *child) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: kernel/trace/trace_process.c:254:
+                                struct task_struct *child) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: kernel/trace/trace_process.c:254:
+                                struct task_struct *child) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: kernel/trace/trace_process.c:256:
+        if (trace_test (parent)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: kernel/trace/trace_process.c:256:
+        if (trace_test (parent)) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: kernel/trace/trace_process.c:256:
+        if (trace_test (parent)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: kernel/trace/trace_process.c:257:
+                struct process_trace_entry ent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: kernel/trace/trace_process.c:257:
+                struct process_trace_entry ent;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: kernel/trace/trace_process.c:258:
+                ent.opcode = _UTRACE_EVENT_CLONE;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#592: FILE: kernel/trace/trace_process.c:258:
+                struct process_trace_entry ent;
+                ent.opcode = _UTRACE_EVENT_CLONE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: kernel/trace/trace_process.c:258:
+                ent.opcode = _UTRACE_EVENT_CLONE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: kernel/trace/trace_process.c:259:
+                ent.trace_clone.child = child->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: kernel/trace/trace_process.c:259:
+                ent.trace_clone.child = child->pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: kernel/trace/trace_process.c:260:
+                ent.trace_clone.flags = clone_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: kernel/trace/trace_process.c:260:
+                ent.trace_clone.flags = clone_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: kernel/trace/trace_process.c:261:
+                process_trace(& ent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: kernel/trace/trace_process.c:261:
+                process_trace(& ent);$

ERROR:SPACING: space prohibited after that '&' (ctx:BxW)
#595: FILE: kernel/trace/trace_process.c:261:
+                process_trace(& ent);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: kernel/trace/trace_process.c:262:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: kernel/trace/trace_process.c:262:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: kernel/trace/trace_process.c:264:
+        process_trace_tryattach (child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: kernel/trace/trace_process.c:264:
+        process_trace_tryattach (child);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: kernel/trace/trace_process.c:264:
+        process_trace_tryattach (child);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: kernel/trace/trace_process.c:265:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: kernel/trace/trace_process.c:265:
+                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: kernel/trace/trace_process.c:265:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: kernel/trace/trace_process.c:266:
+        return action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: kernel/trace/trace_process.c:266:
+        return action;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#603: FILE: kernel/trace/trace_process.c:269:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#604: FILE: kernel/trace/trace_process.c:270:
+u32 process_trace_report_exec (enum utrace_resume_action action,

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: kernel/trace/trace_process.c:271:
+                               struct utrace_attached_engine *engine,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: kernel/trace/trace_process.c:271:
+                               struct utrace_attached_engine *engine,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: kernel/trace/trace_process.c:272:
+                               struct task_struct *task,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: kernel/trace/trace_process.c:272:
+                               struct task_struct *task,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: kernel/trace/trace_process.c:273:
+                               const struct linux_binfmt *fmt,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: kernel/trace/trace_process.c:273:
+                               const struct linux_binfmt *fmt,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: kernel/trace/trace_process.c:274:
+                               const struct linux_binprm *bprm,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: kernel/trace/trace_process.c:274:
+                               const struct linux_binprm *bprm,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: kernel/trace/trace_process.c:275:
+                               struct pt_regs *regs) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: kernel/trace/trace_process.c:275:
+                               struct pt_regs *regs) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: kernel/trace/trace_process.c:275:
+                               struct pt_regs *regs) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: kernel/trace/trace_process.c:277:
+        if (trace_test (task)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: kernel/trace/trace_process.c:277:
+        if (trace_test (task)) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#611: FILE: kernel/trace/trace_process.c:277:
+        if (trace_test (task)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: kernel/trace/trace_process.c:278:
+                struct process_trace_entry ent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: kernel/trace/trace_process.c:278:
+                struct process_trace_entry ent;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: kernel/trace/trace_process.c:279:
+                ent.opcode = _UTRACE_EVENT_EXEC;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#613: FILE: kernel/trace/trace_process.c:279:
+                struct process_trace_entry ent;
+                ent.opcode = _UTRACE_EVENT_EXEC;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: kernel/trace/trace_process.c:279:
+                ent.opcode = _UTRACE_EVENT_EXEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: kernel/trace/trace_process.c:280:
+                process_trace(& ent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: kernel/trace/trace_process.c:280:
+                process_trace(& ent);$

ERROR:SPACING: space prohibited after that '&' (ctx:BxW)
#614: FILE: kernel/trace/trace_process.c:280:
+                process_trace(& ent);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: kernel/trace/trace_process.c:281:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: kernel/trace/trace_process.c:281:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: kernel/trace/trace_process.c:283:
+        /* We're already attached; no need for a new tryattach. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: kernel/trace/trace_process.c:285:
+        return action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: kernel/trace/trace_process.c:285:
+        return action;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#622: FILE: kernel/trace/trace_process.c:288:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#623: FILE: kernel/trace/trace_process.c:289:
+u32 process_trace_report_signal (u32 action,

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: kernel/trace/trace_process.c:290:
+                                 struct utrace_attached_engine *engine,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: kernel/trace/trace_process.c:290:
+                                 struct utrace_attached_engine *engine,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: kernel/trace/trace_process.c:291:
+                                 struct task_struct *task,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: kernel/trace/trace_process.c:291:
+                                 struct task_struct *task,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: kernel/trace/trace_process.c:292:
+                                 struct pt_regs *regs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: kernel/trace/trace_process.c:292:
+                                 struct pt_regs *regs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: kernel/trace/trace_process.c:293:
+                                 siginfo_t *info,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: kernel/trace/trace_process.c:293:
+                                 siginfo_t *info,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: kernel/trace/trace_process.c:294:
+                                 const struct k_sigaction *orig_ka,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: kernel/trace/trace_process.c:294:
+                                 const struct k_sigaction *orig_ka,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: kernel/trace/trace_process.c:295:
+                                 struct k_sigaction *return_ka)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: kernel/trace/trace_process.c:295:
+                                 struct k_sigaction *return_ka)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: kernel/trace/trace_process.c:297:
+        if (trace_test (task)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: kernel/trace/trace_process.c:297:
+        if (trace_test (task)) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#631: FILE: kernel/trace/trace_process.c:297:
+        if (trace_test (task)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: kernel/trace/trace_process.c:298:
+                struct process_trace_entry ent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: kernel/trace/trace_process.c:298:
+                struct process_trace_entry ent;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: kernel/trace/trace_process.c:299:
+                ent.opcode = _UTRACE_EVENT_SIGNAL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#633: FILE: kernel/trace/trace_process.c:299:
+                struct process_trace_entry ent;
+                ent.opcode = _UTRACE_EVENT_SIGNAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: kernel/trace/trace_process.c:299:
+                ent.opcode = _UTRACE_EVENT_SIGNAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: kernel/trace/trace_process.c:300:
+                ent.trace_signal.si_signo = info->si_signo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: kernel/trace/trace_process.c:300:
+                ent.trace_signal.si_signo = info->si_signo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: kernel/trace/trace_process.c:301:
+                ent.trace_signal.si_errno = info->si_errno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: kernel/trace/trace_process.c:301:
+                ent.trace_signal.si_errno = info->si_errno;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: kernel/trace/trace_process.c:302:
+                ent.trace_signal.si_code = info->si_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: kernel/trace/trace_process.c:302:
+                ent.trace_signal.si_code = info->si_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: kernel/trace/trace_process.c:303:
+                process_trace(& ent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: kernel/trace/trace_process.c:303:
+                process_trace(& ent);$

ERROR:SPACING: space prohibited after that '&' (ctx:BxW)
#637: FILE: kernel/trace/trace_process.c:303:
+                process_trace(& ent);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: kernel/trace/trace_process.c:304:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: kernel/trace/trace_process.c:304:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: kernel/trace/trace_process.c:306:
+        /* We're already attached; no need for a new tryattach. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: kernel/trace/trace_process.c:308:
+        return action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: kernel/trace/trace_process.c:308:
+        return action;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#645: FILE: kernel/trace/trace_process.c:311:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: kernel/trace/trace_process.c:312:
+u32 process_trace_report_exit (enum utrace_resume_action action,

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: kernel/trace/trace_process.c:313:
+                               struct utrace_attached_engine *engine,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: kernel/trace/trace_process.c:313:
+                               struct utrace_attached_engine *engine,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: kernel/trace/trace_process.c:314:
+                               struct task_struct *task,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: kernel/trace/trace_process.c:314:
+                               struct task_struct *task,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: kernel/trace/trace_process.c:315:
+                               long orig_code, long *code) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: kernel/trace/trace_process.c:315:
+                               long orig_code, long *code) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: kernel/trace/trace_process.c:315:
+                               long orig_code, long *code) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: kernel/trace/trace_process.c:317:
+        if (trace_test (task)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: kernel/trace/trace_process.c:317:
+        if (trace_test (task)) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: kernel/trace/trace_process.c:317:
+        if (trace_test (task)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: kernel/trace/trace_process.c:318:
+                struct process_trace_entry ent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: kernel/trace/trace_process.c:318:
+                struct process_trace_entry ent;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: kernel/trace/trace_process.c:319:
+                ent.opcode = _UTRACE_EVENT_EXIT;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#653: FILE: kernel/trace/trace_process.c:319:
+                struct process_trace_entry ent;
+                ent.opcode = _UTRACE_EVENT_EXIT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: kernel/trace/trace_process.c:319:
+                ent.opcode = _UTRACE_EVENT_EXIT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: kernel/trace/trace_process.c:320:
+                ent.trace_exit.code = orig_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: kernel/trace/trace_process.c:320:
+                ent.trace_exit.code = orig_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: kernel/trace/trace_process.c:321:
+                process_trace(& ent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: kernel/trace/trace_process.c:321:
+                process_trace(& ent);$

ERROR:SPACING: space prohibited after that '&' (ctx:BxW)
#655: FILE: kernel/trace/trace_process.c:321:
+                process_trace(& ent);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: kernel/trace/trace_process.c:322:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: kernel/trace/trace_process.c:322:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: kernel/trace/trace_process.c:324:
+        /* There is no need to explicitly attach or detach here. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: kernel/trace/trace_process.c:326:
+        return action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: kernel/trace/trace_process.c:326:
+        return action;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#663: FILE: kernel/trace/trace_process.c:329:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: kernel/trace/trace_process.c:330:
+void enable_process_trace () { $

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void enable_process_trace() should probably be void enable_process_trace(void)
#664: FILE: kernel/trace/trace_process.c:330:
+void enable_process_trace () { 

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#664: FILE: kernel/trace/trace_process.c:330:
+void enable_process_trace () { 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#664: FILE: kernel/trace/trace_process.c:330:
+void enable_process_trace () { 

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: kernel/trace/trace_process.c:331:
+        struct task_struct *grp, *tsk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: kernel/trace/trace_process.c:331:
+        struct task_struct *grp, *tsk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: kernel/trace/trace_process.c:333:
+        pr_debug("in %s\n", __func__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: kernel/trace/trace_process.c:333:
+        pr_debug("in %s\n", __func__);$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#667: FILE: kernel/trace/trace_process.c:333:
+        pr_debug("in %s\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: kernel/trace/trace_process.c:334:
+        rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: kernel/trace/trace_process.c:334:
+        rcu_read_lock();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: kernel/trace/trace_process.c:335:
+        do_each_thread(grp, tsk) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: kernel/trace/trace_process.c:335:
+        do_each_thread(grp, tsk) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#670: FILE: kernel/trace/trace_process.c:336:
+                struct mm_struct *mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: kernel/trace/trace_process.c:336:
+                struct mm_struct *mm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: kernel/trace/trace_process.c:338:
+                /* Skip over kernel threads. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: kernel/trace/trace_process.c:339:
+                mm = get_task_mm (tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: kernel/trace/trace_process.c:339:
+                mm = get_task_mm (tsk);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: kernel/trace/trace_process.c:339:
+                mm = get_task_mm (tsk);

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: kernel/trace/trace_process.c:340:
+                if (!mm)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: kernel/trace/trace_process.c:340:
+                if (!mm)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: kernel/trace/trace_process.c:341:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: kernel/trace/trace_process.c:341:
+                        continue;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: kernel/trace/trace_process.c:342:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: kernel/trace/trace_process.c:342:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: kernel/trace/trace_process.c:342:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: kernel/trace/trace_process.c:343:
+                if (process_follow_pid) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: kernel/trace/trace_process.c:343:
+                if (process_follow_pid) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#678: FILE: kernel/trace/trace_process.c:344:
+                        if (tsk->tgid == process_follow_pid ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: kernel/trace/trace_process.c:344:
+                        if (tsk->tgid == process_follow_pid ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#678: FILE: kernel/trace/trace_process.c:344:
+                        if (tsk->tgid == process_follow_pid ||
[...]
+                        process_trace_tryattach (tsk);

ERROR:CODE_INDENT: code indent should use tabs where possible
#679: FILE: kernel/trace/trace_process.c:345:
+                            tsk->parent->tgid == process_follow_pid)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: kernel/trace/trace_process.c:345:
+                            tsk->parent->tgid == process_follow_pid)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: kernel/trace/trace_process.c:346:
+                        process_trace_tryattach (tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: kernel/trace/trace_process.c:346:
+                        process_trace_tryattach (tsk);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#680: FILE: kernel/trace/trace_process.c:346:
+                        process_trace_tryattach (tsk);

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: kernel/trace/trace_process.c:347:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: kernel/trace/trace_process.c:347:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: kernel/trace/trace_process.c:348:
+                        process_trace_tryattach (tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: kernel/trace/trace_process.c:348:
+                        process_trace_tryattach (tsk);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: kernel/trace/trace_process.c:348:
+                        process_trace_tryattach (tsk);

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: kernel/trace/trace_process.c:349:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: kernel/trace/trace_process.c:349:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: kernel/trace/trace_process.c:350:
+        } while_each_thread(grp, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: kernel/trace/trace_process.c:350:
+        } while_each_thread(grp, tsk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: kernel/trace/trace_process.c:351:
+        rcu_read_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: kernel/trace/trace_process.c:351:
+        rcu_read_unlock();$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void disable_process_trace() should probably be void disable_process_trace(void)
#688: FILE: kernel/trace/trace_process.c:354:
+void disable_process_trace () {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#688: FILE: kernel/trace/trace_process.c:354:
+void disable_process_trace () {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#688: FILE: kernel/trace/trace_process.c:354:
+void disable_process_trace () {

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: kernel/trace/trace_process.c:355:
+        struct utrace_attached_engine *engine;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: kernel/trace/trace_process.c:355:
+        struct utrace_attached_engine *engine;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: kernel/trace/trace_process.c:356:
+        struct task_struct *grp, *tsk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: kernel/trace/trace_process.c:356:
+        struct task_struct *grp, *tsk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: kernel/trace/trace_process.c:357:
+        int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: kernel/trace/trace_process.c:357:
+        int rc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: kernel/trace/trace_process.c:359:
+        pr_debug("in %s\n", __func__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: kernel/trace/trace_process.c:359:
+        pr_debug("in %s\n", __func__);$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#693: FILE: kernel/trace/trace_process.c:359:
+        pr_debug("in %s\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: kernel/trace/trace_process.c:360:
+        rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: kernel/trace/trace_process.c:360:
+        rcu_read_lock();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: kernel/trace/trace_process.c:361:
+        do_each_thread(grp, tsk) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: kernel/trace/trace_process.c:361:
+        do_each_thread(grp, tsk) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: kernel/trace/trace_process.c:362:
+                if (tsk->pid <= 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: kernel/trace/trace_process.c:362:
+                if (tsk->pid <= 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: kernel/trace/trace_process.c:363:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: kernel/trace/trace_process.c:363:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: kernel/trace/trace_process.c:365:
+                /* Find matching engine, if any.  Returns -ENOENT for$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: kernel/trace/trace_process.c:366:
+                   unattached threads. */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: kernel/trace/trace_process.c:366:
+                   unattached threads. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#700: FILE: kernel/trace/trace_process.c:366:
+                /* Find matching engine, if any.  Returns -ENOENT for
+                   unattached threads. */ 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#700: FILE: kernel/trace/trace_process.c:366:
+                   unattached threads. */ 

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: kernel/trace/trace_process.c:367:
+                engine = utrace_attach_task (tsk, UTRACE_ATTACH_MATCH_OPS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: kernel/trace/trace_process.c:367:
+                engine = utrace_attach_task (tsk, UTRACE_ATTACH_MATCH_OPS,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: kernel/trace/trace_process.c:367:
+                engine = utrace_attach_task (tsk, UTRACE_ATTACH_MATCH_OPS,

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: kernel/trace/trace_process.c:368:
+                                             & process_trace_ops, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: kernel/trace/trace_process.c:368:
+                                             & process_trace_ops, 0);$

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#702: FILE: kernel/trace/trace_process.c:368:
+                                             & process_trace_ops, 0);
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: kernel/trace/trace_process.c:369:
+                if (IS_ERR(engine)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: kernel/trace/trace_process.c:369:
+                if (IS_ERR(engine)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: kernel/trace/trace_process.c:370:
+                        if (PTR_ERR(engine) != -ENOENT)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: kernel/trace/trace_process.c:370:
+                        if (PTR_ERR(engine) != -ENOENT)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: kernel/trace/trace_process.c:371:
+                                pr_warning ("utrace_attach_task %d (rc %ld)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: kernel/trace/trace_process.c:371:
+                                pr_warning ("utrace_attach_task %d (rc %ld)\n",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: kernel/trace/trace_process.c:371:
+                                pr_warning ("utrace_attach_task %d (rc %ld)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: kernel/trace/trace_process.c:372:
+                                            tsk->pid, -PTR_ERR(engine));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: kernel/trace/trace_process.c:372:
+                                            tsk->pid, -PTR_ERR(engine));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: kernel/trace/trace_process.c:373:
+                } else if (engine == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: kernel/trace/trace_process.c:373:
+                } else if (engine == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!engine"
#707: FILE: kernel/trace/trace_process.c:373:
+                } else if (engine == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: kernel/trace/trace_process.c:374:
+                        pr_warning ("utrace_attach_task %d (null engine)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: kernel/trace/trace_process.c:374:
+                        pr_warning ("utrace_attach_task %d (null engine)\n",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: kernel/trace/trace_process.c:374:
+                        pr_warning ("utrace_attach_task %d (null engine)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: kernel/trace/trace_process.c:375:
+                                    tsk->pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: kernel/trace/trace_process.c:375:
+                                    tsk->pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: kernel/trace/trace_process.c:376:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: kernel/trace/trace_process.c:376:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: kernel/trace/trace_process.c:377:
+                        /* Found one of our own engines.  Detach.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: kernel/trace/trace_process.c:378:
+                        rc = utrace_control (tsk, engine, UTRACE_DETACH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: kernel/trace/trace_process.c:378:
+                        rc = utrace_control (tsk, engine, UTRACE_DETACH);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#712: FILE: kernel/trace/trace_process.c:378:
+                        rc = utrace_control (tsk, engine, UTRACE_DETACH);

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: kernel/trace/trace_process.c:379:
+                        switch (rc) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: kernel/trace/trace_process.c:379:
+                        switch (rc) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: kernel/trace/trace_process.c:380:
+                        case 0:             /* success */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: kernel/trace/trace_process.c:380:
+                        case 0:             /* success */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: kernel/trace/trace_process.c:381:
+                                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: kernel/trace/trace_process.c:381:
+                                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: kernel/trace/trace_process.c:382:
+                        case -ESRCH:        /* REAP callback already begun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: kernel/trace/trace_process.c:382:
+                        case -ESRCH:        /* REAP callback already begun */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: kernel/trace/trace_process.c:383:
+                        case -EALREADY:     /* DEATH callback already begun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: kernel/trace/trace_process.c:383:
+                        case -EALREADY:     /* DEATH callback already begun */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: kernel/trace/trace_process.c:384:
+                                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: kernel/trace/trace_process.c:384:
+                                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: kernel/trace/trace_process.c:385:
+                        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: kernel/trace/trace_process.c:386:
+                                rc = -rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: kernel/trace/trace_process.c:386:
+                                rc = -rc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: kernel/trace/trace_process.c:387:
+                                pr_warning ("utrace_detach %d (rc %d)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: kernel/trace/trace_process.c:387:
+                                pr_warning ("utrace_detach %d (rc %d)\n",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#721: FILE: kernel/trace/trace_process.c:387:
+                                pr_warning ("utrace_detach %d (rc %d)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: kernel/trace/trace_process.c:388:
+                                            tsk->pid, rc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: kernel/trace/trace_process.c:388:
+                                            tsk->pid, rc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: kernel/trace/trace_process.c:389:
+                                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: kernel/trace/trace_process.c:389:
+                                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: kernel/trace/trace_process.c:390:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: kernel/trace/trace_process.c:390:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: kernel/trace/trace_process.c:391:
+                        utrace_engine_put(engine);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: kernel/trace/trace_process.c:391:
+                        utrace_engine_put(engine);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: kernel/trace/trace_process.c:392:
+                        pr_debug("detached in %s from %s(%d)\n", __func__, tsk->comm, tsk->pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: kernel/trace/trace_process.c:392:
+                        pr_debug("detached in %s from %s(%d)\n", __func__, tsk->comm, tsk->pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: kernel/trace/trace_process.c:393:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: kernel/trace/trace_process.c:393:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: kernel/trace/trace_process.c:394:
+        } while_each_thread(grp, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: kernel/trace/trace_process.c:394:
+        } while_each_thread(grp, tsk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: kernel/trace/trace_process.c:395:
+        rcu_read_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: kernel/trace/trace_process.c:395:
+        rcu_read_unlock();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#732: FILE: kernel/trace/trace_process.c:398:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: kernel/trace/trace_process.c:400:
+        .report_clone = process_trace_report_clone,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: kernel/trace/trace_process.c:400:
+        .report_clone = process_trace_report_clone,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#735: FILE: kernel/trace/trace_process.c:401:
+        .report_exec = process_trace_report_exec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: kernel/trace/trace_process.c:401:
+        .report_exec = process_trace_report_exec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#736: FILE: kernel/trace/trace_process.c:402:
+        .report_exit = process_trace_report_exit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: kernel/trace/trace_process.c:402:
+        .report_exit = process_trace_report_exit,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#737: FILE: kernel/trace/trace_process.c:403:
+        .report_signal = process_trace_report_signal,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: kernel/trace/trace_process.c:403:
+        .report_signal = process_trace_report_signal,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#740: FILE: kernel/trace/trace_process.c:406:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: kernel/trace/trace_process.c:411:
+        .data = trace_taskcomm_filter,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: kernel/trace/trace_process.c:411:
+        .data = trace_taskcomm_filter,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: kernel/trace/trace_process.c:412:
+        .size = sizeof (trace_taskcomm_filter),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: kernel/trace/trace_process.c:412:
+        .size = sizeof (trace_taskcomm_filter),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: kernel/trace/trace_process.c:412:
+        .size = sizeof (trace_taskcomm_filter),

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: kernel/trace/trace_process.c:417:
+        struct dentry *d_tracer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: kernel/trace/trace_process.c:417:
+        struct dentry *d_tracer;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#752: FILE: kernel/trace/trace_process.c:418:
+        struct dentry *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: kernel/trace/trace_process.c:418:
+        struct dentry *entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: kernel/trace/trace_process.c:420:
+        d_tracer = tracing_init_dentry();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: kernel/trace/trace_process.c:420:
+        d_tracer = tracing_init_dentry();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: kernel/trace/trace_process.c:422:
+        entry = debugfs_create_blob("process_trace_taskcomm_filter", 0644, d_tracer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: kernel/trace/trace_process.c:422:
+        entry = debugfs_create_blob("process_trace_taskcomm_filter", 0644, d_tracer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: kernel/trace/trace_process.c:423:
+                                    & trace_taskcomm_filter_blob);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: kernel/trace/trace_process.c:423:
+                                    & trace_taskcomm_filter_blob);$

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#757: FILE: kernel/trace/trace_process.c:423:
+                                    & trace_taskcomm_filter_blob);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: kernel/trace/trace_process.c:424:
+        if (!entry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: kernel/trace/trace_process.c:424:
+        if (!entry)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#759: FILE: kernel/trace/trace_process.c:425:
+                pr_warning("Could not create debugfs 'process_trace_taskcomm_filter' entry\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: kernel/trace/trace_process.c:425:
+                pr_warning("Could not create debugfs 'process_trace_taskcomm_filter' entry\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#761: FILE: kernel/trace/trace_process.c:427:
+        entry = debugfs_create_u32("process_trace_uid_filter", 0644, d_tracer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: kernel/trace/trace_process.c:427:
+        entry = debugfs_create_u32("process_trace_uid_filter", 0644, d_tracer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: kernel/trace/trace_process.c:428:
+                                   & trace_taskuid_filter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: kernel/trace/trace_process.c:428:
+                                   & trace_taskuid_filter);$

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#762: FILE: kernel/trace/trace_process.c:428:
+                                   & trace_taskuid_filter);
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: kernel/trace/trace_process.c:429:
+        if (!entry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: kernel/trace/trace_process.c:429:
+        if (!entry)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#764: FILE: kernel/trace/trace_process.c:430:
+                pr_warning("Could not create debugfs 'process_trace_uid_filter' entry\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: kernel/trace/trace_process.c:430:
+                pr_warning("Could not create debugfs 'process_trace_uid_filter' entry\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: kernel/trace/trace_process.c:432:
+        entry = debugfs_create_u32("process_follow_pid", 0644, d_tracer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: kernel/trace/trace_process.c:432:
+        entry = debugfs_create_u32("process_follow_pid", 0644, d_tracer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: kernel/trace/trace_process.c:433:
+                                   & process_follow_pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: kernel/trace/trace_process.c:433:
+                                   & process_follow_pid);$

ERROR:SPACING: space prohibited after that '&' (ctx:ExW)
#767: FILE: kernel/trace/trace_process.c:433:
+                                   & process_follow_pid);
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: kernel/trace/trace_process.c:434:
+        if (!entry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: kernel/trace/trace_process.c:434:
+        if (!entry)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#769: FILE: kernel/trace/trace_process.c:435:
+                pr_warning("Could not create debugfs 'process_follow_pid' entry\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: kernel/trace/trace_process.c:435:
+                pr_warning("Could not create debugfs 'process_follow_pid' entry\n");$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 224 errors, 264 warnings, 24 checks, 526 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
