CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tmp)...) over kzalloc(sizeof(struct firmware_list)...)
#89: FILE: drivers/base/firmware_class.c:435:
+	tmp = kzalloc(sizeof(struct firmware_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#91: FILE: drivers/base/firmware_class.c:437:
+		printk(KERN_ERR "%s: kmalloc(struct firmware_list) failed\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#91: FILE: drivers/base/firmware_class.c:437:
+	if (!tmp) {
+		printk(KERN_ERR "%s: kmalloc(struct firmware_list) failed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#99: FILE: drivers/base/firmware_class.c:445:
+		printk(KERN_ERR "%s: kmalloc firmware_list->name failed\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#99: FILE: drivers/base/firmware_class.c:445:
+	if (!tmp->name) {
+		printk(KERN_ERR "%s: kmalloc firmware_list->name failed\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp->list
#108: FILE: drivers/base/firmware_class.c:454:
+	list_add(&(tmp->list), &(firmwarelist.list));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around firmwarelist.list
#108: FILE: drivers/base/firmware_class.c:454:
+	list_add(&(tmp->list), &(firmwarelist.list));

CHECK:BRACES: braces {} should be used on all arms of this statement
#185: FILE: drivers/base/firmware_class.c:567:
+				if (tmp->count > 1) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#188: FILE: drivers/base/firmware_class.c:570:
+					return;
+				} else

CHECK:BRACES: Unbalanced braces around else statement
#188: FILE: drivers/base/firmware_class.c:570:
+				} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233097.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 5 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233097.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
