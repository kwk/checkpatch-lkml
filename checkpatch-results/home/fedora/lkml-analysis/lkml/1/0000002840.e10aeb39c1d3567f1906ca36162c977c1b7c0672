WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
N-trig is changing the way people interact with computers by providing a dual-mode pen and true multi-touch input device, specifically designed for today's advanced computing world.

WARNING:TYPO_SPELLING: 'Firware' may be misspelled - perhaps 'Firmware'?
#64: FILE: drivers/hid/hid-ntrig.c:27:
+ *	2.0 - N-trig Major Change - fully Support MTM Firware
   	                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'mounth' may be misspelled - perhaps 'month'?
#66: FILE: drivers/hid/hid-ntrig.c:29:
+ *		This Driver was tested for sevral mounth by N-trig with
   		                                  ^^^^^^

WARNING:TYPO_SPELLING: 'firwmare' may be misspelled - perhaps 'firmware'?
#90: FILE: drivers/hid/hid-ntrig.c:128:
+ * The driver will support MTM firwmare Pen, Finger (Up to 6)
                                ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <isPalm>
#113: FILE: drivers/hid/hid-ntrig.c:141:
+	__u8  isPalm;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/hid/hid-ntrig.c:285:
+				input_report_abs(input, ABS_MT_TOOL_TYPE,
+					MT_TOOL_PEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/hid/hid-ntrig.c:287:
+				input_report_abs(input, ABS_MT_POSITION_X,
+					nd->x_cord);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/hid/hid-ntrig.c:289:
+				input_report_abs(input, ABS_MT_POSITION_Y,
+					nd->y_cord);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#253: FILE: drivers/hid/hid-ntrig.c:295:
+					if (0 != nd->btn_pressed) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: drivers/hid/hid-ntrig.c:297:
+						input_event(input, EV_KEY,
+						  nd->btn_pressed, 0x00);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#260: FILE: drivers/hid/hid-ntrig.c:302:
+					if (BTN_LEFT != nd->btn_pressed) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/hid/hid-ntrig.c:305:
+						input_event(input, EV_KEY,
+						  nd->btn_pressed, 0x01);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#266: FILE: drivers/hid/hid-ntrig.c:308:
+				case EVENT_TOUCH_PEN:  /* FALLTHRU */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#268: FILE: drivers/hid/hid-ntrig.c:310:
+					if (BTN_RIGHT != nd->btn_pressed) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/hid/hid-ntrig.c:313:
+						input_event(input, EV_KEY,
+						    nd->btn_pressed, 0x01);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/hid/hid-ntrig.c:318:
+				input_report_abs(input, ABS_PRESSURE,
+				  nd->pressure);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/hid/hid-ntrig.c:321:
+				ntrig_dbg("X=%d Y=%d Button=%d Pressure=%d\n",
+				    nd->x_cord, nd->y_cord,

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#329: FILE: drivers/hid/hid-ntrig.c:333:
+			case HID_DG_TIPSWITCH:	/* FALLTHRU */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#330: FILE: drivers/hid/hid-ntrig.c:334:
+			case HID_DG_INRANGE:	/* FALLTHRU */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'X_CORD_VAL == nd->x_cord'
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&
+					    (DX_CORD_VAL == nd->dx) && (DY_CORD_VAL == nd->dy) &&
+					    (GENERIC_BYTE_VAL == value)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'Y_CORD_VAL == nd->y_cord'
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&
+					    (DX_CORD_VAL == nd->dx) && (DY_CORD_VAL == nd->dy) &&
+					    (GENERIC_BYTE_VAL == value)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DX_CORD_VAL == nd->dx'
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&
+					    (DX_CORD_VAL == nd->dx) && (DY_CORD_VAL == nd->dy) &&
+					    (GENERIC_BYTE_VAL == value)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DY_CORD_VAL == nd->dy'
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&
+					    (DX_CORD_VAL == nd->dx) && (DY_CORD_VAL == nd->dy) &&
+					    (GENERIC_BYTE_VAL == value)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'GENERIC_BYTE_VAL == value'
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&
+					    (DX_CORD_VAL == nd->dx) && (DY_CORD_VAL == nd->dy) &&
+					    (GENERIC_BYTE_VAL == value)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#359: FILE: drivers/hid/hid-ntrig.c:360:
+					if ((X_CORD_VAL == nd->x_cord) && (Y_CORD_VAL == nd->y_cord) &&

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#360: FILE: drivers/hid/hid-ntrig.c:361:
+					    (DX_CORD_VAL == nd->dx) && (DY_CORD_VAL == nd->dy) &&

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#361: FILE: drivers/hid/hid-ntrig.c:362:
+					    (GENERIC_BYTE_VAL == value)) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#362: FILE: drivers/hid/hid-ntrig.c:363:
+						if (MAX_FINGERS_SUPPORT == nd->fake_fingers--) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#362: FILE: drivers/hid/hid-ntrig.c:363:
+						if (MAX_FINGERS_SUPPORT == nd->fake_fingers--) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: drivers/hid/hid-ntrig.c:363:
+						if (MAX_FINGERS_SUPPORT == nd->fake_fingers--) {
[...]
+						} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#363: FILE: drivers/hid/hid-ntrig.c:364:
+							input_report_abs(input, ABS_MT_TOOL_TYPE, MT_TOOL_FINGER);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#364: FILE: drivers/hid/hid-ntrig.c:365:
+							input_report_abs(input, ABS_MT_TRACKING_ID, END_OF_REPORT);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#365: FILE: drivers/hid/hid-ntrig.c:366:
+							input_event(input, EV_MSC, MSC_SCAN, nd->frame_index);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#367: FILE: drivers/hid/hid-ntrig.c:368:
+							ntrig_dbg("Session Sync Frame %x\n", nd->frame_index);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#368: FILE: drivers/hid/hid-ntrig.c:369:
+						} else

CHECK:BRACES: Unbalanced braces around else statement
#368: FILE: drivers/hid/hid-ntrig.c:369:
+						} else

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#369: FILE: drivers/hid/hid-ntrig.c:370:
+							ntrig_dbg("Fake Finger %x\n", nd->frame_index);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#371: FILE: drivers/hid/hid-ntrig.c:372:
+						input_report_abs(input, ABS_MT_TOOL_TYPE, MT_TOOL_FINGER);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#372: FILE: drivers/hid/hid-ntrig.c:373:
+						input_report_abs(input, ABS_MT_TRACKING_ID, nd->finger_id);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#373: FILE: drivers/hid/hid-ntrig.c:374:
+						input_report_abs(input, ABS_MT_POSITION_X, nd->x_cord);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#374: FILE: drivers/hid/hid-ntrig.c:375:
+						input_report_abs(input, ABS_MT_POSITION_Y, nd->y_cord);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#377: FILE: drivers/hid/hid-ntrig.c:378:
+						input_event(input, EV_MSC, MSC_PULSELED, nd->generic_byte);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#381: FILE: drivers/hid/hid-ntrig.c:382:
+							nd->frame_index, nd->real_fingers, nd->x_cord,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/hid/hid-ntrig.c:382:
+						ntrig_dbg("Real Finger Index %x Count %d X=%d Y=%d DX=%d DY=%d FirstOccur=%d Palm=%d\n",
+							nd->frame_index, nd->real_fingers, nd->x_cord,

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#384: FILE: drivers/hid/hid-ntrig.c:385:
+						if (0 == --nd->real_fingers) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#385: FILE: drivers/hid/hid-ntrig.c:386:
+							input_event(input, EV_MSC, MSC_SCAN, nd->frame_index);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#387: FILE: drivers/hid/hid-ntrig.c:388:
+							ntrig_dbg("Real Finger Sync Frame %x\n", nd->frame_index);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002840.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 31 warnings, 17 checks, 369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002840.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
