WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#57: FILE: arch/arm/mach-at91/Kconfig:329:
+config AT91_2MMC
+	bool "Use both MMC Ports"
+	depends on MACH_AT91SAM9G20EK
+	help
+	  Select this if you have connected both MMC Slots.  Answer No if unsure.
+
 # ----------------------------------------------------------

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#80: FILE: arch/arm/mach-at91/at91sam9260_devices.c:275:
struct at91_mmc_data *data)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#87: FILE: arch/arm/mach-at91/at91sam9260_devices.c:282:
+ * -------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#89: FILE: arch/arm/mach-at91/at91sam9260_devices.c:284:
+#if defined(CONFIG_MMC_ATMELMCI) || defined(CONFIG_MMC_ATMELMCI_MODULE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: arch/arm/mach-at91/at91sam9260_devices.c:315:
+        unsigned int i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/arm/mach-at91/at91sam9260_devices.c:315:
+        unsigned int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/arm/mach-at91/at91sam9260_devices.c:316:
+        unsigned int slot_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/arm/mach-at91/at91sam9260_devices.c:316:
+        unsigned int slot_count = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/arm/mach-at91/at91sam9260_devices.c:321:
+        for (i = 0; i < ATMEL_MCI_MAX_NR_SLOTS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/arm/mach-at91/at91sam9260_devices.c:321:
+        for (i = 0; i < ATMEL_MCI_MAX_NR_SLOTS; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: arch/arm/mach-at91/at91sam9260_devices.c:322:
+                if (data->slot[i].bus_width) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/arm/mach-at91/at91sam9260_devices.c:322:
+                if (data->slot[i].bus_width) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: arch/arm/mach-at91/at91sam9260_devices.c:323:
+                        /* input/irq */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                        if (data->slot[i].detect_pin) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                        if (data->slot[i].detect_pin) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#129: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                        if (data->slot[i].detect_pin) {
[...]
at91_set_gpio_input(data->slot[i].detect_pin, 1);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#130: FILE: arch/arm/mach-at91/at91sam9260_devices.c:325:
+                        if (data->slot[i].detect_pin) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/arm/mach-at91/at91sam9260_devices.c:326:
+                                at91_set_deglitch(data->slot[i].detect_pin, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/arm/mach-at91/at91sam9260_devices.c:326:
+                                at91_set_deglitch(data->slot[i].detect_pin, 1);$

ERROR:SPACING: space required before the open parenthesis '('
#137: FILE: arch/arm/mach-at91/at91sam9260_devices.c:331:
+			switch(i) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#161: FILE: arch/arm/mach-at91/at91sam9260_devices.c:355:
+				printk("Configuration Error, No MMC Port %d\n",i);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#161: FILE: arch/arm/mach-at91/at91sam9260_devices.c:355:
+				printk("Configuration Error, No MMC Port %d\n",i);
 				                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/arm/mach-at91/at91sam9260_devices.c:359:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/arm/mach-at91/at91sam9260_devices.c:359:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/arm/mach-at91/at91sam9260_devices.c:360:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/arm/mach-at91/at91sam9260_devices.c:360:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/arm/mach-at91/at91sam9260_devices.c:362:
+        if (slot_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/arm/mach-at91/at91sam9260_devices.c:362:
+        if (slot_count) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/arm/mach-at91/at91sam9260_devices.c:363:
+                /* CLK */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/arm/mach-at91/at91sam9260_devices.c:364:
+                at91_set_A_periph(AT91_PIN_PA8, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/arm/mach-at91/at91sam9260_devices.c:364:
+                at91_set_A_periph(AT91_PIN_PA8, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/arm/mach-at91/at91sam9260_devices.c:366:
+                mmc_data = *data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/arm/mach-at91/at91sam9260_devices.c:366:
+                mmc_data = *data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/arm/mach-at91/at91sam9260_devices.c:367:
+                platform_device_register(&at91sam9260_mmc_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/arm/mach-at91/at91sam9260_devices.c:367:
+                platform_device_register(&at91sam9260_mmc_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/arm/mach-at91/at91sam9260_devices.c:368:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/arm/mach-at91/at91sam9260_devices.c:368:
+        }$

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#228: FILE: arch/arm/mach-at91/board-sam9g20ek.c:209:
+static struct mci_platform_data __initdata ek_mmc_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#246: FILE: arch/arm/mach-at91/board-sam9g20ek.c:227:
+static struct amci_platform_data __initdata ek_mmc_data = {

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#283: FILE: arch/arm/mach-at91/include/mach/board.h:40:
+#if defined(CONFIG_MMC_ATMELMCI) || defined(CONFIG_MMC_ATMELMCI_MODULE)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: arch/arm/mach-at91/include/mach/board.h:79:
+extern void __init at91_add_device_mmc(short mmc_id, struct

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000110889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 21 warnings, 2 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000110889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
