CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#272: FILE: kernel/trace/trace_binary/zed.h:176:
+extern void zed_set_core_event(enum zed_event_id event_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: kernel/trace/trace_binary/zed.h:226:
+	struct rchan_buf *buf = zed_channel->buf[smp_processor_id()];
+	buf->offset -= zed_events[event_id]->size + var_len;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#297: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#302: FILE: kernel/trace/trace_binary/zed_filter.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#316: FILE: kernel/trace/trace_binary/zed_filter.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#317: FILE: kernel/trace/trace_binary/zed_filter.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:BRACES: braces {} should be used on all arms of this statement
#397: FILE: kernel/trace/trace_binary/zed_filter.c:96:
+		if (event->preds[i]) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#404: FILE: kernel/trace/trace_binary/zed_filter.c:103:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#425: FILE: kernel/trace/trace_binary/zed_filter.c:124:
+		if (event->preds[i]) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#437: FILE: kernel/trace/trace_binary/zed_filter.c:136:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: kernel/trace/trace_binary/zed_filter.c:147:
+		int i;
+		for (i = 0; i < MAX_PRED; i++) {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#477: FILE: kernel/trace/trace_binary/zed_filter.c:176:
+		event->preds = kzalloc(MAX_PRED * sizeof(pred), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#545: FILE: kernel/trace/trace_binary/zed_filter.c:244:
+	while ((tok = strsep(pbuf, " \n"))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#547: FILE: kernel/trace/trace_binary/zed_filter.c:246:
+			if (!strcmp(tok, "0"))
[...]
+			else if (!strcmp(tok, "1"))
[...]
+			else if (!strcmp(tok, "and")) {
[...]
+			} else if (!strcmp(tok, "or")) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#557: FILE: kernel/trace/trace_binary/zed_filter.c:256:
+			} else

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#595: FILE: kernel/trace/trace_binary/zed_filter.c:294:
+	*val = simple_strtoull(val_str, &tmp, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#602: FILE: kernel/trace/trace_binary/zed_filter.c:301:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#609: FILE: kernel/trace/trace_binary/zed_filter.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#623: FILE: kernel/trace/trace_binary/zed_filter.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#624: FILE: kernel/trace/trace_binary/zed_filter.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#644: FILE: kernel/trace/trace_binary/zed_filter.h:36:
+extern ssize_t print_preds(struct zed_event *event, char *page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: kernel/trace/trace_binary/zed_filter.h:38:
+extern int parse_filter_enable(char **pbuf, int *not, int *or, int *compound,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#648: FILE: kernel/trace/trace_binary/zed_filter.h:40:
+extern int zed_add_pred(struct zed_event *event, char *field_name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#650: FILE: kernel/trace/trace_binary/zed_filter.h:42:
+extern void zed_free_preds(struct zed_event *event);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: kernel/trace/trace_binary/zed_filter.h:43:
+extern int zed_match_preds(struct zed_event *event, void *rec);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161544.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 8 warnings, 13 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000161544.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
