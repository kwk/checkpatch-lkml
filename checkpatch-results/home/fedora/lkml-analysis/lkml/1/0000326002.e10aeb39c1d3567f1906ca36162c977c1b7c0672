WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-davem

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMIIStatus>
#126: FILE: drivers/net/forcedeth.c:1067:
+	writel(NVREG_MIISTAT_MASK_RW, base + NvRegMIIStatus);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMacAddrA>
#142: FILE: drivers/net/forcedeth.c:1446:
+	temp1 = readl(base + NvRegMacAddrA);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMacAddrB>
#143: FILE: drivers/net/forcedeth.c:1447:
+	temp2 = readl(base + NvRegMacAddrB);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegTransmitPoll>
#144: FILE: drivers/net/forcedeth.c:1448:
+	temp3 = readl(base + NvRegTransmitPoll);

CHECK:CAMELCASE: Avoid CamelCase: <txrxFlags>
#165: FILE: drivers/net/forcedeth.c:2787:
+	u32 txrxFlags = 0;

CHECK:CAMELCASE: Avoid CamelCase: <NvRegTransmitterControl>
#174: FILE: drivers/net/forcedeth.c:2884:
+	if (readl(base + NvRegTransmitterControl) & NVREG_XMITCTL_START) {

CHECK:CAMELCASE: Avoid CamelCase: <NvRegReceiverControl>
#178: FILE: drivers/net/forcedeth.c:2888:
+	if (readl(base + NvRegReceiverControl) & NVREG_RCVCTL_START) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/net/iseries_veth.c:1024:
+static struct net_device *veth_probe_one(int vlan,
 		struct vio_dev *vio_dev)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: drivers/net/ixgbe/ixgbe.h:244:
+extern void ixgbe_reinit_locked(struct ixgbe_adapter *adapter);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10000baseT_Full>
#322: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:110:
+	ecmd->supported = SUPPORTED_10000baseT_Full;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#326: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:114:
+		ecmd->supported |= (SUPPORTED_1000baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10000baseT_Full>
#331: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:119:
+			ecmd->advertising |= ADVERTISED_10000baseT_Full;

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_1000baseT_Full>
#333: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:121:
+			ecmd->advertising |= ADVERTISED_1000baseT_Full;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecmd->autoneg == AUTONEG_ENABLE'
#377: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:152:
+		if ((ecmd->autoneg == AUTONEG_ENABLE) ||
+		    (ecmd->speed + ecmd->duplex != SPEED_10000 + DUPLEX_FULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pause->autoneg == AUTONEG_ENABLE'
#404: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:188:
+	if ((pause->autoneg == AUTONEG_ENABLE) ||
+	    (pause->rx_pause && pause->tx_pause))

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#452: FILE: drivers/net/ixgbe/ixgbe_ethtool.c:682:
+		msleep(1);

CHECK:BIT_MACRO: Prefer using the BIT macro
#515: FILE: drivers/net/ixgbe/ixgbe_main.c:188:
+#define IXGBE_MAX_DATA_PER_TXD	(1 << IXGBE_MAX_TXD_PWR)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'S' - possible side-effects?
#518: FILE: drivers/net/ixgbe/ixgbe_main.c:191:
+#define TXD_USE_COUNT(S) (((S) >> IXGBE_MAX_TXD_PWR) + \
+			 (((S) & (IXGBE_MAX_DATA_PER_TXD - 1)) ? 1 : 0))

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: drivers/net/ixgbe/ixgbe_main.c:225:
+				unsigned int segs, bytecount;
+				segs = skb_shinfo(skb)->gso_segs ?: 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#792: FILE: drivers/net/ixgbe/ixgbe_main.c:1312:
+		msleep(1);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#969: FILE: drivers/net/ixgbe/ixgbe_main.c:2082:
+	/*
+	 * 82598 errata - tx of flow control packets is included in tx counters

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1036: FILE: drivers/net/ixgbe/ixgbe_main.c:2443:
+	 * but since that doesn't exist yet, just open code it. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1040: FILE: drivers/net/ixgbe/ixgbe_main.c:2447:
+	 * made room available. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1058: FILE: drivers/net/ixgbe/ixgbe_main.c:2465:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1137: FILE: drivers/net/mv643xx_eth.c:1697:
+		BUG_ON(skb->protocol != htons(ETH_P_IP));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1199: FILE: drivers/net/sky2.c:2571:
+			if ((hw->flags & SKY2_HW_RAM_BUFFER) &&
 			     sky2_rx_hung(dev)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1270: FILE: drivers/net/tlan.c:489:
+		printk(KERN_ERR "TLAN: Could not register pci driver.\n");

CHECK:CAMELCASE: Avoid CamelCase: <TLanPadBuffer>
#1291: FILE: drivers/net/tlan.c:509:
+	pci_free_consistent(NULL, TLAN_MIN_FRAME_SIZE, TLanPadBuffer, TLanPadBufferDMA);

CHECK:CAMELCASE: Avoid CamelCase: <TLanPadBufferDMA>
#1291: FILE: drivers/net/tlan.c:509:
+	pci_free_consistent(NULL, TLAN_MIN_FRAME_SIZE, TLanPadBuffer, TLanPadBufferDMA);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1345: FILE: drivers/net/virtio_net.c:306:
+	 * We synchronize against interrupts via NAPI_STATE_SCHED */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1371: FILE: drivers/net/wan/hdlc.c:42:
+static const char* version = "HDLC support module revision 1.22";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1393: FILE: drivers/net/wan/hdlc.c:76:
+	BUG_ON(!hdlc->proto->netif_rx);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1501: FILE: drivers/net/wan/hdlc_fr.c:177:
+static inline struct frad_state* state(hdlc_device *hdlc)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1508: FILE: drivers/net/wan/hdlc_fr.c:182:
+static inline struct pvc_desc* pvcdev_to_desc(struct net_device *dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1513: FILE: drivers/net/wan/hdlc_fr.c:187:
+static inline struct net_device_stats* pvc_get_stats(struct net_device *dev)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1607: FILE: drivers/net/wan/hdlc_fr.c:1122:
+	if (type == ARPHRD_ETHER)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1609: FILE: drivers/net/wan/hdlc_fr.c:1124:
+	else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1735: FILE: drivers/net/wan/hdlc_x25.c:215:
+		if ((result = attach_hdlc_protocol(dev, &proto, 0)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1784: FILE: include/linux/hdlc.h:82:
+static inline struct hdlc_device* dev_to_hdlc(struct net_device *dev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326002.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 11 warnings, 23 checks, 1510 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326002.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
