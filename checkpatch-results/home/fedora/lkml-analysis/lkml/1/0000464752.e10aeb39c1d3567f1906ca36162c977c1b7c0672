WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
The ioctl list is split into two: global kvm ioctls and per-vm ioctls.  A new

WARNING:CONST_STRUCT: struct file_operations should normally be const
#52: FILE: drivers/kvm/kvm_main.c:99:
+static struct inode *kvmfs_inode(struct file_operations *fops)

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#69: FILE: drivers/kvm/kvm_main.c:116:
+	inode->i_mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#72: FILE: drivers/kvm/kvm_main.c:119:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#128: FILE: drivers/kvm/kvm_main.c:300:
+static int kvm_dev_open(struct inode *inode, struct file *filp)
                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#151: FILE: drivers/kvm/kvm_main.c:370:
+static int kvm_vm_release(struct inode *inode, struct file *filp)
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#165: FILE: drivers/kvm/kvm_main.c:1967:
+static long kvm_vm_ioctl(struct file *filp,
                                       ^^^^

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#183: FILE: drivers/kvm/kvm_main.c:2116:
+	default:
+		;

switch default case is sometimes written as "default:;".  This can
cause new cases added below default to be defective.

A "break;" should be added after empty default statement to avoid
unwanted fallthrough.

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#211: FILE: drivers/kvm/kvm_main.c:2144:
+static struct vm_operations_struct kvm_vm_vm_ops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#221: FILE: drivers/kvm/kvm_main.c:2154:
+static struct file_operations kvm_vm_fops = {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#266: FILE: drivers/kvm/kvm_main.c:2199:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#271: FILE: drivers/kvm/kvm_main.c:2204:
+static long kvm_dev_ioctl(struct file *filp,
                                        ^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464752.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 1 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464752.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
