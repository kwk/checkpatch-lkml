WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: arch/um/kernel/init_task.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#137: FILE: arch/um/kernel/init_task.c:42:
+	__attribute__((__section__(".data.init_task"))) =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#138: FILE: arch/um/kernel/init_task.c:43:
+	__attribute__((__section__(".data.init_task"))) =
+		{ INIT_THREAD_INFO(init_task) };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_irqstack") over __attribute__((__section__(".data.init_irqstack")))
#141: FILE: arch/um/kernel/init_task.c:46:
+	__attribute__((__section__(".data.init_irqstack"))) =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#142: FILE: arch/um/kernel/init_task.c:47:
+	__attribute__((__section__(".data.init_irqstack"))) =
+		{ INIT_THREAD_INFO(init_task) };

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#154: FILE: arch/um/kernel/skas/process.c:166:
+extern char cpu0_irqstack[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#158: FILE: arch/um/kernel/skas/process.c:170:
+	stack_protections((unsigned long) &cpu0_irqstack);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#249: FILE: arch/um/kernel/irq.c:529:
+	if(mask != 0){

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: arch/um/kernel/irq.c:529:
+	if(mask != 0){

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: arch/um/kernel/irq.c:542:
+		} while(mask != old);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ti->real_thread"
#267: FILE: arch/um/kernel/irq.c:547:
+	nested = (ti->real_thread != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#268: FILE: arch/um/kernel/irq.c:548:
+	if(!nested){

ERROR:SPACING: space required before the open parenthesis '('
#268: FILE: arch/um/kernel/irq.c:548:
+	if(!nested){

CHECK:SPACING: No space is necessary after a cast
#323: FILE: arch/um/os-Linux/sys-i386/signal.c:12:
+	handle_signal(sig, (struct sigcontext *) (&sig + 1));

ERROR:SPACING: space required before the open parenthesis '('
#383: FILE: arch/um/os-Linux/signal.c:138:
+		if(bail)

ERROR:SPACING: space required before the open brace '{'
#389: FILE: arch/um/os-Linux/signal.c:144:
+		while((sig = ffs(pending)) != 0){

ERROR:SPACING: space required before the open parenthesis '('
#389: FILE: arch/um/os-Linux/signal.c:144:
+		while((sig = ffs(pending)) != 0){

ERROR:SPACING: space required before the open parenthesis '('
#400: FILE: arch/um/os-Linux/signal.c:155:
+		if(!nested)

ERROR:SPACING: space required before the open parenthesis '('
#402: FILE: arch/um/os-Linux/signal.c:157:
+	} while(pending);

CHECK:SPACING: No space is necessary after a cast
#430: FILE: arch/um/os-Linux/sys-x86_64/signal.c:15:
+	handle_signal(sig, (struct sigcontext *) &uc->uc_mcontext);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 4 warnings, 4 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
