WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#42: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: arch/score/mm/cache.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#48: FILE: arch/score/mm/cache.c:2:
+ * arch/score/mm/cache.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: arch/score/mm/cache.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#79: FILE: arch/score/mm/cache.c:33:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#82: FILE: arch/score/mm/cache.c:36:
+/*
+Just flush entire Dcache!!

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: arch/score/mm/cache.c:44:
+	unsigned int i;
+	for (i = 0; i < (PAGE_SIZE / L1_CACHE_BYTES); i += L1_CACHE_BYTES) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#91: FILE: arch/score/mm/cache.c:45:
+		__asm__ __volatile__(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: arch/score/mm/cache.c:56:
+void __update_cache(struct vm_area_struct *vma, unsigned long address,
+		pte_t pte)

CHECK:SPACING: No space is necessary after a cast
#113: FILE: arch/score/mm/cache.c:67:
+		addr = (unsigned long) page_address(page);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#140: FILE: arch/score/mm/cache.c:94:
+void __devinit cpu_cache_init(void)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#147: FILE: arch/score/mm/cache.c:101:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'flush_icache_all', this function's name, in a string
#148: FILE: arch/score/mm/cache.c:102:
+	"la r8, flush_icache_all\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#156: FILE: arch/score/mm/cache.c:110:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'flush_dcache_all', this function's name, in a string
#157: FILE: arch/score/mm/cache.c:111:
+	"la r8, flush_dcache_all\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#167: FILE: arch/score/mm/cache.c:121:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'flush_cache_all', this function's name, in a string
#168: FILE: arch/score/mm/cache.c:122:
+	"la r8, flush_cache_all\n"

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#186: FILE: arch/score/mm/cache.c:140:
+/*if we flush a range precisely , the processing may be very long.
+We must check each page in the range whether present. If the page is present,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#191: FILE: arch/score/mm/cache.c:145:
+/*
+The interface is provided in hopes that the port can find

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: arch/score/mm/cache.c:150:
+void flush_cache_range(struct vm_area_struct *vma,
+		unsigned long start, unsigned long end)

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: arch/score/mm/cache.c:169:
+		unsigned long tmpend;
+		pgdp = pgd_offset(mm, start);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#224: FILE: arch/score/mm/cache.c:178:
+		tmpend = (start | (PAGE_SIZE-1)) > end ?
 		                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#225: FILE: arch/score/mm/cache.c:179:
+				 end : (start | (PAGE_SIZE-1));
 				                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: arch/score/mm/cache.c:189:
+void flush_cache_page(struct vm_area_struct *vma,
+		unsigned long addr, unsigned long pfn)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#248: FILE: arch/score/mm/cache.c:202:
+	__asm__ __volatile__(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#265: FILE: arch/score/mm/cache.c:219:
+/*
+1. WB and invalid a cache line of Dcache

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#278: FILE: arch/score/mm/cache.c:232:
+		__asm__ __volatile__(

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: arch/score/mm/cache.c:245:
+	int size, i;
+	start = start & ~(L1_CACHE_BYTES - 1);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#297: FILE: arch/score/mm/cache.c:251:
+		__asm__ __volatile__(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#310: FILE: arch/score/mm/init.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#311: FILE: arch/score/mm/init.c:2:
+ * arch/score/mm/init.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#332: FILE: arch/score/mm/init.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:SPACING: No space is necessary after a cast
#364: FILE: arch/score/mm/init.c:55:
+	page = virt_to_page((void *) empty_zero_page);

CHECK:SPACING: No space is necessary after a cast
#396: FILE: arch/score/mm/init.c:87:
+	high_memory = (void *) __va(max_low_pfn << PAGE_SHIFT);

CHECK:SPACING: No space is necessary after a cast
#409: FILE: arch/score/mm/init.c:100:
+	codesize = (unsigned long) &_etext - (unsigned long) &_text;

CHECK:SPACING: No space is necessary after a cast
#410: FILE: arch/score/mm/init.c:101:
+	datasize = (unsigned long) &_edata - (unsigned long) &_etext;

CHECK:SPACING: No space is necessary after a cast
#411: FILE: arch/score/mm/init.c:102:
+	initsize = (unsigned long) &__init_end - (unsigned long) &__init_begin;

CHECK:SPACING: No space is necessary after a cast
#414: FILE: arch/score/mm/init.c:105:
+	kclist_add(&kcore_vmalloc, (void *) VMALLOC_START,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: arch/score/mm/init.c:106:
+	kclist_add(&kcore_vmalloc, (void *) VMALLOC_START,
+			VMALLOC_END - VMALLOC_START);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#417: FILE: arch/score/mm/init.c:108:
+	printk(KERN_INFO "Memory: %luk/%luk available (%ldk kernel code, "

WARNING:SPLIT_STRING: quoted string split across lines
#418: FILE: arch/score/mm/init.c:109:
+	printk(KERN_INFO "Memory: %luk/%luk available (%ldk kernel code, "
+			"%ldk reserved, %ldk data, %ldk init, %ldk highmem)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#419: FILE: arch/score/mm/init.c:110:
+			(unsigned long) nr_free_pages() << (PAGE_SHIFT-10),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#419: FILE: arch/score/mm/init.c:110:
+			(unsigned long) nr_free_pages() << (PAGE_SHIFT-10),
 			                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#420: FILE: arch/score/mm/init.c:111:
+			ram << (PAGE_SHIFT-10), codesize >> 10,
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#421: FILE: arch/score/mm/init.c:112:
+			reservedpages << (PAGE_SHIFT-10), datasize >> 10,
 			                            ^

CHECK:SPACING: No space is necessary after a cast
#423: FILE: arch/score/mm/init.c:114:
+			(unsigned long) (totalhigh_pages << (PAGE_SHIFT-10)));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#423: FILE: arch/score/mm/init.c:114:
+			(unsigned long) (totalhigh_pages << (PAGE_SHIFT-10)));
 			                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#441: FILE: arch/score/mm/init.c:132:
+	printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) >> 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: arch/score/mm/init.c:139:
+	free_init_pages("initrd memory",
+		virt_to_phys((void *) start),

CHECK:SPACING: No space is necessary after a cast
#448: FILE: arch/score/mm/init.c:139:
+		virt_to_phys((void *) start),

CHECK:SPACING: No space is necessary after a cast
#449: FILE: arch/score/mm/init.c:140:
+		virt_to_phys((void *) end));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: arch/score/mm/init.c:147:
+	free_init_pages("unused kernel memory",
+	__pa(&__init_begin),

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#462: FILE: arch/score/mm/init.c:153:
+#define __page_aligned(order) __attribute__((__aligned__(PAGE_SIZE<<order)))
                                                                   ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'order' may be better as '(order)' to avoid precedence issues
#462: FILE: arch/score/mm/init.c:153:
+#define __page_aligned(order) __attribute__((__aligned__(PAGE_SIZE<<order)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE<<order) over __attribute__((__aligned__(PAGE_SIZE<<order)))
#462: FILE: arch/score/mm/init.c:153:
+#define __page_aligned(order) __attribute__((__aligned__(PAGE_SIZE<<order)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079749.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 33 checks, 418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079749.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
