CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: drivers/char/nozomi.c:801:
+	size = kfifo_get(&port->fifo_ul, dc->send_buf,
 			   ul_size < SEND_BUF_MAX ? ul_size : SEND_BUF_MAX);

CHECK:SPACING: No space is necessary after a cast
#110: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+		kfifo_put(fifo, (unsigned char *) &entry, sizeof(u32));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:75:
+			kfifo_put(fifo,
 				(unsigned char *) &rarray[idx],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:82:
+			kfifo_put(fifo,
 				(unsigned char *) &rarray[i],

CHECK:SPACING: No space is necessary after a cast
#133: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+			kfifo_put(fifo, (unsigned char *) &i, sizeof(u32));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:123:
+			kfifo_put(&rdev_p->rscp->qpid_fifo,
 				    (unsigned char *) &i, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#188: FILE: drivers/net/wireless/libertas/main.c:857:
+			kfifo_get(&priv->event_fifo, (unsigned char *) &event,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/net/wireless/libertas/main.c:858:
+			kfifo_get(&priv->event_fifo, (unsigned char *) &event,
 				sizeof(event));

CHECK:SPACING: No space is necessary after a cast
#197: FILE: drivers/net/wireless/libertas/main.c:1581:
+	kfifo_put(&priv->event_fifo, (unsigned char *) &event, sizeof(u32));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#221: FILE: drivers/scsi/libiscsi.c:431:
+	kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#221: FILE: drivers/scsi/libiscsi.c:431:
+	kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/scsi/libiscsi.c:618:
+		if (!kfifo_get(&session->cmdpool.queue,
 				 (void*)&task, sizeof(void*)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/scsi/libiscsi.c:1380:
+	if (!kfifo_get(&conn->session->cmdpool.queue,
 			 (void *) &task, sizeof(void *)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#248: FILE: drivers/scsi/libiscsi.c:2132:
+		kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#248: FILE: drivers/scsi/libiscsi.c:2132:
+		kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/scsi/libiscsi.c:2480:
+	if (!kfifo_get(&session->cmdpool.queue,
                          (void*)&conn->login_task,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#266: FILE: drivers/scsi/libiscsi.c:2499:
+	kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/scsi/libiscsi.c:2500:
+	kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,
 		    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#275: FILE: drivers/scsi/libiscsi.c:2562:
+	kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/scsi/libiscsi.c:2563:
+	kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,
 		    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#288: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#288: FILE: drivers/scsi/libiscsi_tcp.c:448:
+	while (kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#289: FILE: drivers/scsi/libiscsi_tcp.c:449:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/scsi/libiscsi_tcp.c:450:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#297: FILE: drivers/scsi/libiscsi_tcp.c:456:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/scsi/libiscsi_tcp.c:457:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#306: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#306: FILE: drivers/scsi/libiscsi_tcp.c:544:
+	rc = kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#315: FILE: drivers/scsi/libiscsi_tcp.c:557:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/scsi/libiscsi_tcp.c:558:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: drivers/scsi/libiscsi_tcp.c:573:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/scsi/libiscsi_tcp.c:574:
+		kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
 			    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#333: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#333: FILE: drivers/scsi/libiscsi_tcp.c:583:
+	kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#342: FILE: drivers/scsi/libiscsi_tcp.c:954:
+	BUG_ON(kfifo_len(&tcp_task->r2tqueue));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/scsi/libiscsi_tcp.c:986:
+				kfifo_put(&tcp_task->r2tpool.queue,
 					    (void *)&tcp_task->r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/scsi/libiscsi_tcp.c:994:
+			kfifo_get(&tcp_task->r2tqueue,
 				    (void *)&tcp_task->r2t, sizeof(void *));

CHECK:SPACING: No space is necessary after a cast
#372: FILE: drivers/scsi/libsrp.c:64:
+		kfifo_put(&q->queue, (void *) &iue, sizeof(void *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/linux/kfifo.h:40:
+extern __must_check unsigned int kfifo_put(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: include/linux/kfifo.h:41:
+extern __must_check unsigned int kfifo_put(struct kfifo *fifo,
 				const unsigned char *from, unsigned int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/kfifo.h:42:
+extern __must_check unsigned int kfifo_get(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: include/linux/kfifo.h:43:
+extern __must_check unsigned int kfifo_get(struct kfifo *fifo,
 				unsigned char *to, unsigned int len);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#432: FILE: include/linux/kfifo.h:51:
+	fifo->in = fifo->out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: kernel/kfifo.c:115:
+unsigned int kfifo_put(struct kfifo *fifo,
 			const unsigned char *from, unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: kernel/kfifo.c:161:
+unsigned int kfifo_get(struct kfifo *fifo,
 			 unsigned char *to, unsigned int len)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084507.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 1 warnings, 28 checks, 412 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084507.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
