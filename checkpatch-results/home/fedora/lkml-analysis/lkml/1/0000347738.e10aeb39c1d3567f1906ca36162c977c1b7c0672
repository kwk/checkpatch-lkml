CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#51: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:196:
+	if ((regs
+	     && notify_die(DIE_NMI, "machine check", regs, error_code,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#53: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:198:
+			   18, SIGKILL) == NOTIFY_STOP)
+	    || !banks)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: arch/x86/kernel/traps_64.c:518:
+int __kprobes __die(const char * str, struct pt_regs * regs, long err)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: arch/x86/kernel/traps_64.c:518:
+int __kprobes __die(const char * str, struct pt_regs * regs, long err)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/asm-x86/kdebug.h:27:
+extern int __must_check __die(const char *, struct pt_regs *, long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#168: FILE: include/asm-x86/kdebug.h:27:
+extern int __must_check __die(const char *, struct pt_regs *, long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#168: FILE: include/asm-x86/kdebug.h:27:
+extern int __must_check __die(const char *, struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#168: FILE: include/asm-x86/kdebug.h:27:
+extern int __must_check __die(const char *, struct pt_regs *, long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: include/asm-x86/kdebug.h:31:
+extern void oops_end(unsigned long, struct pt_regs *, int signr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#173: FILE: include/asm-x86/kdebug.h:31:
+extern void oops_end(unsigned long, struct pt_regs *, int signr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#173: FILE: include/asm-x86/kdebug.h:31:
+extern void oops_end(unsigned long, struct pt_regs *, int signr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 4 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
