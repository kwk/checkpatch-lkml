WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#40: 
complete this. Feel free to complete it but keep me posted so that I wont
                                                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#43: 
The modifications to asm-generic/cmpxchg-local wont work since we need to
                                               ^^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#67: FILE: include/asm-generic/cmpxchg-local.h:11:
+static inline unsigned long ____cmpxchg_local_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: include/asm-generic/cmpxchg-local.h:12:
+static inline unsigned long ____cmpxchg_local_generic(volatile void *ptr,
 		unsigned long old, unsigned long new, int size)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#95: FILE: include/asm-generic/cmpxchg-local.h:49:
+static inline unsigned long __cmpxchg_local_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: include/asm-generic/cmpxchg-local.h:50:
+static inline unsigned long __cmpxchg_local_generic(volatile void *ptr,
+		unsigned long old, unsigned long new, int size)

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#101: FILE: include/asm-generic/cmpxchg-local.h:55:
+	r = ____cmpxchg_local_generic(ptr, old, new ,size);
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:WxV)
#101: FILE: include/asm-generic/cmpxchg-local.h:55:
+	r = ____cmpxchg_local_generic(ptr, old, new ,size);
 	                                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#120: FILE: include/linux/percpu.h:448:
+#  define this_cpu_cmpxchg_1(pcp, old, new) this_cpu_cmpxchg_generic(((pcp), (old), (new), 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#123: FILE: include/linux/percpu.h:451:
+#  define this_cpu_cmpxchg_2(pcp, old, new) this_cpu_cmpxchg_generic(((pcp), (old), (new), 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#126: FILE: include/linux/percpu.h:454:
+#  define this_cpu_cmpxchg_4(pcp, old, new) this_cpu_cmpxchg_generic(((pcp), (old), (new), 4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#129: FILE: include/linux/percpu.h:457:
+#  define this_cpu_cmpxchg_8(pcp, old, new) this_cpu_cmpxchg_generic(((pcp), (old), (new), 8)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pcp' - possible side-effects?
#134: FILE: include/linux/percpu.h:462:
+#define _this_cpu_generic_xchg_op(pcp, val)				\
+  ({									\
+	typeof(*(var)) __tmp_var__;					\
+	preempt_disable();						\
+	__tmp_var = __this_cpu_read(pcp);				\
+	__this_cpu_read(pcp) = (val);					\
+	preemt_enable();						\
+	__tmp_var__;							\
+  })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/linux/percpu.h:463:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: include/linux/percpu.h:470:
+  })$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#169: FILE: include/linux/percpu.h:641:
+#  define __this_cpu_cmpxchg _1(pcp, old, new) ____cmpxchg_local_generic(__this_cpu_ptr(pcp), (old), (new), 1)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#169: FILE: include/linux/percpu.h:641:
+#  define __this_cpu_cmpxchg _1(pcp, old, new) ____cmpxchg_local_generic(__this_cpu_ptr(pcp), (old), (new), 1)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#172: FILE: include/linux/percpu.h:644:
+#  define __this_cpu_cmpxchg_2(pcp, old, new) ____cmpxchg_local_generic(__this_cpu_ptr(pcp), (old), (new), 2)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#175: FILE: include/linux/percpu.h:647:
+#  define __this_cpu_cmpxchg_4(pcp, old, new) ____cmpxchg_local_generic(__this_cpu_ptr(pcp), (old), (new), 4)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#178: FILE: include/linux/percpu.h:650:
+#  define __this_cpu_cmpxchg_8(pcp, old, new) ____cmpxchg_local_generic(__this_cpu_ptr(pcp), (old), (new), 8)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#180: FILE: include/linux/percpu.h:652:
+# define __this_cpu_cmpxchg(pcp, old, new) __pcpu_size_call_return(__this_cpu_cmpxchg_, (old), (new))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pcp' - possible side-effects?
#183: FILE: include/linux/percpu.h:655:
+#define _this_cpu_generic_xchg_op(pcp, val)				\
+  ({									\
+	typeof(*(var)) __tmp_var__;					\
+	__tmp_var = __this_cpu_read(pcp);				\
+	__this_cpu_write((pcp), val);					\
+	__tmp_var__;							\
+  })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: include/linux/percpu.h:656:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/linux/percpu.h:661:
+  })$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#216: FILE: include/linux/percpu.h:796:
+#  define irqsafe_cpu_cmpxchg_1(pcp, old, new) __cmpxchg_local_generic(((pcp), (old), (new), 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#219: FILE: include/linux/percpu.h:799:
+#  define irqsafe_cpu_cmpxchg_2(pcp, old, new) __cmpxchg_local_generic(((pcp), (old), (new), 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#222: FILE: include/linux/percpu.h:802:
+#  define irqsafe_cpu_cmpxchg_4(pcp, old, new) __cmpxchg_local_generic(((pcp), (old), (new), 4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#225: FILE: include/linux/percpu.h:805:
+#  define irqsafe_cpu_cmpxchg_8(pcp, old, new) __cmpxchg_local_generic(((pcp), (old), (new), 8)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#227: FILE: include/linux/percpu.h:807:
+# define irqsafe_cpu_cmpxchg(pcp, old, new) __pcpu_size_call_return(irqsafe_cpu_cmpxchg_, (old), (new))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pcp' - possible side-effects?
#230: FILE: include/linux/percpu.h:810:
+#define irqsafe_generic_xchg_op(pcp, val)				\
+  ({									\
+	typeof(*(var)) __tmp_var__;					\
+	unsigned long flags;						\
+	local_irq_disable(flags);					\
+	__tmp_var = __this_cpu_read(pcp);				\
+	__this_cpu_write(pcp, val);					\
+	local_irq_enable(flags);					\
+	__tmp_var__;							\
+  })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: include/linux/percpu.h:811:
+  ({^I^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/linux/percpu.h:819:
+  })$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pcp' may be better as '(pcp)' to avoid precedence issues
#257: FILE: include/linux/percpu.h:837:
+#define _this_cpu_generic_add_return_op(pcp, val)			\
+do {									\
+	preempt_disable();						\
+	*__this_cpu_ptr(&pcp) op val;					\
+	preempt_enable();						\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: include/linux/percpu.h:844:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032480.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 16 warnings, 7 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032480.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
