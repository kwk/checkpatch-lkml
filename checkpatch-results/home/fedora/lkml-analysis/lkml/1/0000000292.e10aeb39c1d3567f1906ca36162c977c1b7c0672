WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/staging/memrar/Kconfig:1:
+config MRST_RAR_HANDLER
+	tristate "RAR handler driver for Intel Moorestown platform"
+	select RAR_REGISTER
+	---help---
+	  This driver provides a memory management interface to
+	  restricted access regions (RAR) available on the Intel
+	  Moorestown platform.
+
+	  Once locked down, restricted access regions are only
+	  accessible by specific hardware on the platform.  The x86
+	  CPU is typically not one of those platforms.  As such this
+	  driver does not access RAR, and only provides a buffer
+	  allocation/bookkeeping mechanism.
+
+	  If unsure, say N.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: drivers/staging/memrar/memrar.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: drivers/staging/memrar/memrar.h:14:
+ *      License along with this program; if not, write to the Free$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/staging/memrar/memrar.h:15:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: drivers/staging/memrar/memrar.h:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: drivers/staging/memrar/memrar.h:28:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#159: FILE: drivers/staging/memrar/memrar.h:40:
+	/*
+	* Total size of RAR memory region.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/staging/memrar/memrar.h:48:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#185: FILE: drivers/staging/memrar/memrar.h:66:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: drivers/staging/memrar/memrar.h:78:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: drivers/staging/memrar/memrar.h:116:
+extern size_t rar_reserve(struct RAR_buffer *buffers,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: drivers/staging/memrar/memrar.h:134:
+extern size_t rar_release(struct RAR_buffer *buffers,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: drivers/staging/memrar/memrar.h:154:
+extern size_t rar_handle_to_bus(struct RAR_buffer *buffers,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: drivers/staging/memrar/memrar.h:157:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#286: FILE: drivers/staging/memrar/memrar_allocator.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#300: FILE: drivers/staging/memrar/memrar_allocator.c:15:
+ *      License along with this program; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#301: FILE: drivers/staging/memrar/memrar_allocator.c:16:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: drivers/staging/memrar/memrar_allocator.c:37:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#328: FILE: drivers/staging/memrar/memrar_allocator.c:43:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#350: FILE: drivers/staging/memrar/memrar_allocator.c:65:
+	if (base == 0
+	    || capacity == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#351: FILE: drivers/staging/memrar/memrar_allocator.c:66:
+	    || capacity == 0
+	    || block_size == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#352: FILE: drivers/staging/memrar/memrar_allocator.c:67:
+	    || block_size == 0
+	    || ULONG_MAX - capacity < base

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#353: FILE: drivers/staging/memrar/memrar_allocator.c:68:
+	    || ULONG_MAX - capacity < base
+	    || capacity < block_size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!allocator"
#366: FILE: drivers/staging/memrar/memrar_allocator.c:81:
+	if (allocator == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!first_node"
#384: FILE: drivers/staging/memrar/memrar_allocator.c:99:
+	if (first_node == NULL)	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!allocator"
#408: FILE: drivers/staging/memrar/memrar_allocator.c:123:
+	if (allocator == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!allocator"
#441: FILE: drivers/staging/memrar/memrar_allocator.c:156:
+	if (allocator == NULL || size == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_node"
#472: FILE: drivers/staging/memrar/memrar_allocator.c:187:
+			if (new_node == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#505: FILE: drivers/staging/memrar/memrar_allocator.c:220:
+		if (addr != 0
+		    && curr_size > allocator->largest_free_area) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!allocator"
#529: FILE: drivers/staging/memrar/memrar_allocator.c:244:
+	if (allocator == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!handle"
#548: FILE: drivers/staging/memrar/memrar_allocator.c:263:
+	if (handle == NULL) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#610: FILE: drivers/staging/memrar/memrar_allocator.c:325:
+			if (!list_is_singular(pos)
+			    && chunk->end == next->range.begin) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#664: FILE: drivers/staging/memrar/memrar_allocator.c:379:
+			if (!list_is_singular(pos)
+			    && prev->range.end == chunk->begin) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#677: FILE: drivers/staging/memrar/memrar_allocator.c:392:
+		} else if (chunk->end < handle->begin
+			   && chunk->end > old_end) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#711: FILE: drivers/staging/memrar/memrar_allocator.c:426:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#714: FILE: drivers/staging/memrar/memrar_allocator.c:429:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#724: FILE: drivers/staging/memrar/memrar_allocator.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#736: FILE: drivers/staging/memrar/memrar_allocator.h:13:
+ *      License along with this program; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#737: FILE: drivers/staging/memrar/memrar_allocator.h:14:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#746: FILE: drivers/staging/memrar/memrar_allocator.h:23:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#752: FILE: drivers/staging/memrar/memrar_allocator.h:29:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#859: FILE: drivers/staging/memrar/memrar_allocator.h:136:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#861: FILE: drivers/staging/memrar/memrar_allocator.h:138:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#871: FILE: drivers/staging/memrar/memrar_handler.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#885: FILE: drivers/staging/memrar/memrar_handler.c:15:
+ *      License along with this program; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#886: FILE: drivers/staging/memrar/memrar_handler.c:16:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#941: FILE: drivers/staging/memrar/memrar_handler.c:71:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1016: FILE: drivers/staging/memrar/memrar_handler.c:146:
+
+

CHECK:SPACING: No space is necessary after a cast
#1029: FILE: drivers/staging/memrar/memrar_handler.c:159:
+	unsigned long const iobase = (unsigned long) (rar->iobase);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1030: FILE: drivers/staging/memrar/memrar_handler.c:160:
+	unsigned long const iobase = (unsigned long) (rar->iobase);
+	return (vaddr >= iobase && vaddr < iobase + rar->length);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1037: FILE: drivers/staging/memrar/memrar_handler.c:167:
+	int i;
+	for (i = 0; i < MRST_NUM_RAR; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1039: FILE: drivers/staging/memrar/memrar_handler.c:169:
+		struct memrar_rar_info * const rar = &memrars[i];
+		if (memrar_handle_in_range(rar, vaddr))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1052: FILE: drivers/staging/memrar/memrar_handler.c:182:
+static dma_addr_t memrar_get_bus_address(

CHECK:SPACING: No space is necessary after a cast
#1056: FILE: drivers/staging/memrar/memrar_handler.c:186:
+	unsigned long const iobase = (unsigned long) (rar->iobase);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1078: FILE: drivers/staging/memrar/memrar_handler.c:208:
+static dma_addr_t memrar_get_physical_address(

WARNING:STATIC_CONST: Move const after static - use 'static const size_t'
#1152: FILE: drivers/staging/memrar/memrar_handler.c:282:
+	static size_t const RAR_BLOCK_SIZE = PAGE_SIZE;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1157: FILE: drivers/staging/memrar/memrar_handler.c:287:
+	BUG_ON(MRST_NUM_RAR != ARRAY_SIZE(memrars));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1157: FILE: drivers/staging/memrar/memrar_handler.c:287:
+	BUG_ON(MRST_NUM_RAR != ARRAY_SIZE(memrars));

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1163: FILE: drivers/staging/memrar/memrar_handler.c:293:
+		BUG_ON(!memrar_is_valid_rar_type(z));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#1198: FILE: drivers/staging/memrar/memrar_handler.c:328:
+		if (request_mem_region(low, rar->length, devname) == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rar->iobase"
#1230: FILE: drivers/staging/memrar/memrar_handler.c:360:
+		if (rar->iobase == NULL) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1237: FILE: drivers/staging/memrar/memrar_handler.c:367:
+		rar->allocator = memrar_create_allocator(

CHECK:SPACING: No space is necessary after a cast
#1238: FILE: drivers/staging/memrar/memrar_handler.c:368:
+			(unsigned long) rar->iobase,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rar->allocator"
#1241: FILE: drivers/staging/memrar/memrar_handler.c:371:
+		if (rar->allocator == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#1280: FILE: drivers/staging/memrar/memrar_handler.c:410:
+		pr_info("%s: BRAR[%d] bus address range = "
+			"[0x%lx, 0x%lx]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#1283: FILE: drivers/staging/memrar/memrar_handler.c:413:
+			(unsigned long) low,

CHECK:SPACING: No space is necessary after a cast
#1284: FILE: drivers/staging/memrar/memrar_handler.c:414:
+			(unsigned long) high);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1348: FILE: drivers/staging/memrar/memrar_handler.c:478:
+				 struct file *filp)
 				              ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer_info"
#1369: FILE: drivers/staging/memrar/memrar_handler.c:499:
+	if (buffer_info == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1386: FILE: drivers/staging/memrar/memrar_handler.c:516:
+	buffer_info->owner = filp;
 	                     ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rar"
#1407: FILE: drivers/staging/memrar/memrar_handler.c:537:
+	if (rar == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1433: FILE: drivers/staging/memrar/memrar_handler.c:563:
+		if (addr >= info->handle
+		    && addr < (info->handle + info->size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1434: FILE: drivers/staging/memrar/memrar_handler.c:564:
+		    && addr < (info->handle + info->size)
+		    && memrar_is_valid_rar_type(info->type)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "r"
#1450: FILE: drivers/staging/memrar/memrar_handler.c:580:
+	if (likely(r != NULL) && memrar_is_valid_rar_type(r->type)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1454: FILE: drivers/staging/memrar/memrar_handler.c:584:
+		BUG_ON(allocator == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!allocator"
#1454: FILE: drivers/staging/memrar/memrar_handler.c:584:
+		BUG_ON(allocator == NULL);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1474: FILE: drivers/staging/memrar/memrar_handler.c:604:
+static long memrar_ioctl(struct file *filp,
                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1493: FILE: drivers/staging/memrar/memrar_handler.c:623:
+		result = memrar_reserve_block(&buffer, filp);
 		                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1536: FILE: drivers/staging/memrar/memrar_handler.c:666:
+static int memrar_mmap(struct file *filp, struct vm_area_struct *vma)
                                     ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rar"
#1548: FILE: drivers/staging/memrar/memrar_handler.c:678:
+	if (rar == NULL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1549: FILE: drivers/staging/memrar/memrar_handler.c:679:
+	if (rar == NULL
+	    || handle == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1550: FILE: drivers/staging/memrar/memrar_handler.c:680:
+	    || handle == 0
+	    || size > (handle - (unsigned long) rar->iobase))

CHECK:SPACING: No space is necessary after a cast
#1550: FILE: drivers/staging/memrar/memrar_handler.c:680:
+	    || size > (handle - (unsigned long) rar->iobase))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1559: FILE: drivers/staging/memrar/memrar_handler.c:689:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1582: FILE: drivers/staging/memrar/memrar_handler.c:712:
+static int memrar_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1589: FILE: drivers/staging/memrar/memrar_handler.c:719:
+static int memrar_release(struct inode *inode, struct file *filp)
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1606: FILE: drivers/staging/memrar/memrar_handler.c:736:
+			if (filp == pos->owner)
 			    ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffers"
#1623: FILE: drivers/staging/memrar/memrar_handler.c:753:
+		(buffers == NULL ? buffers : buffers + count);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffers"
#1645: FILE: drivers/staging/memrar/memrar_handler.c:775:
+		(buffers == NULL ? buffers : buffers + count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1652: FILE: drivers/staging/memrar/memrar_handler.c:782:
+		u32 * const handle = &i->info.handle;
+		if (memrar_release_block(*handle) == 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffers"
#1676: FILE: drivers/staging/memrar/memrar_handler.c:806:
+		(buffers == NULL ? buffers : buffers + count);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rar"
#1695: FILE: drivers/staging/memrar/memrar_handler.c:825:
+		if (rar == NULL) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1716: FILE: drivers/staging/memrar/memrar_handler.c:846:
+			if (i->info.handle >= user_info->handle
+			    && i->info.handle < (user_info->handle

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1732: FILE: drivers/staging/memrar/memrar_handler.c:862:
+				break;
+			} else {

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#1758: FILE: drivers/staging/memrar/memrar_handler.c:888:
+static char const banner[] __initdata =

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#1758: FILE: drivers/staging/memrar/memrar_handler.c:888:
+static char const banner[] __initdata =

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1778: FILE: drivers/staging/memrar/memrar_handler.c:908:
+		pr_err("%s: misc_register() failed.\n",
+			memrar_miscdev.name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1789: FILE: drivers/staging/memrar/memrar_handler.c:919:
+	printk(banner);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1801: FILE: drivers/staging/memrar/memrar_handler.c:931:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1805: FILE: drivers/staging/memrar/memrar_handler.c:935:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1812: FILE: drivers/staging/memrar/memrar_handler.c:942:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1815: FILE: drivers/staging/memrar/memrar_handler.c:945:
+/*
+  Local Variables:

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 31 warnings, 63 checks, 1713 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
