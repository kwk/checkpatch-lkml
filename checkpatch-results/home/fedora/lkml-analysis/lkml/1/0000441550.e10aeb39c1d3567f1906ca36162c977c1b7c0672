CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: mm/truncate.c:50:
+	memclear_highpage_flush(page, partial,
+		compound_size(page) - partial);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#360: FILE: mm/truncate.c:162:
+	const unsigned partial = page_cache_offset(mapping, lstart);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#370: FILE: mm/truncate.c:170:
+	BUG_ON(page_cache_offset(mapping, lend) !=

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#425: FILE: fs/buffer.c:882:
+	unsigned page_size = page_cache_size(page->mapping);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#427: FILE: fs/buffer.c:884:
+	BUG_ON(size > page_size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#461: FILE: fs/buffer.c:1774:
+	BUG_ON(from > page_cache_size(inode->i_mapping));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#462: FILE: fs/buffer.c:1775:
+	BUG_ON(to > page_cache_size(inode->i_mapping));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#521: FILE: fs/buffer.c:2097:
+	unsigned page_size = page_cache_size(mapping);

ERROR:SPACING: space required before the open parenthesis '('
#524: FILE: fs/buffer.c:2099:
+	while(page->index > (pgpos = page_cache_index(mapping, *bytes))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#588: FILE: fs/buffer.c:2235:
+	unsigned page_size = page_cache_size(mapping);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: fs/buffer.c:2419:
+	memclear_highpage_flush(page, offset,
+			page_cache_size(mapping) - offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#670: FILE: fs/buffer.c:2436:
+	unsigned offset = page_cache_offset(mapping, from);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: fs/buffer.c:2454:
+		memclear_highpage_flush(page, offset,
+				page_cache_size(mapping) - offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#691: FILE: fs/buffer.c:2473:
+	unsigned offset = page_cache_offset(mapping, from);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: fs/buffer.c:2581:
+	memclear_highpage_flush(page, offset,
+			page_cache_size(mapping) - offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#780: FILE: fs/mpage.c:184:
+	const unsigned blocks_per_page = page_cache_size(mapping) >> blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#807: FILE: fs/mpage.c:467:
+	const unsigned blocks_per_page = page_cache_size(mapping) >> blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#834: FILE: fs/mpage.c:577:
+		unsigned offset = page_cache_offset(mapping, i_size);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441550.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 4 checks, 725 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441550.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
