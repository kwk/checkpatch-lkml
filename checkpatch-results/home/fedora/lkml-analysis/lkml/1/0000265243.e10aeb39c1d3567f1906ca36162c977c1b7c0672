ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#56: FILE: drivers/char/generic_serial.c:63:
+	if (! (port->port.flags & ASYNC_INITIALIZED)) return 0;
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#56: FILE: drivers/char/generic_serial.c:63:
+	if (! (port->port.flags & ASYNC_INITIALIZED)) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#65: FILE: drivers/char/generic_serial.c:106:
+	if (! (port->port.flags & ASYNC_INITIALIZED))
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: drivers/char/generic_serial.c:144:
+^I            (port->port.flags & GS_TX_INTEN)?"enabled": "disabled"); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/char/generic_serial.c:144:
+^I            (port->port.flags & GS_TX_INTEN)?"enabled": "disabled"); $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#74: FILE: drivers/char/generic_serial.c:144:
+	            (port->port.flags & GS_TX_INTEN)?"enabled": "disabled"); 
 	                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#74: FILE: drivers/char/generic_serial.c:144:
+	            (port->port.flags & GS_TX_INTEN)?"enabled": "disabled"); 
 	                                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: drivers/char/generic_serial.c:239:
+	while ((charsleft = gs_real_chars_in_buffer (port->port.tty)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: drivers/char/generic_serial.c:240:
+	while ((charsleft = gs_real_chars_in_buffer (port->port.tty)) &&
 	        time_after (end_jiffies, jiffies)) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#128: FILE: drivers/char/generic_serial.c:332:
+	    (port->port.flags & GS_TX_INTEN) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: drivers/char/generic_serial.c:352:
+	    !(port->port.flags & GS_TX_INTEN) ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: drivers/char/generic_serial.c:404:
+	port->port.flags &= ~(ASYNC_NORMAL_ACTIVE|GS_ACTIVE);
 	                                         ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#207: FILE: drivers/char/generic_serial.c:436:
+	if (tty_hung_up_p(filp) || port->port.flags & ASYNC_CLOSING) {
 	                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: drivers/char/generic_serial.c:534:
+		gs_dprintk (GS_DEBUG_CLOSE, "gs: Odd: port->port.tty is NULL\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->count == 1'
#306: FILE: drivers/char/generic_serial.c:548:
+	if ((tty->count == 1) && (port->port.count != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->port.count != 1'
#306: FILE: drivers/char/generic_serial.c:548:
+	if ((tty->count == 1) && (port->port.count != 1)) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#317: FILE: drivers/char/generic_serial.c:554:
+		printk(KERN_ERR "gs: gs_close port %p: bad port count: %d\n", port, port->port.count);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#317: FILE: drivers/char/generic_serial.c:554:
+		printk(KERN_ERR "gs: gs_close port %p: bad port count: %d\n", port, port->port.count);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gs_close', this function's name, in a string
#317: FILE: drivers/char/generic_serial.c:554:
+		printk(KERN_ERR "gs: gs_close port %p: bad port count: %d\n", port, port->port.count);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gs_close', this function's name, in a string
#324: FILE: drivers/char/generic_serial.c:559:
+		gs_dprintk(GS_DEBUG_CLOSE, "gs_close port %p: count: %d\n", port, port->port.count);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#362: FILE: drivers/char/generic_serial.c:608:
+	port->port.flags &= ~(ASYNC_NORMAL_ACTIVE|ASYNC_CLOSING | ASYNC_INITIALIZED);
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: drivers/char/generic_serial.c:631:
+		gs_dprintk (GS_DEBUG_TERMIOS, "gs: Odd: port->port.tty is NULL\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#386: FILE: drivers/char/generic_serial.c:654:
+		if (     (port->port.flags & ASYNC_SPD_MASK) == ASYNC_SPD_HI)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/char/generic_serial.c:740:
+^Iif (port->port.tty) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: drivers/char/generic_serial.c:779:
+	gs_set_termios (port->port.tty, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#474: FILE: drivers/char/generic_serial.c:826:
+	if (port->port.flags & ASYNC_SAK) {
+		do_SAK (port->port.tty);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: drivers/char/generic_serial.c:827:
+		do_SAK (port->port.tty);

CHECK:CAMELCASE: Avoid CamelCase: <PortP>
#497: FILE: drivers/char/rio/rio_linux.c:458:
+	PortP->gs.port.flags &= ~GS_TX_INTEN;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#527: FILE: drivers/char/rio/rio_linux.c:553:
+		printk(KERN_ERR "WARNING port count:%d\n", PortP->gs.port.count);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!PortP->gs.port.tty"
#556: FILE: drivers/char/rio/riocmd.c:487:
+				if (PortP->gs.port.tty == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!PortP->gs.port.tty->termios"
#559: FILE: drivers/char/rio/riocmd.c:489:
+				if (PortP->gs.port.tty->termios == NULL)

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#563: FILE: drivers/char/rio/riocmd.c:492:
+				if (!(PortP->gs.port.tty->termios->c_cflag & CLOCAL) && ((PortP->State & (RIO_MOPEN | RIO_WOPEN)))) {

CHECK:CAMELCASE: Avoid CamelCase: <State>
#563: FILE: drivers/char/rio/riocmd.c:492:
+				if (!(PortP->gs.port.tty->termios->c_cflag & CLOCAL) && ((PortP->State & (RIO_MOPEN | RIO_WOPEN)))) {

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#572: FILE: drivers/char/rio/riocmd.c:509:
+								wake_up_interruptible(&PortP->gs.port.open_wait);

CHECK:CAMELCASE: Avoid CamelCase: <TtyP>
#630: FILE: drivers/char/rio/riointr.c:545:
+	TtyP = PortP->gs.port.tty;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/char/rio/riotty.c:297:
+	if ((PortP->gs.port.tty->termios->c_cflag & CLOCAL) ||
 			(PortP->ModemState & RIOC_MSVR1_CD)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#782: FILE: drivers/char/sx.c:994:
+	if (I_OTHER(port->gs.port.tty)) {
[...]
 	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#801: FILE: drivers/char/sx.c:1008:
+	if (O_OPOST(port->gs.port.tty) && !O_OTHER(port->gs.port.tty)) {
[...]
 	} else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->gs.xmit_cnt <= port->gs.wakeup_chars'
#821: FILE: drivers/char/sx.c:1104:
+	if ((port->gs.xmit_cnt <= port->gs.wakeup_chars) && port->gs.port.tty) {

ERROR:SPACING: space required before the open brace '{'
#855: FILE: drivers/char/sx.c:1226:
+				if (!(port->gs.port.tty->termios->c_cflag & CLOCAL)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#877: FILE: drivers/char/sx.c:1336:
+			if (!(port->gs.port.flags & SX_RX_THROTTLE)) {
 				sx_receive_chars(port);
 			}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#982: FILE: drivers/char/sx.c:1580:
+		port->gs.port.count = 0;*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: include/linux/generic_serial.h:37:
+  struct tty_port^I  port;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 19 warnings, 13 checks, 896 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
