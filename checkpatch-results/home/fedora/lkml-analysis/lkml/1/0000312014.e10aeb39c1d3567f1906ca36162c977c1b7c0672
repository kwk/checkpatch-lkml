WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)
                                                                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)
                                                                                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)
                                                                                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#91: FILE: fs/autofs4/autofs_i.h:38:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , current->pid , __func__ , ##args); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#104: FILE: fs/bfs/bfs.h:45:
+	printk(KERN_ERR "BFS-fs: %s(): " format, __func__, ## args)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: fs/configfs/mount.c:95:
+		pr_debug("%s: could not get root dentry!\n",__func__);
 		                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#176: FILE: fs/dlm/lockspace.c:203:
+		printk(KERN_WARNING "%s: can not create kset\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: fs/exportfs/expfs.c:191:
+				printk("%s: npd != pd\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: fs/fat/cache.c:245:
 			fat_fs_panic(sb, "%s: detected the cluster chain loop"
+				     " (i_pos %lld)", __func__,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#243: FILE: fs/fat/cache.c:256:
 			fat_fs_panic(sb, "%s: invalid cluster chain"
+				     " (i_pos %lld)", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#291: FILE: fs/gfs2/locking/dlm/sysfs.c:217:
+		printk(KERN_WARNING "%s: can not create kset\n", __func__);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#385: FILE: fs/jffs2/debug.h:84:
+			__func__ , ##__VA_ARGS__);			\
 			         ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#393: FILE: fs/jffs2/debug.h:91:
+			__func__ , ##__VA_ARGS__);			\
 			         ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#401: FILE: fs/jffs2/debug.h:98:
+			__func__ , ##__VA_ARGS__);			\
 			         ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#409: FILE: fs/jffs2/debug.h:105:
+			__func__ , ##__VA_ARGS__);			\
 			         ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#444: FILE: fs/lockd/clntproc.c:535:
+			printk(KERN_WARNING "%s: VFS is out of sync with lock manager!\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#444: FILE: fs/lockd/clntproc.c:535:
+			printk(KERN_WARNING "%s: VFS is out of sync with lock manager!\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#487: FILE: fs/namespace.c:1898:
+		printk(KERN_WARNING "%s: kobj create error\n", __func__);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#500: FILE: fs/nfsd/nfs4callback.c:107:
+	if (!p) dprintk("NFSD: RESERVE_SPACE(%d) failed in function %s\n", (int) (nbytes), __func__); \

CHECK:SPACING: No space is necessary after a cast
#500: FILE: fs/nfsd/nfs4callback.c:107:
+	if (!p) dprintk("NFSD: RESERVE_SPACE(%d) failed in function %s\n", (int) (nbytes), __func__); \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#500: FILE: fs/nfsd/nfs4callback.c:107:
+	if (!p) dprintk("NFSD: RESERVE_SPACE(%d) failed in function %s\n", (int) (nbytes), __func__); \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#548: FILE: fs/partitions/ldm.c:44:
+#define ldm_debug(f, a...) _ldm_printk (KERN_DEBUG, __func__, f, ##a)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#548: FILE: fs/partitions/ldm.c:44:
+#define ldm_debug(f, a...) _ldm_printk (KERN_DEBUG, __func__, f, ##a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: fs/partitions/ldm.c:47:
+#define ldm_crit(f, a...)  _ldm_printk (KERN_CRIT,  __func__, f, ##a)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#554: FILE: fs/partitions/ldm.c:47:
+#define ldm_crit(f, a...)  _ldm_printk (KERN_CRIT,  __func__, f, ##a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: fs/partitions/ldm.c:48:
+#define ldm_error(f, a...) _ldm_printk (KERN_ERR,   __func__, f, ##a)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#555: FILE: fs/partitions/ldm.c:48:
+#define ldm_error(f, a...) _ldm_printk (KERN_ERR,   __func__, f, ##a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#556: FILE: fs/partitions/ldm.c:49:
+#define ldm_info(f, a...)  _ldm_printk (KERN_INFO,  __func__, f, ##a)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#556: FILE: fs/partitions/ldm.c:49:
+#define ldm_info(f, a...)  _ldm_printk (KERN_INFO,  __func__, f, ##a)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#569: FILE: fs/smbfs/smb_debug.h:14:
+# define PARANOIA(f, a...) printk(KERN_NOTICE "%s: " f, __func__ , ## a)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#569: FILE: fs/smbfs/smb_debug.h:14:
+# define PARANOIA(f, a...) printk(KERN_NOTICE "%s: " f, __func__ , ## a)
                                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#577: FILE: fs/smbfs/smb_debug.h:21:
+# define VERBOSE(f, a...) printk(KERN_DEBUG "%s: " f, __func__ , ## a)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#577: FILE: fs/smbfs/smb_debug.h:21:
+# define VERBOSE(f, a...) printk(KERN_DEBUG "%s: " f, __func__ , ## a)
                                                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#586: FILE: fs/smbfs/smb_debug.h:31:
+#define DEBUG1(f, a...) printk(KERN_DEBUG "%s: " f, __func__ , ## a)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#586: FILE: fs/smbfs/smb_debug.h:31:
+#define DEBUG1(f, a...) printk(KERN_DEBUG "%s: " f, __func__ , ## a)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#612: FILE: fs/sysfs/mount.c:64:
+		pr_debug("%s: could not get root dentry!\n",__func__);
 		                                           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 20 warnings, 1 checks, 429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
