WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#68: 
      x86: Reenable TSC sync check at boot, even with NONSTOP_TSC
           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: arch/x86/include/asm/cpufeature.h:156:
+#define X86_FEATURE_NODEID_MSR	(6*32+19) /* NodeId MSR */
                               	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: arch/x86/include/asm/cpufeature.h:156:
+#define X86_FEATURE_NODEID_MSR	(6*32+19) /* NodeId MSR */
                               	     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: arch/x86/include/asm/hw_irq.h:106:
+extern unsigned int set_desc_affinity(struct irq_desc *, const struct cpumask *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#166: FILE: arch/x86/include/asm/hw_irq.h:106:
+extern unsigned int set_desc_affinity(struct irq_desc *, const struct cpumask *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpumask *' should also have an identifier name
#166: FILE: arch/x86/include/asm/hw_irq.h:106:
+extern unsigned int set_desc_affinity(struct irq_desc *, const struct cpumask *,

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#522: FILE: arch/x86/kernel/cpuid.c:190:
+	if (__register_chrdev(CPUID_MAJOR, 0, NR_CPUS,

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#532: FILE: arch/x86/kernel/cpuid.c:220:
+	__unregister_chrdev(CPUID_MAJOR, 0, NR_CPUS, "cpu/cpuid");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#558: FILE: arch/x86/kernel/msr.c:249:
+	if (__register_chrdev(MSR_MAJOR, 0, NR_CPUS, "cpu/msr", &msr_fops)) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#567: FILE: arch/x86/kernel/msr.c:277:
+	__unregister_chrdev(MSR_MAJOR, 0, NR_CPUS, "cpu/msr");

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#620: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#625: FILE: arch/x86/lib/msr-smp.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: Unnecessary space before function pointer arguments
#692: FILE: arch/x86/lib/msr-smp.c:68:
+			    void (*msr_func) (void *info))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#739: FILE: arch/x86/lib/msr-smp.c:115:
+/* These "safe" variants are slower and should be used when the target MSR
+   may not actually exist. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#739: FILE: arch/x86/lib/msr-smp.c:115:
+   may not actually exist. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1176: FILE: include/linux/mm.h:1027:
+unsigned long __absent_pages_in_range(int nid, unsigned long start_pfn,
+						unsigned long end_pfn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: init/initramfs.c:450:
+			res = decompress(buf, len, NULL, flush_buffer, NULL,
 				   &my_inptr, error);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1273: FILE: mm/page_alloc.c:3577:
+unsigned long __meminit __absent_pages_in_range(int nid,
 				unsigned long range_start_pfn,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032075.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 6 checks, 883 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032075.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
