WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#51: FILE: net/socket.c:2303:
+#if 0

ERROR:SPACING: space required before the open parenthesis '('
#62: FILE: net/socket.c:2314:
+	if(!err) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: net/socket.c:2350:
+        union {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: net/socket.c:2350:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: net/socket.c:2351:
+                char    ifrn_name[IFNAMSIZ];            /* if name, e.g. "en0" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: net/socket.c:2351:
+                char    ifrn_name[IFNAMSIZ];            /* if name, e.g. "en0" */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: net/socket.c:2352:
+        } ifr_ifrn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: net/socket.c:2352:
+        } ifr_ifrn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: net/socket.c:2353:
+        union {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: net/socket.c:2353:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: net/socket.c:2354:
+                struct  sockaddr ifru_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: net/socket.c:2354:
+                struct  sockaddr ifru_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: net/socket.c:2355:
+                struct  sockaddr ifru_dstaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: net/socket.c:2355:
+                struct  sockaddr ifru_dstaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: net/socket.c:2356:
+                struct  sockaddr ifru_broadaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: net/socket.c:2356:
+                struct  sockaddr ifru_broadaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: net/socket.c:2357:
+                struct  sockaddr ifru_netmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: net/socket.c:2357:
+                struct  sockaddr ifru_netmask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: net/socket.c:2358:
+                struct  sockaddr ifru_hwaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: net/socket.c:2358:
+                struct  sockaddr ifru_hwaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: net/socket.c:2359:
+                short   ifru_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: net/socket.c:2359:
+                short   ifru_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: net/socket.c:2360:
+                compat_int_t     ifru_ivalue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: net/socket.c:2360:
+                compat_int_t     ifru_ivalue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: net/socket.c:2361:
+                compat_int_t     ifru_mtu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: net/socket.c:2361:
+                compat_int_t     ifru_mtu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: net/socket.c:2362:
+                struct  ifmap32 ifru_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: net/socket.c:2362:
+                struct  ifmap32 ifru_map;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: net/socket.c:2363:
+                char    ifru_slave[IFNAMSIZ];   /* Just fits the size */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: net/socket.c:2363:
+                char    ifru_slave[IFNAMSIZ];   /* Just fits the size */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: net/socket.c:2365:
+                compat_caddr_t ifru_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: net/socket.c:2365:
+                compat_caddr_t ifru_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: net/socket.c:2367:
+        } ifr_ifru;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: net/socket.c:2367:
+        } ifr_ifru;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: net/socket.c:2371:
+        compat_int_t^Iifc_len;                        /* size of buffer       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: net/socket.c:2371:
+        compat_int_t^Iifc_len;                        /* size of buffer       */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: net/socket.c:2372:
+        compat_caddr_t  ifcbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: net/socket.c:2372:
+        compat_caddr_t  ifcbuf;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: net/socket.c:2413:
+		size_t len =((ifc32.ifc_len / sizeof (struct ifreq32)) + 1) *

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: net/socket.c:2413:
+		size_t len =((ifc32.ifc_len / sizeof (struct ifreq32)) + 1) *
 		           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: net/socket.c:2414:
+			sizeof (struct ifreq);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#165: FILE: net/socket.c:2417:
+		ifr = ifc.ifc_req = (void __user *)(uifc + 1);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: net/socket.c:2419:
+		for (i = 0; i < ifc32.ifc_len; i += sizeof (struct ifreq32)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: net/socket.c:2423:
+^I^I^Iifr32++; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: net/socket.c:2429:
+^Ierr = sys_ioctl (fd, SIOCGIFCONF, (unsigned long)uifc);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: net/socket.c:2429:
+	err = sys_ioctl (fd, SIOCGIFCONF, (unsigned long)uifc);	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: net/socket.c:2433:
+^Iif (copy_from_user(&ifc, uifc, sizeof(struct ifconf))) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: net/socket.c:2439:
+             i + sizeof (struct ifreq32) <= ifc32.ifc_len && j < ifc.ifc_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: net/socket.c:2439:
+             i + sizeof (struct ifreq32) <= ifc32.ifc_len && j < ifc.ifc_len;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: net/socket.c:2439:
+             i + sizeof (struct ifreq32) <= ifc32.ifc_len && j < ifc.ifc_len;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: net/socket.c:2440:
+	     i += sizeof (struct ifreq32), j += sizeof (struct ifreq)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: net/socket.c:2440:
+	     i += sizeof (struct ifreq32), j += sizeof (struct ifreq)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: net/socket.c:2441:
+		if (copy_in_user(ifr32, ifr, sizeof (struct ifreq32)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: net/socket.c:2469:
+^I$

CHECK:SPACING: No space is necessary after a cast
#231: FILE: net/socket.c:2483:
+	return sys_ioctl(fd, cmd, (unsigned long) ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: net/socket.c:2505:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: net/socket.c:2506:
+		err = sys_ioctl (fd, cmd, (unsigned long)&kifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: net/socket.c:2507:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: net/socket.c:2523:
+		return sys_ioctl (fd, cmd, (unsigned long)uifr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around u_ifreq32->ifr_ifrn.ifrn_name[0]
#285: FILE: net/socket.c:2537:
+	if (copy_from_user(&tmp_buf[0], &(u_ifreq32->ifr_ifrn.ifrn_name[0]),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#303: FILE: net/socket.c:2555:
+	return sys_ioctl(fd, cmd, (unsigned long) u_ifreq64);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: net/socket.c:2565:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: net/socket.c:2591:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: net/socket.c:2592:
+	err = sys_ioctl (fd, cmd, (unsigned long)&ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: net/socket.c:2593:
+	set_fs (old_fs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: net/socket.c:2627:
+        u32   ^I^Irt_pad1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#375: FILE: net/socket.c:2627:
+        u32   ^I^Irt_pad1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: net/socket.c:2627:
+        u32   ^I^Irt_pad1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: net/socket.c:2628:
+        struct sockaddr rt_dst;         /* target address               */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: net/socket.c:2628:
+        struct sockaddr rt_dst;         /* target address               */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: net/socket.c:2629:
+        struct sockaddr rt_gateway;     /* gateway addr (RTF_GATEWAY)   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: net/socket.c:2629:
+        struct sockaddr rt_gateway;     /* gateway addr (RTF_GATEWAY)   */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: net/socket.c:2630:
+        struct sockaddr rt_genmask;     /* target network mask (IP)     */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: net/socket.c:2630:
+        struct sockaddr rt_genmask;     /* target network mask (IP)     */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: net/socket.c:2631:
+        unsigned short  rt_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: net/socket.c:2631:
+        unsigned short  rt_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: net/socket.c:2632:
+        short           rt_pad2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: net/socket.c:2632:
+        short           rt_pad2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: net/socket.c:2633:
+        u32   ^I^Irt_pad3;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: net/socket.c:2633:
+        u32   ^I^Irt_pad3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: net/socket.c:2633:
+        u32   ^I^Irt_pad3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: net/socket.c:2634:
+        unsigned char   rt_tos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: net/socket.c:2634:
+        unsigned char   rt_tos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: net/socket.c:2635:
+        unsigned char   rt_class;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: net/socket.c:2635:
+        unsigned char   rt_class;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: net/socket.c:2636:
+        short           rt_pad4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: net/socket.c:2636:
+        short           rt_pad4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: net/socket.c:2637:
+        short           rt_metric;      /* +1 for binary compatibility! */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: net/socket.c:2637:
+        short           rt_metric;      /* +1 for binary compatibility! */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: net/socket.c:2638:
+        /* char * */ u32 rt_dev;        /* forcing the device at add    */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: net/socket.c:2639:
+        u32   ^I^Irt_mtu;         /* per route MTU/Window         */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#387: FILE: net/socket.c:2639:
+        u32   ^I^Irt_mtu;         /* per route MTU/Window         */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: net/socket.c:2639:
+        u32   ^I^Irt_mtu;         /* per route MTU/Window         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: net/socket.c:2640:
+        u32   ^I^Irt_window;      /* Window clamping              */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: net/socket.c:2640:
+        u32   ^I^Irt_window;      /* Window clamping              */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: net/socket.c:2640:
+        u32   ^I^Irt_window;      /* Window clamping              */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: net/socket.c:2641:
+        unsigned short  rt_irtt;        /* Initial RTT                  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: net/socket.c:2641:
+        unsigned short  rt_irtt;        /* Initial RTT                  */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: net/socket.c:2667:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#420: FILE: net/socket.c:2672:
+		struct in6_rtmsg32 __user *ur6 = compat_ptr(arg);
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: net/socket.c:2672:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_dst
#420: FILE: net/socket.c:2672:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: net/socket.c:2673:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),
+			3 * sizeof(struct in6_addr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#422: FILE: net/socket.c:2674:
+		ret |= __get_user (r6.rtmsg_type, &(ur6->rtmsg_type));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_type
#422: FILE: net/socket.c:2674:
+		ret |= __get_user (r6.rtmsg_type, &(ur6->rtmsg_type));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#423: FILE: net/socket.c:2675:
+		ret |= __get_user (r6.rtmsg_dst_len, &(ur6->rtmsg_dst_len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_dst_len
#423: FILE: net/socket.c:2675:
+		ret |= __get_user (r6.rtmsg_dst_len, &(ur6->rtmsg_dst_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: net/socket.c:2676:
+		ret |= __get_user (r6.rtmsg_src_len, &(ur6->rtmsg_src_len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_src_len
#424: FILE: net/socket.c:2676:
+		ret |= __get_user (r6.rtmsg_src_len, &(ur6->rtmsg_src_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#425: FILE: net/socket.c:2677:
+		ret |= __get_user (r6.rtmsg_metric, &(ur6->rtmsg_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_metric
#425: FILE: net/socket.c:2677:
+		ret |= __get_user (r6.rtmsg_metric, &(ur6->rtmsg_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: net/socket.c:2678:
+		ret |= __get_user (r6.rtmsg_info, &(ur6->rtmsg_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_info
#426: FILE: net/socket.c:2678:
+		ret |= __get_user (r6.rtmsg_info, &(ur6->rtmsg_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: net/socket.c:2679:
+		ret |= __get_user (r6.rtmsg_flags, &(ur6->rtmsg_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_flags
#427: FILE: net/socket.c:2679:
+		ret |= __get_user (r6.rtmsg_flags, &(ur6->rtmsg_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: net/socket.c:2680:
+		ret |= __get_user (r6.rtmsg_ifindex, &(ur6->rtmsg_ifindex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_ifindex
#428: FILE: net/socket.c:2680:
+		ret |= __get_user (r6.rtmsg_ifindex, &(ur6->rtmsg_ifindex));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: net/socket.c:2681:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#430: FILE: net/socket.c:2682:
+		r = (void *) &r6;

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: net/socket.c:2685:
+		struct rtentry32 __user *ur4 = compat_ptr(arg);
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: net/socket.c:2685:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_dst
#433: FILE: net/socket.c:2685:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: net/socket.c:2686:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),
+					3 * sizeof(struct sockaddr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: net/socket.c:2687:
+		ret |= __get_user (r4.rt_flags, &(ur4->rt_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_flags
#435: FILE: net/socket.c:2687:
+		ret |= __get_user (r4.rt_flags, &(ur4->rt_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: net/socket.c:2688:
+		ret |= __get_user (r4.rt_metric, &(ur4->rt_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_metric
#436: FILE: net/socket.c:2688:
+		ret |= __get_user (r4.rt_metric, &(ur4->rt_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: net/socket.c:2689:
+		ret |= __get_user (r4.rt_mtu, &(ur4->rt_mtu));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_mtu
#437: FILE: net/socket.c:2689:
+		ret |= __get_user (r4.rt_mtu, &(ur4->rt_mtu));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#438: FILE: net/socket.c:2690:
+		ret |= __get_user (r4.rt_window, &(ur4->rt_window));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_window
#438: FILE: net/socket.c:2690:
+		ret |= __get_user (r4.rt_window, &(ur4->rt_window));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#439: FILE: net/socket.c:2691:
+		ret |= __get_user (r4.rt_irtt, &(ur4->rt_irtt));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_irtt
#439: FILE: net/socket.c:2691:
+		ret |= __get_user (r4.rt_irtt, &(ur4->rt_irtt));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: net/socket.c:2692:
+		ret |= __get_user (rtdev, &(ur4->rt_dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_dev
#440: FILE: net/socket.c:2692:
+		ret |= __get_user (rtdev, &(ur4->rt_dev));

CHECK:BRACES: braces {} should be used on all arms of this statement
#441: FILE: net/socket.c:2693:
+		if (rtdev) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: net/socket.c:2694:
+			ret |= copy_from_user (devname, compat_ptr(rtdev), 15);

CHECK:BRACES: Unbalanced braces around else statement
#444: FILE: net/socket.c:2696:
+		} else

CHECK:SPACING: No space is necessary after a cast
#447: FILE: net/socket.c:2699:
+		r = (void *) &r4;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#455: FILE: net/socket.c:2707:
+	set_fs (KERNEL_DS);

CHECK:SPACING: No space is necessary after a cast
#456: FILE: net/socket.c:2708:
+	ret = sys_ioctl (fd, cmd, (unsigned long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: net/socket.c:2708:
+	ret = sys_ioctl (fd, cmd, (unsigned long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: net/socket.c:2709:
+	set_fs (old_fs);

WARNING:TYPO_SPELLING: 'compatiable' may be misspelled - perhaps 'compatible'?
#468: FILE: net/socket.c:2720:
+ * use compatiable ioctls
        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#474: FILE: net/socket.c:2726:
+	if (get_user(tmp, (u32 __user *) arg))

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: net/socket.c:2734:
+        compat_int_t^Inumber;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: net/socket.c:2734:
+        compat_int_t^Inumber;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: net/socket.c:2735:
+        compat_int_t^Ilength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: net/socket.c:2735:
+        compat_int_t^Ilength;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: net/socket.c:2736:
+        compat_caddr_t^Iarg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: net/socket.c:2736:
+        compat_caddr_t^Iarg;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#492: FILE: net/socket.c:2744:
+#define ATM_GETLINKRATE32 _IOW('a', ATMIOC_ITF+1, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#493: FILE: net/socket.c:2745:
+#define ATM_GETNAMES32    _IOW('a', ATMIOC_ITF+3, struct atm_iobuf32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#494: FILE: net/socket.c:2746:
+#define ATM_GETTYPE32     _IOW('a', ATMIOC_ITF+4, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#495: FILE: net/socket.c:2747:
+#define ATM_GETESI32	  _IOW('a', ATMIOC_ITF+5, struct atmif_sioc32)
                     	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#496: FILE: net/socket.c:2748:
+#define ATM_GETADDR32	  _IOW('a', ATMIOC_ITF+6, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#497: FILE: net/socket.c:2749:
+#define ATM_RSTADDR32	  _IOW('a', ATMIOC_ITF+7, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#498: FILE: net/socket.c:2750:
+#define ATM_ADDADDR32	  _IOW('a', ATMIOC_ITF+8, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#499: FILE: net/socket.c:2751:
+#define ATM_DELADDR32	  _IOW('a', ATMIOC_ITF+9, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#500: FILE: net/socket.c:2752:
+#define ATM_GETCIRANGE32  _IOW('a', ATMIOC_ITF+10, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#501: FILE: net/socket.c:2753:
+#define ATM_SETCIRANGE32  _IOW('a', ATMIOC_ITF+11, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: net/socket.c:2754:
+#define ATM_SETESI32      _IOW('a', ATMIOC_ITF+12, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#503: FILE: net/socket.c:2755:
+#define ATM_SETESIF32     _IOW('a', ATMIOC_ITF+13, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#504: FILE: net/socket.c:2756:
+#define ATM_GETSTAT32     _IOW('a', ATMIOC_SARCOM+0, struct atmif_sioc32)
                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#505: FILE: net/socket.c:2757:
+#define ATM_GETSTATZ32    _IOW('a', ATMIOC_SARCOM+1, struct atmif_sioc32)
                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#506: FILE: net/socket.c:2758:
+#define ATM_GETLOOP32	  _IOW('a', ATMIOC_SARCOM+2, struct atmif_sioc32)
                      	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#507: FILE: net/socket.c:2759:
+#define ATM_SETLOOP32	  _IOW('a', ATMIOC_SARCOM+3, struct atmif_sioc32)
                      	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#508: FILE: net/socket.c:2760:
+#define ATM_QUERYLOOP32	  _IOW('a', ATMIOC_SARCOM+4, struct atmif_sioc32)
                        	                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: net/socket.c:2763:
+        unsigned int cmd32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: net/socket.c:2763:
+        unsigned int cmd32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: net/socket.c:2764:
+        unsigned int cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: net/socket.c:2764:
+        unsigned int cmd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: net/socket.c:2766:
+        { ATM_GETLINKRATE32, ATM_GETLINKRATE },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: net/socket.c:2766:
+        { ATM_GETLINKRATE32, ATM_GETLINKRATE },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: net/socket.c:2768:
+        { ATM_GETTYPE32,     ATM_GETTYPE },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: net/socket.c:2768:
+        { ATM_GETTYPE32,     ATM_GETTYPE },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: net/socket.c:2769:
+        { ATM_GETESI32,      ATM_GETESI },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: net/socket.c:2769:
+        { ATM_GETESI32,      ATM_GETESI },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: net/socket.c:2770:
+        { ATM_GETADDR32,     ATM_GETADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: net/socket.c:2770:
+        { ATM_GETADDR32,     ATM_GETADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: net/socket.c:2771:
+        { ATM_RSTADDR32,     ATM_RSTADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: net/socket.c:2771:
+        { ATM_RSTADDR32,     ATM_RSTADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: net/socket.c:2772:
+        { ATM_ADDADDR32,     ATM_ADDADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: net/socket.c:2772:
+        { ATM_ADDADDR32,     ATM_ADDADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: net/socket.c:2773:
+        { ATM_DELADDR32,     ATM_DELADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: net/socket.c:2773:
+        { ATM_DELADDR32,     ATM_DELADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: net/socket.c:2774:
+        { ATM_GETCIRANGE32,  ATM_GETCIRANGE },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: net/socket.c:2774:
+        { ATM_GETCIRANGE32,  ATM_GETCIRANGE },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: net/socket.c:2819:
+        struct atmif_sioc   __user *sioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: net/socket.c:2819:
+        struct atmif_sioc   __user *sioc;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: net/socket.c:2824:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: net/socket.c:2824:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: net/socket.c:2824:
+        $

CHECK:SPACING: No space is necessary after a cast
#583: FILE: net/socket.c:2835:
+	err = sys_ioctl(fd, cmd, (unsigned long) sioc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: net/socket.c:2847:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: net/socket.c:2847:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: net/socket.c:2848:
+        unsigned int cmd = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: net/socket.c:2848:
+        unsigned int cmd = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: net/socket.c:2849:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: net/socket.c:2849:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: net/socket.c:2849:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: net/socket.c:2869:
+^I        return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: net/socket.c:2870:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: net/socket.c:2870:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: net/socket.c:2870:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: net/socket.c:2871:
+        switch (cmd) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: net/socket.c:2871:
+        switch (cmd) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: net/socket.c:2874:
+^I    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: net/socket.c:2876:
+        case ATM_GETTYPE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: net/socket.c:2876:
+        case ATM_GETTYPE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: net/socket.c:2877:
+        case ATM_GETESI:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: net/socket.c:2877:
+        case ATM_GETESI:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: net/socket.c:2878:
+        case ATM_GETADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: net/socket.c:2878:
+        case ATM_GETADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: net/socket.c:2879:
+        case ATM_RSTADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: net/socket.c:2879:
+        case ATM_RSTADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: net/socket.c:2880:
+        case ATM_ADDADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: net/socket.c:2880:
+        case ATM_ADDADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: net/socket.c:2881:
+        case ATM_DELADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: net/socket.c:2881:
+        case ATM_DELADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: net/socket.c:2882:
+        case ATM_GETCIRANGE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: net/socket.c:2882:
+        case ATM_GETCIRANGE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: net/socket.c:2891:
+                return do_atmif_sioc(fd, cmd, arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: net/socket.c:2891:
+                return do_atmif_sioc(fd, cmd, arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: net/socket.c:2892:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: net/socket.c:2892:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: net/socket.c:2894:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: net/socket.c:2894:
+        return -EINVAL;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#645: FILE: net/socket.c:2897:
+
+

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#697: FILE: net/socket.c:2949:
+/* Note SIOCRTMSG is no longer, so this is safe and * the user would have seen just an -EINVAL anyways. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000051204.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 78 errors, 106 warnings, 46 checks, 723 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000051204.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
