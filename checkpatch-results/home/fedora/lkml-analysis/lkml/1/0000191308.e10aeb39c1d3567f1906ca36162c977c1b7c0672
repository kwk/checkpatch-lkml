ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/lio-core/target_core_device.c:283:
+                        printk("TARGET_CORE[%s]: Detected WRITE_PROTECTED LUN"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/lio-core/target_core_device.c:283:
+                        printk("TARGET_CORE[%s]: Detected WRITE_PROTECTED LUN"$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: drivers/lio-core/target_core_device.c:283:
+                        printk("TARGET_CORE[%s]: Detected WRITE_PROTECTED LUN"

WARNING:SPLIT_STRING: quoted string split across lines
#75: FILE: drivers/lio-core/target_core_device.c:284:
+                        printk("TARGET_CORE[%s]: Detected WRITE_PROTECTED LUN"
+				" Access for 0x%08x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/lio-core/target_core_device.c:289:
+                        printk("TARGET_CORE[%s]: Detected NON_EXISTENT_LUN"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/lio-core/target_core_device.c:289:
+                        printk("TARGET_CORE[%s]: Detected NON_EXISTENT_LUN"$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#81: FILE: drivers/lio-core/target_core_device.c:289:
+                        printk("TARGET_CORE[%s]: Detected NON_EXISTENT_LUN"

WARNING:SPLIT_STRING: quoted string split across lines
#82: FILE: drivers/lio-core/target_core_device.c:290:
+                        printk("TARGET_CORE[%s]: Detected NON_EXISTENT_LUN"
+				" Access for 0x%08x\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#92: FILE: drivers/lio-core/target_core_device.c:342:
+extern int transport_get_lun_for_tmr (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: drivers/lio-core/target_core_device.c:342:
+extern int transport_get_lun_for_tmr (

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: drivers/lio-core/target_core_device.c:386:
+extern void core_dec_lacl_count (se_node_acl_t *se_nacl, se_cmd_t *se_cmd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/lio-core/target_core_device.c:394:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#116: FILE: drivers/lio-core/target_core_device.c:396:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#125: FILE: drivers/lio-core/target_core_device.c:419:
+EXPORT_SYMBOL(core_update_device_list_access);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#134: FILE: drivers/lio-core/target_core_device.c:890:
+EXPORT_SYMBOL(core_dev_add_lun);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#143: FILE: drivers/lio-core/target_core_device.c:916:
+EXPORT_SYMBOL(core_dev_del_lun);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#152: FILE: drivers/lio-core/target_core_device.c:946:
+EXPORT_SYMBOL(core_get_lun_from_tpg);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: drivers/lio-core/target_core_device.c:1012:
+EXPORT_SYMBOL(core_dev_init_initiator_node_lun_acl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#170: FILE: drivers/lio-core/target_core_device.c:1055:
+EXPORT_SYMBOL(core_dev_add_initiator_node_lun_acl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#179: FILE: drivers/lio-core/target_core_device.c:1087:
+EXPORT_SYMBOL(core_dev_del_initiator_node_lun_acl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#188: FILE: drivers/lio-core/target_core_device.c:1103:
+EXPORT_SYMBOL(core_dev_free_initiator_node_lun_acl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/lio-core/target_core_device.h:39:
+extern void core_dec_lacl_count (struct se_node_acl_s *, struct se_cmd_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: drivers/lio-core/target_core_device.h:39:
+extern void core_dec_lacl_count (struct se_node_acl_s *, struct se_cmd_s *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#197: FILE: drivers/lio-core/target_core_device.h:39:
+extern void core_dec_lacl_count (struct se_node_acl_s *, struct se_cmd_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#197: FILE: drivers/lio-core/target_core_device.h:39:
+extern void core_dec_lacl_count (struct se_node_acl_s *, struct se_cmd_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191308.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 20 warnings, 2 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191308.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
