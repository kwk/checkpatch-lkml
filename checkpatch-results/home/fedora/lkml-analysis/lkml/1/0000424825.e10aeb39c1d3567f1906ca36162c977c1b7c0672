CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pc"
#59: FILE: mm/rss_container.c:147:
+	if (pc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: mm/rss_container.c:161:
+static unsigned long isolate_container_pages(unsigned long nr_to_scan,
+		struct list_head *src, struct list_head *dst,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: mm/rss_container.c:191:
+unsigned long isolate_pages_in_container(unsigned long nr_to_scan,
+		struct list_head *dst, unsigned long *scanned,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: mm/rss_container.c:200:
+		ret = isolate_container_pages(nr_to_scan, &rss->active_list,
+				dst, scanned, zone, mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: mm/rss_container.c:203:
+		ret = isolate_container_pages(nr_to_scan, &rss->inactive_list,
+				dst, scanned, zone, mode);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rss_container *' should also have an identifier name
#150: FILE: include/linux/rss_container.h:28:
+unsigned long isolate_pages_in_container(unsigned long nr_to_scan,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/linux/rss_container.h:29:
+unsigned long isolate_pages_in_container(unsigned long nr_to_scan,
+		struct list_head *dst, unsigned long *scanned,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#161: FILE: include/linux/rss_container.h:71:
+#define isolate_container_pages(nr, dst, scanned, rss, act, zone) ({ BUG(); 0;})

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ';' (ctx:VxV)
#161: FILE: include/linux/rss_container.h:71:
+#define isolate_container_pages(nr, dst, scanned, rss, act, zone) ({ BUG(); 0;})
                                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424825.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 2 warnings, 6 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000424825.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
