WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#94: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: arch/x86/include/asm/uv/uv.h:1:
+#ifndef _ASM_X86_UV_UV_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: arch/x86/include/asm/uv/uv.h:8:
+extern enum uv_system_type get_uv_system_type(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: arch/x86/include/asm/uv/uv.h:9:
+extern int is_uv_system(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: arch/x86/include/asm/uv/uv.h:10:
+extern void uv_cpu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: arch/x86/include/asm/uv/uv.h:11:
+extern void uv_system_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: arch/x86/include/asm/uv/uv.h:12:
+extern int uv_wakeup_secondary(int phys_apicid, unsigned int start_rip);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: arch/x86/include/asm/uv/uv.h:13:
+extern const struct cpumask *uv_flush_tlb_others(const struct cpumask *cpumask,

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#322: FILE: arch/x86/kernel/tlb_uv.c:318:
+	WARN_ON(!in_atomic());

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000177692.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 6 checks, 255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000177692.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
