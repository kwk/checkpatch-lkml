CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#88: FILE: arch/x86/kernel/module.c:81:
+int apply_relocate(Elf32_Shdr *sechdrs,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Rel>
#95: FILE: arch/x86/kernel/module.c:88:
+	Elf32_Rel *rel = (void *)sechdrs[relsec].sh_addr;

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#96: FILE: arch/x86/kernel/module.c:89:
+	Elf32_Sym *sym;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#97: FILE: arch/x86/kernel/module.c:90:
+	uint32_t *location;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: arch/x86/kernel/module.c:99:
+		/* This is the symbol it is referring to.  Note that all
+		   undefined symbols have been resolved.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: arch/x86/kernel/module.c:99:
+		   undefined symbols have been resolved.  */

WARNING:TYPO_SPELLING: 'postition' may be misspelled - perhaps 'position'?
#116: FILE: arch/x86/kernel/module.c:109:
+			/* Add the value, subtract its postition */
 			                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#120: FILE: arch/x86/kernel/module.c:113:
+			printk(KERN_ERR "module %s: Unknown relocation: %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#134: FILE: arch/x86/kernel/module.c:127:
+	printk(KERN_ERR "module %s: ADD RELOCATION unsupported\n",

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Shdr>
#139: FILE: arch/x86/kernel/module.c:132:
+int apply_relocate_add(Elf64_Shdr *sechdrs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/x86/kernel/module.c:133:
+int apply_relocate_add(Elf64_Shdr *sechdrs,
+		   const char *strtab,

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Rela>
#146: FILE: arch/x86/kernel/module.c:139:
+	Elf64_Rela *rel = (void *)sechdrs[relsec].sh_addr;

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Sym>
#147: FILE: arch/x86/kernel/module.c:140:
+	Elf64_Sym *sym;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: arch/x86/kernel/module.c:152:
+		/* This is the symbol it is referring to.  Note that all
+		   undefined symbols have been resolved.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: arch/x86/kernel/module.c:152:
+		   undefined symbols have been resolved.  */

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#163: FILE: arch/x86/kernel/module.c:156:
+		DEBUGP("type %d st_value %Lx r_addend %Lx loc %Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: arch/x86/kernel/module.c:157:
+		DEBUGP("type %d st_value %Lx r_addend %Lx loc %Lx\n",
+			(int)ELF64_R_TYPE(rel[i].r_info),

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#188: FILE: arch/x86/kernel/module.c:181:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#194: FILE: arch/x86/kernel/module.c:187:
+			printk(KERN_ERR "module %s: Unknown rela relocation: %llu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#202: FILE: arch/x86/kernel/module.c:195:
+	printk(KERN_ERR "overflow in relocation type %d val %Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#202: FILE: arch/x86/kernel/module.c:195:
+	printk(KERN_ERR "overflow in relocation type %d val %Lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#204: FILE: arch/x86/kernel/module.c:197:
+	printk(KERN_ERR "`%s' likely not compiled with -mcmodel=kernel\n",

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#209: FILE: arch/x86/kernel/module.c:202:
+int apply_relocate(Elf_Shdr *sechdrs,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#215: FILE: arch/x86/kernel/module.c:208:
+	printk(KERN_ERR "non add relocation not supported\n");

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#216: FILE: arch/x86/kernel/module.c:209:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120542.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 10 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000120542.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
