WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
while preserving the current behaviour. It also kills off the COMPATIBLE_IOCTL

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#75: FILE: net/atm/ioctl.c:195:
+/*
+ * FIXME:

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#84: FILE: net/atm/ioctl.c:204:
+#define ATM_GETLINKRATE32 _IOW('a', ATMIOC_ITF+1, struct compat_atmif_sioc)
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: net/atm/ioctl.c:205:
+#define ATM_GETNAMES32    _IOW('a', ATMIOC_ITF+3, struct compat_atm_iobuf)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#86: FILE: net/atm/ioctl.c:206:
+#define ATM_GETTYPE32     _IOW('a', ATMIOC_ITF+4, struct compat_atmif_sioc)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#87: FILE: net/atm/ioctl.c:207:
+#define ATM_GETESI32	  _IOW('a', ATMIOC_ITF+5, struct compat_atmif_sioc)
                     	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#88: FILE: net/atm/ioctl.c:208:
+#define ATM_GETADDR32	  _IOW('a', ATMIOC_ITF+6, struct compat_atmif_sioc)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#89: FILE: net/atm/ioctl.c:209:
+#define ATM_RSTADDR32	  _IOW('a', ATMIOC_ITF+7, struct compat_atmif_sioc)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#90: FILE: net/atm/ioctl.c:210:
+#define ATM_ADDADDR32	  _IOW('a', ATMIOC_ITF+8, struct compat_atmif_sioc)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#91: FILE: net/atm/ioctl.c:211:
+#define ATM_DELADDR32	  _IOW('a', ATMIOC_ITF+9, struct compat_atmif_sioc)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#92: FILE: net/atm/ioctl.c:212:
+#define ATM_GETCIRANGE32  _IOW('a', ATMIOC_ITF+10, struct compat_atmif_sioc)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: net/atm/ioctl.c:213:
+#define ATM_SETCIRANGE32  _IOW('a', ATMIOC_ITF+11, struct compat_atmif_sioc)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#94: FILE: net/atm/ioctl.c:214:
+#define ATM_SETESI32      _IOW('a', ATMIOC_ITF+12, struct compat_atmif_sioc)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#95: FILE: net/atm/ioctl.c:215:
+#define ATM_SETESIF32     _IOW('a', ATMIOC_ITF+13, struct compat_atmif_sioc)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#96: FILE: net/atm/ioctl.c:216:
+#define ATM_GETSTAT32     _IOW('a', ATMIOC_SARCOM+0, struct compat_atmif_sioc)
                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#97: FILE: net/atm/ioctl.c:217:
+#define ATM_GETSTATZ32    _IOW('a', ATMIOC_SARCOM+1, struct compat_atmif_sioc)
                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#98: FILE: net/atm/ioctl.c:218:
+#define ATM_GETLOOP32	  _IOW('a', ATMIOC_SARCOM+2, struct compat_atmif_sioc)
                      	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#99: FILE: net/atm/ioctl.c:219:
+#define ATM_SETLOOP32	  _IOW('a', ATMIOC_SARCOM+3, struct compat_atmif_sioc)
                      	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#100: FILE: net/atm/ioctl.c:220:
+#define ATM_QUERYLOOP32	  _IOW('a', ATMIOC_SARCOM+4, struct compat_atmif_sioc)
                        	                         ^

CHECK:SPACING: No space is necessary after a cast
#147: FILE: net/atm/ioctl.c:267:
+	err = do_vcc_ioctl(sock, cmd, (unsigned long) iobuf, 0);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#171: FILE: net/atm/ioctl.c:291:
+	if (copy_in_user(&sioc->number, &sioc32->number, 2 * sizeof(int))
+	    || get_user(data, &sioc32->arg))

CHECK:SPACING: No space is necessary after a cast
#177: FILE: net/atm/ioctl.c:297:
+	err = do_vcc_ioctl(sock, cmd, (unsigned long) sioc, 0);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000049221.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 20 checks, 419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000049221.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
