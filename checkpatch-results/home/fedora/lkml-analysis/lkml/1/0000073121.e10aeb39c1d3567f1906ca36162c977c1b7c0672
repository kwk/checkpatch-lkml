WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#obj-y += audio_out.o audio_in.o audio_mp3.o audmgr.o audpp.o

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#obj-y += snd.o

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/staging/dream/generic_gpio.c:1:
+/* arch/arm/mach-msm/generic_gpio.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#82: FILE: drivers/staging/dream/generic_gpio.c:21:
+#include <asm/gpio.h>

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#85: FILE: drivers/staging/dream/generic_gpio.c:24:
+#define GPIO_NUM_TO_CHIP_INDEX(gpio) ((gpio)>>5)
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#105: FILE: drivers/staging/dream/generic_gpio.c:44:
+	new_gpio_chip->state = kzalloc((new_gpio_chip->end + 1 - new_gpio_chip->start) * sizeof(new_gpio_chip->state[0]), GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_gpio_chip->state"
#106: FILE: drivers/staging/dream/generic_gpio.c:45:
+	if (new_gpio_chip->state == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#107: FILE: drivers/staging/dream/generic_gpio.c:46:
+		printk(KERN_ERR "register_gpio_chip: failed to allocate state\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_gpio_chip', this function's name, in a string
#107: FILE: drivers/staging/dream/generic_gpio.c:46:
+		printk(KERN_ERR "register_gpio_chip: failed to allocate state\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#107: FILE: drivers/staging/dream/generic_gpio.c:46:
+	if (new_gpio_chip->state == NULL) {
+		printk(KERN_ERR "register_gpio_chip: failed to allocate state\n");

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#118: FILE: drivers/staging/dream/generic_gpio.c:57:
+		new_gpio_chip_array = kmalloc(new_gpio_chip_array_size * sizeof(new_gpio_chip_array[0]), GFP_ATOMIC);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#118: FILE: drivers/staging/dream/generic_gpio.c:57:
+		new_gpio_chip_array = kmalloc(new_gpio_chip_array_size * sizeof(new_gpio_chip_array[0]), GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_gpio_chip_array"
#119: FILE: drivers/staging/dream/generic_gpio.c:58:
+		if (new_gpio_chip_array == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#120: FILE: drivers/staging/dream/generic_gpio.c:59:
+			printk(KERN_ERR "register_gpio_chip: failed to allocate array\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_gpio_chip', this function's name, in a string
#120: FILE: drivers/staging/dream/generic_gpio.c:59:
+			printk(KERN_ERR "register_gpio_chip: failed to allocate array\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#120: FILE: drivers/staging/dream/generic_gpio.c:59:
+		if (new_gpio_chip_array == NULL) {
+			printk(KERN_ERR "register_gpio_chip: failed to allocate array\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#137: FILE: drivers/staging/dream/generic_gpio.c:76:
+			printk(KERN_ERR "register_gpio_source %u-%u overlaps with %u-%u\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gpio_chip_array[i]"
#147: FILE: drivers/staging/dream/generic_gpio.c:86:
+		if (gpio_chip_array[i] == NULL || gpio_chip_array[i]->start > new_gpio_chip->start)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#166: FILE: drivers/staging/dream/generic_gpio.c:105:
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#186: FILE: drivers/staging/dream/generic_gpio.c:125:
+	if (chip == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#191: FILE: drivers/staging/dream/generic_gpio.c:130:
+	if (chip->state[chip_index].refcount == 0) {
[...]
+	} else if ((flags & IRQF_SHARED) && (chip->state[chip_index].flags & IRQF_SHARED))
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: drivers/staging/dream/generic_gpio.c:143:
+int gpio_request(unsigned gpio, const char *label)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#210: FILE: drivers/staging/dream/generic_gpio.c:149:
+void gpio_free(unsigned gpio)

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#228: FILE: drivers/staging/dream/generic_gpio.c:167:
+	int ret = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#240: FILE: drivers/staging/dream/generic_gpio.c:179:
+int gpio_to_irq(unsigned gpio)

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: drivers/staging/dream/generic_gpio.c:182:
+	int ret, irq;
+	ret = gpio_get_irq_num(gpio, &irq, NULL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#252: FILE: drivers/staging/dream/generic_gpio.c:191:
+	int ret = -ENOTSUPP;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#265: FILE: drivers/staging/dream/generic_gpio.c:204:
+int gpio_direction_input(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#271: FILE: drivers/staging/dream/generic_gpio.c:210:
+int gpio_direction_output(unsigned gpio, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: drivers/staging/dream/generic_gpio.c:217:
+int gpio_get_value(unsigned gpio)

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#280: FILE: drivers/staging/dream/generic_gpio.c:219:
+	int ret = -ENOTSUPP;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#293: FILE: drivers/staging/dream/generic_gpio.c:232:
+void gpio_set_value(unsigned gpio, int on)

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#295: FILE: drivers/staging/dream/generic_gpio.c:234:
+	int ret = -ENOTSUPP;

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#309: FILE: drivers/staging/dream/generic_gpio.c:248:
+	int ret = -ENOTSUPP;

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#324: FILE: drivers/staging/dream/generic_gpio.c:263:
+	int ret = -ENOTSUPP;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#342: FILE: drivers/staging/dream/gpio_chip.h:1:
+/* arch/arm/mach-msm/gpio_chip.h

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#370: FILE: drivers/staging/dream/gpio_chip.h:29:
+	int (*get_irq_num)(struct gpio_chip *chip, unsigned int gpio, unsigned int *irqp, unsigned long *irqnumflagsp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#372: FILE: drivers/staging/dream/gpio_chip.h:31:
+	int (*write)(struct gpio_chip *chip, unsigned int gpio, unsigned on);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#386: FILE: drivers/staging/dream/gpio_hw.h:1:
+/* arch/arm/mach-msm/gpio_hw.h

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#408: FILE: drivers/staging/dream/gpio_hw.h:23:
+/* see 80-VA736-2 Rev C pp 695-751
+**

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'interrup' may be misspelled - perhaps 'interrupt'?
#445: FILE: drivers/staging/dream/gpio_hw.h:60:
+/* same pin map as above, 1=edge 0=level interrup */
                                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073121.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 35 warnings, 7 checks, 417 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073121.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
